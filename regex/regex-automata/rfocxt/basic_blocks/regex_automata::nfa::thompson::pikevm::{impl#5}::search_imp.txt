[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_2),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1230:28: 1230:39 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::len(move _8) -> [return: bb1, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1230:9: 1230:40 (#0),
                    scope: scope[0],
                },
                kind: _5 = nfa::thompson::pikevm::Cache::setup_search(move _6, move _7) -> [return: bb2, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1231:12: 1231:27 (#0),
                    scope: scope[0],
                },
                kind: _10 = util::search::Input::<'_>::is_done(move _11) -> [return: bb3, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1231:12: 1231:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _10) -> [0: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            _0 = core::option::Option::<util::search::HalfMatch>::None,
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            _9 = const (),
            StorageDead(_10),
            StorageDead(_9),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:29 (#0),
                    scope: scope[0],
                },
                kind: _17 = util::search::Input::<'_>::haystack(move _18) -> [return: bb6, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &(*_17),
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:35 (#0),
                    scope: scope[0],
                },
                kind: _15 = core::slice::<impl [u8]>::len(move _16) -> [return: bb7, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            _14 = Lt(move _15, const core::usize::MAX),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:54 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _14) -> [0: bb9, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_17),
            _13 = const (),
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &((*_1).0: nfa::thompson::pikevm::Config),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:41 (#0),
                    scope: scope[0],
                },
                kind: _27 = nfa::thompson::pikevm::Config::get_match_kind(move _28) -> [return: bb11, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageDead(_17),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = [const "byte slice lengths must be less than usize MAX"],
            _23 = &_24,
            _22 = &(*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38: 108:72 (#1409),
                    scope: scope[0],
                },
                kind: _21 = core::fmt::Arguments::<'_>::new_const::<1>(move _22) -> [return: bb10, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9: 108:73 (#1408),
                    scope: scope[0],
                },
                kind: _20 = core::panicking::panic_fmt(move _21) -> bb86,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _26 = &_27,
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:69 (#0),
                    scope: scope[0],
                },
                kind: _25 = util::search::MatchKind::continue_past_first_match(move _26) -> [return: bb12, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
            StorageDead(_27),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &(*_1),
            StorageLive(_34),
            _34 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1250:42: 1250:66 (#0),
                    scope: scope[1],
                },
                kind: _32 = nfa::thompson::pikevm::PikeVM::start_config(move _33, move _34) -> [return: bb13, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
            PlaceMention(_32),
            _35 = discriminant(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1250:36: 1250:66 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _35) -> [0: bb15, 1: bb16, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1250:42: 1250:66 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1251:13: 1251:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb17, imaginary: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_37),
            _37 = ((_32 as Some).0: (bool, util::primitives::StateID)),
            _31 = _37,
            StorageDead(_37),
            PlaceMention(_31),
            StorageLive(_29),
            _29 = (_31.0: bool),
            StorageLive(_30),
            _30 = (_31.1: util::primitives::StateID),
            StorageDead(_32),
            StorageDead(_31),
            StorageLive(_38),
            StorageLive(_39),
            _39 = _29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:16: 1256:24 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _39) -> [0: bb19, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<util::search::HalfMatch>::None,
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _38 = core::option::Option::<&util::prefilter::Prefilter>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:13: 1256:76 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:58 (#0),
                    scope: scope[2],
                },
                kind: _41 = nfa::thompson::pikevm::PikeVM::get_config(move _42) -> [return: bb20, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _40 = &(*_41),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:74 (#0),
                    scope: scope[2],
                },
                kind: _38 = nfa::thompson::pikevm::Config::get_prefilter(move _40) -> [return: bb21, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:13: 1256:76 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb22,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            FakeRead(ForLet(None), _38),
            PlaceMention(_2),
            StorageLive(_43),
            _43 = &mut ((*_2).0: std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon>),
            StorageLive(_44),
            _44 = &mut ((*_2).1: nfa::thompson::pikevm::ActiveStates),
            StorageLive(_45),
            _45 = &mut ((*_2).2: nfa::thompson::pikevm::ActiveStates),
            StorageLive(_46),
            _46 = core::option::Option::<util::search::HalfMatch>::None,
            FakeRead(ForLet(None), _46),
            StorageLive(_47),
            StorageLive(_48),
            _48 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1270:22: 1270:35 (#0),
                    scope: scope[6],
                },
                kind: _47 = util::search::Input::<'_>::start(move _48) -> [return: bb23, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
            FakeRead(ForLet(None), _47),
            StorageLive(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#0),
                    scope: scope[7],
                },
                kind: falseUnwind -> [real: bb25, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_51),
            StorageLive(_52),
            _52 = _47,
            StorageLive(_53),
            StorageLive(_54),
            _54 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:21: 1271:32 (#0),
                    scope: scope[7],
                },
                kind: _53 = util::search::Input::<'_>::end(move _54) -> [return: bb26, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            _51 = Le(move _52, move _53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:15: 1271:32 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _51) -> [0: bb82, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_52),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            _57 = &((*_44).0: util::sparse_set::SparseSet),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1274:16: 1274:35 (#0),
                    scope: scope[7],
                },
                kind: _56 = util::sparse_set::SparseSet::is_empty(move _57) -> [return: bb28, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1274:16: 1274:35 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _56) -> [0: bb51, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &_46,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1277:20: 1277:32 (#0),
                    scope: scope[7],
                },
                kind: _59 = core::option::Option::<util::search::HalfMatch>::is_some(move _60) -> [return: bb30, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1277:20: 1277:32 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _59) -> [0: bb33, otherwise: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageLive(_61),
            _61 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1277:37: 1277:47 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _61) -> [0: bb32, otherwise: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _49 = const (),
            StorageDead(_61),
            StorageDead(_59),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb34,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _58 = const (),
            StorageDead(_61),
            StorageDead(_59),
            StorageDead(_58),
            StorageLive(_63),
            StorageLive(_64),
            _64 = _29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1283:20: 1283:28 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _64) -> [0: bb39, otherwise: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_65),
            StorageLive(_66),
            _66 = _47,
            StorageLive(_67),
            StorageLive(_68),
            _68 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1283:37: 1283:50 (#0),
                    scope: scope[7],
                },
                kind: _67 = util::search::Input::<'_>::start(move _68) -> [return: bb36, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            _65 = Gt(move _66, move _67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1283:32: 1283:50 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _65) -> [0: bb38, otherwise: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_66),
            _49 = const (),
            StorageDead(_65),
            StorageDead(_64),
            StorageDead(_63),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _63 = const (),
            StorageDead(_65),
            StorageDead(_64),
            StorageDead(_63),
            PlaceMention(_38),
            _70 = discriminant(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1293:24: 1293:37 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _70) -> [1: bb41, otherwise: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _55 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1293:17: 1299:18 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb52,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1293:24: 1293:37 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb42, imaginary: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_71),
            _71 = &((_38 as Some).0: &util::prefilter::Prefilter),
            StorageLive(_72),
            StorageLive(_73),
            StorageLive(_74),
            _74 = _47,
            StorageLive(_75),
            StorageLive(_76),
            _76 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1294:47: 1294:58 (#0),
                    scope: scope[8],
                },
                kind: _75 = util::search::Input::<'_>::end(move _76) -> [return: bb43, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            _73 = core::ops::Range::<usize> { start: move _74, end: move _75 },
            StorageDead(_75),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1294:32: 1294:59 (#0),
                    scope: scope[8],
                },
                kind: _72 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _73) -> [return: bb44, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            FakeRead(ForLet(None), _72),
            StorageLive(_77),
            StorageLive(_78),
            _78 = &(*(*_71)),
            StorageLive(_79),
            StorageLive(_80),
            StorageLive(_81),
            _81 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:36: 1295:52 (#0),
                    scope: scope[9],
                },
                kind: _80 = util::search::Input::<'_>::haystack(move _81) -> [return: bb45, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _79 = &(*_80),
            StorageDead(_81),
            StorageLive(_82),
            _82 = _72,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:27: 1295:59 (#0),
                    scope: scope[9],
                },
                kind: _77 = util::prefilter::Prefilter::find(move _78, move _79, move _82) -> [return: bb46, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
            StorageDead(_79),
            StorageDead(_78),
            PlaceMention(_77),
            _83 = discriminant(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1295:59 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _83) -> [0: bb48, 1: bb49, otherwise: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:27: 1295:59 (#0),
                    scope: scope[9],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1296:25: 1296:29 (#0),
                    scope: scope[9],
                },
                kind: falseEdge -> [real: bb50, imaginary: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_85),
            _85 = &((_77 as Some).0: util::search::Span),
            StorageLive(_86),
            _86 = ((*_85).0: usize),
            _47 = move _86,
            _55 = const (),
            StorageDead(_86),
            StorageDead(_85),
            StorageDead(_72),
            StorageDead(_80),
            StorageDead(_77),
            StorageDead(_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1293:17: 1299:18 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb52,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _49 = const (),
            StorageDead(_72),
            StorageDead(_80),
            StorageDead(_77),
            StorageDead(_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            _55 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1274:13: 1300:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb52,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageLive(_87),
            StorageLive(_88),
            StorageLive(_89),
            _89 = &_46,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1347:18: 1347:30 (#0),
                    scope: scope[7],
                },
                kind: _88 = core::option::Option::<util::search::HalfMatch>::is_some(move _89) -> [return: bb53, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1347:18: 1347:30 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _88) -> [0: bb55, otherwise: bb54],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageLive(_90),
            _90 = _25,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1347:34: 1347:44 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _90) -> [0: bb64, otherwise: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1349:13: 1365:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb56,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_91),
            _91 = _29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1348:22: 1348:30 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _91) -> [0: bb60, otherwise: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_92),
            StorageLive(_93),
            _93 = _47,
            StorageLive(_94),
            StorageLive(_95),
            _95 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1348:40: 1348:53 (#0),
                    scope: scope[7],
                },
                kind: _94 = util::search::Input::<'_>::start(move _95) -> [return: bb58, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            _92 = Eq(move _93, move _94),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1348:34: 1348:53 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _92) -> [0: bb63, otherwise: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1349:13: 1365:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb60,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_96),
            StorageLive(_97),
            _97 = &mut ((*_45).1: nfa::thompson::pikevm::SlotTable),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1363:29: 1363:57 (#0),
                    scope: scope[7],
                },
                kind: _96 = nfa::thompson::pikevm::SlotTable::all_absent(move _97) -> [return: bb61, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_97),
            FakeRead(ForLet(None), _96),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &(*_1),
            StorageLive(_100),
            _100 = &mut (*_43),
            StorageLive(_101),
            _101 = &mut (*_96),
            StorageLive(_102),
            _102 = &mut (*_44),
            StorageLive(_103),
            _103 = &(*_3),
            StorageLive(_104),
            _104 = _47,
            StorageLive(_105),
            _105 = _30,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1364:17: 1364:78 (#0),
                    scope: scope[11],
                },
                kind: _98 = nfa::thompson::pikevm::PikeVM::epsilon_closure(move _99, move _100, move _101, move _102, move _103, move _104, move _105) -> [return: bb62, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_104),
            StorageDead(_103),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            StorageDead(_99),
            StorageDead(_98),
            _87 = const (),
            StorageDead(_96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1347:13: 1365:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb65,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb64,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _87 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1347:13: 1365:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb65,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_90),
            StorageDead(_88),
            StorageDead(_87),
            StorageLive(_106),
            StorageLive(_107),
            StorageLive(_108),
            _108 = &(*_1),
            StorageLive(_109),
            _109 = &mut (*_43),
            StorageLive(_110),
            _110 = &mut (*_44),
            StorageLive(_111),
            _111 = &mut (*_45),
            StorageLive(_112),
            _112 = &(*_3),
            StorageLive(_113),
            _113 = _47,
            StorageLive(_114),
            _114 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1366:32: 1366:79 (#0),
                    scope: scope[12],
                },
                kind: _107 = nfa::thompson::pikevm::PikeVM::nexts(move _108, move _109, move _110, move _111, move _112, move _113, move _114) -> [return: bb66, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
            StorageDead(_113),
            StorageDead(_112),
            StorageDead(_111),
            StorageDead(_110),
            StorageDead(_109),
            StorageDead(_108),
            PlaceMention(_107),
            _115 = discriminant(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1366:20: 1366:29 (#0),
                    scope: scope[12],
                },
                kind: switchInt(move _115) -> [1: bb67, otherwise: bb70],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1366:20: 1366:29 (#0),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb68, imaginary: bb70],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_116),
            _116 = ((_107 as Some).0: util::primitives::PatternID),
            StorageLive(_117),
            StorageLive(_118),
            StorageLive(_119),
            _119 = _116,
            StorageLive(_120),
            _120 = _47,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1368:27: 1368:50 (#0),
                    scope: scope[12],
                },
                kind: _118 = util::search::HalfMatch::new(move _119, move _120) -> [return: bb69, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_120),
            StorageDead(_119),
            _117 = core::option::Option::<util::search::HalfMatch>::Some(move _118),
            StorageDead(_118),
            _46 = move _117,
            StorageDead(_117),
            _106 = const (),
            StorageDead(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1366:13: 1369:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _106 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1366:13: 1369:14 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb71,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
            StorageDead(_106),
            StorageLive(_121),
            StorageLive(_122),
            StorageLive(_123),
            _123 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1374:16: 1374:36 (#0),
                    scope: scope[7],
                },
                kind: _122 = util::search::Input::<'_>::get_earliest(move _123) -> [return: bb72, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1374:16: 1374:36 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _122) -> [0: bb77, otherwise: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
            StorageLive(_124),
            StorageLive(_125),
            _125 = &_46,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1374:40: 1374:52 (#0),
                    scope: scope[7],
                },
                kind: _124 = core::option::Option::<util::search::HalfMatch>::is_some(move _125) -> [return: bb74, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1374:40: 1374:52 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _124) -> [0: bb76, otherwise: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
            _49 = const (),
            StorageDead(_124),
            StorageDead(_122),
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _121 = const (),
            StorageDead(_124),
            StorageDead(_122),
            StorageDead(_121),
            StorageLive(_127),
            StorageLive(_128),
            _128 = &mut (*_44),
            StorageLive(_129),
            _129 = &mut (*_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1377:13: 1377:40 (#0),
                    scope: scope[7],
                },
                kind: _127 = core::mem::swap::<nfa::thompson::pikevm::ActiveStates>(move _128, move _129) -> [return: bb79, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_128),
            StorageDead(_127),
            StorageLive(_130),
            StorageLive(_131),
            _131 = &mut ((*_45).0: util::sparse_set::SparseSet),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1378:13: 1378:29 (#0),
                    scope: scope[7],
                },
                kind: _130 = util::sparse_set::SparseSet::clear(move _131) -> [return: bb80, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_131),
            StorageDead(_130),
            _132 = AddWithOverflow(_47, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1379:13: 1379:20 (#0),
                    scope: scope[7],
                },
                kind: assert(!move (_132.1: bool), "attempt to compute `{} + {}`, which would overflow", _47, const 1_usize) -> [success: bb81, unwind: bb86],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _47 = move (_132.0: usize),
            _50 = const (),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#0),
                    scope: scope[7],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
            StorageDead(_52),
            StorageLive(_134),
            _49 = const (),
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            StorageDead(_49),
            _0 = _46,
            StorageDead(_47),
            StorageDead(_46),
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_38),
            StorageDead(_30),
            StorageDead(_29),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1383:6: 1383:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb85,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1383:6: 1383:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1224:5: 1383:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1229:10: 1229:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1225:9: 1225:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/pikevm.rs:1226:16: 1226:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1226:9: 1226:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1226:9: 1226:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1226:9: 1226:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/pikevm.rs:1227:16: 1227:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1227:9: 1227:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1227:9: 1227:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1227:9: 1227:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/pikevm.rs:1228:16: 1228:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1228:9: 1228:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1228:9: 1228:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1228:9: 1228:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1230:9: 1230:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1230:9: 1230:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1230:28: 1230:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1230:28: 1230:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1231:9: 1233:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1231:12: 1231:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1231:12: 1231:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1231:28: 1233:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1240:9: 1243:10 (#1406),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1241:13: 1241:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:105:21: 109:6 (#1408),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:105:21: 109:6 (#1408),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9: 108:73 (#1408),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38: 108:72 (#1409),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1242:13: 1242:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1242:13: 1242:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1242:13: 1242:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:69 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1248:13: 1248:23 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1248:13: 1248:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::pikevm::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1249:13: 1249:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _31,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1250:36: 1253:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1250:13: 1250:33 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:14: 1250:22 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _31,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1250:36: 1253:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1250:13: 1250:33 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:24: 1250:32 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (bool, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:36: 1253:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(bool, util::primitives::StateID)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:42: 1250:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:42: 1250:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1250:60: 1250:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1251:13: 1251:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1251:21: 1251:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _32,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1250:42: 1250:66 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1252:13: 1252:25 (#0),
                    },
                ),
            ),
        ),
        ty: (bool, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1252:18: 1252:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1256:13: 1256:76 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1255:13: 1255:16 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<&'{erased} util::prefilter::Prefilter>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1255:13: 1255:16 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1256:16: 1256:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:74 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::pikevm::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:74 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::pikevm::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:74 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1256:41: 1256:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1257:67: 1257:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1257:13: 1257:64 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1257:21: 1257:34 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1257:67: 1257:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1257:13: 1257:64 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1257:36: 1257:48 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Mut,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1257:67: 1257:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1257:13: 1257:64 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1257:50: 1257:62 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1258:22: 1258:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1258:13: 1258:19 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1258:13: 1258:19 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1270:22: 1270:35 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1270:13: 1270:19 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1270:13: 1270:19 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1270:22: 1270:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1224:5: 1383:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:15: 1271:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:15: 1271:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:21: 1271:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:21: 1271:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1274:13: 1300:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1274:16: 1274:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1274:16: 1274:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1277:17: 1279:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1277:20: 1277:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1277:20: 1277:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1277:37: 1277:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1277:48: 1279:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:17: 1285:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:20: 1283:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:32: 1283:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:32: 1283:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:37: 1283:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:37: 1283:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1283:51: 1285:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1293:24: 1293:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1293:40: 1293:43 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1293:24: 1293:37 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} &'{erased} util::prefilter::Prefilter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1293:29: 1293:36 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1294:32: 1294:59 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1294:25: 1294:29 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1294:25: 1294:29 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1294:43: 1294:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1294:43: 1294:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1294:47: 1294:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1294:47: 1294:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:27: 1295:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::prefilter::Prefilter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:27: 1295:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:36: 1295:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:36: 1295:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:36: 1295:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1295:54: 1295:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1296:25: 1296:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1296:33: 1296:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _77,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1295:27: 1295:59 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1297:25: 1297:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1297:30: 1297:38 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1295:21: 1298:22 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1297:48: 1297:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1347:13: 1365:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1347:18: 1347:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1347:18: 1347:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1347:34: 1347:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1348:22: 1348:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1348:34: 1348:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1348:34: 1348:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1348:40: 1348:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1348:40: 1348:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/pikevm.rs:1363:29: 1363:57 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1363:21: 1363:26 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1363:21: 1363:26 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::SlotTable,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1363:29: 1363:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:17: 1364:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:17: 1364:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:38: 1364:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:45: 1364:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:52: 1364:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:58: 1364:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:65: 1364:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1364:69: 1364:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:13: 1369:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:32: 1366:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:32: 1366:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::pikevm::FollowEpsilon, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:43: 1366:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:50: 1366:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:56: 1366:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:62: 1366:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:69: 1366:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:73: 1366:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:20: 1366:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _107,
                                ),
                                regex-automata/src/nfa/thompson/pikevm.rs:1366:32: 1366:79 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/pikevm.rs:1366:20: 1366:29 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1366:25: 1366:28 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1368:22: 1368:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1368:27: 1368:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1368:42: 1368:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1368:47: 1368:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:13: 1376:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:16: 1374:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:16: 1374:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:40: 1374:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:40: 1374:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1374:53: 1376:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1377:13: 1377:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1377:29: 1377:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1377:35: 1377:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1378:13: 1378:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1378:13: 1378:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1379:13: 1379:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:1271:9: 1380:10 (#4479),
            scope: scope[0],
        },
    },
]