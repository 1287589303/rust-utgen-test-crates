[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = _1,
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _2,
            _7 = [move _8],
            StorageDead(_8),
            _6 = &_7,
            _5 = &(*_6),
            _4 = move _5 as &[&regex_syntax::hir::Hir] (PointerCoercion(Unsize)),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                    scope: scope[0],
                },
                kind: _0 = util::prefilter::Prefilter::from_hirs_prefix::<&regex_syntax::hir::Hir>(move _3, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:270:6: 270:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/mod.rs:268:5: 270:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::prefilter::Prefilter>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:268:59: 268:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/mod.rs:268:34: 268:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/mod.rs:268:28: 268:32 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/mod.rs:268:28: 268:32 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:268:28: 268:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/mod.rs:268:50: 268:54 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/mod.rs:268:45: 268:48 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/mod.rs:268:45: 268:48 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} regex_syntax::hir::Hir,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:268:45: 268:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: util::search::MatchKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:37: 269:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} regex_syntax::hir::Hir],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:43: 269:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} regex_syntax::hir::Hir; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:43: 269:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} regex_syntax::hir::Hir; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:43: 269:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: [&'{erased} regex_syntax::hir::Hir; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:44: 269:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/mod.rs:269:9: 269:50 (#0),
                },
            ),
        ),
        ty: &'{erased} regex_syntax::hir::Hir,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/mod.rs:269:45: 269:48 (#0),
            scope: scope[0],
        },
    },
]