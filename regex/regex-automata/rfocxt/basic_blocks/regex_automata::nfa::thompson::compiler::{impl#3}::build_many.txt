[
    BasicBlockData {
        statements: [
            StorageLive(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1221),
                    scope: scope[0],
                },
                kind: _3 = std::vec::Vec::<regex_syntax::hir::Hir>::new() -> [return: bb1, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                    scope: scope[1],
                },
                kind: _5 = <&[P] as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb2, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            StorageLive(_7),
            _7 = move _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
                    scope: scope[2],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
                    scope: scope[2],
                },
                kind: falseUnwind -> [real: bb4, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut _7,
            _11 = &mut (*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                    scope: scope[2],
                },
                kind: _10 = <core::slice::Iter<'_, P> as core::iter::Iterator>::next(move _11) -> [return: bb5, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            PlaceMention(_10),
            _13 = discriminant(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                    scope: scope[2],
                },
                kind: switchInt(move _13) -> [0: bb7, 1: bb8, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = ((_10 as Some).0: &P),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &mut _3,
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &((*_1).0: regex_syntax::ParserBuilder),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 793:29 (#0),
                    scope: scope[3],
                },
                kind: _23 = regex_syntax::ParserBuilder::build(move _24) -> [return: bb10, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = const (),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_7),
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_33),
            _33 = &(*_1),
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            _37 = &_3,
            _36 = &(*_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:34: 799:39 (#0),
                    scope: scope[1],
                },
                kind: _35 = <std::vec::Vec<regex_syntax::hir::Hir> as core::ops::Deref>::deref(move _36) -> [return: bb24, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _22 = &mut _23,
            StorageDead(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = &(*_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:794:28: 794:38 (#0),
                    scope: scope[3],
                },
                kind: _26 = <P as core::convert::AsRef<str>>::as_ref(move _27) -> [return: bb11, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _25 = &(*_26),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 794:39 (#0),
                    scope: scope[3],
                },
                kind: _21 = regex_syntax::Parser::parse(move _22, move _25) -> [return: bb12, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:49 (#0),
                    scope: scope[3],
                },
                kind: _20 = core::result::Result::<regex_syntax::hir::Hir, regex_syntax::Error>::map_err::<nfa::thompson::error::BuildError, fn(regex_syntax::Error) -> nfa::thompson::error::BuildError {nfa::thompson::error::BuildError::syntax}>(move _21, nfa::thompson::error::BuildError::syntax) -> [return: bb13, unwind: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                    scope: scope[3],
                },
                kind: _19 = <core::result::Result<regex_syntax::hir::Hir, nfa::thompson::error::BuildError> as core::ops::Try>::branch(move _20) -> [return: bb14, unwind: bb36],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            PlaceMention(_19),
            _28 = discriminant(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                    scope: scope[3],
                },
                kind: switchInt(move _28) -> [0: bb17, 1: bb16, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb18, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_32),
            _32 = move ((_19 as Continue).0: regex_syntax::hir::Hir),
            _18 = move _32,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#0),
                    scope: scope[3],
                },
                kind: drop(_32) -> [return: bb20, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            _29 = move ((_19 as Break).0: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>),
            StorageLive(_31),
            _31 = move _29,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                    scope: scope[5],
                },
                kind: _0 = <core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>>>::from_residual(move _31) -> [return: bb19, unwind: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
                    scope: scope[3],
                },
                kind: drop(_29) -> [return: bb27, unwind: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:791:13: 796:14 (#0),
                    scope: scope[3],
                },
                kind: _16 = std::vec::Vec::<regex_syntax::hir::Hir>::push(move _17, move _18) -> [return: bb21, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_19) -> [return: bb22, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_23) -> [return: bb23, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_19),
            StorageDead(_16),
            _9 = const (),
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            _8 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
                    scope: scope[2],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _34 = &(*_35),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                    scope: scope[1],
                },
                kind: _0 = nfa::thompson::compiler::Compiler::build_many_from_hir::<regex_syntax::hir::Hir>(move _33, move _34) -> [return: bb25, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:5: 800:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb26, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_37),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:6: 800:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_19) -> [return: bb28, unwind: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_23) -> [return: bb29, unwind: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_19),
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_7),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:5: 800:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb30, unwind: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:6: 800:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb31,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:6: 800:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:13: 796:14 (#0),
                    scope: scope[3],
                },
                kind: drop(_18) -> [return: bb35, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4069),
                    scope: scope[5],
                },
                kind: drop(_31) -> [return: bb34, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
                    scope: scope[3],
                },
                kind: drop(_29) -> [return: bb35, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_19) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4069),
                    scope: scope[3],
                },
                kind: drop(_20) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:795:48: 795:49 (#0),
                    scope: scope[3],
                },
                kind: drop(_21) -> [return: bb38, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:796:14: 796:15 (#0),
                    scope: scope[3],
                },
                kind: drop(_23) -> [return: bb39, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:800:5: 800:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb40, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/compiler.rs:785:5: 800:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<nfa::thompson::nfa::NFA, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:788:10: 788:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:786:9: 786:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/compiler.rs:787:19: 787:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/compiler.rs:787:9: 787:17 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:787:9: 787:17 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [P/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:787:9: 787:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9: 44:32 (#1221),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:789:13: 789:21 (#0),
                    },
                ),
            ),
        ),
        ty: std::vec::Vec<regex_syntax::hir::Hir, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:789:13: 789:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, P/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [P/#0],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, P/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:785:5: 800:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} P/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, P/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, P/#0>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:9: 798:10 (#4066),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _10,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:790:18: 790:26 (#4067),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:790:13: 790:14 (#4068),
                    },
                ),
            ),
        ),
        ty: &'{erased} P/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:790:13: 790:14 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:791:13: 796:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<regex_syntax::hir::Hir, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:791:13: 791:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::hir::Hir,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>, regex_syntax::hir::Hir>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<regex_syntax::hir::Hir, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<regex_syntax::hir::Hir, regex_syntax::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 794:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut regex_syntax::Parser,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 793:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: regex_syntax::Parser,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 793:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} regex_syntax::ParserBuilder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 792:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:794:28: 794:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:794:28: 794:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} P/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:794:28: 794:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _19,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:795:49: 795:50 (#4070),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _19,
                                ),
                                regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#4069),
                    },
                ),
            ),
        ),
        ty: regex_syntax::hir::Hir,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:792:17: 795:50 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                },
            ),
        ),
        ty: &'{erased} [regex_syntax::hir::Hir],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:799:34: 799:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                },
            ),
        ),
        ty: &'{erased} [regex_syntax::hir::Hir],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:799:34: 799:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<regex_syntax::hir::Hir, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:799:34: 799:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/compiler.rs:799:9: 799:40 (#0),
                },
            ),
        ),
        ty: &'{erased} std::vec::Vec<regex_syntax::hir::Hir, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/compiler.rs:799:34: 799:39 (#0),
            scope: scope[0],
        },
    },
]