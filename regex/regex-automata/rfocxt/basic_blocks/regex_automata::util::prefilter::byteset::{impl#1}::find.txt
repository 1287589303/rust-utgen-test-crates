[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_2),
            StorageLive(_10),
            _10 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:35:17: 35:23 (#0),
                    scope: scope[0],
                },
                kind: _8 = <[u8] as core::ops::Index<util::search::Span>>::index(move _9, move _10) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:30 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::slice::<impl [u8]>::iter(move _7) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &mut _6,
            StorageDead(_7),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_1),
            _11 = {closure@regex-automata/src/util/prefilter/byteset.rs:35:40: 35:44} { self: move _12 },
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:68 (#0),
                    scope: scope[0],
                },
                kind: _4 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::position::<{closure@regex-automata/src/util/prefilter/byteset.rs:35:40: 35:44}>(move _5, move _11) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_5),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &(_3.0: usize),
            _13 = {closure@regex-automata/src/util/prefilter/byteset.rs:35:73: 35:76} { span: move _14 },
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::option::Option::<usize>::map::<util::search::Span, {closure@regex-automata/src/util/prefilter/byteset.rs:35:73: 35:76}>(move _4, move _13) -> [return: bb4, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_4),
            StorageDead(_8),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:40:6: 40:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/prefilter/byteset.rs:34:5: 40:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:34:52: 34:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::prefilter::byteset::ByteSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:34:13: 34:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/byteset.rs:34:30: 34:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/byteset.rs:34:20: 34:28 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/byteset.rs:34:20: 34:28 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:34:20: 34:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/prefilter/byteset.rs:34:43: 34:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/prefilter/byteset.rs:34:37: 34:41 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/prefilter/byteset.rs:34:37: 34:41 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:34:37: 34:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:17: 35:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:9: 35:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:18: 35:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:3720 ~ regex_automata[00dd]::util::prefilter::byteset::{impl#1}::find::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn((&'{erased} u8,)) -> bool, bound_vars: [] },
                (&'{erased} util::prefilter::byteset::ByteSet,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:40: 35:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} util::prefilter::byteset::ByteSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:40: 35:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:3721 ~ regex_automata[00dd]::util::prefilter::byteset::{impl#1}::find::{closure#1}),
            [
                i32,
                Binder { value: extern "RustCall" fn((usize,)) -> util::search::Span, bound_vars: [] },
                (&'{erased} usize,),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:73: 39:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/prefilter/byteset.rs:35:9: 39:11 (#0),
                },
            ),
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/prefilter/byteset.rs:35:73: 39:10 (#0),
            scope: scope[0],
        },
    },
]