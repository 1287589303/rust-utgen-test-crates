[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:249:21: 249:38 (#0),
                    scope: scope[0],
                },
                kind: _1 = <nfa::thompson::pikevm::Config as core::default::Default>::default() -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:251:23: 251:48 (#0),
                    scope: scope[0],
                },
                kind: _2 = nfa::thompson::compiler::Compiler::new() -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = nfa::thompson::pikevm::Builder { config: move _1, thompson: move _2 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:252:9: 252:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:252:9: 252:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:253:6: 253:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:252:9: 252:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/pikevm.rs:247:5: 253:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::pikevm::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:247:21: 247:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::pikevm::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:249:21: 249:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::compiler::Compiler,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/pikevm.rs:251:23: 251:48 (#0),
            scope: scope[0],
        },
    },
]