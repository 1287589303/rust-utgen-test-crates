[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:611:14: 611:30 (#0),
                    scope: scope[0],
                },
                kind: _5 = util::search::Input::<'_>::get_span(move _6) -> [return: bb1, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = (_5.0: usize),
            _8 = Gt(move _9, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:612:8: 612:20 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _8) -> [0: bb19, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &(*_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:613:20: 613:36 (#0),
                    scope: scope[1],
                },
                kind: _11 = util::search::Input::<'_>::haystack(move _12) -> [return: bb3, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = (_5.0: usize),
            _15 = SubWithOverflow(_14, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:613:37: 613:49 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_15.1: bool), "attempt to compute `{} - {}`, which would overflow", move _14, const 1_usize) -> [success: bb4, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = move (_15.0: usize),
            StorageDead(_14),
            _16 = Len((*_11)),
            _17 = Lt(_13, _16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:613:20: 613:50 (#0),
                    scope: scope[1],
                },
                kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _13) -> [success: bb5, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _10 = (*_11)[_13],
            FakeRead(ForLet(None), _10),
            StorageDead(_13),
            StorageDead(_11),
            StorageLive(_18),
            StorageLive(_19),
            _19 = &(*_1),
            StorageLive(_20),
            _20 = (*_3),
            StorageLive(_21),
            _21 = _10,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:614:16: 614:42 (#0),
                    scope: scope[2],
                },
                kind: _18 = <A as dfa::automaton::Automaton>::next_state(move _19, move _20, move _21) -> [return: bb6, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            (*_3) = move _18,
            StorageDead(_18),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &(*_1),
            StorageLive(_24),
            _24 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:615:12: 615:36 (#0),
                    scope: scope[2],
                },
                kind: _22 = <A as dfa::automaton::Automaton>::is_match_state(move _23, move _24) -> [return: bb7, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:615:12: 615:36 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _22) -> [0: bb11, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &(*_1),
            StorageLive(_27),
            _27 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:616:27: 616:53 (#0),
                    scope: scope[2],
                },
                kind: _25 = <A as dfa::automaton::Automaton>::match_pattern(move _26, move _27, const 0_usize) -> [return: bb9, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
            FakeRead(ForLet(None), _25),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            _30 = _25,
            StorageLive(_31),
            _31 = (_5.0: usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:617:25: 617:58 (#0),
                    scope: scope[3],
                },
                kind: _29 = util::search::HalfMatch::new(move _30, move _31) -> [return: bb10, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            _28 = core::option::Option::<util::search::HalfMatch>::Some(move _29),
            StorageDead(_29),
            (*_4) = move _28,
            StorageDead(_28),
            _7 = const (),
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &(*_1),
            StorageLive(_34),
            _34 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:618:19: 618:42 (#0),
                    scope: scope[2],
                },
                kind: _32 = <A as dfa::automaton::Automaton>::is_quit_state(move _33, move _34) -> [return: bb12, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:618:19: 618:42 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _32) -> [0: bb17, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
            StorageLive(_36),
            StorageLive(_37),
            _37 = _10,
            StorageLive(_38),
            StorageLive(_39),
            _39 = (_5.0: usize),
            _40 = SubWithOverflow(_39, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:619:47: 619:59 (#0),
                    scope: scope[2],
                },
                kind: assert(!move (_40.1: bool), "attempt to compute `{} - {}`, which would overflow", move _39, const 1_usize) -> [success: bb14, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _38 = move (_40.0: usize),
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:619:24: 619:60 (#0),
                    scope: scope[2],
                },
                kind: _36 = util::search::MatchError::quit(move _37, move _38) -> [return: bb15, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            _0 = core::result::Result::<(), util::search::MatchError>::Err(move _36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:619:60: 619:61 (#0),
                    scope: scope[2],
                },
                kind: drop(_36) -> [return: bb16, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_32),
            StorageDead(_22),
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:629:2: 629:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            StorageDead(_33),
            _7 = const (),
            StorageDead(_32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:612:5: 627:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_41),
            StorageLive(_42),
            _42 = &(*_1),
            StorageLive(_43),
            _43 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:622:16: 622:40 (#0),
                    scope: scope[1],
                },
                kind: _41 = <A as dfa::automaton::Automaton>::next_eoi_state(move _42, move _43) -> [return: bb20, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
            (*_3) = move _41,
            StorageDead(_41),
            StorageLive(_44),
            StorageLive(_45),
            _45 = &(*_1),
            StorageLive(_46),
            _46 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:623:12: 623:36 (#0),
                    scope: scope[1],
                },
                kind: _44 = <A as dfa::automaton::Automaton>::is_match_state(move _45, move _46) -> [return: bb21, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:623:12: 623:36 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _44) -> [0: bb25, otherwise: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            StorageLive(_47),
            StorageLive(_48),
            _48 = &(*_1),
            StorageLive(_49),
            _49 = (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:624:27: 624:53 (#0),
                    scope: scope[1],
                },
                kind: _47 = <A as dfa::automaton::Automaton>::match_pattern(move _48, move _49, const 0_usize) -> [return: bb23, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            FakeRead(ForLet(None), _47),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            _52 = _47,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:625:25: 625:51 (#0),
                    scope: scope[4],
                },
                kind: _51 = util::search::HalfMatch::new(move _52, const 0_usize) -> [return: bb24, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            _50 = core::option::Option::<util::search::HalfMatch>::Some(move _51),
            StorageDead(_51),
            (*_4) = move _50,
            StorageDead(_50),
            _7 = const (),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:623:9: 626:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            _7 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:623:9: 626:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:612:5: 627:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_53),
            _53 = (),
            _0 = core::result::Result::<(), util::search::MatchError>::Ok(move _53),
            StorageDead(_53),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:629:2: 629:2 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:629:2: 629:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/search.rs:605:1: 629:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:610:6: 610:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:606:10: 606:12 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:606:5: 606:8 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:606:5: 606:8 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:606:5: 606:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:607:12: 607:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:607:5: 607:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:607:5: 607:10 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:607:5: 607:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:608:10: 608:22 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:608:5: 608:8 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:608:5: 608:8 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:608:5: 608:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/dfa/search.rs:609:10: 609:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:609:5: 609:8 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:609:5: 609:8 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:609:5: 609:8 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:611:14: 611:30 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:611:9: 611:11 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:611:9: 611:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:611:14: 611:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:612:5: 627:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:612:8: 612:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:612:8: 612:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:613:20: 613:50 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:613:13: 613:17 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:13: 613:17 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:20: 613:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:20: 613:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:37: 613:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:37: 613:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:37: 613:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:20: 613:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:613:20: 613:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:614:16: 614:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:614:16: 614:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:614:31: 614:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:614:37: 614:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:615:12: 615:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:615:12: 615:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:615:31: 615:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:616:27: 616:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:616:17: 616:24 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:616:17: 616:24 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:616:27: 616:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:616:45: 616:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:617:20: 617:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:617:25: 617:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:617:40: 617:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:617:49: 617:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:618:19: 618:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:618:19: 618:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:618:37: 618:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:615:9: 620:10 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:618:43: 620:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::MatchError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:619:24: 619:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:619:41: 619:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:619:47: 619:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:619:47: 619:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:619:47: 619:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:622:16: 622:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:622:16: 622:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:622:35: 622:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:623:9: 626:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:623:12: 623:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:623:9: 626:10 (#0),
                },
            ),
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:623:12: 623:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/search.rs:623:9: 626:10 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:623:31: 623:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/search.rs:624:27: 624:53 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/search.rs:624:17: 624:24 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:624:17: 624:24 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} A/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:624:27: 624:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:624:45: 624:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:625:20: 625:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:625:25: 625:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:625:40: 625:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/search.rs:628:8: 628:10 (#0),
            scope: scope[0],
        },
    },
]