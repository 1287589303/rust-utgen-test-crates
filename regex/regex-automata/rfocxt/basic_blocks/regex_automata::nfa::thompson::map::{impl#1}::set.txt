[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            _6 = ((*_1).0: u16),
            StorageLive(_7),
            _7 = move _2,
            StorageLive(_8),
            _8 = _4,
            _5 = nfa::thompson::map::Utf8SuffixEntry { version: move _6, key: move _7, val: move _8 },
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_6),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut ((*_1).2: std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry>),
            StorageLive(_11),
            _11 = _3,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:293:17: 293:23 (#0),
                    scope: scope[0],
                },
                kind: _9 = <std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry> as core::ops::IndexMut<usize>>::index_mut(move _10, move _11) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageDead(_10),
            (*_9) = move _5,
            StorageDead(_5),
            StorageDead(_9),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:295:6: 295:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/map.rs:292:5: 295:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:292:78: 292:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::map::Utf8SuffixMap,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:292:16: 292:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/map.rs:292:32: 292:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:292:27: 292:30 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:292:27: 292:30 (#0),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:292:27: 292:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/map.rs:292:53: 292:58 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:292:47: 292:51 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:292:47: 292:51 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:292:47: 292:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/map.rs:292:70: 292:77 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/map.rs:292:60: 292:68 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/map.rs:292:60: 292:68 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:292:60: 292:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: nfa::thompson::map::Utf8SuffixEntry,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:294:13: 294:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:294:40: 294:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: nfa::thompson::map::Utf8SuffixKey,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:294:54: 294:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:294:64: 294:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::map::Utf8SuffixEntry,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:293:17: 293:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut std::vec::Vec<nfa::thompson::map::Utf8SuffixEntry, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:293:9: 293:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/map.rs:293:18: 293:22 (#0),
            scope: scope[0],
        },
    },
]