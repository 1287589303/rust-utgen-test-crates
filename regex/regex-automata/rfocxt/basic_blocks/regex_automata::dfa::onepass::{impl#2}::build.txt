[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:32 (#0),
                    scope: scope[0],
                },
                kind: _6 = nfa::thompson::nfa::NFA::look_set_any(move _7) -> [return: bb1, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:44 (#0),
                    scope: scope[0],
                },
                kind: _5 = util::look::LookSet::available(move _6) -> [return: bb2, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:70 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::result::Result::<(), util::look::UnicodeWordBoundaryError>::map_err::<dfa::onepass::BuildError, fn(util::look::UnicodeWordBoundaryError) -> dfa::onepass::BuildError {dfa::onepass::BuildError::word}>(move _5, dfa::onepass::BuildError::word) -> [return: bb3, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                    scope: scope[0],
                },
                kind: _3 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _4) -> [return: bb4, unwind: bb330],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            PlaceMention(_3),
            _8 = discriminant(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                    scope: scope[0],
                },
                kind: switchInt(move _8) -> [0: bb7, 1: bb6, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = ((_3 as Continue).0: ()),
            _2 = _12,
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:71: 582:72 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb10, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_11),
            _11 = move _9,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                    scope: scope[2],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _11) -> [return: bb9, unwind: bb327],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb272, unwind: bb329],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:44 (#0),
                    scope: scope[0],
                },
                kind: _16 = nfa::thompson::nfa::NFA::look_set_any(move _17) -> [return: bb11, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#0),
                    scope: scope[0],
                },
                kind: _15 = util::look::LookSet::iter(move _16) -> [return: bb12, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                    scope: scope[0],
                },
                kind: _14 = <util::look::LookSetIter as core::iter::IntoIterator>::into_iter(move _15) -> [return: bb13, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            PlaceMention(_14),
            StorageLive(_18),
            _18 = move _14,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
                    scope: scope[5],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
                    scope: scope[5],
                },
                kind: falseUnwind -> [real: bb15, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            _23 = &mut _18,
            _22 = &mut (*_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                    scope: scope[5],
                },
                kind: _21 = <util::look::LookSetIter as core::iter::Iterator>::next(move _22) -> [return: bb16, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            PlaceMention(_21),
            _24 = discriminant(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                    scope: scope[5],
                },
                kind: switchInt(move _24) -> [0: bb18, 1: bb19, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                    scope: scope[5],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb20, imaginary: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_26),
            _26 = ((_21 as Some).0: util::look::Look),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:589:16: 589:30 (#0),
                    scope: scope[6],
                },
                kind: _28 = util::look::Look::as_repr(move _29) -> [return: bb21, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = const (),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:593:12: 593:34 (#0),
                    scope: scope[0],
                },
                kind: _38 = nfa::thompson::nfa::NFA::pattern_len(move _39) -> [return: bb27, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = util::look::Look::WordUnicodeNegate,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:589:33: 589:66 (#0),
                    scope: scope[6],
                },
                kind: _30 = util::look::Look::as_repr(move _31) -> [return: bb22, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            _27 = Gt(move _28, move _30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:589:16: 589:66 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _27) -> [0: bb26, otherwise: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_28),
            StorageLive(_33),
            StorageLive(_34),
            _34 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:590:28: 590:62 (#0),
                    scope: scope[6],
                },
                kind: _33 = dfa::onepass::BuildError::unsupported_look(move _34) -> [return: bb24, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            _0 = core::result::Result::<dfa::onepass::DFA, dfa::onepass::BuildError>::Err(move _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:590:62: 590:63 (#0),
                    scope: scope[6],
                },
                kind: drop(_33) -> [return: bb25, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_18),
            StorageDead(_14),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_30),
            StorageDead(_28),
            _20 = const (),
            StorageDead(_27),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
                    scope: scope[5],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:593:12: 593:43 (#0),
                    scope: scope[0],
                },
                kind: _37 = <usize as util::int::Usize>::as_u64(move _38) -> [return: bb28, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            _36 = Gt(move _37, const dfa::onepass::PatternEpsilons::PATTERN_ID_LIMIT),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:593:12: 593:79 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _36) -> [0: bb32, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageLive(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:595:24: 597:14 (#0),
                    scope: scope[0],
                },
                kind: _41 = dfa::onepass::BuildError::too_many_patterns(const dfa::onepass::PatternEpsilons::PATTERN_ID_LIMIT) -> [return: bb30, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<dfa::onepass::DFA, dfa::onepass::BuildError>::Err(move _41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:597:14: 597:15 (#0),
                    scope: scope[0],
                },
                kind: drop(_41) -> [return: bb31, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            _35 = const (),
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_42),
            StorageLive(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:599:12: 599:33 (#0),
                    scope: scope[0],
                },
                kind: _46 = nfa::thompson::nfa::NFA::group_info(move _47) -> [return: bb33, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _45 = &(*_46),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:599:12: 599:53 (#0),
                    scope: scope[0],
                },
                kind: _44 = util::captures::GroupInfo::explicit_slot_len(move _45) -> [return: bb34, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            _43 = Gt(move _44, const dfa::onepass::Slots::LIMIT),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:599:12: 599:68 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _43) -> [0: bb38, otherwise: bb35],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_44),
            StorageLive(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:600:24: 602:14 (#0),
                    scope: scope[0],
                },
                kind: _49 = dfa::onepass::BuildError::not_one_pass(const "too many explicit capturing groups (max is 16)") -> [return: bb36, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<dfa::onepass::DFA, dfa::onepass::BuildError>::Err(move _49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:602:14: 602:15 (#0),
                    scope: scope[0],
                },
                kind: drop(_49) -> [return: bb37, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_44),
            _42 = const (),
            StorageDead(_43),
            StorageDead(_42),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = const dfa::DEAD,
            _52 = &_53,
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            _58 = &mut _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:26: 604:48 (#0),
                    scope: scope[0],
                },
                kind: _57 = dfa::onepass::InternalBuilder::<'_>::add_empty_state(move _58) -> [return: bb39, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                    scope: scope[0],
                },
                kind: _56 = <core::result::Result<util::primitives::StateID, dfa::onepass::BuildError> as core::ops::Try>::branch(move _57) -> [return: bb40, unwind: bb326],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            PlaceMention(_56),
            _59 = discriminant(_56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                    scope: scope[0],
                },
                kind: switchInt(move _59) -> [0: bb43, 1: bb42, otherwise: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _56),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb44, imaginary: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_63),
            _63 = ((_56 as Continue).0: util::primitives::StateID),
            _55 = _63,
            StorageDead(_63),
            _54 = &_55,
            _51 = (move _52, move _54),
            StorageDead(_54),
            StorageDead(_52),
            PlaceMention(_51),
            StorageLive(_64),
            _64 = (_51.0: &util::primitives::StateID),
            StorageLive(_65),
            _65 = (_51.1: &util::primitives::StateID),
            StorageLive(_66),
            StorageLive(_67),
            _67 = &(*_64),
            StorageLive(_68),
            _68 = &(*_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#173),
                    scope: scope[11],
                },
                kind: _66 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _67, move _68) -> [return: bb46, unwind: bb325],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_60),
            _60 = move ((_56 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_62),
            _62 = move _60,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                    scope: scope[8],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _62) -> [return: bb45, unwind: bb323],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
                    scope: scope[0],
                },
                kind: drop(_60) -> [return: bb270, unwind: bb325],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#173),
                    scope: scope[11],
                },
                kind: switchInt(move _66) -> [0: bb48, otherwise: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_67),
            _50 = const (),
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9: 48:10 (#173),
                    scope: scope[0],
                },
                kind: drop(_56) -> [return: bb49, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_67),
            StorageLive(_70),
            _70 = core::panicking::AssertKind::Eq,
            FakeRead(ForLet(None), _70),
            StorageLive(_71),
            StorageLive(_72),
            _72 = move _70,
            StorageLive(_73),
            StorageLive(_74),
            _74 = &(*_64),
            _73 = &(*_74),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &(*_65),
            _75 = &(*_76),
            StorageLive(_77),
            _77 = core::option::Option::<core::fmt::Arguments<'_>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#173),
                    scope: scope[12],
                },
                kind: _71 = core::panicking::assert_failed::<util::primitives::StateID, util::primitives::StateID>(move _72, move _73, move _75, move _77) -> bb325,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_53),
            StorageDead(_51),
            StorageDead(_50),
            StorageLive(_78),
            StorageLive(_79),
            StorageLive(_80),
            _80 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:609:35: 609:57 (#0),
                    scope: scope[0],
                },
                kind: _79 = nfa::thompson::nfa::NFA::pattern_len(move _80) -> [return: bb50, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            _81 = MulWithOverflow(_79, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:609:35: 609:61 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_81.1: bool), "attempt to compute `{} * {}`, which would overflow", move _79, const 2_usize) -> [success: bb51, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _78 = move (_81.0: usize),
            StorageDead(_79),
            FakeRead(ForLet(None), _78),
            StorageLive(_82),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            _85 = &mut _1,
            StorageLive(_86),
            _86 = core::option::Option::<util::primitives::PatternID>::None,
            StorageLive(_87),
            StorageLive(_88),
            _88 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:36: 610:61 (#0),
                    scope: scope[13],
                },
                kind: _87 = nfa::thompson::nfa::NFA::start_anchored(move _88) -> [return: bb52, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:9: 610:62 (#0),
                    scope: scope[13],
                },
                kind: _84 = dfa::onepass::InternalBuilder::<'_>::add_start_state(move _85, move _86, move _87) -> [return: bb53, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            StorageDead(_86),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                    scope: scope[13],
                },
                kind: _83 = <core::result::Result<util::primitives::StateID, dfa::onepass::BuildError> as core::ops::Try>::branch(move _84) -> [return: bb54, unwind: bb322],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            PlaceMention(_83),
            _89 = discriminant(_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                    scope: scope[13],
                },
                kind: switchInt(move _89) -> [0: bb57, 1: bb56, otherwise: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                    scope: scope[13],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb58, imaginary: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_93),
            _93 = ((_83 as Continue).0: util::primitives::StateID),
            _82 = _93,
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:63: 610:64 (#0),
                    scope: scope[13],
                },
                kind: drop(_83) -> [return: bb60, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_90),
            _90 = move ((_83 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_92),
            _92 = move _90,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                    scope: scope[15],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _92) -> [return: bb59, unwind: bb319],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
                    scope: scope[13],
                },
                kind: drop(_90) -> [return: bb267, unwind: bb321],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageDead(_82),
            StorageLive(_94),
            StorageLive(_95),
            StorageLive(_96),
            _96 = &(_1.6: dfa::onepass::Config),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:611:12: 611:53 (#0),
                    scope: scope[13],
                },
                kind: _95 = dfa::onepass::Config::get_starts_for_each_pattern(move _96) -> [return: bb61, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:611:12: 611:53 (#0),
                    scope: scope[13],
                },
                kind: switchInt(move _95) -> [0: bb82, otherwise: bb62],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            StorageLive(_97),
            StorageLive(_98),
            StorageLive(_99),
            _99 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#0),
                    scope: scope[13],
                },
                kind: _98 = nfa::thompson::nfa::NFA::patterns(move _99) -> [return: bb63, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                    scope: scope[13],
                },
                kind: _97 = <nfa::thompson::nfa::PatternIter<'_> as core::iter::IntoIterator>::into_iter(move _98) -> [return: bb64, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_98),
            PlaceMention(_97),
            StorageLive(_100),
            _100 = move _97,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                    scope: scope[18],
                },
                kind: goto -> bb65,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                    scope: scope[18],
                },
                kind: falseUnwind -> [real: bb66, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_101),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = &mut _100,
            _103 = &mut (*_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                    scope: scope[18],
                },
                kind: _102 = <nfa::thompson::nfa::PatternIter<'_> as core::iter::Iterator>::next(move _103) -> [return: bb67, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            PlaceMention(_102),
            _105 = discriminant(_102),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                    scope: scope[18],
                },
                kind: switchInt(move _105) -> [0: bb69, 1: bb70, otherwise: bb68],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _102),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                    scope: scope[18],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                    scope: scope[18],
                },
                kind: falseEdge -> [real: bb71, imaginary: bb70],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_107),
            _107 = ((_102 as Some).0: util::primitives::PatternID),
            StorageLive(_108),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            _111 = &mut _1,
            StorageLive(_112),
            StorageLive(_113),
            _113 = _107,
            _112 = core::option::Option::<util::primitives::PatternID>::Some(move _113),
            StorageDead(_113),
            StorageLive(_114),
            StorageLive(_115),
            StorageLive(_116),
            _116 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
            StorageLive(_117),
            _117 = _107,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:615:21: 615:48 (#0),
                    scope: scope[19],
                },
                kind: _115 = nfa::thompson::nfa::NFA::start_pattern(move _116, move _117) -> [return: bb72, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _94 = const (),
            StorageDead(_104),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            StorageDead(_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:611:9: 618:10 (#0),
                    scope: scope[13],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
            StorageDead(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:615:21: 615:57 (#0),
                    scope: scope[19],
                },
                kind: _114 = core::option::Option::<util::primitives::StateID>::unwrap(move _115) -> [return: bb73, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:613:17: 616:18 (#0),
                    scope: scope[19],
                },
                kind: _110 = dfa::onepass::InternalBuilder::<'_>::add_start_state(move _111, move _112, move _114) -> [return: bb74, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
            StorageDead(_112),
            StorageDead(_111),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                    scope: scope[19],
                },
                kind: _109 = <core::result::Result<util::primitives::StateID, dfa::onepass::BuildError> as core::ops::Try>::branch(move _110) -> [return: bb75, unwind: bb318],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
            PlaceMention(_109),
            _118 = discriminant(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                    scope: scope[19],
                },
                kind: switchInt(move _118) -> [0: bb78, 1: bb77, otherwise: bb76],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                    scope: scope[19],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb79, imaginary: bb78],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_122),
            _122 = ((_109 as Continue).0: util::primitives::StateID),
            _108 = _122,
            StorageDead(_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:19: 616:20 (#0),
                    scope: scope[19],
                },
                kind: drop(_109) -> [return: bb81, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_119),
            _119 = move ((_109 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_121),
            _121 = move _119,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                    scope: scope[21],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _121) -> [return: bb80, unwind: bb315],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
                    scope: scope[19],
                },
                kind: drop(_119) -> [return: bb265, unwind: bb317],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
            StorageDead(_108),
            _101 = const (),
            StorageDead(_107),
            StorageDead(_104),
            StorageDead(_102),
            StorageDead(_101),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                    scope: scope[18],
                },
                kind: goto -> bb65,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            _94 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:611:9: 618:10 (#0),
                    scope: scope[13],
                },
                kind: goto -> bb83,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageDead(_94),
            StorageLive(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#0),
                    scope: scope[13],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#0),
                    scope: scope[13],
                },
                kind: falseUnwind -> [real: bb85, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_124),
            StorageLive(_125),
            _125 = &mut (_1.1: std::vec::Vec<util::primitives::StateID>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:34: 625:63 (#0),
                    scope: scope[24],
                },
                kind: _124 = std::vec::Vec::<util::primitives::StateID>::pop(move _125) -> [return: bb86, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
            PlaceMention(_124),
            _126 = discriminant(_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:19: 625:31 (#0),
                    scope: scope[24],
                },
                kind: switchInt(move _126) -> [1: bb87, otherwise: bb239],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:19: 625:31 (#0),
                    scope: scope[24],
                },
                kind: falseEdge -> [real: bb88, imaginary: bb239],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_127),
            _127 = ((_124 as Some).0: util::primitives::StateID),
            StorageLive(_128),
            StorageLive(_129),
            StorageLive(_130),
            _130 = &(_1.2: std::vec::Vec<util::primitives::StateID>),
            StorageLive(_131),
            _131 = _127,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:626:44: 626:52 (#0),
                    scope: scope[24],
                },
                kind: _129 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<util::primitives::StateID>>::index(move _130, move _131) -> [return: bb89, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _128 = (*_129),
            StorageDead(_131),
            StorageDead(_130),
            FakeRead(ForLet(None), _128),
            StorageDead(_129),
            (_1.5: bool) = const false,
            StorageLive(_132),
            StorageLive(_133),
            _133 = &mut (_1.4: util::sparse_set::SparseSet),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:632:13: 632:30 (#0),
                    scope: scope[25],
                },
                kind: _132 = util::sparse_set::SparseSet::clear(move _133) -> [return: bb90, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageDead(_132),
            StorageLive(_134),
            StorageLive(_135),
            StorageLive(_136),
            StorageLive(_137),
            _137 = &mut _1,
            StorageLive(_138),
            _138 = _127,
            StorageLive(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:37: 638:54 (#0),
                    scope: scope[25],
                },
                kind: _139 = dfa::onepass::Epsilons::empty() -> [return: bb91, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:13: 638:55 (#0),
                    scope: scope[25],
                },
                kind: _136 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _137, move _138, move _139) -> [return: bb92, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            StorageDead(_138),
            StorageDead(_137),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                    scope: scope[25],
                },
                kind: _135 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _136) -> [return: bb93, unwind: bb314],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
            PlaceMention(_135),
            _140 = discriminant(_135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                    scope: scope[25],
                },
                kind: switchInt(move _140) -> [0: bb96, 1: bb95, otherwise: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                    scope: scope[25],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
                    scope: scope[25],
                },
                kind: falseEdge -> [real: bb97, imaginary: bb96],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_144),
            _144 = ((_135 as Continue).0: ()),
            _134 = _144,
            StorageDead(_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:56: 638:57 (#0),
                    scope: scope[25],
                },
                kind: drop(_135) -> [return: bb99, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_141),
            _141 = move ((_135 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_143),
            _143 = move _141,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                    scope: scope[27],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _143) -> [return: bb98, unwind: bb311],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
                    scope: scope[25],
                },
                kind: drop(_141) -> [return: bb262, unwind: bb313],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#0),
                    scope: scope[25],
                },
                kind: falseUnwind -> [real: bb101, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_145),
            StorageLive(_146),
            _146 = &mut (_1.3: std::vec::Vec<(util::primitives::StateID, dfa::onepass::Epsilons)>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:46: 639:62 (#0),
                    scope: scope[30],
                },
                kind: _145 = std::vec::Vec::<(util::primitives::StateID, dfa::onepass::Epsilons)>::pop(move _146) -> [return: bb102, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            PlaceMention(_145),
            _147 = discriminant(_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:23: 639:43 (#0),
                    scope: scope[30],
                },
                kind: switchInt(move _147) -> [1: bb103, otherwise: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:23: 639:43 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb104, imaginary: bb237],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_148),
            _148 = (((_145 as Some).0: (util::primitives::StateID, dfa::onepass::Epsilons)).0: util::primitives::StateID),
            StorageLive(_149),
            _149 = (((_145 as Some).0: (util::primitives::StateID, dfa::onepass::Epsilons)).1: dfa::onepass::Epsilons),
            StorageLive(_150),
            StorageLive(_151),
            _151 = &(*(_1.7: &nfa::thompson::nfa::NFA)),
            StorageLive(_152),
            _152 = _148,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:640:24: 640:42 (#0),
                    scope: scope[30],
                },
                kind: _150 = nfa::thompson::nfa::NFA::state(move _151, move _152) -> [return: bb105, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
            StorageDead(_151),
            PlaceMention((*_150)),
            _153 = discriminant((*_150)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:640:17: 640:42 (#0),
                    scope: scope[30],
                },
                kind: switchInt(move _153) -> [0: bb107, 1: bb108, 2: bb109, 3: bb110, 4: bb111, 5: bb112, 6: bb113, 7: bb114, 8: bb115, otherwise: bb106],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), (*_150)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                    scope: scope[30],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:641:21: 641:61 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb116, imaginary: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:644:21: 644:56 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb125, imaginary: bb109],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:649:21: 649:54 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb143, imaginary: bb110],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:654:21: 654:57 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb163, imaginary: bb111],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:658:21: 658:62 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb175, imaginary: bb112],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:663:21: 663:64 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb194, imaginary: bb113],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:667:21: 667:64 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb211, imaginary: bb114],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:684:21: 684:42 (#0),
                    scope: scope[30],
                },
                kind: falseEdge -> [real: bb238, imaginary: bb115],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_312),
            _312 = (((*_150) as Match).0: util::primitives::PatternID),
            StorageLive(_313),
            StorageLive(_314),
            _314 = (_1.5: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:691:28: 691:40 (#0),
                    scope: scope[80],
                },
                kind: switchInt(move _314) -> [0: bb231, otherwise: bb228],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_154),
            _154 = &(((*_150) as ByteRange).0: nfa::thompson::nfa::Transition),
            StorageLive(_155),
            StorageLive(_156),
            StorageLive(_157),
            StorageLive(_158),
            _158 = &mut _1,
            StorageLive(_159),
            _159 = _128,
            StorageLive(_160),
            _160 = &(*_154),
            StorageLive(_161),
            _161 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:25: 642:73 (#0),
                    scope: scope[31],
                },
                kind: _157 = dfa::onepass::InternalBuilder::<'_>::compile_transition(move _158, move _159, move _160, move _161) -> [return: bb117, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
            StorageDead(_160),
            StorageDead(_159),
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                    scope: scope[31],
                },
                kind: _156 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _157) -> [return: bb118, unwind: bb310],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
            PlaceMention(_156),
            _162 = discriminant(_156),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                    scope: scope[31],
                },
                kind: switchInt(move _162) -> [0: bb121, 1: bb120, otherwise: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _156),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                    scope: scope[31],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
                    scope: scope[31],
                },
                kind: falseEdge -> [real: bb122, imaginary: bb121],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_166),
            _166 = ((_156 as Continue).0: ()),
            _155 = _166,
            StorageDead(_166),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:74: 642:75 (#0),
                    scope: scope[31],
                },
                kind: drop(_156) -> [return: bb124, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_163),
            _163 = move ((_156 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_165),
            _165 = move _163,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                    scope: scope[33],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _165) -> [return: bb123, unwind: bb307],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
                    scope: scope[31],
                },
                kind: drop(_163) -> [return: bb259, unwind: bb309],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
            StorageDead(_155),
            _19 = const (),
            StorageDead(_154),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:643:21: 643:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_167),
            _167 = &(((*_150) as Sparse).0: nfa::thompson::nfa::SparseTransitions),
            StorageLive(_168),
            StorageLive(_169),
            StorageLive(_170),
            _170 = &(*((*_167).0: std::boxed::Box<[nfa::thompson::nfa::Transition]>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#0),
                    scope: scope[36],
                },
                kind: _169 = core::slice::<impl [nfa::thompson::nfa::Transition]>::iter(move _170) -> [return: bb126, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                    scope: scope[36],
                },
                kind: _168 = <core::slice::Iter<'_, nfa::thompson::nfa::Transition> as core::iter::IntoIterator>::into_iter(move _169) -> [return: bb127, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_169),
            PlaceMention(_168),
            StorageLive(_171),
            _171 = move _168,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                    scope: scope[37],
                },
                kind: goto -> bb128,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                    scope: scope[37],
                },
                kind: falseUnwind -> [real: bb129, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            StorageLive(_175),
            _175 = &mut _171,
            _174 = &mut (*_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                    scope: scope[37],
                },
                kind: _173 = <core::slice::Iter<'_, nfa::thompson::nfa::Transition> as core::iter::Iterator>::next(move _174) -> [return: bb130, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            PlaceMention(_173),
            _176 = discriminant(_173),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                    scope: scope[37],
                },
                kind: switchInt(move _176) -> [0: bb132, 1: bb133, otherwise: bb131],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _173),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                    scope: scope[37],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                    scope: scope[37],
                },
                kind: falseEdge -> [real: bb134, imaginary: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_178),
            _178 = ((_173 as Some).0: &nfa::thompson::nfa::Transition),
            StorageLive(_179),
            StorageLive(_180),
            StorageLive(_181),
            StorageLive(_182),
            _182 = &mut _1,
            StorageLive(_183),
            _183 = _128,
            StorageLive(_184),
            _184 = &(*_178),
            StorageLive(_185),
            _185 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:29: 646:77 (#0),
                    scope: scope[38],
                },
                kind: _181 = dfa::onepass::InternalBuilder::<'_>::compile_transition(move _182, move _183, move _184, move _185) -> [return: bb135, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = const (),
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            StorageDead(_171),
            StorageDead(_168),
            StorageDead(_167),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:648:21: 648:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_185),
            StorageDead(_184),
            StorageDead(_183),
            StorageDead(_182),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                    scope: scope[38],
                },
                kind: _180 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _181) -> [return: bb136, unwind: bb306],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_181),
            PlaceMention(_180),
            _186 = discriminant(_180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                    scope: scope[38],
                },
                kind: switchInt(move _186) -> [0: bb139, 1: bb138, otherwise: bb137],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                    scope: scope[38],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
                    scope: scope[38],
                },
                kind: falseEdge -> [real: bb140, imaginary: bb139],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_190),
            _190 = ((_180 as Continue).0: ()),
            _179 = _190,
            StorageDead(_190),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:78: 646:79 (#0),
                    scope: scope[38],
                },
                kind: drop(_180) -> [return: bb142, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_187),
            _187 = move ((_180 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_189),
            _189 = move _187,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                    scope: scope[40],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _189) -> [return: bb141, unwind: bb303],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
                    scope: scope[38],
                },
                kind: drop(_187) -> [return: bb257, unwind: bb305],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_180),
            StorageDead(_179),
            _172 = const (),
            StorageDead(_178),
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                    scope: scope[37],
                },
                kind: goto -> bb128,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_191),
            _191 = &(((*_150) as Dense).0: nfa::thompson::nfa::DenseTransitions),
            StorageLive(_192),
            StorageLive(_193),
            StorageLive(_194),
            _194 = &(*_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#0),
                    scope: scope[43],
                },
                kind: _193 = nfa::thompson::nfa::DenseTransitions::iter(move _194) -> [return: bb144, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_194),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                    scope: scope[43],
                },
                kind: _192 = <impl core::iter::Iterator<Item = nfa::thompson::nfa::Transition> + '_ as core::iter::IntoIterator>::into_iter(move _193) -> [return: bb145, unwind: bb302],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_193),
            PlaceMention(_192),
            StorageLive(_195),
            _195 = move _192,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                    scope: scope[44],
                },
                kind: goto -> bb146,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                    scope: scope[44],
                },
                kind: falseUnwind -> [real: bb147, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_196),
            StorageLive(_197),
            StorageLive(_198),
            StorageLive(_199),
            _199 = &mut _195,
            _198 = &mut (*_199),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                    scope: scope[44],
                },
                kind: _197 = <impl core::iter::Iterator<Item = nfa::thompson::nfa::Transition> + '_ as core::iter::Iterator>::next(move _198) -> [return: bb148, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_198),
            PlaceMention(_197),
            _200 = discriminant(_197),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                    scope: scope[44],
                },
                kind: switchInt(move _200) -> [0: bb150, 1: bb151, otherwise: bb149],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _197),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                    scope: scope[44],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                    scope: scope[44],
                },
                kind: falseEdge -> [real: bb152, imaginary: bb151],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_202),
            _202 = ((_197 as Some).0: nfa::thompson::nfa::Transition),
            StorageLive(_203),
            StorageLive(_204),
            StorageLive(_205),
            StorageLive(_206),
            _206 = &mut _1,
            StorageLive(_207),
            _207 = _128,
            StorageLive(_208),
            StorageLive(_209),
            _209 = &_202,
            _208 = &(*_209),
            StorageLive(_210),
            _210 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:29: 651:78 (#0),
                    scope: scope[45],
                },
                kind: _205 = dfa::onepass::InternalBuilder::<'_>::compile_transition(move _206, move _207, move _208, move _210) -> [return: bb153, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = const (),
            StorageDead(_199),
            StorageDead(_197),
            StorageDead(_196),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_195) -> [return: bb161, unwind: bb301],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_210),
            StorageDead(_208),
            StorageDead(_207),
            StorageDead(_206),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                    scope: scope[45],
                },
                kind: _204 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _205) -> [return: bb154, unwind: bb299],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_205),
            PlaceMention(_204),
            _211 = discriminant(_204),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                    scope: scope[45],
                },
                kind: switchInt(move _211) -> [0: bb157, 1: bb156, otherwise: bb155],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _204),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                    scope: scope[45],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
                    scope: scope[45],
                },
                kind: falseEdge -> [real: bb158, imaginary: bb157],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_215),
            _215 = ((_204 as Continue).0: ()),
            _203 = _215,
            StorageDead(_215),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:79: 651:80 (#0),
                    scope: scope[45],
                },
                kind: drop(_204) -> [return: bb160, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_212),
            _212 = move ((_204 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_214),
            _214 = move _212,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                    scope: scope[47],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _214) -> [return: bb159, unwind: bb296],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_214),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
                    scope: scope[45],
                },
                kind: drop(_212) -> [return: bb253, unwind: bb298],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_209),
            StorageDead(_204),
            StorageDead(_203),
            _196 = const (),
            StorageDead(_202),
            StorageDead(_199),
            StorageDead(_197),
            StorageDead(_196),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                    scope: scope[44],
                },
                kind: goto -> bb146,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_192) -> [return: bb162, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:653:21: 653:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_216),
            _216 = (((*_150) as Look).0: util::look::Look),
            StorageLive(_217),
            _217 = (((*_150) as Look).1: util::primitives::StateID),
            StorageLive(_218),
            StorageLive(_219),
            StorageLive(_220),
            _220 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:655:37: 655:53 (#0),
                    scope: scope[50],
                },
                kind: _219 = dfa::onepass::Epsilons::looks(move _220) -> [return: bb164, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_220),
            StorageLive(_221),
            _221 = _216,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:655:37: 655:66 (#0),
                    scope: scope[50],
                },
                kind: _218 = util::look::LookSet::insert(move _219, move _221) -> [return: bb165, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_221),
            StorageDead(_219),
            FakeRead(ForLet(None), _218),
            StorageLive(_222),
            StorageLive(_223),
            StorageLive(_224),
            StorageLive(_225),
            _225 = &mut _1,
            StorageLive(_226),
            _226 = _217,
            StorageLive(_227),
            StorageLive(_228),
            _228 = _149,
            StorageLive(_229),
            _229 = _218,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:47: 656:72 (#0),
                    scope: scope[51],
                },
                kind: _227 = dfa::onepass::Epsilons::set_looks(move _228, move _229) -> [return: bb166, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_229),
            StorageDead(_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:25: 656:73 (#0),
                    scope: scope[51],
                },
                kind: _224 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _225, move _226, move _227) -> [return: bb167, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_227),
            StorageDead(_226),
            StorageDead(_225),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                    scope: scope[51],
                },
                kind: _223 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _224) -> [return: bb168, unwind: bb295],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_224),
            PlaceMention(_223),
            _230 = discriminant(_223),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                    scope: scope[51],
                },
                kind: switchInt(move _230) -> [0: bb171, 1: bb170, otherwise: bb169],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _223),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                    scope: scope[51],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
                    scope: scope[51],
                },
                kind: falseEdge -> [real: bb172, imaginary: bb171],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_234),
            _234 = ((_223 as Continue).0: ()),
            _222 = _234,
            StorageDead(_234),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:74: 656:75 (#0),
                    scope: scope[51],
                },
                kind: drop(_223) -> [return: bb174, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_231),
            _231 = move ((_223 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_233),
            _233 = move _231,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                    scope: scope[53],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _233) -> [return: bb173, unwind: bb292],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_233),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
                    scope: scope[51],
                },
                kind: drop(_231) -> [return: bb251, unwind: bb294],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_223),
            StorageDead(_222),
            _19 = const (),
            StorageDead(_218),
            StorageDead(_217),
            StorageDead(_216),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:657:21: 657:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_235),
            _235 = &(((*_150) as Union).0: std::boxed::Box<[util::primitives::StateID]>),
            StorageLive(_236),
            StorageLive(_237),
            StorageLive(_238),
            StorageLive(_239),
            _239 = &(*(*_235)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:54 (#0),
                    scope: scope[56],
                },
                kind: _238 = core::slice::<impl [util::primitives::StateID]>::iter(move _239) -> [return: bb176, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_239),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#0),
                    scope: scope[56],
                },
                kind: _237 = <core::slice::Iter<'_, util::primitives::StateID> as core::iter::Iterator>::rev(move _238) -> [return: bb177, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_238),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                    scope: scope[56],
                },
                kind: _236 = <core::iter::Rev<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::IntoIterator>::into_iter(move _237) -> [return: bb178, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_237),
            PlaceMention(_236),
            StorageLive(_240),
            _240 = move _236,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                    scope: scope[57],
                },
                kind: goto -> bb179,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                    scope: scope[57],
                },
                kind: falseUnwind -> [real: bb180, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_241),
            StorageLive(_242),
            StorageLive(_243),
            StorageLive(_244),
            _244 = &mut _240,
            _243 = &mut (*_244),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                    scope: scope[57],
                },
                kind: _242 = <core::iter::Rev<core::slice::Iter<'_, util::primitives::StateID>> as core::iter::Iterator>::next(move _243) -> [return: bb181, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_243),
            PlaceMention(_242),
            _245 = discriminant(_242),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                    scope: scope[57],
                },
                kind: switchInt(move _245) -> [0: bb183, 1: bb184, otherwise: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _242),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                    scope: scope[57],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                    scope: scope[57],
                },
                kind: falseEdge -> [real: bb185, imaginary: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_247),
            _247 = (*((_242 as Some).0: &util::primitives::StateID)),
            StorageLive(_248),
            StorageLive(_249),
            StorageLive(_250),
            StorageLive(_251),
            _251 = &mut _1,
            StorageLive(_252),
            _252 = _247,
            StorageLive(_253),
            _253 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:29: 660:59 (#0),
                    scope: scope[58],
                },
                kind: _250 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _251, move _252, move _253) -> [return: bb186, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = const (),
            StorageDead(_244),
            StorageDead(_242),
            StorageDead(_241),
            StorageDead(_240),
            StorageDead(_236),
            StorageDead(_235),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:662:21: 662:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_253),
            StorageDead(_252),
            StorageDead(_251),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                    scope: scope[58],
                },
                kind: _249 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _250) -> [return: bb187, unwind: bb291],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_250),
            PlaceMention(_249),
            _254 = discriminant(_249),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                    scope: scope[58],
                },
                kind: switchInt(move _254) -> [0: bb190, 1: bb189, otherwise: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _249),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                    scope: scope[58],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
                    scope: scope[58],
                },
                kind: falseEdge -> [real: bb191, imaginary: bb190],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_258),
            _258 = ((_249 as Continue).0: ()),
            _248 = _258,
            StorageDead(_258),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:60: 660:61 (#0),
                    scope: scope[58],
                },
                kind: drop(_249) -> [return: bb193, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_255),
            _255 = move ((_249 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_257),
            _257 = move _255,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                    scope: scope[60],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _257) -> [return: bb192, unwind: bb288],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_257),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
                    scope: scope[58],
                },
                kind: drop(_255) -> [return: bb249, unwind: bb290],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_249),
            StorageDead(_248),
            _241 = const (),
            StorageDead(_247),
            StorageDead(_244),
            StorageDead(_242),
            StorageDead(_241),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                    scope: scope[57],
                },
                kind: goto -> bb179,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_259),
            _259 = (((*_150) as BinaryUnion).0: util::primitives::StateID),
            StorageLive(_260),
            _260 = (((*_150) as BinaryUnion).1: util::primitives::StateID),
            StorageLive(_261),
            StorageLive(_262),
            StorageLive(_263),
            StorageLive(_264),
            _264 = &mut _1,
            StorageLive(_265),
            _265 = _260,
            StorageLive(_266),
            _266 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:25: 664:56 (#0),
                    scope: scope[63],
                },
                kind: _263 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _264, move _265, move _266) -> [return: bb195, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_266),
            StorageDead(_265),
            StorageDead(_264),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                    scope: scope[63],
                },
                kind: _262 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _263) -> [return: bb196, unwind: bb287],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_263),
            PlaceMention(_262),
            _267 = discriminant(_262),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                    scope: scope[63],
                },
                kind: switchInt(move _267) -> [0: bb199, 1: bb198, otherwise: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _262),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                    scope: scope[63],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
                    scope: scope[63],
                },
                kind: falseEdge -> [real: bb200, imaginary: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_271),
            _271 = ((_262 as Continue).0: ()),
            _261 = _271,
            StorageDead(_271),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:57: 664:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_262) -> [return: bb202, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_268),
            _268 = move ((_262 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_270),
            _270 = move _268,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                    scope: scope[65],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _270) -> [return: bb201, unwind: bb284],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_270),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
                    scope: scope[63],
                },
                kind: drop(_268) -> [return: bb246, unwind: bb286],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_262),
            StorageDead(_261),
            StorageLive(_272),
            StorageLive(_273),
            StorageLive(_274),
            StorageLive(_275),
            _275 = &mut _1,
            StorageLive(_276),
            _276 = _259,
            StorageLive(_277),
            _277 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:25: 665:56 (#0),
                    scope: scope[63],
                },
                kind: _274 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _275, move _276, move _277) -> [return: bb203, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_277),
            StorageDead(_276),
            StorageDead(_275),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                    scope: scope[63],
                },
                kind: _273 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _274) -> [return: bb204, unwind: bb283],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_274),
            PlaceMention(_273),
            _278 = discriminant(_273),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                    scope: scope[63],
                },
                kind: switchInt(move _278) -> [0: bb207, 1: bb206, otherwise: bb205],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _273),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                    scope: scope[63],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
                    scope: scope[63],
                },
                kind: falseEdge -> [real: bb208, imaginary: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_282),
            _282 = ((_273 as Continue).0: ()),
            _272 = _282,
            StorageDead(_282),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:57: 665:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_273) -> [return: bb210, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_279),
            _279 = move ((_273 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_281),
            _281 = move _279,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                    scope: scope[69],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _281) -> [return: bb209, unwind: bb280],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_281),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
                    scope: scope[63],
                },
                kind: drop(_279) -> [return: bb244, unwind: bb282],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_273),
            StorageDead(_272),
            _19 = const (),
            StorageDead(_260),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:666:21: 666:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_283),
            _283 = (((*_150) as Capture).0: util::primitives::StateID),
            StorageLive(_284),
            _284 = (((*_150) as Capture).3: util::primitives::SmallIndex),
            StorageLive(_285),
            StorageLive(_286),
            _286 = &_284,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:668:36: 668:51 (#0),
                    scope: scope[72],
                },
                kind: _285 = util::primitives::SmallIndex::as_usize(move _286) -> [return: bb212, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_286),
            FakeRead(ForLet(None), _285),
            StorageLive(_287),
            StorageLive(_288),
            StorageLive(_289),
            _289 = _285,
            StorageLive(_290),
            _290 = _78,
            _288 = Lt(move _289, move _290),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:669:43: 669:69 (#0),
                    scope: scope[73],
                },
                kind: switchInt(move _288) -> [0: bb214, otherwise: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_290),
            StorageDead(_289),
            _287 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:669:40: 681:26 (#0),
                    scope: scope[73],
                },
                kind: goto -> bb219,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_290),
            StorageDead(_289),
            StorageLive(_291),
            StorageLive(_292),
            _292 = _285,
            StorageLive(_293),
            _293 = _78,
            _294 = SubWithOverflow(_292, _293),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:679:42: 679:68 (#0),
                    scope: scope[73],
                },
                kind: assert(!move (_294.1: bool), "attempt to compute `{} - {}`, which would overflow", move _292, move _293) -> [success: bb215, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _291 = move (_294.0: usize),
            StorageDead(_293),
            StorageDead(_292),
            FakeRead(ForLet(None), _291),
            StorageLive(_295),
            _295 = _149,
            StorageLive(_296),
            StorageLive(_297),
            StorageLive(_298),
            _298 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:680:48: 680:64 (#0),
                    scope: scope[75],
                },
                kind: _297 = dfa::onepass::Epsilons::slots(move _298) -> [return: bb216, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_298),
            StorageLive(_299),
            _299 = _291,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:680:48: 680:79 (#0),
                    scope: scope[75],
                },
                kind: _296 = dfa::onepass::Slots::insert(move _297, move _299) -> [return: bb217, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_299),
            StorageDead(_297),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                    scope: scope[75],
                },
                kind: _287 = dfa::onepass::Epsilons::set_slots(move _295, move _296) -> [return: bb218, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_296),
            StorageDead(_295),
            StorageDead(_291),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:669:40: 681:26 (#0),
                    scope: scope[73],
                },
                kind: goto -> bb219,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_288),
            FakeRead(ForLet(None), _287),
            StorageLive(_300),
            StorageLive(_301),
            StorageLive(_302),
            StorageLive(_303),
            _303 = &mut _1,
            StorageLive(_304),
            _304 = _283,
            StorageLive(_305),
            _305 = _287,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:25: 682:56 (#0),
                    scope: scope[74],
                },
                kind: _302 = dfa::onepass::InternalBuilder::<'_>::stack_push(move _303, move _304, move _305) -> [return: bb220, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_305),
            StorageDead(_304),
            StorageDead(_303),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                    scope: scope[74],
                },
                kind: _301 = <core::result::Result<(), dfa::onepass::BuildError> as core::ops::Try>::branch(move _302) -> [return: bb221, unwind: bb279],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_302),
            PlaceMention(_301),
            _306 = discriminant(_301),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                    scope: scope[74],
                },
                kind: switchInt(move _306) -> [0: bb224, 1: bb223, otherwise: bb222],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _301),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                    scope: scope[74],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
                    scope: scope[74],
                },
                kind: falseEdge -> [real: bb225, imaginary: bb224],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_310),
            _310 = ((_301 as Continue).0: ()),
            _300 = _310,
            StorageDead(_310),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:57: 682:58 (#0),
                    scope: scope[74],
                },
                kind: drop(_301) -> [return: bb227, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_307),
            _307 = move ((_301 as Break).0: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>),
            StorageLive(_309),
            _309 = move _307,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                    scope: scope[77],
                },
                kind: _0 = <core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>>>::from_residual(move _309) -> [return: bb226, unwind: bb276],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_309),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
                    scope: scope[74],
                },
                kind: drop(_307) -> [return: bb242, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_301),
            StorageDead(_300),
            _19 = const (),
            StorageDead(_287),
            StorageDead(_285),
            StorageDead(_284),
            StorageDead(_283),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:683:21: 683:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_316),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:692:40: 694:30 (#0),
                    scope: scope[80],
                },
                kind: _316 = dfa::onepass::BuildError::not_one_pass(const "multiple epsilon transitions to match state") -> [return: bb229, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::result::Result::<dfa::onepass::DFA, dfa::onepass::BuildError>::Err(move _316),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:694:30: 694:31 (#0),
                    scope: scope[80],
                },
                kind: drop(_316) -> [return: bb230, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_316),
            StorageDead(_314),
            StorageDead(_313),
            StorageDead(_312),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _313 = const (),
            StorageDead(_314),
            StorageDead(_313),
            (_1.5: bool) = const true,
            StorageLive(_317),
            StorageLive(_318),
            _318 = &mut (_1.0: dfa::onepass::DFA),
            StorageLive(_319),
            _319 = _128,
            StorageLive(_320),
            StorageLive(_321),
            StorageLive(_322),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:705:29: 705:53 (#0),
                    scope: scope[80],
                },
                kind: _322 = dfa::onepass::PatternEpsilons::empty() -> [return: bb232, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_323),
            _323 = _312,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:705:29: 706:60 (#0),
                    scope: scope[80],
                },
                kind: _321 = dfa::onepass::PatternEpsilons::set_pattern_id(move _322, move _323) -> [return: bb233, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_323),
            StorageDead(_322),
            StorageLive(_324),
            _324 = _149,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:705:29: 707:56 (#0),
                    scope: scope[80],
                },
                kind: _320 = dfa::onepass::PatternEpsilons::set_epsilons(move _321, move _324) -> [return: bb234, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_324),
            StorageDead(_321),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:703:25: 708:26 (#0),
                    scope: scope[80],
                },
                kind: _317 = dfa::onepass::DFA::set_pattern_epsilons(move _318, move _319, move _320) -> [return: bb235, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_320),
            StorageDead(_319),
            StorageDead(_318),
            StorageDead(_317),
            _19 = const (),
            StorageDead(_312),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:720:21: 720:22 (#0),
                    scope: scope[30],
                },
                kind: goto -> bb236,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_149),
            StorageDead(_148),
            StorageDead(_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#0),
                    scope: scope[25],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_326),
            _19 = const (),
            StorageDead(_326),
            StorageDead(_145),
            StorageDead(_128),
            StorageDead(_127),
            StorageDead(_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#0),
                    scope: scope[13],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_149),
            StorageDead(_148),
            StorageDead(_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb100,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_329),
            _123 = const (),
            StorageDead(_329),
            StorageDead(_124),
            StorageDead(_123),
            StorageLive(_331),
            StorageLive(_332),
            _332 = &mut _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:724:9: 724:30 (#0),
                    scope: scope[13],
                },
                kind: _331 = dfa::onepass::InternalBuilder::<'_>::shuffle_states(move _332) -> [return: bb240, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_332),
            StorageDead(_331),
            StorageLive(_333),
            _333 = move (_1.0: dfa::onepass::DFA),
            _0 = core::result::Result::<dfa::onepass::DFA, dfa::onepass::BuildError>::Ok(move _333),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:725:20: 725:21 (#0),
                    scope: scope[13],
                },
                kind: drop(_333) -> [return: bb241, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_333),
            StorageDead(_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:726:5: 726:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb275, unwind: bb332],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_307),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:57: 682:58 (#0),
                    scope: scope[74],
                },
                kind: drop(_301) -> [return: bb243, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_301),
            StorageDead(_300),
            StorageDead(_287),
            StorageDead(_285),
            StorageDead(_284),
            StorageDead(_283),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_279),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:57: 665:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_273) -> [return: bb245, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_273),
            StorageDead(_272),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[63],
                },
                kind: goto -> bb248,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_268),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:57: 664:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_262) -> [return: bb247, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_262),
            StorageDead(_261),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[63],
                },
                kind: goto -> bb248,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_260),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:60: 660:61 (#0),
                    scope: scope[58],
                },
                kind: drop(_249) -> [return: bb250, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_249),
            StorageDead(_248),
            StorageDead(_247),
            StorageDead(_244),
            StorageDead(_242),
            StorageDead(_241),
            StorageDead(_240),
            StorageDead(_236),
            StorageDead(_235),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_231),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:74: 656:75 (#0),
                    scope: scope[51],
                },
                kind: drop(_223) -> [return: bb252, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_223),
            StorageDead(_222),
            StorageDead(_218),
            StorageDead(_217),
            StorageDead(_216),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_212),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:79: 651:80 (#0),
                    scope: scope[45],
                },
                kind: drop(_204) -> [return: bb254, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_209),
            StorageDead(_204),
            StorageDead(_203),
            StorageDead(_202),
            StorageDead(_199),
            StorageDead(_197),
            StorageDead(_196),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_195) -> [return: bb255, unwind: bb301],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_192) -> [return: bb256, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:78: 646:79 (#0),
                    scope: scope[38],
                },
                kind: drop(_180) -> [return: bb258, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_180),
            StorageDead(_179),
            StorageDead(_178),
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            StorageDead(_171),
            StorageDead(_168),
            StorageDead(_167),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:74: 642:75 (#0),
                    scope: scope[31],
                },
                kind: drop(_156) -> [return: bb260, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
            StorageDead(_155),
            StorageDead(_154),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[30],
                },
                kind: goto -> bb261,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_149),
            StorageDead(_148),
            StorageDead(_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb264,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_141),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:56: 638:57 (#0),
                    scope: scope[25],
                },
                kind: drop(_135) -> [return: bb263, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[25],
                },
                kind: goto -> bb264,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
            StorageDead(_127),
            StorageDead(_124),
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[13],
                },
                kind: goto -> bb269,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:19: 616:20 (#0),
                    scope: scope[19],
                },
                kind: drop(_109) -> [return: bb266, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_107),
            StorageDead(_104),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            StorageDead(_97),
            StorageDead(_95),
            StorageDead(_94),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[13],
                },
                kind: goto -> bb269,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:63: 610:64 (#0),
                    scope: scope[13],
                },
                kind: drop(_83) -> [return: bb268, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[13],
                },
                kind: goto -> bb269,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            StorageDead(_54),
            StorageDead(_52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9: 48:10 (#173),
                    scope: scope[0],
                },
                kind: drop(_56) -> [return: bb271, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_53),
            StorageDead(_51),
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:71: 582:72 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb273, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb274,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:726:5: 726:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb275, unwind: bb332],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:726:6: 726:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2492),
                    scope: scope[77],
                },
                kind: drop(_309) -> [return: bb277, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
                    scope: scope[74],
                },
                kind: drop(_307) -> [return: bb278, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:57: 682:58 (#0),
                    scope: scope[74],
                },
                kind: drop(_301) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2492),
                    scope: scope[74],
                },
                kind: drop(_302) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2489),
                    scope: scope[69],
                },
                kind: drop(_281) -> [return: bb281, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
                    scope: scope[63],
                },
                kind: drop(_279) -> [return: bb282, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:57: 665:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_273) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2489),
                    scope: scope[63],
                },
                kind: drop(_274) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2487),
                    scope: scope[65],
                },
                kind: drop(_270) -> [return: bb285, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
                    scope: scope[63],
                },
                kind: drop(_268) -> [return: bb286, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:57: 664:58 (#0),
                    scope: scope[63],
                },
                kind: drop(_262) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2487),
                    scope: scope[63],
                },
                kind: drop(_263) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2485),
                    scope: scope[60],
                },
                kind: drop(_257) -> [return: bb289, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
                    scope: scope[58],
                },
                kind: drop(_255) -> [return: bb290, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:60: 660:61 (#0),
                    scope: scope[58],
                },
                kind: drop(_249) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2485),
                    scope: scope[58],
                },
                kind: drop(_250) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2480),
                    scope: scope[53],
                },
                kind: drop(_233) -> [return: bb293, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
                    scope: scope[51],
                },
                kind: drop(_231) -> [return: bb294, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:74: 656:75 (#0),
                    scope: scope[51],
                },
                kind: drop(_223) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2480),
                    scope: scope[51],
                },
                kind: drop(_224) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2478),
                    scope: scope[47],
                },
                kind: drop(_214) -> [return: bb297, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
                    scope: scope[45],
                },
                kind: drop(_212) -> [return: bb298, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:79: 651:80 (#0),
                    scope: scope[45],
                },
                kind: drop(_204) -> [return: bb300, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2478),
                    scope: scope[45],
                },
                kind: drop(_205) -> [return: bb300, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_195) -> [return: bb301, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:652:25: 652:26 (#2475),
                    scope: scope[43],
                },
                kind: drop(_192) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:650:49: 650:50 (#2476),
                    scope: scope[43],
                },
                kind: drop(_193) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2473),
                    scope: scope[40],
                },
                kind: drop(_189) -> [return: bb304, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
                    scope: scope[38],
                },
                kind: drop(_187) -> [return: bb305, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:78: 646:79 (#0),
                    scope: scope[38],
                },
                kind: drop(_180) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2473),
                    scope: scope[38],
                },
                kind: drop(_181) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2468),
                    scope: scope[33],
                },
                kind: drop(_165) -> [return: bb308, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
                    scope: scope[31],
                },
                kind: drop(_163) -> [return: bb309, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:74: 642:75 (#0),
                    scope: scope[31],
                },
                kind: drop(_156) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2468),
                    scope: scope[31],
                },
                kind: drop(_157) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2465),
                    scope: scope[27],
                },
                kind: drop(_143) -> [return: bb312, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
                    scope: scope[25],
                },
                kind: drop(_141) -> [return: bb313, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:56: 638:57 (#0),
                    scope: scope[25],
                },
                kind: drop(_135) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2465),
                    scope: scope[25],
                },
                kind: drop(_136) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2462),
                    scope: scope[21],
                },
                kind: drop(_121) -> [return: bb316, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
                    scope: scope[19],
                },
                kind: drop(_119) -> [return: bb317, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:19: 616:20 (#0),
                    scope: scope[19],
                },
                kind: drop(_109) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2462),
                    scope: scope[19],
                },
                kind: drop(_110) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2456),
                    scope: scope[15],
                },
                kind: drop(_92) -> [return: bb320, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
                    scope: scope[13],
                },
                kind: drop(_90) -> [return: bb321, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:63: 610:64 (#0),
                    scope: scope[13],
                },
                kind: drop(_83) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2456),
                    scope: scope[13],
                },
                kind: drop(_84) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2452),
                    scope: scope[8],
                },
                kind: drop(_62) -> [return: bb324, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
                    scope: scope[0],
                },
                kind: drop(_60) -> [return: bb325, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9: 48:10 (#173),
                    scope: scope[0],
                },
                kind: drop(_56) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2452),
                    scope: scope[0],
                },
                kind: drop(_57) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2444),
                    scope: scope[2],
                },
                kind: drop(_11) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb329, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:71: 582:72 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2444),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb331, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:726:5: 726:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb332, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/dfa/onepass.rs:581:5: 726:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<dfa::onepass::DFA, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:581:27: 581:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                ImplicitSelf(
                    Mut,
                ),
            ),
        ),
        ty: dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:581:14: 581:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), util::look::UnicodeWordBoundaryError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:70: 582:71 (#2445),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#2444),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:582:9: 582:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSetIter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSetIter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _14,
                                ),
                                regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                    },
                ),
            ),
        ),
        ty: util::look::LookSetIter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:581:5: 726:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::look::Look>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::look::LookSetIter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::look::LookSetIter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:9: 592:10 (#2446),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _21,
                                ),
                                regex-automata/src/dfa/onepass.rs:583:21: 583:51 (#2447),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:583:13: 583:17 (#2448),
                    },
                ),
            ),
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:583:13: 583:17 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:16: 589:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:16: 589:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:16: 589:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:33: 589:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:33: 589:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:589:13: 591:14 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:589:67: 591:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::onepass::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:590:28: 590:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:590:57: 590:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:593:9: 598:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:593:12: 593:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:593:12: 593:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:593:12: 593:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:593:12: 593:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:594:9: 598:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::onepass::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:595:24: 597:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:9: 603:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:12: 599:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:12: 599:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:12: 599:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::captures::GroupInfo,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:12: 599:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:12: 599:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:599:69: 603:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::onepass::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:600:24: 602:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9: 48:10 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} util::primitives::StateID, &'{erased} util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16: 38:22 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            ConstRef {
                def_id: DefId(0:19 ~ regex_automata[00dd]::dfa::DEAD),
            },
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:20: 604:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24: 38:31 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:26: 604:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:26: 604:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _56,
                                ),
                                regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:48: 604:49 (#2453),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _56,
                                ),
                                regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#2452),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:604:26: 604:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _51,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#173),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#173),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14: 39:22 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _51,
                                ),
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15: 38:32 (#173),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13: 39:34 (#173),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24: 39:33 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#173),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21: 40:46 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#173),
                },
            ),
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22: 40:31 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#173),
                },
            ),
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35: 40:45 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:17: 46:18 (#173),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:47: 46:18 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32: 41:65 (#173),
                            ),
                        ),
                        pat_span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#173),
                    },
                ),
            ),
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25: 41:29 (#173),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21: 45:114 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::panicking::AssertKind,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54: 45:58 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60: 45:70 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72: 45:83 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<core::fmt::Arguments<'{erased}>>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85: 45:113 (#173),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:609:35: 609:61 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:609:13: 609:32 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:609:13: 609:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:609:35: 609:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:609:35: 609:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:609:35: 609:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:9: 610:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:9: 610:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:30: 610:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:36: 610:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:36: 610:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _83,
                                ),
                                regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:62: 610:63 (#2457),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _83,
                                ),
                                regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#2456),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:610:9: 610:63 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:611:9: 618:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:611:12: 611:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} dfa::onepass::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:611:12: 611:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                },
            ),
        ),
        ty: nfa::thompson::nfa::PatternIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                },
            ),
        ),
        ty: nfa::thompson::nfa::PatternIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _97,
                                ),
                                regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::PatternIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::PatternIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::nfa::PatternIter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:13: 617:14 (#2459),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _102,
                                ),
                                regex-automata/src/dfa/onepass.rs:612:24: 612:43 (#2460),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:612:17: 612:20 (#2461),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:612:17: 612:20 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:613:17: 616:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:613:17: 613:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::PatternID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:614:21: 614:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:614:26: 614:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:615:21: 615:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:615:21: 615:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:615:21: 615:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:615:44: 615:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _109,
                                ),
                                regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:616:18: 616:19 (#2463),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _109,
                                ),
                                regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#2462),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:613:17: 616:19 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
                },
            ),
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:34: 625:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
                },
            ),
        ),
        ty: &'{erased} mut std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:34: 625:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:19: 625:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _124,
                                ),
                                regex-automata/src/dfa/onepass.rs:625:34: 625:63 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:625:19: 625:31 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:24: 625:30 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:626:26: 626:52 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:626:17: 626:23 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:626:17: 626:23 (#0),
            scope: scope[24],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:626:44: 626:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:626:26: 626:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:626:45: 626:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:632:13: 632:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::sparse_set::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:632:13: 632:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:13: 638:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:13: 638:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:29: 638:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:37: 638:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _135,
                                ),
                                regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:55: 638:56 (#2466),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _135,
                                ),
                                regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#2465),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:638:13: 638:56 (#0),
            scope: scope[25],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
                },
            ),
        ),
        ty: core::option::Option<(util::primitives::StateID, dfa::onepass::Epsilons)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:46: 639:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
                },
            ),
        ),
        ty: &'{erased} mut std::vec::Vec<(util::primitives::StateID, dfa::onepass::Epsilons), std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:46: 639:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:23: 639:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _145,
                                ),
                                regex-automata/src/dfa/onepass.rs:639:46: 639:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:639:23: 639:43 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:29: 639:31 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _145,
                                ),
                                regex-automata/src/dfa/onepass.rs:639:46: 639:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:639:23: 639:43 (#0),
                    },
                ),
            ),
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:33: 639:41 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:640:17: 721:18 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:640:24: 640:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:640:17: 721:18 (#0),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:640:24: 640:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:640:17: 721:18 (#0),
                },
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:640:39: 640:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:641:21: 641:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:641:21: 641:61 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:641:50: 641:59 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:25: 642:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:25: 642:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:49: 642:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:57: 642:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:64: 642:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _156,
                                ),
                                regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
            scope: scope[31],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:73: 642:74 (#2469),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _156,
                                ),
                                regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#2468),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:642:25: 642:74 (#0),
            scope: scope[31],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:644:21: 644:56 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::SparseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:644:45: 644:55 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
                },
            ),
        ),
        ty: &'{erased} [nfa::thompson::nfa::Transition],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _168,
                                ),
                                regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                    },
                ),
            ),
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[36],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::Iter<'{erased}, nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:25: 647:26 (#2470),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _173,
                                ),
                                regex-automata/src/dfa/onepass.rs:645:38: 645:63 (#2471),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:645:29: 645:34 (#2472),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:645:29: 645:34 (#0),
            scope: scope[37],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:29: 646:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:29: 646:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:53: 646:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:61: 646:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:68: 646:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _180,
                                ),
                                regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
            scope: scope[38],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:77: 646:78 (#2474),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _180,
                                ),
                                regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#2473),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:646:29: 646:78 (#0),
            scope: scope[38],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:649:21: 649:54 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::DenseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:649:44: 649:53 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                },
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                ],
                def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                },
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                ],
                def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
                },
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::DenseTransitions,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _192,
                                ),
                                regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                    },
                ),
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                ],
                def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[43],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<nfa::thompson::nfa::Transition>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}) }),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:8925 ~ regex_automata[00dd]::nfa::thompson::nfa::{impl#7}::iter::{opaque#0}) }),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:25: 652:26 (#2475),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _197,
                                ),
                                regex-automata/src/dfa/onepass.rs:650:38: 650:50 (#2476),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:650:29: 650:34 (#2477),
                    },
                ),
            ),
        ),
        ty: nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:650:29: 650:34 (#0),
            scope: scope[44],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:29: 651:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:29: 651:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:53: 651:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:61: 651:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::Transition,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:61: 651:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:69: 651:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _204,
                                ),
                                regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:78: 651:79 (#2479),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _204,
                                ),
                                regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#2478),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:651:29: 651:79 (#0),
            scope: scope[45],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:654:21: 654:57 (#0),
                    },
                ),
            ),
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:654:45: 654:49 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:654:21: 654:57 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:654:51: 654:55 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:655:37: 655:66 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:655:29: 655:34 (#0),
                    },
                ),
            ),
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:655:29: 655:34 (#0),
            scope: scope[50],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:655:37: 655:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:655:37: 655:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:655:61: 655:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:25: 656:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:25: 656:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:41: 656:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:47: 656:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:47: 656:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::look::LookSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:66: 656:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _223,
                                ),
                                regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
            scope: scope[51],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:73: 656:74 (#2481),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _223,
                                ),
                                regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#2480),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:656:25: 656:74 (#0),
            scope: scope[51],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:658:21: 658:62 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::boxed::Box<[util::primitives::StateID], std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:658:46: 658:60 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                },
            ),
        ),
        ty: core::iter::Rev<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                },
            ),
        ),
        ty: core::iter::Rev<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                },
            ),
        ),
        ty: core::slice::Iter<'{erased}, util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
                },
            ),
        ),
        ty: &'{erased} [util::primitives::StateID],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _236,
                                ),
                                regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                    },
                ),
            ),
        ),
        ty: core::iter::Rev<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[56],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Rev<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Rev<core::slice::Iter<'{erased}, util::primitives::StateID>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:25: 661:26 (#2482),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _242,
                                ),
                                regex-automata/src/dfa/onepass.rs:659:37: 659:60 (#2483),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:659:29: 659:33 (#2484),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:659:30: 659:33 (#0),
            scope: scope[57],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:29: 660:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:29: 660:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:45: 660:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:50: 660:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _249,
                                ),
                                regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
            scope: scope[58],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:59: 660:60 (#2486),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _249,
                                ),
                                regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#2485),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:660:29: 660:60 (#0),
            scope: scope[58],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:663:21: 663:64 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:663:52: 663:56 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:663:21: 663:64 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:663:58: 663:62 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:25: 664:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:25: 664:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:41: 664:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:47: 664:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _262,
                                ),
                                regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
            scope: scope[63],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:56: 664:57 (#2488),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _262,
                                ),
                                regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#2487),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:664:25: 664:57 (#0),
            scope: scope[63],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:25: 665:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:25: 665:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:41: 665:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:47: 665:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _273,
                                ),
                                regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
            scope: scope[63],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:56: 665:57 (#2490),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _273,
                                ),
                                regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#2489),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:665:25: 665:57 (#0),
            scope: scope[63],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:667:21: 667:64 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:667:48: 667:52 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:667:21: 667:64 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:667:54: 667:58 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:668:36: 668:51 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:668:29: 668:33 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:668:29: 668:33 (#0),
            scope: scope[72],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::SmallIndex,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:668:36: 668:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:669:40: 681:26 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:669:29: 669:37 (#0),
                    },
                ),
            ),
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:669:29: 669:37 (#0),
            scope: scope[73],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:669:43: 669:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:669:43: 669:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:669:50: 669:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/dfa/onepass.rs:679:42: 679:68 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:679:33: 679:39 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:679:33: 679:39 (#0),
            scope: scope[73],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:679:42: 679:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:679:49: 679:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:679:42: 679:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                },
            ),
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:680:29: 680:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                },
            ),
        ),
        ty: dfa::onepass::Slots,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:680:48: 680:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                },
            ),
        ),
        ty: dfa::onepass::Slots,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:680:48: 680:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                },
            ),
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:680:48: 680:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/dfa/onepass.rs:680:29: 680:80 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:680:72: 680:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:25: 682:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:25: 682:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:41: 682:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:47: 682:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _301,
                                ),
                                regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
            scope: scope[74],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, dfa::onepass::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:56: 682:57 (#2493),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _301,
                                ),
                                regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#2492),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:682:25: 682:57 (#0),
            scope: scope[74],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:640:17: 721:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:684:46: 686:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_150),
                                ),
                                regex-automata/src/dfa/onepass.rs:640:23: 640:42 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/dfa/onepass.rs:687:21: 687:58 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:687:46: 687:56 (#0),
            scope: scope[30],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:691:25: 695:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:691:28: 691:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:691:41: 695:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::onepass::BuildError,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:692:40: 694:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:703:25: 708:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:703:25: 703:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:704:29: 704:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::PatternEpsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:705:29: 707:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::PatternEpsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:705:29: 706:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::PatternEpsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:705:29: 705:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:706:49: 706:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: dfa::onepass::Epsilons,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:707:47: 707:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:639:13: 722:14 (#2467),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:625:9: 723:10 (#2464),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:724:9: 724:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut dfa::onepass::InternalBuilder<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:724:9: 724:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: dfa::onepass::DFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/dfa/onepass.rs:725:12: 725:20 (#0),
            scope: scope[0],
        },
    },
]