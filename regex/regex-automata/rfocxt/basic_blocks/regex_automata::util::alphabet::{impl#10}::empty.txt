[
    BasicBlockData {
        statements: [
            StorageLive(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/alphabet.rs:699:22: 699:38 (#0),
                    scope: scope[0],
                },
                kind: _1 = util::alphabet::ByteSet::empty() -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = util::alphabet::ByteClassSet(move _1),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/alphabet.rs:700:6: 700:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/alphabet.rs:698:5: 700:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::alphabet::ByteClassSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/alphabet.rs:698:30: 698:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::alphabet::ByteSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/alphabet.rs:699:22: 699:38 (#0),
            scope: scope[0],
        },
    },
]