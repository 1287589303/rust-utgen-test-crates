[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#0),
                    scope: scope[0],
                },
                kind: _7 = core::slice::<impl [core::option::Option<util::primitives::NonMaxUsize>]>::iter_mut(move _8) -> [return: bb1, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                    scope: scope[0],
                },
                kind: _6 = <core::slice::IterMut<'_, core::option::Option<util::primitives::NonMaxUsize>> as core::iter::IntoIterator>::into_iter(move _7) -> [return: bb2, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            PlaceMention(_6),
            StorageLive(_9),
            _9 = move _6,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
                    scope: scope[1],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb4, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &mut _9,
            _13 = &mut (*_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                    scope: scope[1],
                },
                kind: _12 = <core::slice::IterMut<'_, core::option::Option<util::primitives::NonMaxUsize>> as core::iter::Iterator>::next(move _13) -> [return: bb5, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            PlaceMention(_12),
            _15 = discriminant(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                    scope: scope[1],
                },
                kind: switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_17),
            _17 = move ((_12 as Some).0: &mut core::option::Option<util::primitives::NonMaxUsize>),
            StorageLive(_18),
            _18 = core::option::Option::<util::primitives::NonMaxUsize>::None,
            (*_17) = move _18,
            StorageDead(_18),
            _11 = const (),
            StorageDead(_17),
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
            _10 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
                    scope: scope[1],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = const (),
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_9),
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &mut (*_2),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &_1,
            _23 = &(*(*_24)),
            StorageLive(_25),
            _25 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:41 (#0),
                    scope: scope[0],
                },
                kind: _21 = nfa::thompson::backtrack::Cache::setup_search(move _22, move _23, move _25) -> [return: bb10, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                    scope: scope[0],
                },
                kind: _20 = <core::result::Result<(), util::search::MatchError> as core::ops::Try>::branch(move _21) -> [return: bb11, unwind: bb74],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            PlaceMention(_20),
            _26 = discriminant(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                    scope: scope[0],
                },
                kind: switchInt(move _26) -> [0: bb14, 1: bb13, otherwise: bb12],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_30),
            _30 = ((_20 as Continue).0: ()),
            _19 = _30,
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:42: 1374:43 (#0),
                    scope: scope[0],
                },
                kind: drop(_20) -> [return: bb17, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
            _27 = move ((_20 as Break).0: core::result::Result<core::convert::Infallible, util::search::MatchError>),
            StorageLive(_29),
            _29 = move _27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                    scope: scope[4],
                },
                kind: _0 = <core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, util::search::MatchError>>>::from_residual(move _29) -> [return: bb16, unwind: bb71],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
                    scope: scope[0],
                },
                kind: drop(_27) -> [return: bb68, unwind: bb73],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_20),
            StorageDead(_19),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1375:12: 1375:27 (#0),
                    scope: scope[0],
                },
                kind: _32 = util::search::Input::<'_>::is_done(move _33) -> [return: bb18, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1375:12: 1375:27 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _32) -> [0: bb20, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            StorageLive(_35),
            _35 = core::option::Option::<util::search::HalfMatch>::None,
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _35),
            StorageDead(_35),
            StorageDead(_32),
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
            _31 = const (),
            StorageDead(_32),
            StorageDead(_31),
            StorageLive(_38),
            StorageLive(_39),
            StorageLive(_40),
            _40 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1378:42: 1378:62 (#0),
                    scope: scope[0],
                },
                kind: _39 = util::search::Input::<'_>::get_anchored(move _40) -> [return: bb21, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            PlaceMention(_39),
            _41 = discriminant(_39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1378:36: 1378:62 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _41) -> [0: bb23, 1: bb24, 2: bb25, otherwise: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _39),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1378:42: 1378:62 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1381:13: 1381:25 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb26, imaginary: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1389:13: 1389:26 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb29, imaginary: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_48),
            _48 = ((_39 as Pattern).0: util::primitives::PatternID),
            StorageLive(_49),
            StorageLive(_50),
            _50 = &((*_1).1: nfa::thompson::nfa::NFA),
            StorageLive(_51),
            _51 = _48,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1390:45: 1390:72 (#0),
                    scope: scope[8],
                },
                kind: _49 = nfa::thompson::nfa::NFA::start_pattern(move _50, move _51) -> [return: bb31, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_42),
            StorageLive(_43),
            _43 = &((*_1).1: nfa::thompson::nfa::NFA),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1382:17: 1382:52 (#0),
                    scope: scope[0],
                },
                kind: _42 = nfa::thompson::nfa::NFA::is_always_start_anchored(move _43) -> [return: bb27, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageLive(_44),
            StorageLive(_45),
            _45 = &((*_1).1: nfa::thompson::nfa::NFA),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1387:17: 1387:42 (#0),
                    scope: scope[0],
                },
                kind: _44 = nfa::thompson::nfa::NFA::start_anchored(move _45) -> [return: bb28, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
            _38 = (move _42, move _44),
            StorageDead(_44),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1388:13: 1388:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_46),
            StorageLive(_47),
            _47 = &((*_1).1: nfa::thompson::nfa::NFA),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1389:37: 1389:62 (#0),
                    scope: scope[0],
                },
                kind: _46 = nfa::thompson::nfa::NFA::start_anchored(move _47) -> [return: bb30, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            _38 = (const true, move _46),
            StorageDead(_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1389:62: 1389:63 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
            StorageDead(_50),
            PlaceMention(_49),
            _52 = discriminant(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1390:39: 1390:72 (#0),
                    scope: scope[8],
                },
                kind: switchInt(move _52) -> [0: bb33, 1: bb34, otherwise: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1390:45: 1390:72 (#0),
                    scope: scope[8],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1391:17: 1391:21 (#0),
                    scope: scope[8],
                },
                kind: falseEdge -> [real: bb35, imaginary: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_55),
            _55 = ((_49 as Some).0: util::primitives::StateID),
            StorageLive(_56),
            _56 = _55,
            _38 = (const true, move _56),
            StorageDead(_56),
            StorageDead(_55),
            StorageDead(_49),
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1393:13: 1393:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb36,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_54),
            _54 = core::option::Option::<util::search::HalfMatch>::None,
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _54),
            StorageDead(_54),
            StorageDead(_49),
            StorageDead(_48),
            StorageDead(_39),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            PlaceMention(_38),
            StorageLive(_36),
            _36 = (_38.0: bool),
            StorageLive(_37),
            _37 = (_38.1: util::primitives::StateID),
            StorageDead(_39),
            StorageDead(_38),
            StorageLive(_57),
            StorageLive(_58),
            _58 = _36,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1395:12: 1395:20 (#0),
                    scope: scope[7],
                },
                kind: switchInt(move _58) -> [0: bb40, otherwise: bb37],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_60),
            StorageLive(_61),
            _61 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1396:22: 1396:35 (#0),
                    scope: scope[7],
                },
                kind: _60 = util::search::Input::<'_>::start(move _61) -> [return: bb38, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            FakeRead(ForLet(None), _60),
            StorageLive(_62),
            StorageLive(_63),
            _63 = &(*_1),
            StorageLive(_64),
            _64 = &mut (*_2),
            StorageLive(_65),
            _65 = &(*_3),
            StorageLive(_66),
            _66 = _60,
            StorageLive(_67),
            _67 = _37,
            StorageLive(_68),
            _68 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1397:23: 1397:72 (#0),
                    scope: scope[10],
                },
                kind: _62 = nfa::thompson::backtrack::BoundedBacktracker::backtrack(move _63, move _64, move _65, move _66, move _67, move _68) -> [return: bb39, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_65),
            StorageDead(_64),
            StorageDead(_63),
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _62),
            StorageDead(_62),
            StorageDead(_60),
            StorageDead(_58),
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb67,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _57 = const (),
            StorageDead(_58),
            StorageDead(_57),
            StorageLive(_69),
            StorageLive(_70),
            StorageLive(_71),
            StorageLive(_72),
            _72 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:36 (#0),
                    scope: scope[7],
                },
                kind: _71 = nfa::thompson::backtrack::BoundedBacktracker::get_config(move _72) -> [return: bb41, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _70 = &(*_71),
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:52 (#0),
                    scope: scope[7],
                },
                kind: _69 = nfa::thompson::backtrack::Config::get_prefilter(move _70) -> [return: bb42, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
            FakeRead(ForLet(None), _69),
            StorageDead(_71),
            StorageLive(_73),
            StorageLive(_74),
            _74 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1400:22: 1400:35 (#0),
                    scope: scope[11],
                },
                kind: _73 = util::search::Input::<'_>::start(move _74) -> [return: bb43, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_74),
            FakeRead(ForLet(None), _73),
            StorageLive(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb44,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#0),
                    scope: scope[12],
                },
                kind: falseUnwind -> [real: bb45, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_76),
            StorageLive(_77),
            _77 = _73,
            StorageLive(_78),
            StorageLive(_79),
            _79 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:21: 1401:32 (#0),
                    scope: scope[12],
                },
                kind: _78 = util::search::Input::<'_>::end(move _79) -> [return: bb46, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            _76 = Le(move _77, move _78),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:15: 1401:32 (#0),
                    scope: scope[12],
                },
                kind: switchInt(move _76) -> [0: bb65, otherwise: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            StorageLive(_80),
            PlaceMention(_69),
            _81 = discriminant(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1402:20: 1402:33 (#0),
                    scope: scope[13],
                },
                kind: switchInt(move _81) -> [1: bb48, otherwise: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1402:20: 1402:33 (#0),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb49, imaginary: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_82),
            _82 = &((_69 as Some).0: &util::prefilter::Prefilter),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            _85 = _73,
            StorageLive(_86),
            StorageLive(_87),
            _87 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1403:43: 1403:54 (#0),
                    scope: scope[13],
                },
                kind: _86 = util::search::Input::<'_>::end(move _87) -> [return: bb50, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            _84 = core::ops::Range::<usize> { start: move _85, end: move _86 },
            StorageDead(_86),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1403:28: 1403:55 (#0),
                    scope: scope[13],
                },
                kind: _83 = <util::search::Span as core::convert::From<core::ops::Range<usize>>>::from(move _84) -> [return: bb51, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            FakeRead(ForLet(None), _83),
            StorageLive(_88),
            StorageLive(_89),
            _89 = &(*(*_82)),
            StorageLive(_90),
            StorageLive(_91),
            StorageLive(_92),
            _92 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:32: 1404:48 (#0),
                    scope: scope[14],
                },
                kind: _91 = util::search::Input::<'_>::haystack(move _92) -> [return: bb52, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _90 = &(*_91),
            StorageDead(_92),
            StorageLive(_93),
            _93 = _83,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:23: 1404:55 (#0),
                    scope: scope[14],
                },
                kind: _88 = util::prefilter::Prefilter::find(move _89, move _90, move _93) -> [return: bb53, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
            StorageDead(_90),
            StorageDead(_89),
            PlaceMention(_88),
            _94 = discriminant(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1404:55 (#0),
                    scope: scope[14],
                },
                kind: switchInt(move _94) -> [0: bb55, 1: bb56, otherwise: bb54],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:23: 1404:55 (#0),
                    scope: scope[14],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1405:21: 1405:25 (#0),
                    scope: scope[14],
                },
                kind: falseEdge -> [real: bb57, imaginary: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_96),
            _96 = &((_88 as Some).0: util::search::Span),
            StorageLive(_97),
            _97 = ((*_96).0: usize),
            _73 = move _97,
            _80 = const (),
            StorageDead(_97),
            StorageDead(_96),
            StorageDead(_83),
            StorageDead(_91),
            StorageDead(_88),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1402:13: 1408:14 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _75 = const (),
            StorageDead(_83),
            StorageDead(_91),
            StorageDead(_88),
            StorageDead(_82),
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _80 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1402:13: 1408:14 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb59,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageLive(_98),
            StorageLive(_99),
            StorageLive(_100),
            _100 = &(*_1),
            StorageLive(_101),
            _101 = &mut (*_2),
            StorageLive(_102),
            _102 = &(*_3),
            StorageLive(_103),
            _103 = _73,
            StorageLive(_104),
            _104 = _37,
            StorageLive(_105),
            _105 = &mut (*_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1409:31: 1409:80 (#0),
                    scope: scope[16],
                },
                kind: _99 = nfa::thompson::backtrack::BoundedBacktracker::backtrack(move _100, move _101, move _102, move _103, move _104, move _105) -> [return: bb60, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_104),
            StorageDead(_103),
            StorageDead(_102),
            StorageDead(_101),
            StorageDead(_100),
            PlaceMention(_99),
            _106 = discriminant(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1409:20: 1409:28 (#0),
                    scope: scope[16],
                },
                kind: switchInt(move _106) -> [1: bb61, otherwise: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1409:20: 1409:28 (#0),
                    scope: scope[16],
                },
                kind: falseEdge -> [real: bb62, imaginary: bb63],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_107),
            _107 = ((_99 as Some).0: util::search::HalfMatch),
            StorageLive(_109),
            StorageLive(_110),
            _110 = _107,
            _109 = core::option::Option::<util::search::HalfMatch>::Some(move _110),
            StorageDead(_110),
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _109),
            StorageDead(_109),
            StorageDead(_107),
            StorageDead(_99),
            StorageDead(_98),
            StorageDead(_76),
            StorageDead(_75),
            StorageDead(_73),
            StorageDead(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb67,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = const (),
            StorageDead(_99),
            StorageDead(_98),
            _111 = AddWithOverflow(_73, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1413:13: 1413:20 (#0),
                    scope: scope[12],
                },
                kind: assert(!move (_111.1: bool), "attempt to compute `{} + {}`, which would overflow", _73, const 1_usize) -> [success: bb64, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _73 = move (_111.0: usize),
            _10 = const (),
            StorageDead(_76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb44,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_78),
            StorageDead(_77),
            StorageLive(_113),
            _75 = const (),
            StorageDead(_113),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb66,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            StorageDead(_75),
            StorageLive(_115),
            _115 = core::option::Option::<util::search::HalfMatch>::None,
            _0 = core::result::Result::<core::option::Option<util::search::HalfMatch>, util::search::MatchError>::Ok(move _115),
            StorageDead(_115),
            StorageDead(_73),
            StorageDead(_69),
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1416:6: 1416:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:42: 1374:43 (#0),
                    scope: scope[0],
                },
                kind: drop(_20) -> [return: bb69, unwind: bb75],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageDead(_20),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb70,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1416:6: 1416:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3992),
                    scope: scope[4],
                },
                kind: drop(_29) -> [return: bb72, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
                    scope: scope[0],
                },
                kind: drop(_27) -> [return: bb73, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:42: 1374:43 (#0),
                    scope: scope[0],
                },
                kind: drop(_20) -> [return: bb75, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3992),
                    scope: scope[0],
                },
                kind: drop(_21) -> [return: bb75, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1357:5: 1416:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::option::Option<util::search::HalfMatch>, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1362:10: 1362:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1358:9: 1358:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1359:16: 1359:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1359:9: 1359:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1359:9: 1359:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1359:9: 1359:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1360:16: 1360:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1360:9: 1360:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1360:9: 1360:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1360:9: 1360:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/backtrack.rs:1361:16: 1361:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1361:9: 1361:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1361:9: 1361:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1361:9: 1361:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::IterMut<'{erased}, core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                    },
                ),
            ),
        ),
        ty: core::slice::IterMut<'{erased}, core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1357:5: 1416:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} mut core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::slice::IterMut<'{erased}, core::option::Option<util::primitives::NonMaxUsize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:9: 1373:10 (#3989),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _12,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1371:21: 1371:37 (#3990),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1371:13: 1371:17 (#3991),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::option::Option<util::primitives::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1371:13: 1371:17 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1372:21: 1372:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, util::search::MatchError>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:28: 1374:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:28: 1374:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:35: 1374:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _20,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, util::search::MatchError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:41: 1374:42 (#3993),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _20,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#3992),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1374:9: 1374:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1375:9: 1377:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1375:12: 1375:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1375:12: 1375:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1375:28: 1377:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1376:23: 1376:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1378:36: 1394:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1378:13: 1378:33 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1378:14: 1378:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1378:36: 1394:10 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1378:13: 1378:33 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1378:24: 1378:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (bool, util::primitives::StateID),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1378:36: 1394:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::search::Anchored,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1378:42: 1378:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1378:42: 1378:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1381:13: 1381:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1382:17: 1382:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1382:17: 1382:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1387:17: 1387:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1387:17: 1387:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1389:37: 1389:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1389:37: 1389:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _39,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1378:42: 1378:62 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1390:13: 1390:35 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1390:31: 1390:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::primitives::StateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1390:45: 1390:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::nfa::NFA,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1390:45: 1390:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::PatternID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1390:68: 1390:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1391:17: 1391:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1391:25: 1391:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1391:35: 1391:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _49,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1390:45: 1390:72 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1392:17: 1392:26 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1392:22: 1392:25 (#0),
            scope: scope[8],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1392:37: 1392:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1395:9: 1398:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1395:12: 1395:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1395:21: 1398:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1396:22: 1396:35 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1396:17: 1396:19 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1396:17: 1396:19 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1396:22: 1396:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:23: 1397:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:23: 1397:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:38: 1397:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:45: 1397:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:52: 1397:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:56: 1397:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1397:66: 1397:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:52 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1399:13: 1399:16 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<&'{erased} util::prefilter::Prefilter>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1399:13: 1399:16 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::Config,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1399:19: 1399:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1400:22: 1400:35 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1400:13: 1400:19 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1400:13: 1400:19 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1400:22: 1400:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:15: 1401:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:15: 1401:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:21: 1401:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:21: 1401:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1402:13: 1408:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1402:20: 1402:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _69,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1402:36: 1402:39 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1402:20: 1402:33 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} &'{erased} util::prefilter::Prefilter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1402:25: 1402:32 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/backtrack.rs:1403:28: 1403:55 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1403:21: 1403:25 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1403:21: 1403:25 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1403:39: 1403:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1403:39: 1403:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1403:43: 1403:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1403:43: 1403:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: core::option::Option<util::search::Span>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:23: 1404:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: &'{erased} util::prefilter::Prefilter,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:23: 1404:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:32: 1404:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:32: 1404:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:32: 1404:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1404:50: 1404:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1405:21: 1405:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1405:29: 1405:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _88,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1404:23: 1404:55 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1406:21: 1406:35 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1406:26: 1406:34 (#0),
            scope: scope[14],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1404:17: 1407:18 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1406:44: 1406:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:13: 1412:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:31: 1409:80 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} nfa::thompson::backtrack::BoundedBacktracker,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:31: 1409:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut nfa::thompson::backtrack::Cache,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:46: 1409:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:53: 1409:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:60: 1409:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:64: 1409:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut [core::option::Option<util::primitives::NonMaxUsize>],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:74: 1409:79 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:20: 1409:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _99,
                                ),
                                regex-automata/src/nfa/thompson/backtrack.rs:1409:31: 1409:80 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/backtrack.rs:1409:20: 1409:28 (#0),
                    },
                ),
            ),
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1409:25: 1409:27 (#0),
            scope: scope[16],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1410:13: 1412:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1411:27: 1411:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: util::search::HalfMatch,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1411:32: 1411:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1413:13: 1413:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1401:9: 1414:10 (#3996),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/backtrack.rs:1415:12: 1415:16 (#0),
            scope: scope[0],
        },
    },
]