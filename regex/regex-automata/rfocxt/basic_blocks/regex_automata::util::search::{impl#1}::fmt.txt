[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &mut (*_2),
            StorageLive(_14),
            StorageLive(_15),
            _15 = const "Input",
            _14 = &(*_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 776:32 (#0),
                    scope: scope[0],
                },
                kind: _12 = core::fmt::Formatter::<'_>::debug_struct(move _13, move _14) -> [return: bb1, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _11 = &mut _12,
            StorageDead(_14),
            StorageDead(_13),
            StorageLive(_16),
            StorageLive(_17),
            _17 = const "haystack",
            _16 = &(*_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:777:47: 777:62 (#0),
                    scope: scope[0],
                },
                kind: _23 = util::search::Input::<'_>::haystack(move _24) -> [return: bb2, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _22 = &(*_23),
            StorageDead(_24),
            _21 = util::escape::DebugHaystack::<'_>(move _22),
            StorageDead(_22),
            _20 = &_21,
            _19 = &(*_20),
            _18 = move _19 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 777:64 (#0),
                    scope: scope[0],
                },
                kind: _10 = core::fmt::DebugStruct::<'_, '_>::field(move _11, move _16, move _18) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = &mut (*_10),
            StorageDead(_18),
            StorageDead(_16),
            StorageDead(_11),
            StorageLive(_25),
            StorageLive(_26),
            _26 = const "span",
            _25 = &(*_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &((*_1).1: util::search::Span),
            _28 = &(*_29),
            _27 = move _28 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 778:39 (#0),
                    scope: scope[0],
                },
                kind: _8 = core::fmt::DebugStruct::<'_, '_>::field(move _9, move _25, move _27) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &mut (*_8),
            StorageDead(_27),
            StorageDead(_25),
            StorageDead(_9),
            StorageLive(_30),
            StorageLive(_31),
            _31 = const "anchored",
            _30 = &(*_31),
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            _34 = &((*_1).2: util::search::Anchored),
            _33 = &(*_34),
            _32 = move _33 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 779:47 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::fmt::DebugStruct::<'_, '_>::field(move _7, move _30, move _32) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &mut (*_6),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_7),
            StorageLive(_35),
            StorageLive(_36),
            _36 = const "earliest",
            _35 = &(*_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &((*_1).3: bool),
            _38 = &(*_39),
            _37 = move _38 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 780:47 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _35, move _37) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &mut (*_4),
            StorageDead(_37),
            StorageDead(_35),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb7, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_39),
            StorageDead(_36),
            StorageDead(_34),
            StorageDead(_31),
            StorageDead(_29),
            StorageDead(_26),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:782:6: 782:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/util/search.rs:773:5: 782:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:773:52: 773:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:773:12: 773:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/util/search.rs:773:22: 773:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/util/search.rs:773:19: 773:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/util/search.rs:773:19: 773:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:773:19: 773:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 780:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 780:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 779:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 779:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 778:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 778:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 777:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 777:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 776:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugStruct<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 776:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:9: 776:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:24: 776:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:776:24: 776:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:20: 777:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:20: 777:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:32: 777:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::escape::DebugHaystack<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:32: 777:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::escape::DebugHaystack<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:32: 777:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: util::escape::DebugHaystack<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:33: 777:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:47: 777:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:47: 777:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Input<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:777:47: 777:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:778:20: 778:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:778:20: 778:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:778:28: 778:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:778:28: 778:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:778:28: 778:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:779:20: 779:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:779:20: 779:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:779:32: 779:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Anchored,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:779:32: 779:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} util::search::Anchored,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:779:32: 779:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:780:20: 780:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:780:20: 780:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:780:32: 780:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:780:32: 780:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/util/search.rs:776:9: 781:22 (#0),
                },
            ),
        ),
        ty: &'{erased} bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/util/search.rs:780:32: 780:46 (#0),
            scope: scope[0],
        },
    },
]