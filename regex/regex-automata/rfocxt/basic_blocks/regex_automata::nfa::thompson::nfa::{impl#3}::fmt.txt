[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_2),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = [const "thompson::NFA(\n"],
            _9 = &_10,
            _8 = &(*_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1337),
                    scope: scope[0],
                },
                kind: _7 = core::fmt::Arguments::<'_>::new_const::<1>(move _8) -> [return: bb1, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1336),
                    scope: scope[0],
                },
                kind: _5 = core::fmt::Formatter::<'_>::write_fmt(move _6, move _7) -> [return: bb2, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                    scope: scope[0],
                },
                kind: _4 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            PlaceMention(_4),
            _11 = discriminant(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                    scope: scope[0],
                },
                kind: switchInt(move _11) -> [0: bb6, 1: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = ((_4 as Continue).0: ()),
            _3 = _15,
            StorageDead(_15),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            StorageLive(_22),
            _22 = &((*_1).0: std::vec::Vec<nfa::thompson::nfa::State>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:47 (#0),
                    scope: scope[0],
                },
                kind: _21 = <std::vec::Vec<nfa::thompson::nfa::State> as core::ops::Deref>::deref(move _22) -> [return: bb9, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = ((_4 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_14),
            _14 = _12,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                    scope: scope[2],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _14) -> [return: bb8, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_14),
            StorageDead(_12),
            StorageDead(_10),
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb106,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = &(*_21),
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:47 (#0),
                    scope: scope[0],
                },
                kind: _19 = core::slice::<impl [nfa::thompson::nfa::State]>::iter(move _20) -> [return: bb10, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#0),
                    scope: scope[0],
                },
                kind: _18 = <core::slice::Iter<'_, nfa::thompson::nfa::State> as util::primitives::IteratorIndexExt>::with_state_ids(move _19) -> [return: bb11, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                    scope: scope[0],
                },
                kind: _17 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::nfa::State>> as core::iter::IntoIterator>::into_iter(move _18) -> [return: bb12, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            PlaceMention(_17),
            StorageLive(_23),
            _23 = move _17,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
                    scope: scope[5],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
                    scope: scope[5],
                },
                kind: falseUnwind -> [real: bb14, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &mut _23,
            _27 = &mut (*_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                    scope: scope[5],
                },
                kind: _26 = <util::primitives::WithStateIDIter<core::slice::Iter<'_, nfa::thompson::nfa::State>> as core::iter::Iterator>::next(move _27) -> [return: bb15, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            PlaceMention(_26),
            _29 = discriminant(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                    scope: scope[5],
                },
                kind: switchInt(move _29) -> [0: bb17, 1: bb18, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                    scope: scope[5],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = (((_26 as Some).0: (util::primitives::StateID, &nfa::thompson::nfa::State)).0: util::primitives::StateID),
            StorageLive(_32),
            _32 = (((_26 as Some).0: (util::primitives::StateID, &nfa::thompson::nfa::State)).1: &nfa::thompson::nfa::State),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &_31,
            StorageLive(_36),
            _36 = &((*_1).1: util::primitives::StateID),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1463:29: 1463:55 (#0),
                    scope: scope[6],
                },
                kind: _34 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _35, move _36) -> [return: bb20, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = const (),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_16),
            StorageLive(_86),
            StorageLive(_87),
            _87 = &((*_1).3: std::vec::Vec<util::primitives::StateID>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1472:27: 1472:51 (#0),
                    scope: scope[0],
                },
                kind: _86 = std::vec::Vec::<util::primitives::StateID>::len(move _87) -> [return: bb44, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1463:29: 1463:55 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _34) -> [0: bb22, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            _33 = const '^',
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1463:26: 1469:14 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &_31,
            StorageLive(_39),
            _39 = &((*_1).2: util::primitives::StateID),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1465:23: 1465:51 (#0),
                    scope: scope[6],
                },
                kind: _37 = <util::primitives::StateID as core::cmp::PartialEq>::eq(move _38, move _39) -> [return: bb23, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1465:23: 1465:51 (#0),
                    scope: scope[6],
                },
                kind: switchInt(move _37) -> [0: bb25, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            _33 = const '>',
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1465:20: 1469:14 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            _33 = const ' ',
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1465:20: 1469:14 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1463:26: 1469:14 (#0),
                    scope: scope[6],
                },
                kind: goto -> bb27,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            FakeRead(ForLet(None), _33),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = &mut (*_2),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            _48 = [const "", const "", const ": ", const "\n"],
            _47 = &_48,
            _46 = &(*_47),
            _45 = move _46 as &[&str] (PointerCoercion(Unsize)),
            StorageDead(_46),
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            _55 = &_33,
            _54 = &(*_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:26: 1470:28 (#1339),
                    scope: scope[7],
                },
                kind: _53 = core::fmt::rt::Argument::<'_>::new_display::<char>(move _54) -> [return: bb28, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageLive(_56),
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &_31,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:51: 1470:65 (#0),
                    scope: scope[7],
                },
                kind: _59 = util::primitives::StateID::as_usize(move _60) -> [return: bb29, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_60),
            _58 = &_59,
            _57 = &(*_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:28: 1470:34 (#1339),
                    scope: scope[7],
                },
                kind: _56 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _57) -> [return: bb30, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            _63 = &_32,
            _62 = &(*_63),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:36: 1470:40 (#1339),
                    scope: scope[7],
                },
                kind: _61 = core::fmt::rt::Argument::<'_>::new_debug::<&nfa::thompson::nfa::State>(move _62) -> [return: bb31, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            _52 = [move _53, move _56, move _61],
            StorageDead(_61),
            StorageDead(_56),
            StorageDead(_53),
            _51 = &_52,
            _50 = &(*_51),
            _49 = move _50 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)),
            StorageDead(_50),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            StorageLive(_68),
            StorageLive(_69),
            _69 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_70),
            _70 = core::fmt::rt::Count::Implied,
            StorageLive(_71),
            _71 = core::fmt::rt::Count::Implied,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
                    scope: scope[7],
                },
                kind: _68 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _69, const 0_u32, move _70, move _71) -> [return: bb32, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
            StorageDead(_70),
            StorageDead(_69),
            StorageLive(_72),
            StorageLive(_73),
            _73 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_74),
            _74 = core::fmt::rt::Count::Implied,
            StorageLive(_75),
            _75 = core::fmt::rt::Count::Is(const 6_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
                    scope: scope[7],
                },
                kind: _72 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _73, const 8_u32, move _74, move _75) -> [return: bb33, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
            StorageDead(_74),
            StorageDead(_73),
            StorageLive(_76),
            StorageLive(_77),
            _77 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_78),
            _78 = core::fmt::rt::Count::Implied,
            StorageLive(_79),
            _79 = core::fmt::rt::Count::Implied,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
                    scope: scope[7],
                },
                kind: _76 = core::fmt::rt::Placeholder::new(const 2_usize, const ' ', move _77, const 0_u32, move _78, move _79) -> [return: bb34, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageDead(_78),
            StorageDead(_77),
            _67 = [move _68, move _72, move _76],
            StorageDead(_76),
            StorageDead(_72),
            StorageDead(_68),
            _66 = &_67,
            _65 = &(*_66),
            _64 = move _65 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize)),
            StorageDead(_65),
            StorageLive(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
                    scope: scope[7],
                },
                kind: _80 = core::fmt::rt::UnsafeArg::new() -> [return: bb35, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
                    scope: scope[7],
                },
                kind: _44 = core::fmt::Arguments::<'_>::new_v1_formatted(move _45, move _49, move _64, move _80) -> [return: bb36, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_64),
            StorageDead(_49),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1338),
                    scope: scope[7],
                },
                kind: _42 = core::fmt::Formatter::<'_>::write_fmt(move _43, move _44) -> [return: bb37, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_43),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                    scope: scope[7],
                },
                kind: _41 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _42) -> [return: bb38, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            PlaceMention(_41),
            _81 = discriminant(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                    scope: scope[7],
                },
                kind: switchInt(move _81) -> [0: bb41, 1: bb40, otherwise: bb39],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb42, imaginary: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_85),
            _85 = ((_41 as Continue).0: ()),
            _40 = _85,
            StorageDead(_85),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_63),
            StorageDead(_59),
            StorageDead(_58),
            StorageDead(_55),
            StorageDead(_52),
            StorageDead(_51),
            StorageDead(_48),
            StorageDead(_47),
            StorageDead(_41),
            StorageDead(_40),
            _25 = const (),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
                    scope: scope[5],
                },
                kind: goto -> bb13,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_82),
            _82 = ((_41 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_84),
            _84 = _82,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                    scope: scope[9],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _84) -> [return: bb43, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_82),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_63),
            StorageDead(_59),
            StorageDead(_58),
            StorageDead(_55),
            StorageDead(_52),
            StorageDead(_51),
            StorageDead(_48),
            StorageDead(_47),
            StorageDead(_41),
            StorageDead(_40),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_31),
            StorageDead(_28),
            StorageDead(_26),
            StorageDead(_25),
            StorageDead(_23),
            StorageDead(_21),
            StorageDead(_17),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb106,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            FakeRead(ForLet(None), _86),
            StorageLive(_88),
            StorageLive(_89),
            StorageLive(_90),
            _90 = _86,
            _89 = Gt(move _90, const 1_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1473:12: 1473:27 (#0),
                    scope: scope[12],
                },
                kind: switchInt(move _89) -> [0: bb77, otherwise: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            StorageLive(_91),
            StorageLive(_92),
            StorageLive(_93),
            StorageLive(_94),
            _94 = &mut (*_2),
            StorageLive(_95),
            StorageLive(_96),
            StorageLive(_97),
            StorageLive(_98),
            _98 = [const "\n"],
            _97 = &_98,
            _96 = &(*_97),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1341),
                    scope: scope[12],
                },
                kind: _95 = core::fmt::Arguments::<'_>::new_const::<1>(move _96) -> [return: bb46, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1340),
                    scope: scope[12],
                },
                kind: _93 = core::fmt::Formatter::<'_>::write_fmt(move _94, move _95) -> [return: bb47, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            StorageDead(_94),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                    scope: scope[12],
                },
                kind: _92 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _93) -> [return: bb48, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
            PlaceMention(_92),
            _99 = discriminant(_92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                    scope: scope[12],
                },
                kind: switchInt(move _99) -> [0: bb51, 1: bb50, otherwise: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _92),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                    scope: scope[12],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb52, imaginary: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_103),
            _103 = ((_92 as Continue).0: ()),
            _91 = _103,
            StorageDead(_103),
            StorageDead(_98),
            StorageDead(_97),
            StorageDead(_92),
            StorageDead(_91),
            StorageLive(_104),
            StorageLive(_105),
            StorageLive(_106),
            _106 = _86,
            _105 = core::ops::Range::<usize> { start: const 0_usize, end: move _106 },
            StorageDead(_106),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                    scope: scope[12],
                },
                kind: _104 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _105) -> [return: bb54, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_100),
            _100 = ((_92 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_102),
            _102 = _100,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                    scope: scope[14],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _102) -> [return: bb53, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageDead(_100),
            StorageDead(_98),
            StorageDead(_97),
            StorageDead(_92),
            StorageDead(_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            PlaceMention(_104),
            StorageLive(_107),
            _107 = move _104,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                    scope: scope[17],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                    scope: scope[17],
                },
                kind: falseUnwind -> [real: bb56, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_108),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            _111 = &mut _107,
            _110 = &mut (*_111),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                    scope: scope[17],
                },
                kind: _109 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _110) -> [return: bb57, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
            PlaceMention(_109),
            _112 = discriminant(_109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                    scope: scope[17],
                },
                kind: switchInt(move _112) -> [0: bb59, 1: bb60, otherwise: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                    scope: scope[17],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                    scope: scope[17],
                },
                kind: falseEdge -> [real: bb61, imaginary: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_114),
            _114 = ((_109 as Some).0: usize),
            StorageLive(_115),
            StorageLive(_116),
            StorageLive(_117),
            _117 = &((*_1).3: std::vec::Vec<util::primitives::StateID>),
            StorageLive(_118),
            _118 = _114,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1476:45: 1476:50 (#0),
                    scope: scope[18],
                },
                kind: _116 = <std::vec::Vec<util::primitives::StateID> as core::ops::Index<usize>>::index(move _117, move _118) -> [return: bb62, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _88 = const (),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_107),
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1473:9: 1479:10 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _115 = (*_116),
            StorageDead(_118),
            StorageDead(_117),
            FakeRead(ForLet(None), _115),
            StorageDead(_116),
            StorageLive(_119),
            StorageLive(_120),
            StorageLive(_121),
            StorageLive(_122),
            _122 = &mut (*_2),
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            StorageLive(_126),
            StorageLive(_127),
            _127 = [const "START(", const "): ", const "\n"],
            _126 = &_127,
            _125 = &(*_126),
            _124 = move _125 as &[&str] (PointerCoercion(Unsize)),
            StorageDead(_125),
            StorageLive(_128),
            StorageLive(_129),
            StorageLive(_130),
            StorageLive(_131),
            StorageLive(_132),
            StorageLive(_133),
            StorageLive(_134),
            _134 = &_114,
            _133 = &(*_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:36: 1477:42 (#1343),
                    scope: scope[19],
                },
                kind: _132 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _133) -> [return: bb63, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageLive(_135),
            StorageLive(_136),
            StorageLive(_137),
            StorageLive(_138),
            StorageLive(_139),
            _139 = &_115,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:57: 1477:71 (#0),
                    scope: scope[19],
                },
                kind: _138 = util::primitives::StateID::as_usize(move _139) -> [return: bb64, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            _137 = &_138,
            _136 = &(*_137),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:45: 1477:49 (#1343),
                    scope: scope[19],
                },
                kind: _135 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _136) -> [return: bb65, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
            _131 = [move _132, move _135],
            StorageDead(_135),
            StorageDead(_132),
            _130 = &_131,
            _129 = &(*_130),
            _128 = move _129 as &[core::fmt::rt::Argument<'_>] (PointerCoercion(Unsize)),
            StorageDead(_129),
            StorageLive(_140),
            StorageLive(_141),
            StorageLive(_142),
            StorageLive(_143),
            StorageLive(_144),
            StorageLive(_145),
            _145 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_146),
            _146 = core::fmt::rt::Count::Implied,
            StorageLive(_147),
            _147 = core::fmt::rt::Count::Is(const 6_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
                    scope: scope[19],
                },
                kind: _144 = core::fmt::rt::Placeholder::new(const 0_usize, const ' ', move _145, const 8_u32, move _146, move _147) -> [return: bb66, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_147),
            StorageDead(_146),
            StorageDead(_145),
            StorageLive(_148),
            StorageLive(_149),
            _149 = core::fmt::rt::Alignment::Unknown,
            StorageLive(_150),
            _150 = core::fmt::rt::Count::Implied,
            StorageLive(_151),
            _151 = core::fmt::rt::Count::Implied,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
                    scope: scope[19],
                },
                kind: _148 = core::fmt::rt::Placeholder::new(const 1_usize, const ' ', move _149, const 0_u32, move _150, move _151) -> [return: bb67, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_151),
            StorageDead(_150),
            StorageDead(_149),
            _143 = [move _144, move _148],
            StorageDead(_148),
            StorageDead(_144),
            _142 = &_143,
            _141 = &(*_142),
            _140 = move _141 as &[core::fmt::rt::Placeholder] (PointerCoercion(Unsize)),
            StorageDead(_141),
            StorageLive(_152),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
                    scope: scope[19],
                },
                kind: _152 = core::fmt::rt::UnsafeArg::new() -> [return: bb68, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
                    scope: scope[19],
                },
                kind: _123 = core::fmt::Arguments::<'_>::new_v1_formatted(move _124, move _128, move _140, move _152) -> [return: bb69, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
            StorageDead(_140),
            StorageDead(_128),
            StorageDead(_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1342),
                    scope: scope[19],
                },
                kind: _121 = core::fmt::Formatter::<'_>::write_fmt(move _122, move _123) -> [return: bb70, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
            StorageDead(_122),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                    scope: scope[19],
                },
                kind: _120 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _121) -> [return: bb71, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
            PlaceMention(_120),
            _153 = discriminant(_120),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                    scope: scope[19],
                },
                kind: switchInt(move _153) -> [0: bb74, 1: bb73, otherwise: bb72],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _120),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                    scope: scope[19],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb75, imaginary: bb74],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_157),
            _157 = ((_120 as Continue).0: ()),
            _119 = _157,
            StorageDead(_157),
            StorageDead(_143),
            StorageDead(_142),
            StorageDead(_138),
            StorageDead(_137),
            StorageDead(_134),
            StorageDead(_131),
            StorageDead(_130),
            StorageDead(_127),
            StorageDead(_126),
            StorageDead(_120),
            StorageDead(_119),
            _108 = const (),
            StorageDead(_115),
            StorageDead(_114),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
            _24 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                    scope: scope[17],
                },
                kind: goto -> bb55,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_154),
            _154 = ((_120 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_156),
            _156 = _154,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                    scope: scope[21],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _156) -> [return: bb76, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
            StorageDead(_154),
            StorageDead(_143),
            StorageDead(_142),
            StorageDead(_138),
            StorageDead(_137),
            StorageDead(_134),
            StorageDead(_131),
            StorageDead(_130),
            StorageDead(_127),
            StorageDead(_126),
            StorageDead(_120),
            StorageDead(_119),
            StorageDead(_115),
            StorageDead(_114),
            StorageDead(_111),
            StorageDead(_109),
            StorageDead(_108),
            StorageDead(_107),
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb104,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            _88 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1473:9: 1479:10 (#0),
                    scope: scope[12],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
            StorageLive(_158),
            StorageLive(_159),
            StorageLive(_160),
            StorageLive(_161),
            _161 = &mut (*_2),
            StorageLive(_162),
            StorageLive(_163),
            StorageLive(_164),
            StorageLive(_165),
            _165 = [const "\n"],
            _164 = &_165,
            _163 = &(*_164),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1345),
                    scope: scope[12],
                },
                kind: _162 = core::fmt::Arguments::<'_>::new_const::<1>(move _163) -> [return: bb79, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1344),
                    scope: scope[12],
                },
                kind: _160 = core::fmt::Formatter::<'_>::write_fmt(move _161, move _162) -> [return: bb80, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_162),
            StorageDead(_161),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                    scope: scope[12],
                },
                kind: _159 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _160) -> [return: bb81, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            PlaceMention(_159),
            _166 = discriminant(_159),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                    scope: scope[12],
                },
                kind: switchInt(move _166) -> [0: bb84, 1: bb83, otherwise: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _159),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                    scope: scope[12],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb85, imaginary: bb84],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_170),
            _170 = ((_159 as Continue).0: ()),
            _158 = _170,
            StorageDead(_170),
            StorageDead(_165),
            StorageDead(_164),
            StorageDead(_159),
            StorageDead(_158),
            StorageLive(_171),
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            _174 = &mut (*_2),
            StorageLive(_175),
            StorageLive(_176),
            StorageLive(_177),
            StorageLive(_178),
            _178 = [const "transition equivalence classes: ", const "\n"],
            _177 = &_178,
            _176 = &(*_177),
            StorageLive(_179),
            StorageLive(_180),
            StorageLive(_181),
            StorageLive(_182),
            StorageLive(_183),
            StorageLive(_184),
            _184 = &((*_1).6: util::alphabet::ByteClasses),
            _183 = &(*_184),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1483:46: 1483:50 (#1347),
                    scope: scope[12],
                },
                kind: _182 = core::fmt::rt::Argument::<'_>::new_debug::<util::alphabet::ByteClasses>(move _183) -> [return: bb87, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_167),
            _167 = ((_159 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_169),
            _169 = _167,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                    scope: scope[25],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _169) -> [return: bb86, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_169),
            StorageDead(_167),
            StorageDead(_165),
            StorageDead(_164),
            StorageDead(_159),
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_183),
            _181 = [move _182],
            StorageDead(_182),
            _180 = &_181,
            _179 = &(*_180),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1347),
                    scope: scope[12],
                },
                kind: _175 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _176, move _179) -> [return: bb88, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_179),
            StorageDead(_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1346),
                    scope: scope[12],
                },
                kind: _173 = core::fmt::Formatter::<'_>::write_fmt(move _174, move _175) -> [return: bb89, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_175),
            StorageDead(_174),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                    scope: scope[12],
                },
                kind: _172 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _173) -> [return: bb90, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_173),
            PlaceMention(_172),
            _185 = discriminant(_172),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                    scope: scope[12],
                },
                kind: switchInt(move _185) -> [0: bb93, 1: bb92, otherwise: bb91],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _172),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                    scope: scope[12],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb94, imaginary: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_189),
            _189 = ((_172 as Continue).0: ()),
            _171 = _189,
            StorageDead(_189),
            StorageDead(_184),
            StorageDead(_181),
            StorageDead(_180),
            StorageDead(_178),
            StorageDead(_177),
            StorageDead(_172),
            StorageDead(_171),
            StorageLive(_190),
            StorageLive(_191),
            StorageLive(_192),
            StorageLive(_193),
            _193 = &mut (*_2),
            StorageLive(_194),
            StorageLive(_195),
            StorageLive(_196),
            StorageLive(_197),
            _197 = [const ")\n"],
            _196 = &_197,
            _195 = &(*_196),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1349),
                    scope: scope[12],
                },
                kind: _194 = core::fmt::Arguments::<'_>::new_const::<1>(move _195) -> [return: bb96, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_186),
            _186 = ((_172 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_188),
            _188 = _186,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                    scope: scope[29],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _188) -> [return: bb95, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_188),
            StorageDead(_186),
            StorageDead(_184),
            StorageDead(_181),
            StorageDead(_180),
            StorageDead(_178),
            StorageDead(_177),
            StorageDead(_172),
            StorageDead(_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1348),
                    scope: scope[12],
                },
                kind: _192 = core::fmt::Formatter::<'_>::write_fmt(move _193, move _194) -> [return: bb97, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_194),
            StorageDead(_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                    scope: scope[12],
                },
                kind: _191 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _192) -> [return: bb98, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            PlaceMention(_191),
            _198 = discriminant(_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                    scope: scope[12],
                },
                kind: switchInt(move _198) -> [0: bb101, 1: bb100, otherwise: bb99],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                    scope: scope[12],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb102, imaginary: bb101],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_202),
            _202 = ((_191 as Continue).0: ()),
            _190 = _202,
            StorageDead(_202),
            StorageDead(_197),
            StorageDead(_196),
            StorageDead(_191),
            StorageDead(_190),
            StorageLive(_203),
            _203 = (),
            _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _203),
            StorageDead(_203),
            StorageDead(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1488:6: 1488:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb106,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_199),
            _199 = ((_191 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_201),
            _201 = _199,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                    scope: scope[33],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _201) -> [return: bb103, unwind: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_201),
            StorageDead(_199),
            StorageDead(_197),
            StorageDead(_196),
            StorageDead(_191),
            StorageDead(_190),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb105,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb106,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1488:6: 1488:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/nfa.rs:1460:5: 1488:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1460:50: 1460:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::Inner,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1460:12: 1460:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-automata/src/nfa/thompson/nfa.rs:1460:22: 1460:45 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/nfa.rs:1460:19: 1460:20 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1460:19: 1460:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1460:19: 1460:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1336),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:18: 1461:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1337),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:21: 1461:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:21: 1461:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:21: 1461:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:38: 1461:39 (#4403),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#4402),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1461:9: 1461:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::nfa::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::nfa::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, nfa::thompson::nfa::State>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::nfa::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [nfa::thompson::nfa::State],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<nfa::thompson::nfa::State, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _17,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                    },
                ),
            ),
        ),
        ty: util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::nfa::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1460:5: 1488:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(util::primitives::StateID, &'{erased} nfa::thompson::nfa::State)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::nfa::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut util::primitives::WithStateIDIter<core::slice::Iter<'{erased}, nfa::thompson::nfa::State>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:9: 1471:10 (#4404),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1462:13: 1462:25 (#4406),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:14: 1462:17 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _26,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1462:29: 1462:64 (#4405),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1462:13: 1462:25 (#4406),
                    },
                ),
            ),
        ),
        ty: &'{erased} nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1462:19: 1462:24 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/nfa.rs:1463:26: 1469:14 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1463:17: 1463:23 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1463:17: 1463:23 (#0),
            scope: scope[6],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1463:29: 1463:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1463:29: 1463:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1463:36: 1463:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1465:23: 1465:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1465:23: 1465:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1465:30: 1465:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1338),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:22: 1470:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:25: 1470:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:25: 1470:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:25: 1470:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:25: 1470:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:26: 1470:28 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:43: 1470:49 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:43: 1470:49 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:28: 1470:34 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:51: 1470:65 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:51: 1470:65 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:51: 1470:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:51: 1470:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:36: 1470:40 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:67: 1470:72 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} &'{erased} nfa::thompson::nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:67: 1470:72 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Placeholder; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::UnsafeArg,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1339),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _41,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:73: 1470:74 (#4410),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _41,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#4409),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1470:13: 1470:74 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/nfa.rs:1472:27: 1472:51 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1472:13: 1472:24 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1472:13: 1472:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1472:27: 1472:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1473:9: 1479:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1473:12: 1473:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1473:12: 1473:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1340),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:22: 1474:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1341),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:25: 1474:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:25: 1474:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:25: 1474:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _92,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:28: 1474:29 (#4413),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _92,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#4412),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1474:13: 1474:29 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                },
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
                },
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:27: 1475:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _104,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                    },
                ),
            ),
        ),
        ty: core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::ops::Range<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:13: 1478:14 (#4414),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _109,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1475:24: 1475:38 (#4415),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1475:17: 1475:20 (#4416),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1475:17: 1475:20 (#0),
            scope: scope[17],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-automata/src/nfa/thompson/nfa.rs:1476:27: 1476:50 (#0),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1476:21: 1476:24 (#0),
                    },
                ),
            ),
        ),
        ty: util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1476:21: 1476:24 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1476:45: 1476:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} std::vec::Vec<util::primitives::StateID, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1476:27: 1476:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1476:46: 1476:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1342),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:26: 1477:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:29: 1477:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:29: 1477:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:29: 1477:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:29: 1477:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:36: 1477:42 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:52: 1477:55 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:52: 1477:55 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:45: 1477:49 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:57: 1477:71 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:57: 1477:71 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:57: 1477:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::primitives::StateID,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:57: 1477:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Placeholder; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Placeholder,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Alignment,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Count,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::UnsafeArg,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1343),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _120,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:72: 1477:73 (#4418),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _120,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#4417),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1477:17: 1477:73 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1344),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:18: 1480:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1345),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:21: 1480:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:21: 1480:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:21: 1480:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _159,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:24: 1480:25 (#4420),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _159,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#4419),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1480:9: 1480:25 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1346),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1482:13: 1482:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1483:13: 1483:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1483:13: 1483:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1483:13: 1483:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1483:46: 1483:50 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::alphabet::ByteClasses,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1484:13: 1484:30 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} util::alphabet::ByteClasses,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1484:13: 1484:30 (#1347),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _172,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1485:10: 1485:11 (#4422),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _172,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#4421),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1481:9: 1485:11 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:9: 670:58 (#1348),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:18: 1486:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:670:24: 670:57 (#1349),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:21: 1486:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:21: 1486:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:21: 1486:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _191,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:25: 1486:26 (#4424),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _191,
                                ),
                                regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                            ),
                        ),
                        pat_span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#4423),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1486:9: 1486:26 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/nfa.rs:1487:12: 1487:14 (#0),
            scope: scope[0],
        },
    },
]