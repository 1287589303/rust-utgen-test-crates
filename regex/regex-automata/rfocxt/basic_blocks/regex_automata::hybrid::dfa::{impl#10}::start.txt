[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            _1 = core::option::Option::<util::search::HalfMatch>::None,
            StorageLive(_2),
            _2 = core::option::Option::<hybrid::id::LazyStateID>::None,
            StorageLive(_3),
            _3 = core::option::Option::<usize>::None,
            _0 = hybrid::dfa::OverlappingState { mat: move _1, id: move _2, at: const 0_usize, next_match_index: move _3, rev_eoi: const false },
            StorageDead(_3),
            StorageDead(_2),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/hybrid/dfa.rs:4224:6: 4224:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hybrid::dfa::OverlappingState,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:4216:23: 4216:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<util::search::HalfMatch>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:4218:18: 4218:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<hybrid::id::LazyStateID>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:4219:17: 4219:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/hybrid/dfa.rs:4221:31: 4221:35 (#0),
            scope: scope[0],
        },
    },
]