[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &mut (*_1),
            StorageLive(_3),
            _3 = nfa::thompson::builder::State::Fail,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1085:9: 1085:30 (#0),
                    scope: scope[0],
                },
                kind: _0 = nfa::thompson::builder::Builder::add(move _2, move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1086:6: 1086:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1085:29: 1085:30 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb3, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-automata/src/nfa/thompson/builder.rs:1084:5: 1086:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<util::primitives::StateID, nfa::thompson::error::BuildError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1084:35: 1084:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1084:21: 1084:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1085:9: 1085:30 (#0),
                },
            ),
        ),
        ty: &'{erased} mut nfa::thompson::builder::Builder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1085:9: 1085:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-automata/src/nfa/thompson/builder.rs:1085:9: 1085:30 (#0),
                },
            ),
        ),
        ty: nfa::thompson::builder::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-automata/src/nfa/thompson/builder.rs:1085:18: 1085:29 (#0),
            scope: scope[0],
        },
    },
]