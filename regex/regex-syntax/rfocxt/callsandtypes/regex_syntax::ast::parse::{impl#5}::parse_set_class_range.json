{"mod_name":"ast::parse","calls":["<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::bump_space","<core::option::Option<char> as core::cmp::PartialEq>::eq","ast::parse::ParserI::<'_, P>::error","ast::ClassSetRange::is_valid","<core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","ast::parse::ParserI::<'_, P>::unclosed_class_error","ast::parse::Primitive::into_class_literal::<P>","ast::parse::ParserI::<'_, P>::peek_space","<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::bump_and_bump_space","ast::parse::Primitive::span","ast::parse::ParserI::<'_, P>::char","ast::parse::ParserI::<'_, P>::parse_set_class_item","ast::parse::ParserI::<'_, P>::is_eof","ast::parse::Primitive::into_class_set_item::<P>","ast::Span::new"],"types":["ast::parse::Primitive","ast::Span","ast::parse::ParserI<'_, P>","ast::ClassSetRange","core::result::Result<ast::Literal, ast::Error>","()","ast::Error","bool","core::option::Option<char>","core::result::Result<core::convert::Infallible, ast::Error>","ast::ClassSetItem","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::parse::Primitive>","P","!","core::result::Result<ast::ClassSetItem, ast::Error>","isize","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","core::result::Result<ast::parse::Primitive, ast::Error>","char","ast::Position","ast::Literal","core::convert::Infallible","ast::ErrorKind"]}