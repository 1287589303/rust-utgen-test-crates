{"mod_name":"ast::parse","calls":["core::panicking::assert_failed::<char, char>","core::cell::RefCell::<std::vec::Vec<ast::parse::ClassState>>::borrow","ast::parse::ParserI::<'_, P>::unclosed_class_error","ast::parse::ParserI::<'_, P>::parse_set_class_range","ast::parse::ParserI::<'_, P>::push_class_open","<core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","<core::result::Result<either::Either<ast::ClassSetUnion, ast::ClassBracketed>, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::char","<core::option::Option<char> as core::cmp::PartialEq>::eq","<core::result::Result<ast::ClassSetUnion, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::pop_class","core::panicking::panic","ast::parse::ParserI::<'_, P>::is_eof","std::vec::Vec::<ast::ClassSetItem>::new","std::vec::Vec::<ast::parse::ClassState>::is_empty","ast::parse::ParserI::<'_, P>::span","ast::parse::ParserI::<'_, P>::parser","ast::parse::ParserI::<'_, P>::maybe_parse_ascii_class","ast::parse::ParserI::<'_, P>::peek","ast::parse::ParserI::<'_, P>::push_class_op","<core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::bump_if","ast::ClassSetUnion::push","ast::parse::ParserI::<'_, P>::bump_space","<core::cell::Ref<'_, std::vec::Vec<ast::parse::ClassState>> as core::ops::Deref>::deref"],"types":["ast::ClassAscii","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassSetUnion>","core::fmt::Arguments<'_>","core::result::Result<core::convert::Infallible, ast::Error>","ast::parse::ParserI<'_, P>","core::option::Option<ast::ClassAscii>","core::option::Option<char>","str","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassSetItem>","char","(&char, &char)","core::panicking::AssertKind","core::result::Result<either::Either<ast::ClassSetUnion, ast::ClassBracketed>, ast::Error>","ast::ClassSetUnion","either::Either<ast::ClassSetUnion, ast::ClassBracketed>","P","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, either::Either<ast::ClassSetUnion, ast::ClassBracketed>>","ast::parse::Parser","!","ast::parse::ClassState","core::cell::Ref<'_, std::vec::Vec<ast::parse::ClassState>>","core::result::Result<ast::ClassBracketed, ast::Error>","ast::Span","core::result::Result<ast::ClassSetUnion, ast::Error>","core::convert::Infallible","ast::ClassSetBinaryOpKind","core::option::Option<core::fmt::Arguments<'_>>","std::alloc::Global","core::cell::RefCell<std::vec::Vec<ast::parse::ClassState>>","std::vec::Vec<ast::parse::ClassState>","bool","ast::Error","std::vec::Vec<ast::ClassSetItem>","()","ast::ClassBracketed","core::result::Result<ast::ClassSetItem, ast::Error>","ast::ClassSetItem","isize"]}