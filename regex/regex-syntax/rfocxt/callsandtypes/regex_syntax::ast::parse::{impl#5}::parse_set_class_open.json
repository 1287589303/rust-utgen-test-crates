{"mod_name":"ast::parse","calls":["ast::parse::ParserI::<'_, P>::char","std::vec::Vec::<ast::ClassSetItem>::is_empty","ast::ClassSet::union","ast::Span::new","ast::parse::ParserI::<'_, P>::pos","core::panicking::assert_failed::<char, char>","ast::parse::ParserI::<'_, P>::span_char","ast::ClassSetUnion::push","ast::parse::ParserI::<'_, P>::bump_and_bump_space","std::vec::Vec::<ast::ClassSetItem>::new","ast::parse::ParserI::<'_, P>::error","ast::parse::ParserI::<'_, P>::span"],"types":["std::vec::Vec<ast::ClassSetItem>","(&char, &char)","core::fmt::Arguments<'_>","ast::ClassSetItem","bool","ast::parse::ParserI<'_, P>","core::panicking::AssertKind","char","!","ast::Span","ast::Position","ast::Literal","core::option::Option<core::fmt::Arguments<'_>>","ast::ClassSet","ast::ErrorKind","ast::ClassSetUnion","(ast::ClassBracketed, ast::ClassSetUnion)","std::alloc::Global","ast::ClassBracketed","ast::LiteralKind","ast::Error","()","P","core::result::Result<(ast::ClassBracketed, ast::ClassSetUnion), ast::Error>"]}