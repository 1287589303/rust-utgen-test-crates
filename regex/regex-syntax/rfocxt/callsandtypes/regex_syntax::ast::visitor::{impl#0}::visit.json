{"mod_name":"ast::visitor","calls":["ast::visitor::HeapVisitor::<'_>::pop","<core::result::Result<<V as ast::visitor::Visitor>::Output, <V as ast::visitor::Visitor>::Err> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>>>::from_residual","ast::visitor::HeapVisitor::<'_>::induct::<V>","<core::result::Result<","<V as ast::visitor::Visitor>::start","<V as ast::visitor::Visitor>::visit_post","<V as ast::visitor::Visitor>::finish","ast::visitor::Frame::<'_>::child","<V as ast::visitor::Visitor>::visit_concat_in","<core::result::Result<core::option::Option<ast::visitor::Frame<'_>>, <V as ast::visitor::Visitor>::Err> as core::ops::Try>::branch","<V as ast::visitor::Visitor>::visit_pre","<V as ast::visitor::Visitor>::visit_alternation_in","std::vec::Vec::<"],"types":["ast::visitor::Frame<'_>","std::alloc::Global","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>>","()","ast::visitor::ClassInduct<'_>","std::vec::Vec<(&ast::Ast, ast::visitor::Frame<'_>)>","core::option::Option<(&ast::Ast, ast::visitor::Frame<'_>)>","!","(ast::visitor::ClassInduct<'_>, ast::visitor::ClassFrame<'_>)","core::option::Option<ast::visitor::Frame<'_>>","core::result::Result<core::option::Option<ast::visitor::Frame<'_>>, <V as ast::visitor::Visitor>::Err>","core::result::Result<(), <V as ast::visitor::Visitor>::Err>","std::vec::Vec<(ast::visitor::ClassInduct<'_>, ast::visitor::ClassFrame<'_>)>","ast::visitor::ClassFrame<'_>","<V as ast::visitor::Visitor>::Output","V","isize","core::result::Result<<V as ast::visitor::Visitor>::Output, <V as ast::visitor::Visitor>::Err>","(&ast::Ast, ast::visitor::Frame<'_>)","<V as ast::visitor::Visitor>::Err","ast::visitor::HeapVisitor<'_>","core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>, core::option::Option<ast::visitor::Frame<'_>>>","ast::Ast","core::convert::Infallible"]}