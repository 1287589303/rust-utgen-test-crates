{"mod_name":"ast::parse","calls":["ast::Span::new","ast::parse::ParserI::<'_, P>::error","ast::parse::ParserI::<'_, P>::bump_and_bump_space","core::cell::RefCell::<std::string::String>::borrow_mut","ast::parse::ParserI::<'_, P>::bump","std::string::String::push","<core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut","std::string::String::clear","core::cell::Cell::<ast::Position>::set","<str as core::cmp::PartialEq>::eq","ast::parse::ParserI::<'_, P>::pos","<core::cell::RefMut<'_, std::string::String> as core::ops::Deref>::deref","ast::parse::ParserI::<'_, P>::parser","<{closure@regex-syntax/src/ast/parse.rs:1623:29: 1623:32} as core::ops::Fn<","ast::parse::ParserI::<'_, P>::char","core::panicking::assert_failed::<char, char>","ast::parse::ParserI::<'_, P>::is_eof","std::string::String::as_str"],"types":["!","core::option::Option<core::fmt::Arguments<'_>>","()","(char,)","ast::AssertionKind","ast::Position","char","P","ast::Error","bool","(&char, &char)","core::fmt::Arguments<'_>","ast::parse::Parser","core::cell::RefMut<'_, std::string::String>","ast::parse::ParserI<'_, P>","{closure@regex-syntax/src/ast/parse.rs:1623:29: 1623:32}","core::option::Option<ast::AssertionKind>","ast::ErrorKind","str","core::cell::Cell<ast::Position>","core::panicking::AssertKind","std::string::String","ast::Span","core::cell::RefCell<std::string::String>","core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>"]}