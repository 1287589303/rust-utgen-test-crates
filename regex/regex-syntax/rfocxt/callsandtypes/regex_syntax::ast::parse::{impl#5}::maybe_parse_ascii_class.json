{"mod_name":"ast::parse","calls":["ast::parse::ParserI::<'_, P>::char","ast::parse::ParserI::<'_, P>::is_eof","<str as core::ops::Index<core::ops::Range<usize>>>::index","ast::Span::new","ast::parse::ParserI::<'_, P>::bump","ast::parse::ParserI::<'_, P>::parser","core::panicking::assert_failed::<char, char>","ast::parse::ParserI::<'_, P>::bump_if","ast::ClassAsciiKind::from_name","core::cell::Cell::<ast::Position>::set","ast::parse::ParserI::<'_, P>::pos","ast::parse::ParserI::<'_, P>::pattern","ast::parse::ParserI::<'_, P>::offset"],"types":["ast::ClassAsciiKind","core::option::Option<ast::ClassAscii>","core::option::Option<ast::ClassAsciiKind>","core::option::Option<core::fmt::Arguments<'_>>","ast::parse::Parser","str","()","ast::Position","ast::ClassAscii","core::fmt::Arguments<'_>","char","ast::parse::ParserI<'_, P>","!","ast::Span","core::ops::Range<usize>","P","usize","isize","bool","core::panicking::AssertKind","(&char, &char)","core::cell::Cell<ast::Position>"]}