{"mod_name":"hir::literal","calls":["core::cmp::min::<u32>","core::result::Result::<u32, core::num::TryFromIntError>::unwrap_or","hir::literal::Extractor::cross","hir::literal::Literal::exact::<std::vec::Vec<u8>>","hir::literal::Seq::is_inexact","<core::ops::Range<u32> as core::iter::Iterator>::next","hir::literal::Extractor::extract","hir::literal::Seq::singleton","<usize as core::convert::TryFrom<u32>>::try_from","core::result::Result::<usize, core::num::TryFromIntError>::is_err","<core::option::Option<u32> as core::cmp::PartialEq>::ne","<u32 as core::convert::TryFrom<usize>>::try_from","hir::literal::Extractor::union","core::mem::swap::<hir::literal::Seq>","std::vec::Vec::<u8>::new","hir::literal::Seq::make_inexact","<core::ops::Range<u32> as core::iter::IntoIterator>::into_iter","core::panicking::panic","<hir::literal::Seq as core::clone::Clone>::clone"],"types":["isize","std::alloc::Global","core::result::Result<u32, core::num::TryFromIntError>","hir::Hir","hir::literal::Literal","()","u32","core::num::TryFromIntError","str","hir::literal::Extractor","u8","core::ops::Range<u32>","std::vec::Vec<u8>","std::boxed::Box<hir::Hir>","bool","core::option::Option<u32>","!","hir::Repetition","hir::literal::Seq","usize","core::result::Result<usize, core::num::TryFromIntError>"]}