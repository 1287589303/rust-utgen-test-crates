{"mod_name":"ast::parse","calls":["ast::parse::ParserI::<'_, P>::add_capture_name","ast::parse::ParserI::<'_, P>::span","ast::parse::ParserI::<'_, P>::error","core::panicking::assert_failed::<char, char>","ast::parse::ParserI::<'_, P>::is_eof","<ast::Position as core::cmp::PartialEq>::eq","<str as std::string::ToString>::to_string","ast::Span::new","ast::parse::is_capture_char","core::str::<impl str>::is_empty","ast::parse::ParserI::<'_, P>::pattern","<core::result::Result<ast::CaptureName, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","ast::parse::ParserI::<'_, P>::pos","<core::result::Result<","<str as core::ops::Index<core::ops::Range<usize>>>::index","ast::parse::ParserI::<'_, P>::span_char","ast::parse::ParserI::<'_, P>::bump","ast::parse::ParserI::<'_, P>::char"],"types":["ast::Position","usize","ast::Error","char","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>>","core::panicking::AssertKind","core::option::Option<core::fmt::Arguments<'_>>","ast::ErrorKind","core::result::Result<core::convert::Infallible, ast::Error>","core::result::Result<(), ast::Error>","(&char, &char)","bool","()","ast::parse::ParserI<'_, P>","core::convert::Infallible","str","isize","u32","P","!","std::string::String","core::result::Result<ast::CaptureName, ast::Error>","core::fmt::Arguments<'_>","ast::CaptureName","core::ops::Range<usize>","ast::Span"]}