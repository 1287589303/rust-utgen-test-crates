{"mod_name":"ast::parse","calls":["<core::ops::Range<u32> as core::iter::IntoIterator>::into_iter","std::string::String::clear","<core::ops::Range<u32> as core::iter::Iterator>::next","ast::parse::ParserI::<'_, P>::error","<core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut","ast::parse::is_hex","ast::parse::ParserI::<'_, P>::span_char","ast::parse::ParserI::<'_, P>::pos","ast::parse::ParserI::<'_, P>::bump_and_bump_space","ast::HexLiteralKind::digits","ast::parse::ParserI::<'_, P>::span","core::num::<impl u32>::from_str_radix","core::option::Option::<u32>::and_then::<char, fn","std::string::String::as_str","<core::cell::RefMut<'_, std::string::String> as core::ops::Deref>::deref","ast::parse::ParserI::<'_, P>::char","core::cell::RefCell::<std::string::String>::borrow_mut","core::result::Result::<u32, core::num::ParseIntError>::ok","std::string::String::push","ast::parse::ParserI::<'_, P>::parser","ast::Span::new"],"types":["core::num::ParseIntError","ast::Literal","ast::Span","ast::parse::ParserI<'_, P>","bool","str","core::cell::RefCell<std::string::String>","ast::HexLiteralKind","ast::ErrorKind","!","char","ast::Position","core::ops::Range<u32>","ast::Error","core::cell::RefMut<'_, std::string::String>","ast::parse::Parser","()","std::string::String","u32","core::option::Option<u32>","core::option::Option<char>","core::result::Result<u32, core::num::ParseIntError>","fn(u32) -> core::option::Option<char> {core::char::methods::<impl char>::from_u32}","core::result::Result<ast::Literal, ast::Error>","isize","ast::LiteralKind","P"]}