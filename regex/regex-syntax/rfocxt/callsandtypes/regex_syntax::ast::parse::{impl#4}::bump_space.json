{"mod_name":"ast::parse","calls":["ast::parse::ParserI::<'_, P>::parser","core::cell::RefCell::<std::vec::Vec<ast::Comment>>::borrow_mut","ast::parse::ParserI::<'_, P>::ignore_whitespace","std::string::String::new","ast::Span::new","ast::parse::ParserI::<'_, P>::bump","ast::parse::ParserI::<'_, P>::is_eof","ast::parse::ParserI::<'_, P>::pos","<core::cell::RefMut<'_, std::vec::Vec<ast::Comment>> as core::ops::DerefMut>::deref_mut","std::string::String::push","std::vec::Vec::<ast::Comment>::push","ast::parse::ParserI::<'_, P>::char","core::char::methods::<impl char>::is_whitespace"],"types":["core::cell::RefCell<std::vec::Vec<ast::Comment>>","std::string::String","ast::Comment","P","()","std::alloc::Global","ast::parse::ParserI<'_, P>","char","!","std::vec::Vec<ast::Comment>","ast::Span","ast::Position","ast::parse::Parser","core::cell::RefMut<'_, std::vec::Vec<ast::Comment>>","bool"]}