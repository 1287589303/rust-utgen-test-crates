{"mod_name":"ast::parse","calls":["<core::result::Result<ast::Ast, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::parser","ast::parse::ParserI::<'_, P>::bump_space","ast::parse::ParserI::<'_, P>::pop_group","core::cell::RefCell::<std::vec::Vec<ast::Comment>>::borrow_mut","std::vec::Vec::<ast::Ast>::new","ast::parse::ParserI::<'_, P>::parse_uncounted_repetition","ast::parse::ParserI::<'_, P>::push_group","core::mem::replace::<std::vec::Vec<ast::Comment>>","ast::parse::Primitive::into_ast","ast::parse::Parser::reset","ast::parse::ParserI::<'_, P>::char","ast::parse::ParserI::<'_, P>::pop_group_end","<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::offset","ast::parse::ParserI::<'_, P>::span","std::vec::Vec::<ast::Ast>::push","<core::cell::RefMut<'_, std::vec::Vec<ast::Comment>> as core::ops::DerefMut>::deref_mut","<core::result::Result<","std::vec::Vec::<ast::Comment>::new","core::fmt::Arguments::<'_>::new_const::<1>","<core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::push_alternate","ast::parse::ParserI::<'_, P>::parse_set_class","ast::parse::NestLimiter::<'_, '_, P>::new","<core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","ast::Ast::class_bracketed","ast::parse::NestLimiter::<'_, '_, P>::check","ast::parse::ParserI::<'_, P>::parse_counted_repetition","core::panicking::assert_failed::<usize, usize>","ast::parse::ParserI::<'_, P>::parse_primitive","ast::parse::ParserI::<'_, P>::is_eof","<core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::Try>::branch"],"types":["ast::parse::ParserI<'_, P>","str","std::vec::Vec<ast::Ast>","isize","ast::Error","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::parse::Primitive>","core::result::Result<(), ast::Error>","ast::Span","bool","core::result::Result<ast::Concat, ast::Error>","()","core::result::Result<ast::parse::Primitive, ast::Error>","ast::Concat","ast::parse::Parser","char","[&str; 1]","core::result::Result<ast::Ast, ast::Error>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Ast>","core::result::Result<core::convert::Infallible, ast::Error>","ast::parse::Primitive","!","usize","P","ast::ClassBracketed","ast::Ast","ast::Comment","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>>","std::alloc::Global","ast::WithComments","ast::parse::NestLimiter<'_, '_, P>","core::cell::RefMut<'_, std::vec::Vec<ast::Comment>>","core::cell::RefCell<std::vec::Vec<ast::Comment>>","core::convert::Infallible","core::option::Option<core::fmt::Arguments<'_>>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Concat>","core::panicking::AssertKind","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassBracketed>","core::result::Result<ast::ClassBracketed, ast::Error>","core::fmt::Arguments<'_>","core::result::Result<ast::WithComments, ast::Error>","ast::RepetitionKind","(&usize, &usize)","std::vec::Vec<ast::Comment>"]}