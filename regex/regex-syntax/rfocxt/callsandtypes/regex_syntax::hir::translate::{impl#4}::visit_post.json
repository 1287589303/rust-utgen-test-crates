{"mod_name":"hir::translate","calls":["hir::translate::TranslatorI::<'_, '_>::pop","core::option::Option::<hir::translate::HirFrame>::unwrap","core::slice::<impl [hir::Hir]>::reverse","hir::Hir::kind","hir::Hir::alternation","<core::result::Result<hir::Hir, hir::Error> as core::ops::Try>::branch","hir::Hir::class","hir::translate::TranslatorI::<'_, '_>::pop_concat_expr","hir::translate::HirFrame::unwrap_class_bytes","<core::result::Result<hir::ClassUnicode, hir::Error> as core::ops::Try>::branch","hir::Hir::empty","hir::translate::TranslatorI::<'_, '_>::flags","hir::translate::TranslatorI::<'_, '_>::hir_unicode_class","hir::translate::HirFrame::unwrap_class_unicode","hir::translate::TranslatorI::<'_, '_>::set_flags","hir::translate::TranslatorI::<'_, '_>::hir_repetition","core::cell::Cell::<hir::translate::Flags>::set","hir::translate::TranslatorI::<'_, '_>::hir_assertion","hir::translate::TranslatorI::<'_, '_>::unicode_fold_and_negate","hir::translate::HirFrame::unwrap_expr","<core::result::Result<either::Either<char, u8>, hir::Error> as core::ops::Try>::branch","<core::result::Result<","hir::translate::TranslatorI::<'_, '_>::ast_literal_to_scalar","<core::result::Result<core::option::Option<hir::Hir>, hir::Error> as core::ops::Try>::branch","hir::translate::HirFrame::unwrap_repetition","hir::translate::TranslatorI::<'_, '_>::case_fold_char","hir::translate::TranslatorI::<'_, '_>::trans","hir::translate::HirFrame::unwrap_alternation_pipe","hir::translate::TranslatorI::<'_, '_>::push_byte","hir::translate::TranslatorI::<'_, '_>::hir_capture","<core::result::Result<hir::ClassBytes, hir::Error> as core::ops::Try>::branch","<std::vec::Vec<hir::Hir> as core::ops::DerefMut>::deref_mut","std::vec::Vec::<hir::Hir>::push","hir::translate::Flags::unicode","hir::translate::TranslatorI::<'_, '_>::bytes_fold_and_negate","hir::Hir::concat","hir::translate::TranslatorI::<'_, '_>::hir_perl_unicode_class","hir::translate::HirFrame::unwrap_group","std::vec::Vec::<hir::Hir>::new","hir::translate::TranslatorI::<'_, '_>::push","hir::translate::TranslatorI::<'_, '_>::hir_dot","hir::translate::TranslatorI::<'_, '_>::hir_perl_byte_class","hir::translate::TranslatorI::<'_, '_>::push_char","hir::translate::TranslatorI::<'_, '_>::pop_alt_expr"],"types":["ast::Repetition","std::alloc::Global","hir::Error","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>>","core::result::Result<either::Either<char, u8>, hir::Error>","std::boxed::Box<ast::Repetition>","hir::ClassUnicode","ast::Flags","core::result::Result<hir::Hir, hir::Error>","ast::SetFlags","std::boxed::Box<ast::SetFlags>","hir::Hir","core::option::Option<hir::translate::HirFrame>","std::boxed::Box<ast::ClassBracketed>","ast::ClassPerl","ast::Literal","char","core::result::Result<hir::ClassBytes, hir::Error>","hir::translate::HirFrame","ast::Assertion","hir::translate::Translator","core::convert::Infallible","isize","ast::ClassBracketed","[hir::Hir]","std::boxed::Box<ast::ClassUnicode>","either::Either<char, u8>","std::boxed::Box<ast::ClassPerl>","std::boxed::Box<ast::Literal>","!","std::boxed::Box<ast::Assertion>","hir::translate::Flags","core::option::Option<hir::Hir>","hir::translate::TranslatorI<'_, '_>","bool","ast::ClassUnicode","hir::HirKind","ast::Ast","ast::Span","core::result::Result<(), hir::Error>","()","core::result::Result<hir::ClassUnicode, hir::Error>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassUnicode>","core::result::Result<core::convert::Infallible, hir::Error>","core::result::Result<core::option::Option<hir::Hir>, hir::Error>","hir::ClassBytes","std::vec::Vec<hir::Hir>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassBytes>","std::boxed::Box<ast::Group>","u8","ast::Group","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, core::option::Option<hir::Hir>>","std::boxed::Box<ast::Span>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::Hir>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, either::Either<char, u8>>","hir::Class","core::cell::Cell<hir::translate::Flags>"]}