{"mod_name":"ast::parse","calls":["<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","ast::parse::ParserI::<'_, P>::char","<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","is_meta_character","is_escapeable_character","<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","ast::Span::new","ast::parse::ParserI::<'_, P>::parser","core::panicking::assert_failed::<char, char>","ast::parse::ParserI::<'_, P>::parse_unicode_class","ast::parse::ParserI::<'_, P>::error","ast::parse::ParserI::<'_, P>::parse_perl_class","ast::parse::ParserI::<'_, P>::pos","<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","ast::parse::ParserI::<'_, P>::is_eof","ast::parse::ParserI::<'_, P>::bump","ast::parse::ParserI::<'_, P>::parse_octal","ast::parse::ParserI::<'_, P>::span_char","<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::ParserI::parse_escape","ast::parse::ParserI::char","ast::parse::ParserI::is_eof","ast::parse::ParserI::bump","ast::parse::ParserI::parse_unicode_class","ast::parse::ParserI::maybe_parse_special_word_boundary","ast::parse::ParserI::parser","ast::parse::ParserI::parse_perl_class","ast::parse::ParserI::error","core::panicking::assert_failed","ast::parse::ParserI::parse_octal","ast::parse::ParserI::span_char","ast::parse::ParserI::parse_hex","ast::parse::ParserI::pos","regex_syntax::hir::literal::{impl#9}::from::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#32}::drop::is_meta_character","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_word::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::wb::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::tests::hir_union::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gencat::is_meta_character","regex_syntax::unicode_tables::age::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::tests::ast::parse::ParserI::parser","regex_syntax::hir::print::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::script::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::panicking::assert_failed","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::panicking::assert_failed","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::pos","regex_syntax::unicode::ages::imp::ast::parse::ParserI::pos","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::error::tests::ast::Span::new","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::general_category::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::tests::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::{impl#0}::auxiliary_span::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::error","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::parse_hex","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::tests::is_escapeable_character","regex_syntax::unicode::script_extension::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::char","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::perl_space::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::ast::parse::ParserI::pos","regex_syntax::hir::{impl#6}::subs::is_escapeable_character","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::panicking::assert_failed::<char, char>","regex_syntax::error::is_meta_character","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::tests::core::panicking::assert_failed","regex_syntax::hir::translate::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::pos","regex_syntax::ast::{impl#18}::from_name::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::{impl#4}::overlaps::core::panicking::assert_failed","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_space::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::error","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::pos","regex_syntax::rank::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_bool::is_meta_character","regex_syntax::ast::parse::{impl#4}::pop_group::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::either::ast::parse::ParserI::error","regex_syntax::ast::parse::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::error","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::error","regex_syntax::hir::interval::core::panicking::assert_failed","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::char","regex_syntax::unicode_tables::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::is_escapeable_character","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::debug::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::parser","regex_syntax::unicode::gencat::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::is_eof","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::ages::imp::ast::parse::ParserI::bump","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::bump","regex_syntax::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script::core::panicking::assert_failed","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::ages::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::{impl#4}::pop_group::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_flags::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_flags::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::bool_property::imp::ast::Span::new","regex_syntax::unicode::property_values::ast::Span::new","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_digit::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::ast::parse::ParserI::error","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::interval::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::tests::ast::parse::ParserI::char","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::bump","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::script_extension::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::utf8::tests::ast::parse::ParserI::bump","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_flags::is_meta_character","regex_syntax::unicode::canonical_prop::core::panicking::assert_failed","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::pos","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::ast::parse::ParserI::parser","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::either::is_meta_character","regex_syntax::hir::translate::tests::hir_difference::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::interval::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::is_meta_character","regex_syntax::ast::{impl#3}::fmt::is_escapeable_character","regex_syntax::hir::print::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_perl::is_escapeable_character","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::visitor::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gcb::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gcb::imp::core::panicking::assert_failed","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::class::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_assertion::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::tests::ast::parse::ParserI::pos","regex_syntax::hir::print::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::visitor::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::ast::parse::ParserI::parser","regex_syntax::unicode::perl_word::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#0}::as_slice::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::error::tests::ast::parse::ParserI::parser","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::sb::imp::ast::parse::ParserI::error","regex_syntax::utf8::{impl#2}::fmt::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::error","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::ast::parse::ParserI::error","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::bump","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::is_meta_character","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::pos","regex_syntax::utf8::tests::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::error","regex_syntax::hir::tests::ast::parse::ParserI::error","regex_syntax::utf8::tests::is_meta_character","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::script::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::canonical_prop::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::bump","regex_syntax::unicode::class::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#24}::drop::is_meta_character","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::error","regex_syntax::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::is_meta_character","regex_syntax::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::general_category::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::class::is_escapeable_character","regex_syntax::rank::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script_extension::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::parse_unicode_class","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gencat::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::ages::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::is_escapeable_character","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::ast::parse::ParserI::span_char","regex_syntax::hir::translate::tests::hir_difference::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::either::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::parse_hex","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::{impl#4}::overlaps::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_space::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::property_values::imp::ast::Span::new","regex_syntax::unicode::property_values::imp::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::gcb::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#31}::drop::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::char","regex_syntax::unicode::wb::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::error","regex_syntax::unicode_tables::script_extension::core::panicking::assert_failed","regex_syntax::hir::print::tests::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::error","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::word_break::is_escapeable_character","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ast::parse::ParserI::parse_perl_class","regex_syntax::error::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::error::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::bump","regex_syntax::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::print::tests::ast::parse::ParserI::span_char","regex_syntax::unicode::class::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::{impl#0}::into_class_set_item::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::age::ast::parse::ParserI::pos","regex_syntax::unicode::script::ast::parse::ParserI::char","regex_syntax::ast::{impl#13}::fmt::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::tests::ast::parse::ParserI::char","regex_syntax::ast::visitor::is_meta_character","regex_syntax::unicode_tables::case_folding_simple::is_meta_character","regex_syntax::utf8::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::error::tests::is_meta_character","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::rank::ast::parse::ParserI::pos","regex_syntax::hir::translate::ascii_class::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#11}::fmt::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::ascii_class::core::panicking::assert_failed","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_flags::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::property_values::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::is_word_character::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::word_break::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::is_eof","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::script::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_space::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::script_extension::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::debug::utf8_decode::ast::parse::ParserI::span_char","regex_syntax::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::tests::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#3}::fmt::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::parser::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::parser::ast::parse::ParserI::<'_, P>::bump","regex_syntax::either::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::bump","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#11}::fmt::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::wb::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_names::is_meta_character","regex_syntax::hir::print::tests::ast::Span::new","regex_syntax::unicode::script_extension::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::error::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::parser","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::rank::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::general_category::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::ages::imp::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::parser","regex_syntax::unicode::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::sb::imp::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gencat::ast::parse::ParserI::error","regex_syntax::unicode::script::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::ages::imp::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::script::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::bump","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::sb::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::ages::ast::parse::ParserI::error","regex_syntax::debug::utf8_decode::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#3}::fmt::is_meta_character","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#3}::fmt::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::is_word_character::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_values::is_escapeable_character","regex_syntax::unicode::perl_space::is_escapeable_character","regex_syntax::unicode::tests::core::panicking::assert_failed::<char, char>","regex_syntax::hir::ast::parse::ParserI::error","regex_syntax::parser::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::char","regex_syntax::unicode::is_word_character::ast::parse::ParserI::char","regex_syntax::debug::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::bool_property::imp::is_escapeable_character","regex_syntax::unicode::wb::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::span_char","regex_syntax::hir::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_space::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::wb::is_escapeable_character","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::char","regex_syntax::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::pos","regex_syntax::unicode::is_escapeable_character","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::span_char","regex_syntax::ast::parse::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_literal::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::script::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::ast::parse::ParserI::<'_, P>::parser","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::{impl#2}::fmt::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_word::is_escapeable_character","regex_syntax::utf8::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::char","regex_syntax::unicode::perl_digit::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::pos","regex_syntax::ast::{impl#32}::drop::core::panicking::assert_failed","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::perl_word::core::panicking::assert_failed::<char, char>","regex_syntax::ast::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::print::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::parser::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script::imp::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::error","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::parse::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_group_pre::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_digit::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::is_escapeable_character","regex_syntax::ast::print::ast::Span::new","regex_syntax::unicode_tables::sentence_break::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::interval::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::grapheme_cluster_break::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::is_meta_character","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::{impl#0}::extract::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::is_meta_character","regex_syntax::hir::interval::ast::parse::ParserI::bump","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::script::ast::Span::new","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::parse_perl_class","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::span_char","regex_syntax::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::perl_decimal::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::bump","regex_syntax::hir::visitor::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::parse_octal","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_space::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::parser","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::char","regex_syntax::unicode::gencat::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_word::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::interval::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_names::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::word_break::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::is_escapeable_character","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::age::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::print::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::is_escapeable_character","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::char","regex_syntax::hir::interval::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::is_eof","regex_syntax::unicode::ages::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::parser","regex_syntax::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::ast::parse::ParserI::span_char","regex_syntax::unicode::bool_property::ast::parse::ParserI::pos","regex_syntax::unicode::gencat::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::parse_hex","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::parser","regex_syntax::unicode::is_word_character::imp::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::rank::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::ascii_class::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::literal::{impl#0}::extract::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::tests::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::property_names::core::panicking::assert_failed::<char, char>","regex_syntax::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gencat::ast::Span::new","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::parser","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::literal::{impl#9}::from::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::is_meta_character","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::script::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::parser","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::script::imp::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::char","regex_syntax::unicode::script_extension::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gencat::ast::parse::ParserI::bump","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::error","regex_syntax::unicode::wb::ast::parse::ParserI::parse_hex","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::{impl#0}::into_class_literal::is_meta_character","regex_syntax::unicode::canonical_prop::imp::is_escapeable_character","regex_syntax::ast::{impl#13}::fmt::is_escapeable_character","regex_syntax::error::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::wb::imp::is_meta_character","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::tests::ast::parse::ParserI::is_eof","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::is_meta_character","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::pos","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::span_char","regex_syntax::parser::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#11}::fmt::ast::Span::new","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::tests::ast::parse::ParserI::pos","regex_syntax::ast::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::ast::parse::ParserI::char","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::property_bool::is_escapeable_character","regex_syntax::either::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::is_escapeable_character","regex_syntax::utf8::{impl#0}::as_slice::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::print::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::ParserI::bump","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::parser","regex_syntax::hir::{impl#11}::fmt::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::tests::ast::parse::ParserI::char","regex_syntax::parser::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::bump","regex_syntax::error::tests::core::panicking::assert_failed","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::pos","regex_syntax::unicode_tables::perl_word::ast::Span::new","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::class::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::either::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::wb::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_flags::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::parse::ast::parse::ParserI::bump","regex_syntax::ast::{impl#13}::fmt::core::panicking::assert_failed::<char, char>","regex_syntax::hir::literal::{impl#0}::extract::is_escapeable_character","regex_syntax::utf8::{impl#0}::as_slice::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::script_extension::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_names::ast::Span::new","regex_syntax::unicode::is_word_character::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::debug::utf8_decode::ast::parse::ParserI::char","regex_syntax::hir::visitor::ast::parse::ParserI::error","regex_syntax::unicode::wb::imp::ast::parse::ParserI::parse_hex","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::parse_unicode_class","regex_syntax::debug::is_escapeable_character","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::property_bool::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::pos","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::grapheme_cluster_break::is_escapeable_character","regex_syntax::unicode::gencat::imp::is_meta_character","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::wb::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::perl_space::is_escapeable_character","regex_syntax::tests::ast::parse::ParserI::pos","regex_syntax::unicode::class::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_literal::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_space::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_digit::ast::parse::ParserI::parse_hex","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::ast::parse::ParserI::parser","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::parser","regex_syntax::ast::print::tests::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script_extension::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::{impl#11}::fmt::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::tests::ast::parse::ParserI::parse_hex","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::bump","regex_syntax::unicode::script_extension::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::bump","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::tests::core::panicking::assert_failed","regex_syntax::ast::print::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::is_escapeable_character","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::char","regex_syntax::unicode::bool_property::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_assertion::is_escapeable_character","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::parse_hex","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::ages::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_perl::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::rank::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::pos","regex_syntax::ast::{impl#32}::drop::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::ast::parse::ParserI::pos","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::sb::ast::parse::ParserI::char","regex_syntax::unicode::property_values::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::utf8_decode::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::age::ast::parse::ParserI::char","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::error::ast::parse::ParserI::span_char","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::char","regex_syntax::ast::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::ast::parse::ParserI::pos","regex_syntax::either::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::parse_hex","regex_syntax::utf8::tests::encode_surrogate::is_meta_character","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::{impl#0}::as_slice::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::utf8::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::general_category::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::tests::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::is_eof","regex_syntax::error::tests::ast::parse::ParserI::span_char","regex_syntax::hir::translate::ast::Span::new","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::visitor::ast::parse::ParserI::error","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::parse_octal","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::char","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::char","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::tests::ast::parse::ParserI::is_eof","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::visitor::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::general_category::is_meta_character","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_repetition::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::panicking::assert_failed","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#3}::fmt::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::parser","regex_syntax::unicode::wb::imp::ast::parse::ParserI::span_char","regex_syntax::hir::translate::tests::hir_difference::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::canonical_prop::imp::is_meta_character","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#32}::drop::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::script::ast::parse::ParserI::error","regex_syntax::unicode::perl_word::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::visitor::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::print::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::panicking::assert_failed","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::span_char","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::tests::is_escapeable_character","regex_syntax::utf8::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::literal::core::panicking::assert_failed","regex_syntax::unicode::gcb::is_meta_character","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::span_char","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::wb::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::perl_word::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_repetition::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::tests::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::ast::parse::ParserI::is_eof","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::pos","regex_syntax::error::tests::ast::parse::ParserI::error","regex_syntax::parser::ast::parse::ParserI::pos","regex_syntax::either::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_meta_character","regex_syntax::rank::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#3}::fmt::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::error::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::core::panicking::assert_failed::<char, char>","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::error","regex_syntax::either::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::bump","regex_syntax::error::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::{impl#6}::subs::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::tests::ast::parse::ParserI::parser","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::bump","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::pos","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::pos","regex_syntax::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::interval::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::parser","regex_syntax::utf8::{impl#0}::as_slice::core::panicking::assert_failed","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::tests::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::char","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::parse_hex","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::utf8::{impl#2}::fmt::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::tests::ast::parse::ParserI::parse_octal","regex_syntax::unicode::script::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::bump","regex_syntax::unicode_tables::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::property_values::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Span::new","regex_syntax::hir::literal::{impl#9}::from::is_meta_character","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_digit::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::{impl#24}::drop::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::parse_perl_class","regex_syntax::either::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::imp::ast::parse::ParserI::pos","regex_syntax::hir::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::tests::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::visitor::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_literal::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::is_meta_character","regex_syntax::error::ast::Span::new","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::gencat::ast::parse::ParserI::is_eof","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::parse_octal","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::span_char","regex_syntax::rank::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ParserI::parse_hex","regex_syntax::either::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::is_eof","regex_syntax::utf8::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::visitor::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::error::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::visitor::ast::parse::ParserI::span_char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::gencat::ast::parse::ParserI::parse_hex","regex_syntax::unicode::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::tests::hir_union::is_meta_character","regex_syntax::either::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#11}::fmt::is_meta_character","regex_syntax::ast::tests::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::tests::is_escapeable_character","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::parse_hex","regex_syntax::ast::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::tests::ast::parse::ParserI::span_char","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::bump","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::tests::is_escapeable_character","regex_syntax::hir::translate::tests::hir_union::is_escapeable_character","regex_syntax::unicode::wb::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::pos","regex_syntax::ast::visitor::ast::Span::new","regex_syntax::ast::parse::ast::parse::ParserI::error","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::ascii_class::is_escapeable_character","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::bool_property::ast::parse::ParserI::char","regex_syntax::unicode_tables::script::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::bool_property::is_escapeable_character","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::script::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ast::parse::ParserI::error","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_word::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::ast::Span::new","regex_syntax::ast::{impl#0}::auxiliary_span::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::imp::core::panicking::assert_failed::<char, char>","regex_syntax::error::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::bump","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::error::tests::ast::parse::ParserI::char","regex_syntax::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::canonical_prop::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::error","regex_syntax::ast::{impl#3}::fmt::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::span_char","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::is_eof","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Span::new","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::bool_property::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::script_extension::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_literal::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::error::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::tests::ast::parse::ParserI::bump","regex_syntax::unicode_tables::age::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::perl_word::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_set_item::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::rank::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::is_word_character::ast::parse::ParserI::span_char","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::grapheme_cluster_break::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::bool_property::ast::parse::ParserI::is_eof","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::bump","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::parser","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::tests::is_meta_character","regex_syntax::unicode::perl_space::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::error","regex_syntax::ast::parse::tests::core::panicking::assert_failed","regex_syntax::parser::ast::parse::ParserI::is_eof","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::is_escapeable_character","regex_syntax::unicode::class::ast::parse::ParserI::is_eof","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::is_meta_character","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::parser","regex_syntax::utf8::tests::encode_surrogate::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::either::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::translate::tests::hir_difference::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::parser","regex_syntax::unicode::bool_property::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script::ast::Span::new","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::pos","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::is_eof","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::sb::ast::parse::ParserI::parser","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::bump","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::debug::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::literal::ast::parse::ParserI::bump","regex_syntax::unicode::property_values::ast::parse::ParserI::char","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::char","regex_syntax::error::tests::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::error","regex_syntax::unicode::wb::imp::ast::parse::ParserI::is_eof","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Span::new","regex_syntax::unicode::is_word_character::is_escapeable_character","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::interval::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::bump","regex_syntax::debug::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::parser","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::parser","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::parse_hex","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::pos","regex_syntax::utf8::{impl#0}::as_slice::ast::Span::new","regex_syntax::unicode::{impl#4}::overlaps::is_meta_character","regex_syntax::ast::ast::parse::ParserI::parse_hex","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::visitor::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::{impl#4}::pop_group::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::canonical_prop::imp::core::panicking::assert_failed","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::ast::parse::ParserI::is_eof","regex_syntax::hir::interval::is_meta_character","regex_syntax::unicode::gcb::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::char","regex_syntax::utf8::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_repetition::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::perl_space::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::is_escapeable_character","regex_syntax::parser::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::parser","regex_syntax::unicode::ast::parse::ParserI::parser","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::pos","regex_syntax::unicode::sb::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::error::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::bump","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::parse_hex","regex_syntax::unicode::ages::imp::ast::parse::ParserI::parser","regex_syntax::ast::parse::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::tests::ast::parse::ParserI::span_char","regex_syntax::ast::parse::tests::is_meta_character","regex_syntax::unicode::ages::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::ast::parse::ParserI::parse_perl_class","regex_syntax::parser::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_space::ast::parse::ParserI::parse_octal","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::bump","regex_syntax::unicode::bool_property::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::error","regex_syntax::unicode::gcb::ast::parse::ParserI::char","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::core::panicking::assert_failed","regex_syntax::unicode_tables::perl_decimal::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::print::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::print::core::panicking::assert_failed","regex_syntax::debug::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::imp::is_escapeable_character","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::parser::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::script_extension::is_escapeable_character","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Span::new","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::canonical_prop::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::error","regex_syntax::utf8::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::error::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::property_values::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::property_bool::core::panicking::assert_failed","regex_syntax::unicode::script::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_word::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_class_perl::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::debug::utf8_decode::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::pos","regex_syntax::unicode::sb::imp::is_meta_character","regex_syntax::unicode::script::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::error::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::ast::parse::ParserI::is_eof","regex_syntax::unicode::sb::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::core::panicking::assert_failed","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::error","regex_syntax::utf8::tests::ast::parse::ParserI::char","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::pos","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::bool_property::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::error","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::is_eof","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::ascii_class::is_meta_character","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::parse_hex","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::gcb::ast::parse::ParserI::parse_hex","regex_syntax::debug::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::pos","regex_syntax::unicode::script::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::span_char","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_flags::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::ast::parse::ParserI::parse_unicode_class","regex_syntax::parser::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::char","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::class::core::panicking::assert_failed","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::pos","regex_syntax::hir::translate::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::is_eof","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::tests::ast::parse::ParserI::parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::age::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_word::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::is_escapeable_character","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::core::panicking::assert_failed","regex_syntax::ast::{impl#32}::drop::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::print::ast::parse::ParserI::bump","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::is_meta_character","regex_syntax::unicode_tables::script::ast::parse::ParserI::parse_octal","regex_syntax::unicode::property_values::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::sb::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::rank::ast::parse::ParserI::parse_perl_class","regex_syntax::utf8::ast::parse::ParserI::parser","regex_syntax::hir::tests::core::panicking::assert_failed","regex_syntax::either::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::script::ast::parse::ParserI::char","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::bump","regex_syntax::hir::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::perl_word::ast::parse::ParserI::char","regex_syntax::hir::visitor::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#18}::from_name::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::bump","regex_syntax::unicode::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::sentence_break::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#3}::fmt::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_space::ast::parse::ParserI::char","regex_syntax::unicode::script::imp::ast::parse::ParserI::bump","regex_syntax::unicode::bool_property::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::pos","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::bump","regex_syntax::unicode::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_flags::is_escapeable_character","regex_syntax::unicode::is_word_character::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Span::new","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_space::is_meta_character","regex_syntax::ast::print::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::tests::hir_union::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#0}::as_slice::core::panicking::assert_failed::<char, char>","regex_syntax::error::tests::ast::parse::ParserI::bump","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::pos","regex_syntax::error::core::panicking::assert_failed","regex_syntax::ast::visitor::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::is_eof","regex_syntax::unicode::script_extension::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::parser::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::span_char","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::pos","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::interval::ast::parse::ParserI::error","regex_syntax::hir::visitor::ast::parse::ParserI::pos","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::grapheme_cluster_break::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::error","regex_syntax::parser::is_meta_character","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::script_extension::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::print::ast::parse::ParserI::parse_octal","regex_syntax::unicode::ast::parse::ParserI::bump","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::script_extension::imp::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::bump","regex_syntax::unicode::script::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::general_category::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::sentence_break::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::grapheme_cluster_break::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::span_char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::bump","regex_syntax::unicode::property_values::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#4}::fmt_repetition::is_escapeable_character","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::parse_hex","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_digit::imp::core::panicking::assert_failed","regex_syntax::hir::{impl#6}::subs::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::property_values::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::ast::parse::ParserI::span_char","regex_syntax::hir::print::tests::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::ages::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::script_extension::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_digit::imp::core::panicking::assert_failed::<char, char>","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::debug::ast::parse::ParserI::bump","regex_syntax::rank::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::span_char","regex_syntax::unicode::is_word_character::is_meta_character","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script_extension::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::wb::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::tests::ast::parse::ParserI::parse_hex","regex_syntax::unicode::ages::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::case_folding_simple::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::word_break::is_meta_character","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#31}::drop::is_meta_character","regex_syntax::unicode::script::ast::parse::ParserI::span_char","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::pos","regex_syntax::hir::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::pos","regex_syntax::hir::literal::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Span::new","regex_syntax::unicode::is_word_character::imp::ast::Span::new","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#11}::fmt::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::utf8::tests::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::is_escapeable_character","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::perl_space::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::is_word_character::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::parse::is_escapeable_character","regex_syntax::unicode::perl_digit::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::is_word_character::ast::Span::new","regex_syntax::ast::{impl#32}::drop::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::parser","regex_syntax::rank::ast::parse::ParserI::bump","regex_syntax::ast::core::panicking::assert_failed::<char, char>","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::error::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::error","regex_syntax::unicode_tables::perl_decimal::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::parser","regex_syntax::parser::ast::parse::ParserI::parse_octal","regex_syntax::unicode::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::print::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::literal::{impl#9}::from::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::parser","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::parse::{impl#0}::into_class_literal::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::error","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::interval::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_literal::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::print::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::bump","regex_syntax::hir::translate::tests::ast::parse::ParserI::parse_octal","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::canonical_prop::is_escapeable_character","regex_syntax::unicode::perl_space::imp::ast::Span::new","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_literal::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::hir_union::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::age::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_word::imp::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::is_eof","regex_syntax::parser::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::ast::parse::ParserI::bump","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#0}::extract::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::is_eof","regex_syntax::hir::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script_extension::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::char","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::pos","regex_syntax::hir::literal::tests::is_escapeable_character","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Span::new","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::ast::parse::ParserI::parse_octal","regex_syntax::either::ast::parse::ParserI::<'_, P>::char","regex_syntax::utf8::ast::parse::ParserI::bump","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::parser::core::panicking::assert_failed::<char, char>","regex_syntax::hir::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_group_pre::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Span::new","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_literal::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::tests::ast::Span::new","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::rank::ast::parse::ParserI::parser","regex_syntax::unicode_tables::script::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::rank::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::parse_octal","regex_syntax::hir::print::tests::ast::parse::ParserI::parse_octal","regex_syntax::unicode::perl_word::imp::is_meta_character","regex_syntax::unicode::tests::is_meta_character","regex_syntax::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::error","regex_syntax::utf8::tests::encode_surrogate::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::interval::ast::parse::ParserI::is_eof","regex_syntax::unicode::perl_digit::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::pos","regex_syntax::unicode::wb::ast::parse::ParserI::bump","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_group_pre::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::property_names::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ast::parse::ParserI::char","regex_syntax::unicode::ast::parse::ParserI::pos","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::property_bool::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::perl_word::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::canonical_prop::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::parser::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::error","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::error","regex_syntax::tests::ast::parse::ParserI::parser","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::word_break::ast::Span::new","regex_syntax::unicode_tables::is_escapeable_character","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::is_escapeable_character","regex_syntax::hir::{impl#24}::drop::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::bool_property::is_meta_character","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_space::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::class::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::{impl#32}::drop::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::parse_unicode_class","regex_syntax::either::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::error","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::bump","regex_syntax::utf8::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::ages::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::interval::is_escapeable_character","regex_syntax::ast::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::property_values::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::parser","regex_syntax::hir::literal::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::error::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::literal::ast::parse::ParserI::parser","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::property_names::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::parse_octal","regex_syntax::unicode::property_values::ast::parse::ParserI::parser","regex_syntax::debug::utf8_decode::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_word::ast::Span::new","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::class::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::ast::parse::ParserI::char","regex_syntax::hir::{impl#6}::subs::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::translate::ascii_class::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#24}::drop::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::char","regex_syntax::rank::ast::parse::ParserI::error","regex_syntax::error::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::bump","regex_syntax::unicode::tests::ast::parse::ParserI::pos","regex_syntax::hir::{impl#3}::fmt::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::script_extension::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::error::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::span_char","regex_syntax::unicode::ages::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::ast::parse::ParserI::pos","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::error","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::parse_octal","regex_syntax::error::ast::parse::ParserI::parse_octal","regex_syntax::ast::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::ast::parse::ParserI::parse_unicode_class","regex_syntax::rank::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::parser","regex_syntax::ast::{impl#32}::drop::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::{impl#3}::fmt::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::is_eof","regex_syntax::utf8::tests::ast::parse::ParserI::is_eof","regex_syntax::ast::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::{impl#18}::from_name::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::panicking::assert_failed","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::parser::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::char","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#24}::drop::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::char","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::interval::ast::Span::new","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::ages::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::sb::imp::ast::parse::ParserI::char","regex_syntax::unicode::gcb::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::literal::tests::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::imp::core::panicking::assert_failed","regex_syntax::unicode::script::imp::ast::parse::ParserI::span_char","regex_syntax::error::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::ast::parse::ParserI::bump","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_decimal::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::tests::ast::parse::ParserI::parser","regex_syntax::unicode::canonical_prop::imp::ast::Span::new","regex_syntax::hir::ast::parse::ParserI::is_eof","regex_syntax::unicode::gcb::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::{impl#18}::from_name::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::utf8::is_meta_character","regex_syntax::hir::print::ast::parse::ParserI::parse_unicode_class","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::error","regex_syntax::unicode::gencat::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::either::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::rank::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::class::ast::parse::ParserI::pos","regex_syntax::hir::literal::is_meta_character","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::char","regex_syntax::unicode::ages::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_space::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::encode_surrogate::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::gcb::ast::Span::new","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::hir_union::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::bump","regex_syntax::debug::utf8_decode::ast::parse::ParserI::error","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::bump","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#0}::extract::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::parser","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::panicking::assert_failed","regex_syntax::ast::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::class::ast::parse::ParserI::parser","regex_syntax::unicode_tables::perl_space::core::panicking::assert_failed","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::error","regex_syntax::ast::ast::parse::ParserI::error","regex_syntax::ast::visitor::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::gcb::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::bump","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::pos","regex_syntax::unicode::is_word_character::ast::parse::ParserI::error","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::is_eof","regex_syntax::unicode::is_word_character::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::{impl#4}::pop_group::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Span::new","regex_syntax::unicode::gcb::imp::ast::Span::new","regex_syntax::unicode::sb::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::error","regex_syntax::unicode_tables::age::is_meta_character","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::parse_octal","regex_syntax::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::{impl#18}::from_name::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::pos","regex_syntax::unicode::canonical_prop::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::char","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::bump","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::parser","regex_syntax::unicode::script_extension::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::char","regex_syntax::unicode::script::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::is_eof","regex_syntax::ast::tests::ast::parse::ParserI::bump","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::gcb::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::is_meta_character","regex_syntax::unicode::script::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::perl_space::ast::parse::ParserI::bump","regex_syntax::unicode::gcb::imp::core::panicking::assert_failed::<char, char>","regex_syntax::hir::literal::{impl#9}::from::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::either::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::grapheme_cluster_break::core::panicking::assert_failed","regex_syntax::ast::{impl#3}::fmt::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::debug::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::either::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::panicking::assert_failed","regex_syntax::utf8::tests::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#9}::from::core::panicking::assert_failed","regex_syntax::utf8::ast::parse::ParserI::span_char","regex_syntax::either::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::is_eof","regex_syntax::hir::print::tests::is_meta_character","regex_syntax::unicode::script::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_flags::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::either::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::utf8::tests::encode_surrogate::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::parser","regex_syntax::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script_extension::imp::is_escapeable_character","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::tests::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::char","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::error::ast::parse::ParserI::bump","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::bump","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::parse_octal","regex_syntax::unicode::ages::ast::parse::ParserI::parse_octal","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_word::ast::parse::ParserI::parser","regex_syntax::hir::literal::ast::Span::new","regex_syntax::unicode_tables::property_bool::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::class::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::parser","regex_syntax::unicode::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::wb::imp::core::panicking::assert_failed","regex_syntax::hir::translate::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::pos","regex_syntax::hir::translate::tests::hir_difference::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::is_escapeable_character","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::tests::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_word::imp::is_escapeable_character","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::script_extension::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#0}::into_class_set_item::is_meta_character","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::visitor::ast::parse::ParserI::bump","regex_syntax::ast::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_literal::is_escapeable_character","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::pos","regex_syntax::unicode_tables::property_values::is_meta_character","regex_syntax::error::is_escapeable_character","regex_syntax::unicode::sb::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::parse_octal","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::wb::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#32}::drop::is_escapeable_character","regex_syntax::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::word_break::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::tests::ast::Span::new","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::script::imp::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::span_char","regex_syntax::utf8::{impl#2}::fmt::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::parse_octal","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_values::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::{impl#4}::overlaps::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#6}::subs::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::tests::ast::Span::new","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::sb::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::rank::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::canonical_prop::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::gcb::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::error","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::pos","regex_syntax::hir::translate::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gencat::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::error","regex_syntax::ast::print::ast::parse::ParserI::parser","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::is_escapeable_character","regex_syntax::hir::print::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::rank::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::ast::parse::ParserI::char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::bump","regex_syntax::hir::translate::ascii_class::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::bump","regex_syntax::hir::print::ast::parse::ParserI::is_eof","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::error","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script_extension::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::ast::parse::ParserI::pos","regex_syntax::unicode::perl_space::imp::is_meta_character","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::error::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::panicking::assert_failed","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::parse_octal","regex_syntax::ast::visitor::ast::parse::ParserI::parse_hex","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::is_word_character::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::tests::ast::parse::ParserI::error","regex_syntax::hir::literal::tests::core::panicking::assert_failed","regex_syntax::hir::{impl#11}::fmt::is_escapeable_character","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_space::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::tests::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::parser","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::char","regex_syntax::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::parse_octal","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::{impl#0}::into_class_set_item::is_escapeable_character","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::ast::parse::ParserI::<'_, P>::char","regex_syntax::rank::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::error::ast::parse::ParserI::char","regex_syntax::hir::print::tests::ast::parse::ParserI::bump","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::rank::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::bump","regex_syntax::either::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::visitor::is_meta_character","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::tests::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::span_char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::parse_octal","regex_syntax::hir::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::ParserI::char","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::rank::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::debug::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::span_char","regex_syntax::ast::print::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::parser::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::tests::core::panicking::assert_failed","regex_syntax::unicode::ages::ast::parse::ParserI::pos","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::span_char","regex_syntax::hir::interval::ast::parse::ParserI::span_char","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_digit::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::rank::is_meta_character","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::span_char","regex_syntax::utf8::tests::encode_surrogate::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::ast::Span::new","regex_syntax::utf8::{impl#2}::fmt::is_meta_character","regex_syntax::debug::ast::Span::new","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::perl_word::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_assertion::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::visitor::ast::parse::ParserI::bump","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::bump","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Span::new","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::tests::ast::parse::ParserI::parse_octal","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::debug::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::visitor::ast::parse::ParserI::span_char","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_literal::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::is_meta_character","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::class::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::is_eof","regex_syntax::unicode::script::imp::ast::parse::ParserI::parser","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::span_char","regex_syntax::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_literal::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::perl_digit::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::tests::ast::parse::ParserI::bump","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::parser","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::span_char","regex_syntax::ast::parse::ParserI::pos","regex_syntax::unicode::bool_property::ast::parse::ParserI::parse_unicode_class","regex_syntax::utf8::{impl#2}::fmt::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::utf8_decode::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::literal::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::{impl#31}::drop::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::parse_octal","regex_syntax::ast::visitor::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::parse::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::span_char","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#18}::from_name::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_set_item::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::char","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::print::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::tests::ast::Span::new","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::bump","regex_syntax::unicode::sb::ast::Span::new","regex_syntax::ast::parse::{impl#4}::pop_group::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::bool_property::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::core::panicking::assert_failed","regex_syntax::ast::{impl#31}::drop::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_bool::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::tests::ast::parse::ParserI::bump","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::sentence_break::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::visitor::ast::parse::ParserI::parser","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::parse_unicode_class","regex_syntax::rank::ast::parse::ParserI::char","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_digit::ast::parse::ParserI::error","regex_syntax::unicode::sb::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::gencat::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::pos","regex_syntax::unicode_tables::property_values::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::bool_property::imp::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::property_values::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::ast::parse::ParserI::is_eof","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::wb::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#31}::drop::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::char","regex_syntax::unicode::sb::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#13}::fmt::core::panicking::assert_failed","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::perl_word::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::ast::parse::ParserI::span_char","regex_syntax::hir::{impl#3}::fmt::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#6}::subs::core::panicking::assert_failed","regex_syntax::hir::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::gcb::core::panicking::assert_failed","regex_syntax::ast::parse::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::char","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::perl_word::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::is_eof","regex_syntax::utf8::ast::parse::ParserI::parse_hex","regex_syntax::unicode::bool_property::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::rank::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::sb::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::script_extension::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::parser","regex_syntax::hir::print::ast::parse::ParserI::pos","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::Span::new","regex_syntax::unicode_tables::property_bool::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::imp::ast::Span::new","regex_syntax::utf8::{impl#0}::as_slice::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::property_names::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script::imp::ast::parse::ParserI::pos","regex_syntax::unicode::perl_digit::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::parser","regex_syntax::unicode_tables::word_break::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::age::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_word::is_escapeable_character","regex_syntax::unicode_tables::script::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_difference::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::literal::{impl#0}::extract::ast::Span::new","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::parse::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::interval::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::print::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::error","regex_syntax::ast::parse::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_repetition::is_meta_character","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::parser::ast::parse::ParserI::error","regex_syntax::unicode::perl_word::ast::parse::ParserI::pos","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::case_folding_simple::core::panicking::assert_failed","regex_syntax::unicode::sb::imp::is_escapeable_character","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Span::new","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::error","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::parse_hex","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::hir_difference::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::tests::ast::parse::ParserI::span_char","regex_syntax::hir::tests::ast::Span::new","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#0}::auxiliary_span::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::debug::utf8_decode::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::char","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::is_eof","regex_syntax::ast::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::char","regex_syntax::debug::ast::parse::ParserI::pos","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::is_eof","regex_syntax::either::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::script::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::ast::parse::ParserI::parser","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::either::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::bump","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::either::is_escapeable_character","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::grapheme_cluster_break::is_meta_character","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gencat::imp::is_escapeable_character","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::parser","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::visitor::core::panicking::assert_failed","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::script::ast::parse::ParserI::error","regex_syntax::rank::ast::Span::new","regex_syntax::unicode_tables::case_folding_simple::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::literal::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::parser","regex_syntax::ast::parse::tests::ast::parse::ParserI::bump","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::wb::ast::parse::ParserI::pos","regex_syntax::is_meta_character","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::utf8::tests::encode_surrogate::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_digit::core::panicking::assert_failed","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::grapheme_cluster_break::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::debug::core::panicking::assert_failed","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::is_eof","regex_syntax::hir::interval::ast::parse::ParserI::pos","regex_syntax::unicode_tables::age::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::ast::parse::ParserI::parse_octal","regex_syntax::debug::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::error","regex_syntax::unicode::script_extension::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::wb::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::age::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::parse_octal","regex_syntax::hir::tests::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::char","regex_syntax::unicode::bool_property::imp::core::panicking::assert_failed","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::parser","regex_syntax::ast::is_meta_character","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::wb::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#0}::auxiliary_span::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::script::imp::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::parse_hex","regex_syntax::unicode::class::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::tests::ast::parse::ParserI::bump","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::perl_word::core::panicking::assert_failed","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::gcb::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::wb::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::visitor::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::gcb::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::error","regex_syntax::hir::literal::tests::core::panicking::assert_failed::<char, char>","regex_syntax::ast::visitor::ast::parse::ParserI::parser","regex_syntax::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::debug::utf8_decode::core::panicking::assert_failed","regex_syntax::hir::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::bump","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::error","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::is_eof","regex_syntax::unicode::gencat::core::panicking::assert_failed","regex_syntax::ast::{impl#3}::fmt::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::script::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Span::new","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::parser","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#31}::drop::core::panicking::assert_failed","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::bump","regex_syntax::hir::translate::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::ascii_class::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::ascii_class::ast::Span::new","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::wb::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::error","regex_syntax::debug::ast::parse::ParserI::char","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::bump","regex_syntax::hir::print::tests::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::parse_perl_class","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::parser","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::visitor::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::tests::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::either::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::parser::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::{impl#3}::fmt::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::is_meta_character","regex_syntax::unicode::sb::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::tests::hir_union::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_word::ast::parse::ParserI::error","regex_syntax::unicode_tables::property_values::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::pos","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#32}::drop::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::visitor::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::imp::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::sentence_break::core::panicking::assert_failed::<char, char>","regex_syntax::debug::utf8_decode::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::bump","regex_syntax::unicode::gcb::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::error","regex_syntax::unicode_tables::grapheme_cluster_break::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::print::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::{impl#24}::drop::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::debug::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::grapheme_cluster_break::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::property_values::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::debug::ast::parse::ParserI::error","regex_syntax::unicode_tables::script_extension::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::tests::ast::Span::new","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::tests::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_repetition::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::char","regex_syntax::unicode::perl_digit::ast::parse::ParserI::span_char","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::error","regex_syntax::unicode::sb::imp::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::tests::ast::parse::ParserI::char","regex_syntax::ast::parse::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::ages::imp::ast::parse::ParserI::parse_octal","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::bump","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::sb::core::panicking::assert_failed","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::bump","regex_syntax::hir::print::ast::Span::new","regex_syntax::debug::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::bump","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::{impl#3}::fmt::ast::Span::new","regex_syntax::ast::{impl#13}::fmt::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::is_word_character::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::debug::utf8_decode::ast::parse::ParserI::is_eof","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::perl_word::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_perl::is_meta_character","regex_syntax::ast::print::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::rank::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::perl_word::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::wb::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::print::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::is_eof","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script_extension::ast::parse::ParserI::span_char","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::bump","regex_syntax::unicode::ages::ast::parse::ParserI::bump","regex_syntax::unicode::class::is_meta_character","regex_syntax::utf8::tests::ast::parse::ParserI::parser","regex_syntax::unicode::gencat::imp::core::panicking::assert_failed::<char, char>","regex_syntax::hir::print::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::span_char","regex_syntax::hir::tests::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::property_values::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::bool_property::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::is_meta_character","regex_syntax::debug::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::is_meta_character","regex_syntax::ast::visitor::core::panicking::assert_failed::<char, char>","regex_syntax::hir::literal::{impl#0}::extract::is_meta_character","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::bump","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::parse_octal","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#0}::auxiliary_span::is_meta_character","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::is_meta_character","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::is_escapeable_character","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script_extension::is_meta_character","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::wb::core::panicking::assert_failed","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::gencat::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::char","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_digit::ast::parse::ParserI::char","regex_syntax::ast::core::panicking::assert_failed","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::pos","regex_syntax::error::tests::ast::parse::ParserI::is_eof","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::parse_unicode_class","regex_syntax::error::tests::ast::parse::ParserI::pos","regex_syntax::unicode::perl_space::ast::parse::ParserI::is_eof","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::span_char","regex_syntax::hir::literal::{impl#0}::extract::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::sb::is_escapeable_character","regex_syntax::unicode::wb::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::property_values::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script_extension::imp::core::panicking::assert_failed","regex_syntax::hir::print::is_escapeable_character","regex_syntax::unicode::script_extension::ast::parse::ParserI::pos","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::script::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::sb::ast::parse::ParserI::bump","regex_syntax::hir::translate::ast::parse::ParserI::pos","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::script_extension::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::is_eof","regex_syntax::unicode::perl_digit::ast::parse::ParserI::pos","regex_syntax::hir::{impl#6}::subs::ast::Span::new","regex_syntax::unicode::canonical_prop::is_meta_character","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Span::new","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::property_values::imp::core::panicking::assert_failed","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::char","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::{impl#2}::fmt::ast::Span::new","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::span_char","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::parse_hex","regex_syntax::unicode::gencat::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::is_meta_character","regex_syntax::unicode::sb::imp::core::panicking::assert_failed","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_decimal::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::either::ast::parse::ParserI::parser","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::parser","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::print::tests::ast::parse::ParserI::char","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::bump","regex_syntax::hir::translate::ascii_class::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::core::panicking::assert_failed","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::ast::parse::ParserI::parse_perl_class","regex_syntax::error::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::print::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::panicking::assert_failed","regex_syntax::unicode::gcb::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::bool_property::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::bump","regex_syntax::unicode::script::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::perl_decimal::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::perl_digit::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::utf8_decode::ast::parse::ParserI::pos","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::span_char","regex_syntax::rank::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::{impl#4}::overlaps::ast::Span::new","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#24}::drop::is_escapeable_character","regex_syntax::debug::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::{impl#4}::pop_group::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::canonical_prop::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::sentence_break::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_flags::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#0}::auxiliary_span::core::panicking::assert_failed::<char, char>","regex_syntax::hir::translate::tests::hir_union::core::panicking::assert_failed","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::span_char","regex_syntax::hir::translate::tests::hir_difference::core::panicking::assert_failed::<char, char>","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::is_escapeable_character","regex_syntax::ast::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::perl_word::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::property_values::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::sb::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::pos","regex_syntax::unicode::script::core::panicking::assert_failed","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::is_escapeable_character","regex_syntax::unicode_tables::general_category::ast::Span::new","regex_syntax::ast::{impl#18}::from_name::ast::Span::new","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#13}::fmt::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::parser::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::ages::imp::core::panicking::assert_failed","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::parse_octal","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::ast::parse::ParserI::char","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::char","regex_syntax::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_word::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::script::ast::parse::ParserI::parser","regex_syntax::unicode::is_word_character::imp::is_meta_character","regex_syntax::hir::literal::tests::ast::parse::ParserI::parser","regex_syntax::unicode_tables::ast::parse::ParserI::pos","regex_syntax::unicode::bool_property::ast::Span::new","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::char","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::perl_space::ast::Span::new","regex_syntax::unicode::ages::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::tests::ast::parse::ParserI::error","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#0}::as_slice::is_meta_character","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::pos","regex_syntax::utf8::ast::parse::ParserI::parse_octal","regex_syntax::ast::parse::{impl#4}::pop_group::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::property_values::ast::parse::ParserI::parse_hex","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::word_break::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::imp::ast::parse::ParserI::parse_hex","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::print::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::bump","regex_syntax::unicode::{impl#4}::overlaps::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::debug::utf8_decode::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::{impl#13}::fmt::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::age::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::ast::parse::ParserI::span_char","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::word_break::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_group_pre::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::imp::ast::parse::ParserI::bump","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::parser","regex_syntax::unicode_tables::age::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::tests::hir_union::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_literal::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::char","regex_syntax::error::tests::is_escapeable_character","regex_syntax::hir::translate::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::perl_word::imp::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::error::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::parse_octal","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::parse_hex","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::error","regex_syntax::ast::{impl#0}::auxiliary_span::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::ages::imp::ast::Span::new","regex_syntax::hir::literal::{impl#9}::from::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::pos","regex_syntax::unicode::ages::imp::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::span_char","regex_syntax::either::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::error::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_union::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::bool_property::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_class_perl::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::core::panicking::assert_failed::<char, char>","regex_syntax::hir::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::tests::ast::parse::ParserI::pos","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::tests::ast::parse::ParserI::char","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::pos","regex_syntax::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_repetition::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#3}::fmt::ast::Span::new","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::tests::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::wb::imp::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_literal::core::panicking::assert_failed","regex_syntax::unicode::gencat::ast::parse::ParserI::parser","regex_syntax::tests::core::panicking::assert_failed","regex_syntax::unicode::ages::ast::parse::ParserI::is_eof","regex_syntax::unicode::is_word_character::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::parser","regex_syntax::hir::{impl#3}::fmt::is_escapeable_character","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::parse_hex","regex_syntax::unicode::bool_property::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::visitor::ast::parse::ParserI::char","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::ast::parse::ParserI::bump","regex_syntax::unicode_tables::age::ast::parse::ParserI::bump","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_digit::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script::is_meta_character","regex_syntax::tests::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::age::ast::parse::ParserI::parser","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::error","regex_syntax::rank::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::is_word_character::core::panicking::assert_failed","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::print::tests::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::{impl#0}::as_slice::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::{impl#18}::from_name::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::property_values::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::char","regex_syntax::hir::visitor::ast::parse::ParserI::parse_unicode_class","regex_syntax::error::ast::parse::ParserI::parser","regex_syntax::unicode::wb::imp::ast::parse::ParserI::parser","regex_syntax::ast::visitor::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::perl_decimal::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::script::ast::parse::ParserI::bump","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::error","regex_syntax::unicode::script::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::class::ast::parse::ParserI::bump","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::script_extension::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::script::is_meta_character","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::is_eof","regex_syntax::hir::literal::{impl#0}::extract::core::panicking::assert_failed","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::debug::utf8_decode::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::script::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::interval::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::parser","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_digit::ast::parse::ParserI::parser","regex_syntax::ast::print::tests::is_meta_character","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::print::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::error","regex_syntax::ast::tests::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#3}::fmt::core::panicking::assert_failed::<char, char>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_space::ast::Span::new","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::bump","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::debug::utf8_decode::ast::parse::ParserI::parse_hex","regex_syntax::unicode::script_extension::core::panicking::assert_failed","regex_syntax::unicode::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::sb::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_perl::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#6}::subs::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::class::ast::Span::new","regex_syntax::unicode::tests::ast::parse::ParserI::char","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#13}::fmt::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::debug::utf8_decode::ast::parse::ParserI::bump","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::bump","regex_syntax::hir::visitor::is_escapeable_character","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::pos","regex_syntax::parser::is_escapeable_character","regex_syntax::unicode::sb::ast::parse::ParserI::error","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::{impl#9}::from::ast::Span::new","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::property_values::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::char","regex_syntax::ast::visitor::ast::parse::ParserI::char","regex_syntax::parser::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::parse_hex","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::tests::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::pos","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::pos","regex_syntax::unicode::wb::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::tests::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::parser","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::parse_octal","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::print::tests::ast::parse::ParserI::pos","regex_syntax::unicode::is_word_character::ast::parse::ParserI::bump","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::tests::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::script::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_decimal::core::panicking::assert_failed","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::is_eof","regex_syntax::either::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::script::ast::parse::ParserI::span_char","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::ast::Span::new","regex_syntax::unicode::tests::is_escapeable_character","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::{impl#0}::into_class_set_item::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::case_folding_simple::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gencat::imp::ast::Span::new","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::{impl#3}::fmt::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::perl_decimal::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::error","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::imp::is_escapeable_character","regex_syntax::unicode_tables::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::interval::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::{impl#11}::fmt::core::panicking::assert_failed","regex_syntax::unicode_tables::property_values::core::panicking::assert_failed","regex_syntax::hir::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::property_values::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::visitor::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::{impl#4}::overlaps::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::property_values::imp::is_meta_character","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::word_break::core::panicking::assert_failed","regex_syntax::unicode::{impl#4}::overlaps::is_escapeable_character","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::bump","regex_syntax::ast::{impl#0}::auxiliary_span::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::gcb::imp::is_meta_character","regex_syntax::ast::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::visitor::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::utf8::tests::encode_surrogate::is_escapeable_character","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::sb::imp::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::char","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::canonical_prop::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::parse_octal","regex_syntax::hir::visitor::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::parse_hex","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#9}::from::is_escapeable_character","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::ast::parse::ParserI::bump","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::parse::{impl#0}::into_class_literal::is_escapeable_character","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::bool_property::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode_tables::word_break::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::error","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Span::new","regex_syntax::hir::literal::{impl#0}::extract::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::sentence_break::ast::Span::new","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::is_eof","regex_syntax::rank::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::error","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::age::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::bump","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::parse_unicode_class","regex_syntax::utf8::tests::ast::parse::ParserI::parse_hex","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::tests::ast::Span::new","regex_syntax::unicode_tables::perl_word::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::sb::imp::ast::Span::new","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::imp::ast::Span::new","regex_syntax::ast::parse::{impl#0}::into_class_literal::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::tests::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::parser","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::span_char","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::parser","regex_syntax::hir::visitor::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::ages::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::tests::hir_difference::is_escapeable_character","regex_syntax::unicode::is_word_character::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_space::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::visitor::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#13}::fmt::ast::Span::new","regex_syntax::debug::ast::parse::ParserI::parse_hex","regex_syntax::unicode::class::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::age::is_escapeable_character","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::{impl#3}::fmt::is_meta_character","regex_syntax::hir::literal::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::panicking::assert_failed","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::literal::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::tests::hir_difference::is_meta_character","regex_syntax::unicode::is_word_character::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::is_eof","regex_syntax::unicode::gcb::ast::parse::ParserI::span_char","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::ast::Span::new","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::parse_hex","regex_syntax::unicode::ages::imp::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::is_escapeable_character","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::parse_octal","regex_syntax::unicode::ages::ast::parse::ParserI::parser","regex_syntax::unicode::wb::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::tests::encode_surrogate::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Span::new","regex_syntax::debug::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::is_eof","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::char","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::span_char","regex_syntax::core::panicking::assert_failed","regex_syntax::ast::parse::ast::parse::ParserI::is_eof","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::parse_octal","regex_syntax::ast::{impl#18}::from_name::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_assertion::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#18}::from_name::is_meta_character","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::bump","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::property_bool::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::ages::imp::ast::parse::ParserI::error","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::case_folding_simple::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::perl_space::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::interval::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::is_eof","regex_syntax::ast::print::core::panicking::assert_failed","regex_syntax::unicode::is_word_character::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::debug::utf8_decode::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::{impl#24}::drop::ast::Span::new","regex_syntax::ast::print::tests::ast::Span::new","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::error","regex_syntax::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#31}::drop::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::case_folding_simple::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::error","regex_syntax::unicode_tables::general_category::is_escapeable_character","regex_syntax::ast::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_word::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::is_word_character::imp::is_escapeable_character","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::tests::is_meta_character","regex_syntax::debug::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::parse::ast::parse::ParserI::parser","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::tests::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_space::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::error::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::property_values::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::parse_octal","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::ascii_class::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::translate::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::is_word_character::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::error","regex_syntax::unicode::property_values::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::pos","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::interval::ast::parse::ParserI::char","regex_syntax::hir::translate::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::is_meta_character","regex_syntax::unicode_tables::script::ast::parse::ParserI::bump","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::parser","regex_syntax::hir::translate::ast::parse::ParserI::error","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::script_extension::imp::ast::Span::new","regex_syntax::hir::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::bool_property::ast::parse::ParserI::parse_hex","regex_syntax::hir::print::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::property_values::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gencat::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_bool::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_names::is_escapeable_character","regex_syntax::hir::{impl#6}::subs::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::pos","regex_syntax::hir::translate::core::panicking::assert_failed","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::script_extension::imp::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::is_eof","regex_syntax::ast::parse::is_meta_character","regex_syntax::ast::{impl#31}::drop::is_escapeable_character","regex_syntax::error::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::visitor::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::gencat::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::parse_octal","regex_syntax::debug::utf8_decode::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::tests::ast::parse::ParserI::parser","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::gcb::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::tests::ast::parse::ParserI::<'_, P>::pos","regex_syntax::error::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::visitor::is_escapeable_character","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::gcb::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::pos","regex_syntax::unicode_tables::script::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::span_char","regex_syntax::ast::tests::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::error","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::char","regex_syntax::unicode::wb::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::ast::parse::ParserI::char","regex_syntax::either::core::panicking::assert_failed","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::translate::tests::ast::parse::ParserI::char","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gcb::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::{impl#2}::fmt::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::parse_octal","regex_syntax::unicode::canonical_prop::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::literal::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::script::ast::parse::ParserI::parse_octal","regex_syntax::unicode::sb::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::error","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::ages::is_meta_character","regex_syntax::ast::print::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::class::ast::parse::ParserI::char","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::panicking::assert_failed","regex_syntax::ast::print::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::pos","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::sb::imp::ast::parse::ParserI::parse_hex","regex_syntax::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::is_escapeable_character","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::sb::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::parser::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_digit::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_digit::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::error::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::tests::core::panicking::assert_failed","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::error","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::span_char","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::ast::parse::ParserI::parse_hex","regex_syntax::unicode::sb::imp::ast::parse::ParserI::pos","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::char","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::perl_word::ast::parse::ParserI::parse_octal","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::utf8::core::panicking::assert_failed","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::is_eof","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::char","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::parser","regex_syntax::utf8::tests::encode_surrogate::ast::Span::new","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::parser","regex_syntax::unicode::perl_digit::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::ast::Span::new","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::print::tests::is_escapeable_character","regex_syntax::either::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::parse_octal","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::span_char","regex_syntax::unicode::property_values::ast::parse::ParserI::pos","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::{impl#24}::drop::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::utf8::{impl#2}::fmt::core::panicking::assert_failed","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::property_names::core::panicking::assert_failed","regex_syntax::unicode::bool_property::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::wb::imp::ast::parse::ParserI::error","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::parser","regex_syntax::debug::utf8_decode::is_escapeable_character","regex_syntax::ast::visitor::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::parser::ast::parse::ParserI::char","regex_syntax::hir::translate::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::parse_octal","regex_syntax::unicode::canonical_prop::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script::is_escapeable_character","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::ast::parse::ParserI::parse_octal","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::pos","regex_syntax::tests::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::is_escapeable_character","regex_syntax::unicode_tables::property_names::ast::parse::ParserI::char","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::ages::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#13}::fmt::is_meta_character","regex_syntax::hir::{impl#24}::drop::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::span_char","regex_syntax::hir::literal::{impl#0}::extract::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::panicking::assert_failed","regex_syntax::unicode::tests::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::{impl#11}::fmt::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::wb::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::ast::parse::ParserI::char","regex_syntax::unicode_tables::ast::parse::ParserI::parser","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::utf8::ast::parse::ParserI::error","regex_syntax::unicode_tables::age::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::pos","regex_syntax::unicode::class::ast::parse::ParserI::parse_octal","regex_syntax::ast::print::tests::is_escapeable_character","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Span::new","regex_syntax::debug::utf8_decode::ast::Span::new","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Span::new","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::bump","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::parser::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::script_extension::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::print::ast::parse::ParserI::char","regex_syntax::unicode::sb::ast::parse::ParserI::parse_hex","regex_syntax::unicode::sb::imp::ast::parse::ParserI::parser","regex_syntax::unicode::is_word_character::imp::core::panicking::assert_failed","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::is_meta_character","regex_syntax::ast::tests::ast::parse::ParserI::error","regex_syntax::ast::parse::tests::ast::parse::ParserI::error","regex_syntax::error::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#24}::drop::core::panicking::assert_failed","regex_syntax::parser::ast::parse::ParserI::span_char","regex_syntax::debug::utf8_decode::is_meta_character","regex_syntax::debug::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::ast::parse::ParserI::parse_hex","regex_syntax::unicode::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::parse_hex","regex_syntax::unicode::gencat::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::script::imp::ast::parse::ParserI::is_eof","regex_syntax::unicode::script_extension::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#0}::auxiliary_span::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::is_word_character::ast::parse::ParserI::pos","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::debug::utf8_decode::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::parse_hex","regex_syntax::unicode::canonical_prop::ast::Span::new","regex_syntax::hir::translate::tests::hir_difference::ast::Span::new","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::parse_hex","regex_syntax::unicode::property_values::imp::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::tests::ast::parse::ParserI::pos","regex_syntax::rank::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::char","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::wb::imp::ast::parse::ParserI::char","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::pos","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::wb::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::ParserI::is_eof","regex_syntax::unicode::script::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::script_extension::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::sb::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::error::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_word::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::bool_property::ast::parse::ParserI::error","regex_syntax::unicode_tables::age::ast::parse::ParserI::span_char","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::pos","regex_syntax::either::ast::Span::new","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::is_eof","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::print::ast::parse::ParserI::error","regex_syntax::parser::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::parse_hex","regex_syntax::ast::{impl#32}::drop::ast::Span::new","regex_syntax::unicode::sb::ast::parse::ParserI::is_eof","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::is_eof","regex_syntax::unicode::ages::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::error::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::class::ast::parse::ParserI::error","regex_syntax::ast::{impl#31}::drop::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::script::ast::parse::ParserI::parser","regex_syntax::unicode::script::imp::is_meta_character","regex_syntax::ast::{impl#31}::drop::ast::Span::new","regex_syntax::either::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI::parse_octal","regex_syntax::unicode::property_values::imp::is_escapeable_character","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::script_extension::ast::parse::ParserI::error","regex_syntax::unicode_tables::property_bool::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::utf8::tests::is_escapeable_character","regex_syntax::unicode::ages::ast::parse::ParserI::span_char","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::is_eof","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::parse_hex","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::is_eof","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::wb::ast::Span::new","regex_syntax::hir::print::tests::ast::parse::ParserI::is_eof","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::is_eof","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::span_char","regex_syntax::tests::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::pos","regex_syntax::unicode::perl_space::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::parser::ast::Span::new","regex_syntax::hir::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::hir::visitor::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::bump","regex_syntax::unicode::ast::Span::new","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI::parser","regex_syntax::unicode::script::imp::ast::parse::ParserI::error","regex_syntax::unicode_tables::general_category::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::literal::ast::parse::ParserI::pos","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::error","regex_syntax::unicode::wb::is_meta_character","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::is_eof","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::perl_decimal::is_escapeable_character","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::parse::tests::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::parse_octal","regex_syntax::unicode::gencat::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::error","regex_syntax::hir::translate::ast::parse::ParserI::parse_octal","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::ages::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_group_pre::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::either::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::literal::tests::ast::parse::ParserI::pos","regex_syntax::unicode::bool_property::imp::is_meta_character","regex_syntax::either::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::parse_hex","regex_syntax::ast::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Span::new","regex_syntax::parser::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::parse_hex","regex_syntax::ast::{impl#18}::from_name::is_escapeable_character","regex_syntax::unicode::gencat::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Span::new","regex_syntax::hir::translate::tests::is_meta_character","regex_syntax::unicode::wb::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_digit::imp::is_meta_character","regex_syntax::unicode_tables::general_category::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_word::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::parser::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::literal::ast::parse::ParserI::error","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::panicking::assert_failed","regex_syntax::hir::print::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::error::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::char","regex_syntax::ast::print::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ParserI::error","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI::span_char","regex_syntax::utf8::{impl#0}::as_slice::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::panicking::assert_failed::<char, char>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::panicking::assert_failed","regex_syntax::ast::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::gcb::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::pos","regex_syntax::unicode::gcb::ast::parse::ParserI::error","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_word::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::char","regex_syntax::error::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::parser","regex_syntax::unicode::perl_space::imp::core::panicking::assert_failed","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::property_values::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::perl_space::imp::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::span_char","regex_syntax::unicode::perl_space::imp::is_escapeable_character","regex_syntax::ast::parse::ParserI::span_char","regex_syntax::hir::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::parse::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::ast::parse::{impl#4}::pop_group::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode_tables::script::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::rank::is_escapeable_character","regex_syntax::unicode::wb::imp::ast::parse::ParserI::bump","regex_syntax::unicode::perl_space::imp::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::rank::ast::parse::ParserI::span_char","regex_syntax::unicode::property_values::is_escapeable_character","regex_syntax::ast::parse::{impl#4}::pop_group::is_meta_character","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::char","regex_syntax::rank::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::sentence_break::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::parse_perl_class","regex_syntax::utf8::tests::ast::Span::new","regex_syntax::unicode_tables::general_category::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::ast::parse::ParserI::parse_octal","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::parse_perl_class","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::perl_space::is_meta_character","regex_syntax::utf8::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode_tables::ast::parse::ParserI::bump","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::parser","regex_syntax::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_word::core::panicking::assert_failed","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::canonical_prop::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::error::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::perl_space::ast::parse::ParserI::parser","regex_syntax::unicode::script::is_escapeable_character","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::utf8::{impl#2}::fmt::core::panicking::assert_failed::<char, char>","regex_syntax::unicode::ages::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::literal::{impl#9}::from::core::panicking::assert_failed::<char, char>","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::ast::parse::{impl#4}::pop_group::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::print::tests::ast::parse::ParserI::error","regex_syntax::unicode_tables::script::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::gcb::imp::is_escapeable_character","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI::parse_hex","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::age::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::error","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::perl_space::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode::script::ast::parse::ParserI::<'_, P>::pos","regex_syntax::unicode::ages::ast::Span::new","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::bump","regex_syntax::debug::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::script::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::parse_perl_class","regex_syntax::utf8::tests::encode_surrogate::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode_tables::sentence_break::core::panicking::assert_failed","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::<'_, P>::bump","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::<'_, P>::pos","regex_syntax::ast::print::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI::parse_hex","regex_syntax::unicode::sb::imp::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::script_extension::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::perl_decimal::is_meta_character","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::script_extension::ast::parse::ParserI::parser","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::debug::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::{impl#6}::subs::is_meta_character","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::ages::imp::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode_tables::general_category::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::script::imp::core::panicking::assert_failed","regex_syntax::unicode_tables::case_folding_simple::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::bump","regex_syntax::tests::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::sentence_break::is_escapeable_character","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI::parser","regex_syntax::parser::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI::error","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::ast::parse::ParserI::bump","regex_syntax::unicode::perl_word::imp::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::sentence_break::is_meta_character","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI::parser","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::parse_octal","regex_syntax::unicode::gencat::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::is_eof","regex_syntax::unicode::script::ast::parse::ParserI::pos","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::bump","regex_syntax::hir::translate::tests::hir_union::ast::Span::new","regex_syntax::debug::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI::parser","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI::bump","regex_syntax::ast::print::{impl#4}::fmt_flags::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::script::imp::ast::parse::ParserI::char","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::unicode::is_word_character::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gcb::ast::parse::ParserI::pos","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::{impl#6}::subs::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::print::tests::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::unicode::gencat::imp::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::visitor::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::pos","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::tests::ast::parse::ParserI::bump","regex_syntax::hir::translate::tests::ast::parse::ParserI::parse_unicode_class","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#13}::fmt::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::debug::ast::parse::ParserI::span_char","regex_syntax::ast::visitor::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::ast::parse::ParserI::<'_, P>::span_char","regex_syntax::hir::{impl#3}::fmt::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI::span_char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI::<'_, P>::char","regex_syntax::hir::translate::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI::error","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::gencat::is_escapeable_character","regex_syntax::unicode::perl_word::imp::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::wb::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::property_values::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::parser","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI::error","regex_syntax::hir::literal::tests::ast::parse::ParserI::error","regex_syntax::hir::translate::tests::ast::parse::ParserI::bump","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode_tables::age::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::parser::core::panicking::assert_failed","regex_syntax::unicode::class::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::ages::imp::ast::parse::ParserI::is_eof","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::ast::parse::ParserI::bump","regex_syntax::rank::ast::parse::ParserI::is_eof","regex_syntax::unicode::class::ast::parse::ParserI::parse_perl_class","regex_syntax::hir::tests::ast::parse::ParserI::is_eof","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::script_extension::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::char","regex_syntax::unicode_tables::age::core::panicking::assert_failed","regex_syntax::unicode::perl_space::ast::parse::ParserI::<'_, P>::bump","regex_syntax::hir::translate::tests::ast::parse::ParserI::error","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI::pos","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::<'_, P>::error","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::<'_, P>::parse_perl_class","regex_syntax::unicode::sb::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::<'_, P>::parser","regex_syntax::hir::{impl#11}::fmt::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::word_break::ast::parse::ParserI::parser","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI::bump","regex_syntax::debug::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#31}::drop::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::ast::print::{impl#4}::fmt_assertion::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_digit::ast::parse::ParserI::bump","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Span::new","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::case_folding_simple::is_escapeable_character","regex_syntax::hir::literal::{impl#9}::from::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::interval::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI::parse_octal","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI::parser","regex_syntax::hir::visitor::ast::parse::ParserI::<'_, P>::error","regex_syntax::hir::translate::tests::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode_tables::age::ast::Span::new","regex_syntax::hir::visitor::core::panicking::assert_failed::<char, char>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::{impl#3}::fmt::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::error::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::hir::translate::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::sb::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::gencat::ast::parse::ParserI::<'_, P>::parse_hex","regex_syntax::utf8::{impl#2}::fmt::is_escapeable_character","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::parse::tests::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_word::ast::parse::ParserI::span_char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Span::new","regex_syntax::unicode::is_word_character::imp::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::hir::literal::tests::is_meta_character","regex_syntax::tests::ast::parse::ParserI::<'_, P>::error","regex_syntax::unicode::gcb::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::property_values::imp::<core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual","regex_syntax::hir::tests::ast::parse::ParserI::parse_hex","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::char","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI::is_eof","regex_syntax::unicode::script_extension::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::unicode::perl_digit::ast::Span::new","regex_syntax::unicode::script_extension::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI::bump","regex_syntax::hir::interval::core::panicking::assert_failed::<char, char>","regex_syntax::unicode_tables::property_values::ast::Span::new","regex_syntax::tests::ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::char","regex_syntax::ast::{impl#0}::auxiliary_span::is_escapeable_character","regex_syntax::unicode::gcb::imp::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode::bool_property::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::ages::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::unicode::perl_word::regex_syntax::ast::parse::ParserI::parse_escape","regex_syntax::unicode::canonical_prop::ast::parse::ParserI::is_eof","regex_syntax::unicode::is_word_character::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI::parse_unicode_class","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::parse_hex","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI::parser","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::parser","regex_syntax::error::tests::core::panicking::assert_failed::<char, char>","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI::parse_hex","regex_syntax::ast::print::tests::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI::<'_, P>::is_eof","regex_syntax::ast::print::tests::ast::parse::ParserI::pos","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::<'_, P>::bump","regex_syntax::unicode_tables::case_folding_simple::ast::Span::new","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI::<'_, P>::parse_octal","regex_syntax::unicode::{impl#4}::overlaps::core::panicking::assert_failed::<char, char>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI::<'_, P>::parser","regex_syntax::debug::ast::parse::ParserI::parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI::span_char","regex_syntax::hir::tests::ast::parse::ParserI::maybe_parse_special_word_boundary","regex_syntax::unicode::{impl#4}::overlaps::<core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::unicode::perl_word::is_meta_character","regex_syntax::unicode_tables::property_values::ast::parse::ParserI::pos","regex_syntax::unicode::gencat::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::utf8::tests::ast::parse::ParserI::<'_, P>::parse_unicode_class","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI::error","regex_syntax::ast::ast::parse::ParserI::char","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI::<'_, P>::parser","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::char","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::parse_unicode_class","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI::parse_perl_class","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI::<'_, P>::char","regex_syntax::unicode_tables::ast::parse::ParserI::is_eof","regex_syntax::unicode_tables::script_extension::is_escapeable_character","regex_syntax::ast::parse::ast::parse::ParserI::span_char","regex_syntax::unicode_tables::age::<core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI::parser","regex_syntax::unicode::{impl#4}::overlaps::<{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<","regex_syntax::debug::utf8_decode::<core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch"],"types":["core::result::Result<ast::parse::Primitive, ast::Error>","ast::parse::ParserI<'_, P>","{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","(&char, &char)","ast::LiteralKind","ast::AssertionKind","ast::Span","core::result::Result<core::convert::Infallible, ast::Error>","core::option::Option<ast::AssertionKind>","core::option::Option<core::fmt::Arguments<'_>>","core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","core::panicking::AssertKind","char","core::convert::Infallible","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","()","P","ast::ErrorKind","ast::Literal","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","ast::ClassPerl","core::fmt::Arguments<'_>","bool","(ast::SpecialLiteralKind, char)","core::result::Result<ast::Literal, ast::Error>","ast::ClassUnicode","isize","core::result::Result<ast::ClassUnicode, ast::Error>","ast::Assertion","ast::parse::Parser","ast::Position","ast::Error","ast::parse::Primitive","ast::SpecialLiteralKind","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","!","Borrow","Parser","regex_syntax::ast::parse::ParserI","P","str","core::ops::ControlFlow, ast::Literal>","core::option::Option","core::result::Result","ast::parse::ParserI","core::option::Option>","core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","core::result::Result, ast::Error>","core::ops::ControlFlow, ast::ClassUnicode>","core::fmt::Arguments","regex_syntax::unicode_tables::sentence_break::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result","regex_syntax::hir::literal::!","regex_syntax::hir::interval::core::fmt::Arguments","regex_syntax::hir::{impl#3}::fmt::ast::AssertionKind","regex_syntax::unicode::gcb::imp::()","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::core::panicking::AssertKind","regex_syntax::hir::translate::tests::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_class_perl::()","regex_syntax::unicode_tables::perl_word::ast::Position","regex_syntax::unicode_tables::property_names::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::sb::ast::parse::ParserI","regex_syntax::unicode::ages::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::is_word_character::(&char, &char)","regex_syntax::ast::print::tests::char","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#3}::fmt::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_flags::()","regex_syntax::rank::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::script::char","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::()","regex_syntax::unicode::ages::ast::parse::Parser","regex_syntax::unicode::script_extension::ast::parse::ParserI","regex_syntax::rank::core::result::Result, ast::Error>","regex_syntax::hir::literal::tests::ast::SpecialLiteralKind","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Assertion","regex_syntax::unicode_tables::perl_space::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script::ast::ClassPerl","regex_syntax::debug::utf8_decode::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::gcb::imp::ast::Error","regex_syntax::hir::interval::ast::parse::ParserI","regex_syntax::unicode::gcb::imp::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI<'_, P>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::fmt::Arguments<'_>","regex_syntax::unicode::bool_property::core::option::Option>","regex_syntax::unicode::script_extension::imp::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#3}::fmt::ast::LiteralKind","regex_syntax::hir::translate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::()","regex_syntax::unicode::bool_property::core::convert::Infallible","regex_syntax::error::tests::ast::SpecialLiteralKind","regex_syntax::hir::interval::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::debug::utf8_decode::ast::SpecialLiteralKind","regex_syntax::hir::translate::tests::hir_union::()","regex_syntax::unicode::gcb::imp::Parser","regex_syntax::debug::bool","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::ast::Span","regex_syntax::hir::translate::tests::hir_union::ast::Position","regex_syntax::hir::translate::tests::hir_difference::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::SpecialLiteralKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI","regex_syntax::unicode_tables::perl_space::ast::SpecialLiteralKind","regex_syntax::unicode::class::ast::Span","regex_syntax::unicode::bool_property::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::debug::utf8_decode::core::fmt::Arguments<'_>","regex_syntax::unicode::gcb::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::visitor::ast::Assertion","regex_syntax::unicode_tables::sentence_break::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#32}::drop::ast::ClassPerl","regex_syntax::hir::visitor::ast::parse::Primitive","regex_syntax::hir::{impl#11}::fmt::Parser","regex_syntax::unicode_tables::property_values::ast::Literal","regex_syntax::hir::literal::core::option::Option>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::panicking::AssertKind","regex_syntax::unicode_tables::ast::ClassUnicode","regex_syntax::hir::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::canonical_prop::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::script::imp::isize","regex_syntax::ast::parse::ast::parse::ParserI","regex_syntax::unicode::script::imp::ast::Error","regex_syntax::ast::parse::{impl#0}::into_class_literal::char","regex_syntax::hir::{impl#11}::fmt::ast::Assertion","regex_syntax::unicode_tables::perl_decimal::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::perl_word::ast::parse::Primitive","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::bool_property::imp::core::result::Result","regex_syntax::unicode::sb::imp::P","regex_syntax::debug::utf8_decode::ast::Span","regex_syntax::unicode::ages::()","regex_syntax::ast::visitor::ast::Literal","regex_syntax::unicode_tables::ast::parse::Parser","regex_syntax::unicode_tables::case_folding_simple::!","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::fmt::Arguments","regex_syntax::ast::parse::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result","regex_syntax::ast::visitor::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::convert::Infallible","regex_syntax::ast::print::char","regex_syntax::unicode::gencat::ast::Literal","regex_syntax::utf8::tests::core::option::Option>","regex_syntax::either::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::core::fmt::Arguments","regex_syntax::hir::{impl#11}::fmt::core::option::Option>","regex_syntax::unicode::canonical_prop::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::ages::bool","regex_syntax::unicode::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::{impl#9}::from::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::()","regex_syntax::unicode_tables::script::P","regex_syntax::unicode::perl_word::core::panicking::AssertKind","regex_syntax::unicode::wb::imp::ast::parse::Parser","regex_syntax::unicode::canonical_prop::imp::core::option::Option>","regex_syntax::hir::literal::{impl#0}::extract::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_assertion::!","regex_syntax::unicode::core::result::Result","regex_syntax::unicode::perl_space::imp::str","regex_syntax::unicode::script::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::parser::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::is_word_character::imp::ast::parse::Parser","regex_syntax::unicode::perl_digit::Borrow","regex_syntax::hir::{impl#6}::subs::core::option::Option>","regex_syntax::unicode_tables::property_names::core::result::Result","regex_syntax::unicode::perl_space::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gencat::imp::!","regex_syntax::unicode::property_values::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::tests::ast::LiteralKind","regex_syntax::debug::utf8_decode::ast::Error","regex_syntax::ast::print::tests::!","regex_syntax::unicode_tables::case_folding_simple::bool","regex_syntax::unicode::perl_digit::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::perl_word::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::Borrow","regex_syntax::rank::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::!","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ages::imp::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::ClassUnicode","regex_syntax::ast::{impl#13}::fmt::ast::parse::Parser","regex_syntax::unicode_tables::property_bool::str","regex_syntax::unicode::wb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::wb::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::tests::hir_union::ast::ClassUnicode","regex_syntax::hir::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::{impl#0}::as_slice::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::tests::ast::ClassPerl","regex_syntax::unicode_tables::perl_decimal::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::core::result::Result","regex_syntax::unicode_tables::general_category::ast::ClassPerl","regex_syntax::unicode::wb::isize","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Error","regex_syntax::utf8::{impl#0}::as_slice::core::option::Option","regex_syntax::unicode::is_word_character::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::tests::(ast::SpecialLiteralKind, char)","regex_syntax::hir::visitor::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_space::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::ErrorKind","regex_syntax::hir::translate::ascii_class::str","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::imp::ast::parse::Parser","regex_syntax::unicode::script::imp::(&char, &char)","regex_syntax::hir::literal::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_assertion::bool","regex_syntax::unicode::is_word_character::imp::Borrow","regex_syntax::hir::print::tests::P","regex_syntax::unicode::ages::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::sentence_break::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::ClassPerl","regex_syntax::unicode::is_word_character::isize","regex_syntax::ast::{impl#0}::auxiliary_span::core::option::Option","regex_syntax::utf8::{impl#2}::fmt::ast::LiteralKind","regex_syntax::unicode::canonical_prop::ast::parse::Primitive","regex_syntax::unicode::wb::imp::core::option::Option>","regex_syntax::hir::literal::{impl#0}::extract::ast::Error","regex_syntax::ast::print::tests::Borrow","regex_syntax::unicode::perl_word::bool","regex_syntax::hir::literal::str","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::AssertionKind","regex_syntax::ast::{impl#13}::fmt::!","regex_syntax::hir::translate::ascii_class::ast::Literal","regex_syntax::tests::ast::parse::Primitive","regex_syntax::hir::tests::ast::SpecialLiteralKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::error::tests::bool","regex_syntax::unicode_tables::word_break::!","regex_syntax::unicode_tables::(&char, &char)","regex_syntax::ast::{impl#13}::fmt::ast::LiteralKind","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::class::ast::Literal","regex_syntax::hir::tests::bool","regex_syntax::unicode_tables::perl_decimal::isize","regex_syntax::hir::translate::ascii_class::ast::AssertionKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::option::Option>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::ClassUnicode","regex_syntax::unicode::tests::core::option::Option>","regex_syntax::hir::print::char","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::core::result::Result","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::isize","regex_syntax::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::bool","regex_syntax::hir::translate::tests::ast::parse::Parser","regex_syntax::ast::ast::ClassUnicode","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::imp::ast::SpecialLiteralKind","regex_syntax::unicode_tables::property_bool::Borrow","regex_syntax::ast::print::{impl#4}::fmt_assertion::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::panicking::AssertKind","regex_syntax::error::tests::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::ast::Span","regex_syntax::unicode::perl_word::core::result::Result","regex_syntax::parser::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::tests::encode_surrogate::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI","regex_syntax::unicode_tables::script::ast::AssertionKind","regex_syntax::hir::print::tests::()","regex_syntax::debug::(ast::SpecialLiteralKind, char)","regex_syntax::hir::visitor::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::tests::hir_union::Parser","regex_syntax::unicode::class::ast::ClassPerl","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::utf8_decode::()","regex_syntax::unicode::bool_property::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_decimal::ast::parse::Primitive","regex_syntax::hir::{impl#24}::drop::ast::Literal","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::str","regex_syntax::unicode_tables::property_names::ast::Assertion","regex_syntax::hir::literal::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gencat::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_word::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::gcb::P","regex_syntax::hir::translate::ascii_class::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::property_values::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::property_names::Parser","regex_syntax::ast::parse::{impl#0}::into_class_set_item::str","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::bool_property::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::script_extension::(&char, &char)","regex_syntax::unicode::property_values::core::option::Option","regex_syntax::hir::literal::ast::ErrorKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::regex_syntax::ast::parse::ParserI","regex_syntax::ast::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gencat::imp::core::panicking::AssertKind","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_flags::char","regex_syntax::hir::literal::{impl#9}::from::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::bool_property::imp::!","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::{impl#9}::from::ast::ClassUnicode","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::grapheme_cluster_break::core::option::Option>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::isize","regex_syntax::unicode::gcb::imp::(&char, &char)","regex_syntax::unicode::ages::ast::Error","regex_syntax::unicode::gencat::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script_extension::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::fmt::Arguments","regex_syntax::error::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::ages::imp::Parser","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::Borrow","regex_syntax::ast::visitor::core::fmt::Arguments<'_>","regex_syntax::utf8::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI<'_, P>","regex_syntax::unicode::sb::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::tests::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Span","regex_syntax::debug::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::property_values::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::either::ast::ClassUnicode","regex_syntax::utf8::tests::ast::LiteralKind","regex_syntax::unicode_tables::sentence_break::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::imp::str","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::rank::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::panicking::AssertKind","regex_syntax::ast::parse::core::convert::Infallible","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::canonical_prop::str","regex_syntax::unicode::bool_property::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::literal::tests::ast::LiteralKind","regex_syntax::debug::utf8_decode::core::fmt::Arguments","regex_syntax::unicode::is_word_character::ast::parse::ParserI","regex_syntax::unicode_tables::perl_decimal::ast::Literal","regex_syntax::unicode::script::isize","regex_syntax::unicode::gcb::imp::core::result::Result, ast::Error>","regex_syntax::unicode_tables::general_category::ast::parse::ParserI","regex_syntax::hir::translate::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#13}::fmt::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#13}::fmt::core::panicking::AssertKind","regex_syntax::unicode_tables::age::ast::Literal","regex_syntax::hir::translate::tests::hir_difference::isize","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::tests::char","regex_syntax::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::property_names::core::convert::Infallible","regex_syntax::hir::{impl#24}::drop::ast::ErrorKind","regex_syntax::hir::translate::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::script::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::tests::ast::SpecialLiteralKind","regex_syntax::utf8::tests::core::result::Result","regex_syntax::unicode::property_values::core::option::Option<ast::AssertionKind>","regex_syntax::error::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::ClassPerl","regex_syntax::hir::{impl#6}::subs::ast::ClassUnicode","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Position","regex_syntax::hir::translate::tests::hir_union::ast::Span","regex_syntax::unicode::wb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::tests::core::option::Option","regex_syntax::unicode_tables::script::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::property_values::core::option::Option>","regex_syntax::either::ast::Assertion","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::core::panicking::AssertKind","regex_syntax::unicode::script_extension::imp::ast::LiteralKind","regex_syntax::unicode::perl_word::()","regex_syntax::unicode::gencat::ast::SpecialLiteralKind","regex_syntax::tests::core::option::Option","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::Primitive","regex_syntax::tests::str","regex_syntax::ast::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::tests::!","regex_syntax::hir::translate::tests::hir_difference::core::convert::Infallible","regex_syntax::parser::ast::parse::ParserI","regex_syntax::unicode::bool_property::imp::char","regex_syntax::hir::literal::{impl#0}::extract::()","regex_syntax::unicode_tables::case_folding_simple::isize","regex_syntax::unicode_tables::script::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::canonical_prop::bool","regex_syntax::hir::{impl#6}::subs::ast::parse::Parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::Parser","regex_syntax::unicode::class::char","regex_syntax::ast::tests::ast::parse::Parser","regex_syntax::unicode::is_word_character::ast::Position","regex_syntax::unicode_tables::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::tests::ast::Position","regex_syntax::unicode::script_extension::imp::Borrow","regex_syntax::hir::print::core::result::Result, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::option::Option<ast::AssertionKind>","regex_syntax::parser::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_space::imp::ast::Literal","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::ClassUnicode","regex_syntax::unicode_tables::word_break::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::ages::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::AssertionKind","regex_syntax::ast::parse::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::debug::utf8_decode::!","regex_syntax::unicode::is_word_character::ast::parse::ParserI<'_, P>","regex_syntax::hir::interval::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::general_category::core::panicking::AssertKind","regex_syntax::unicode::canonical_prop::imp::P","regex_syntax::hir::translate::tests::ast::Assertion","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result<ast::Literal, ast::Error>","regex_syntax::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::Parser","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result","regex_syntax::unicode::sb::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#32}::drop::ast::ErrorKind","regex_syntax::ast::{impl#0}::auxiliary_span::core::fmt::Arguments","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::Primitive","regex_syntax::unicode_tables::case_folding_simple::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI<'_, P>","regex_syntax::char","regex_syntax::ast::print::tests::ast::Assertion","regex_syntax::hir::literal::{impl#9}::from::ast::parse::Parser","regex_syntax::unicode::perl_digit::ast::parse::Parser","regex_syntax::rank::core::result::Result","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::ascii_class::ast::Span","regex_syntax::unicode::perl_space::Parser","regex_syntax::hir::translate::tests::hir_difference::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::LiteralKind","regex_syntax::unicode::script::imp::ast::Assertion","regex_syntax::hir::translate::tests::hir_union::core::option::Option","regex_syntax::error::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::(&char, &char)","regex_syntax::debug::utf8_decode::core::convert::Infallible","regex_syntax::error::str","regex_syntax::unicode::sb::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::tests::()","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::print::tests::core::convert::Infallible","regex_syntax::error::Borrow","regex_syntax::debug::utf8_decode::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::age::(&char, &char)","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_digit::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_literal::!","regex_syntax::ast::{impl#18}::from_name::ast::ClassUnicode","regex_syntax::ast::parse::tests::core::option::Option>","regex_syntax::rank::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::{impl#11}::fmt::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::core::convert::Infallible","regex_syntax::ast::{impl#0}::auxiliary_span::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Literal","regex_syntax::unicode_tables::age::core::result::Result","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::bool","regex_syntax::unicode::script_extension::ast::AssertionKind","regex_syntax::unicode_tables::grapheme_cluster_break::regex_syntax::ast::parse::ParserI","regex_syntax::ast::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::tests::ast::ClassUnicode","regex_syntax::ast::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_word::ast::SpecialLiteralKind","regex_syntax::unicode::script::imp::ast::parse::ParserI","regex_syntax::unicode::script::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Literal","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::ascii_class::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::canonical_prop::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::script::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::canonical_prop::ast::AssertionKind","regex_syntax::error::core::option::Option<ast::AssertionKind>","regex_syntax::hir::literal::{impl#9}::from::P","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::()","regex_syntax::unicode::script_extension::!","regex_syntax::ast::parse::ParserI<'_, P>","regex_syntax::unicode::ages::isize","regex_syntax::unicode::bool_property::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::AssertionKind","regex_syntax::hir::print::tests::Borrow","regex_syntax::hir::literal::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::script_extension::core::fmt::Arguments<'_>","regex_syntax::hir::literal::{impl#9}::from::core::fmt::Arguments<'_>","regex_syntax::unicode::ages::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#3}::fmt::!","regex_syntax::ast::tests::core::panicking::AssertKind","regex_syntax::unicode_tables::ast::ErrorKind","regex_syntax::unicode::property_values::imp::ast::AssertionKind","regex_syntax::unicode::canonical_prop::core::option::Option<ast::AssertionKind>","regex_syntax::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#3}::fmt::ast::Position","regex_syntax::utf8::tests::encode_surrogate::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::perl_word::ast::ClassUnicode","regex_syntax::hir::translate::ascii_class::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::rank::!","regex_syntax::unicode::class::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_digit::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::ascii_class::core::fmt::Arguments","regex_syntax::unicode::wb::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::property_bool::ast::Error","regex_syntax::utf8::{impl#2}::fmt::ast::parse::Primitive","regex_syntax::debug::utf8_decode::str","regex_syntax::unicode::class::ast::LiteralKind","regex_syntax::ast::{impl#31}::drop::ast::LiteralKind","regex_syntax::unicode::ages::imp::ast::parse::Parser","regex_syntax::utf8::{impl#0}::as_slice::core::fmt::Arguments","regex_syntax::unicode::wb::core::option::Option>","regex_syntax::unicode::perl_space::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::LiteralKind","regex_syntax::ast::{impl#18}::from_name::bool","regex_syntax::ast::tests::ast::Error","regex_syntax::ast::parse::tests::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::is_word_character::imp::(&char, &char)","regex_syntax::unicode::canonical_prop::char","regex_syntax::unicode_tables::case_folding_simple::char","regex_syntax::unicode::ages::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_space::imp::core::option::Option>","regex_syntax::ast::parse::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::Borrow","regex_syntax::utf8::ast::Error","regex_syntax::hir::{impl#6}::subs::char","regex_syntax::unicode_tables::word_break::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::canonical_prop::ast::Error","regex_syntax::hir::literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Literal","regex_syntax::ast::parse::{impl#4}::pop_group::bool","regex_syntax::tests::ast::ClassUnicode","regex_syntax::unicode::perl_space::imp::Borrow","regex_syntax::hir::print::ast::ErrorKind","regex_syntax::unicode::script::imp::regex_syntax::ast::parse::ParserI","regex_syntax::rank::()","regex_syntax::unicode::gcb::imp::bool","regex_syntax::unicode::perl_word::imp::(&char, &char)","regex_syntax::ast::print::ast::Position","regex_syntax::unicode::canonical_prop::ast::Assertion","regex_syntax::utf8::tests::ast::Error","regex_syntax::hir::interval::ast::Error","regex_syntax::unicode::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::core::panicking::AssertKind","regex_syntax::unicode::is_word_character::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::fmt::Arguments<'_>","regex_syntax::hir::visitor::ast::Error","regex_syntax::ast::{impl#31}::drop::ast::parse::Primitive","regex_syntax::ast::parse::{impl#0}::into_class_set_item::Borrow","regex_syntax::parser::Parser","regex_syntax::error::tests::ast::Literal","regex_syntax::hir::literal::{impl#0}::extract::ast::SpecialLiteralKind","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::translate::tests::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::property_values::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#6}::subs::isize","regex_syntax::utf8::{impl#2}::fmt::core::result::Result, ast::Error>","regex_syntax::unicode::gcb::()","regex_syntax::ast::parse::tests::(ast::SpecialLiteralKind, char)","regex_syntax::ast::tests::ast::parse::ParserI","regex_syntax::unicode_tables::property_bool::()","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::script_extension::imp::ast::Span","regex_syntax::unicode::ages::core::result::Result, ast::Error>","regex_syntax::unicode_tables::word_break::core::fmt::Arguments","regex_syntax::unicode_tables::property_values::core::result::Result, ast::Error>","regex_syntax::unicode::gcb::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::age::!","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::{impl#32}::drop::ast::Literal","regex_syntax::hir::interval::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Span","regex_syntax::ast::parse::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::property_values::core::fmt::Arguments","regex_syntax::unicode::is_word_character::core::result::Result","regex_syntax::unicode::wb::ast::ClassPerl","regex_syntax::unicode::script_extension::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::word_break::str","regex_syntax::unicode::wb::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::ast::ErrorKind","regex_syntax::error::core::fmt::Arguments<'_>","regex_syntax::unicode::ages::imp::ast::ClassUnicode","regex_syntax::unicode::ages::ast::parse::ParserI","regex_syntax::unicode::sb::ast::Span","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::tests::Borrow","regex_syntax::parser::ast::parse::Primitive","regex_syntax::ast::print::core::panicking::AssertKind","regex_syntax::unicode_tables::word_break::core::convert::Infallible","regex_syntax::hir::translate::core::option::Option>","regex_syntax::unicode::script_extension::imp::core::result::Result, ast::Error>","regex_syntax::unicode_tables::perl_word::(&char, &char)","regex_syntax::utf8::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::visitor::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::Parser","regex_syntax::unicode_tables::age::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::isize","regex_syntax::unicode::gcb::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_word::ast::AssertionKind","regex_syntax::utf8::tests::encode_surrogate::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::ClassPerl","regex_syntax::parser::P","regex_syntax::unicode_tables::age::ast::ClassPerl","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::script_extension::char","regex_syntax::hir::translate::ascii_class::Borrow","regex_syntax::unicode::perl_space::imp::core::option::Option","regex_syntax::utf8::tests::encode_surrogate::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::print::tests::core::option::Option>","regex_syntax::unicode::sb::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::ast::Position","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::fmt::Arguments<'_>","regex_syntax::unicode::script_extension::ast::Error","regex_syntax::error::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::Primitive","regex_syntax::parser::ast::LiteralKind","regex_syntax::ast::print::tests::core::option::Option>","regex_syntax::hir::visitor::ast::Literal","regex_syntax::hir::translate::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::gencat::core::fmt::Arguments","regex_syntax::ast::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::panicking::AssertKind","regex_syntax::unicode_tables::sentence_break::ast::ClassPerl","regex_syntax::hir::translate::tests::hir_difference::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::()","regex_syntax::hir::{impl#11}::fmt::ast::Error","regex_syntax::unicode::ages::core::convert::Infallible","regex_syntax::unicode_tables::script::str","regex_syntax::hir::(&char, &char)","regex_syntax::hir::{impl#11}::fmt::ast::ErrorKind","regex_syntax::unicode::is_word_character::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::script::ast::ClassPerl","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gencat::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::Primitive","regex_syntax::hir::Parser","regex_syntax::rank::ast::Position","regex_syntax::unicode::sb::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::()","regex_syntax::hir::print::tests::char","regex_syntax::utf8::{impl#2}::fmt::core::option::Option>","regex_syntax::hir::translate::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#18}::from_name::ast::ErrorKind","regex_syntax::unicode::property_values::ast::ErrorKind","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#2}::fmt::ast::Error","regex_syntax::hir::{impl#11}::fmt::!","regex_syntax::hir::{impl#24}::drop::ast::Position","regex_syntax::unicode_tables::script::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::(&char, &char)","regex_syntax::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::script::isize","regex_syntax::ast::{impl#18}::from_name::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::bool_property::imp::core::option::Option<ast::AssertionKind>","regex_syntax::parser::core::panicking::AssertKind","regex_syntax::unicode::canonical_prop::()","regex_syntax::unicode::script_extension::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_space::imp::ast::LiteralKind","regex_syntax::unicode::script_extension::ast::ErrorKind","regex_syntax::unicode::bool_property::imp::ast::ClassUnicode","regex_syntax::unicode::perl_space::imp::isize","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::Parser","regex_syntax::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::property_values::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::SpecialLiteralKind","regex_syntax::hir::translate::tests::hir_difference::core::option::Option<ast::AssertionKind>","regex_syntax::ast::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::(&char, &char)","regex_syntax::utf8::(&char, &char)","regex_syntax::hir::translate::tests::core::convert::Infallible","regex_syntax::debug::utf8_decode::ast::LiteralKind","regex_syntax::unicode::ages::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::SpecialLiteralKind","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#6}::subs::core::result::Result, ast::Error>","regex_syntax::unicode::sb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#0}::as_slice::ast::AssertionKind","regex_syntax::utf8::tests::encode_surrogate::isize","regex_syntax::ast::{impl#3}::fmt::P","regex_syntax::ast::print::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::bool_property::imp::regex_syntax::ast::parse::ParserI","regex_syntax::hir::literal::tests::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Literal","regex_syntax::parser::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::ErrorKind","regex_syntax::hir::core::panicking::AssertKind","regex_syntax::ast::visitor::ast::Position","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::char","regex_syntax::unicode::is_word_character::()","regex_syntax::unicode::bool_property::core::result::Result, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::!","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::utf8::tests::core::fmt::Arguments","regex_syntax::ast::parse::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_values::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#24}::drop::core::panicking::AssertKind","regex_syntax::ast::print::tests::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::perl_space::core::result::Result<ast::Literal, ast::Error>","regex_syntax::error::tests::ast::Error","regex_syntax::tests::!","regex_syntax::unicode::sb::Borrow","regex_syntax::unicode::is_word_character::imp::core::option::Option>","regex_syntax::unicode_tables::property_bool::ast::parse::Parser","regex_syntax::unicode_tables::perl_decimal::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::script_extension::imp::core::option::Option>","regex_syntax::hir::translate::tests::hir_union::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#3}::fmt::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_flags::core::panicking::AssertKind","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::sb::core::fmt::Arguments<'_>","regex_syntax::unicode::wb::imp::bool","regex_syntax::debug::utf8_decode::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::perl_space::isize","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::{impl#4}::pop_group::Borrow","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Error","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::ClassPerl","regex_syntax::unicode::class::core::option::Option","regex_syntax::parser::(ast::SpecialLiteralKind, char)","regex_syntax::error::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::wb::ast::parse::Primitive","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::SpecialLiteralKind","regex_syntax::unicode::ages::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_word::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::parser::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Position","regex_syntax::hir::print::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::ages::imp::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Span","regex_syntax::hir::{impl#6}::subs::core::result::Result","regex_syntax::hir::literal::{impl#0}::extract::core::fmt::Arguments","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::SpecialLiteralKind","regex_syntax::hir::literal::{impl#0}::extract::ast::AssertionKind","regex_syntax::unicode::sb::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::bool_property::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::ast::parse::Primitive","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::ClassPerl","regex_syntax::utf8::tests::encode_surrogate::ast::SpecialLiteralKind","regex_syntax::unicode::class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::word_break::(&char, &char)","regex_syntax::hir::translate::tests::hir_difference::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::sentence_break::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::perl_space::imp::ast::parse::Primitive","regex_syntax::unicode::gencat::imp::ast::SpecialLiteralKind","regex_syntax::unicode::gcb::isize","regex_syntax::debug::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::!","regex_syntax::hir::literal::{impl#9}::from::core::option::Option","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::ClassPerl","regex_syntax::hir::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gencat::imp::core::fmt::Arguments","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::rank::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::tests::hir_union::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::tests::core::panicking::AssertKind","regex_syntax::unicode_tables::age::core::convert::Infallible","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#4}::pop_group::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::{impl#0}::auxiliary_span::core::option::Option>","regex_syntax::ast::parse::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::is_word_character::str","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::Parser","regex_syntax::unicode::wb::imp::core::panicking::AssertKind","regex_syntax::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::tests::Parser","regex_syntax::unicode::class::ast::parse::Primitive","regex_syntax::unicode_tables::property_bool::core::option::Option<ast::AssertionKind>","regex_syntax::utf8::tests::encode_surrogate::ast::Error","regex_syntax::error::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::Parser","regex_syntax::unicode::perl_word::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::tests::char","regex_syntax::unicode_tables::property_bool::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::general_category::ast::LiteralKind","regex_syntax::hir::translate::ast::AssertionKind","regex_syntax::unicode_tables::script::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::(ast::SpecialLiteralKind, char)","regex_syntax::hir::print::tests::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::property_values::ast::Position","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_literal::core::option::Option","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::str","regex_syntax::unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::visitor::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Literal","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::Primitive","regex_syntax::hir::literal::tests::core::option::Option","regex_syntax::unicode::script::imp::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::convert::Infallible","regex_syntax::unicode::property_values::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#13}::fmt::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_flags::!","regex_syntax::unicode_tables::property_values::char","regex_syntax::hir::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::tests::isize","regex_syntax::unicode_tables::perl_decimal::ast::SpecialLiteralKind","regex_syntax::unicode::is_word_character::imp::ast::ClassUnicode","regex_syntax::unicode::is_word_character::!","regex_syntax::unicode::perl_word::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::(&char, &char)","regex_syntax::unicode::perl_digit::char","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::AssertionKind","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Error","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::{impl#9}::from::core::panicking::AssertKind","regex_syntax::utf8::ast::ClassUnicode","regex_syntax::ast::visitor::isize","regex_syntax::hir::translate::tests::core::panicking::AssertKind","regex_syntax::error::tests::ast::ClassPerl","regex_syntax::unicode::canonical_prop::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::script::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::perl_word::isize","regex_syntax::unicode::script_extension::imp::ast::Position","regex_syntax::unicode::script_extension::ast::ClassUnicode","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::Borrow","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::perl_digit::imp::str","regex_syntax::unicode::script::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#13}::fmt::(&char, &char)","regex_syntax::hir::literal::{impl#0}::extract::ast::Span","regex_syntax::hir::interval::P","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::str","regex_syntax::unicode_tables::script::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::tests::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gencat::(&char, &char)","regex_syntax::unicode::class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::sb::imp::()","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::is_word_character::char","regex_syntax::hir::literal::{impl#0}::extract::ast::Position","regex_syntax::unicode::perl_word::imp::core::convert::Infallible","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::tests::!","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::script::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::ParserI","regex_syntax::unicode::gcb::imp::core::option::Option>","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::fmt::Arguments","regex_syntax::parser::core::fmt::Arguments","regex_syntax::unicode::gencat::core::result::Result","regex_syntax::unicode::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::print::ast::parse::ParserI","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::bool_property::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::property_values::core::option::Option","regex_syntax::hir::literal::{impl#9}::from::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::property_values::imp::regex_syntax::ast::parse::ParserI","regex_syntax::hir::tests::ast::ClassPerl","regex_syntax::utf8::{impl#2}::fmt::core::result::Result","regex_syntax::ast::{impl#32}::drop::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::Primitive","regex_syntax::hir::translate::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::visitor::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_literal::core::fmt::Arguments","regex_syntax::unicode_tables::case_folding_simple::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::debug::utf8_decode::core::option::Option>","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result, ast::Error>","regex_syntax::unicode::script_extension::core::panicking::AssertKind","regex_syntax::unicode::sb::ast::Literal","regex_syntax::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::debug::ast::parse::Primitive","regex_syntax::unicode::property_values::()","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::property_values::core::result::Result, ast::Error>","regex_syntax::rank::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::print::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::is_word_character::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#18}::from_name::()","regex_syntax::debug::Borrow","regex_syntax::hir::{impl#6}::subs::ast::ClassPerl","regex_syntax::unicode_tables::general_category::bool","regex_syntax::either::ast::parse::Parser","regex_syntax::either::(&char, &char)","regex_syntax::ast::{impl#3}::fmt::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::either::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::Primitive","regex_syntax::hir::{impl#3}::fmt::ast::Literal","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::property_values::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::Parser","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::ErrorKind","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::script_extension::()","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Span","regex_syntax::unicode::perl_digit::imp::isize","regex_syntax::tests::isize","regex_syntax::ast::{impl#31}::drop::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::property_bool::ast::ErrorKind","regex_syntax::unicode::perl_space::ast::parse::Parser","regex_syntax::ast::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::rank::Borrow","regex_syntax::utf8::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gencat::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::print::tests::ast::Assertion","regex_syntax::unicode::Parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::(&char, &char)","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::translate::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::{impl#11}::fmt::core::fmt::Arguments","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::Borrow","regex_syntax::ast::print::tests::Parser","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::()","regex_syntax::ast::print::{impl#4}::fmt_repetition::!","regex_syntax::hir::{impl#6}::subs::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::perl_space::imp::(&char, &char)","regex_syntax::unicode_tables::script::ast::ClassUnicode","regex_syntax::ast::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::SpecialLiteralKind","regex_syntax::unicode::bool_property::ast::Literal","regex_syntax::error::tests::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#3}::fmt::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#31}::drop::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::convert::Infallible","regex_syntax::unicode::()","regex_syntax::hir::translate::ascii_class::ast::ErrorKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::{impl#24}::drop::ast::parse::Parser","regex_syntax::unicode_tables::age::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Assertion","regex_syntax::unicode::gencat::Parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::tests::ast::ClassPerl","regex_syntax::hir::literal::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::property_names::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::utf8::tests::ast::AssertionKind","regex_syntax::unicode_tables::general_category::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::property_names::core::option::Option>","regex_syntax::hir::translate::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::class::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::property_values::imp::Borrow","regex_syntax::debug::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#3}::fmt::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::option::Option","regex_syntax::hir::{impl#3}::fmt::core::option::Option>","regex_syntax::unicode::perl_word::imp::Parser","regex_syntax::unicode::perl_digit::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::perl_space::Parser","regex_syntax::P","regex_syntax::unicode_tables::word_break::Parser","regex_syntax::unicode::perl_space::P","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::option::Option","regex_syntax::hir::translate::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::hir_union::ast::LiteralKind","regex_syntax::hir::visitor::core::result::Result<ast::Literal, ast::Error>","regex_syntax::debug::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_group_pre::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::sb::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::tests::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#3}::fmt::core::panicking::AssertKind","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::canonical_prop::imp::core::result::Result","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::{impl#13}::fmt::core::option::Option","regex_syntax::unicode::sb::core::fmt::Arguments","regex_syntax::unicode::perl_space::core::result::Result","regex_syntax::ast::core::convert::Infallible","regex_syntax::ast::parse::bool","regex_syntax::unicode::bool_property::imp::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI<'_, P>","regex_syntax::unicode::perl_space::imp::ast::Span","regex_syntax::unicode::gencat::imp::()","regex_syntax::unicode::property_values::ast::Assertion","regex_syntax::hir::literal::{impl#9}::from::core::result::Result","regex_syntax::unicode_tables::perl_space::ast::LiteralKind","regex_syntax::hir::translate::tests::hir_union::ast::Assertion","regex_syntax::unicode_tables::perl_decimal::ast::ErrorKind","regex_syntax::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gencat::imp::core::fmt::Arguments<'_>","regex_syntax::hir::literal::{impl#9}::from::isize","regex_syntax::either::core::option::Option>","regex_syntax::unicode::script::core::fmt::Arguments","regex_syntax::ast::{impl#3}::fmt::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI","regex_syntax::unicode_tables::word_break::core::option::Option","regex_syntax::utf8::tests::Borrow","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_bool::ast::LiteralKind","regex_syntax::unicode_tables::case_folding_simple::core::option::Option<ast::AssertionKind>","regex_syntax::utf8::{impl#0}::as_slice::()","regex_syntax::hir::translate::core::fmt::Arguments<'_>","regex_syntax::unicode::property_values::ast::parse::Parser","regex_syntax::ast::visitor::ast::Error","regex_syntax::unicode::ages::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::age::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#24}::drop::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::literal::ast::ClassUnicode","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_flags::Borrow","regex_syntax::unicode::wb::Borrow","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Literal","regex_syntax::unicode::is_word_character::imp::ast::AssertionKind","regex_syntax::hir::{impl#11}::fmt::char","regex_syntax::utf8::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::age::ast::Span","regex_syntax::unicode::perl_word::ast::ErrorKind","regex_syntax::hir::print::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::error::(&char, &char)","regex_syntax::unicode::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::rank::ast::Assertion","regex_syntax::unicode::gencat::imp::str","regex_syntax::debug::utf8_decode::P","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::bool","regex_syntax::ast::print::{impl#4}::fmt_class_perl::(ast::SpecialLiteralKind, char)","regex_syntax::ast::parse::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::print::!","regex_syntax::parser::Borrow","regex_syntax::unicode::gencat::imp::Borrow","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::!","regex_syntax::hir::visitor::core::option::Option","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::ast::Assertion","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI","regex_syntax::unicode::canonical_prop::imp::ast::Position","regex_syntax::unicode::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::AssertionKind","regex_syntax::unicode_tables::perl_word::Parser","regex_syntax::either::ast::SpecialLiteralKind","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::LiteralKind","regex_syntax::tests::core::option::Option>","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result","regex_syntax::ast::{impl#0}::auxiliary_span::regex_syntax::ast::parse::ParserI","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result","regex_syntax::hir::{impl#6}::subs::core::panicking::AssertKind","regex_syntax::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#18}::from_name::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI","regex_syntax::debug::utf8_decode::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gencat::ast::parse::ParserI<'_, P>","regex_syntax::unicode::perl_space::()","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI<'_, P>","regex_syntax::rank::ast::ErrorKind","regex_syntax::hir::literal::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::property_values::imp::ast::Error","regex_syntax::ast::{impl#13}::fmt::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::print::tests::ast::parse::Primitive","regex_syntax::ast::parse::Borrow","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::is_word_character::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Span","regex_syntax::unicode::ages::ast::Assertion","regex_syntax::unicode::gcb::ast::AssertionKind","regex_syntax::unicode_tables::sentence_break::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#3}::fmt::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::print::ast::Assertion","regex_syntax::unicode::ages::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::print::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::perl_space::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::perl_word::imp::ast::Position","regex_syntax::unicode::sb::regex_syntax::ast::parse::ParserI","regex_syntax::parser::core::option::Option<ast::AssertionKind>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::Parser","regex_syntax::hir::visitor::core::result::Result","regex_syntax::hir::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::utf8::{impl#0}::as_slice::ast::Literal","regex_syntax::hir::translate::ascii_class::core::fmt::Arguments<'_>","regex_syntax::utf8::{impl#2}::fmt::ast::SpecialLiteralKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::Borrow","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::age::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::tests::core::result::Result","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::utf8::Borrow","regex_syntax::hir::visitor::core::result::Result, ast::Error>","regex_syntax::unicode::class::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#18}::from_name::P","regex_syntax::hir::print::core::option::Option","regex_syntax::unicode::gencat::imp::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#2}::fmt::ast::ErrorKind","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::general_category::char","regex_syntax::unicode_tables::word_break::()","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::{impl#9}::from::ast::parse::ParserI","regex_syntax::ast::parse::{impl#0}::into_class_set_item::isize","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Position","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Assertion","regex_syntax::unicode_tables::case_folding_simple::()","regex_syntax::either::!","regex_syntax::unicode_tables::sentence_break::core::fmt::Arguments","regex_syntax::unicode::gcb::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::{impl#0}::as_slice::core::option::Option<ast::AssertionKind>","regex_syntax::hir::translate::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::{impl#9}::from::Borrow","regex_syntax::ast::{impl#3}::fmt::bool","regex_syntax::ast::parse::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::core::option::Option>","regex_syntax::core::result::Result","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::gencat::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::P","regex_syntax::unicode::property_values::ast::LiteralKind","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::property_values::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#3}::fmt::isize","regex_syntax::unicode_tables::perl_word::ast::Assertion","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::SpecialLiteralKind","regex_syntax::hir::interval::ast::SpecialLiteralKind","regex_syntax::hir::interval::bool","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Position","regex_syntax::unicode::sb::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::ages::core::result::Result<ast::Literal, ast::Error>","regex_syntax::either::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::panicking::AssertKind","regex_syntax::hir::print::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::tests::Parser","regex_syntax::unicode::perl_word::ast::SpecialLiteralKind","regex_syntax::error::tests::isize","regex_syntax::unicode::ast::Assertion","regex_syntax::utf8::tests::encode_surrogate::core::fmt::Arguments","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::ClassPerl","regex_syntax::unicode::{impl#4}::overlaps::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::script::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::{impl#3}::fmt::!","regex_syntax::hir::interval::ast::ClassUnicode","regex_syntax::unicode_tables::property_values::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::tests::hir_difference::core::option::Option>","regex_syntax::unicode_tables::script_extension::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::wb::core::fmt::Arguments","regex_syntax::unicode::sb::ast::parse::Primitive","regex_syntax::unicode_tables::perl_word::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_perl::str","regex_syntax::unicode_tables::word_break::ast::Assertion","regex_syntax::unicode_tables::perl_word::regex_syntax::ast::parse::ParserI","regex_syntax::hir::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#32}::drop::core::fmt::Arguments","regex_syntax::unicode::script_extension::imp::isize","regex_syntax::unicode_tables::age::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script_extension::ast::SpecialLiteralKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::Borrow","regex_syntax::ast::print::{impl#4}::fmt_repetition::P","regex_syntax::utf8::{impl#2}::fmt::bool","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::perl_space::()","regex_syntax::hir::ast::Assertion","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::Parser","regex_syntax::unicode::tests::core::panicking::AssertKind","regex_syntax::hir::literal::core::convert::Infallible","regex_syntax::unicode_tables::property_bool::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::tests::(&char, &char)","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI","regex_syntax::unicode::canonical_prop::ast::ClassPerl","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::(&char, &char)","regex_syntax::hir::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::regex_syntax::ast::parse::ParserI","regex_syntax::hir::{impl#24}::drop::ast::Span","regex_syntax::hir::interval::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::{impl#24}::drop::char","regex_syntax::unicode::bool_property::regex_syntax::ast::parse::ParserI","regex_syntax::hir::{impl#3}::fmt::ast::parse::ParserI","regex_syntax::ast::visitor::core::result::Result","regex_syntax::unicode_tables::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_names::char","regex_syntax::unicode::script::core::convert::Infallible","regex_syntax::hir::translate::tests::(ast::SpecialLiteralKind, char)","regex_syntax::hir::print::tests::ast::AssertionKind","regex_syntax::parser::ast::parse::Parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::{impl#31}::drop::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_word::core::result::Result, ast::Error>","regex_syntax::unicode::perl_word::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::sentence_break::ast::Position","regex_syntax::unicode::perl_digit::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::{impl#3}::fmt::ast::Literal","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#32}::drop::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::canonical_prop::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::str","regex_syntax::unicode_tables::age::core::panicking::AssertKind","regex_syntax::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::script::Parser","regex_syntax::ast::print::ast::parse::ParserI<'_, P>","regex_syntax::hir::{impl#6}::subs::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::sb::str","regex_syntax::hir::translate::tests::ast::AssertionKind","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow, ast::Literal>","regex_syntax::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::visitor::ast::ClassPerl","regex_syntax::unicode_tables::property_bool::core::panicking::AssertKind","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_names::ast::Error","regex_syntax::unicode::perl_space::imp::!","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::AssertionKind","regex_syntax::hir::visitor::char","regex_syntax::parser::()","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result, ast::Error>","regex_syntax::ast::parse::tests::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::script::ast::Error","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::ascii_class::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Error","regex_syntax::unicode::property_values::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::script::core::option::Option>","regex_syntax::debug::ast::parse::ParserI","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::()","regex_syntax::unicode_tables::word_break::ast::parse::ParserI","regex_syntax::hir::print::str","regex_syntax::hir::translate::core::convert::Infallible","regex_syntax::hir::tests::P","regex_syntax::ast::print::{impl#4}::fmt_flags::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::property_values::imp::ast::LiteralKind","regex_syntax::hir::visitor::Borrow","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI","regex_syntax::unicode::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gcb::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#11}::fmt::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::fmt::Arguments","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::script::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Position","regex_syntax::hir::literal::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::tests::core::panicking::AssertKind","regex_syntax::ast::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::convert::Infallible","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::panicking::AssertKind","regex_syntax::unicode::wb::ast::ClassUnicode","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::ages::imp::ast::SpecialLiteralKind","regex_syntax::hir::{impl#6}::subs::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::parser::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::str","regex_syntax::unicode::canonical_prop::imp::ast::parse::Primitive","regex_syntax::unicode::gcb::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::option::Option","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI","regex_syntax::unicode::perl_digit::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#18}::from_name::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::ast::Span","regex_syntax::utf8::tests::core::panicking::AssertKind","regex_syntax::unicode_tables::age::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::property_values::P","regex_syntax::hir::translate::tests::hir_difference::ast::Position","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::literal::bool","regex_syntax::unicode::perl_digit::imp::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::sentence_break::isize","regex_syntax::hir::literal::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#32}::drop::ast::SpecialLiteralKind","regex_syntax::utf8::Parser","regex_syntax::hir::interval::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::ages::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::sentence_break::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::bool","regex_syntax::unicode::ages::imp::bool","regex_syntax::unicode::perl_word::core::option::Option","regex_syntax::unicode_tables::case_folding_simple::core::fmt::Arguments<'_>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Literal","regex_syntax::debug::utf8_decode::(ast::SpecialLiteralKind, char)","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Assertion","regex_syntax::unicode::script::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gcb::imp::core::fmt::Arguments","regex_syntax::error::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::tests::core::convert::Infallible","regex_syntax::unicode::ages::imp::isize","regex_syntax::unicode::perl_word::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::property_names::ast::parse::ParserI<'_, P>","regex_syntax::utf8::{impl#2}::fmt::isize","regex_syntax::unicode::is_word_character::imp::char","regex_syntax::ast::visitor::char","regex_syntax::ast::visitor::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::{impl#4}::overlaps::()","regex_syntax::unicode::{impl#4}::overlaps::ast::ErrorKind","regex_syntax::hir::{impl#11}::fmt::core::option::Option","regex_syntax::unicode_tables::age::core::option::Option","regex_syntax::debug::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::{impl#9}::from::ast::Assertion","regex_syntax::hir::literal::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gcb::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::convert::Infallible","regex_syntax::unicode::gencat::core::fmt::Arguments<'_>","regex_syntax::hir::translate::P","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::{impl#9}::from::char","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_space::regex_syntax::ast::parse::ParserI","regex_syntax::hir::str","regex_syntax::hir::literal::{impl#0}::extract::core::fmt::Arguments<'_>","regex_syntax::unicode::sb::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::property_bool::Parser","regex_syntax::parser::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::tests::ast::ClassPerl","regex_syntax::utf8::ast::parse::Parser","regex_syntax::unicode::script::imp::!","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI","regex_syntax::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::bool_property::core::fmt::Arguments<'_>","regex_syntax::unicode::{impl#4}::overlaps::ast::Assertion","regex_syntax::unicode::wb::core::panicking::AssertKind","regex_syntax::unicode::perl_digit::ast::LiteralKind","regex_syntax::ast::print::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_literal::()","regex_syntax::ast::parse::Primitive","regex_syntax::unicode::ast::parse::Primitive","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI<'_, P>","regex_syntax::unicode::bool_property::imp::ast::Assertion","regex_syntax::unicode::tests::core::option::Option<ast::AssertionKind>","regex_syntax::hir::translate::ascii_class::ast::parse::Primitive","regex_syntax::unicode::perl_space::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::property_values::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::regex_syntax::ast::parse::ParserI","regex_syntax::either::ast::ClassPerl","regex_syntax::debug::utf8_decode::core::panicking::AssertKind","regex_syntax::ast::{impl#31}::drop::ast::Assertion","regex_syntax::unicode::tests::core::option::Option","regex_syntax::hir::literal::{impl#0}::extract::core::option::Option","regex_syntax::unicode_tables::script::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_space::imp::ast::ClassUnicode","regex_syntax::unicode_tables::grapheme_cluster_break::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Span","regex_syntax::unicode_tables::case_folding_simple::ast::Literal","regex_syntax::unicode_tables::case_folding_simple::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::print::Parser","regex_syntax::ast::print::{impl#4}::fmt_literal::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::sentence_break::(ast::SpecialLiteralKind, char)","regex_syntax::utf8::tests::core::convert::Infallible","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::Primitive","regex_syntax::unicode::class::ast::AssertionKind","regex_syntax::hir::core::result::Result, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::(&char, &char)","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::age::ast::ClassUnicode","regex_syntax::unicode::gcb::imp::ast::Span","regex_syntax::unicode::tests::isize","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_flags::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::perl_word::isize","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::fmt::Arguments","regex_syntax::unicode_tables::perl_decimal::ast::Span","regex_syntax::unicode::perl_space::imp::core::option::Option<ast::AssertionKind>","regex_syntax::either::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::general_category::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_digit::imp::Borrow","regex_syntax::unicode_tables::age::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::str","regex_syntax::ast::tests::core::result::Result, ast::Error>","regex_syntax::unicode::property_values::imp::core::convert::Infallible","regex_syntax::unicode::tests::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::ast::parse::ParserI<'_, P>","regex_syntax::core::fmt::Arguments<'_>","regex_syntax::utf8::tests::P","regex_syntax::utf8::{impl#0}::as_slice::ast::ClassPerl","regex_syntax::unicode::class::Parser","regex_syntax::unicode_tables::perl_word::()","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::{impl#0}::as_slice::(&char, &char)","regex_syntax::utf8::{impl#0}::as_slice::P","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::option::Option","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::fmt::Arguments<'_>","regex_syntax::hir::print::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::debug::ast::Assertion","regex_syntax::unicode::perl_space::imp::bool","regex_syntax::parser::ast::Error","regex_syntax::error::ast::ClassUnicode","regex_syntax::ast::print::tests::ast::parse::ParserI","regex_syntax::unicode::sb::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::property_bool::core::option::Option","regex_syntax::unicode::sb::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_space::P","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::hir_difference::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::property_values::ast::Error","regex_syntax::unicode::sb::imp::ast::Error","regex_syntax::ast::parse::P","regex_syntax::unicode::script_extension::imp::core::option::Option","regex_syntax::unicode_tables::perl_word::ast::ClassPerl","regex_syntax::hir::interval::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::sentence_break::ast::Error","regex_syntax::hir::translate::ascii_class::core::panicking::AssertKind","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#24}::drop::str","regex_syntax::unicode_tables::age::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::bool_property::Borrow","regex_syntax::unicode_tables::age::()","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::sentence_break::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::ascii_class::ast::SpecialLiteralKind","regex_syntax::unicode::!","regex_syntax::unicode_tables::script_extension::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::rank::ast::LiteralKind","regex_syntax::unicode::perl_space::ast::ErrorKind","regex_syntax::ast::{impl#32}::drop::bool","regex_syntax::hir::{impl#3}::fmt::ast::ClassPerl","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::ClassPerl","regex_syntax::unicode_tables::word_break::core::result::Result","regex_syntax::unicode::perl_digit::imp::char","regex_syntax::unicode::bool_property::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::perl_decimal::ast::ClassUnicode","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::(&char, &char)","regex_syntax::unicode::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::char","regex_syntax::unicode_tables::grapheme_cluster_break::()","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::ClassPerl","regex_syntax::unicode::script_extension::imp::()","regex_syntax::unicode::perl_word::ast::Assertion","regex_syntax::unicode_tables::general_category::ast::Assertion","regex_syntax::ast::parse::tests::ast::SpecialLiteralKind","regex_syntax::utf8::{impl#2}::fmt::ast::ClassPerl","regex_syntax::tests::core::fmt::Arguments<'_>","regex_syntax::ast::str","regex_syntax::debug::utf8_decode::core::option::Option","regex_syntax::unicode::gcb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::perl_word::ast::ClassPerl","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gcb::ast::parse::Parser","regex_syntax::unicode_tables::perl_space::ast::Position","regex_syntax::unicode::ages::imp::ast::ErrorKind","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::Borrow","regex_syntax::hir::{impl#6}::subs::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::sentence_break::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_flags::(&char, &char)","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::AssertionKind","regex_syntax::unicode::perl_word::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::translate::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::utf8::tests::ast::parse::Parser","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::AssertionKind","regex_syntax::unicode_tables::word_break::char","regex_syntax::ast::{impl#3}::fmt::ast::Span","regex_syntax::unicode_tables::script_extension::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::property_values::Borrow","regex_syntax::unicode_tables::grapheme_cluster_break::Borrow","regex_syntax::unicode_tables::perl_decimal::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::{impl#9}::from::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_word::str","regex_syntax::hir::tests::ast::parse::Parser","regex_syntax::unicode_tables::script::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::script_extension::core::option::Option","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::property_values::core::option::Option>","regex_syntax::ast::print::()","regex_syntax::unicode::bool_property::()","regex_syntax::hir::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::is_word_character::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::property_values::core::fmt::Arguments","regex_syntax::ast::{impl#0}::auxiliary_span::()","regex_syntax::unicode::script_extension::ast::SpecialLiteralKind","regex_syntax::unicode::wb::ast::Span","regex_syntax::debug::utf8_decode::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::script::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_decimal::bool","regex_syntax::hir::{impl#3}::fmt::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::char","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Position","regex_syntax::error::tests::ast::AssertionKind","regex_syntax::hir::translate::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::option::Option","regex_syntax::unicode::gcb::core::option::Option>","regex_syntax::unicode::wb::imp::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::bool_property::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::ages::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::script_extension::core::fmt::Arguments","regex_syntax::unicode_tables::property_bool::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::script::core::fmt::Arguments","regex_syntax::unicode::bool_property::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::wb::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::canonical_prop::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::{impl#4}::overlaps::str","regex_syntax::hir::tests::str","regex_syntax::unicode::is_word_character::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::visitor::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::is_word_character::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_space::ast::parse::Parser","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI<'_, P>","regex_syntax::ast::tests::(&char, &char)","regex_syntax::unicode::gencat::ast::Span","regex_syntax::unicode::{impl#4}::overlaps::bool","regex_syntax::unicode::wb::imp::ast::SpecialLiteralKind","regex_syntax::unicode::script::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::print::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Error","regex_syntax::unicode::class::Borrow","regex_syntax::unicode::script_extension::imp::Parser","regex_syntax::utf8::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::tests::hir_union::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::sb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::script::imp::ast::ClassPerl","regex_syntax::hir::{impl#11}::fmt::bool","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::option::Option>","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::ages::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_assertion::P","regex_syntax::unicode::is_word_character::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::perl_space::ast::SpecialLiteralKind","regex_syntax::unicode::perl_space::imp::ast::Assertion","regex_syntax::unicode::sb::imp::str","regex_syntax::unicode_tables::property_bool::ast::Span","regex_syntax::parser::ast::Assertion","regex_syntax::unicode_tables::script::ast::Span","regex_syntax::unicode::gencat::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_space::imp::ast::ClassPerl","regex_syntax::hir::ast::Span","regex_syntax::unicode_tables::perl_space::ast::ErrorKind","regex_syntax::unicode_tables::property_values::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::Borrow","regex_syntax::unicode_tables::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::ParserI","regex_syntax::core::option::Option>","regex_syntax::hir::{impl#6}::subs::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::class::ast::parse::ParserI<'_, P>","regex_syntax::hir::print::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::print::tests::ast::ClassUnicode","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::property_bool::!","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::regex_syntax::ast::parse::ParserI","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::visitor::P","regex_syntax::ast::parse::tests::ast::Literal","regex_syntax::hir::literal::{impl#0}::extract::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::option::Option>","regex_syntax::unicode::perl_digit::imp::()","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::tests::hir_difference::core::option::Option","regex_syntax::utf8::P","regex_syntax::unicode::perl_word::imp::core::fmt::Arguments","regex_syntax::unicode::class::ast::Position","regex_syntax::ast::parse::{impl#0}::into_class_literal::P","regex_syntax::unicode::gencat::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Assertion","regex_syntax::hir::{impl#24}::drop::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::()","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Assertion","regex_syntax::unicode::gcb::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_word::imp::ast::Literal","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Assertion","regex_syntax::hir::{impl#3}::fmt::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::error::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::{impl#24}::drop::bool","regex_syntax::error::tests::P","regex_syntax::ast::{impl#3}::fmt::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::wb::imp::!","regex_syntax::hir::{impl#3}::fmt::ast::Error","regex_syntax::hir::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#24}::drop::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::gencat::str","regex_syntax::unicode::perl_word::imp::ast::AssertionKind","regex_syntax::hir::literal::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::ast::ErrorKind","regex_syntax::unicode::is_word_character::imp::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::str","regex_syntax::hir::tests::core::option::Option>","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::P","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#6}::subs::ast::Assertion","regex_syntax::unicode::canonical_prop::imp::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::bool_property::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::wb::imp::ast::parse::ParserI","regex_syntax::hir::literal::{impl#9}::from::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::debug::ast::LiteralKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::Primitive","regex_syntax::ast::print::ast::ClassPerl","regex_syntax::hir::translate::ast::parse::Primitive","regex_syntax::ast::{impl#13}::fmt::ast::Span","regex_syntax::ast::print::ast::SpecialLiteralKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::option::Option","regex_syntax::hir::{impl#6}::subs::(&char, &char)","regex_syntax::unicode::gencat::imp::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::script_extension::imp::str","regex_syntax::unicode::class::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::sb::imp::(ast::SpecialLiteralKind, char)","regex_syntax::parser::core::convert::Infallible","regex_syntax::unicode_tables::general_category::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::ascii_class::ast::LiteralKind","regex_syntax::hir::{impl#11}::fmt::ast::ClassPerl","regex_syntax::ast::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::sb::imp::ast::parse::ParserI<'_, P>","regex_syntax::hir::{impl#11}::fmt::(&char, &char)","regex_syntax::ast::parse::{impl#4}::pop_group::core::convert::Infallible","regex_syntax::unicode::ages::imp::()","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::{impl#9}::from::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::tests::Borrow","regex_syntax::unicode_tables::perl_space::core::fmt::Arguments","regex_syntax::hir::translate::ast::Literal","regex_syntax::unicode::{impl#4}::overlaps::ast::ClassPerl","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::fmt::Arguments<'_>","regex_syntax::hir::translate::tests::ast::SpecialLiteralKind","regex_syntax::unicode::ages::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::ages::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::sb::ast::parse::Parser","regex_syntax::unicode::canonical_prop::imp::ast::Error","regex_syntax::error::char","regex_syntax::ast::{impl#31}::drop::ast::AssertionKind","regex_syntax::ast::print::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::canonical_prop::imp::core::convert::Infallible","regex_syntax::unicode::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::script::Borrow","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::fmt::Arguments<'_>","regex_syntax::hir::interval::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::bool_property::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::ast::Span","regex_syntax::unicode_tables::age::bool","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::option::Option","regex_syntax::ast::tests::core::convert::Infallible","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::ErrorKind","regex_syntax::unicode_tables::property_names::ast::Literal","regex_syntax::hir::translate::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result, ast::Error>","regex_syntax::unicode::sb::imp::core::result::Result, ast::Error>","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::gcb::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::ast::ClassUnicode","regex_syntax::unicode::wb::ast::Assertion","regex_syntax::unicode_tables::perl_space::core::option::Option>","regex_syntax::unicode::wb::imp::ast::Assertion","regex_syntax::utf8::{impl#2}::fmt::()","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#18}::from_name::Parser","regex_syntax::unicode::is_word_character::imp::ast::ErrorKind","regex_syntax::hir::interval::core::fmt::Arguments<'_>","regex_syntax::hir::core::fmt::Arguments<'_>","regex_syntax::rank::core::option::Option","regex_syntax::unicode_tables::property_bool::core::option::Option>","regex_syntax::utf8::{impl#2}::fmt::regex_syntax::ast::parse::ParserI","regex_syntax::either::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::core::convert::Infallible","regex_syntax::debug::utf8_decode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script_extension::core::option::Option","regex_syntax::hir::print::tests::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::fmt::Arguments","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result<ast::Literal, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::property_names::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::property_values::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::print::tests::ast::SpecialLiteralKind","regex_syntax::ast::parse::Parser","regex_syntax::unicode::tests::bool","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Literal","regex_syntax::hir::visitor::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::bool","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::ErrorKind","regex_syntax::unicode_tables::grapheme_cluster_break::ast::ClassUnicode","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Error","regex_syntax::hir::{impl#3}::fmt::str","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_literal::P","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI","regex_syntax::ast::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::tests::ast::Span","regex_syntax::unicode::perl_word::ast::LiteralKind","regex_syntax::unicode::property_values::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::error::core::convert::Infallible","regex_syntax::utf8::bool","regex_syntax::unicode::bool_property::imp::(&char, &char)","regex_syntax::unicode::canonical_prop::imp::Borrow","regex_syntax::unicode_tables::case_folding_simple::core::option::Option","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI<'_, P>","regex_syntax::unicode::property_values::ast::ClassPerl","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::perl_digit::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::class::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::visitor::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_assertion::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::{impl#9}::from::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::!","regex_syntax::unicode::script::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::core::result::Result","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::!","regex_syntax::rank::str","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI","regex_syntax::unicode::script::imp::core::result::Result, ast::Error>","regex_syntax::unicode::perl_space::ast::parse::ParserI<'_, P>","regex_syntax::hir::tests::isize","regex_syntax::unicode::canonical_prop::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::core::fmt::Arguments<'_>","regex_syntax::hir::literal::{impl#9}::from::ast::parse::Primitive","regex_syntax::unicode::wb::str","regex_syntax::unicode::perl_space::ast::parse::Primitive","regex_syntax::debug::utf8_decode::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::canonical_prop::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_repetition::bool","regex_syntax::parser::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Span","regex_syntax::ast::{impl#31}::drop::()","regex_syntax::unicode::perl_space::core::convert::Infallible","regex_syntax::ast::{impl#31}::drop::ast::Position","regex_syntax::unicode_tables::property_bool::char","regex_syntax::unicode::perl_digit::()","regex_syntax::utf8::{impl#0}::as_slice::char","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Span","regex_syntax::unicode::script_extension::imp::!","regex_syntax::unicode::wb::bool","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::Parser","regex_syntax::unicode_tables::age::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::{impl#4}::overlaps::core::option::Option>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result, ast::Error>","regex_syntax::unicode::class::ast::ClassUnicode","regex_syntax::error::tests::Parser","regex_syntax::utf8::str","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::LiteralKind","regex_syntax::unicode_tables::ast::LiteralKind","regex_syntax::unicode_tables::age::ast::ErrorKind","regex_syntax::unicode_tables::perl_decimal::(&char, &char)","regex_syntax::hir::literal::{impl#9}::from::core::convert::Infallible","regex_syntax::unicode::canonical_prop::ast::parse::Parser","regex_syntax::hir::print::tests::Parser","regex_syntax::unicode::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::gencat::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::literal::{impl#9}::from::ast::AssertionKind","regex_syntax::tests::core::fmt::Arguments","regex_syntax::hir::literal::{impl#0}::extract::core::panicking::AssertKind","regex_syntax::ast::parse::{impl#0}::into_class_set_item::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::hir_difference::()","regex_syntax::unicode_tables::property_names::ast::ErrorKind","regex_syntax::unicode_tables::property_values::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::ages::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::tests::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result","regex_syntax::ast::print::tests::(&char, &char)","regex_syntax::hir::translate::ast::ClassUnicode","regex_syntax::unicode::gencat::ast::parse::Parser","regex_syntax::ast::parse::{impl#4}::pop_group::core::panicking::AssertKind","regex_syntax::hir::translate::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Position","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::ErrorKind","regex_syntax::ast::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_flags::bool","regex_syntax::unicode::script::(&char, &char)","regex_syntax::ast::parse::{impl#0}::into_class_literal::str","regex_syntax::unicode_tables::script::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::ErrorKind","regex_syntax::unicode::script::imp::ast::SpecialLiteralKind","regex_syntax::ast::{impl#31}::drop::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::panicking::AssertKind","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::perl_word::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::perl_word::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::class::core::panicking::AssertKind","regex_syntax::unicode_tables::perl_word::core::fmt::Arguments","regex_syntax::ast::parse::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gencat::ast::parse::ParserI","regex_syntax::unicode_tables::perl_word::ast::LiteralKind","regex_syntax::unicode::sb::imp::(&char, &char)","regex_syntax::unicode_tables::perl_word::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::fmt::Arguments<'_>","regex_syntax::unicode::{impl#4}::overlaps::ast::ClassUnicode","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Assertion","regex_syntax::unicode::perl_digit::imp::ast::parse::Primitive","regex_syntax::ast::!","regex_syntax::hir::literal::{impl#9}::from::str","regex_syntax::ast::print::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::option::Option>","regex_syntax::unicode::is_word_character::imp::ast::ClassPerl","regex_syntax::hir::translate::tests::hir_union::core::fmt::Arguments","regex_syntax::unicode::wb::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::sentence_break::core::option::Option","regex_syntax::unicode::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::wb::imp::core::option::Option","regex_syntax::unicode::tests::ast::LiteralKind","regex_syntax::unicode_tables::case_folding_simple::ast::Position","regex_syntax::error::tests::Borrow","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::tests::ast::Literal","regex_syntax::tests::ast::parse::Parser","regex_syntax::hir::tests::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition::char","regex_syntax::unicode::script::imp::ast::Position","regex_syntax::hir::core::fmt::Arguments","regex_syntax::ast::tests::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::core::panicking::AssertKind","regex_syntax::hir::translate::ast::Position","regex_syntax::hir::ast::Literal","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::P","regex_syntax::ast::print::core::fmt::Arguments<'_>","regex_syntax::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::property_values::ast::LiteralKind","regex_syntax::unicode::gcb::imp::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::script::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::char","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::{impl#11}::fmt::ast::LiteralKind","regex_syntax::unicode_tables::script::core::convert::Infallible","regex_syntax::unicode::canonical_prop::imp::ast::Assertion","regex_syntax::unicode::property_values::imp::core::option::Option>","regex_syntax::unicode::ages::P","regex_syntax::unicode_tables::word_break::core::result::Result, ast::Error>","regex_syntax::unicode::script::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::(&char, &char)","regex_syntax::ast::print::tests::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#0}::auxiliary_span::isize","regex_syntax::error::!","regex_syntax::unicode::sb::imp::bool","regex_syntax::unicode_tables::script::()","regex_syntax::either::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#13}::fmt::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::bool_property::Parser","regex_syntax::hir::literal::{impl#9}::from::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::ages::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_space::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::(&char, &char)","regex_syntax::unicode::perl_digit::imp::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#32}::drop::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::gcb::imp::!","regex_syntax::hir::translate::tests::hir_union::ast::parse::Primitive","regex_syntax::utf8::{impl#0}::as_slice::ast::LiteralKind","regex_syntax::unicode_tables::general_category::core::convert::Infallible","regex_syntax::unicode_tables::general_category::ast::ErrorKind","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gencat::char","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::tests::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gencat::imp::core::convert::Infallible","regex_syntax::utf8::tests::ast::Literal","regex_syntax::unicode::gcb::ast::ClassPerl","regex_syntax::unicode::ages::imp::ast::parse::ParserI","regex_syntax::hir::literal::{impl#9}::from::ast::ErrorKind","regex_syntax::error::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#13}::fmt::str","regex_syntax::unicode::property_values::P","regex_syntax::unicode_tables::property_values::core::panicking::AssertKind","regex_syntax::hir::{impl#3}::fmt::ast::ClassUnicode","regex_syntax::ast::{impl#3}::fmt::str","regex_syntax::unicode::script::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#0}::auxiliary_span::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::print::tests::!","regex_syntax::unicode::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::ascii_class::Parser","regex_syntax::ast::print::tests::core::result::Result, ast::Error>","regex_syntax::unicode_tables::property_bool::regex_syntax::ast::parse::ParserI","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::bool_property::core::panicking::AssertKind","regex_syntax::ast::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::is_word_character::imp::ast::Literal","regex_syntax::unicode_tables::general_category::core::option::Option>","regex_syntax::ast::tests::core::fmt::Arguments","regex_syntax::unicode_tables::property_values::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::print::bool","regex_syntax::unicode::property_values::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI","regex_syntax::hir::translate::ascii_class::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::convert::Infallible","regex_syntax::ast::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::perl_digit::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::script_extension::str","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::ClassPerl","regex_syntax::unicode::is_word_character::imp::core::convert::Infallible","regex_syntax::hir::literal::ast::parse::Parser","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Position","regex_syntax::hir::translate::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::Parser","regex_syntax::unicode::property_values::core::panicking::AssertKind","regex_syntax::unicode::perl_digit::Parser","regex_syntax::ast::print::ast::AssertionKind","regex_syntax::unicode::bool_property::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#13}::fmt::ast::ClassUnicode","regex_syntax::ast::print::ast::parse::Primitive","regex_syntax::either::core::result::Result, ast::Error>","regex_syntax::unicode::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gencat::isize","regex_syntax::unicode::wb::imp::Borrow","regex_syntax::unicode::property_values::str","regex_syntax::unicode_tables::perl_decimal::str","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::LiteralKind","regex_syntax::unicode::perl_word::core::fmt::Arguments<'_>","regex_syntax::hir::literal::tests::!","regex_syntax::unicode::property_values::imp::ast::parse::ParserI","regex_syntax::unicode_tables::word_break::ast::Literal","regex_syntax::hir::translate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::perl_word::core::convert::Infallible","regex_syntax::hir::visitor::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::is_word_character::ast::ErrorKind","regex_syntax::unicode::wb::!","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::convert::Infallible","regex_syntax::unicode::ages::char","regex_syntax::unicode::script::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ages::core::fmt::Arguments","regex_syntax::hir::print::ast::parse::Parser","regex_syntax::unicode_tables::sentence_break::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::imp::(&char, &char)","regex_syntax::ast::parse::{impl#4}::pop_group::core::option::Option<ast::AssertionKind>","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result<ast::Literal, ast::Error>","regex_syntax::utf8::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::ages::imp::P","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::panicking::AssertKind","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::Parser","regex_syntax::unicode::ages::imp::str","regex_syntax::ast::print::{impl#4}::fmt_group_pre::(&char, &char)","regex_syntax::utf8::{impl#2}::fmt::Borrow","regex_syntax::unicode::perl_word::Parser","regex_syntax::unicode::is_word_character::imp::ast::Span","regex_syntax::tests::ast::Error","regex_syntax::ast::parse::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::fmt::Arguments<'_>","regex_syntax::unicode::is_word_character::ast::ClassPerl","regex_syntax::ast::{impl#13}::fmt::()","regex_syntax::unicode::perl_word::imp::ast::LiteralKind","regex_syntax::unicode_tables::word_break::ast::ClassPerl","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::tests::hir_union::core::result::Result","regex_syntax::ast::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_bool::ast::parse::ParserI<'_, P>","regex_syntax::hir::visitor::ast::ClassUnicode","regex_syntax::unicode_tables::script_extension::ast::parse::Parser","regex_syntax::ast::parse::tests::(&char, &char)","regex_syntax::either::core::convert::Infallible","regex_syntax::hir::translate::tests::hir_difference::char","regex_syntax::tests::ast::Position","regex_syntax::unicode::wb::ast::SpecialLiteralKind","regex_syntax::ast::visitor::core::panicking::AssertKind","regex_syntax::hir::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::sentence_break::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::option::Option","regex_syntax::unicode::sb::core::result::Result","regex_syntax::unicode::perl_word::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::LiteralKind","regex_syntax::utf8::{impl#2}::fmt::(&char, &char)","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::visitor::ast::Assertion","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_names::Borrow","regex_syntax::unicode_tables::script::ast::Literal","regex_syntax::rank::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::either::ast::Position","regex_syntax::ast::print::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::tests::ast::Position","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::tests::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::gencat::core::result::Result, ast::Error>","regex_syntax::hir::visitor::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::Parser","regex_syntax::utf8::{impl#2}::fmt::ast::Assertion","regex_syntax::hir::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::()","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::visitor::ast::LiteralKind","regex_syntax::unicode_tables::perl_decimal::ast::Position","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::perl_digit::imp::(&char, &char)","regex_syntax::unicode::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::{impl#0}::extract::(&char, &char)","regex_syntax::unicode::canonical_prop::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::ClassPerl","regex_syntax::unicode::canonical_prop::ast::Position","regex_syntax::either::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gencat::ast::parse::Primitive","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::is_word_character::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Span","regex_syntax::unicode::gcb::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::wb::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::ages::imp::ast::Span","regex_syntax::hir::literal::{impl#9}::from::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#3}::fmt::isize","regex_syntax::unicode::canonical_prop::core::option::Option","regex_syntax::unicode::script::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::perl_space::imp::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::general_category::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::LiteralKind","regex_syntax::unicode_tables::perl_space::ast::Assertion","regex_syntax::ast::{impl#0}::auxiliary_span::core::convert::Infallible","regex_syntax::unicode_tables::case_folding_simple::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::fmt::Arguments<'_>","regex_syntax::unicode::property_values::ast::Error","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::general_category::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::Parser","regex_syntax::unicode_tables::perl_space::core::result::Result","regex_syntax::unicode::tests::()","regex_syntax::unicode_tables::script::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::class::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::bool_property::imp::ast::parse::Primitive","regex_syntax::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::tests::Borrow","regex_syntax::hir::{impl#6}::subs::Parser","regex_syntax::ast::{impl#31}::drop::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::AssertionKind","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result, ast::Error>","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::general_category::str","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::tests::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::perl_decimal::core::option::Option>","regex_syntax::unicode::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gencat::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::ast::parse::Parser","regex_syntax::unicode::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::word_break::isize","regex_syntax::unicode::bool_property::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::gcb::imp::ast::Position","regex_syntax::unicode_tables::general_category::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::visitor::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_literal::bool","regex_syntax::ast::print::tests::core::panicking::AssertKind","regex_syntax::unicode_tables::sentence_break::ast::Literal","regex_syntax::hir::{impl#6}::subs::ast::Position","regex_syntax::ast::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::ages::ast::ErrorKind","regex_syntax::ast::parse::ast::Span","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::str","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::tests::ast::ErrorKind","regex_syntax::debug::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::script::bool","regex_syntax::unicode_tables::perl_space::ast::ClassUnicode","regex_syntax::unicode::wb::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::tests::ast::AssertionKind","regex_syntax::error::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::class::core::fmt::Arguments<'_>","regex_syntax::ast::parse::tests::!","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::LiteralKind","regex_syntax::unicode::tests::ast::Assertion","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::fmt::Arguments","regex_syntax::unicode::{impl#4}::overlaps::isize","regex_syntax::ast::{impl#3}::fmt::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::{impl#9}::from::bool","regex_syntax::unicode::perl_word::imp::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::option::Option>","regex_syntax::unicode::perl_digit::isize","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::ParserI","regex_syntax::unicode::perl_word::Borrow","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::property_names::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::utf8::{impl#2}::fmt::core::convert::Infallible","regex_syntax::unicode::gencat::ast::Position","regex_syntax::unicode::bool_property::!","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::Borrow","regex_syntax::unicode_tables::case_folding_simple::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Span","regex_syntax::ast::tests::P","regex_syntax::unicode_tables::property_names::ast::ClassUnicode","regex_syntax::hir::literal::tests::str","regex_syntax::rank::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::property_bool::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Assertion","regex_syntax::hir::translate::tests::hir_union::str","regex_syntax::unicode::bool_property::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#13}::fmt::Borrow","regex_syntax::unicode::wb::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script_extension::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::property_values::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#18}::from_name::core::option::Option","regex_syntax::ast::print::core::result::Result, ast::Error>","regex_syntax::unicode::gencat::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::utf8::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::script_extension::bool","regex_syntax::ast::ast::Position","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::option::Option>","regex_syntax::unicode::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::visitor::!","regex_syntax::unicode::perl_space::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::{impl#4}::overlaps::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::option::Option<ast::AssertionKind>","regex_syntax::hir::interval::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::imp::isize","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Span","regex_syntax::utf8::tests::()","regex_syntax::hir::literal::ast::ClassPerl","regex_syntax::unicode::gencat::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#18}::from_name::ast::Literal","regex_syntax::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::tests::ast::parse::Primitive","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::Borrow","regex_syntax::str","regex_syntax::unicode_tables::property_names::ast::SpecialLiteralKind","regex_syntax::unicode_tables::property_names::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::parse::ParserI","regex_syntax::ast::print::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::{impl#4}::overlaps::(&char, &char)","regex_syntax::unicode::script::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::rank::core::fmt::Arguments","regex_syntax::unicode::perl_word::imp::isize","regex_syntax::ast::{impl#31}::drop::(&char, &char)","regex_syntax::hir::visitor::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::script::ast::ErrorKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::Primitive","regex_syntax::unicode::script::imp::core::result::Result","regex_syntax::error::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::tests::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::perl_word::core::option::Option","regex_syntax::unicode_tables::script::core::result::Result","regex_syntax::unicode::tests::!","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::ClassUnicode","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::(&char, &char)","regex_syntax::unicode::ages::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_repetition::Parser","regex_syntax::ast::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::error::tests::core::option::Option","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::sb::imp::ast::Assertion","regex_syntax::utf8::tests::encode_surrogate::ast::Position","regex_syntax::unicode::sb::imp::core::fmt::Arguments","regex_syntax::unicode::perl_space::imp::()","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script_extension::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::class::core::option::Option<ast::AssertionKind>","regex_syntax::hir::ast::parse::ParserI","regex_syntax::ast::{impl#18}::from_name::str","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::class::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::debug::utf8_decode::ast::parse::Primitive","regex_syntax::unicode::tests::ast::ErrorKind","regex_syntax::ast::{impl#18}::from_name::ast::SpecialLiteralKind","regex_syntax::unicode_tables::general_category::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::gencat::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::utf8::core::option::Option","regex_syntax::unicode::script_extension::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::debug::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::visitor::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_word::P","regex_syntax::ast::{impl#13}::fmt::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::debug::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#24}::drop::ast::parse::Primitive","regex_syntax::unicode_tables::general_category::core::fmt::Arguments","regex_syntax::ast::print::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::is_word_character::imp::P","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::print::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::perl_space::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Error","regex_syntax::unicode::bool_property::ast::SpecialLiteralKind","regex_syntax::ast::{impl#3}::fmt::core::result::Result","regex_syntax::unicode_tables::property_names::ast::Span","regex_syntax::unicode::wb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#2}::fmt::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::script::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::core::option::Option>","regex_syntax::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::translate::tests::hir_union::core::panicking::AssertKind","regex_syntax::unicode::property_values::ast::Span","regex_syntax::ast::tests::ast::Assertion","regex_syntax::unicode::canonical_prop::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_digit::imp::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::SpecialLiteralKind","regex_syntax::unicode::perl_word::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#31}::drop::ast::Error","regex_syntax::unicode::wb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::word_break::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Assertion","regex_syntax::utf8::tests::(&char, &char)","regex_syntax::hir::translate::tests::P","regex_syntax::unicode::{impl#4}::overlaps::ast::parse::Primitive","regex_syntax::unicode::script::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#18}::from_name::Borrow","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gencat::imp::ast::ClassUnicode","regex_syntax::unicode::script_extension::imp::ast::ClassUnicode","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::ClassUnicode","regex_syntax::parser::isize","regex_syntax::unicode::script::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::ast::parse::Parser","regex_syntax::unicode_tables::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::visitor::ast::AssertionKind","regex_syntax::unicode::gcb::core::panicking::AssertKind","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::is_word_character::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::error::Parser","regex_syntax::unicode::is_word_character::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Assertion","regex_syntax::unicode_tables::age::Parser","regex_syntax::unicode::gcb::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::is_word_character::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::ast::parse::ParserI<'_, P>","regex_syntax::hir::ast::parse::Parser","regex_syntax::hir::translate::tests::ast::ClassUnicode","regex_syntax::debug::!","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::bool_property::(&char, &char)","regex_syntax::ast::{impl#13}::fmt::ast::Assertion","regex_syntax::unicode::gcb::ast::ErrorKind","regex_syntax::unicode_tables::grapheme_cluster_break::str","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_word::imp::core::option::Option","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI","regex_syntax::unicode::gcb::str","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::property_values::Borrow","regex_syntax::unicode_tables::case_folding_simple::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gencat::core::option::Option","regex_syntax::unicode_tables::case_folding_simple::(ast::SpecialLiteralKind, char)","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::sb::char","regex_syntax::unicode::perl_digit::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::P","regex_syntax::unicode::class::(ast::SpecialLiteralKind, char)","regex_syntax::ast::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Literal","regex_syntax::unicode::perl_word::!","regex_syntax::bool","regex_syntax::utf8::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gencat::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::property_values::imp::isize","regex_syntax::utf8::tests::encode_surrogate::core::fmt::Arguments<'_>","regex_syntax::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::case_folding_simple::core::result::Result, ast::Error>","regex_syntax::unicode::sb::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::tests::encode_surrogate::ast::parse::ParserI","regex_syntax::hir::{impl#6}::subs::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::perl_decimal::Parser","regex_syntax::error::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::property_values::imp::Parser","regex_syntax::unicode::gcb::imp::P","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#11}::fmt::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::bool_property::P","regex_syntax::error::tests::core::result::Result, ast::Error>","regex_syntax::unicode::perl_digit::core::option::Option>","regex_syntax::utf8::tests::encode_surrogate::(&char, &char)","regex_syntax::unicode_tables::case_folding_simple::ast::parse::Parser","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::utf8_decode::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gcb::imp::ast::SpecialLiteralKind","regex_syntax::unicode::is_word_character::imp::regex_syntax::ast::parse::ParserI","regex_syntax::parser::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::ast::parse::Parser","regex_syntax::unicode::gcb::!","regex_syntax::ast::{impl#13}::fmt::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#11}::fmt::P","regex_syntax::unicode::wb::imp::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_assertion::str","regex_syntax::unicode::wb::imp::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::!","regex_syntax::unicode::is_word_character::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::perl_word::imp::core::panicking::AssertKind","regex_syntax::unicode::bool_property::imp::core::option::Option","regex_syntax::ast::{impl#18}::from_name::ast::AssertionKind","regex_syntax::ast::{impl#13}::fmt::char","regex_syntax::unicode::canonical_prop::imp::core::fmt::Arguments","regex_syntax::unicode::bool_property::imp::str","regex_syntax::unicode_tables::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_decimal::core::panicking::AssertKind","regex_syntax::unicode::is_word_character::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gencat::imp::core::option::Option>","regex_syntax::utf8::{impl#0}::as_slice::ast::Span","regex_syntax::hir::{impl#3}::fmt::Borrow","regex_syntax::unicode::ages::Borrow","regex_syntax::unicode::canonical_prop::core::option::Option>","regex_syntax::debug::core::fmt::Arguments<'_>","regex_syntax::hir::literal::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::word_break::core::panicking::AssertKind","regex_syntax::unicode::wb::imp::ast::ClassPerl","regex_syntax::unicode_tables::property_values::(&char, &char)","regex_syntax::debug::utf8_decode::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script_extension::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::ages::imp::ast::Error","regex_syntax::hir::translate::tests::hir_union::Borrow","regex_syntax::unicode::perl_word::imp::ast::Error","regex_syntax::hir::{impl#6}::subs::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::property_values::ast::SpecialLiteralKind","regex_syntax::unicode_tables::script_extension::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::(&char, &char)","regex_syntax::unicode::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::Borrow","regex_syntax::unicode::property_values::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::isize","regex_syntax::either::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gcb::char","regex_syntax::unicode_tables::general_category::ast::parse::Primitive","regex_syntax::ast::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Literal","regex_syntax::unicode_tables::script_extension::ast::Literal","regex_syntax::unicode_tables::general_category::(&char, &char)","regex_syntax::ast::parse::tests::ast::LiteralKind","regex_syntax::ast::{impl#3}::fmt::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::Parser","regex_syntax::unicode::gencat::Borrow","regex_syntax::hir::literal::tests::ast::Literal","regex_syntax::unicode_tables::age::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::sentence_break::ast::parse::ParserI","regex_syntax::ast::{impl#31}::drop::ast::ClassPerl","regex_syntax::unicode::is_word_character::imp::Parser","regex_syntax::unicode::perl_word::imp::str","regex_syntax::ast::core::result::Result, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Error","regex_syntax::debug::ast::ClassPerl","regex_syntax::unicode::perl_space::imp::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Span","regex_syntax::hir::interval::char","regex_syntax::ast::tests::ast::ClassUnicode","regex_syntax::unicode::canonical_prop::imp::ast::SpecialLiteralKind","regex_syntax::unicode::script_extension::ast::parse::ParserI<'_, P>","regex_syntax::utf8::tests::encode_surrogate::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::class::bool","regex_syntax::hir::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::class::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::!","regex_syntax::ast::print::{impl#4}::fmt_literal::isize","regex_syntax::ast::{impl#0}::auxiliary_span::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::case_folding_simple::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::grapheme_cluster_break::bool","regex_syntax::error::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::ErrorKind","regex_syntax::unicode::bool_property::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::!","regex_syntax::utf8::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::ast::Literal","regex_syntax::hir::visitor::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_space::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::ages::imp::Borrow","regex_syntax::core::option::Option","regex_syntax::utf8::tests::bool","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Literal","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::ages::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#4}::pop_group::core::option::Option","regex_syntax::rank::core::option::Option>","regex_syntax::hir::interval::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::perl_digit::ast::Assertion","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::Parser","regex_syntax::ast::tests::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::SpecialLiteralKind","regex_syntax::unicode_tables::property_names::str","regex_syntax::unicode::gencat::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::sb::imp::ast::Span","regex_syntax::utf8::tests::encode_surrogate::ast::Assertion","regex_syntax::unicode::canonical_prop::ast::Span","regex_syntax::ast::{impl#0}::auxiliary_span::str","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result","regex_syntax::hir::interval::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI","regex_syntax::rank::ast::parse::Parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::(&char, &char)","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#32}::drop::(&char, &char)","regex_syntax::unicode_tables::age::ast::LiteralKind","regex_syntax::hir::translate::core::panicking::AssertKind","regex_syntax::tests::ast::Literal","regex_syntax::ast::isize","regex_syntax::unicode::perl_digit::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::sentence_break::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result","regex_syntax::hir::literal::{impl#0}::extract::core::option::Option>","regex_syntax::unicode::perl_digit::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::!","regex_syntax::unicode_tables::Borrow","regex_syntax::hir::literal::tests::char","regex_syntax::ast::{impl#0}::auxiliary_span::char","regex_syntax::either::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::script_extension::ast::ErrorKind","regex_syntax::error::isize","regex_syntax::unicode_tables::sentence_break::core::result::Result","regex_syntax::unicode::gencat::imp::char","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#11}::fmt::Borrow","regex_syntax::unicode::perl_space::core::option::Option","regex_syntax::unicode::ast::LiteralKind","regex_syntax::unicode::gencat::imp::P","regex_syntax::hir::{impl#24}::drop::P","regex_syntax::unicode::tests::ast::Literal","regex_syntax::unicode::{impl#4}::overlaps::P","regex_syntax::unicode::perl_digit::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#6}::subs::ast::Span","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::ParserI<'_, P>","regex_syntax::hir::literal::tests::(&char, &char)","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Error","regex_syntax::unicode::is_word_character::Borrow","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_assertion::Parser","regex_syntax::unicode::wb::imp::ast::parse::Primitive","regex_syntax::unicode::sb::imp::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::option::Option>","regex_syntax::unicode_tables::perl_space::ast::Span","regex_syntax::unicode::property_values::ast::parse::ParserI","regex_syntax::unicode::sb::imp::ast::LiteralKind","regex_syntax::unicode_tables::perl_space::(&char, &char)","regex_syntax::unicode::is_word_character::imp::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Position","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow, ast::Literal>","regex_syntax::rank::(ast::SpecialLiteralKind, char)","regex_syntax::utf8::{impl#2}::fmt::ast::Position","regex_syntax::ast::Span","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::!","regex_syntax::hir::print::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::grapheme_cluster_break::core::option::Option","regex_syntax::unicode::perl_word::imp::core::result::Result","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::{impl#11}::fmt::ast::ClassUnicode","regex_syntax::unicode::wb::imp::P","regex_syntax::unicode_tables::case_folding_simple::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::tests::Parser","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result","regex_syntax::ast::{impl#31}::drop::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::ascii_class::core::option::Option","regex_syntax::hir::{impl#24}::drop::ast::SpecialLiteralKind","regex_syntax::hir::translate::tests::hir_union::ast::parse::ParserI","regex_syntax::ast::{impl#32}::drop::ast::parse::Parser","regex_syntax::utf8::tests::encode_surrogate::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::ErrorKind","regex_syntax::unicode_tables::perl_decimal::()","regex_syntax::hir::{impl#6}::subs::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::tests::ast::Position","regex_syntax::hir::translate::tests::Parser","regex_syntax::unicode::script::imp::core::option::Option>","regex_syntax::unicode::gencat::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::convert::Infallible","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::property_values::imp::core::fmt::Arguments<'_>","regex_syntax::unicode::wb::Parser","regex_syntax::ast::{impl#3}::fmt::ast::Assertion","regex_syntax::ast::(&char, &char)","regex_syntax::hir::literal::tests::Parser","regex_syntax::unicode::perl_space::imp::Parser","regex_syntax::unicode::sb::P","regex_syntax::ast::P","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::AssertionKind","regex_syntax::hir::{impl#24}::drop::ast::AssertionKind","regex_syntax::unicode_tables::property_names::ast::AssertionKind","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::property_values::imp::!","regex_syntax::ast::{impl#31}::drop::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::Parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::()","regex_syntax::either::()","regex_syntax::unicode_tables::word_break::ast::LiteralKind","regex_syntax::hir::char","regex_syntax::tests::ast::LiteralKind","regex_syntax::unicode::script_extension::imp::ast::parse::ParserI","regex_syntax::hir::translate::(&char, &char)","regex_syntax::unicode_tables::property_names::core::panicking::AssertKind","regex_syntax::debug::utf8_decode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::tests::encode_surrogate::ast::parse::Primitive","regex_syntax::unicode::gcb::imp::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::LiteralKind","regex_syntax::unicode_tables::perl_word::core::option::Option>","regex_syntax::hir::{impl#3}::fmt::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gcb::core::convert::Infallible","regex_syntax::unicode_tables::general_category::isize","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::script_extension::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::imp::ast::parse::Primitive","regex_syntax::ast::parse::ast::parse::Primitive","regex_syntax::ast::print::tests::core::result::Result","regex_syntax::utf8::tests::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::ages::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::option::Option>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::Primitive","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::visitor::core::option::Option<ast::AssertionKind>","regex_syntax::hir::print::ast::Position","regex_syntax::ast::{impl#13}::fmt::core::option::Option<ast::AssertionKind>","regex_syntax::either::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::bool","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::()","regex_syntax::utf8::tests::isize","regex_syntax::unicode::gcb::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#13}::fmt::ast::Error","regex_syntax::hir::{impl#6}::subs::()","regex_syntax::unicode::gcb::imp::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_flags::core::option::Option>","regex_syntax::unicode::property_values::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::ClassUnicode","regex_syntax::unicode::bool","regex_syntax::unicode_tables::general_category::ast::parse::Parser","regex_syntax::hir::{impl#11}::fmt::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::char","regex_syntax::ast::print::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_literal::char","regex_syntax::unicode_tables::property_names::core::fmt::Arguments","regex_syntax::unicode_tables::isize","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::script::core::option::Option","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Position","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::sb::imp::ast::parse::Primitive","regex_syntax::ast::char","regex_syntax::hir::print::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::script_extension::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::property_names::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::rank::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::tests::core::fmt::Arguments","regex_syntax::debug::core::panicking::AssertKind","regex_syntax::unicode::ages::imp::ast::AssertionKind","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::ages::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::property_bool::ast::ClassUnicode","regex_syntax::unicode_tables::script_extension::core::panicking::AssertKind","regex_syntax::unicode::ast::ClassUnicode","regex_syntax::hir::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::error::core::result::Result","regex_syntax::unicode_tables::general_category::core::result::Result","regex_syntax::rank::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::interval::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::visitor::bool","regex_syntax::unicode::script::!","regex_syntax::unicode_tables::case_folding_simple::ast::Assertion","regex_syntax::unicode::script::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::(&char, &char)","regex_syntax::unicode_tables::case_folding_simple::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::print::tests::ast::Literal","regex_syntax::hir::tests::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_repetition::(&char, &char)","regex_syntax::unicode::perl_word::P","regex_syntax::ast::Assertion","regex_syntax::ast::{impl#0}::auxiliary_span::ast::SpecialLiteralKind","regex_syntax::ast::{impl#13}::fmt::core::result::Result, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result, ast::Error>","regex_syntax::unicode::gcb::ast::Assertion","regex_syntax::ast::parse::core::fmt::Arguments","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::isize","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::ascii_class::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::canonical_prop::core::result::Result, ast::Error>","regex_syntax::ast::print::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::grapheme_cluster_break::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_assertion::isize","regex_syntax::ast::print::{impl#4}::fmt_class_perl::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::canonical_prop::imp::core::option::Option","regex_syntax::unicode::script_extension::ast::Assertion","regex_syntax::unicode::gencat::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::visitor::ast::parse::ParserI","regex_syntax::utf8::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::wb::imp::ast::Position","regex_syntax::unicode::perl_digit::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::ErrorKind","regex_syntax::hir::translate::tests::(&char, &char)","regex_syntax::hir::{impl#11}::fmt::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#32}::drop::ast::Span","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI","regex_syntax::unicode::bool_property::imp::ast::AssertionKind","regex_syntax::utf8::tests::encode_surrogate::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::debug::utf8_decode::ast::ClassPerl","regex_syntax::unicode_tables::core::option::Option<ast::AssertionKind>","regex_syntax::ast::visitor::core::result::Result, ast::Error>","regex_syntax::unicode::perl_digit::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::debug::ast::Literal","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_literal::Borrow","regex_syntax::unicode::perl_space::core::result::Result, ast::Error>","regex_syntax::unicode_tables::perl_decimal::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::script_extension::ast::ClassUnicode","regex_syntax::ast::print::isize","regex_syntax::unicode::bool_property::imp::core::result::Result, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_space::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::bool_property::ast::LiteralKind","regex_syntax::unicode::property_values::imp::ast::Literal","regex_syntax::unicode::class::str","regex_syntax::hir::print::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::ast::Literal","regex_syntax::unicode::property_values::imp::ast::parse::Primitive","regex_syntax::hir::print::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode::is_word_character::imp::!","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::(&char, &char)","regex_syntax::unicode::perl_word::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::property_names::bool","regex_syntax::utf8::{impl#2}::fmt::core::option::Option","regex_syntax::hir::print::tests::ast::LiteralKind","regex_syntax::unicode::perl_space::imp::ast::Position","regex_syntax::hir::print::tests::ast::Error","regex_syntax::error::tests::!","regex_syntax::unicode_tables::perl_decimal::ast::ClassPerl","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Assertion","regex_syntax::unicode::bool_property::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Assertion","regex_syntax::unicode::canonical_prop::ast::Literal","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::gencat::ast::ErrorKind","regex_syntax::hir::translate::tests::hir_union::bool","regex_syntax::unicode_tables::script::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::bool_property::imp::ast::LiteralKind","regex_syntax::unicode::perl_word::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::class::ast::SpecialLiteralKind","regex_syntax::tests::char","regex_syntax::unicode_tables::script_extension::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::sentence_break::()","regex_syntax::utf8::{impl#2}::fmt::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gencat::core::convert::Infallible","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::P","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::P","regex_syntax::unicode::property_values::ast::Literal","regex_syntax::utf8::{impl#0}::as_slice::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::script::ast::Literal","regex_syntax::hir::{impl#6}::subs::ast::LiteralKind","regex_syntax::error::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::canonical_prop::ast::ClassUnicode","regex_syntax::ast::print::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::SpecialLiteralKind","regex_syntax::hir::literal::Borrow","regex_syntax::hir::translate::tests::hir_difference::ast::Span","regex_syntax::debug::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::core::panicking::AssertKind","regex_syntax::ast::{impl#13}::fmt::isize","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::core::fmt::Arguments<'_>","regex_syntax::hir::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::property_names::ast::parse::ParserI","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#32}::drop::ast::ClassUnicode","regex_syntax::unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::property_bool::core::result::Result","regex_syntax::hir::translate::tests::hir_difference::core::fmt::Arguments","regex_syntax::unicode::wb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::utf8::ast::parse::ParserI","regex_syntax::hir::translate::tests::hir_union::core::convert::Infallible","regex_syntax::unicode::script_extension::core::result::Result","regex_syntax::hir::{impl#11}::fmt::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::sb::ast::Assertion","regex_syntax::unicode::gcb::imp::ast::ClassPerl","regex_syntax::hir::literal::tests::ast::Error","regex_syntax::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#31}::drop::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::core::panicking::AssertKind","regex_syntax::unicode_tables::sentence_break::ast::AssertionKind","regex_syntax::debug::utf8_decode::bool","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::Parser","regex_syntax::hir::translate::tests::bool","regex_syntax::hir::literal::{impl#9}::from::ast::Literal","regex_syntax::ast::parse::{impl#0}::into_class_literal::Parser","regex_syntax::ast::parse::{impl#4}::pop_group::ast::ClassUnicode","regex_syntax::utf8::tests::encode_surrogate::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::Primitive","regex_syntax::unicode::perl_digit::ast::parse::ParserI<'_, P>","regex_syntax::tests::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::LiteralKind","regex_syntax::unicode_tables::sentence_break::bool","regex_syntax::unicode::ages::ast::LiteralKind","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::sb::!","regex_syntax::hir::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#18}::from_name::core::option::Option>","regex_syntax::utf8::ast::ErrorKind","regex_syntax::parser::core::option::Option>","regex_syntax::unicode_tables::age::ast::parse::ParserI<'_, P>","regex_syntax::utf8::{impl#0}::as_slice::ast::ClassUnicode","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::result::Result","regex_syntax::hir::literal::core::panicking::AssertKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::()","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Error","regex_syntax::unicode::sb::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::!","regex_syntax::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::gcb::imp::Borrow","regex_syntax::unicode_tables::script::ast::parse::ParserI<'_, P>","regex_syntax::hir::interval::ast::parse::Primitive","regex_syntax::error::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::Parser","regex_syntax::unicode::gcb::ast::ClassUnicode","regex_syntax::hir::{impl#6}::subs::core::convert::Infallible","regex_syntax::hir::visitor::bool","regex_syntax::hir::translate::tests::hir_difference::ast::Assertion","regex_syntax::hir::ast::ClassPerl","regex_syntax::ast::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::Position","regex_syntax::unicode::gencat::imp::core::option::Option","regex_syntax::ast::print::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::property_values::imp::core::result::Result","regex_syntax::unicode_tables::script_extension::ast::AssertionKind","regex_syntax::unicode::perl_word::char","regex_syntax::utf8::{impl#2}::fmt::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::P","regex_syntax::unicode::sb::imp::char","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::ErrorKind","regex_syntax::hir::translate::ascii_class::bool","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI","regex_syntax::ast::parse::{impl#4}::pop_group::(&char, &char)","regex_syntax::ast::parse::{impl#4}::pop_group::ast::ErrorKind","regex_syntax::unicode::wb::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::script_extension::ast::Error","regex_syntax::unicode::script_extension::core::result::Result, ast::Error>","regex_syntax::ast::print::tests::ast::ClassPerl","regex_syntax::unicode_tables::property_values::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gcb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::property_names::ast::Position","regex_syntax::unicode::{impl#4}::overlaps::!","regex_syntax::error::tests::str","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::core::result::Result, ast::Error>","regex_syntax::hir::literal::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_word::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::Primitive","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result, ast::Error>","regex_syntax::unicode::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::{impl#4}::overlaps::ast::SpecialLiteralKind","regex_syntax::ast::parse::tests::core::fmt::Arguments","regex_syntax::hir::translate::tests::hir_union::core::fmt::Arguments<'_>","regex_syntax::hir::isize","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Error","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::Parser","regex_syntax::unicode::is_word_character::imp::isize","regex_syntax::unicode::script_extension::imp::bool","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::option::Option>","regex_syntax::hir::core::result::Result","regex_syntax::unicode_tables::property_bool::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_digit::ast::ErrorKind","regex_syntax::hir::literal::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::ast::parse::ParserI","regex_syntax::unicode::wb::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::property_bool::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::SpecialLiteralKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::sb::imp::!","regex_syntax::hir::literal::{impl#9}::from::core::option::Option>","regex_syntax::unicode_tables::property_values::ast::ClassPerl","regex_syntax::unicode_tables::script_extension::ast::Span","regex_syntax::unicode::script_extension::imp::core::panicking::AssertKind","regex_syntax::ast::print::Borrow","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::interval::isize","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result, ast::Error>","regex_syntax::unicode::ages::imp::ast::parse::Primitive","regex_syntax::debug::utf8_decode::ast::AssertionKind","regex_syntax::unicode::gcb::imp::char","regex_syntax::utf8::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::{impl#3}::fmt::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::ast::AssertionKind","regex_syntax::unicode::bool_property::char","regex_syntax::unicode_tables::property_bool::P","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::ErrorKind","regex_syntax::hir::translate::tests::hir_union::core::result::Result, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#6}::subs::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::age::char","regex_syntax::unicode_tables::sentence_break::core::panicking::AssertKind","regex_syntax::hir::visitor::ast::Span","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::Parser","regex_syntax::unicode::perl_word::core::result::Result<ast::Literal, ast::Error>","regex_syntax::utf8::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::script::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::perl_space::core::convert::Infallible","regex_syntax::unicode::perl_space::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::gcb::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::ast::parse::Primitive","regex_syntax::hir::{impl#11}::fmt::ast::SpecialLiteralKind","regex_syntax::unicode_tables::script_extension::ast::parse::ParserI<'_, P>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::ClassPerl","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Literal","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::str","regex_syntax::unicode_tables::property_names::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::print::Borrow","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Error","regex_syntax::unicode::script::str","regex_syntax::unicode::perl_space::char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::Parser","regex_syntax::ast::tests::isize","regex_syntax::unicode_tables::age::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI","regex_syntax::hir::{impl#24}::drop::ast::Error","regex_syntax::utf8::tests::encode_surrogate::()","regex_syntax::unicode::sb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#3}::fmt::ast::LiteralKind","regex_syntax::hir::translate::tests::hir_union::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_assertion::(&char, &char)","regex_syntax::unicode::gcb::imp::ast::ClassUnicode","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::Parser","regex_syntax::hir::translate::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::parser::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::error::core::option::Option","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::()","regex_syntax::unicode_tables::sentence_break::ast::ErrorKind","regex_syntax::unicode::property_values::core::result::Result","regex_syntax::unicode_tables::perl_space::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::literal::tests::core::fmt::Arguments<'_>","regex_syntax::unicode::script_extension::imp::ast::AssertionKind","regex_syntax::unicode::canonical_prop::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::tests::P","regex_syntax::ast::{impl#31}::drop::core::option::Option>","regex_syntax::hir::print::ast::Literal","regex_syntax::unicode_tables::age::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::sb::imp::ast::ClassPerl","regex_syntax::ast::parse::{impl#0}::into_class_literal::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::class::!","regex_syntax::hir::{impl#11}::fmt::core::result::Result","regex_syntax::unicode::property_values::imp::(&char, &char)","regex_syntax::unicode_tables::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::tests::hir_union::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#3}::fmt::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::LiteralKind","regex_syntax::hir::translate::tests::Borrow","regex_syntax::ast::{impl#18}::from_name::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#4}::pop_group::isize","regex_syntax::debug::isize","regex_syntax::ast::ast::Assertion","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#31}::drop::core::result::Result, ast::Error>","regex_syntax::hir::print::tests::core::result::Result, ast::Error>","regex_syntax::hir::Borrow","regex_syntax::unicode::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::gcb::imp::ast::parse::Parser","regex_syntax::debug::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::core::result::Result","regex_syntax::utf8::!","regex_syntax::unicode::perl_space::imp::core::convert::Infallible","regex_syntax::utf8::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::tests::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::tests::hir_union::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::script::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::script_extension::(ast::SpecialLiteralKind, char)","regex_syntax::error::tests::ast::parse::Parser","regex_syntax::either::ast::parse::ParserI","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::is_word_character::Parser","regex_syntax::unicode::{impl#4}::overlaps::core::option::Option","regex_syntax::unicode::bool_property::ast::parse::Parser","regex_syntax::debug::Parser","regex_syntax::debug::core::result::Result","regex_syntax::unicode::gencat::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::ErrorKind","regex_syntax::unicode_tables::script_extension::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::gcb::imp::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::debug::core::convert::Infallible","regex_syntax::ast::parse::tests::ast::Assertion","regex_syntax::hir::visitor::ast::parse::ParserI","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::option::Option>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::ErrorKind","regex_syntax::unicode::gencat::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#3}::fmt::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Literal","regex_syntax::unicode::ages::imp::core::result::Result","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::ages::imp::ast::Assertion","regex_syntax::ast::{impl#32}::drop::Borrow","regex_syntax::ast::print::{impl#4}::fmt_literal::str","regex_syntax::unicode_tables::general_category::!","regex_syntax::hir::translate::tests::hir_difference::P","regex_syntax::utf8::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#13}::fmt::ast::ErrorKind","regex_syntax::hir::interval::core::result::Result, ast::Error>","regex_syntax::debug::core::result::Result, ast::Error>","regex_syntax::unicode_tables::sentence_break::char","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::fmt::Arguments","regex_syntax::either::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::SpecialLiteralKind","regex_syntax::ast::{impl#18}::from_name::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::canonical_prop::imp::ast::parse::Parser","regex_syntax::ast::parse::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gencat::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::(&char, &char)","regex_syntax::utf8::tests::encode_surrogate::ast::parse::Parser","regex_syntax::unicode::sb::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::visitor::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::(&char, &char)","regex_syntax::unicode_tables::case_folding_simple::Parser","regex_syntax::unicode_tables::perl_space::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::wb::core::fmt::Arguments<'_>","regex_syntax::ast::parse::tests::bool","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::()","regex_syntax::unicode::is_word_character::ast::Literal","regex_syntax::unicode::script::imp::ast::ClassUnicode","regex_syntax::unicode::wb::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::bool_property::imp::core::fmt::Arguments<'_>","regex_syntax::rank::ast::ClassUnicode","regex_syntax::ast::parse::ast::ClassPerl","regex_syntax::unicode::gcb::(&char, &char)","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Assertion","regex_syntax::hir::literal::tests::ast::Position","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_space::(&char, &char)","regex_syntax::unicode::script_extension::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gencat::ast::ClassUnicode","regex_syntax::unicode_tables::script_extension::bool","regex_syntax::unicode_tables::word_break::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#18}::from_name::ast::Error","regex_syntax::unicode_tables::case_folding_simple::ast::LiteralKind","regex_syntax::error::ast::ErrorKind","regex_syntax::ast::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_names::core::result::Result, ast::Error>","regex_syntax::rank::ast::parse::ParserI<'_, P>","regex_syntax::unicode::perl_digit::imp::P","regex_syntax::unicode::gencat::imp::ast::Span","regex_syntax::either::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#31}::drop::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_group_pre::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#31}::drop::isize","regex_syntax::ast::print::{impl#4}::fmt_literal::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::core::convert::Infallible","regex_syntax::debug::utf8_decode::isize","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::tests::ast::ClassUnicode","regex_syntax::ast::parse::tests::ast::ClassUnicode","regex_syntax::ast::parse::ast::Position","regex_syntax::ast::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::property_values::char","regex_syntax::unicode::script_extension::Parser","regex_syntax::error::ast::parse::ParserI","regex_syntax::hir::interval::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Error","regex_syntax::unicode::is_word_character::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::utf8::tests::encode_surrogate::P","regex_syntax::hir::print::ast::ClassUnicode","regex_syntax::unicode::sb::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::core::option::Option>","regex_syntax::unicode::wb::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::bool_property::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::tests::ast::LiteralKind","regex_syntax::unicode::script::ast::Span","regex_syntax::unicode::bool_property::imp::bool","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::gcb::ast::parse::ParserI<'_, P>","regex_syntax::hir::print::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#3}::fmt::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::script::ast::SpecialLiteralKind","regex_syntax::ast::parse::ast::AssertionKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::AssertionKind","regex_syntax::unicode_tables::perl_space::!","regex_syntax::ast::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::print::tests::(&char, &char)","regex_syntax::unicode::ages::imp::core::convert::Infallible","regex_syntax::unicode::bool_property::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Assertion","regex_syntax::either::ast::ErrorKind","regex_syntax::unicode_tables::perl_decimal::ast::LiteralKind","regex_syntax::unicode::perl_word::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::{impl#6}::subs::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_assertion::Borrow","regex_syntax::unicode::script_extension::imp::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_flags::str","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::ast::Assertion","regex_syntax::unicode::gcb::imp::isize","regex_syntax::ast::parse::{impl#4}::pop_group::ast::LiteralKind","regex_syntax::unicode::wb::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::Primitive","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ages::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::core::fmt::Arguments","regex_syntax::unicode::bool_property::ast::parse::Primitive","regex_syntax::unicode::property_values::imp::ast::ErrorKind","regex_syntax::utf8::ast::ClassPerl","regex_syntax::unicode_tables::perl_word::ast::Literal","regex_syntax::debug::ast::ErrorKind","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_word::imp::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::ClassUnicode","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Span","regex_syntax::unicode::script::()","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::tests::ast::ClassUnicode","regex_syntax::unicode::is_word_character::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::script_extension::imp::ast::parse::Parser","regex_syntax::utf8::tests::encode_surrogate::str","regex_syntax::ast::{impl#32}::drop::core::option::Option","regex_syntax::unicode::ages::imp::char","regex_syntax::ast::{impl#18}::from_name::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gencat::imp::ast::parse::Primitive","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::ClassPerl","regex_syntax::unicode_tables::perl_word::ast::AssertionKind","regex_syntax::ast::ast::ClassPerl","regex_syntax::unicode_tables::property_names::ast::parse::Primitive","regex_syntax::unicode::wb::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::LiteralKind","regex_syntax::hir::print::isize","regex_syntax::unicode_tables::property_values::Parser","regex_syntax::hir::literal::P","regex_syntax::hir::translate::tests::hir_union::!","regex_syntax::error::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::word_break::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script_extension::()","regex_syntax::unicode_tables::ast::SpecialLiteralKind","regex_syntax::unicode::perl_word::imp::ast::ErrorKind","regex_syntax::unicode::gencat::imp::ast::Literal","regex_syntax::unicode::bool_property::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition::str","regex_syntax::ast::{impl#18}::from_name::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#32}::drop::ast::AssertionKind","regex_syntax::ast::parse::{impl#4}::pop_group::!","regex_syntax::unicode_tables::ast::Span","regex_syntax::either::isize","regex_syntax::rank::core::convert::Infallible","regex_syntax::unicode::{impl#4}::overlaps::ast::LiteralKind","regex_syntax::hir::literal::tests::ast::ErrorKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::P","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result, ast::Error>","regex_syntax::ast::print::!","regex_syntax::unicode::class::()","regex_syntax::debug::utf8_decode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#3}::fmt::ast::parse::Primitive","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::gencat::imp::ast::AssertionKind","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#13}::fmt::Parser","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::general_category::Parser","regex_syntax::unicode::wb::imp::ast::ErrorKind","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::property_bool::core::convert::Infallible","regex_syntax::ast::parse::ast::Literal","regex_syntax::debug::utf8_decode::Parser","regex_syntax::unicode_tables::script::core::panicking::AssertKind","regex_syntax::hir::{impl#24}::drop::ast::Assertion","regex_syntax::unicode::gcb::imp::core::result::Result","regex_syntax::utf8::core::result::Result, ast::Error>","regex_syntax::unicode::bool_property::imp::core::fmt::Arguments","regex_syntax::unicode_tables::age::ast::AssertionKind","regex_syntax::ast::{impl#18}::from_name::ast::ClassPerl","regex_syntax::utf8::{impl#2}::fmt::core::fmt::Arguments<'_>","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::ast::LiteralKind","regex_syntax::unicode_tables::perl_space::core::result::Result, ast::Error>","regex_syntax::hir::{impl#6}::subs::str","regex_syntax::unicode::perl_digit::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::core::option::Option","regex_syntax::ast::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::!","regex_syntax::ast::{impl#32}::drop::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result, ast::Error>","regex_syntax::debug::(&char, &char)","regex_syntax::hir::translate::bool","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::ClassUnicode","regex_syntax::unicode::sb::imp::Borrow","regex_syntax::hir::{impl#11}::fmt::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::perl_word::ast::Error","regex_syntax::unicode::wb::imp::core::fmt::Arguments","regex_syntax::ast::{impl#3}::fmt::ast::ErrorKind","regex_syntax::unicode::script_extension::ast::parse::Primitive","regex_syntax::hir::translate::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::option::Option","regex_syntax::hir::tests::core::convert::Infallible","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_space::ast::parse::Primitive","regex_syntax::utf8::{impl#2}::fmt::str","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ast::Position","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::AssertionKind","regex_syntax::unicode::script_extension::imp::P","regex_syntax::unicode::script_extension::imp::ast::Error","regex_syntax::ast::tests::ast::SpecialLiteralKind","regex_syntax::unicode::perl_word::imp::char","regex_syntax::ast::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::visitor::core::option::Option>","regex_syntax::unicode_tables::general_category::ast::AssertionKind","regex_syntax::either::bool","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::print::tests::ast::parse::Parser","regex_syntax::ast::parse::tests::core::convert::Infallible","regex_syntax::tests::ast::Span","regex_syntax::hir::translate::tests::hir_difference::core::panicking::AssertKind","regex_syntax::utf8::tests::encode_surrogate::core::option::Option","regex_syntax::ast::parse::{impl#0}::into_class_literal::isize","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#24}::drop::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::perl_decimal::ast::AssertionKind","regex_syntax::ast::{impl#32}::drop::P","regex_syntax::ast::{impl#18}::from_name::ast::Position","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::property_values::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::script_extension::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_decimal::core::option::Option<ast::AssertionKind>","regex_syntax::either::core::panicking::AssertKind","regex_syntax::unicode::wb::imp::char","regex_syntax::rank::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::{impl#4}::pop_group::char","regex_syntax::utf8::()","regex_syntax::unicode::script_extension::isize","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::is_word_character::imp::core::fmt::Arguments","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::char","regex_syntax::ast::visitor::core::convert::Infallible","regex_syntax::unicode::property_values::bool","regex_syntax::unicode::perl_digit::(ast::SpecialLiteralKind, char)","regex_syntax::ast::parse::tests::core::result::Result, ast::Error>","regex_syntax::rank::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::tests::core::fmt::Arguments","regex_syntax::unicode::script_extension::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_digit::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::error::ast::Position","regex_syntax::unicode::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::ParserI<'_, P>","regex_syntax::unicode::perl_word::imp::!","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::canonical_prop::!","regex_syntax::ast::{impl#32}::drop::core::result::Result, ast::Error>","regex_syntax::hir::translate::ast::LiteralKind","regex_syntax::unicode::gcb::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::sentence_break::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::sentence_break::core::result::Result<ast::Literal, ast::Error>","regex_syntax::error::()","regex_syntax::ast::parse::tests::Borrow","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#3}::fmt::ast::Position","regex_syntax::unicode::ages::core::option::Option","regex_syntax::error::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::{impl#4}::overlaps::(ast::SpecialLiteralKind, char)","regex_syntax::debug::utf8_decode::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::utf8_decode::Borrow","regex_syntax::parser::ast::Span","regex_syntax::hir::translate::ascii_class::()","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_digit::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::tests::ast::ErrorKind","regex_syntax::hir::{impl#3}::fmt::bool","regex_syntax::unicode::is_word_character::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::tests::ast::parse::Primitive","regex_syntax::utf8::tests::encode_surrogate::ast::Span","regex_syntax::unicode::canonical_prop::imp::!","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::Parser","regex_syntax::hir::print::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::tests::()","regex_syntax::utf8::tests::encode_surrogate::core::result::Result","regex_syntax::unicode::script_extension::ast::Position","regex_syntax::ast::ast::parse::ParserI","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::panicking::AssertKind","regex_syntax::unicode::perl_digit::imp::bool","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI","regex_syntax::ast::{impl#32}::drop::Parser","regex_syntax::unicode_tables::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::bool_property::ast::parse::ParserI","regex_syntax::unicode::property_values::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::either::core::fmt::Arguments","regex_syntax::unicode::canonical_prop::imp::ast::ErrorKind","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::tests::Borrow","regex_syntax::unicode::perl_word::ast::Span","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::ParserI<'_, P>","regex_syntax::ast::tests::ast::Span","regex_syntax::either::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::ast::ClassPerl","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::convert::Infallible","regex_syntax::unicode::perl_space::ast::Error","regex_syntax::unicode_tables::age::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::{impl#3}::fmt::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::char","regex_syntax::hir::literal::tests::ast::Assertion","regex_syntax::hir::{impl#6}::subs::ast::Error","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow, ast::Literal>","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::isize","regex_syntax::hir::translate::tests::hir_union::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_group_pre::str","regex_syntax::unicode::script_extension::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::literal::{impl#0}::extract::P","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::option::Option","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::option::Option<ast::AssertionKind>","regex_syntax::error::ast::parse::Parser","regex_syntax::hir::{impl#3}::fmt::Parser","regex_syntax::tests::core::result::Result, ast::Error>","regex_syntax::unicode_tables::perl_decimal::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#13}::fmt::core::result::Result","regex_syntax::unicode::class::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::LiteralKind","regex_syntax::error::tests::core::panicking::AssertKind","regex_syntax::hir::print::tests::ast::Position","regex_syntax::unicode_tables::script_extension::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::{impl#6}::subs::!","regex_syntax::hir::visitor::ast::SpecialLiteralKind","regex_syntax::unicode::is_word_character::imp::()","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Position","regex_syntax::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::error::P","regex_syntax::unicode::perl_digit::P","regex_syntax::utf8::tests::encode_surrogate::ast::ErrorKind","regex_syntax::unicode::perl_digit::imp::ast::ClassUnicode","regex_syntax::hir::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::error::ast::SpecialLiteralKind","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow, ast::Literal>","regex_syntax::error::ast::Literal","regex_syntax::hir::literal::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::ClassUnicode","regex_syntax::ast::parse::{impl#4}::pop_group::()","regex_syntax::ast::{impl#3}::fmt::ast::ClassPerl","regex_syntax::unicode::perl_digit::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::char","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::literal::{impl#9}::from::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::error::tests::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::general_category::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::bool_property::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::print::ast::Span","regex_syntax::ast::{impl#18}::from_name::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::general_category::ast::ClassUnicode","regex_syntax::unicode::bool_property::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_space::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::Parser","regex_syntax::unicode::perl_digit::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::core::convert::Infallible","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::char","regex_syntax::unicode_tables::sentence_break::str","regex_syntax::hir::translate::tests::core::option::Option","regex_syntax::unicode_tables::grapheme_cluster_break::P","regex_syntax::hir::literal::core::option::Option","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::bool_property::imp::Parser","regex_syntax::hir::literal::ast::parse::ParserI","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::!","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::isize","regex_syntax::unicode_tables::perl_word::str","regex_syntax::unicode::bool_property::ast::Assertion","regex_syntax::error::tests::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::convert::Infallible","regex_syntax::hir::translate::ascii_class::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::tests::core::result::Result","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::canonical_prop::imp::ast::LiteralKind","regex_syntax::unicode_tables::case_folding_simple::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::core::panicking::AssertKind","regex_syntax::unicode::wb::imp::()","regex_syntax::unicode::canonical_prop::ast::ErrorKind","regex_syntax::unicode::{impl#4}::overlaps::core::panicking::AssertKind","regex_syntax::hir::{impl#11}::fmt::ast::parse::Parser","regex_syntax::error::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::ast::Span","regex_syntax::hir::ast::LiteralKind","regex_syntax::ast::parse::()","regex_syntax::hir::print::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::AssertionKind","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::wb::imp::ast::parse::ParserI<'_, P>","regex_syntax::ast::parse::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::isize","regex_syntax::unicode::script::imp::ast::ErrorKind","regex_syntax::ast::{impl#32}::drop::isize","regex_syntax::ast::{impl#31}::drop::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#11}::fmt::ast::Position","regex_syntax::unicode_tables::perl_decimal::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::script_extension::str","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::ClassPerl","regex_syntax::unicode_tables::core::option::Option>","regex_syntax::unicode::script::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::script::!","regex_syntax::hir::translate::tests::hir_difference::ast::SpecialLiteralKind","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_word::ast::ErrorKind","regex_syntax::unicode::class::core::option::Option>","regex_syntax::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::script::imp::P","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::ClassUnicode","regex_syntax::unicode_tables::property_values::ast::Assertion","regex_syntax::unicode::property_values::imp::ast::SpecialLiteralKind","regex_syntax::error::tests::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow, ast::Literal>","regex_syntax::utf8::{impl#2}::fmt::core::panicking::AssertKind","regex_syntax::hir::visitor::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::{impl#3}::fmt::ast::Assertion","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI<'_, P>","regex_syntax::parser::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition::(ast::SpecialLiteralKind, char)","regex_syntax::rank::ast::Literal","regex_syntax::unicode_tables::property_values::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::Primitive","regex_syntax::ast::print::tests::ast::parse::Primitive","regex_syntax::ast::visitor::ast::parse::Primitive","regex_syntax::unicode::ages::imp::core::option::Option","regex_syntax::unicode_tables::perl_word::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::canonical_prop::imp::core::panicking::AssertKind","regex_syntax::hir::print::tests::(ast::SpecialLiteralKind, char)","regex_syntax::parser::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#32}::drop::core::convert::Infallible","regex_syntax::unicode::is_word_character::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::imp::ast::ErrorKind","regex_syntax::error::core::option::Option>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::ClassUnicode","regex_syntax::unicode_tables::perl_decimal::ast::parse::ParserI<'_, P>","regex_syntax::unicode::perl_space::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::char","regex_syntax::unicode_tables::script::Borrow","regex_syntax::unicode::ages::!","regex_syntax::hir::literal::{impl#0}::extract::ast::Literal","regex_syntax::unicode::sb::ast::ClassPerl","regex_syntax::hir::interval::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Position","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script::ast::ErrorKind","regex_syntax::unicode::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_decimal::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::ast::ClassPerl","regex_syntax::unicode_tables::script_extension::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::P","regex_syntax::rank::P","regex_syntax::ast::parse::{impl#0}::into_class_literal::bool","regex_syntax::unicode::bool_property::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gencat::imp::ast::LiteralKind","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::perl_decimal::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::word_break::ast::Span","regex_syntax::hir::translate::tests::hir_union::ast::parse::Parser","regex_syntax::hir::{impl#24}::drop::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::parse::tests::core::option::Option","regex_syntax::hir::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::debug::utf8_decode::core::result::Result","regex_syntax::unicode_tables::perl_word::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::utf8::tests::encode_surrogate::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#32}::drop::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::wb::core::convert::Infallible","regex_syntax::unicode::sb::core::convert::Infallible","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gencat::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::general_category::ast::SpecialLiteralKind","regex_syntax::unicode_tables::property_bool::ast::AssertionKind","regex_syntax::parser::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::imp::core::panicking::AssertKind","regex_syntax::unicode::canonical_prop::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::ast::AssertionKind","regex_syntax::unicode::script_extension::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::ast::Assertion","regex_syntax::ast::print::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::literal::{impl#0}::extract::isize","regex_syntax::ast::{impl#31}::drop::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI<'_, P>","regex_syntax::ast::Literal","regex_syntax::hir::interval::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#32}::drop::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::error::tests::ast::ErrorKind","regex_syntax::unicode::ast::ErrorKind","regex_syntax::unicode_tables::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::script::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::perl_space::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::tests::hir_union::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::utf8::{impl#0}::as_slice::ast::SpecialLiteralKind","regex_syntax::unicode::perl_word::imp::ast::SpecialLiteralKind","regex_syntax::unicode::is_word_character::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#6}::subs::Borrow","regex_syntax::ast::parse::{impl#0}::into_class_set_item::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::property_bool::ast::SpecialLiteralKind","regex_syntax::unicode::perl_space::str","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::canonical_prop::isize","regex_syntax::hir::translate::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#32}::drop::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::is_word_character::bool","regex_syntax::unicode_tables::script_extension::ast::parse::Primitive","regex_syntax::ast::print::tests::core::convert::Infallible","regex_syntax::unicode_tables::grapheme_cluster_break::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::tests::()","regex_syntax::ast::print::{impl#4}::fmt_group_pre::!","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI<'_, P>","regex_syntax::utf8::{impl#0}::as_slice::str","regex_syntax::ast::print::{impl#4}::fmt_flags::core::option::Option","regex_syntax::unicode_tables::general_category::ast::Span","regex_syntax::unicode_tables::sentence_break::ast::SpecialLiteralKind","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::fmt::Arguments","regex_syntax::hir::literal::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::error::ast::AssertionKind","regex_syntax::hir::tests::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::panicking::AssertKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::panicking::AssertKind","regex_syntax::unicode::ages::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode::tests::str","regex_syntax::hir::{impl#11}::fmt::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::parser::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::gcb::ast::parse::ParserI","regex_syntax::debug::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::age::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::parser::char","regex_syntax::unicode_tables::str","regex_syntax::unicode::perl_word::imp::ast::parse::ParserI","regex_syntax::unicode::ages::ast::ClassUnicode","regex_syntax::unicode::gcb::bool","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::ages::ast::Literal","regex_syntax::unicode::wb::imp::ast::Error","regex_syntax::hir::{impl#3}::fmt::ast::ErrorKind","regex_syntax::unicode::wb::core::result::Result","regex_syntax::unicode::{impl#4}::overlaps::ast::Literal","regex_syntax::hir::visitor::(&char, &char)","regex_syntax::unicode::is_word_character::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Assertion","regex_syntax::unicode_tables::property_values::ast::SpecialLiteralKind","regex_syntax::ast::visitor::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#24}::drop::!","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::{impl#4}::pop_group::P","regex_syntax::unicode::gencat::imp::ast::parse::Parser","regex_syntax::hir::literal::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::is_word_character::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#18}::from_name::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::bool_property::imp::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#3}::fmt::ast::AssertionKind","regex_syntax::either::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#13}::fmt::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::is_word_character::P","regex_syntax::unicode_tables::case_folding_simple::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::()","regex_syntax::unicode::gencat::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::option::Option","regex_syntax::ast::parse::ast::parse::Parser","regex_syntax::ast::visitor::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#32}::drop::()","regex_syntax::unicode::gencat::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode::wb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::{impl#18}::from_name::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::tests::ast::ErrorKind","regex_syntax::unicode::perl_word::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::ClassUnicode","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::print::tests::isize","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::core::fmt::Arguments","regex_syntax::ast::{impl#32}::drop::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::rank::Parser","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::Parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::isize","regex_syntax::ast::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::sb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::either::Parser","regex_syntax::ast::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode::tests::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gencat::imp::(&char, &char)","regex_syntax::unicode::property_values::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::property_values::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::panicking::AssertKind","regex_syntax::unicode_tables::word_break::ast::SpecialLiteralKind","regex_syntax::unicode::script_extension::imp::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::parse::ParserI","regex_syntax::error::tests::ast::Span","regex_syntax::unicode::script::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::panicking::AssertKind","regex_syntax::ast::{impl#0}::auxiliary_span::ast::Literal","regex_syntax::unicode_tables::age::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::char","regex_syntax::hir::literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::class::core::convert::Infallible","regex_syntax::hir::literal::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::perl_digit::imp::ast::Position","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::canonical_prop::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::Parser","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::Primitive","regex_syntax::unicode::perl_word::imp::P","regex_syntax::unicode_tables::age::isize","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::tests::Parser","regex_syntax::unicode::is_word_character::imp::ast::Position","regex_syntax::utf8::tests::ast::Position","regex_syntax::unicode_tables::ast::parse::ParserI<'_, P>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::fmt::Arguments","regex_syntax::unicode::script::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::core::result::Result, ast::Error>","regex_syntax::unicode::property_values::imp::ast::Span","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::char","regex_syntax::unicode::gencat::ast::ClassPerl","regex_syntax::utf8::tests::encode_surrogate::ast::ClassUnicode","regex_syntax::unicode::property_values::imp::bool","regex_syntax::hir::literal::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::literal::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::property_values::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::perl_space::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_group_pre::P","regex_syntax::unicode::perl_digit::ast::parse::Primitive","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::parse::Primitive","regex_syntax::error::ast::parse::ParserI<'_, P>","regex_syntax::ast::{impl#3}::fmt::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_values::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Span","regex_syntax::unicode_tables::general_category::core::option::Option<ast::AssertionKind>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Span","regex_syntax::hir::translate::tests::hir_union::isize","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::P","regex_syntax::ast::tests::core::option::Option>","regex_syntax::debug::utf8_decode::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_space::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::SpecialLiteralKind","regex_syntax::ast::{impl#3}::fmt::Parser","regex_syntax::hir::translate::ast::Error","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gcb::imp::ast::ErrorKind","regex_syntax::core::panicking::AssertKind","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::script_extension::P","regex_syntax::utf8::{impl#0}::as_slice::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::word_break::ast::ClassUnicode","regex_syntax::hir::translate::tests::core::option::Option<ast::AssertionKind>","regex_syntax::hir::print::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::grapheme_cluster_break::ast::Error","regex_syntax::hir::ast::parse::Primitive","regex_syntax::hir::translate::ascii_class::isize","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::str","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::ast::parse::Primitive","regex_syntax::hir::print::ast::SpecialLiteralKind","regex_syntax::unicode::perl_space::imp::core::result::Result","regex_syntax::unicode::script_extension::imp::core::fmt::Arguments","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::{impl#32}::drop::char","regex_syntax::hir::literal::{impl#0}::extract::ast::LiteralKind","regex_syntax::hir::translate::Borrow","regex_syntax::debug::utf8_decode::char","regex_syntax::hir::interval::Borrow","regex_syntax::hir::{impl#11}::fmt::core::panicking::AssertKind","regex_syntax::unicode::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::word_break::P","regex_syntax::unicode::gcb::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::Assertion","regex_syntax::unicode::perl_space::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::fmt::Arguments<'_>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script::core::panicking::AssertKind","regex_syntax::unicode::is_word_character::core::result::Result, ast::Error>","regex_syntax::utf8::isize","regex_syntax::unicode::perl_space::imp::P","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Error","regex_syntax::unicode::canonical_prop::imp::ast::Span","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::canonical_prop::core::fmt::Arguments","regex_syntax::unicode_tables::property_bool::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Span","regex_syntax::unicode::class::ast::ErrorKind","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result, ast::Error>","regex_syntax::debug::str","regex_syntax::unicode::bool_property::imp::core::option::Option>","regex_syntax::unicode::perl_digit::(&char, &char)","regex_syntax::ast::parse::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::error::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#32}::drop::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::gencat::imp::bool","regex_syntax::unicode::sb::imp::ast::Position","regex_syntax::unicode::sb::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::tests::hir_union::ast::SpecialLiteralKind","regex_syntax::unicode::perl_space::core::panicking::AssertKind","regex_syntax::utf8::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::either::ast::Span","regex_syntax::ast::{impl#13}::fmt::core::option::Option>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::ages::ast::Span","regex_syntax::hir::literal::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::perl_word::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::tests::ast::ClassUnicode","regex_syntax::ast::{impl#31}::drop::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#11}::fmt::ast::parse::ParserI<'_, P>","regex_syntax::utf8::tests::ast::Span","regex_syntax::unicode::wb::ast::Error","regex_syntax::utf8::{impl#2}::fmt::P","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::parse::Parser","regex_syntax::hir::print::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::{impl#4}::overlaps::core::convert::Infallible","regex_syntax::ast::{impl#3}::fmt::Borrow","regex_syntax::unicode::{impl#4}::overlaps::Parser","regex_syntax::unicode::tests::(&char, &char)","regex_syntax::utf8::{impl#2}::fmt::core::option::Option<ast::AssertionKind>","regex_syntax::hir::literal::{impl#0}::extract::Parser","regex_syntax::unicode::is_word_character::imp::core::result::Result","regex_syntax::unicode_tables::property_values::core::result::Result","regex_syntax::hir::visitor::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::ClassPerl","regex_syntax::unicode::tests::core::fmt::Arguments<'_>","regex_syntax::ast::print::tests::ast::Position","regex_syntax::unicode::perl_digit::bool","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::tests::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::sb::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_digit::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_word::ast::parse::Parser","regex_syntax::unicode::{impl#4}::overlaps::ast::AssertionKind","regex_syntax::tests::ast::Assertion","regex_syntax::unicode::wb::core::option::Option<ast::AssertionKind>","regex_syntax::hir::literal::{impl#0}::extract::ast::ClassUnicode","regex_syntax::unicode_tables::general_category::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#31}::drop::core::fmt::Arguments","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::print::tests::core::fmt::Arguments<'_>","regex_syntax::utf8::tests::encode_surrogate::ast::AssertionKind","regex_syntax::ast::{impl#3}::fmt::ast::parse::ParserI","regex_syntax::utf8::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::P","regex_syntax::hir::{impl#3}::fmt::(&char, &char)","regex_syntax::hir::ast::SpecialLiteralKind","regex_syntax::ast::print::tests::bool","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::ClassUnicode","regex_syntax::unicode::tests::ast::Position","regex_syntax::unicode::sb::ast::ClassUnicode","regex_syntax::error::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_word::imp::()","regex_syntax::hir::translate::ascii_class::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::age::ast::Position","regex_syntax::ast::parse::{impl#0}::into_class_literal::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#18}::from_name::core::result::Result, ast::Error>","regex_syntax::hir::translate::tests::hir_union::ast::ClassPerl","regex_syntax::unicode::bool_property::str","regex_syntax::hir::translate::tests::hir_difference::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::print::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::property_values::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::Borrow","regex_syntax::utf8::tests::char","regex_syntax::unicode::ages::imp::ast::Literal","regex_syntax::ast::print::ast::parse::ParserI","regex_syntax::unicode::is_word_character::imp::str","regex_syntax::unicode::script_extension::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gcb::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::wb::imp::ast::Literal","regex_syntax::unicode::gcb::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::Primitive","regex_syntax::hir::{impl#24}::drop::core::result::Result","regex_syntax::hir::translate::ascii_class::ast::parse::ParserI","regex_syntax::hir::{impl#6}::subs::ast::ErrorKind","regex_syntax::unicode::tests::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#18}::from_name::ast::Assertion","regex_syntax::unicode_tables::script_extension::P","regex_syntax::ast::tests::ast::parse::Primitive","regex_syntax::ast::tests::Parser","regex_syntax::unicode::perl_digit::imp::core::option::Option>","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::regex_syntax::ast::parse::ParserI","regex_syntax::ast::visitor::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::Position","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::ClassUnicode","regex_syntax::hir::{impl#3}::fmt::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::convert::Infallible","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::parse::Parser","regex_syntax::ast::{impl#13}::fmt::ast::parse::ParserI<'_, P>","regex_syntax::unicode::tests::ast::parse::Primitive","regex_syntax::hir::translate::tests::hir_difference::ast::parse::Primitive","regex_syntax::unicode::ages::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::gencat::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::option::Option>","regex_syntax::unicode_tables::grapheme_cluster_break::ast::SpecialLiteralKind","regex_syntax::ast::print::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script_extension::imp::char","regex_syntax::ast::{impl#13}::fmt::ast::Literal","regex_syntax::ast::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::property_values::str","regex_syntax::unicode::perl_digit::core::fmt::Arguments<'_>","regex_syntax::utf8::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::perl_space::imp::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::LiteralKind","regex_syntax::ast::tests::ast::AssertionKind","regex_syntax::unicode::script_extension::ast::LiteralKind","regex_syntax::hir::literal::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::print::tests::core::result::Result","regex_syntax::unicode::canonical_prop::imp::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result, ast::Error>","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::script_extension::char","regex_syntax::unicode::perl_space::core::option::Option<ast::AssertionKind>","regex_syntax::parser::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::SpecialLiteralKind","regex_syntax::hir::ast::AssertionKind","regex_syntax::hir::translate::str","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::option::Option>","regex_syntax::ast::{impl#31}::drop::core::result::Result","regex_syntax::unicode::is_word_character::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::char","regex_syntax::unicode::script_extension::imp::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::age::ast::Assertion","regex_syntax::ast::visitor::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::bool_property::ast::Error","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::bool_property::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::ClassPerl","regex_syntax::ast::parse::{impl#0}::into_class_set_item::Parser","regex_syntax::unicode::ages::core::option::Option>","regex_syntax::unicode::canonical_prop::imp::ast::ClassUnicode","regex_syntax::unicode::wb::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::tests::isize","regex_syntax::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::script_extension::imp::core::result::Result","regex_syntax::unicode::core::option::Option>","regex_syntax::hir::literal::{impl#9}::from::(&char, &char)","regex_syntax::unicode::bool_property::imp::ast::ErrorKind","regex_syntax::debug::ast::parse::ParserI<'_, P>","regex_syntax::unicode::{impl#4}::overlaps::char","regex_syntax::unicode::is_word_character::core::fmt::Arguments<'_>","regex_syntax::ast::AssertionKind","regex_syntax::unicode::perl_digit::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::bool","regex_syntax::hir::literal::tests::isize","regex_syntax::unicode::is_word_character::ast::SpecialLiteralKind","regex_syntax::unicode::script::imp::str","regex_syntax::unicode::property_values::imp::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::ascii_class::P","regex_syntax::unicode::gcb::core::fmt::Arguments<'_>","regex_syntax::unicode::perl_space::bool","regex_syntax::unicode_tables::perl_word::!","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::str","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::(&char, &char)","regex_syntax::debug::ast::ClassUnicode","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::perl_space::imp::core::panicking::AssertKind","regex_syntax::ast::{impl#13}::fmt::ast::ClassPerl","regex_syntax::unicode::script_extension::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::tests::ast::Span","regex_syntax::unicode::property_values::imp::core::panicking::AssertKind","regex_syntax::hir::literal::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::ast::Error","regex_syntax::hir::interval::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::ages::core::result::Result","regex_syntax::ast::{impl#31}::drop::core::panicking::AssertKind","regex_syntax::unicode::ages::imp::!","regex_syntax::ast::{impl#3}::fmt::()","regex_syntax::unicode::ages::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::isize","regex_syntax::hir::interval::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::tests::ast::Error","regex_syntax::unicode::perl_digit::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::age::ast::parse::ParserI","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::option::Option>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::Parser","regex_syntax::unicode_tables::core::ops::ControlFlow, ast::Literal>","regex_syntax::either::ast::LiteralKind","regex_syntax::hir::translate::tests::hir_union::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::sb::core::panicking::AssertKind","regex_syntax::unicode::perl_word::imp::bool","regex_syntax::unicode::perl_digit::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::script::imp::ast::parse::Parser","regex_syntax::unicode::gencat::imp::ast::Error","regex_syntax::unicode::gencat::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::parse::ParserI","regex_syntax::ast::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_digit::ast::ClassUnicode","regex_syntax::rank::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::word_break::regex_syntax::ast::parse::ParserI","regex_syntax::rank::ast::parse::Primitive","regex_syntax::either::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script_extension::core::result::Result","regex_syntax::error::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::class::core::fmt::Arguments","regex_syntax::hir::visitor::core::fmt::Arguments","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::convert::Infallible","regex_syntax::hir::translate::tests::hir_union::P","regex_syntax::hir::tests::core::result::Result, ast::Error>","regex_syntax::error::tests::core::fmt::Arguments","regex_syntax::hir::{impl#24}::drop::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::option::Option","regex_syntax::unicode_tables::perl_decimal::ast::parse::Parser","regex_syntax::unicode::wb::ast::LiteralKind","regex_syntax::ast::{impl#31}::drop::ast::SpecialLiteralKind","regex_syntax::unicode::sb::bool","regex_syntax::ast::{impl#13}::fmt::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::bool_property::imp::Borrow","regex_syntax::ast::print::tests::ast::SpecialLiteralKind","regex_syntax::utf8::tests::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_word::imp::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_names::core::option::Option","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::canonical_prop::imp::()","regex_syntax::ast::parse::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::script::imp::char","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::property_values::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gcb::ast::parse::Primitive","regex_syntax::unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_decimal::core::result::Result, ast::Error>","regex_syntax::hir::print::ast::LiteralKind","regex_syntax::unicode_tables::property_bool::(&char, &char)","regex_syntax::unicode_tables::property_values::core::result::Result<ast::Literal, ast::Error>","regex_syntax::tests::regex_syntax::ast::parse::ParserI","regex_syntax::debug::utf8_decode::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::script::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::word_break::bool","regex_syntax::hir::translate::ast::Span","regex_syntax::hir::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::core::result::Result, ast::Error>","regex_syntax::debug::utf8_decode::ast::Literal","regex_syntax::unicode::bool_property::ast::ClassPerl","regex_syntax::unicode::sb::imp::core::option::Option","regex_syntax::unicode::bool_property::imp::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::canonical_prop::ast::SpecialLiteralKind","regex_syntax::debug::utf8_decode::(&char, &char)","regex_syntax::unicode::bool_property::imp::core::convert::Infallible","regex_syntax::unicode::property_values::imp::ast::Position","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::bool_property::imp::ast::Span","regex_syntax::hir::literal::{impl#0}::extract::char","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::Parser","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::str","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::isize","regex_syntax::unicode::gencat::ast::Error","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::ErrorKind","regex_syntax::hir::translate::tests::ast::Span","regex_syntax::hir::translate::tests::hir_difference::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_space::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::!","regex_syntax::ast::{impl#32}::drop::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::visitor::ast::parse::Parser","regex_syntax::unicode::is_word_character::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_word::imp::Borrow","regex_syntax::either::ast::AssertionKind","regex_syntax::either::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_word::ast::Error","regex_syntax::debug::core::option::Option","regex_syntax::unicode::perl_word::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::property_bool::ast::parse::Primitive","regex_syntax::hir::literal::{impl#9}::from::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_literal::(ast::SpecialLiteralKind, char)","regex_syntax::debug::ast::Error","regex_syntax::ast::{impl#31}::drop::char","regex_syntax::hir::interval::core::convert::Infallible","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::case_folding_simple::core::convert::Infallible","regex_syntax::ast::print::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::general_category::ast::Error","regex_syntax::hir::translate::char","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#24}::drop::Parser","regex_syntax::unicode_tables::word_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::fmt::Arguments","regex_syntax::unicode::sb::imp::core::convert::Infallible","regex_syntax::ast::{impl#31}::drop::core::option::Option","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::ages::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result, ast::Error>","regex_syntax::hir::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::bool_property::imp::ast::Error","regex_syntax::ast::tests::ast::Position","regex_syntax::either::ast::parse::Primitive","regex_syntax::unicode::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::ast::AssertionKind","regex_syntax::hir::P","regex_syntax::unicode::perl_space::ast::Literal","regex_syntax::unicode::gcb::ast::Position","regex_syntax::hir::literal::{impl#9}::from::Parser","regex_syntax::unicode_tables::age::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gcb::core::fmt::Arguments","regex_syntax::ast::parse::{impl#0}::into_class_set_item::(ast::SpecialLiteralKind, char)","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Span","regex_syntax::unicode_tables::property_bool::ast::Assertion","regex_syntax::hir::{impl#6}::subs::ast::parse::Primitive","regex_syntax::unicode::Borrow","regex_syntax::hir::translate::core::option::Option","regex_syntax::utf8::{impl#0}::as_slice::core::panicking::AssertKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::bool","regex_syntax::unicode_tables::grapheme_cluster_break::Parser","regex_syntax::unicode::bool_property::imp::ast::Literal","regex_syntax::unicode::script::imp::core::fmt::Arguments","regex_syntax::debug::core::option::Option>","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::script::ast::Position","regex_syntax::debug::char","regex_syntax::ast::{impl#3}::fmt::ast::parse::Parser","regex_syntax::unicode_tables::property_bool::core::result::Result, ast::Error>","regex_syntax::unicode::perl_digit::imp::ast::ErrorKind","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::property_values::!","regex_syntax::unicode::wb::char","regex_syntax::unicode_tables::property_names::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::imp::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#11}::fmt::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#32}::drop::ast::Error","regex_syntax::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::general_category::P","regex_syntax::unicode_tables::word_break::core::fmt::Arguments<'_>","regex_syntax::hir::literal::{impl#9}::from::ast::Span","regex_syntax::unicode::ages::imp::core::panicking::AssertKind","regex_syntax::ast::{impl#3}::fmt::char","regex_syntax::unicode::perl_space::imp::ast::AssertionKind","regex_syntax::unicode_tables::property_names::ast::LiteralKind","regex_syntax::unicode_tables::grapheme_cluster_break::!","regex_syntax::utf8::{impl#2}::fmt::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::parse::{impl#4}::pop_group::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::regex_syntax::ast::parse::ParserI","regex_syntax::hir::tests::core::result::Result","regex_syntax::unicode::bool_property::ast::ErrorKind","regex_syntax::unicode_tables::perl_word::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::ascii_class::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#3}::fmt::core::result::Result, ast::Error>","regex_syntax::hir::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::{impl#2}::fmt::ast::ClassUnicode","regex_syntax::unicode::perl_digit::ast::parse::ParserI","regex_syntax::unicode::tests::P","regex_syntax::unicode_tables::word_break::ast::AssertionKind","regex_syntax::unicode::{impl#4}::overlaps::ast::Position","regex_syntax::unicode::perl_digit::ast::Position","regex_syntax::either::char","regex_syntax::ast::{impl#3}::fmt::core::option::Option","regex_syntax::unicode::class::ast::parse::ParserI","regex_syntax::unicode::canonical_prop::imp::isize","regex_syntax::parser::!","regex_syntax::unicode::gcb::ast::SpecialLiteralKind","regex_syntax::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::interval::()","regex_syntax::unicode::gcb::core::option::Option","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Literal","regex_syntax::utf8::tests::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Position","regex_syntax::unicode::canonical_prop::Borrow","regex_syntax::unicode_tables::word_break::ast::parse::Parser","regex_syntax::rank::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::SpecialLiteralKind","regex_syntax::unicode::wb::imp::ast::LiteralKind","regex_syntax::hir::literal::{impl#0}::extract::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::literal::ast::Error","regex_syntax::unicode::canonical_prop::core::convert::Infallible","regex_syntax::hir::interval::ast::Position","regex_syntax::ast::parse::tests::ast::AssertionKind","regex_syntax::unicode_tables::core::result::Result, ast::Error>","regex_syntax::ast::{impl#31}::drop::Borrow","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::ErrorKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::Borrow","regex_syntax::unicode::is_word_character::imp::ast::SpecialLiteralKind","regex_syntax::utf8::{impl#0}::as_slice::regex_syntax::ast::parse::ParserI","regex_syntax::hir::{impl#24}::drop::core::option::Option>","regex_syntax::unicode::script::imp::ast::Span","regex_syntax::rank::isize","regex_syntax::error::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::LiteralKind","regex_syntax::ast::{impl#3}::fmt::ast::Error","regex_syntax::unicode::gcb::Borrow","regex_syntax::unicode::perl_digit::imp::ast::parse::ParserI","regex_syntax::unicode::property_values::imp::core::result::Result, ast::Error>","regex_syntax::unicode::script_extension::ast::parse::Parser","regex_syntax::hir::translate::ast::SpecialLiteralKind","regex_syntax::ast::print::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gencat::bool","regex_syntax::unicode::perl_space::ast::Span","regex_syntax::hir::translate::tests::!","regex_syntax::hir::translate::tests::char","regex_syntax::unicode_tables::script_extension::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::Error","regex_syntax::unicode::is_word_character::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::tests::encode_surrogate::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::ascii_class::ast::parse::Parser","regex_syntax::unicode::wb::imp::core::convert::Infallible","regex_syntax::unicode_tables::property_values::ast::ClassUnicode","regex_syntax::!","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::debug::ast::Span","regex_syntax::unicode_tables::general_category::core::result::Result<ast::Literal, ast::Error>","regex_syntax::error::tests::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::option::Option","regex_syntax::hir::translate::tests::ast::parse::ParserI","regex_syntax::unicode::gencat::core::panicking::AssertKind","regex_syntax::unicode::script::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Position","regex_syntax::unicode_tables::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::{impl#4}::pop_group::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::age::str","regex_syntax::ast::{impl#18}::from_name::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::general_category::ast::Position","regex_syntax::unicode::class::core::result::Result","regex_syntax::hir::print::core::option::Option>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::print::ast::Error","regex_syntax::parser::core::result::Result","regex_syntax::unicode::property_values::imp::core::fmt::Arguments","regex_syntax::unicode::wb::ast::parse::Parser","regex_syntax::ast::parse::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_space::char","regex_syntax::unicode::sb::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::script::ast::Position","regex_syntax::hir::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::script_extension::ast::Position","regex_syntax::rank::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::sb::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::bool_property::imp::ast::Position","regex_syntax::unicode::gcb::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::fmt::Arguments<'_>","regex_syntax::hir::interval::core::panicking::AssertKind","regex_syntax::unicode::script_extension::core::convert::Infallible","regex_syntax::unicode_tables::perl_word::core::fmt::Arguments<'_>","regex_syntax::hir::translate::tests::hir_difference::core::result::Result","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result, ast::Error>","regex_syntax::unicode::perl_digit::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#32}::drop::ast::parse::Primitive","regex_syntax::utf8::tests::str","regex_syntax::hir::tests::(ast::SpecialLiteralKind, char)","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::LiteralKind","regex_syntax::unicode::canonical_prop::imp::ast::AssertionKind","regex_syntax::ast::{impl#0}::auxiliary_span::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_digit::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::ast::parse::ParserI","regex_syntax::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::literal::{impl#0}::extract::str","regex_syntax::hir::visitor::str","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::LiteralKind","regex_syntax::unicode_tables::sentence_break::ast::LiteralKind","regex_syntax::ast::{impl#31}::drop::ast::Literal","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::perl_word::ast::parse::ParserI<'_, P>","regex_syntax::error::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::core::option::Option>","regex_syntax::hir::!","regex_syntax::unicode::is_word_character::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::core::fmt::Arguments<'_>","regex_syntax::unicode::wb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::perl_space::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::wb::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::class::ast::parse::Parser","regex_syntax::unicode_tables::property_names::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::ast::Error","regex_syntax::ast::tests::()","regex_syntax::unicode_tables::script_extension::ast::LiteralKind","regex_syntax::unicode::canonical_prop::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::parser::core::option::Option","regex_syntax::debug::utf8_decode::ast::Position","regex_syntax::unicode::script_extension::ast::Literal","regex_syntax::unicode::bool_property::imp::ast::ClassPerl","regex_syntax::ast::bool","regex_syntax::hir::print::tests::core::fmt::Arguments","regex_syntax::ast::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::P","regex_syntax::hir::translate::tests::hir_difference::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::perl_decimal::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::convert::Infallible","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::perl_digit::core::fmt::Arguments","regex_syntax::unicode::sb::ast::LiteralKind","regex_syntax::hir::literal::Parser","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::isize","regex_syntax::unicode::script::imp::ast::AssertionKind","regex_syntax::error::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::error::bool","regex_syntax::unicode::canonical_prop::imp::Parser","regex_syntax::ast::parse::core::result::Result","regex_syntax::hir::literal::{impl#9}::from::()","regex_syntax::tests::bool","regex_syntax::hir::{impl#24}::drop::()","regex_syntax::unicode::sb::isize","regex_syntax::unicode_tables::sentence_break::ast::parse::Primitive","regex_syntax::rank::ast::parse::ParserI","regex_syntax::unicode_tables::perl_decimal::core::fmt::Arguments","regex_syntax::ast::{impl#32}::drop::ast::LiteralKind","regex_syntax::unicode::perl_word::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::ast::ErrorKind","regex_syntax::utf8::tests::encode_surrogate::char","regex_syntax::rank::bool","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::core::fmt::Arguments","regex_syntax::hir::translate::tests::hir_difference::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::tests::hir_union::ast::AssertionKind","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::option::Option","regex_syntax::hir::translate::core::fmt::Arguments","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result, ast::Error>","regex_syntax::hir::{impl#3}::fmt::()","regex_syntax::hir::translate::tests::isize","regex_syntax::ast::{impl#32}::drop::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::tests::str","regex_syntax::unicode_tables::script::ast::parse::Parser","regex_syntax::unicode_tables::word_break::ast::ErrorKind","regex_syntax::unicode_tables::script_extension::core::option::Option>","regex_syntax::unicode::gencat::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Assertion","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::is_word_character::ast::parse::Primitive","regex_syntax::unicode_tables::perl_decimal::Borrow","regex_syntax::hir::translate::tests::ast::Literal","regex_syntax::hir::literal::tests::core::panicking::AssertKind","regex_syntax::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::script_extension::ast::ClassPerl","regex_syntax::hir::visitor::!","regex_syntax::hir::ast::ErrorKind","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::fmt::Arguments<'_>","regex_syntax::unicode::ages::ast::SpecialLiteralKind","regex_syntax::hir::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::tests::bool","regex_syntax::unicode::script_extension::Borrow","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::parse::ParserI","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ages::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::either::core::option::Option","regex_syntax::unicode::wb::imp::Parser","regex_syntax::unicode::perl_digit::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::property_values::Parser","regex_syntax::ast::{impl#3}::fmt::(&char, &char)","regex_syntax::unicode::bool_property::imp::ast::parse::Parser","regex_syntax::ast::{impl#18}::from_name::ast::Span","regex_syntax::unicode::class::(&char, &char)","regex_syntax::unicode::perl_word::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::parse::ParserI","regex_syntax::unicode::script_extension::ast::Span","regex_syntax::hir::visitor::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::wb::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::ast::ClassPerl","regex_syntax::hir::translate::tests::str","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result, ast::Error>","regex_syntax::hir::interval::ast::parse::Parser","regex_syntax::hir::literal::tests::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::perl_word::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::visitor::core::option::Option","regex_syntax::hir::print::()","regex_syntax::unicode::property_values::imp::P","regex_syntax::hir::translate::tests::hir_difference::ast::Error","regex_syntax::unicode_tables::property_values::ast::parse::ParserI<'_, P>","regex_syntax::unicode::ages::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result, ast::Error>","regex_syntax::unicode::perl_digit::core::result::Result, ast::Error>","regex_syntax::unicode_tables::script_extension::ast::Assertion","regex_syntax::unicode_tables::property_names::!","regex_syntax::unicode::bool_property::imp::P","regex_syntax::unicode::tests::core::convert::Infallible","regex_syntax::error::tests::ast::parse::ParserI<'_, P>","regex_syntax::hir::{impl#6}::subs::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::parse::ast::Error","regex_syntax::utf8::{impl#2}::fmt::Parser","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::debug::utf8_decode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::perl_digit::regex_syntax::ast::parse::ParserI","regex_syntax::utf8::tests::ast::ClassPerl","regex_syntax::unicode::property_values::imp::str","regex_syntax::hir::{impl#11}::fmt::ast::Span","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::Parser","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Position","regex_syntax::unicode_tables::property_values::!","regex_syntax::ast::tests::ast::LiteralKind","regex_syntax::unicode::perl_space::imp::regex_syntax::ast::parse::ParserI","regex_syntax::ast::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::visitor::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::{impl#11}::fmt::core::result::Result, ast::Error>","regex_syntax::unicode_tables::perl_space::core::panicking::AssertKind","regex_syntax::hir::print::tests::bool","regex_syntax::unicode::gencat::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::perl_space::ast::ClassPerl","regex_syntax::unicode_tables::word_break::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::core::fmt::Arguments","regex_syntax::ast::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_flags::P","regex_syntax::unicode::wb::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::ClassUnicode","regex_syntax::unicode::wb::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::{impl#4}::overlaps::Borrow","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::word_break::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::ast::ErrorKind","regex_syntax::hir::visitor::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::gencat::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Error","regex_syntax::ast::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result","regex_syntax::hir::interval::(&char, &char)","regex_syntax::ast::{impl#0}::auxiliary_span::ast::ClassPerl","regex_syntax::unicode_tables::property_names::ast::parse::Parser","regex_syntax::rank::(&char, &char)","regex_syntax::ast::{impl#18}::from_name::core::result::Result","regex_syntax::ast::{impl#31}::drop::ast::ErrorKind","regex_syntax::either::Borrow","regex_syntax::unicode_tables::property_values::ast::parse::ParserI","regex_syntax::hir::translate::tests::core::option::Option>","regex_syntax::utf8::tests::encode_surrogate::core::result::Result, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::core::fmt::Arguments","regex_syntax::ast::core::option::Option","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::parse::ParserI<'_, P>","regex_syntax::unicode::wb::ast::AssertionKind","regex_syntax::ast::tests::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_group_pre::bool","regex_syntax::hir::translate::ascii_class::ast::ClassUnicode","regex_syntax::hir::print::tests::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gencat::imp::ast::Position","regex_syntax::ast::{impl#13}::fmt::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_word::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::P","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::gencat::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::gencat::regex_syntax::ast::parse::ParserI","regex_syntax::hir::{impl#6}::subs::core::option::Option","regex_syntax::hir::literal::{impl#9}::from::core::result::Result, ast::Error>","regex_syntax::hir::literal::{impl#0}::extract::ast::Assertion","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::perl_space::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::script_extension::imp::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::SpecialLiteralKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::ErrorKind","regex_syntax::unicode_tables::case_folding_simple::ast::SpecialLiteralKind","regex_syntax::unicode_tables::ast::Literal","regex_syntax::hir::translate::tests::hir_difference::ast::AssertionKind","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::parse::ParserI","regex_syntax::unicode::script_extension::imp::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::ages::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::ages::ast::AssertionKind","regex_syntax::unicode::sb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::print::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_flags::core::convert::Infallible","regex_syntax::ast::{impl#18}::from_name::!","regex_syntax::unicode_tables::general_category::Borrow","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::visitor::()","regex_syntax::hir::literal::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::Parser","regex_syntax::unicode::wb::imp::ast::AssertionKind","regex_syntax::hir::{impl#11}::fmt::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::{impl#2}::fmt::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::grapheme_cluster_break::(&char, &char)","regex_syntax::unicode::is_word_character::core::panicking::AssertKind","regex_syntax::ast::{impl#13}::fmt::ast::SpecialLiteralKind","regex_syntax::ast::{impl#32}::drop::!","regex_syntax::unicode_tables::script_extension::core::convert::Infallible","regex_syntax::ast::parse::ast::SpecialLiteralKind","regex_syntax::hir::interval::core::option::Option>","regex_syntax::hir::literal::tests::()","regex_syntax::unicode_tables::sentence_break::core::convert::Infallible","regex_syntax::hir::interval::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#11}::fmt::()","regex_syntax::unicode_tables::script::ast::parse::Primitive","regex_syntax::unicode::wb::ast::Position","regex_syntax::unicode_tables::script_extension::Borrow","regex_syntax::hir::translate::tests::hir_union::core::option::Option>","regex_syntax::unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::property_values::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::Position","regex_syntax::hir::translate::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::print::tests::ast::ClassPerl","regex_syntax::ast::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Literal","regex_syntax::error::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#11}::fmt::ast::parse::Primitive","regex_syntax::unicode_tables::general_category::ast::parse::ParserI<'_, P>","regex_syntax::unicode::bool_property::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::rank::ast::ClassPerl","regex_syntax::hir::translate::!","regex_syntax::hir::literal::tests::ast::AssertionKind","regex_syntax::unicode::script_extension::imp::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::{impl#18}::from_name::char","regex_syntax::hir::print::tests::core::panicking::AssertKind","regex_syntax::ast::tests::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result","regex_syntax::unicode::script::ast::parse::ParserI","regex_syntax::hir::translate::ascii_class::core::result::Result, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::ages::ast::parse::Primitive","regex_syntax::unicode::is_word_character::imp::ast::LiteralKind","regex_syntax::hir::translate::isize","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::ClassPerl","regex_syntax::unicode::perl_digit::ast::Span","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::ast::Literal","regex_syntax::unicode::script_extension::imp::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::SpecialLiteralKind","regex_syntax::unicode::wb::ast::ErrorKind","regex_syntax::ast::visitor::core::fmt::Arguments","regex_syntax::unicode_tables::age::ast::parse::Primitive","regex_syntax::hir::translate::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::Borrow","regex_syntax::debug::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::core::result::Result","regex_syntax::unicode_tables::property_names::()","regex_syntax::hir::literal::{impl#0}::extract::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::bool_property::core::fmt::Arguments","regex_syntax::ast::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result","regex_syntax::unicode::perl_digit::ast::Error","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::panicking::AssertKind","regex_syntax::hir::translate::ascii_class::ast::Position","regex_syntax::unicode::is_word_character::imp::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::visitor::core::convert::Infallible","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::convert::Infallible","regex_syntax::hir::{impl#11}::fmt::str","regex_syntax::unicode::P","regex_syntax::unicode::ages::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_bool::ast::Literal","regex_syntax::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::bool_property::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::script_extension::imp::(&char, &char)","regex_syntax::utf8::tests::encode_surrogate::core::convert::Infallible","regex_syntax::unicode::perl_space::imp::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::Literal","regex_syntax::unicode_tables::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::parse::Parser","regex_syntax::unicode::{impl#4}::overlaps::ast::Error","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::option::Option<ast::AssertionKind>","regex_syntax::error::tests::ast::parse::Primitive","regex_syntax::ast::visitor::(&char, &char)","regex_syntax::unicode::perl_word::ast::parse::Primitive","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result","regex_syntax::hir::literal::tests::ast::ClassPerl","regex_syntax::unicode::script::imp::()","regex_syntax::ast::print::{impl#4}::fmt_literal::core::option::Option>","regex_syntax::hir::literal::{impl#0}::extract::core::convert::Infallible","regex_syntax::unicode::script::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::grapheme_cluster_break::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::char","regex_syntax::ast::{impl#18}::from_name::ast::parse::ParserI<'_, P>","regex_syntax::unicode::gcb::imp::ast::LiteralKind","regex_syntax::hir::literal::tests::core::convert::Infallible","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gencat::imp::ast::ClassPerl","regex_syntax::unicode::perl_word::ast::Position","regex_syntax::either::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::convert::Infallible","regex_syntax::ast::LiteralKind","regex_syntax::ast::ast::Literal","regex_syntax::unicode_tables::property_bool::isize","regex_syntax::unicode::script::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#24}::drop::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::Parser","regex_syntax::unicode::is_word_character::imp::core::result::Result, ast::Error>","regex_syntax::unicode::perl_word::imp::ast::ClassPerl","regex_syntax::ast::{impl#3}::fmt::core::convert::Infallible","regex_syntax::hir::tests::()","regex_syntax::debug::utf8_decode::ast::ErrorKind","regex_syntax::utf8::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::tests::ast::Assertion","regex_syntax::utf8::{impl#2}::fmt::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::Error","regex_syntax::ast::print::{impl#4}::fmt_class_perl::bool","regex_syntax::hir::{impl#24}::drop::core::fmt::Arguments<'_>","regex_syntax::unicode::script::ast::ClassUnicode","regex_syntax::utf8::{impl#0}::as_slice::Borrow","regex_syntax::hir::tests::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::{impl#3}::fmt::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_assertion::()","regex_syntax::unicode::wb::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::script_extension::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::parse::ParserI<'_, P>","regex_syntax::utf8::{impl#0}::as_slice::!","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::convert::Infallible","regex_syntax::hir::translate::Parser","regex_syntax::debug::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::(&char, &char)","regex_syntax::hir::print::tests::ast::Span","regex_syntax::unicode_tables::property_bool::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::canonical_prop::imp::bool","regex_syntax::ast::print::core::option::Option","regex_syntax::hir::translate::ascii_class::ast::ClassPerl","regex_syntax::hir::tests::core::panicking::AssertKind","regex_syntax::hir::translate::ascii_class::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::Span","regex_syntax::unicode::script::bool","regex_syntax::unicode::perl_space::!","regex_syntax::utf8::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::utf8::{impl#0}::as_slice::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::sb::ast::Error","regex_syntax::hir::translate::ascii_class::ast::Assertion","regex_syntax::utf8::ast::Position","regex_syntax::hir::interval::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::general_category::core::option::Option","regex_syntax::unicode_tables::perl_space::ast::Literal","regex_syntax::unicode::perl_word::imp::ast::ClassUnicode","regex_syntax::parser::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script_extension::core::fmt::Arguments","regex_syntax::unicode_tables::age::ast::parse::Parser","regex_syntax::unicode::ages::imp::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::bool","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::convert::Infallible","regex_syntax::unicode::wb::imp::isize","regex_syntax::unicode_tables::script::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::{impl#2}::fmt::ast::Span","regex_syntax::unicode::perl_digit::imp::ast::Span","regex_syntax::hir::translate::ast::Assertion","regex_syntax::hir::interval::Parser","regex_syntax::unicode::perl_space::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Position","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::str","regex_syntax::unicode::tests::ast::parse::ParserI","regex_syntax::error::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::tests::core::result::Result","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Error","regex_syntax::unicode_tables::!","regex_syntax::rank::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::P","regex_syntax::unicode::ages::ast::Position","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::{impl#3}::fmt::core::result::Result","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::isize","regex_syntax::unicode_tables::general_category::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::{impl#6}::subs::bool","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result, ast::Error>","regex_syntax::unicode::perl_space::ast::ClassPerl","regex_syntax::ast::parse::{impl#4}::pop_group::str","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::property_values::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::sentence_break::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_decimal::core::fmt::Arguments<'_>","regex_syntax::hir::interval::core::result::Result","regex_syntax::unicode::is_word_character::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::bool_property::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::property_values::imp::ast::Assertion","regex_syntax::hir::interval::ast::Assertion","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_repetition::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::tests::ast::Span","regex_syntax::ast::parse::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::ascii_class::char","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::Literal","regex_syntax::error::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::property_values::ast::ErrorKind","regex_syntax::hir::tests::ast::parse::Primitive","regex_syntax::unicode_tables::perl_space::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::char","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::SpecialLiteralKind","regex_syntax::unicode_tables::property_names::core::fmt::Arguments<'_>","regex_syntax::hir::core::convert::Infallible","regex_syntax::unicode::canonical_prop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::canonical_prop::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::script_extension::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::AssertionKind","regex_syntax::unicode_tables::case_folding_simple::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::grapheme_cluster_break::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::is_word_character::core::convert::Infallible","regex_syntax::utf8::{impl#0}::as_slice::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#2}::fmt::ast::Literal","regex_syntax::unicode::canonical_prop::(&char, &char)","regex_syntax::unicode::is_word_character::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::ages::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::property_values::isize","regex_syntax::parser::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::ast::LiteralKind","regex_syntax::unicode::perl_digit::imp::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_repetition::Borrow","regex_syntax::ast::{impl#13}::fmt::P","regex_syntax::ast::print::{impl#4}::fmt_class_perl::Borrow","regex_syntax::unicode_tables::sentence_break::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::script::ast::LiteralKind","regex_syntax::hir::interval::str","regex_syntax::utf8::tests::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::option::Option","regex_syntax::unicode::canonical_prop::ast::parse::ParserI","regex_syntax::ast::{impl#3}::fmt::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::perl_space::core::fmt::Arguments<'_>","regex_syntax::hir::literal::ast::parse::Primitive","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::visitor::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::property_values::imp::ast::parse::Parser","regex_syntax::unicode::perl_space::ast::parse::ParserI","regex_syntax::unicode::class::P","regex_syntax::hir::print::tests::ast::parse::ParserI","regex_syntax::unicode_tables::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::property_values::imp::()","regex_syntax::utf8::tests::!","regex_syntax::utf8::{impl#0}::as_slice::core::option::Option>","regex_syntax::unicode::perl_space::core::option::Option>","regex_syntax::hir::{impl#6}::subs::core::fmt::Arguments","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::LiteralKind","regex_syntax::unicode::perl_space::core::fmt::Arguments","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::debug::utf8_decode::ast::ClassUnicode","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script_extension::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::property_names::P","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::class::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::print::ast::Literal","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::Error","regex_syntax::unicode::ages::imp::core::option::Option>","regex_syntax::unicode::perl_space::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_word::(&char, &char)","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::sb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::ast::Position","regex_syntax::unicode::canonical_prop::imp::str","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::{impl#6}::subs::ast::AssertionKind","regex_syntax::hir::literal::core::fmt::Arguments","regex_syntax::unicode::canonical_prop::core::panicking::AssertKind","regex_syntax::unicode::canonical_prop::imp::char","regex_syntax::unicode_tables::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::ascii_class::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::ErrorKind","regex_syntax::error::ast::Error","regex_syntax::hir::literal::tests::core::option::Option>","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::gcb::imp::core::convert::Infallible","regex_syntax::unicode_tables::age::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::!","regex_syntax::parser::core::fmt::Arguments<'_>","regex_syntax::ast::print::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::literal::tests::bool","regex_syntax::unicode::bool_property::bool","regex_syntax::hir::{impl#11}::fmt::isize","regex_syntax::ast::print::{impl#4}::fmt_flags::isize","regex_syntax::ast::{impl#31}::drop::str","regex_syntax::unicode::perl_word::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::is_word_character::ast::Error","regex_syntax::unicode::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::tests::()","regex_syntax::hir::literal::{impl#0}::extract::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::option::Option>","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::sb::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::sb::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::print::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::wb::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::AssertionKind","regex_syntax::ast::parse::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#13}::fmt::core::fmt::Arguments","regex_syntax::unicode::ages::imp::ast::ClassPerl","regex_syntax::unicode_tables::perl_decimal::core::convert::Infallible","regex_syntax::ast::print::{impl#4}::fmt_group_pre::Borrow","regex_syntax::unicode_tables::age::Borrow","regex_syntax::hir::translate::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::LiteralKind","regex_syntax::hir::literal::()","regex_syntax::hir::translate::tests::ast::ErrorKind","regex_syntax::unicode::gencat::imp::ast::parse::ParserI","regex_syntax::unicode_tables::property_bool::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::is_word_character::ast::parse::Parser","regex_syntax::unicode::perl_space::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::{impl#31}::drop::!","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::{impl#0}::as_slice::ast::Assertion","regex_syntax::hir::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::isize","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::parse::Parser","regex_syntax::unicode::ages::imp::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::script::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_flags::Parser","regex_syntax::ast::parse::ast::ClassUnicode","regex_syntax::hir::translate::tests::hir_difference::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::Span","regex_syntax::unicode::class::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::word_break::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::general_category::()","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::Primitive","regex_syntax::hir::{impl#3}::fmt::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::ast::AssertionKind","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::result::Result, ast::Error>","regex_syntax::unicode::gcb::imp::ast::parse::ParserI","regex_syntax::hir::translate::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::is_word_character::imp::ast::Assertion","regex_syntax::ast::{impl#13}::fmt::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_digit::imp::core::fmt::Arguments","regex_syntax::ast::print::tests::ast::parse::Parser","regex_syntax::hir::literal::{impl#9}::from::ast::ClassPerl","regex_syntax::ast::{impl#18}::from_name::isize","regex_syntax::unicode::property_values::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::{impl#3}::fmt::ast::parse::Parser","regex_syntax::unicode::sb::imp::ast::AssertionKind","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::ClassPerl","regex_syntax::ast::{impl#3}::fmt::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::perl_space::imp::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::parse::ast::LiteralKind","regex_syntax::unicode::class::ast::Error","regex_syntax::parser::str","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::option::Option>","regex_syntax::ast::{impl#3}::fmt::core::fmt::Arguments<'_>","regex_syntax::utf8::{impl#0}::as_slice::ast::Error","regex_syntax::utf8::tests::encode_surrogate::!","regex_syntax::hir::translate::tests::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::bool","regex_syntax::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::debug::ast::SpecialLiteralKind","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::tests::ast::Position","regex_syntax::hir::translate::tests::hir_difference::core::fmt::Arguments<'_>","regex_syntax::unicode::property_values::imp::ast::ClassPerl","regex_syntax::unicode::tests::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::ErrorKind","regex_syntax::unicode::perl_space::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_literal::(&char, &char)","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_digit::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_group_pre::isize","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Position","regex_syntax::hir::{impl#3}::fmt::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_word::imp::core::option::Option<ast::AssertionKind>","regex_syntax::hir::visitor::Parser","regex_syntax::unicode::sb::(&char, &char)","regex_syntax::unicode_tables::char","regex_syntax::unicode::script::ast::SpecialLiteralKind","regex_syntax::error::tests::ast::LiteralKind","regex_syntax::unicode::bool_property::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::ast::ClassUnicode","regex_syntax::unicode::gcb::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::bool_property::isize","regex_syntax::unicode::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::sb::imp::Parser","regex_syntax::utf8::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#32}::drop::str","regex_syntax::hir::visitor::ast::AssertionKind","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::debug::ast::parse::Parser","regex_syntax::unicode::gcb::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::perl_word::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::{impl#3}::fmt::ast::parse::Primitive","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::isize","regex_syntax::hir::tests::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::gencat::imp::isize","regex_syntax::hir::visitor::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::literal::ast::AssertionKind","regex_syntax::hir::translate::tests::hir_union::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::property_values::imp::core::option::Option","regex_syntax::unicode_tables::perl_word::Borrow","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::tests::core::option::Option","regex_syntax::unicode::script::imp::core::option::Option","regex_syntax::unicode::wb::core::result::Result, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::panicking::AssertKind","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::{impl#31}::drop::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::(ast::SpecialLiteralKind, char)","regex_syntax::hir::translate::ascii_class::core::result::Result","regex_syntax::hir::literal::tests::ast::parse::Parser","regex_syntax::ast::{impl#31}::drop::ast::Span","regex_syntax::error::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_literal::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::ast::LiteralKind","regex_syntax::unicode_tables::word_break::ast::Position","regex_syntax::unicode::canonical_prop::imp::ast::Literal","regex_syntax::hir::literal::{impl#0}::extract::ast::parse::Primitive","regex_syntax::ast::parse::tests::str","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::bool","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::property_values::(ast::SpecialLiteralKind, char)","regex_syntax::hir::print::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::{impl#31}::drop::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::(&char, &char)","regex_syntax::unicode::script::imp::Parser","regex_syntax::hir::{impl#24}::drop::isize","regex_syntax::debug::utf8_decode::ast::parse::ParserI","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::print::core::fmt::Arguments","regex_syntax::debug::P","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::parser::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_digit::imp::core::result::Result, ast::Error>","regex_syntax::hir::print::P","regex_syntax::hir::print::(&char, &char)","regex_syntax::unicode_tables::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::{impl#32}::drop::ast::Assertion","regex_syntax::unicode::property_values::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::script::imp::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::is_word_character::imp::core::option::Option","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::property_names::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::panicking::AssertKind","regex_syntax::ast::parse::{impl#4}::pop_group::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::literal::ast::SpecialLiteralKind","regex_syntax::ast::{impl#13}::fmt::ast::AssertionKind","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::Parser","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::tests::ast::ClassUnicode","regex_syntax::hir::translate::tests::hir_union::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::{impl#4}::pop_group::(ast::SpecialLiteralKind, char)","regex_syntax::ast::{impl#31}::drop::bool","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::ast::parse::Parser","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::ast::Span","regex_syntax::unicode::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::panicking::AssertKind","regex_syntax::error::tests::core::result::Result","regex_syntax::unicode::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::tests::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::perl_space::imp::ast::ErrorKind","regex_syntax::unicode::gcb::imp::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::parse::{impl#4}::pop_group::core::fmt::Arguments","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::ast::Span","regex_syntax::unicode_tables::perl_word::core::panicking::AssertKind","regex_syntax::ast::visitor::ast::SpecialLiteralKind","regex_syntax::unicode::perl_word::imp::core::result::Result, ast::Error>","regex_syntax::hir::interval::ast::ErrorKind","regex_syntax::unicode_tables::age::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::print::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::{impl#0}::auxiliary_span::(ast::SpecialLiteralKind, char)","regex_syntax::tests::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_bool::ast::Position","regex_syntax::ast::visitor::ast::LiteralKind","regex_syntax::unicode::bool_property::ast::Span","regex_syntax::error::tests::(&char, &char)","regex_syntax::unicode::{impl#4}::overlaps::ast::Span","regex_syntax::unicode::gencat::imp::Parser","regex_syntax::either::ast::Literal","regex_syntax::hir::{impl#6}::subs::ast::parse::ParserI","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::fmt::Arguments","regex_syntax::unicode::is_word_character::imp::bool","regex_syntax::ast::{impl#0}::auxiliary_span::Borrow","regex_syntax::unicode::wb::imp::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::script_extension::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode_tables::perl_space::bool","regex_syntax::unicode::property_values::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_space::imp::char","regex_syntax::unicode_tables::property_bool::ast::ClassPerl","regex_syntax::unicode_tables::script::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::literal::tests::core::fmt::Arguments","regex_syntax::ast::parse::{impl#4}::pop_group::ast::Assertion","regex_syntax::hir::{impl#24}::drop::(&char, &char)","regex_syntax::hir::literal::{impl#9}::from::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#24}::drop::ast::ClassPerl","regex_syntax::unicode::class::isize","regex_syntax::ast::visitor::ast::ErrorKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::bool","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::regex_syntax::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::ast::Span","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result","regex_syntax::hir::{impl#3}::fmt::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::core::result::Result","regex_syntax::debug::utf8_decode::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::script_extension::imp::ast::ClassPerl","regex_syntax::unicode_tables::grapheme_cluster_break::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::ages::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::parse::tests::P","regex_syntax::ast::{impl#13}::fmt::ast::parse::Primitive","regex_syntax::hir::translate::tests::hir_difference::ast::parse::ParserI","regex_syntax::utf8::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::ages::core::fmt::Arguments<'_>","regex_syntax::hir::ast::Position","regex_syntax::unicode_tables::property_values::ast::parse::Parser","regex_syntax::unicode::sb::ast::Position","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::SpecialLiteralKind","regex_syntax::ast::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::script_extension::ast::ClassPerl","regex_syntax::hir::interval::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::script_extension::!","regex_syntax::unicode::gcb::Parser","regex_syntax::ast::visitor::regex_syntax::ast::parse::ParserI","regex_syntax::hir::print::regex_syntax::ast::parse::ParserI","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result","regex_syntax::unicode::tests::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode_tables::case_folding_simple::ast::parse::ParserI","regex_syntax::unicode::script::imp::ast::LiteralKind","regex_syntax::unicode::canonical_prop::imp::ast::ClassPerl","regex_syntax::unicode::perl_word::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::canonical_prop::P","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::script_extension::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::ast::LiteralKind","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::either::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::canonical_prop::imp::core::result::Result, ast::Error>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::{impl#4}::pop_group::core::fmt::Arguments<'_>","regex_syntax::unicode::property_values::ast::ClassUnicode","regex_syntax::core::result::Result, ast::Error>","regex_syntax::utf8::core::fmt::Arguments","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::fmt::Arguments","regex_syntax::unicode::sb::ast::AssertionKind","regex_syntax::unicode_tables::case_folding_simple::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::error::ast::Assertion","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::fmt::Arguments","regex_syntax::unicode_tables::perl_space::core::option::Option","regex_syntax::rank::ast::AssertionKind","regex_syntax::ast::{impl#18}::from_name::core::fmt::Arguments<'_>","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::sb::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::word_break::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#24}::drop::core::convert::Infallible","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::wb::()","regex_syntax::unicode::sb::core::result::Result<ast::Literal, ast::Error>","regex_syntax::ast::{impl#13}::fmt::core::convert::Infallible","regex_syntax::hir::literal::{impl#0}::extract::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_digit::imp::core::convert::Infallible","regex_syntax::hir::print::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::{impl#0}::auxiliary_span::ast::parse::Primitive","regex_syntax::unicode_tables::age::ast::SpecialLiteralKind","regex_syntax::unicode::wb::imp::ast::ClassUnicode","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#3}::fmt::ast::ClassUnicode","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::LiteralKind","regex_syntax::unicode::ages::imp::ast::Position","regex_syntax::unicode::property_values::imp::char","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::char","regex_syntax::unicode_tables::P","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::ClassPerl","regex_syntax::utf8::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::property_values::imp::ast::ClassUnicode","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::ages::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::parser::ast::AssertionKind","regex_syntax::utf8::{impl#0}::as_slice::Parser","regex_syntax::unicode::wb::imp::(&char, &char)","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::ast::SpecialLiteralKind","regex_syntax::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::literal::tests::core::result::Result, ast::Error>","regex_syntax::hir::{impl#11}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::{impl#2}::fmt::ast::parse::ParserI<'_, P>","regex_syntax::debug::utf8_decode::core::result::Result, ast::Error>","regex_syntax::hir::core::option::Option","regex_syntax::unicode_tables::sentence_break::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::sentence_break::Borrow","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::()","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::ast::Literal","regex_syntax::parser::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode::gcb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::rank::ast::Error","regex_syntax::unicode_tables::grapheme_cluster_break::core::panicking::AssertKind","regex_syntax::utf8::tests::Parser","regex_syntax::ast::parse::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::property_names::(&char, &char)","regex_syntax::unicode::canonical_prop::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::perl_decimal::P","regex_syntax::unicode::perl_digit::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::property_values::()","regex_syntax::ast::parse::ast::ErrorKind","regex_syntax::unicode_tables::perl_word::char","regex_syntax::unicode_tables::age::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::fmt::Arguments","regex_syntax::ast::parse::core::option::Option","regex_syntax::unicode::script_extension::(&char, &char)","regex_syntax::hir::translate::tests::hir_union::char","regex_syntax::ast::print::{impl#4}::fmt_group_pre::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::perl_word::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::canonical_prop::ast::LiteralKind","regex_syntax::ast::parse::tests::ast::ErrorKind","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::print::core::fmt::Arguments<'_>","regex_syntax::debug::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::tests::ast::parse::ParserI","regex_syntax::unicode::script::imp::core::panicking::AssertKind","regex_syntax::unicode::script::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gencat::P","regex_syntax::hir::interval::core::option::Option<ast::AssertionKind>","regex_syntax::debug::utf8_decode::ast::parse::Parser","regex_syntax::unicode::ages::ast::parse::ParserI<'_, P>","regex_syntax::hir::visitor::isize","regex_syntax::unicode::tests::ast::AssertionKind","regex_syntax::utf8::{impl#2}::fmt::ast::AssertionKind","regex_syntax::hir::translate::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::{impl#0}::as_slice::isize","regex_syntax::unicode::gcb::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::hir::literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::tests::core::option::Option","regex_syntax::ast::parse::tests::char","regex_syntax::hir::translate::ascii_class::core::convert::Infallible","regex_syntax::utf8::core::option::Option>","regex_syntax::hir::literal::{impl#9}::from::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::class::core::result::Result, ast::Error>","regex_syntax::hir::translate::tests::hir_difference::str","regex_syntax::unicode::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::parse::ParserI<'_, P>","regex_syntax::unicode::{impl#4}::overlaps::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::{impl#18}::from_name::core::fmt::Arguments","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode_tables::perl_decimal::ast::Error","regex_syntax::unicode_tables::grapheme_cluster_break::ast::parse::ParserI","regex_syntax::unicode::core::convert::Infallible","regex_syntax::hir::tests::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::visitor::ast::parse::Parser","regex_syntax::unicode::is_word_character::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::parse::Parser","regex_syntax::unicode_tables::property_values::ast::Position","regex_syntax::ast::{impl#0}::auxiliary_span::!","regex_syntax::hir::{impl#24}::drop::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::bool_property::ast::AssertionKind","regex_syntax::utf8::{impl#0}::as_slice::ast::Position","regex_syntax::ast::print::tests::ast::Error","regex_syntax::unicode_tables::case_folding_simple::str","regex_syntax::hir::{impl#3}::fmt::P","regex_syntax::unicode_tables::perl_decimal::core::option::Option","regex_syntax::unicode::canonical_prop::Parser","regex_syntax::hir::{impl#3}::fmt::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::unicode_tables::Parser","regex_syntax::hir::print::tests::str","regex_syntax::unicode::sb::core::option::Option","regex_syntax::unicode::sb::imp::core::result::Result","regex_syntax::hir::print::ast::AssertionKind","regex_syntax::unicode::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::perl_decimal::!","regex_syntax::ast::parse::{impl#4}::pop_group::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::tests::core::option::Option","regex_syntax::unicode_tables::script_extension::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_literal::ast::LiteralKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::utf8::tests::encode_surrogate::core::panicking::AssertKind","regex_syntax::hir::literal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::bool_property::imp::isize","regex_syntax::unicode::canonical_prop::core::fmt::Arguments<'_>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::!","regex_syntax::ast::visitor::ast::Span","regex_syntax::hir::translate::tests::hir_difference::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::perl_word::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::imp::Borrow","regex_syntax::utf8::tests::encode_surrogate::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::ast::ClassUnicode","regex_syntax::hir::{impl#3}::fmt::core::fmt::Arguments","regex_syntax::ast::parse::(&char, &char)","regex_syntax::utf8::{impl#0}::as_slice::core::convert::Infallible","regex_syntax::unicode::gcb::imp::ast::parse::Primitive","regex_syntax::ast::{impl#0}::auxiliary_span::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::tests::hir_difference::core::result::Result, ast::Error>","regex_syntax::utf8::{impl#2}::fmt::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode_tables::perl_decimal::core::result::Result","regex_syntax::unicode::perl_space::isize","regex_syntax::unicode_tables::property_names::ast::ClassPerl","regex_syntax::ast::parse::{impl#4}::pop_group::Parser","regex_syntax::unicode::class::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::regex_syntax::ast::parse::ParserI","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::option::Option<ast::AssertionKind>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::parse::{impl#4}::pop_group::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::tests::hir_difference::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::general_category::core::fmt::Arguments<'_>","regex_syntax::hir::translate::tests::ast::Error","regex_syntax::hir::bool","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::ast::ClassPerl","regex_syntax::unicode_tables::perl_word::ast::parse::Parser","regex_syntax::unicode_tables::word_break::ast::Error","regex_syntax::unicode::gencat::()","regex_syntax::unicode_tables::ast::Error","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::literal::{impl#9}::from::ast::LiteralKind","regex_syntax::rank::ast::Span","regex_syntax::ast::{impl#0}::auxiliary_span::bool","regex_syntax::unicode::sb::ast::SpecialLiteralKind","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI","regex_syntax::unicode::perl_space::imp::ast::parse::Parser","regex_syntax::unicode::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::error::tests::core::option::Option<ast::AssertionKind>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::ClassPerl","regex_syntax::hir::{impl#3}::fmt::ast::Span","regex_syntax::unicode::gcb::imp::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::ClassUnicode","regex_syntax::unicode::script::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::wb::(&char, &char)","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::gencat::imp::core::result::Result, ast::Error>","regex_syntax::unicode::script::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::grapheme_cluster_break::char","regex_syntax::utf8::ast::parse::Primitive","regex_syntax::hir::{impl#6}::subs::(ast::SpecialLiteralKind, char)","regex_syntax::ast::tests::char","regex_syntax::ast::visitor::Parser","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::age::core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::core::result::Result","regex_syntax::unicode::perl_digit::imp::core::option::Option","regex_syntax::ast::print::{impl#4}::fmt_class_perl::char","regex_syntax::unicode::perl_digit::imp::ast::SpecialLiteralKind","regex_syntax::unicode::gcb::imp::core::option::Option<ast::AssertionKind>","regex_syntax::either::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::hir_union::ast::Error","regex_syntax::unicode::script_extension::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::script::core::result::Result","regex_syntax::unicode::wb::imp::ast::Span","regex_syntax::unicode_tables::perl_space::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::{impl#11}::fmt::core::fmt::Arguments<'_>","regex_syntax::unicode::ages::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::error::core::panicking::AssertKind","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode_tables::property_values::core::convert::Infallible","regex_syntax::ast::{impl#31}::drop::core::convert::Infallible","regex_syntax::unicode::{impl#4}::overlaps::core::fmt::Arguments","regex_syntax::debug::()","regex_syntax::tests::ast::parse::ParserI","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::is_word_character::imp::ast::Error","regex_syntax::ast::{impl#32}::drop::ast::parse::ParserI<'_, P>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::option::Option","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::bool","regex_syntax::unicode::is_word_character::ast::ClassUnicode","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::either::P","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::gcb::ast::Error","regex_syntax::unicode::perl_digit::str","regex_syntax::unicode::is_word_character::core::option::Option>","regex_syntax::utf8::tests::encode_surrogate::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::utf8::tests::ast::SpecialLiteralKind","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::print::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::utf8::tests::core::result::Result, ast::Error>","regex_syntax::unicode_tables::perl_space::ast::parse::ParserI","regex_syntax::unicode::sb::imp::ast::Literal","regex_syntax::unicode::wb::imp::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_flags::ast::ClassUnicode","regex_syntax::ast::{impl#32}::drop::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::tests::P","regex_syntax::unicode::script::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode_tables::perl_decimal::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::parser::ast::ClassUnicode","regex_syntax::utf8::{impl#0}::as_slice::ast::parse::Parser","regex_syntax::unicode_tables::script_extension::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::sb::imp::ast::ClassUnicode","regex_syntax::ast::visitor::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::gencat::!","regex_syntax::ast::parse::{impl#0}::into_class_set_item::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::hir::visitor::()","regex_syntax::unicode::perl_space::core::fmt::Arguments<'_>","regex_syntax::ast::print::Parser","regex_syntax::hir::{impl#6}::subs::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::{impl#4}::fmt_class_perl::P","regex_syntax::unicode_tables::property_names::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::word_break::Borrow","regex_syntax::hir::{impl#3}::fmt::char","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::ClassUnicode","regex_syntax::ast::()","regex_syntax::unicode::script_extension::imp::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::!","regex_syntax::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::{impl#24}::drop::Borrow","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::print::core::convert::Infallible","regex_syntax::hir::interval::ast::Span","regex_syntax::unicode::wb::core::option::Option","regex_syntax::unicode_tables::sentence_break::ast::Assertion","regex_syntax::ast::{impl#18}::from_name::ast::parse::Primitive","regex_syntax::unicode_tables::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::translate::tests::hir_union::ast::Literal","regex_syntax::hir::interval::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::is_word_character::ast::Span","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::fmt::Arguments","regex_syntax::hir::literal::tests::ast::parse::ParserI<'_, P>","regex_syntax::unicode_tables::age::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::ast::print::(ast::SpecialLiteralKind, char)","regex_syntax::hir::{impl#3}::fmt::core::option::Option<ast::AssertionKind>","regex_syntax::utf8::{impl#2}::fmt::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::sb::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::script::char","regex_syntax::hir::{impl#11}::fmt::ast::AssertionKind","regex_syntax::unicode_tables::grapheme_cluster_break::ast::ErrorKind","regex_syntax::hir::literal::ast::Assertion","regex_syntax::utf8::tests::encode_surrogate::core::option::Option>","regex_syntax::unicode::property_values::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::case_folding_simple::(&char, &char)","regex_syntax::ast::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::{impl#0}::into_class_literal::()","regex_syntax::unicode::script::ast::LiteralKind","regex_syntax::unicode::is_word_character::ast::Assertion","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode_tables::perl_space::str","regex_syntax::unicode::wb::imp::core::result::Result, ast::Error>","regex_syntax::unicode::canonical_prop::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::tests::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::hir::translate::tests::hir_union::core::option::Option<ast::AssertionKind>","regex_syntax::error::tests::()","regex_syntax::ast::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::unicode::wb::imp::str","regex_syntax::unicode::ages::str","regex_syntax::hir::ast::Error","regex_syntax::unicode::gencat::imp::ast::Assertion","regex_syntax::unicode::perl_word::core::convert::Infallible","regex_syntax::ast::parse::{impl#0}::into_class_literal::!","regex_syntax::unicode::perl_word::imp::ast::parse::Parser","regex_syntax::unicode_tables::property_bool::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::tests::core::fmt::Arguments<'_>","regex_syntax::unicode::perl_digit::imp::ast::LiteralKind","regex_syntax::hir::literal::{impl#0}::extract::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::wb::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::ast::parse::Primitive","regex_syntax::unicode::script_extension::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::tests::ast::ClassPerl","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::unicode::gcb::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::{impl#32}::drop::core::panicking::AssertKind","regex_syntax::unicode::wb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::script::Parser","regex_syntax::debug::utf8_decode::ast::Assertion","regex_syntax::either::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::visitor::core::panicking::AssertKind","regex_syntax::parser::bool","regex_syntax::ast::print::{impl#4}::fmt_repetition::ast::AssertionKind","regex_syntax::unicode_tables::case_folding_simple::P","regex_syntax::ast::print::{impl#4}::fmt_flags::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::hir::print::core::panicking::AssertKind","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::fmt::Arguments<'_>","regex_syntax::ast::print::{impl#4}::fmt_assertion::ast::ClassUnicode","regex_syntax::ast::{impl#13}::fmt::ast::Position","regex_syntax::unicode::property_values::ast::parse::Primitive","regex_syntax::unicode::perl_digit::imp::ast::AssertionKind","regex_syntax::hir::literal::tests::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::age::core::fmt::Arguments","regex_syntax::error::tests::ast::parse::ParserI","regex_syntax::hir::translate::tests::core::result::Result, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::script::imp::bool","regex_syntax::hir::literal::{impl#9}::from::!","regex_syntax::unicode::wb::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::ast::{impl#0}::auxiliary_span::Parser","regex_syntax::ast::print::{impl#4}::fmt_assertion::char","regex_syntax::unicode::perl_digit::imp::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::grapheme_cluster_break::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode_tables::case_folding_simple::Borrow","regex_syntax::hir::print::core::result::Result","regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind::P","regex_syntax::utf8::{impl#0}::as_slice::bool","regex_syntax::ast::print::{impl#4}::fmt_class_unicode::core::option::Option>","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::convert::Infallible","regex_syntax::unicode::script::ast::Error","regex_syntax::unicode_tables::general_category::core::result::Result, ast::Error>","regex_syntax::utf8::ast::AssertionKind","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::unicode::perl_space::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::utf8::tests::encode_surrogate::Borrow","regex_syntax::unicode_tables::property_values::bool","regex_syntax::unicode_tables::perl_word::bool","regex_syntax::hir::tests::ast::Literal","regex_syntax::hir::translate::ascii_class::core::option::Option>","regex_syntax::hir::translate::ascii_class::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::perl_space::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::utf8::{impl#0}::as_slice::core::fmt::Arguments<'_>","regex_syntax::unicode_tables::sentence_break::P","regex_syntax::hir::{impl#11}::fmt::ast::Literal","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::ast::Span","regex_syntax::utf8::tests::encode_surrogate::ast::Literal","regex_syntax::hir::translate::ascii_class::!","regex_syntax::tests::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::gencat::imp::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::property_bool::bool","regex_syntax::unicode_tables::case_folding_simple::ast::ClassPerl","regex_syntax::ast::parse::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_digit::!","regex_syntax::unicode::perl_word::ast::parse::ParserI","regex_syntax::unicode_tables::core::convert::Infallible","regex_syntax::unicode::perl_word::imp::ast::Span","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_group_pre::()","regex_syntax::ast::{impl#32}::drop::core::fmt::Arguments<'_>","regex_syntax::rank::char","regex_syntax::utf8::tests::encode_surrogate::bool","regex_syntax::ast::parse::tests::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::gencat::imp::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::wb::P","regex_syntax::hir::interval::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::rank::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::utf8::ast::LiteralKind","regex_syntax::hir::literal::tests::P","regex_syntax::ast::{impl#31}::drop::P","regex_syntax::unicode::script_extension::imp::ast::Assertion","regex_syntax::unicode::perl_word::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::is_word_character::core::option::Option","regex_syntax::hir::tests::core::fmt::Arguments<'_>","regex_syntax::hir::{impl#11}::fmt::core::option::Option<ast::AssertionKind>","regex_syntax::rank::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::error::tests::char","regex_syntax::ast::visitor::str","regex_syntax::unicode::perl_digit::imp::core::result::Result","regex_syntax::error::core::result::Result, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_literal::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::Position","regex_syntax::debug::ast::Position","regex_syntax::unicode::perl_space::ast::ClassUnicode","regex_syntax::ast::print::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_unicode_class::ast::AssertionKind","regex_syntax::unicode_tables::property_names::isize","regex_syntax::hir::translate::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::{impl#32}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::hir::literal::{impl#0}::extract::bool","regex_syntax::unicode::ages::regex_syntax::ast::parse::ParserI","regex_syntax::ast::{impl#31}::drop::ast::parse::ParserI<'_, P>","regex_syntax::utf8::ast::Literal","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result","regex_syntax::unicode::(ast::SpecialLiteralKind, char)","regex_syntax::unicode_tables::perl_word::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::{impl#4}::overlaps::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode::property_values::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::debug::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::property_values::ast::AssertionKind","regex_syntax::unicode::ages::imp::(&char, &char)","regex_syntax::ast::parse::tests::core::option::Option<ast::AssertionKind>","regex_syntax::hir::literal::tests::ast::ClassUnicode","regex_syntax::unicode::perl_space::Borrow","regex_syntax::unicode::tests::ast::Error","regex_syntax::unicode_tables::perl_word::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::hir::translate::core::result::Result","regex_syntax::utf8::tests::ast::parse::Primitive","regex_syntax::hir::print::tests::core::option::Option","regex_syntax::ast::{impl#13}::fmt::core::result::Result<ast::ClassUnicode, ast::Error>","regex_syntax::hir::tests::Borrow","regex_syntax::ast::print::{impl#4}::fmt_repetition::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::ages::core::panicking::AssertKind","regex_syntax::ast::visitor::P","regex_syntax::hir::literal::{impl#9}::from::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::visitor::ast::ErrorKind","regex_syntax::hir::{impl#3}::fmt::(ast::SpecialLiteralKind, char)","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::perl_space::ast::LiteralKind","regex_syntax::ast::tests::str","regex_syntax::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::either::str","regex_syntax::ast::(ast::SpecialLiteralKind, char)","regex_syntax::ast::tests::ast::Literal","regex_syntax::ast::print::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::utf8::tests::ast::ErrorKind","regex_syntax::unicode_tables::word_break::ast::parse::Primitive","regex_syntax::ast::parse::{impl#0}::into_class_set_item::ast::Position","regex_syntax::unicode::gcb::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gencat::imp::ast::ErrorKind","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Literal","regex_syntax::unicode::is_word_character::imp::ast::parse::ParserI<'_, P>","regex_syntax::unicode::script::regex_syntax::ast::parse::ParserI","regex_syntax::unicode::wb::imp::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::tests::core::result::Result, ast::Error>","regex_syntax::hir::{impl#24}::drop::ast::LiteralKind","regex_syntax::hir::interval::ast::ClassPerl","regex_syntax::ast::{impl#32}::drop::ast::Position","regex_syntax::utf8::{impl#2}::fmt::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::hir::translate::tests::hir_difference::bool","regex_syntax::hir::literal::(&char, &char)","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow, ast::Literal>","regex_syntax::ast::Borrow","regex_syntax::core::fmt::Arguments","regex_syntax::unicode_tables::sentence_break::!","regex_syntax::unicode::bool_property::ast::Position","regex_syntax::unicode::ages::imp::regex_syntax::ast::parse::ParserI","regex_syntax::unicode_tables::script_extension::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::unicode::perl_digit::ast::AssertionKind","regex_syntax::ast::print::bool","regex_syntax::ast::parse::tests::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::imp::core::convert::Infallible","regex_syntax::unicode::ages::ast::ClassPerl","regex_syntax::ast::print::{impl#4}::fmt_assertion::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::script_extension::imp::core::convert::Infallible","regex_syntax::ast::parse::tests::ast::parse::Parser","regex_syntax::unicode::{impl#4}::overlaps::core::option::Option<ast::AssertionKind>","regex_syntax::unicode::is_word_character::imp::core::option::Option<ast::AssertionKind>","regex_syntax::hir::{impl#6}::subs::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::fmt::Arguments","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::gcb::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::Literal>","regex_syntax::ast::print::{impl#4}::fmt_class_ascii::ast::AssertionKind","regex_syntax::hir::translate::tests::hir_union::core::result::Result<ast::Literal, ast::Error>","regex_syntax::unicode::perl_digit::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::print::{impl#4}::fmt_flags::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode_tables::grapheme_cluster_break::core::fmt::Arguments","regex_syntax::hir::translate::tests::hir_difference::ast::Literal","regex_syntax::unicode::bool_property::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::print::ast::Error","regex_syntax::hir::{impl#3}::fmt::regex_syntax::ast::parse::ParserI","regex_syntax::utf8::core::result::Result","regex_syntax::unicode::canonical_prop::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::perl_word::core::result::Result, ast::Error>","regex_syntax::debug::utf8_decode::ast::parse::ParserI<'_, P>","regex_syntax::hir::{impl#24}::drop::core::result::Result, ast::Error>","regex_syntax::ast::parse::{impl#0}::into_class_literal::ast::parse::ParserI<'_, P>","regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post::core::option::Option<ast::AssertionKind>","regex_syntax::rank::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::sb::imp::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::parser::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::print::ast::parse::Primitive","regex_syntax::unicode::bool_property::imp::()","regex_syntax::unicode::perl_digit::ast::ClassPerl","regex_syntax::unicode_tables::sentence_break::ast::parse::Parser","regex_syntax::ast::print::{impl#4}::fmt_repetition_range::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::ast::AssertionKind","regex_syntax::unicode_tables::word_break::core::result::Result<core::convert::Infallible, ast::Error>","regex_syntax::ast::Parser","regex_syntax::hir::translate::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::unicode::{impl#4}::overlaps::core::fmt::Arguments<'_>","regex_syntax::unicode::perl_digit::core::option::Option","regex_syntax::hir::print::tests::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode::gcb::ast::LiteralKind","regex_syntax::ast::print::{impl#3}::visit_class_set_item_post::str","regex_syntax::hir::print::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::hir::translate::ascii_class::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::tests::core::result::Result","regex_syntax::hir::{impl#24}::drop::ast::ClassUnicode","regex_syntax::ast::print::{impl#4}::fmt_repetition::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::hir::interval::!","regex_syntax::ast::{impl#18}::from_name::ast::LiteralKind","regex_syntax::unicode_tables::script_extension::isize","regex_syntax::unicode::perl_space::imp::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::unicode::perl_digit::imp::ast::Error","regex_syntax::unicode::ages::imp::core::ops::ControlFlow, core::option::Option<ast::AssertionKind>>","regex_syntax::unicode_tables::property_bool::core::fmt::Arguments<'_>","regex_syntax::ast::parse::{impl#4}::pop_group::ast::AssertionKind","regex_syntax::unicode_tables::perl_word::ast::Span","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::()","regex_syntax::unicode::property_values::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::utf8::tests::encode_surrogate::Parser","regex_syntax::unicode::wb::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::sb::imp::core::option::Option<ast::AssertionKind>","regex_syntax::ast::parse::{impl#4}::push_or_add_alternation::core::result::Result<ast::Literal, ast::Error>","regex_syntax::hir::{impl#24}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, ast::ClassUnicode>","regex_syntax::ast::parse::isize","regex_syntax::parser::ast::Position","regex_syntax::unicode_tables::grapheme_cluster_break::{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32}","regex_syntax::unicode_tables::perl_word::core::result::Result","regex_syntax::ast::parse::core::panicking::AssertKind","regex_syntax::parser::(&char, &char)","regex_syntax::tests::ast::SpecialLiteralKind","regex_syntax::unicode::property_values::isize","regex_syntax::ast::{impl#31}::drop::Parser","regex_syntax::unicode_tables::word_break::core::option::Option>","regex_syntax::hir::{impl#6}::subs::P","regex_syntax::ast::{impl#13}::fmt::bool","regex_syntax::unicode_tables::script::regex_syntax::ast::parse::ParserI","regex_syntax::parser::core::result::Result, ast::Error>","regex_syntax::utf8::tests::encode_surrogate::ast::LiteralKind","regex_syntax::ast::print::{impl#4}::fmt_class_perl::core::ops::ControlFlow, ast::ClassUnicode>","regex_syntax::ast::visitor::ast::ClassUnicode","regex_syntax::hir::literal::{impl#4}::optimize_by_preference::isize","regex_syntax::unicode_tables::perl_decimal::char","regex_syntax::ast::ast::AssertionKind","regex_syntax::hir::visitor::ast::Position","regex_syntax::hir::{impl#24}::drop::core::option::Option","regex_syntax::unicode::script::core::ops::ControlFlow, ast::Literal>","regex_syntax::unicode::canonical_prop::imp::core::option::Option<core::fmt::Arguments<'_>>","regex_syntax::ast::print::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, ast::Error>, core::option::Option>","regex_syntax::ast::parse::tests::ast::parse::ParserI","regex_syntax::hir::translate::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::unicode::gencat::(ast::SpecialLiteralKind, char)","regex_syntax::unicode::sb::imp::core::option::Option>","regex_syntax::unicode::perl_space::ast::Position","regex_syntax::utf8::{impl#0}::as_slice::ast::ErrorKind","regex_syntax::unicode::perl_word::imp::ast::parse::Primitive","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::option::Option>","regex_syntax::ast::{impl#0}::auxiliary_span::core::result::Result, ast::Error>","regex_syntax::hir::literal::core::option::Option<ast::AssertionKind>","regex_syntax::unicode_tables::grapheme_cluster_break::isize","regex_syntax::unicode::perl_word::core::option::Option>","regex_syntax::unicode::ast::SpecialLiteralKind","regex_syntax::ast::print::{impl#4}::fmt_group_pre::ast::ErrorKind","regex_syntax::either::ast::Error","regex_syntax::unicode::script::imp::ast::Literal","regex_syntax::ast::visitor::Borrow","regex_syntax::unicode_tables::perl_space::Borrow","regex_syntax::ast::print::{impl#4}::fmt_class_perl::ast::Position","regex_syntax::unicode_tables::age::P","regex_syntax::hir::literal::{impl#9}::from::ast::Position","regex_syntax::unicode::{impl#4}::overlaps::core::result::Result<ast::parse::Primitive, ast::Error>","regex_syntax::unicode::script::ast::Assertion","regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class::core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error>","regex_syntax::hir::literal::tests::ast::Span"]}