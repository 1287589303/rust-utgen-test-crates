[
    "regex_syntax::ast::parse::is_capture_char",
    "regex_syntax::ast::parse::is_hex",
    "regex_syntax::ast::parse::specialize_err",
    "regex_syntax::ast::parse::tests::alt",
    "regex_syntax::ast::parse::tests::concat",
    "regex_syntax::ast::parse::tests::concat_with",
    "regex_syntax::ast::parse::tests::flag_set",
    "regex_syntax::ast::parse::tests::group",
    "regex_syntax::ast::parse::tests::lit",
    "regex_syntax::ast::parse::tests::lit_with",
    "regex_syntax::ast::parse::tests::meta_lit",
    "regex_syntax::ast::parse::tests::npos",
    "regex_syntax::ast::parse::tests::nspan",
    "regex_syntax::ast::parse::tests::parser",
    "regex_syntax::ast::parse::tests::parser_empty_min_range",
    "regex_syntax::ast::parse::tests::parser_ignore_whitespace",
    "regex_syntax::ast::parse::tests::parser_nest_limit",
    "regex_syntax::ast::parse::tests::parser_octal",
    "regex_syntax::ast::parse::tests::s",
    "regex_syntax::ast::parse::tests::span",
    "regex_syntax::ast::parse::tests::span_range",
    "regex_syntax::ast::parse::tests::{impl#0}::eq",
    "regex_syntax::ast::parse::tests::{impl#1}::eq",
    "regex_syntax::ast::parse::{impl#0}::into_ast",
    "regex_syntax::ast::parse::{impl#0}::into_class_literal",
    "regex_syntax::ast::parse::{impl#0}::into_class_set_item",
    "regex_syntax::ast::parse::{impl#0}::span",
    "regex_syntax::ast::parse::{impl#1}::default",
    "regex_syntax::ast::parse::{impl#2}::build",
    "regex_syntax::ast::parse::{impl#2}::empty_min_range",
    "regex_syntax::ast::parse::{impl#2}::ignore_whitespace",
    "regex_syntax::ast::parse::{impl#2}::nest_limit",
    "regex_syntax::ast::parse::{impl#2}::new",
    "regex_syntax::ast::parse::{impl#2}::octal",
    "regex_syntax::ast::parse::{impl#3}::new",
    "regex_syntax::ast::parse::{impl#3}::parse",
    "regex_syntax::ast::parse::{impl#3}::parse_with_comments",
    "regex_syntax::ast::parse::{impl#3}::reset",
    "regex_syntax::ast::parse::{impl#4}::add_capture_name",
    "regex_syntax::ast::parse::{impl#4}::bump",
    "regex_syntax::ast::parse::{impl#4}::bump_and_bump_space",
    "regex_syntax::ast::parse::{impl#4}::bump_if",
    "regex_syntax::ast::parse::{impl#4}::bump_space",
    "regex_syntax::ast::parse::{impl#4}::char",
    "regex_syntax::ast::parse::{impl#4}::char_at",
    "regex_syntax::ast::parse::{impl#4}::column",
    "regex_syntax::ast::parse::{impl#4}::error",
    "regex_syntax::ast::parse::{impl#4}::ignore_whitespace",
    "regex_syntax::ast::parse::{impl#4}::is_eof",
    "regex_syntax::ast::parse::{impl#4}::is_lookaround_prefix",
    "regex_syntax::ast::parse::{impl#4}::line",
    "regex_syntax::ast::parse::{impl#4}::new",
    "regex_syntax::ast::parse::{impl#4}::next_capture_index",
    "regex_syntax::ast::parse::{impl#4}::offset",
    "regex_syntax::ast::parse::{impl#4}::parser",
    "regex_syntax::ast::parse::{impl#4}::pattern",
    "regex_syntax::ast::parse::{impl#4}::peek",
    "regex_syntax::ast::parse::{impl#4}::peek_space",
    "regex_syntax::ast::parse::{impl#4}::pop_class",
    "regex_syntax::ast::parse::{impl#4}::pop_class_op",
    "regex_syntax::ast::parse::{impl#4}::pop_group",
    "regex_syntax::ast::parse::{impl#4}::pop_group_end",
    "regex_syntax::ast::parse::{impl#4}::pos",
    "regex_syntax::ast::parse::{impl#4}::push_alternate",
    "regex_syntax::ast::parse::{impl#4}::push_class_op",
    "regex_syntax::ast::parse::{impl#4}::push_class_open",
    "regex_syntax::ast::parse::{impl#4}::push_group",
    "regex_syntax::ast::parse::{impl#4}::push_or_add_alternation",
    "regex_syntax::ast::parse::{impl#4}::span",
    "regex_syntax::ast::parse::{impl#4}::span_char",
    "regex_syntax::ast::parse::{impl#4}::unclosed_class_error",
    "regex_syntax::ast::parse::{impl#5}::maybe_parse_ascii_class",
    "regex_syntax::ast::parse::{impl#5}::maybe_parse_special_word_boundary",
    "regex_syntax::ast::parse::{impl#5}::parse",
    "regex_syntax::ast::parse::{impl#5}::parse_capture_name",
    "regex_syntax::ast::parse::{impl#5}::parse_counted_repetition",
    "regex_syntax::ast::parse::{impl#5}::parse_decimal",
    "regex_syntax::ast::parse::{impl#5}::parse_escape",
    "regex_syntax::ast::parse::{impl#5}::parse_flag",
    "regex_syntax::ast::parse::{impl#5}::parse_flags",
    "regex_syntax::ast::parse::{impl#5}::parse_group",
    "regex_syntax::ast::parse::{impl#5}::parse_hex",
    "regex_syntax::ast::parse::{impl#5}::parse_hex_brace",
    "regex_syntax::ast::parse::{impl#5}::parse_hex_digits",
    "regex_syntax::ast::parse::{impl#5}::parse_octal",
    "regex_syntax::ast::parse::{impl#5}::parse_perl_class",
    "regex_syntax::ast::parse::{impl#5}::parse_primitive",
    "regex_syntax::ast::parse::{impl#5}::parse_set_class",
    "regex_syntax::ast::parse::{impl#5}::parse_set_class_item",
    "regex_syntax::ast::parse::{impl#5}::parse_set_class_open",
    "regex_syntax::ast::parse::{impl#5}::parse_set_class_range",
    "regex_syntax::ast::parse::{impl#5}::parse_uncounted_repetition",
    "regex_syntax::ast::parse::{impl#5}::parse_unicode_class",
    "regex_syntax::ast::parse::{impl#5}::parse_with_comments",
    "regex_syntax::ast::parse::{impl#6}::check",
    "regex_syntax::ast::parse::{impl#6}::decrement_depth",
    "regex_syntax::ast::parse::{impl#6}::increment_depth",
    "regex_syntax::ast::parse::{impl#6}::new",
    "regex_syntax::ast::parse::{impl#7}::finish",
    "regex_syntax::ast::parse::{impl#7}::visit_class_set_binary_op_post",
    "regex_syntax::ast::parse::{impl#7}::visit_class_set_binary_op_pre",
    "regex_syntax::ast::parse::{impl#7}::visit_class_set_item_post",
    "regex_syntax::ast::parse::{impl#7}::visit_class_set_item_pre",
    "regex_syntax::ast::parse::{impl#7}::visit_post",
    "regex_syntax::ast::parse::{impl#7}::visit_pre",
    "regex_syntax::ast::print::tests::roundtrip",
    "regex_syntax::ast::print::tests::roundtrip_with",
    "regex_syntax::ast::print::{impl#0}::default",
    "regex_syntax::ast::print::{impl#1}::build",
    "regex_syntax::ast::print::{impl#1}::new",
    "regex_syntax::ast::print::{impl#2}::new",
    "regex_syntax::ast::print::{impl#2}::print",
    "regex_syntax::ast::print::{impl#3}::finish",
    "regex_syntax::ast::print::{impl#3}::visit_alternation_in",
    "regex_syntax::ast::print::{impl#3}::visit_class_set_binary_op_in",
    "regex_syntax::ast::print::{impl#3}::visit_class_set_item_post",
    "regex_syntax::ast::print::{impl#3}::visit_class_set_item_pre",
    "regex_syntax::ast::print::{impl#3}::visit_post",
    "regex_syntax::ast::print::{impl#3}::visit_pre",
    "regex_syntax::ast::print::{impl#4}::fmt_assertion",
    "regex_syntax::ast::print::{impl#4}::fmt_class_ascii",
    "regex_syntax::ast::print::{impl#4}::fmt_class_bracketed_post",
    "regex_syntax::ast::print::{impl#4}::fmt_class_bracketed_pre",
    "regex_syntax::ast::print::{impl#4}::fmt_class_perl",
    "regex_syntax::ast::print::{impl#4}::fmt_class_set_binary_op_kind",
    "regex_syntax::ast::print::{impl#4}::fmt_class_unicode",
    "regex_syntax::ast::print::{impl#4}::fmt_flags",
    "regex_syntax::ast::print::{impl#4}::fmt_group_post",
    "regex_syntax::ast::print::{impl#4}::fmt_group_pre",
    "regex_syntax::ast::print::{impl#4}::fmt_literal",
    "regex_syntax::ast::print::{impl#4}::fmt_repetition",
    "regex_syntax::ast::print::{impl#4}::fmt_repetition_range",
    "regex_syntax::ast::print::{impl#4}::fmt_set_flags",
    "regex_syntax::ast::visitor::Visitor::finish",
    "regex_syntax::ast::visitor::Visitor::start",
    "regex_syntax::ast::visitor::Visitor::visit_alternation_in",
    "regex_syntax::ast::visitor::Visitor::visit_class_set_binary_op_in",
    "regex_syntax::ast::visitor::Visitor::visit_class_set_binary_op_post",
    "regex_syntax::ast::visitor::Visitor::visit_class_set_binary_op_pre",
    "regex_syntax::ast::visitor::Visitor::visit_class_set_item_post",
    "regex_syntax::ast::visitor::Visitor::visit_class_set_item_pre",
    "regex_syntax::ast::visitor::Visitor::visit_concat_in",
    "regex_syntax::ast::visitor::Visitor::visit_post",
    "regex_syntax::ast::visitor::Visitor::visit_pre",
    "regex_syntax::ast::visitor::visit",
    "regex_syntax::ast::visitor::{impl#0}::induct",
    "regex_syntax::ast::visitor::{impl#0}::induct_class",
    "regex_syntax::ast::visitor::{impl#0}::new",
    "regex_syntax::ast::visitor::{impl#0}::pop",
    "regex_syntax::ast::visitor::{impl#0}::pop_class",
    "regex_syntax::ast::visitor::{impl#0}::visit",
    "regex_syntax::ast::visitor::{impl#0}::visit_class",
    "regex_syntax::ast::visitor::{impl#0}::visit_class_post",
    "regex_syntax::ast::visitor::{impl#0}::visit_class_pre",
    "regex_syntax::ast::visitor::{impl#1}::child",
    "regex_syntax::ast::visitor::{impl#2}::child",
    "regex_syntax::ast::visitor::{impl#3}::from_bracketed",
    "regex_syntax::ast::visitor::{impl#3}::from_set",
    "regex_syntax::ast::visitor::{impl#4}::fmt",
    "regex_syntax::ast::visitor::{impl#5}::fmt",
    "regex_syntax::ast::{impl#0}::auxiliary_span",
    "regex_syntax::ast::{impl#0}::kind",
    "regex_syntax::ast::{impl#0}::pattern",
    "regex_syntax::ast::{impl#0}::span",
    "regex_syntax::ast::{impl#10}::is_empty",
    "regex_syntax::ast::{impl#10}::is_one_line",
    "regex_syntax::ast::{impl#10}::new",
    "regex_syntax::ast::{impl#10}::splat",
    "regex_syntax::ast::{impl#10}::with_end",
    "regex_syntax::ast::{impl#10}::with_start",
    "regex_syntax::ast::{impl#11}::new",
    "regex_syntax::ast::{impl#12}::alternation",
    "regex_syntax::ast::{impl#12}::assertion",
    "regex_syntax::ast::{impl#12}::class_bracketed",
    "regex_syntax::ast::{impl#12}::class_perl",
    "regex_syntax::ast::{impl#12}::class_unicode",
    "regex_syntax::ast::{impl#12}::concat",
    "regex_syntax::ast::{impl#12}::dot",
    "regex_syntax::ast::{impl#12}::empty",
    "regex_syntax::ast::{impl#12}::flags",
    "regex_syntax::ast::{impl#12}::group",
    "regex_syntax::ast::{impl#12}::has_subexprs",
    "regex_syntax::ast::{impl#12}::is_empty",
    "regex_syntax::ast::{impl#12}::literal",
    "regex_syntax::ast::{impl#12}::repetition",
    "regex_syntax::ast::{impl#12}::span",
    "regex_syntax::ast::{impl#13}::fmt",
    "regex_syntax::ast::{impl#14}::into_ast",
    "regex_syntax::ast::{impl#15}::into_ast",
    "regex_syntax::ast::{impl#16}::byte",
    "regex_syntax::ast::{impl#17}::digits",
    "regex_syntax::ast::{impl#18}::from_name",
    "regex_syntax::ast::{impl#19}::is_negated",
    "regex_syntax::ast::{impl#20}::arbitrary",
    "regex_syntax::ast::{impl#20}::size_hint",
    "regex_syntax::ast::{impl#21}::is_equal",
    "regex_syntax::ast::{impl#22}::is_empty",
    "regex_syntax::ast::{impl#22}::span",
    "regex_syntax::ast::{impl#22}::union",
    "regex_syntax::ast::{impl#23}::span",
    "regex_syntax::ast::{impl#24}::is_valid",
    "regex_syntax::ast::{impl#25}::into_item",
    "regex_syntax::ast::{impl#25}::push",
    "regex_syntax::ast::{impl#26}::is_valid",
    "regex_syntax::ast::{impl#27}::capture_index",
    "regex_syntax::ast::{impl#27}::flags",
    "regex_syntax::ast::{impl#27}::is_capturing",
    "regex_syntax::ast::{impl#28}::arbitrary",
    "regex_syntax::ast::{impl#28}::size_hint",
    "regex_syntax::ast::{impl#29}::add_item",
    "regex_syntax::ast::{impl#29}::flag_state",
    "regex_syntax::ast::{impl#2}::fmt",
    "regex_syntax::ast::{impl#30}::is_negation",
    "regex_syntax::ast::{impl#31}::drop",
    "regex_syntax::ast::{impl#32}::drop",
    "regex_syntax::ast::{impl#3}::fmt",
    "regex_syntax::ast::{impl#4}::fmt",
    "regex_syntax::ast::{impl#5}::cmp",
    "regex_syntax::ast::{impl#6}::partial_cmp",
    "regex_syntax::ast::{impl#7}::fmt",
    "regex_syntax::ast::{impl#8}::cmp",
    "regex_syntax::ast::{impl#9}::partial_cmp",
    "regex_syntax::debug::utf8_decode",
    "regex_syntax::debug::utf8_decode::len",
    "regex_syntax::debug::{impl#0}::fmt",
    "regex_syntax::debug::{impl#1}::fmt",
    "regex_syntax::error::repeat_char",
    "regex_syntax::error::tests::assert_panic_message",
    "regex_syntax::error::{impl#0}::from",
    "regex_syntax::error::{impl#1}::from",
    "regex_syntax::error::{impl#3}::fmt",
    "regex_syntax::error::{impl#4}::from",
    "regex_syntax::error::{impl#5}::from",
    "regex_syntax::error::{impl#6}::fmt",
    "regex_syntax::error::{impl#7}::add",
    "regex_syntax::error::{impl#7}::from_formatter",
    "regex_syntax::error::{impl#7}::left_pad_line_number",
    "regex_syntax::error::{impl#7}::line_number_padding",
    "regex_syntax::error::{impl#7}::notate",
    "regex_syntax::error::{impl#7}::notate_line",
    "regex_syntax::escape",
    "regex_syntax::escape_into",
    "regex_syntax::hir::class_bytes",
    "regex_syntax::hir::class_chars",
    "regex_syntax::hir::interval::Bound::as_u32",
    "regex_syntax::hir::interval::Bound::decrement",
    "regex_syntax::hir::interval::Bound::increment",
    "regex_syntax::hir::interval::Bound::max_value",
    "regex_syntax::hir::interval::Bound::min_value",
    "regex_syntax::hir::interval::Interval::case_fold_simple",
    "regex_syntax::hir::interval::Interval::create",
    "regex_syntax::hir::interval::Interval::difference",
    "regex_syntax::hir::interval::Interval::intersect",
    "regex_syntax::hir::interval::Interval::is_contiguous",
    "regex_syntax::hir::interval::Interval::is_intersection_empty",
    "regex_syntax::hir::interval::Interval::is_subset",
    "regex_syntax::hir::interval::Interval::lower",
    "regex_syntax::hir::interval::Interval::set_lower",
    "regex_syntax::hir::interval::Interval::set_upper",
    "regex_syntax::hir::interval::Interval::union",
    "regex_syntax::hir::interval::Interval::upper",
    "regex_syntax::hir::interval::{impl#1}::eq",
    "regex_syntax::hir::interval::{impl#2}::canonicalize",
    "regex_syntax::hir::interval::{impl#2}::case_fold_simple",
    "regex_syntax::hir::interval::{impl#2}::difference",
    "regex_syntax::hir::interval::{impl#2}::intersect",
    "regex_syntax::hir::interval::{impl#2}::intervals",
    "regex_syntax::hir::interval::{impl#2}::is_canonical",
    "regex_syntax::hir::interval::{impl#2}::iter",
    "regex_syntax::hir::interval::{impl#2}::negate",
    "regex_syntax::hir::interval::{impl#2}::new",
    "regex_syntax::hir::interval::{impl#2}::push",
    "regex_syntax::hir::interval::{impl#2}::symmetric_difference",
    "regex_syntax::hir::interval::{impl#2}::union",
    "regex_syntax::hir::interval::{impl#3}::next",
    "regex_syntax::hir::interval::{impl#4}::as_u32",
    "regex_syntax::hir::interval::{impl#4}::decrement",
    "regex_syntax::hir::interval::{impl#4}::increment",
    "regex_syntax::hir::interval::{impl#4}::max_value",
    "regex_syntax::hir::interval::{impl#4}::min_value",
    "regex_syntax::hir::interval::{impl#5}::as_u32",
    "regex_syntax::hir::interval::{impl#5}::decrement",
    "regex_syntax::hir::interval::{impl#5}::increment",
    "regex_syntax::hir::interval::{impl#5}::max_value",
    "regex_syntax::hir::interval::{impl#5}::min_value",
    "regex_syntax::hir::lift_common_prefix",
    "regex_syntax::hir::literal::rank",
    "regex_syntax::hir::literal::tests::E",
    "regex_syntax::hir::literal::tests::I",
    "regex_syntax::hir::literal::tests::e",
    "regex_syntax::hir::literal::tests::exact",
    "regex_syntax::hir::literal::tests::inexact",
    "regex_syntax::hir::literal::tests::infinite",
    "regex_syntax::hir::literal::tests::opt",
    "regex_syntax::hir::literal::tests::parse",
    "regex_syntax::hir::literal::tests::prefixes",
    "regex_syntax::hir::literal::tests::seq",
    "regex_syntax::hir::literal::tests::suffixes",
    "regex_syntax::hir::literal::{impl#0}::class_over_limit_bytes",
    "regex_syntax::hir::literal::{impl#0}::class_over_limit_unicode",
    "regex_syntax::hir::literal::{impl#0}::cross",
    "regex_syntax::hir::literal::{impl#0}::enforce_literal_len",
    "regex_syntax::hir::literal::{impl#0}::extract",
    "regex_syntax::hir::literal::{impl#0}::extract_alternation",
    "regex_syntax::hir::literal::{impl#0}::extract_class_bytes",
    "regex_syntax::hir::literal::{impl#0}::extract_class_unicode",
    "regex_syntax::hir::literal::{impl#0}::extract_concat",
    "regex_syntax::hir::literal::{impl#0}::extract_repetition",
    "regex_syntax::hir::literal::{impl#0}::kind",
    "regex_syntax::hir::literal::{impl#0}::limit_class",
    "regex_syntax::hir::literal::{impl#0}::limit_literal_len",
    "regex_syntax::hir::literal::{impl#0}::limit_repeat",
    "regex_syntax::hir::literal::{impl#0}::limit_total",
    "regex_syntax::hir::literal::{impl#0}::new",
    "regex_syntax::hir::literal::{impl#0}::union",
    "regex_syntax::hir::literal::{impl#10}::as_ref",
    "regex_syntax::hir::literal::{impl#11}::fmt",
    "regex_syntax::hir::literal::{impl#12}::create_state",
    "regex_syntax::hir::literal::{impl#12}::insert",
    "regex_syntax::hir::literal::{impl#12}::minimize",
    "regex_syntax::hir::literal::{impl#12}::root",
    "regex_syntax::hir::literal::{impl#1}::default",
    "regex_syntax::hir::literal::{impl#2}::is_prefix",
    "regex_syntax::hir::literal::{impl#2}::is_suffix",
    "regex_syntax::hir::literal::{impl#3}::default",
    "regex_syntax::hir::literal::{impl#4}::cross_forward",
    "regex_syntax::hir::literal::{impl#4}::cross_preamble",
    "regex_syntax::hir::literal::{impl#4}::cross_reverse",
    "regex_syntax::hir::literal::{impl#4}::dedup",
    "regex_syntax::hir::literal::{impl#4}::empty",
    "regex_syntax::hir::literal::{impl#4}::infinite",
    "regex_syntax::hir::literal::{impl#4}::is_empty",
    "regex_syntax::hir::literal::{impl#4}::is_exact",
    "regex_syntax::hir::literal::{impl#4}::is_finite",
    "regex_syntax::hir::literal::{impl#4}::is_inexact",
    "regex_syntax::hir::literal::{impl#4}::keep_first_bytes",
    "regex_syntax::hir::literal::{impl#4}::keep_last_bytes",
    "regex_syntax::hir::literal::{impl#4}::len",
    "regex_syntax::hir::literal::{impl#4}::literals",
    "regex_syntax::hir::literal::{impl#4}::longest_common_prefix",
    "regex_syntax::hir::literal::{impl#4}::longest_common_suffix",
    "regex_syntax::hir::literal::{impl#4}::make_inexact",
    "regex_syntax::hir::literal::{impl#4}::make_infinite",
    "regex_syntax::hir::literal::{impl#4}::max_cross_len",
    "regex_syntax::hir::literal::{impl#4}::max_literal_len",
    "regex_syntax::hir::literal::{impl#4}::max_union_len",
    "regex_syntax::hir::literal::{impl#4}::min_literal_len",
    "regex_syntax::hir::literal::{impl#4}::minimize_by_preference",
    "regex_syntax::hir::literal::{impl#4}::new",
    "regex_syntax::hir::literal::{impl#4}::optimize_by_preference",
    "regex_syntax::hir::literal::{impl#4}::optimize_for_prefix_by_preference",
    "regex_syntax::hir::literal::{impl#4}::optimize_for_suffix_by_preference",
    "regex_syntax::hir::literal::{impl#4}::push",
    "regex_syntax::hir::literal::{impl#4}::reverse_literals",
    "regex_syntax::hir::literal::{impl#4}::singleton",
    "regex_syntax::hir::literal::{impl#4}::sort",
    "regex_syntax::hir::literal::{impl#4}::union",
    "regex_syntax::hir::literal::{impl#4}::union_into_empty",
    "regex_syntax::hir::literal::{impl#5}::fmt",
    "regex_syntax::hir::literal::{impl#6}::from_iter",
    "regex_syntax::hir::literal::{impl#7}::as_bytes",
    "regex_syntax::hir::literal::{impl#7}::exact",
    "regex_syntax::hir::literal::{impl#7}::extend",
    "regex_syntax::hir::literal::{impl#7}::inexact",
    "regex_syntax::hir::literal::{impl#7}::into_bytes",
    "regex_syntax::hir::literal::{impl#7}::is_empty",
    "regex_syntax::hir::literal::{impl#7}::is_exact",
    "regex_syntax::hir::literal::{impl#7}::is_poisonous",
    "regex_syntax::hir::literal::{impl#7}::keep_first_bytes",
    "regex_syntax::hir::literal::{impl#7}::keep_last_bytes",
    "regex_syntax::hir::literal::{impl#7}::len",
    "regex_syntax::hir::literal::{impl#7}::make_inexact",
    "regex_syntax::hir::literal::{impl#7}::reverse",
    "regex_syntax::hir::literal::{impl#8}::from",
    "regex_syntax::hir::literal::{impl#9}::from",
    "regex_syntax::hir::print::tests::roundtrip",
    "regex_syntax::hir::print::tests::roundtrip_bytes",
    "regex_syntax::hir::print::tests::roundtrip_with",
    "regex_syntax::hir::print::{impl#0}::default",
    "regex_syntax::hir::print::{impl#1}::build",
    "regex_syntax::hir::print::{impl#1}::new",
    "regex_syntax::hir::print::{impl#2}::new",
    "regex_syntax::hir::print::{impl#2}::print",
    "regex_syntax::hir::print::{impl#3}::finish",
    "regex_syntax::hir::print::{impl#3}::visit_alternation_in",
    "regex_syntax::hir::print::{impl#3}::visit_post",
    "regex_syntax::hir::print::{impl#3}::visit_pre",
    "regex_syntax::hir::print::{impl#4}::write_literal_byte",
    "regex_syntax::hir::print::{impl#4}::write_literal_char",
    "regex_syntax::hir::print::{impl#4}::write_literal_class_byte",
    "regex_syntax::hir::singleton_bytes",
    "regex_syntax::hir::singleton_chars",
    "regex_syntax::hir::tests::bcasefold",
    "regex_syntax::hir::tests::bclass",
    "regex_syntax::hir::tests::bdifference",
    "regex_syntax::hir::tests::bintersect",
    "regex_syntax::hir::tests::bnegate",
    "regex_syntax::hir::tests::branges",
    "regex_syntax::hir::tests::bsymdifference",
    "regex_syntax::hir::tests::bunion",
    "regex_syntax::hir::tests::ucasefold",
    "regex_syntax::hir::tests::uclass",
    "regex_syntax::hir::tests::udifference",
    "regex_syntax::hir::tests::uintersect",
    "regex_syntax::hir::tests::unegate",
    "regex_syntax::hir::tests::uranges",
    "regex_syntax::hir::tests::usymdifference",
    "regex_syntax::hir::tests::uunion",
    "regex_syntax::hir::translate::ascii_class",
    "regex_syntax::hir::translate::ascii_class_as_chars",
    "regex_syntax::hir::translate::hir_ascii_class_bytes",
    "regex_syntax::hir::translate::tests::bclass",
    "regex_syntax::hir::translate::tests::class_case_fold",
    "regex_syntax::hir::translate::tests::class_negate",
    "regex_syntax::hir::translate::tests::hir_alt",
    "regex_syntax::hir::translate::tests::hir_ascii_bclass",
    "regex_syntax::hir::translate::tests::hir_ascii_uclass",
    "regex_syntax::hir::translate::tests::hir_bclass",
    "regex_syntax::hir::translate::tests::hir_blit",
    "regex_syntax::hir::translate::tests::hir_capture",
    "regex_syntax::hir::translate::tests::hir_capture_name",
    "regex_syntax::hir::translate::tests::hir_case_fold",
    "regex_syntax::hir::translate::tests::hir_cat",
    "regex_syntax::hir::translate::tests::hir_difference",
    "regex_syntax::hir::translate::tests::hir_lit",
    "regex_syntax::hir::translate::tests::hir_look",
    "regex_syntax::hir::translate::tests::hir_negate",
    "regex_syntax::hir::translate::tests::hir_plus",
    "regex_syntax::hir::translate::tests::hir_quest",
    "regex_syntax::hir::translate::tests::hir_range",
    "regex_syntax::hir::translate::tests::hir_star",
    "regex_syntax::hir::translate::tests::hir_uclass",
    "regex_syntax::hir::translate::tests::hir_uclass_perl_word",
    "regex_syntax::hir::translate::tests::hir_uclass_query",
    "regex_syntax::hir::translate::tests::hir_union",
    "regex_syntax::hir::translate::tests::parse",
    "regex_syntax::hir::translate::tests::props",
    "regex_syntax::hir::translate::tests::props_bytes",
    "regex_syntax::hir::translate::tests::t",
    "regex_syntax::hir::translate::tests::t_bytes",
    "regex_syntax::hir::translate::tests::t_err",
    "regex_syntax::hir::translate::tests::uclass",
    "regex_syntax::hir::translate::tests::{impl#0}::eq",
    "regex_syntax::hir::translate::tests::{impl#1}::eq",
    "regex_syntax::hir::translate::{impl#0}::default",
    "regex_syntax::hir::translate::{impl#1}::build",
    "regex_syntax::hir::translate::{impl#1}::case_insensitive",
    "regex_syntax::hir::translate::{impl#1}::crlf",
    "regex_syntax::hir::translate::{impl#1}::dot_matches_new_line",
    "regex_syntax::hir::translate::{impl#1}::line_terminator",
    "regex_syntax::hir::translate::{impl#1}::multi_line",
    "regex_syntax::hir::translate::{impl#1}::new",
    "regex_syntax::hir::translate::{impl#1}::swap_greed",
    "regex_syntax::hir::translate::{impl#1}::unicode",
    "regex_syntax::hir::translate::{impl#1}::utf8",
    "regex_syntax::hir::translate::{impl#2}::new",
    "regex_syntax::hir::translate::{impl#2}::translate",
    "regex_syntax::hir::translate::{impl#3}::unwrap_alternation_pipe",
    "regex_syntax::hir::translate::{impl#3}::unwrap_class_bytes",
    "regex_syntax::hir::translate::{impl#3}::unwrap_class_unicode",
    "regex_syntax::hir::translate::{impl#3}::unwrap_expr",
    "regex_syntax::hir::translate::{impl#3}::unwrap_group",
    "regex_syntax::hir::translate::{impl#3}::unwrap_repetition",
    "regex_syntax::hir::translate::{impl#4}::finish",
    "regex_syntax::hir::translate::{impl#4}::visit_alternation_in",
    "regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_in",
    "regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_post",
    "regex_syntax::hir::translate::{impl#4}::visit_class_set_binary_op_pre",
    "regex_syntax::hir::translate::{impl#4}::visit_class_set_item_post",
    "regex_syntax::hir::translate::{impl#4}::visit_class_set_item_pre",
    "regex_syntax::hir::translate::{impl#4}::visit_post",
    "regex_syntax::hir::translate::{impl#4}::visit_pre",
    "regex_syntax::hir::translate::{impl#5}::ast_literal_to_scalar",
    "regex_syntax::hir::translate::{impl#5}::bytes_fold_and_negate",
    "regex_syntax::hir::translate::{impl#5}::case_fold_char",
    "regex_syntax::hir::translate::{impl#5}::class_literal_byte",
    "regex_syntax::hir::translate::{impl#5}::convert_unicode_class_error",
    "regex_syntax::hir::translate::{impl#5}::error",
    "regex_syntax::hir::translate::{impl#5}::flags",
    "regex_syntax::hir::translate::{impl#5}::hir_ascii_byte_class",
    "regex_syntax::hir::translate::{impl#5}::hir_ascii_unicode_class",
    "regex_syntax::hir::translate::{impl#5}::hir_assertion",
    "regex_syntax::hir::translate::{impl#5}::hir_capture",
    "regex_syntax::hir::translate::{impl#5}::hir_dot",
    "regex_syntax::hir::translate::{impl#5}::hir_perl_byte_class",
    "regex_syntax::hir::translate::{impl#5}::hir_perl_unicode_class",
    "regex_syntax::hir::translate::{impl#5}::hir_repetition",
    "regex_syntax::hir::translate::{impl#5}::hir_unicode_class",
    "regex_syntax::hir::translate::{impl#5}::new",
    "regex_syntax::hir::translate::{impl#5}::pop",
    "regex_syntax::hir::translate::{impl#5}::pop_alt_expr",
    "regex_syntax::hir::translate::{impl#5}::pop_concat_expr",
    "regex_syntax::hir::translate::{impl#5}::push",
    "regex_syntax::hir::translate::{impl#5}::push_byte",
    "regex_syntax::hir::translate::{impl#5}::push_char",
    "regex_syntax::hir::translate::{impl#5}::set_flags",
    "regex_syntax::hir::translate::{impl#5}::trans",
    "regex_syntax::hir::translate::{impl#5}::unicode_fold_and_negate",
    "regex_syntax::hir::translate::{impl#6}::case_insensitive",
    "regex_syntax::hir::translate::{impl#6}::crlf",
    "regex_syntax::hir::translate::{impl#6}::dot_matches_new_line",
    "regex_syntax::hir::translate::{impl#6}::from_ast",
    "regex_syntax::hir::translate::{impl#6}::merge",
    "regex_syntax::hir::translate::{impl#6}::multi_line",
    "regex_syntax::hir::translate::{impl#6}::swap_greed",
    "regex_syntax::hir::translate::{impl#6}::unicode",
    "regex_syntax::hir::visitor::Visitor::finish",
    "regex_syntax::hir::visitor::Visitor::start",
    "regex_syntax::hir::visitor::Visitor::visit_alternation_in",
    "regex_syntax::hir::visitor::Visitor::visit_concat_in",
    "regex_syntax::hir::visitor::Visitor::visit_post",
    "regex_syntax::hir::visitor::Visitor::visit_pre",
    "regex_syntax::hir::visitor::visit",
    "regex_syntax::hir::visitor::{impl#0}::induct",
    "regex_syntax::hir::visitor::{impl#0}::new",
    "regex_syntax::hir::visitor::{impl#0}::pop",
    "regex_syntax::hir::visitor::{impl#0}::visit",
    "regex_syntax::hir::visitor::{impl#1}::child",
    "regex_syntax::hir::{impl#0}::kind",
    "regex_syntax::hir::{impl#0}::pattern",
    "regex_syntax::hir::{impl#0}::span",
    "regex_syntax::hir::{impl#10}::case_fold_simple",
    "regex_syntax::hir::{impl#10}::is_empty",
    "regex_syntax::hir::{impl#10}::is_utf8",
    "regex_syntax::hir::{impl#10}::literal",
    "regex_syntax::hir::{impl#10}::maximum_len",
    "regex_syntax::hir::{impl#10}::minimum_len",
    "regex_syntax::hir::{impl#10}::negate",
    "regex_syntax::hir::{impl#10}::try_case_fold_simple",
    "regex_syntax::hir::{impl#11}::fmt",
    "regex_syntax::hir::{impl#12}::case_fold_simple",
    "regex_syntax::hir::{impl#12}::difference",
    "regex_syntax::hir::{impl#12}::empty",
    "regex_syntax::hir::{impl#12}::intersect",
    "regex_syntax::hir::{impl#12}::is_ascii",
    "regex_syntax::hir::{impl#12}::iter",
    "regex_syntax::hir::{impl#12}::literal",
    "regex_syntax::hir::{impl#12}::maximum_len",
    "regex_syntax::hir::{impl#12}::minimum_len",
    "regex_syntax::hir::{impl#12}::negate",
    "regex_syntax::hir::{impl#12}::new",
    "regex_syntax::hir::{impl#12}::push",
    "regex_syntax::hir::{impl#12}::ranges",
    "regex_syntax::hir::{impl#12}::symmetric_difference",
    "regex_syntax::hir::{impl#12}::to_byte_class",
    "regex_syntax::hir::{impl#12}::try_case_fold_simple",
    "regex_syntax::hir::{impl#12}::union",
    "regex_syntax::hir::{impl#13}::next",
    "regex_syntax::hir::{impl#14}::fmt",
    "regex_syntax::hir::{impl#15}::case_fold_simple",
    "regex_syntax::hir::{impl#15}::lower",
    "regex_syntax::hir::{impl#15}::set_lower",
    "regex_syntax::hir::{impl#15}::set_upper",
    "regex_syntax::hir::{impl#15}::upper",
    "regex_syntax::hir::{impl#16}::end",
    "regex_syntax::hir::{impl#16}::len",
    "regex_syntax::hir::{impl#16}::new",
    "regex_syntax::hir::{impl#16}::start",
    "regex_syntax::hir::{impl#17}::case_fold_simple",
    "regex_syntax::hir::{impl#17}::difference",
    "regex_syntax::hir::{impl#17}::empty",
    "regex_syntax::hir::{impl#17}::intersect",
    "regex_syntax::hir::{impl#17}::is_ascii",
    "regex_syntax::hir::{impl#17}::iter",
    "regex_syntax::hir::{impl#17}::literal",
    "regex_syntax::hir::{impl#17}::maximum_len",
    "regex_syntax::hir::{impl#17}::minimum_len",
    "regex_syntax::hir::{impl#17}::negate",
    "regex_syntax::hir::{impl#17}::new",
    "regex_syntax::hir::{impl#17}::push",
    "regex_syntax::hir::{impl#17}::ranges",
    "regex_syntax::hir::{impl#17}::symmetric_difference",
    "regex_syntax::hir::{impl#17}::to_unicode_class",
    "regex_syntax::hir::{impl#17}::union",
    "regex_syntax::hir::{impl#18}::next",
    "regex_syntax::hir::{impl#19}::case_fold_simple",
    "regex_syntax::hir::{impl#19}::lower",
    "regex_syntax::hir::{impl#19}::set_lower",
    "regex_syntax::hir::{impl#19}::set_upper",
    "regex_syntax::hir::{impl#19}::upper",
    "regex_syntax::hir::{impl#20}::end",
    "regex_syntax::hir::{impl#20}::len",
    "regex_syntax::hir::{impl#20}::new",
    "regex_syntax::hir::{impl#20}::start",
    "regex_syntax::hir::{impl#21}::fmt",
    "regex_syntax::hir::{impl#22}::as_char",
    "regex_syntax::hir::{impl#22}::as_repr",
    "regex_syntax::hir::{impl#22}::from_repr",
    "regex_syntax::hir::{impl#22}::reversed",
    "regex_syntax::hir::{impl#23}::with",
    "regex_syntax::hir::{impl#24}::drop",
    "regex_syntax::hir::{impl#25}::explicit_captures_len",
    "regex_syntax::hir::{impl#25}::is_alternation_literal",
    "regex_syntax::hir::{impl#25}::is_literal",
    "regex_syntax::hir::{impl#25}::is_utf8",
    "regex_syntax::hir::{impl#25}::look_set",
    "regex_syntax::hir::{impl#25}::look_set_prefix",
    "regex_syntax::hir::{impl#25}::look_set_prefix_any",
    "regex_syntax::hir::{impl#25}::look_set_suffix",
    "regex_syntax::hir::{impl#25}::look_set_suffix_any",
    "regex_syntax::hir::{impl#25}::maximum_len",
    "regex_syntax::hir::{impl#25}::memory_usage",
    "regex_syntax::hir::{impl#25}::minimum_len",
    "regex_syntax::hir::{impl#25}::static_explicit_captures_len",
    "regex_syntax::hir::{impl#25}::union",
    "regex_syntax::hir::{impl#26}::alternation",
    "regex_syntax::hir::{impl#26}::capture",
    "regex_syntax::hir::{impl#26}::class",
    "regex_syntax::hir::{impl#26}::concat",
    "regex_syntax::hir::{impl#26}::empty",
    "regex_syntax::hir::{impl#26}::literal",
    "regex_syntax::hir::{impl#26}::look",
    "regex_syntax::hir::{impl#26}::repetition",
    "regex_syntax::hir::{impl#27}::contains",
    "regex_syntax::hir::{impl#27}::contains_anchor",
    "regex_syntax::hir::{impl#27}::contains_anchor_crlf",
    "regex_syntax::hir::{impl#27}::contains_anchor_haystack",
    "regex_syntax::hir::{impl#27}::contains_anchor_lf",
    "regex_syntax::hir::{impl#27}::contains_anchor_line",
    "regex_syntax::hir::{impl#27}::contains_word",
    "regex_syntax::hir::{impl#27}::contains_word_ascii",
    "regex_syntax::hir::{impl#27}::contains_word_unicode",
    "regex_syntax::hir::{impl#27}::empty",
    "regex_syntax::hir::{impl#27}::full",
    "regex_syntax::hir::{impl#27}::insert",
    "regex_syntax::hir::{impl#27}::intersect",
    "regex_syntax::hir::{impl#27}::is_empty",
    "regex_syntax::hir::{impl#27}::iter",
    "regex_syntax::hir::{impl#27}::len",
    "regex_syntax::hir::{impl#27}::read_repr",
    "regex_syntax::hir::{impl#27}::remove",
    "regex_syntax::hir::{impl#27}::set_insert",
    "regex_syntax::hir::{impl#27}::set_intersect",
    "regex_syntax::hir::{impl#27}::set_remove",
    "regex_syntax::hir::{impl#27}::set_subtract",
    "regex_syntax::hir::{impl#27}::set_union",
    "regex_syntax::hir::{impl#27}::singleton",
    "regex_syntax::hir::{impl#27}::subtract",
    "regex_syntax::hir::{impl#27}::union",
    "regex_syntax::hir::{impl#27}::write_repr",
    "regex_syntax::hir::{impl#28}::fmt",
    "regex_syntax::hir::{impl#29}::next",
    "regex_syntax::hir::{impl#2}::fmt",
    "regex_syntax::hir::{impl#3}::fmt",
    "regex_syntax::hir::{impl#4}::into_kind",
    "regex_syntax::hir::{impl#4}::into_parts",
    "regex_syntax::hir::{impl#4}::kind",
    "regex_syntax::hir::{impl#4}::properties",
    "regex_syntax::hir::{impl#5}::alternation",
    "regex_syntax::hir::{impl#5}::capture",
    "regex_syntax::hir::{impl#5}::class",
    "regex_syntax::hir::{impl#5}::concat",
    "regex_syntax::hir::{impl#5}::dot",
    "regex_syntax::hir::{impl#5}::empty",
    "regex_syntax::hir::{impl#5}::fail",
    "regex_syntax::hir::{impl#5}::literal",
    "regex_syntax::hir::{impl#5}::look",
    "regex_syntax::hir::{impl#5}::repetition",
    "regex_syntax::hir::{impl#6}::subs",
    "regex_syntax::hir::{impl#7}::fmt",
    "regex_syntax::hir::{impl#8}::fmt",
    "regex_syntax::hir::{impl#9}::fmt",
    "regex_syntax::is_escapeable_character",
    "regex_syntax::is_meta_character",
    "regex_syntax::is_word_byte",
    "regex_syntax::is_word_character",
    "regex_syntax::parser::parse",
    "regex_syntax::parser::{impl#0}::build",
    "regex_syntax::parser::{impl#0}::case_insensitive",
    "regex_syntax::parser::{impl#0}::crlf",
    "regex_syntax::parser::{impl#0}::dot_matches_new_line",
    "regex_syntax::parser::{impl#0}::ignore_whitespace",
    "regex_syntax::parser::{impl#0}::line_terminator",
    "regex_syntax::parser::{impl#0}::multi_line",
    "regex_syntax::parser::{impl#0}::nest_limit",
    "regex_syntax::parser::{impl#0}::new",
    "regex_syntax::parser::{impl#0}::octal",
    "regex_syntax::parser::{impl#0}::swap_greed",
    "regex_syntax::parser::{impl#0}::unicode",
    "regex_syntax::parser::{impl#0}::utf8",
    "regex_syntax::parser::{impl#1}::new",
    "regex_syntax::parser::{impl#1}::parse",
    "regex_syntax::try_is_word_character",
    "regex_syntax::unicode::ages",
    "regex_syntax::unicode::ages::imp",
    "regex_syntax::unicode::ages::imp",
    "regex_syntax::unicode::bool_property",
    "regex_syntax::unicode::bool_property::imp",
    "regex_syntax::unicode::bool_property::imp",
    "regex_syntax::unicode::canonical_gencat",
    "regex_syntax::unicode::canonical_prop",
    "regex_syntax::unicode::canonical_prop::imp",
    "regex_syntax::unicode::canonical_prop::imp",
    "regex_syntax::unicode::canonical_script",
    "regex_syntax::unicode::canonical_value",
    "regex_syntax::unicode::class",
    "regex_syntax::unicode::gcb",
    "regex_syntax::unicode::gcb::imp",
    "regex_syntax::unicode::gcb::imp",
    "regex_syntax::unicode::gencat",
    "regex_syntax::unicode::gencat::imp",
    "regex_syntax::unicode::gencat::imp",
    "regex_syntax::unicode::hir_class",
    "regex_syntax::unicode::is_word_character",
    "regex_syntax::unicode::is_word_character::imp",
    "regex_syntax::unicode::is_word_character::imp",
    "regex_syntax::unicode::perl_digit",
    "regex_syntax::unicode::perl_digit::imp",
    "regex_syntax::unicode::perl_digit::imp",
    "regex_syntax::unicode::perl_digit::imp",
    "regex_syntax::unicode::perl_space",
    "regex_syntax::unicode::perl_space::imp",
    "regex_syntax::unicode::perl_space::imp",
    "regex_syntax::unicode::perl_space::imp",
    "regex_syntax::unicode::perl_word",
    "regex_syntax::unicode::perl_word::imp",
    "regex_syntax::unicode::perl_word::imp",
    "regex_syntax::unicode::property_set",
    "regex_syntax::unicode::property_values",
    "regex_syntax::unicode::property_values::imp",
    "regex_syntax::unicode::property_values::imp",
    "regex_syntax::unicode::sb",
    "regex_syntax::unicode::sb::imp",
    "regex_syntax::unicode::sb::imp",
    "regex_syntax::unicode::script",
    "regex_syntax::unicode::script::imp",
    "regex_syntax::unicode::script::imp",
    "regex_syntax::unicode::script_extension",
    "regex_syntax::unicode::script_extension::imp",
    "regex_syntax::unicode::script_extension::imp",
    "regex_syntax::unicode::symbolic_name_normalize",
    "regex_syntax::unicode::symbolic_name_normalize_bytes",
    "regex_syntax::unicode::tests::contains_case_map",
    "regex_syntax::unicode::tests::simple_fold_ok",
    "regex_syntax::unicode::wb",
    "regex_syntax::unicode::wb::imp",
    "regex_syntax::unicode::wb::imp",
    "regex_syntax::unicode::{impl#1}::fmt",
    "regex_syntax::unicode::{impl#3}::fmt",
    "regex_syntax::unicode::{impl#4}::get",
    "regex_syntax::unicode::{impl#4}::mapping",
    "regex_syntax::unicode::{impl#4}::new",
    "regex_syntax::unicode::{impl#4}::overlaps",
    "regex_syntax::unicode::{impl#5}::canonical_binary",
    "regex_syntax::unicode::{impl#5}::canonicalize",
    "regex_syntax::utf8::max_scalar_value",
    "regex_syntax::utf8::tests::encode_surrogate",
    "regex_syntax::utf8::tests::never_accepts_surrogate_codepoints",
    "regex_syntax::utf8::tests::rutf8",
    "regex_syntax::utf8::{impl#0}::as_slice",
    "regex_syntax::utf8::{impl#0}::from_encoded_range",
    "regex_syntax::utf8::{impl#0}::len",
    "regex_syntax::utf8::{impl#0}::matches",
    "regex_syntax::utf8::{impl#0}::reverse",
    "regex_syntax::utf8::{impl#1}::into_iter",
    "regex_syntax::utf8::{impl#2}::fmt",
    "regex_syntax::utf8::{impl#3}::matches",
    "regex_syntax::utf8::{impl#3}::new",
    "regex_syntax::utf8::{impl#4}::fmt",
    "regex_syntax::utf8::{impl#5}::new",
    "regex_syntax::utf8::{impl#5}::push",
    "regex_syntax::utf8::{impl#5}::reset",
    "regex_syntax::utf8::{impl#6}::fmt",
    "regex_syntax::utf8::{impl#7}::next",
    "regex_syntax::utf8::{impl#9}::as_ascii",
    "regex_syntax::utf8::{impl#9}::encode",
    "regex_syntax::utf8::{impl#9}::is_ascii",
    "regex_syntax::utf8::{impl#9}::is_valid",
    "regex_syntax::utf8::{impl#9}::split",
]