[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &(*_1),
            _0 = ast::parse::NestLimiter::<'_, '_, P> { p: move _2, depth: const 0_u32 },
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/ast/parse.rs:2276:6: 2276:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: ast::parse::NestLimiter<'{erased}, '{erased}, P/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/ast/parse.rs:2274:38: 2274:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/ast/parse.rs:2274:15: 2274:33 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/ast/parse.rs:2274:12: 2274:13 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/ast/parse.rs:2274:12: 2274:13 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::parse::ParserI<'{erased}, P/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/ast/parse.rs:2274:12: 2274:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} ast::parse::ParserI<'{erased}, P/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/ast/parse.rs:2275:23: 2275:24 (#0),
            scope: scope[0],
        },
    },
]