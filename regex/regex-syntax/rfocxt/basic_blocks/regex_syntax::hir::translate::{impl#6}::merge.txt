[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &((*_1).0: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1271:12: 1271:43 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::option::Option::<bool>::is_none(move _5) -> [return: bb1, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1271:12: 1271:43 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = ((*_2).0: core::option::Option<bool>),
            ((*_1).0: core::option::Option<bool>) = move _6,
            StorageDead(_6),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1271:9: 1273:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1271:9: 1273:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &((*_1).1: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1274:12: 1274:37 (#0),
                    scope: scope[0],
                },
                kind: _8 = core::option::Option::<bool>::is_none(move _9) -> [return: bb5, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1274:12: 1274:37 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _8) -> [0: bb7, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageLive(_10),
            _10 = ((*_2).1: core::option::Option<bool>),
            ((*_1).1: core::option::Option<bool>) = move _10,
            StorageDead(_10),
            _7 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1274:9: 1276:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            _7 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1274:9: 1276:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &((*_1).2: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1277:12: 1277:47 (#0),
                    scope: scope[0],
                },
                kind: _12 = core::option::Option::<bool>::is_none(move _13) -> [return: bb9, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1277:12: 1277:47 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _12) -> [0: bb11, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageLive(_14),
            _14 = ((*_2).2: core::option::Option<bool>),
            ((*_1).2: core::option::Option<bool>) = move _14,
            StorageDead(_14),
            _11 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1277:9: 1279:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            _11 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1277:9: 1279:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &((*_1).3: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1280:12: 1280:37 (#0),
                    scope: scope[0],
                },
                kind: _16 = core::option::Option::<bool>::is_none(move _17) -> [return: bb13, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1280:12: 1280:37 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _16) -> [0: bb15, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageLive(_18),
            _18 = ((*_2).3: core::option::Option<bool>),
            ((*_1).3: core::option::Option<bool>) = move _18,
            StorageDead(_18),
            _15 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1280:9: 1282:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            _15 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1280:9: 1282:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb16,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = &((*_1).4: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1283:12: 1283:34 (#0),
                    scope: scope[0],
                },
                kind: _20 = core::option::Option::<bool>::is_none(move _21) -> [return: bb17, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1283:12: 1283:34 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _20) -> [0: bb19, otherwise: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageLive(_22),
            _22 = ((*_2).4: core::option::Option<bool>),
            ((*_1).4: core::option::Option<bool>) = move _22,
            StorageDead(_22),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1283:9: 1285:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            _19 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1283:9: 1285:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &((*_1).5: core::option::Option<bool>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1286:12: 1286:31 (#0),
                    scope: scope[0],
                },
                kind: _23 = core::option::Option::<bool>::is_none(move _24) -> [return: bb21, unwind: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1286:12: 1286:31 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _23) -> [0: bb23, otherwise: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            StorageLive(_25),
            _25 = ((*_2).5: core::option::Option<bool>),
            ((*_1).5: core::option::Option<bool>) = move _25,
            StorageDead(_25),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1286:9: 1288:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _0 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1286:9: 1288:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb24,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1289:6: 1289:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1270:5: 1289:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1270:42: 1270:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1270:14: 1270:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/hir/translate.rs:1270:35: 1270:41 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:1270:25: 1270:33 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:1270:25: 1270:33 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1270:25: 1270:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1271:9: 1273:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1271:12: 1271:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1271:12: 1271:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1272:37: 1272:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1274:9: 1276:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1274:12: 1274:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1274:12: 1274:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1275:31: 1275:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1277:9: 1279:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1277:12: 1277:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1277:12: 1277:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1278:41: 1278:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1280:9: 1282:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1280:12: 1280:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1280:12: 1280:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1281:31: 1281:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1283:9: 1285:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1283:12: 1283:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1283:12: 1283:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1284:28: 1284:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:1286:9: 1288:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1286:12: 1286:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:1286:9: 1288:10 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1286:12: 1286:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<bool>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1287:25: 1287:38 (#0),
            scope: scope[0],
        },
    },
]