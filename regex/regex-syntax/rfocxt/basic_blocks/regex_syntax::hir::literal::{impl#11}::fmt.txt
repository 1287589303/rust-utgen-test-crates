[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = ((*_1).1: bool),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2177:22: 2177:32 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const "E",
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2177:19: 2177:53 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = const "I",
            _3 = &(*_5),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2177:19: 2177:53 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb3,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &mut (*_2),
            StorageLive(_11),
            _11 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2178:27 (#0),
                    scope: scope[1],
                },
                kind: _9 = core::fmt::Formatter::<'_>::debug_tuple(move _10, move _11) -> [return: bb4, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = &mut _9,
            StorageDead(_11),
            StorageDead(_10),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2179:41: 2179:56 (#0),
                    scope: scope[1],
                },
                kind: _17 = hir::literal::Literal::as_bytes(move _18) -> [return: bb5, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = &(*_17),
            StorageDead(_18),
            _15 = debug::Bytes::<'_>(move _16),
            StorageDead(_16),
            _14 = &_15,
            _13 = &(*_14),
            _12 = move _13 as &dyn core::fmt::Debug (PointerCoercion(Unsize)),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2179:58 (#0),
                    scope: scope[1],
                },
                kind: _7 = core::fmt::DebugTuple::<'_, '_>::field(move _8, move _12) -> [return: bb6, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = &mut (*_7),
            StorageDead(_12),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                    scope: scope[1],
                },
                kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _6) -> [return: bb7, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_17),
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_9),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2181:6: 2181:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/literal.rs:2176:5: 2181:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2176:52: 2176:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} hir::literal::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2176:12: 2176:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/hir/literal.rs:2176:22: 2176:47 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/literal.rs:2176:19: 2176:20 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/literal.rs:2176:19: 2176:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2176:19: 2176:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/literal.rs:2177:19: 2177:53 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/literal.rs:2177:13: 2177:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2177:13: 2177:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2177:22: 2177:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2177:48: 2177:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:9: 2179:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:9: 2179:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:9: 2178:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: core::fmt::DebugTuple<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:9: 2178:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:9: 2178:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2178:23: 2178:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(core::fmt::Debug), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:20: 2179:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} debug::Bytes<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:20: 2179:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} debug::Bytes<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:20: 2179:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: debug::Bytes<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:21: 2179:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:41: 2179:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:41: 2179:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/literal.rs:2178:9: 2180:22 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::literal::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/literal.rs:2179:41: 2179:45 (#0),
            scope: scope[0],
        },
    },
]