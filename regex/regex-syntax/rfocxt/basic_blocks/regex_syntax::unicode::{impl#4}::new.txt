[
    BasicBlockData {
        statements: [
            StorageLive(_1),
            StorageLive(_2),
            _2 = core::option::Option::<char>::None,
            _1 = unicode::SimpleCaseFolder { table: const unicode_tables::case_folding_simple::CASE_FOLDING_SIMPLE, last: move _2, next: const 0_usize },
            StorageDead(_2),
            _0 = core::result::Result::<unicode::SimpleCaseFolder, unicode::CaseFoldError>::Ok(move _1),
            StorageDead(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/unicode.rs:111:6: 111:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<unicode::SimpleCaseFolder, unicode::CaseFoldError>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/unicode.rs:98:21: 98:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: unicode::SimpleCaseFolder,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/unicode.rs:105:16: 109:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: core::option::Option<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/unicode.rs:107:23: 107:27 (#0),
            scope: scope[0],
        },
    },
]