[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/error.rs:269:5: 269:26 (#0),
                    scope: scope[0],
                },
                kind: _4 = core::iter::repeat::<char>(move _5) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_6),
            _6 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/error.rs:269:5: 269:38 (#0),
                    scope: scope[0],
                },
                kind: _3 = <core::iter::Repeat<char> as core::iter::Iterator>::take(move _4, move _6) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/error.rs:269:5: 269:48 (#0),
                    scope: scope[0],
                },
                kind: _0 = <core::iter::Take<core::iter::Repeat<char>> as core::iter::Iterator>::collect::<std::string::String>(move _3) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/error.rs:270:2: 270:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/error.rs:268:1: 270:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: std::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:268:42: 268:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/error.rs:268:19: 268:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/error.rs:268:16: 268:17 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/error.rs:268:16: 268:17 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:268:16: 268:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/error.rs:268:32: 268:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/error.rs:268:25: 268:30 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/error.rs:268:25: 268:30 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:268:25: 268:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/error.rs:269:5: 269:48 (#0),
                },
            ),
        ),
        ty: core::iter::Take<core::iter::Repeat<char>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:269:5: 269:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/error.rs:269:5: 269:48 (#0),
                },
            ),
        ),
        ty: core::iter::Repeat<char>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:269:5: 269:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/error.rs:269:5: 269:48 (#0),
                },
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:269:24: 269:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/error.rs:269:5: 269:48 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/error.rs:269:32: 269:37 (#0),
            scope: scope[0],
        },
    },
]