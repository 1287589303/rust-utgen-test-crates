[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            PlaceMention((*_2)),
            _4 = discriminant((*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:502:9: 502:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), (*_2)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:503:13: 503:40 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:504:13: 504:46 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:516:13: 516:44 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb41, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:529:13: 529:44 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb79, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:542:13: 542:46 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb119, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:548:13: 548:43 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb137, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:561:13: 561:50 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb177, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:587:44: 587:46 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:503:44: 503:46 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = &(((*_2) as Literal).0: ast::Literal),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            _9 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:505:20: 505:32 (#0),
                    scope: scope[1],
                },
                kind: _8 = hir::translate::TranslatorI::<'_, '_>::flags(move _9) -> [return: bb12, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &_8,
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:505:20: 505:42 (#0),
                    scope: scope[1],
                },
                kind: _6 = hir::translate::Flags::unicode(move _7) -> [return: bb13, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:505:20: 505:42 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _6) -> [0: bb23, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:506:35: 506:45 (#0),
                    scope: scope[1],
                },
                kind: _12 = hir::translate::TranslatorI::<'_, '_>::pop(move _13) -> [return: bb15, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:506:35: 506:54 (#0),
                    scope: scope[1],
                },
                kind: _11 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _12) -> [return: bb16, unwind: bb346],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:506:35: 506:77 (#0),
                    scope: scope[1],
                },
                kind: _10 = hir::translate::HirFrame::unwrap_class_unicode(move _11) -> [return: bb17, unwind: bb345],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            FakeRead(ForLet(None), _10),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &mut _10,
            StorageLive(_16),
            StorageLive(_17),
            _17 = ((*_5).2: char),
            StorageLive(_18),
            _18 = ((*_5).2: char),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:507:30: 507:67 (#0),
                    scope: scope[2],
                },
                kind: _16 = hir::ClassUnicodeRange::new(move _17, move _18) -> [return: bb18, unwind: bb344],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:507:21: 507:68 (#0),
                    scope: scope[2],
                },
                kind: _14 = hir::ClassUnicode::push(move _15, move _16) -> [return: bb19, unwind: bb344],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_14),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &(*_1),
            StorageLive(_21),
            StorageLive(_22),
            _22 = move _10,
            _21 = hir::translate::HirFrame::ClassUnicode(move _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:508:57: 508:58 (#0),
                    scope: scope[2],
                },
                kind: drop(_22) -> [return: bb20, unwind: bb343],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:508:21: 508:59 (#0),
                    scope: scope[2],
                },
                kind: _19 = hir::translate::TranslatorI::<'_, '_>::push(move _20, move _21) -> [return: bb21, unwind: bb343],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:509:17: 509:18 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb22, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            _26 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:510:35: 510:45 (#0),
                    scope: scope[1],
                },
                kind: _25 = hir::translate::TranslatorI::<'_, '_>::pop(move _26) -> [return: bb24, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:510:35: 510:54 (#0),
                    scope: scope[1],
                },
                kind: _24 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _25) -> [return: bb25, unwind: bb342],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:510:35: 510:75 (#0),
                    scope: scope[1],
                },
                kind: _23 = hir::translate::HirFrame::unwrap_class_bytes(move _24) -> [return: bb26, unwind: bb341],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            FakeRead(ForLet(None), _23),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &(*_1),
            StorageLive(_31),
            _31 = &(*_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:32: 511:58 (#0),
                    scope: scope[3],
                },
                kind: _29 = hir::translate::TranslatorI::<'_, '_>::class_literal_byte(move _30, move _31) -> [return: bb27, unwind: bb340],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                    scope: scope[3],
                },
                kind: _28 = <core::result::Result<u8, hir::Error> as core::ops::Try>::branch(move _29) -> [return: bb28, unwind: bb339],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
            PlaceMention(_28),
            _32 = discriminant(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                    scope: scope[3],
                },
                kind: switchInt(move _32) -> [0: bb31, 1: bb30, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb32, imaginary: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_36),
            _36 = ((_28 as Continue).0: u8),
            _27 = _36,
            StorageDead(_36),
            FakeRead(ForLet(None), _27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:59: 511:60 (#0),
                    scope: scope[3],
                },
                kind: drop(_28) -> [return: bb34, unwind: bb340],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_33),
            _33 = move ((_28 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_35),
            _35 = move _33,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                    scope: scope[6],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _35) -> [return: bb33, unwind: bb336],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
                    scope: scope[3],
                },
                kind: drop(_33) -> [return: bb247, unwind: bb338],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageLive(_37),
            StorageLive(_38),
            _38 = &mut _23,
            StorageLive(_39),
            StorageLive(_40),
            _40 = _27,
            StorageLive(_41),
            _41 = _27,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:512:30: 512:67 (#0),
                    scope: scope[4],
                },
                kind: _39 = hir::ClassBytesRange::new(move _40, move _41) -> [return: bb35, unwind: bb340],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_41),
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:512:21: 512:68 (#0),
                    scope: scope[4],
                },
                kind: _37 = hir::ClassBytes::push(move _38, move _39) -> [return: bb36, unwind: bb340],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            StorageDead(_38),
            StorageDead(_37),
            StorageLive(_42),
            StorageLive(_43),
            _43 = &(*_1),
            StorageLive(_44),
            StorageLive(_45),
            _45 = move _23,
            _44 = hir::translate::HirFrame::ClassBytes(move _45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:513:55: 513:56 (#0),
                    scope: scope[4],
                },
                kind: drop(_45) -> [return: bb37, unwind: bb335],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:513:21: 513:57 (#0),
                    scope: scope[4],
                },
                kind: _42 = hir::translate::TranslatorI::<'_, '_>::push(move _43, move _44) -> [return: bb38, unwind: bb335],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageDead(_43),
            StorageDead(_42),
            _3 = const (),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:514:17: 514:18 (#0),
                    scope: scope[1],
                },
                kind: drop(_23) -> [return: bb39, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:515:13: 515:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_46),
            _46 = &(((*_2) as Range).0: ast::ClassSetRange),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            _50 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:517:20: 517:32 (#0),
                    scope: scope[9],
                },
                kind: _49 = hir::translate::TranslatorI::<'_, '_>::flags(move _50) -> [return: bb42, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _48 = &_49,
            StorageDead(_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:517:20: 517:42 (#0),
                    scope: scope[9],
                },
                kind: _47 = hir::translate::Flags::unicode(move _48) -> [return: bb43, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:517:20: 517:42 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _47) -> [0: bb53, otherwise: bb44],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            StorageLive(_54),
            _54 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:518:35: 518:45 (#0),
                    scope: scope[9],
                },
                kind: _53 = hir::translate::TranslatorI::<'_, '_>::pop(move _54) -> [return: bb45, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:518:35: 518:54 (#0),
                    scope: scope[9],
                },
                kind: _52 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _53) -> [return: bb46, unwind: bb334],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_53),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:518:35: 518:77 (#0),
                    scope: scope[9],
                },
                kind: _51 = hir::translate::HirFrame::unwrap_class_unicode(move _52) -> [return: bb47, unwind: bb333],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            FakeRead(ForLet(None), _51),
            StorageLive(_55),
            StorageLive(_56),
            _56 = &mut _51,
            StorageLive(_57),
            StorageLive(_58),
            _58 = (((*_46).1: ast::Literal).2: char),
            StorageLive(_59),
            _59 = (((*_46).2: ast::Literal).2: char),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:519:30: 519:77 (#0),
                    scope: scope[10],
                },
                kind: _57 = hir::ClassUnicodeRange::new(move _58, move _59) -> [return: bb48, unwind: bb332],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:519:21: 519:78 (#0),
                    scope: scope[10],
                },
                kind: _55 = hir::ClassUnicode::push(move _56, move _57) -> [return: bb49, unwind: bb332],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_57),
            StorageDead(_56),
            StorageDead(_55),
            StorageLive(_60),
            StorageLive(_61),
            _61 = &(*_1),
            StorageLive(_62),
            StorageLive(_63),
            _63 = move _51,
            _62 = hir::translate::HirFrame::ClassUnicode(move _63),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:520:57: 520:58 (#0),
                    scope: scope[10],
                },
                kind: drop(_63) -> [return: bb50, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_63),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:520:21: 520:59 (#0),
                    scope: scope[10],
                },
                kind: _60 = hir::translate::TranslatorI::<'_, '_>::push(move _61, move _62) -> [return: bb51, unwind: bb331],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            StorageDead(_61),
            StorageDead(_60),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:521:17: 521:18 (#0),
                    scope: scope[9],
                },
                kind: drop(_51) -> [return: bb52, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
            StorageDead(_48),
            StorageLive(_64),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            _67 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:522:35: 522:45 (#0),
                    scope: scope[9],
                },
                kind: _66 = hir::translate::TranslatorI::<'_, '_>::pop(move _67) -> [return: bb54, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:522:35: 522:54 (#0),
                    scope: scope[9],
                },
                kind: _65 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _66) -> [return: bb55, unwind: bb330],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:522:35: 522:75 (#0),
                    scope: scope[9],
                },
                kind: _64 = hir::translate::HirFrame::unwrap_class_bytes(move _65) -> [return: bb56, unwind: bb329],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            FakeRead(ForLet(None), _64),
            StorageLive(_68),
            StorageLive(_69),
            StorageLive(_70),
            StorageLive(_71),
            _71 = &(*_1),
            StorageLive(_72),
            StorageLive(_73),
            _73 = &((*_46).1: ast::Literal),
            _72 = &(*_73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:33: 523:66 (#0),
                    scope: scope[11],
                },
                kind: _70 = hir::translate::TranslatorI::<'_, '_>::class_literal_byte(move _71, move _72) -> [return: bb57, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            StorageDead(_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                    scope: scope[11],
                },
                kind: _69 = <core::result::Result<u8, hir::Error> as core::ops::Try>::branch(move _70) -> [return: bb58, unwind: bb327],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
            PlaceMention(_69),
            _74 = discriminant(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                    scope: scope[11],
                },
                kind: switchInt(move _74) -> [0: bb61, 1: bb60, otherwise: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                    scope: scope[11],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
                    scope: scope[11],
                },
                kind: falseEdge -> [real: bb62, imaginary: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_78),
            _78 = ((_69 as Continue).0: u8),
            _68 = _78,
            StorageDead(_78),
            FakeRead(ForLet(None), _68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:67: 523:68 (#0),
                    scope: scope[11],
                },
                kind: drop(_69) -> [return: bb64, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_75),
            _75 = move ((_69 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_77),
            _77 = move _75,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                    scope: scope[14],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _77) -> [return: bb63, unwind: bb324],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_77),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
                    scope: scope[11],
                },
                kind: drop(_75) -> [return: bb243, unwind: bb326],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_69),
            StorageLive(_79),
            StorageLive(_80),
            StorageLive(_81),
            StorageLive(_82),
            _82 = &(*_1),
            StorageLive(_83),
            StorageLive(_84),
            _84 = &((*_46).2: ast::Literal),
            _83 = &(*_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:31: 524:62 (#0),
                    scope: scope[12],
                },
                kind: _81 = hir::translate::TranslatorI::<'_, '_>::class_literal_byte(move _82, move _83) -> [return: bb65, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
            StorageDead(_82),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                    scope: scope[12],
                },
                kind: _80 = <core::result::Result<u8, hir::Error> as core::ops::Try>::branch(move _81) -> [return: bb66, unwind: bb323],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
            PlaceMention(_80),
            _85 = discriminant(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                    scope: scope[12],
                },
                kind: switchInt(move _85) -> [0: bb69, 1: bb68, otherwise: bb67],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                    scope: scope[12],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
                    scope: scope[12],
                },
                kind: falseEdge -> [real: bb70, imaginary: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_89),
            _89 = ((_80 as Continue).0: u8),
            _79 = _89,
            StorageDead(_89),
            FakeRead(ForLet(None), _79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:63: 524:64 (#0),
                    scope: scope[12],
                },
                kind: drop(_80) -> [return: bb72, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_86),
            _86 = move ((_80 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_88),
            _88 = move _86,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                    scope: scope[19],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _88) -> [return: bb71, unwind: bb320],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
                    scope: scope[12],
                },
                kind: drop(_86) -> [return: bb241, unwind: bb322],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_80),
            StorageLive(_90),
            StorageLive(_91),
            _91 = &mut _64,
            StorageLive(_92),
            StorageLive(_93),
            _93 = _68,
            StorageLive(_94),
            _94 = _79,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:525:30: 525:67 (#0),
                    scope: scope[17],
                },
                kind: _92 = hir::ClassBytesRange::new(move _93, move _94) -> [return: bb73, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:525:21: 525:68 (#0),
                    scope: scope[17],
                },
                kind: _90 = hir::ClassBytes::push(move _91, move _92) -> [return: bb74, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_90),
            StorageLive(_95),
            StorageLive(_96),
            _96 = &(*_1),
            StorageLive(_97),
            StorageLive(_98),
            _98 = move _64,
            _97 = hir::translate::HirFrame::ClassBytes(move _98),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:526:55: 526:56 (#0),
                    scope: scope[17],
                },
                kind: drop(_98) -> [return: bb75, unwind: bb319],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_98),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:526:21: 526:57 (#0),
                    scope: scope[17],
                },
                kind: _95 = hir::translate::TranslatorI::<'_, '_>::push(move _96, move _97) -> [return: bb76, unwind: bb319],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_97),
            StorageDead(_96),
            StorageDead(_95),
            _3 = const (),
            StorageDead(_79),
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:527:17: 527:18 (#0),
                    scope: scope[9],
                },
                kind: drop(_64) -> [return: bb77, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb78,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
            StorageDead(_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:528:13: 528:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_99),
            _99 = &(((*_2) as Ascii).0: ast::ClassAscii),
            StorageLive(_100),
            StorageLive(_101),
            StorageLive(_102),
            StorageLive(_103),
            _103 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:530:20: 530:32 (#0),
                    scope: scope[22],
                },
                kind: _102 = hir::translate::TranslatorI::<'_, '_>::flags(move _103) -> [return: bb80, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _101 = &_102,
            StorageDead(_103),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:530:20: 530:42 (#0),
                    scope: scope[22],
                },
                kind: _100 = hir::translate::Flags::unicode(move _101) -> [return: bb81, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:530:20: 530:42 (#0),
                    scope: scope[22],
                },
                kind: switchInt(move _100) -> [0: bb100, otherwise: bb82],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageDead(_101),
            StorageLive(_104),
            StorageLive(_105),
            StorageLive(_106),
            StorageLive(_107),
            _107 = &(*_1),
            StorageLive(_108),
            _108 = &(*_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:32: 531:63 (#0),
                    scope: scope[22],
                },
                kind: _106 = hir::translate::TranslatorI::<'_, '_>::hir_ascii_unicode_class(move _107, move _108) -> [return: bb83, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_108),
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                    scope: scope[22],
                },
                kind: _105 = <core::result::Result<hir::ClassUnicode, hir::Error> as core::ops::Try>::branch(move _106) -> [return: bb84, unwind: bb318],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
            PlaceMention(_105),
            _109 = discriminant(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                    scope: scope[22],
                },
                kind: switchInt(move _109) -> [0: bb87, 1: bb86, otherwise: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                    scope: scope[22],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
                    scope: scope[22],
                },
                kind: falseEdge -> [real: bb88, imaginary: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_113),
            _113 = move ((_105 as Continue).0: hir::ClassUnicode),
            _104 = move _113,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#0),
                    scope: scope[22],
                },
                kind: drop(_113) -> [return: bb90, unwind: bb317],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_110),
            _110 = move ((_105 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_112),
            _112 = move _110,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                    scope: scope[25],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _112) -> [return: bb89, unwind: bb315],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_112),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
                    scope: scope[22],
                },
                kind: drop(_110) -> [return: bb238, unwind: bb317],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_113),
            FakeRead(ForLet(None), _104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:64: 531:65 (#0),
                    scope: scope[22],
                },
                kind: drop(_105) -> [return: bb91, unwind: bb314],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageLive(_114),
            StorageLive(_115),
            StorageLive(_116),
            StorageLive(_117),
            _117 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:532:35: 532:45 (#0),
                    scope: scope[23],
                },
                kind: _116 = hir::translate::TranslatorI::<'_, '_>::pop(move _117) -> [return: bb92, unwind: bb314],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:532:35: 532:54 (#0),
                    scope: scope[23],
                },
                kind: _115 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _116) -> [return: bb93, unwind: bb313],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:532:35: 532:77 (#0),
                    scope: scope[23],
                },
                kind: _114 = hir::translate::HirFrame::unwrap_class_unicode(move _115) -> [return: bb94, unwind: bb312],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_115),
            FakeRead(ForLet(None), _114),
            StorageLive(_118),
            StorageLive(_119),
            _119 = &mut _114,
            StorageLive(_120),
            StorageLive(_121),
            _121 = &_104,
            _120 = &(*_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:533:21: 533:37 (#0),
                    scope: scope[28],
                },
                kind: _118 = hir::ClassUnicode::union(move _119, move _120) -> [return: bb95, unwind: bb311],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_120),
            StorageDead(_119),
            StorageDead(_121),
            StorageDead(_118),
            StorageLive(_122),
            StorageLive(_123),
            _123 = &(*_1),
            StorageLive(_124),
            StorageLive(_125),
            _125 = move _114,
            _124 = hir::translate::HirFrame::ClassUnicode(move _125),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:534:57: 534:58 (#0),
                    scope: scope[28],
                },
                kind: drop(_125) -> [return: bb96, unwind: bb310],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_125),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:534:21: 534:59 (#0),
                    scope: scope[28],
                },
                kind: _122 = hir::translate::TranslatorI::<'_, '_>::push(move _123, move _124) -> [return: bb97, unwind: bb310],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_124),
            StorageDead(_123),
            StorageDead(_122),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:535:17: 535:18 (#0),
                    scope: scope[23],
                },
                kind: drop(_114) -> [return: bb98, unwind: bb314],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:535:17: 535:18 (#0),
                    scope: scope[22],
                },
                kind: drop(_104) -> [return: bb99, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_102),
            StorageDead(_101),
            StorageLive(_126),
            StorageLive(_127),
            StorageLive(_128),
            StorageLive(_129),
            _129 = &(*_1),
            StorageLive(_130),
            _130 = &(*_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:32: 536:60 (#0),
                    scope: scope[22],
                },
                kind: _128 = hir::translate::TranslatorI::<'_, '_>::hir_ascii_byte_class(move _129, move _130) -> [return: bb101, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_130),
            StorageDead(_129),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                    scope: scope[22],
                },
                kind: _127 = <core::result::Result<hir::ClassBytes, hir::Error> as core::ops::Try>::branch(move _128) -> [return: bb102, unwind: bb309],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
            PlaceMention(_127),
            _131 = discriminant(_127),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                    scope: scope[22],
                },
                kind: switchInt(move _131) -> [0: bb105, 1: bb104, otherwise: bb103],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _127),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                    scope: scope[22],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
                    scope: scope[22],
                },
                kind: falseEdge -> [real: bb106, imaginary: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_135),
            _135 = move ((_127 as Continue).0: hir::ClassBytes),
            _126 = move _135,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#0),
                    scope: scope[22],
                },
                kind: drop(_135) -> [return: bb108, unwind: bb308],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_132),
            _132 = move ((_127 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_134),
            _134 = move _132,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                    scope: scope[31],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _134) -> [return: bb107, unwind: bb306],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
                    scope: scope[22],
                },
                kind: drop(_132) -> [return: bb236, unwind: bb308],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            FakeRead(ForLet(None), _126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:61: 536:62 (#0),
                    scope: scope[22],
                },
                kind: drop(_127) -> [return: bb109, unwind: bb305],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
            StorageLive(_136),
            StorageLive(_137),
            StorageLive(_138),
            StorageLive(_139),
            _139 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:537:35: 537:45 (#0),
                    scope: scope[29],
                },
                kind: _138 = hir::translate::TranslatorI::<'_, '_>::pop(move _139) -> [return: bb110, unwind: bb305],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:537:35: 537:54 (#0),
                    scope: scope[29],
                },
                kind: _137 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _138) -> [return: bb111, unwind: bb304],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_138),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:537:35: 537:75 (#0),
                    scope: scope[29],
                },
                kind: _136 = hir::translate::HirFrame::unwrap_class_bytes(move _137) -> [return: bb112, unwind: bb303],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_137),
            FakeRead(ForLet(None), _136),
            StorageLive(_140),
            StorageLive(_141),
            _141 = &mut _136,
            StorageLive(_142),
            StorageLive(_143),
            _143 = &_126,
            _142 = &(*_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:538:21: 538:37 (#0),
                    scope: scope[34],
                },
                kind: _140 = hir::ClassBytes::union(move _141, move _142) -> [return: bb113, unwind: bb302],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            StorageDead(_141),
            StorageDead(_143),
            StorageDead(_140),
            StorageLive(_144),
            StorageLive(_145),
            _145 = &(*_1),
            StorageLive(_146),
            StorageLive(_147),
            _147 = move _136,
            _146 = hir::translate::HirFrame::ClassBytes(move _147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:539:55: 539:56 (#0),
                    scope: scope[34],
                },
                kind: drop(_147) -> [return: bb114, unwind: bb301],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:539:21: 539:57 (#0),
                    scope: scope[34],
                },
                kind: _144 = hir::translate::TranslatorI::<'_, '_>::push(move _145, move _146) -> [return: bb115, unwind: bb301],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            StorageDead(_145),
            StorageDead(_144),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:540:17: 540:18 (#0),
                    scope: scope[29],
                },
                kind: drop(_136) -> [return: bb116, unwind: bb305],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_136),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:540:17: 540:18 (#0),
                    scope: scope[22],
                },
                kind: drop(_126) -> [return: bb117, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                    scope: scope[22],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:541:13: 541:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_148),
            _148 = &(((*_2) as Unicode).0: ast::ClassUnicode),
            StorageLive(_149),
            StorageLive(_150),
            StorageLive(_151),
            StorageLive(_152),
            _152 = &(*_1),
            StorageLive(_153),
            _153 = &(*_148),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:28: 543:53 (#0),
                    scope: scope[35],
                },
                kind: _151 = hir::translate::TranslatorI::<'_, '_>::hir_unicode_class(move _152, move _153) -> [return: bb120, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
            StorageDead(_152),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                    scope: scope[35],
                },
                kind: _150 = <core::result::Result<hir::ClassUnicode, hir::Error> as core::ops::Try>::branch(move _151) -> [return: bb121, unwind: bb300],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_151),
            PlaceMention(_150),
            _154 = discriminant(_150),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                    scope: scope[35],
                },
                kind: switchInt(move _154) -> [0: bb124, 1: bb123, otherwise: bb122],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _150),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                    scope: scope[35],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
                    scope: scope[35],
                },
                kind: falseEdge -> [real: bb125, imaginary: bb124],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_158),
            _158 = move ((_150 as Continue).0: hir::ClassUnicode),
            _149 = move _158,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#0),
                    scope: scope[35],
                },
                kind: drop(_158) -> [return: bb127, unwind: bb299],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_155),
            _155 = move ((_150 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_157),
            _157 = move _155,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                    scope: scope[38],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _157) -> [return: bb126, unwind: bb297],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
                    scope: scope[35],
                },
                kind: drop(_155) -> [return: bb234, unwind: bb299],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
            FakeRead(ForLet(None), _149),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:54: 543:55 (#0),
                    scope: scope[35],
                },
                kind: drop(_150) -> [return: bb128, unwind: bb296],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageLive(_159),
            StorageLive(_160),
            StorageLive(_161),
            StorageLive(_162),
            _162 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:544:31: 544:41 (#0),
                    scope: scope[36],
                },
                kind: _161 = hir::translate::TranslatorI::<'_, '_>::pop(move _162) -> [return: bb129, unwind: bb296],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_162),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:544:31: 544:50 (#0),
                    scope: scope[36],
                },
                kind: _160 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _161) -> [return: bb130, unwind: bb295],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:544:31: 544:73 (#0),
                    scope: scope[36],
                },
                kind: _159 = hir::translate::HirFrame::unwrap_class_unicode(move _160) -> [return: bb131, unwind: bb294],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
            FakeRead(ForLet(None), _159),
            StorageLive(_163),
            StorageLive(_164),
            _164 = &mut _159,
            StorageLive(_165),
            StorageLive(_166),
            _166 = &_149,
            _165 = &(*_166),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:545:17: 545:33 (#0),
                    scope: scope[41],
                },
                kind: _163 = hir::ClassUnicode::union(move _164, move _165) -> [return: bb132, unwind: bb293],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
            StorageDead(_164),
            StorageDead(_166),
            StorageDead(_163),
            StorageLive(_167),
            StorageLive(_168),
            _168 = &(*_1),
            StorageLive(_169),
            StorageLive(_170),
            _170 = move _159,
            _169 = hir::translate::HirFrame::ClassUnicode(move _170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:546:53: 546:54 (#0),
                    scope: scope[41],
                },
                kind: drop(_170) -> [return: bb133, unwind: bb292],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_170),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:546:17: 546:55 (#0),
                    scope: scope[41],
                },
                kind: _167 = hir::translate::TranslatorI::<'_, '_>::push(move _168, move _169) -> [return: bb134, unwind: bb292],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_169),
            StorageDead(_168),
            StorageDead(_167),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:547:13: 547:14 (#0),
                    scope: scope[36],
                },
                kind: drop(_159) -> [return: bb135, unwind: bb296],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_159),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:547:13: 547:14 (#0),
                    scope: scope[35],
                },
                kind: drop(_149) -> [return: bb136, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_149),
            StorageDead(_148),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:547:13: 547:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_171),
            _171 = &(((*_2) as Perl).0: ast::ClassPerl),
            StorageLive(_172),
            StorageLive(_173),
            StorageLive(_174),
            StorageLive(_175),
            _175 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:549:20: 549:32 (#0),
                    scope: scope[42],
                },
                kind: _174 = hir::translate::TranslatorI::<'_, '_>::flags(move _175) -> [return: bb138, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _173 = &_174,
            StorageDead(_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:549:20: 549:42 (#0),
                    scope: scope[42],
                },
                kind: _172 = hir::translate::Flags::unicode(move _173) -> [return: bb139, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:549:20: 549:42 (#0),
                    scope: scope[42],
                },
                kind: switchInt(move _172) -> [0: bb158, otherwise: bb140],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageDead(_173),
            StorageLive(_176),
            StorageLive(_177),
            StorageLive(_178),
            StorageLive(_179),
            _179 = &(*_1),
            StorageLive(_180),
            _180 = &(*_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:32: 550:62 (#0),
                    scope: scope[42],
                },
                kind: _178 = hir::translate::TranslatorI::<'_, '_>::hir_perl_unicode_class(move _179, move _180) -> [return: bb141, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_180),
            StorageDead(_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                    scope: scope[42],
                },
                kind: _177 = <core::result::Result<hir::ClassUnicode, hir::Error> as core::ops::Try>::branch(move _178) -> [return: bb142, unwind: bb291],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            PlaceMention(_177),
            _181 = discriminant(_177),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                    scope: scope[42],
                },
                kind: switchInt(move _181) -> [0: bb145, 1: bb144, otherwise: bb143],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _177),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                    scope: scope[42],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
                    scope: scope[42],
                },
                kind: falseEdge -> [real: bb146, imaginary: bb145],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_185),
            _185 = move ((_177 as Continue).0: hir::ClassUnicode),
            _176 = move _185,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#0),
                    scope: scope[42],
                },
                kind: drop(_185) -> [return: bb148, unwind: bb290],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_182),
            _182 = move ((_177 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_184),
            _184 = move _182,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                    scope: scope[45],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _184) -> [return: bb147, unwind: bb288],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_184),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
                    scope: scope[42],
                },
                kind: drop(_182) -> [return: bb231, unwind: bb290],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_185),
            FakeRead(ForLet(None), _176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:63: 550:64 (#0),
                    scope: scope[42],
                },
                kind: drop(_177) -> [return: bb149, unwind: bb287],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
            StorageLive(_186),
            StorageLive(_187),
            StorageLive(_188),
            StorageLive(_189),
            _189 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:551:35: 551:45 (#0),
                    scope: scope[43],
                },
                kind: _188 = hir::translate::TranslatorI::<'_, '_>::pop(move _189) -> [return: bb150, unwind: bb287],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_189),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:551:35: 551:54 (#0),
                    scope: scope[43],
                },
                kind: _187 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _188) -> [return: bb151, unwind: bb286],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_188),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:551:35: 551:77 (#0),
                    scope: scope[43],
                },
                kind: _186 = hir::translate::HirFrame::unwrap_class_unicode(move _187) -> [return: bb152, unwind: bb285],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_187),
            FakeRead(ForLet(None), _186),
            StorageLive(_190),
            StorageLive(_191),
            _191 = &mut _186,
            StorageLive(_192),
            StorageLive(_193),
            _193 = &_176,
            _192 = &(*_193),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:552:21: 552:37 (#0),
                    scope: scope[48],
                },
                kind: _190 = hir::ClassUnicode::union(move _191, move _192) -> [return: bb153, unwind: bb284],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_192),
            StorageDead(_191),
            StorageDead(_193),
            StorageDead(_190),
            StorageLive(_194),
            StorageLive(_195),
            _195 = &(*_1),
            StorageLive(_196),
            StorageLive(_197),
            _197 = move _186,
            _196 = hir::translate::HirFrame::ClassUnicode(move _197),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:553:57: 553:58 (#0),
                    scope: scope[48],
                },
                kind: drop(_197) -> [return: bb154, unwind: bb283],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_197),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:553:21: 553:59 (#0),
                    scope: scope[48],
                },
                kind: _194 = hir::translate::TranslatorI::<'_, '_>::push(move _195, move _196) -> [return: bb155, unwind: bb283],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_196),
            StorageDead(_195),
            StorageDead(_194),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:554:17: 554:18 (#0),
                    scope: scope[43],
                },
                kind: drop(_186) -> [return: bb156, unwind: bb287],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:554:17: 554:18 (#0),
                    scope: scope[42],
                },
                kind: drop(_176) -> [return: bb157, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                    scope: scope[42],
                },
                kind: goto -> bb176,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageDead(_173),
            StorageLive(_198),
            StorageLive(_199),
            StorageLive(_200),
            StorageLive(_201),
            _201 = &(*_1),
            StorageLive(_202),
            _202 = &(*_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:32: 555:59 (#0),
                    scope: scope[42],
                },
                kind: _200 = hir::translate::TranslatorI::<'_, '_>::hir_perl_byte_class(move _201, move _202) -> [return: bb159, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_202),
            StorageDead(_201),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                    scope: scope[42],
                },
                kind: _199 = <core::result::Result<hir::ClassBytes, hir::Error> as core::ops::Try>::branch(move _200) -> [return: bb160, unwind: bb282],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_200),
            PlaceMention(_199),
            _203 = discriminant(_199),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                    scope: scope[42],
                },
                kind: switchInt(move _203) -> [0: bb163, 1: bb162, otherwise: bb161],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _199),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                    scope: scope[42],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
                    scope: scope[42],
                },
                kind: falseEdge -> [real: bb164, imaginary: bb163],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_207),
            _207 = move ((_199 as Continue).0: hir::ClassBytes),
            _198 = move _207,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#0),
                    scope: scope[42],
                },
                kind: drop(_207) -> [return: bb166, unwind: bb281],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_204),
            _204 = move ((_199 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_206),
            _206 = move _204,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                    scope: scope[51],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _206) -> [return: bb165, unwind: bb279],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_206),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
                    scope: scope[42],
                },
                kind: drop(_204) -> [return: bb229, unwind: bb281],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_207),
            FakeRead(ForLet(None), _198),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:60: 555:61 (#0),
                    scope: scope[42],
                },
                kind: drop(_199) -> [return: bb167, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_199),
            StorageLive(_208),
            StorageLive(_209),
            StorageLive(_210),
            StorageLive(_211),
            _211 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:556:35: 556:45 (#0),
                    scope: scope[49],
                },
                kind: _210 = hir::translate::TranslatorI::<'_, '_>::pop(move _211) -> [return: bb168, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_211),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:556:35: 556:54 (#0),
                    scope: scope[49],
                },
                kind: _209 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _210) -> [return: bb169, unwind: bb277],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_210),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:556:35: 556:75 (#0),
                    scope: scope[49],
                },
                kind: _208 = hir::translate::HirFrame::unwrap_class_bytes(move _209) -> [return: bb170, unwind: bb276],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_209),
            FakeRead(ForLet(None), _208),
            StorageLive(_212),
            StorageLive(_213),
            _213 = &mut _208,
            StorageLive(_214),
            StorageLive(_215),
            _215 = &_198,
            _214 = &(*_215),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:557:21: 557:37 (#0),
                    scope: scope[54],
                },
                kind: _212 = hir::ClassBytes::union(move _213, move _214) -> [return: bb171, unwind: bb275],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_214),
            StorageDead(_213),
            StorageDead(_215),
            StorageDead(_212),
            StorageLive(_216),
            StorageLive(_217),
            _217 = &(*_1),
            StorageLive(_218),
            StorageLive(_219),
            _219 = move _208,
            _218 = hir::translate::HirFrame::ClassBytes(move _219),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:558:55: 558:56 (#0),
                    scope: scope[54],
                },
                kind: drop(_219) -> [return: bb172, unwind: bb274],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_219),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:558:21: 558:57 (#0),
                    scope: scope[54],
                },
                kind: _216 = hir::translate::TranslatorI::<'_, '_>::push(move _217, move _218) -> [return: bb173, unwind: bb274],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_218),
            StorageDead(_217),
            StorageDead(_216),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:559:17: 559:18 (#0),
                    scope: scope[49],
                },
                kind: drop(_208) -> [return: bb174, unwind: bb278],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_208),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:559:17: 559:18 (#0),
                    scope: scope[42],
                },
                kind: drop(_198) -> [return: bb175, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_198),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                    scope: scope[42],
                },
                kind: goto -> bb176,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_172),
            StorageDead(_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:560:13: 560:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_220),
            _220 = &(((*_2) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>),
            StorageLive(_221),
            StorageLive(_222),
            StorageLive(_223),
            StorageLive(_224),
            _224 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:562:20: 562:32 (#0),
                    scope: scope[55],
                },
                kind: _223 = hir::translate::TranslatorI::<'_, '_>::flags(move _224) -> [return: bb178, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _222 = &_223,
            StorageDead(_224),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:562:20: 562:42 (#0),
                    scope: scope[55],
                },
                kind: _221 = hir::translate::Flags::unicode(move _222) -> [return: bb179, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:562:20: 562:42 (#0),
                    scope: scope[55],
                },
                kind: switchInt(move _221) -> [0: bb200, otherwise: bb180],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_223),
            StorageDead(_222),
            StorageLive(_225),
            StorageLive(_226),
            StorageLive(_227),
            StorageLive(_228),
            _228 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:563:36: 563:46 (#0),
                    scope: scope[55],
                },
                kind: _227 = hir::translate::TranslatorI::<'_, '_>::pop(move _228) -> [return: bb181, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_228),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:563:36: 563:55 (#0),
                    scope: scope[55],
                },
                kind: _226 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _227) -> [return: bb182, unwind: bb273],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_227),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:563:36: 563:78 (#0),
                    scope: scope[55],
                },
                kind: _225 = hir::translate::HirFrame::unwrap_class_unicode(move _226) -> [return: bb183, unwind: bb272],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_226),
            FakeRead(ForLet(None), _225),
            StorageLive(_229),
            StorageLive(_230),
            StorageLive(_231),
            StorageLive(_232),
            _232 = &(*_1),
            StorageLive(_233),
            StorageLive(_234),
            _234 = &((*(*_220)).0: ast::Span),
            _233 = &(*_234),
            StorageLive(_235),
            _235 = ((*(*_220)).1: bool),
            StorageLive(_236),
            StorageLive(_237),
            _237 = &mut _225,
            _236 = &mut (*_237),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:564:21: 568:22 (#0),
                    scope: scope[56],
                },
                kind: _231 = hir::translate::TranslatorI::<'_, '_>::unicode_fold_and_negate(move _232, move _233, move _235, move _236) -> [return: bb184, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_236),
            StorageDead(_235),
            StorageDead(_233),
            StorageDead(_232),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                    scope: scope[56],
                },
                kind: _230 = <core::result::Result<(), hir::Error> as core::ops::Try>::branch(move _231) -> [return: bb185, unwind: bb270],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_231),
            PlaceMention(_230),
            _238 = discriminant(_230),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                    scope: scope[56],
                },
                kind: switchInt(move _238) -> [0: bb188, 1: bb187, otherwise: bb186],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _230),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                    scope: scope[56],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
                    scope: scope[56],
                },
                kind: falseEdge -> [real: bb189, imaginary: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_242),
            _242 = ((_230 as Continue).0: ()),
            _229 = _242,
            StorageDead(_242),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:23: 568:24 (#0),
                    scope: scope[56],
                },
                kind: drop(_230) -> [return: bb191, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_239),
            _239 = move ((_230 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_241),
            _241 = move _239,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                    scope: scope[58],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _241) -> [return: bb190, unwind: bb267],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_241),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
                    scope: scope[56],
                },
                kind: drop(_239) -> [return: bb225, unwind: bb269],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_237),
            StorageDead(_234),
            StorageDead(_230),
            StorageDead(_229),
            StorageLive(_243),
            StorageLive(_244),
            StorageLive(_245),
            StorageLive(_246),
            _246 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:570:36: 570:46 (#0),
                    scope: scope[56],
                },
                kind: _245 = hir::translate::TranslatorI::<'_, '_>::pop(move _246) -> [return: bb192, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_246),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:570:36: 570:55 (#0),
                    scope: scope[56],
                },
                kind: _244 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _245) -> [return: bb193, unwind: bb266],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_245),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:570:36: 570:78 (#0),
                    scope: scope[56],
                },
                kind: _243 = hir::translate::HirFrame::unwrap_class_unicode(move _244) -> [return: bb194, unwind: bb265],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_244),
            FakeRead(ForLet(None), _243),
            StorageLive(_247),
            StorageLive(_248),
            _248 = &mut _243,
            StorageLive(_249),
            StorageLive(_250),
            _250 = &_225,
            _249 = &(*_250),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:571:21: 571:38 (#0),
                    scope: scope[61],
                },
                kind: _247 = hir::ClassUnicode::union(move _248, move _249) -> [return: bb195, unwind: bb264],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_249),
            StorageDead(_248),
            StorageDead(_250),
            StorageDead(_247),
            StorageLive(_251),
            StorageLive(_252),
            _252 = &(*_1),
            StorageLive(_253),
            StorageLive(_254),
            _254 = move _243,
            _253 = hir::translate::HirFrame::ClassUnicode(move _254),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:572:58: 572:59 (#0),
                    scope: scope[61],
                },
                kind: drop(_254) -> [return: bb196, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_254),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:572:21: 572:60 (#0),
                    scope: scope[61],
                },
                kind: _251 = hir::translate::TranslatorI::<'_, '_>::push(move _252, move _253) -> [return: bb197, unwind: bb263],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_253),
            StorageDead(_252),
            StorageDead(_251),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:573:17: 573:18 (#0),
                    scope: scope[56],
                },
                kind: drop(_243) -> [return: bb198, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_243),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:573:17: 573:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_225) -> [return: bb199, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_225),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                    scope: scope[55],
                },
                kind: goto -> bb220,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_223),
            StorageDead(_222),
            StorageLive(_255),
            StorageLive(_256),
            StorageLive(_257),
            StorageLive(_258),
            _258 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:574:36: 574:46 (#0),
                    scope: scope[55],
                },
                kind: _257 = hir::translate::TranslatorI::<'_, '_>::pop(move _258) -> [return: bb201, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_258),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:574:36: 574:55 (#0),
                    scope: scope[55],
                },
                kind: _256 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _257) -> [return: bb202, unwind: bb262],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_257),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:574:36: 574:76 (#0),
                    scope: scope[55],
                },
                kind: _255 = hir::translate::HirFrame::unwrap_class_bytes(move _256) -> [return: bb203, unwind: bb261],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_256),
            FakeRead(ForLet(None), _255),
            StorageLive(_259),
            StorageLive(_260),
            StorageLive(_261),
            StorageLive(_262),
            _262 = &(*_1),
            StorageLive(_263),
            StorageLive(_264),
            _264 = &((*(*_220)).0: ast::Span),
            _263 = &(*_264),
            StorageLive(_265),
            _265 = ((*(*_220)).1: bool),
            StorageLive(_266),
            StorageLive(_267),
            _267 = &mut _255,
            _266 = &mut (*_267),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:575:21: 579:22 (#0),
                    scope: scope[62],
                },
                kind: _261 = hir::translate::TranslatorI::<'_, '_>::bytes_fold_and_negate(move _262, move _263, move _265, move _266) -> [return: bb204, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_266),
            StorageDead(_265),
            StorageDead(_263),
            StorageDead(_262),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                    scope: scope[62],
                },
                kind: _260 = <core::result::Result<(), hir::Error> as core::ops::Try>::branch(move _261) -> [return: bb205, unwind: bb259],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_261),
            PlaceMention(_260),
            _268 = discriminant(_260),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                    scope: scope[62],
                },
                kind: switchInt(move _268) -> [0: bb208, 1: bb207, otherwise: bb206],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _260),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                    scope: scope[62],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
                    scope: scope[62],
                },
                kind: falseEdge -> [real: bb209, imaginary: bb208],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_272),
            _272 = ((_260 as Continue).0: ()),
            _259 = _272,
            StorageDead(_272),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:23: 579:24 (#0),
                    scope: scope[62],
                },
                kind: drop(_260) -> [return: bb211, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_269),
            _269 = move ((_260 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>),
            StorageLive(_271),
            _271 = move _269,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                    scope: scope[64],
                },
                kind: _0 = <core::result::Result<(), hir::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _271) -> [return: bb210, unwind: bb256],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_271),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
                    scope: scope[62],
                },
                kind: drop(_269) -> [return: bb222, unwind: bb258],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_267),
            StorageDead(_264),
            StorageDead(_260),
            StorageDead(_259),
            StorageLive(_273),
            StorageLive(_274),
            StorageLive(_275),
            StorageLive(_276),
            _276 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:581:36: 581:46 (#0),
                    scope: scope[62],
                },
                kind: _275 = hir::translate::TranslatorI::<'_, '_>::pop(move _276) -> [return: bb212, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_276),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:581:36: 581:55 (#0),
                    scope: scope[62],
                },
                kind: _274 = core::option::Option::<hir::translate::HirFrame>::unwrap(move _275) -> [return: bb213, unwind: bb255],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_275),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:581:36: 581:76 (#0),
                    scope: scope[62],
                },
                kind: _273 = hir::translate::HirFrame::unwrap_class_bytes(move _274) -> [return: bb214, unwind: bb254],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_274),
            FakeRead(ForLet(None), _273),
            StorageLive(_277),
            StorageLive(_278),
            _278 = &mut _273,
            StorageLive(_279),
            StorageLive(_280),
            _280 = &_255,
            _279 = &(*_280),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:582:21: 582:38 (#0),
                    scope: scope[67],
                },
                kind: _277 = hir::ClassBytes::union(move _278, move _279) -> [return: bb215, unwind: bb253],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_279),
            StorageDead(_278),
            StorageDead(_280),
            StorageDead(_277),
            StorageLive(_281),
            StorageLive(_282),
            _282 = &(*_1),
            StorageLive(_283),
            StorageLive(_284),
            _284 = move _273,
            _283 = hir::translate::HirFrame::ClassBytes(move _284),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:583:56: 583:57 (#0),
                    scope: scope[67],
                },
                kind: drop(_284) -> [return: bb216, unwind: bb252],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_284),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:583:21: 583:58 (#0),
                    scope: scope[67],
                },
                kind: _281 = hir::translate::TranslatorI::<'_, '_>::push(move _282, move _283) -> [return: bb217, unwind: bb252],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_283),
            StorageDead(_282),
            StorageDead(_281),
            _3 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:584:17: 584:18 (#0),
                    scope: scope[62],
                },
                kind: drop(_273) -> [return: bb218, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_273),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:584:17: 584:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_255) -> [return: bb219, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                    scope: scope[55],
                },
                kind: goto -> bb220,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_221),
            StorageDead(_220),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:585:13: 585:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb221,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_285),
            _285 = (),
            _0 = core::result::Result::<(), hir::Error>::Ok(move _285),
            StorageDead(_285),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:590:6: 590:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb251,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_269),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:23: 579:24 (#0),
                    scope: scope[62],
                },
                kind: drop(_260) -> [return: bb223, unwind: bb260],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_267),
            StorageDead(_264),
            StorageDead(_260),
            StorageDead(_259),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:584:17: 584:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_255) -> [return: bb224, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_255),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[55],
                },
                kind: goto -> bb228,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_239),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:23: 568:24 (#0),
                    scope: scope[56],
                },
                kind: drop(_230) -> [return: bb226, unwind: bb271],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_237),
            StorageDead(_234),
            StorageDead(_230),
            StorageDead(_229),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:573:17: 573:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_225) -> [return: bb227, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_225),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[55],
                },
                kind: goto -> bb228,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_221),
            StorageDead(_220),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_204),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:60: 555:61 (#0),
                    scope: scope[42],
                },
                kind: drop(_199) -> [return: bb230, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_199),
            StorageDead(_198),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[42],
                },
                kind: goto -> bb233,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_182),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:63: 550:64 (#0),
                    scope: scope[42],
                },
                kind: drop(_177) -> [return: bb232, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_177),
            StorageDead(_176),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[42],
                },
                kind: goto -> bb233,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_172),
            StorageDead(_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:54: 543:55 (#0),
                    scope: scope[35],
                },
                kind: drop(_150) -> [return: bb235, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_150),
            StorageDead(_149),
            StorageDead(_148),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:61: 536:62 (#0),
                    scope: scope[22],
                },
                kind: drop(_127) -> [return: bb237, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
            StorageDead(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[22],
                },
                kind: goto -> bb240,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:64: 531:65 (#0),
                    scope: scope[22],
                },
                kind: drop(_105) -> [return: bb239, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_104),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[22],
                },
                kind: goto -> bb240,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_99),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:63: 524:64 (#0),
                    scope: scope[12],
                },
                kind: drop(_80) -> [return: bb242, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_80),
            StorageDead(_79),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[12],
                },
                kind: goto -> bb245,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:67: 523:68 (#0),
                    scope: scope[11],
                },
                kind: drop(_69) -> [return: bb244, unwind: bb328],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_69),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[11],
                },
                kind: goto -> bb245,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_68),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:527:17: 527:18 (#0),
                    scope: scope[9],
                },
                kind: drop(_64) -> [return: bb246, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
            StorageDead(_47),
            StorageDead(_46),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:59: 511:60 (#0),
                    scope: scope[3],
                },
                kind: drop(_28) -> [return: bb248, unwind: bb340],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:514:17: 514:18 (#0),
                    scope: scope[1],
                },
                kind: drop(_23) -> [return: bb249, unwind: bb347],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb250,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:590:6: 590:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb251,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:590:6: 590:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:583:57: 583:58 (#0),
                    scope: scope[67],
                },
                kind: drop(_283) -> [return: bb253, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:584:17: 584:18 (#0),
                    scope: scope[62],
                },
                kind: drop(_273) -> [return: bb260, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:581:75: 581:76 (#0),
                    scope: scope[62],
                },
                kind: drop(_274) -> [return: bb260, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:581:54: 581:55 (#0),
                    scope: scope[62],
                },
                kind: drop(_275) -> [return: bb260, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1575),
                    scope: scope[64],
                },
                kind: drop(_271) -> [return: bb257, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
                    scope: scope[62],
                },
                kind: drop(_269) -> [return: bb258, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:23: 579:24 (#0),
                    scope: scope[62],
                },
                kind: drop(_260) -> [return: bb260, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1575),
                    scope: scope[62],
                },
                kind: drop(_261) -> [return: bb260, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:584:17: 584:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_255) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:574:75: 574:76 (#0),
                    scope: scope[55],
                },
                kind: drop(_256) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:574:54: 574:55 (#0),
                    scope: scope[55],
                },
                kind: drop(_257) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:572:59: 572:60 (#0),
                    scope: scope[61],
                },
                kind: drop(_253) -> [return: bb264, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:573:17: 573:18 (#0),
                    scope: scope[56],
                },
                kind: drop(_243) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:570:77: 570:78 (#0),
                    scope: scope[56],
                },
                kind: drop(_244) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:570:54: 570:55 (#0),
                    scope: scope[56],
                },
                kind: drop(_245) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1573),
                    scope: scope[58],
                },
                kind: drop(_241) -> [return: bb268, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
                    scope: scope[56],
                },
                kind: drop(_239) -> [return: bb269, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:23: 568:24 (#0),
                    scope: scope[56],
                },
                kind: drop(_230) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1573),
                    scope: scope[56],
                },
                kind: drop(_231) -> [return: bb271, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:573:17: 573:18 (#0),
                    scope: scope[55],
                },
                kind: drop(_225) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:563:77: 563:78 (#0),
                    scope: scope[55],
                },
                kind: drop(_226) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:563:54: 563:55 (#0),
                    scope: scope[55],
                },
                kind: drop(_227) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:558:56: 558:57 (#0),
                    scope: scope[54],
                },
                kind: drop(_218) -> [return: bb275, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:559:17: 559:18 (#0),
                    scope: scope[49],
                },
                kind: drop(_208) -> [return: bb278, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:556:74: 556:75 (#0),
                    scope: scope[49],
                },
                kind: drop(_209) -> [return: bb278, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:556:53: 556:54 (#0),
                    scope: scope[49],
                },
                kind: drop(_210) -> [return: bb278, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:559:17: 559:18 (#0),
                    scope: scope[42],
                },
                kind: drop(_198) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1570),
                    scope: scope[51],
                },
                kind: drop(_206) -> [return: bb280, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
                    scope: scope[42],
                },
                kind: drop(_204) -> [return: bb281, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:60: 555:61 (#0),
                    scope: scope[42],
                },
                kind: drop(_199) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1570),
                    scope: scope[42],
                },
                kind: drop(_200) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:553:58: 553:59 (#0),
                    scope: scope[48],
                },
                kind: drop(_196) -> [return: bb284, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:554:17: 554:18 (#0),
                    scope: scope[43],
                },
                kind: drop(_186) -> [return: bb287, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:551:76: 551:77 (#0),
                    scope: scope[43],
                },
                kind: drop(_187) -> [return: bb287, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:551:53: 551:54 (#0),
                    scope: scope[43],
                },
                kind: drop(_188) -> [return: bb287, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:554:17: 554:18 (#0),
                    scope: scope[42],
                },
                kind: drop(_176) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1568),
                    scope: scope[45],
                },
                kind: drop(_184) -> [return: bb289, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
                    scope: scope[42],
                },
                kind: drop(_182) -> [return: bb290, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:63: 550:64 (#0),
                    scope: scope[42],
                },
                kind: drop(_177) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1568),
                    scope: scope[42],
                },
                kind: drop(_178) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:546:54: 546:55 (#0),
                    scope: scope[41],
                },
                kind: drop(_169) -> [return: bb293, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:547:13: 547:14 (#0),
                    scope: scope[36],
                },
                kind: drop(_159) -> [return: bb296, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:544:72: 544:73 (#0),
                    scope: scope[36],
                },
                kind: drop(_160) -> [return: bb296, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:544:49: 544:50 (#0),
                    scope: scope[36],
                },
                kind: drop(_161) -> [return: bb296, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:547:13: 547:14 (#0),
                    scope: scope[35],
                },
                kind: drop(_149) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1565),
                    scope: scope[38],
                },
                kind: drop(_157) -> [return: bb298, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
                    scope: scope[35],
                },
                kind: drop(_155) -> [return: bb299, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:54: 543:55 (#0),
                    scope: scope[35],
                },
                kind: drop(_150) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1565),
                    scope: scope[35],
                },
                kind: drop(_151) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:539:56: 539:57 (#0),
                    scope: scope[34],
                },
                kind: drop(_146) -> [return: bb302, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:540:17: 540:18 (#0),
                    scope: scope[29],
                },
                kind: drop(_136) -> [return: bb305, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:537:74: 537:75 (#0),
                    scope: scope[29],
                },
                kind: drop(_137) -> [return: bb305, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:537:53: 537:54 (#0),
                    scope: scope[29],
                },
                kind: drop(_138) -> [return: bb305, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:540:17: 540:18 (#0),
                    scope: scope[22],
                },
                kind: drop(_126) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1563),
                    scope: scope[31],
                },
                kind: drop(_134) -> [return: bb307, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
                    scope: scope[22],
                },
                kind: drop(_132) -> [return: bb308, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:61: 536:62 (#0),
                    scope: scope[22],
                },
                kind: drop(_127) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1563),
                    scope: scope[22],
                },
                kind: drop(_128) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:534:58: 534:59 (#0),
                    scope: scope[28],
                },
                kind: drop(_124) -> [return: bb311, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:535:17: 535:18 (#0),
                    scope: scope[23],
                },
                kind: drop(_114) -> [return: bb314, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:532:76: 532:77 (#0),
                    scope: scope[23],
                },
                kind: drop(_115) -> [return: bb314, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:532:53: 532:54 (#0),
                    scope: scope[23],
                },
                kind: drop(_116) -> [return: bb314, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:535:17: 535:18 (#0),
                    scope: scope[22],
                },
                kind: drop(_104) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1561),
                    scope: scope[25],
                },
                kind: drop(_112) -> [return: bb316, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
                    scope: scope[22],
                },
                kind: drop(_110) -> [return: bb317, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:64: 531:65 (#0),
                    scope: scope[22],
                },
                kind: drop(_105) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1561),
                    scope: scope[22],
                },
                kind: drop(_106) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:526:56: 526:57 (#0),
                    scope: scope[17],
                },
                kind: drop(_97) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1558),
                    scope: scope[19],
                },
                kind: drop(_88) -> [return: bb321, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
                    scope: scope[12],
                },
                kind: drop(_86) -> [return: bb322, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:63: 524:64 (#0),
                    scope: scope[12],
                },
                kind: drop(_80) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1558),
                    scope: scope[12],
                },
                kind: drop(_81) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1556),
                    scope: scope[14],
                },
                kind: drop(_77) -> [return: bb325, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
                    scope: scope[11],
                },
                kind: drop(_75) -> [return: bb326, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:67: 523:68 (#0),
                    scope: scope[11],
                },
                kind: drop(_69) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1556),
                    scope: scope[11],
                },
                kind: drop(_70) -> [return: bb328, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:527:17: 527:18 (#0),
                    scope: scope[9],
                },
                kind: drop(_64) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:522:74: 522:75 (#0),
                    scope: scope[9],
                },
                kind: drop(_65) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:522:53: 522:54 (#0),
                    scope: scope[9],
                },
                kind: drop(_66) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:520:58: 520:59 (#0),
                    scope: scope[10],
                },
                kind: drop(_62) -> [return: bb332, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:521:17: 521:18 (#0),
                    scope: scope[9],
                },
                kind: drop(_51) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:518:76: 518:77 (#0),
                    scope: scope[9],
                },
                kind: drop(_52) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:518:53: 518:54 (#0),
                    scope: scope[9],
                },
                kind: drop(_53) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:513:56: 513:57 (#0),
                    scope: scope[4],
                },
                kind: drop(_44) -> [return: bb340, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1553),
                    scope: scope[6],
                },
                kind: drop(_35) -> [return: bb337, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
                    scope: scope[3],
                },
                kind: drop(_33) -> [return: bb338, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:59: 511:60 (#0),
                    scope: scope[3],
                },
                kind: drop(_28) -> [return: bb340, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1553),
                    scope: scope[3],
                },
                kind: drop(_29) -> [return: bb340, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:514:17: 514:18 (#0),
                    scope: scope[1],
                },
                kind: drop(_23) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:510:74: 510:75 (#0),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:510:53: 510:54 (#0),
                    scope: scope[1],
                },
                kind: drop(_25) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:508:58: 508:59 (#0),
                    scope: scope[2],
                },
                kind: drop(_21) -> [return: bb344, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:509:17: 509:18 (#0),
                    scope: scope[1],
                },
                kind: drop(_10) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:506:76: 506:77 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:506:53: 506:54 (#0),
                    scope: scope[1],
                },
                kind: drop(_12) -> [return: bb347, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:498:5: 590:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:501:10: 501:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:499:9: 499:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/hir/translate.rs:500:14: 500:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:500:9: 500:12 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:500:9: 500:12 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassSetItem,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:500:9: 500:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:502:9: 588:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:503:13: 503:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:504:13: 504:46 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:504:40: 504:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:505:20: 505:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:505:20: 505:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                },
            ),
        ),
        ty: hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:505:20: 505:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:505:17: 514:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:505:20: 505:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:506:35: 506:77 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:506:25: 506:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:506:25: 506:32 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:506:35: 506:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:506:35: 506:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:506:35: 506:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:507:21: 507:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:507:21: 507:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:507:30: 507:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:507:58: 507:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:507:63: 507:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:508:21: 508:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:508:21: 508:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:508:31: 508:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:508:54: 508:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:510:35: 510:75 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:510:25: 510:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:510:25: 510:32 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:510:35: 510:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:510:35: 510:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:510:35: 510:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:511:32: 511:59 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:511:25: 511:29 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:25: 511:29 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:32: 511:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:32: 511:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:56: 511:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _28,
                                ),
                                regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:58: 511:59 (#1554),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _28,
                                ),
                                regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#1553),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:511:32: 511:59 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:512:21: 512:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:512:21: 512:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::ClassBytesRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:512:30: 512:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:512:56: 512:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:512:62: 512:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:513:21: 513:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:513:21: 513:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:513:31: 513:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:513:52: 513:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:516:13: 516:44 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassSetRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:516:38: 516:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:517:20: 517:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:517:20: 517:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                },
            ),
        ),
        ty: hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:517:20: 517:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:517:17: 527:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:517:20: 517:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:518:35: 518:77 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:518:25: 518:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:518:25: 518:32 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:518:35: 518:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:518:35: 518:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:518:35: 518:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:519:21: 519:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:519:21: 519:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::ClassUnicodeRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:519:30: 519:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:519:58: 519:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:519:69: 519:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:520:21: 520:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:520:21: 520:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:520:31: 520:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:520:54: 520:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:522:35: 522:75 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:522:25: 522:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:522:25: 522:32 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:522:35: 522:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:522:35: 522:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:522:35: 522:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:523:33: 523:67 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:523:25: 523:30 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:25: 523:30 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:33: 523:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:33: 523:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:57: 523:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:57: 523:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _69,
                                ),
                                regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:66: 523:67 (#1557),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _69,
                                ),
                                regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#1556),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:523:33: 523:67 (#0),
            scope: scope[11],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:524:31: 524:63 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:524:25: 524:28 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:25: 524:28 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:31: 524:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:31: 524:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:55: 524:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Literal,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:55: 524:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _80,
                                ),
                                regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:62: 524:63 (#1559),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _80,
                                ),
                                regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#1558),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:524:31: 524:63 (#0),
            scope: scope[12],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:525:21: 525:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:525:21: 525:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::ClassBytesRange,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:525:30: 525:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:525:56: 525:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:525:63: 525:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:526:21: 526:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:526:21: 526:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:526:31: 526:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:526:52: 526:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:529:13: 529:44 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassAscii,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:529:38: 529:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:530:20: 530:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:530:20: 530:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                },
            ),
        ),
        ty: hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:530:20: 530:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:530:17: 540:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:530:20: 530:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:531:32: 531:64 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:531:25: 531:29 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:25: 531:29 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassUnicode>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<hir::ClassUnicode, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:32: 531:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:32: 531:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::ClassAscii,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:61: 531:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _105,
                                ),
                                regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:63: 531:64 (#1562),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _105,
                                ),
                                regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#1561),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:531:32: 531:64 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:532:35: 532:77 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:532:25: 532:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:532:25: 532:32 (#0),
            scope: scope[23],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:532:35: 532:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:532:35: 532:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:532:35: 532:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:533:21: 533:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:533:21: 533:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:533:31: 533:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:533:31: 533:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:534:21: 534:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:534:21: 534:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:534:31: 534:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:534:54: 534:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:536:32: 536:61 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:536:25: 536:29 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:25: 536:29 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassBytes>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<hir::ClassBytes, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:32: 536:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:32: 536:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::ClassAscii,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:58: 536:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _127,
                                ),
                                regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:60: 536:61 (#1564),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _127,
                                ),
                                regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#1563),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:536:32: 536:61 (#0),
            scope: scope[22],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:537:35: 537:75 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:537:25: 537:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:537:25: 537:32 (#0),
            scope: scope[29],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:537:35: 537:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:537:35: 537:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:537:35: 537:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:538:21: 538:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:538:21: 538:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:538:31: 538:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:538:31: 538:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:539:21: 539:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:539:21: 539:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:539:31: 539:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:539:52: 539:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:542:13: 542:46 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:542:40: 542:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:543:28: 543:54 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:543:21: 543:25 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:21: 543:25 (#0),
            scope: scope[35],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassUnicode>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<hir::ClassUnicode, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:28: 543:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:28: 543:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:51: 543:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _150,
                                ),
                                regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
            scope: scope[35],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:53: 543:54 (#1566),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _150,
                                ),
                                regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#1565),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:543:28: 543:54 (#0),
            scope: scope[35],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:544:31: 544:73 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:544:21: 544:28 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:544:21: 544:28 (#0),
            scope: scope[36],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:544:31: 544:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:544:31: 544:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:544:31: 544:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:545:17: 545:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:545:17: 545:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:545:27: 545:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:545:27: 545:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:546:17: 546:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:546:17: 546:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:546:27: 546:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:546:50: 546:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:548:13: 548:43 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassPerl,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:548:37: 548:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:549:20: 549:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:549:20: 549:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                },
            ),
        ),
        ty: hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:549:20: 549:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:549:17: 559:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:549:20: 549:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:550:32: 550:63 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:550:25: 550:29 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:25: 550:29 (#0),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassUnicode>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<hir::ClassUnicode, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:32: 550:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:32: 550:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::ClassPerl,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:60: 550:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _177,
                                ),
                                regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:62: 550:63 (#1569),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _177,
                                ),
                                regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#1568),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:550:32: 550:63 (#0),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:551:35: 551:77 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:551:25: 551:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:551:25: 551:32 (#0),
            scope: scope[43],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:551:35: 551:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:551:35: 551:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:551:35: 551:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:552:21: 552:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:552:21: 552:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:552:31: 552:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:552:31: 552:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:553:21: 553:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:553:21: 553:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:553:31: 553:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:553:54: 553:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:555:32: 555:60 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:555:25: 555:29 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:25: 555:29 (#0),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, hir::ClassBytes>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<hir::ClassBytes, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:32: 555:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:32: 555:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::ClassPerl,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:57: 555:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _199,
                                ),
                                regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:59: 555:60 (#1571),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _199,
                                ),
                                regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#1570),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:555:32: 555:60 (#0),
            scope: scope[42],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:556:35: 556:75 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:556:25: 556:32 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:556:25: 556:32 (#0),
            scope: scope[49],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:556:35: 556:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:556:35: 556:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:556:35: 556:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:557:21: 557:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:557:21: 557:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:557:31: 557:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:557:31: 557:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:558:21: 558:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:558:21: 558:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:558:31: 558:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:558:52: 558:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_2),
                                ),
                                regex-syntax/src/hir/translate.rs:502:15: 502:19 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:561:13: 561:50 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} std::boxed::Box<ast::ClassBracketed, std::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:561:42: 561:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:562:20: 562:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:562:20: 562:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                },
            ),
        ),
        ty: hir::translate::Flags,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:562:20: 562:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: regex-syntax/src/hir/translate.rs:562:17: 584:18 (#0),
                },
            ),
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:562:20: 562:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:563:36: 563:78 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:563:25: 563:33 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:563:25: 563:33 (#0),
            scope: scope[55],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:563:36: 563:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:563:36: 563:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:563:36: 563:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:564:21: 568:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:564:21: 564:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:565:25: 565:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:565:25: 565:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:566:25: 566:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:567:25: 567:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:567:25: 567:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _230,
                                ),
                                regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
            scope: scope[56],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:568:22: 568:23 (#1574),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _230,
                                ),
                                regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#1573),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:564:21: 568:23 (#0),
            scope: scope[56],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:570:36: 570:78 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:570:25: 570:33 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:570:25: 570:33 (#0),
            scope: scope[56],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:570:36: 570:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:570:36: 570:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:570:36: 570:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:571:21: 571:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:571:21: 571:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:571:32: 571:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:571:32: 571:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:572:21: 572:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:572:21: 572:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:572:31: 572:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassUnicode,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:572:54: 572:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:574:36: 574:76 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:574:25: 574:33 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:574:25: 574:33 (#0),
            scope: scope[55],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:574:36: 574:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:574:36: 574:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:574:36: 574:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, hir::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:575:21: 579:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:575:21: 575:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:576:25: 576:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} ast::Span,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:576:25: 576:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:577:25: 577:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:578:25: 578:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:578:25: 578:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _260,
                                ),
                                regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
            scope: scope[62],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, hir::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:579:22: 579:23 (#1576),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _260,
                                ),
                                regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#1575),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:575:21: 579:23 (#0),
            scope: scope[62],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:581:36: 581:76 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:581:25: 581:33 (#0),
                    },
                ),
            ),
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:581:25: 581:33 (#0),
            scope: scope[62],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:581:36: 581:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<hir::translate::HirFrame>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:581:36: 581:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:581:36: 581:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:582:21: 582:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:582:21: 582:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:582:32: 582:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:582:32: 582:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:583:21: 583:58 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} hir::translate::TranslatorI<'{erased}, '{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:583:21: 583:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: hir::translate::HirFrame,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:583:31: 583:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: hir::ClassBytes,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:583:52: 583:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:589:12: 589:14 (#0),
            scope: scope[0],
        },
    },
]