[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = (),
            _0 = core::result::Result::<(), <Self as hir::visitor::Visitor>::Err>::Ok(move _2),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/visitor.rs:43:6: 43:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), Alias(Projection, AliasTy { args: [Self/#0], def_id: DefId(0:883 ~ regex_syntax[a00b]::hir::visitor::Visitor::Err) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/visitor.rs:41:43: 41:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/visitor.rs:41:29: 41:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/visitor.rs:42:12: 42:14 (#0),
            scope: scope[0],
        },
    },
]