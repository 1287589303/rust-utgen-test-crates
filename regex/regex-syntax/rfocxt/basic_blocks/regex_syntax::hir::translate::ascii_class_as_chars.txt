[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1355:5: 1355:22 (#0),
                    scope: scope[0],
                },
                kind: _2 = hir::translate::ascii_class(move _3) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
            _4 = {closure@regex-syntax/src/hir/translate.rs:1355:27: 1355:35},
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1355:5: 1355:67 (#0),
                    scope: scope[0],
                },
                kind: _0 = <impl core::iter::Iterator<Item = (u8, u8)> as core::iter::Iterator>::map::<(char, char), {closure@regex-syntax/src/hir/translate.rs:1355:27: 1355:35}>(move _2, move _4) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1356:2: 1356:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1355:66: 1355:67 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-syntax/src/hir/translate.rs:1352:1: 1356:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [],
                def_id: DefId(0:3878 ~ regex_syntax[a00b]::hir::translate::ascii_class_as_chars::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1354:6: 1354:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-syntax/src/hir/translate.rs:1353:11: 1353:31 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-syntax/src/hir/translate.rs:1353:5: 1353:9 (#0),
                            ),
                        ),
                        pat_span: regex-syntax/src/hir/translate.rs:1353:5: 1353:9 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} ast::ClassAsciiKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1353:5: 1353:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/translate.rs:1355:5: 1355:67 (#0),
                },
            ),
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [],
                def_id: DefId(0:3876 ~ regex_syntax[a00b]::hir::translate::ascii_class::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1355:5: 1355:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/translate.rs:1355:5: 1355:67 (#0),
                },
            ),
        ),
        ty: &'{erased} ast::ClassAsciiKind,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1355:17: 1355:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-syntax/src/hir/translate.rs:1355:5: 1355:67 (#0),
                },
            ),
        ),
        ty: Closure(
            DefId(0:872 ~ regex_syntax[a00b]::hir::translate::ascii_class_as_chars::{closure#0}),
            [
                i16,
                Binder { value: extern "RustCall" fn(((u8, u8),)) -> (char, char), bound_vars: [] },
                (),
            ],
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-syntax/src/hir/translate.rs:1355:27: 1355:66 (#0),
            scope: scope[0],
        },
    },
]