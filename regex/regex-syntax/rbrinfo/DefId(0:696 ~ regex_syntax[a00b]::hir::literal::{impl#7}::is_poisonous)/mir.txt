bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:24)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:13)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:24)
      kind: _2 = hir::literal::Literal::is_empty(move _3) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:24)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:23-2152:24)
  1: _0 = const true
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:80)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:80)
      kind: goto -> bb11
  }
  preds [bb1]
  succs [bb11]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:23-2152:24)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:44)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:39)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:33)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:39)
      kind: _5 = hir::literal::Literal::len(move _6) -> [return: bb4, unwind: bb12]
  }
  preds [bb1]
  succs [bb4, bb12]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:38-2152:39)
  1: _4 = Eq(move _5, const 1_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:29-2152:44)
      kind: switchInt(move _4) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:43-2152:44)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:48-2152:72)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:71)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:68)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:57)
  5: _10 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:68)
      kind: _9 = hir::literal::Literal::as_bytes(move _10) -> [return: bb7, unwind: bb12]
  }
  preds [bb4]
  succs [bb7, bb12]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:43-2152:44)
  1: _0 = const false
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:28-2152:80)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:28-2152:80)
      kind: goto -> bb10
  }
  preds [bb4]
  succs [bb10]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:67-2152:68)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:69-2152:70)
  2: _11 = const 0_usize
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:69-2152:70)
  3: _12 = Len((*_9))
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:71)
  4: _13 = Lt(_11, _12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:71)
      kind: assert(move _13, "index out of bounds: the length is {} but the index is {}", move _12, _11) -> [success: bb8, unwind: bb12]
  }
  preds [bb5]
  succs [bb8, bb12]

bb8
  0: _8 = (*_9)[_11]
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:53-2152:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:48-2152:72)
      kind: _7 = hir::literal::rank(move _8) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:71-2152:72)
  1: _0 = Ge(move _7, const 250_u8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:48-2152:79)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:78-2152:79)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:78-2152:79)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:78-2152:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:28-2152:80)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:79-2152:80)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2152:9-2152:80)
      kind: goto -> bb11
  }
  preds [bb6, bb9]
  succs [bb11]

bb11
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:2152:79-2152:80)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2153:6-2153:6)
      kind: return
  }
  preds [bb2, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2151:5-2153:6)
      kind: resume
  }
  preds [bb0, bb3, bb5, bb7, bb8]
  succs []

