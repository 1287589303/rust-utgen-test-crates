bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/utf8.rs:114:20-114:31)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/utf8.rs:114:20-114:25)
  5: _7 = &(*_1)
    SourceInfo(regex-syntax/src/utf8.rs:114:20-114:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:114:20-114:31)
      kind: _6 = core::slice::<impl [u8]>::len(move _7) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/utf8.rs:114:30-114:31)
  1: _5 = &_6
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/utf8.rs:114:33-114:42)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/utf8.rs:114:33-114:36)
  5: _10 = &(*_2)
    SourceInfo(regex-syntax/src/utf8.rs:114:33-114:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:114:33-114:42)
      kind: _9 = core::slice::<impl [u8]>::len(move _10) -> [return: bb2, unwind: bb43]
  }
  preds [bb0]
  succs [bb2, bb43]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/utf8.rs:114:41-114:42)
  1: _8 = &_9
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  2: _4 = (move _5, move _8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  3: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  4: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  5: PlaceMention(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  6: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  7: _11 = (_4.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  8: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  9: _12 = (_4.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  10: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  11: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  12: _14 = (*_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  13: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  14: _15 = (*_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  15: _13 = Eq(move _14, move _15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _13) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_25)
    SourceInfo(regex-syntax/src/utf8.rs:115:15-115:26)
  11: StorageLive(_26)
    SourceInfo(regex-syntax/src/utf8.rs:115:15-115:20)
  12: _26 = &(*_1)
    SourceInfo(regex-syntax/src/utf8.rs:115:15-115:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:115:15-115:26)
      kind: _25 = core::slice::<impl [u8]>::len(move _26) -> [return: bb5, unwind: bb43]
  }
  preds [bb2]
  succs [bb5, bb43]

bb4
  0: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _17 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _19 = move _17
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _21 = &(*_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _20 = &(*_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _23 = &(*_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _22 = &(*_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _24 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _18 = core::panicking::assert_failed::<usize, usize>(move _19, move _20, move _22, move _24) -> bb43
  }
  preds [bb2]
  succs [bb43]

bb5
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/utf8.rs:115:25-115:26)
  1: PlaceMention(_25)
    SourceInfo(regex-syntax/src/utf8.rs:115:15-115:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:115:9-115:26)
      kind: switchInt(_25) -> [2: bb7, 3: bb8, 4: bb9, otherwise: bb6]
  }
  preds [bb3]
  succs [bb6, bb7, bb8, bb9]

bb6
  0: StorageLive(_111)
    SourceInfo(regex-syntax/src/utf8.rs:131:13-131:14)
  1: _111 = _25
    SourceInfo(regex-syntax/src/utf8.rs:131:13-131:14)
  2: StorageLive(_113)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_114)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_115)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: StorageLive(_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: StorageLive(_117)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _117 = [const "internal error: entered unreachable code: invalid encoded length: "]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: _116 = &_117
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  9: _115 = &(*_116)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  10: StorageLive(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_120)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_121)
    SourceInfo(regex-syntax/src/utf8.rs:131:56-131:58)
  14: StorageLive(_122)
    SourceInfo(regex-syntax/src/utf8.rs:131:61-131:62)
  15: StorageLive(_123)
    SourceInfo(regex-syntax/src/utf8.rs:131:61-131:62)
  16: _123 = &_111
    SourceInfo(regex-syntax/src/utf8.rs:131:61-131:62)
  17: _122 = &(*_123)
    SourceInfo(regex-syntax/src/utf8.rs:131:61-131:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:131:56-131:58)
      kind: _121 = core::fmt::rt::Argument::<'_>::new_display::<usize>(move _122) -> [return: bb40, unwind: bb43]
  }
  preds [bb5, bb9]
  succs [bb40, bb43]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:116:13-116:14)
      kind: falseEdge -> [real: bb10, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb10]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:120:13-120:14)
      kind: falseEdge -> [real: bb17, imaginary: bb9]
  }
  preds [bb5, bb7]
  succs [bb9, bb17]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:125:13-125:14)
      kind: falseEdge -> [real: bb27, imaginary: bb6]
  }
  preds [bb5, bb8]
  succs [bb6, bb27]

bb10
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/utf8.rs:116:36-119:14)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/utf8.rs:117:17-117:49)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/utf8.rs:117:32-117:40)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/utf8.rs:117:38-117:39)
  4: _30 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:117:38-117:39)
  5: _31 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:117:32-117:40)
  6: _32 = Lt(_30, _31)
    SourceInfo(regex-syntax/src/utf8.rs:117:32-117:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:117:32-117:40)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> [success: bb11, unwind: bb43]
  }
  preds [bb7]
  succs [bb11, bb43]

bb11
  0: _29 = (*_1)[_30]
    SourceInfo(regex-syntax/src/utf8.rs:117:32-117:40)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/utf8.rs:117:42-117:48)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/utf8.rs:117:46-117:47)
  3: _34 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:117:46-117:47)
  4: _35 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:117:42-117:48)
  5: _36 = Lt(_34, _35)
    SourceInfo(regex-syntax/src/utf8.rs:117:42-117:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:117:42-117:48)
      kind: assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _34) -> [success: bb12, unwind: bb43]
  }
  preds [bb10]
  succs [bb12, bb43]

bb12
  0: _33 = (*_2)[_34]
    SourceInfo(regex-syntax/src/utf8.rs:117:42-117:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:117:17-117:49)
      kind: _28 = utf8::Utf8Range::new(move _29, move _33) -> [return: bb13, unwind: bb43]
  }
  preds [bb11]
  succs [bb13, bb43]

bb13
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/utf8.rs:117:48-117:49)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/utf8.rs:117:48-117:49)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/utf8.rs:118:17-118:49)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/utf8.rs:118:32-118:40)
  4: StorageLive(_39)
    SourceInfo(regex-syntax/src/utf8.rs:118:38-118:39)
  5: _39 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:118:38-118:39)
  6: _40 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:118:32-118:40)
  7: _41 = Lt(_39, _40)
    SourceInfo(regex-syntax/src/utf8.rs:118:32-118:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:118:32-118:40)
      kind: assert(move _41, "index out of bounds: the length is {} but the index is {}", move _40, _39) -> [success: bb14, unwind: bb43]
  }
  preds [bb12]
  succs [bb14, bb43]

bb14
  0: _38 = (*_1)[_39]
    SourceInfo(regex-syntax/src/utf8.rs:118:32-118:40)
  1: StorageLive(_42)
    SourceInfo(regex-syntax/src/utf8.rs:118:42-118:48)
  2: StorageLive(_43)
    SourceInfo(regex-syntax/src/utf8.rs:118:46-118:47)
  3: _43 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:118:46-118:47)
  4: _44 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:118:42-118:48)
  5: _45 = Lt(_43, _44)
    SourceInfo(regex-syntax/src/utf8.rs:118:42-118:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:118:42-118:48)
      kind: assert(move _45, "index out of bounds: the length is {} but the index is {}", move _44, _43) -> [success: bb15, unwind: bb43]
  }
  preds [bb13]
  succs [bb15, bb43]

bb15
  0: _42 = (*_2)[_43]
    SourceInfo(regex-syntax/src/utf8.rs:118:42-118:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:118:17-118:49)
      kind: _37 = utf8::Utf8Range::new(move _38, move _42) -> [return: bb16, unwind: bb43]
  }
  preds [bb14]
  succs [bb16, bb43]

bb16
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/utf8.rs:118:48-118:49)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/utf8.rs:118:48-118:49)
  2: _27 = [move _28, move _37]
    SourceInfo(regex-syntax/src/utf8.rs:116:36-119:14)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/utf8.rs:119:13-119:14)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/utf8.rs:119:13-119:14)
  5: _0 = utf8::Utf8Sequence::Two(move _27)
    SourceInfo(regex-syntax/src/utf8.rs:116:18-119:15)
  6: StorageDead(_27)
    SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
  7: StorageDead(_43)
    SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
  8: StorageDead(_39)
    SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
  9: StorageDead(_34)
    SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
  10: StorageDead(_30)
    SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:119:14-119:15)
      kind: goto -> bb42
  }
  preds [bb15]
  succs [bb42]

bb17
  0: StorageLive(_46)
    SourceInfo(regex-syntax/src/utf8.rs:120:38-124:14)
  1: StorageLive(_47)
    SourceInfo(regex-syntax/src/utf8.rs:121:17-121:49)
  2: StorageLive(_48)
    SourceInfo(regex-syntax/src/utf8.rs:121:32-121:40)
  3: StorageLive(_49)
    SourceInfo(regex-syntax/src/utf8.rs:121:38-121:39)
  4: _49 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:121:38-121:39)
  5: _50 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:121:32-121:40)
  6: _51 = Lt(_49, _50)
    SourceInfo(regex-syntax/src/utf8.rs:121:32-121:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:121:32-121:40)
      kind: assert(move _51, "index out of bounds: the length is {} but the index is {}", move _50, _49) -> [success: bb18, unwind: bb43]
  }
  preds [bb8]
  succs [bb18, bb43]

bb18
  0: _48 = (*_1)[_49]
    SourceInfo(regex-syntax/src/utf8.rs:121:32-121:40)
  1: StorageLive(_52)
    SourceInfo(regex-syntax/src/utf8.rs:121:42-121:48)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/utf8.rs:121:46-121:47)
  3: _53 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:121:46-121:47)
  4: _54 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:121:42-121:48)
  5: _55 = Lt(_53, _54)
    SourceInfo(regex-syntax/src/utf8.rs:121:42-121:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:121:42-121:48)
      kind: assert(move _55, "index out of bounds: the length is {} but the index is {}", move _54, _53) -> [success: bb19, unwind: bb43]
  }
  preds [bb17]
  succs [bb19, bb43]

bb19
  0: _52 = (*_2)[_53]
    SourceInfo(regex-syntax/src/utf8.rs:121:42-121:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:121:17-121:49)
      kind: _47 = utf8::Utf8Range::new(move _48, move _52) -> [return: bb20, unwind: bb43]
  }
  preds [bb18]
  succs [bb20, bb43]

bb20
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/utf8.rs:121:48-121:49)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/utf8.rs:121:48-121:49)
  2: StorageLive(_56)
    SourceInfo(regex-syntax/src/utf8.rs:122:17-122:49)
  3: StorageLive(_57)
    SourceInfo(regex-syntax/src/utf8.rs:122:32-122:40)
  4: StorageLive(_58)
    SourceInfo(regex-syntax/src/utf8.rs:122:38-122:39)
  5: _58 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:122:38-122:39)
  6: _59 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:122:32-122:40)
  7: _60 = Lt(_58, _59)
    SourceInfo(regex-syntax/src/utf8.rs:122:32-122:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:122:32-122:40)
      kind: assert(move _60, "index out of bounds: the length is {} but the index is {}", move _59, _58) -> [success: bb21, unwind: bb43]
  }
  preds [bb19]
  succs [bb21, bb43]

bb21
  0: _57 = (*_1)[_58]
    SourceInfo(regex-syntax/src/utf8.rs:122:32-122:40)
  1: StorageLive(_61)
    SourceInfo(regex-syntax/src/utf8.rs:122:42-122:48)
  2: StorageLive(_62)
    SourceInfo(regex-syntax/src/utf8.rs:122:46-122:47)
  3: _62 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:122:46-122:47)
  4: _63 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:122:42-122:48)
  5: _64 = Lt(_62, _63)
    SourceInfo(regex-syntax/src/utf8.rs:122:42-122:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:122:42-122:48)
      kind: assert(move _64, "index out of bounds: the length is {} but the index is {}", move _63, _62) -> [success: bb22, unwind: bb43]
  }
  preds [bb20]
  succs [bb22, bb43]

bb22
  0: _61 = (*_2)[_62]
    SourceInfo(regex-syntax/src/utf8.rs:122:42-122:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:122:17-122:49)
      kind: _56 = utf8::Utf8Range::new(move _57, move _61) -> [return: bb23, unwind: bb43]
  }
  preds [bb21]
  succs [bb23, bb43]

bb23
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/utf8.rs:122:48-122:49)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/utf8.rs:122:48-122:49)
  2: StorageLive(_65)
    SourceInfo(regex-syntax/src/utf8.rs:123:17-123:49)
  3: StorageLive(_66)
    SourceInfo(regex-syntax/src/utf8.rs:123:32-123:40)
  4: StorageLive(_67)
    SourceInfo(regex-syntax/src/utf8.rs:123:38-123:39)
  5: _67 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:123:38-123:39)
  6: _68 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:123:32-123:40)
  7: _69 = Lt(_67, _68)
    SourceInfo(regex-syntax/src/utf8.rs:123:32-123:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:123:32-123:40)
      kind: assert(move _69, "index out of bounds: the length is {} but the index is {}", move _68, _67) -> [success: bb24, unwind: bb43]
  }
  preds [bb22]
  succs [bb24, bb43]

bb24
  0: _66 = (*_1)[_67]
    SourceInfo(regex-syntax/src/utf8.rs:123:32-123:40)
  1: StorageLive(_70)
    SourceInfo(regex-syntax/src/utf8.rs:123:42-123:48)
  2: StorageLive(_71)
    SourceInfo(regex-syntax/src/utf8.rs:123:46-123:47)
  3: _71 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:123:46-123:47)
  4: _72 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:123:42-123:48)
  5: _73 = Lt(_71, _72)
    SourceInfo(regex-syntax/src/utf8.rs:123:42-123:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:123:42-123:48)
      kind: assert(move _73, "index out of bounds: the length is {} but the index is {}", move _72, _71) -> [success: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: _70 = (*_2)[_71]
    SourceInfo(regex-syntax/src/utf8.rs:123:42-123:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:123:17-123:49)
      kind: _65 = utf8::Utf8Range::new(move _66, move _70) -> [return: bb26, unwind: bb43]
  }
  preds [bb24]
  succs [bb26, bb43]

bb26
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/utf8.rs:123:48-123:49)
  1: StorageDead(_66)
    SourceInfo(regex-syntax/src/utf8.rs:123:48-123:49)
  2: _46 = [move _47, move _56, move _65]
    SourceInfo(regex-syntax/src/utf8.rs:120:38-124:14)
  3: StorageDead(_65)
    SourceInfo(regex-syntax/src/utf8.rs:124:13-124:14)
  4: StorageDead(_56)
    SourceInfo(regex-syntax/src/utf8.rs:124:13-124:14)
  5: StorageDead(_47)
    SourceInfo(regex-syntax/src/utf8.rs:124:13-124:14)
  6: _0 = utf8::Utf8Sequence::Three(move _46)
    SourceInfo(regex-syntax/src/utf8.rs:120:18-124:15)
  7: StorageDead(_46)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  8: StorageDead(_71)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  9: StorageDead(_67)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  10: StorageDead(_62)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  11: StorageDead(_58)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  12: StorageDead(_53)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  13: StorageDead(_49)
    SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:124:14-124:15)
      kind: goto -> bb42
  }
  preds [bb25]
  succs [bb42]

bb27
  0: StorageLive(_74)
    SourceInfo(regex-syntax/src/utf8.rs:125:37-130:14)
  1: StorageLive(_75)
    SourceInfo(regex-syntax/src/utf8.rs:126:17-126:49)
  2: StorageLive(_76)
    SourceInfo(regex-syntax/src/utf8.rs:126:32-126:40)
  3: StorageLive(_77)
    SourceInfo(regex-syntax/src/utf8.rs:126:38-126:39)
  4: _77 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:126:38-126:39)
  5: _78 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:126:32-126:40)
  6: _79 = Lt(_77, _78)
    SourceInfo(regex-syntax/src/utf8.rs:126:32-126:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:126:32-126:40)
      kind: assert(move _79, "index out of bounds: the length is {} but the index is {}", move _78, _77) -> [success: bb28, unwind: bb43]
  }
  preds [bb9]
  succs [bb28, bb43]

bb28
  0: _76 = (*_1)[_77]
    SourceInfo(regex-syntax/src/utf8.rs:126:32-126:40)
  1: StorageLive(_80)
    SourceInfo(regex-syntax/src/utf8.rs:126:42-126:48)
  2: StorageLive(_81)
    SourceInfo(regex-syntax/src/utf8.rs:126:46-126:47)
  3: _81 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:126:46-126:47)
  4: _82 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:126:42-126:48)
  5: _83 = Lt(_81, _82)
    SourceInfo(regex-syntax/src/utf8.rs:126:42-126:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:126:42-126:48)
      kind: assert(move _83, "index out of bounds: the length is {} but the index is {}", move _82, _81) -> [success: bb29, unwind: bb43]
  }
  preds [bb27]
  succs [bb29, bb43]

bb29
  0: _80 = (*_2)[_81]
    SourceInfo(regex-syntax/src/utf8.rs:126:42-126:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:126:17-126:49)
      kind: _75 = utf8::Utf8Range::new(move _76, move _80) -> [return: bb30, unwind: bb43]
  }
  preds [bb28]
  succs [bb30, bb43]

bb30
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/utf8.rs:126:48-126:49)
  1: StorageDead(_76)
    SourceInfo(regex-syntax/src/utf8.rs:126:48-126:49)
  2: StorageLive(_84)
    SourceInfo(regex-syntax/src/utf8.rs:127:17-127:49)
  3: StorageLive(_85)
    SourceInfo(regex-syntax/src/utf8.rs:127:32-127:40)
  4: StorageLive(_86)
    SourceInfo(regex-syntax/src/utf8.rs:127:38-127:39)
  5: _86 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:127:38-127:39)
  6: _87 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:127:32-127:40)
  7: _88 = Lt(_86, _87)
    SourceInfo(regex-syntax/src/utf8.rs:127:32-127:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:127:32-127:40)
      kind: assert(move _88, "index out of bounds: the length is {} but the index is {}", move _87, _86) -> [success: bb31, unwind: bb43]
  }
  preds [bb29]
  succs [bb31, bb43]

bb31
  0: _85 = (*_1)[_86]
    SourceInfo(regex-syntax/src/utf8.rs:127:32-127:40)
  1: StorageLive(_89)
    SourceInfo(regex-syntax/src/utf8.rs:127:42-127:48)
  2: StorageLive(_90)
    SourceInfo(regex-syntax/src/utf8.rs:127:46-127:47)
  3: _90 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:127:46-127:47)
  4: _91 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:127:42-127:48)
  5: _92 = Lt(_90, _91)
    SourceInfo(regex-syntax/src/utf8.rs:127:42-127:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:127:42-127:48)
      kind: assert(move _92, "index out of bounds: the length is {} but the index is {}", move _91, _90) -> [success: bb32, unwind: bb43]
  }
  preds [bb30]
  succs [bb32, bb43]

bb32
  0: _89 = (*_2)[_90]
    SourceInfo(regex-syntax/src/utf8.rs:127:42-127:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:127:17-127:49)
      kind: _84 = utf8::Utf8Range::new(move _85, move _89) -> [return: bb33, unwind: bb43]
  }
  preds [bb31]
  succs [bb33, bb43]

bb33
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/utf8.rs:127:48-127:49)
  1: StorageDead(_85)
    SourceInfo(regex-syntax/src/utf8.rs:127:48-127:49)
  2: StorageLive(_93)
    SourceInfo(regex-syntax/src/utf8.rs:128:17-128:49)
  3: StorageLive(_94)
    SourceInfo(regex-syntax/src/utf8.rs:128:32-128:40)
  4: StorageLive(_95)
    SourceInfo(regex-syntax/src/utf8.rs:128:38-128:39)
  5: _95 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:128:38-128:39)
  6: _96 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:128:32-128:40)
  7: _97 = Lt(_95, _96)
    SourceInfo(regex-syntax/src/utf8.rs:128:32-128:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:128:32-128:40)
      kind: assert(move _97, "index out of bounds: the length is {} but the index is {}", move _96, _95) -> [success: bb34, unwind: bb43]
  }
  preds [bb32]
  succs [bb34, bb43]

bb34
  0: _94 = (*_1)[_95]
    SourceInfo(regex-syntax/src/utf8.rs:128:32-128:40)
  1: StorageLive(_98)
    SourceInfo(regex-syntax/src/utf8.rs:128:42-128:48)
  2: StorageLive(_99)
    SourceInfo(regex-syntax/src/utf8.rs:128:46-128:47)
  3: _99 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:128:46-128:47)
  4: _100 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:128:42-128:48)
  5: _101 = Lt(_99, _100)
    SourceInfo(regex-syntax/src/utf8.rs:128:42-128:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:128:42-128:48)
      kind: assert(move _101, "index out of bounds: the length is {} but the index is {}", move _100, _99) -> [success: bb35, unwind: bb43]
  }
  preds [bb33]
  succs [bb35, bb43]

bb35
  0: _98 = (*_2)[_99]
    SourceInfo(regex-syntax/src/utf8.rs:128:42-128:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:128:17-128:49)
      kind: _93 = utf8::Utf8Range::new(move _94, move _98) -> [return: bb36, unwind: bb43]
  }
  preds [bb34]
  succs [bb36, bb43]

bb36
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/utf8.rs:128:48-128:49)
  1: StorageDead(_94)
    SourceInfo(regex-syntax/src/utf8.rs:128:48-128:49)
  2: StorageLive(_102)
    SourceInfo(regex-syntax/src/utf8.rs:129:17-129:49)
  3: StorageLive(_103)
    SourceInfo(regex-syntax/src/utf8.rs:129:32-129:40)
  4: StorageLive(_104)
    SourceInfo(regex-syntax/src/utf8.rs:129:38-129:39)
  5: _104 = const 3_usize
    SourceInfo(regex-syntax/src/utf8.rs:129:38-129:39)
  6: _105 = Len((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:129:32-129:40)
  7: _106 = Lt(_104, _105)
    SourceInfo(regex-syntax/src/utf8.rs:129:32-129:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:129:32-129:40)
      kind: assert(move _106, "index out of bounds: the length is {} but the index is {}", move _105, _104) -> [success: bb37, unwind: bb43]
  }
  preds [bb35]
  succs [bb37, bb43]

bb37
  0: _103 = (*_1)[_104]
    SourceInfo(regex-syntax/src/utf8.rs:129:32-129:40)
  1: StorageLive(_107)
    SourceInfo(regex-syntax/src/utf8.rs:129:42-129:48)
  2: StorageLive(_108)
    SourceInfo(regex-syntax/src/utf8.rs:129:46-129:47)
  3: _108 = const 3_usize
    SourceInfo(regex-syntax/src/utf8.rs:129:46-129:47)
  4: _109 = Len((*_2))
    SourceInfo(regex-syntax/src/utf8.rs:129:42-129:48)
  5: _110 = Lt(_108, _109)
    SourceInfo(regex-syntax/src/utf8.rs:129:42-129:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:129:42-129:48)
      kind: assert(move _110, "index out of bounds: the length is {} but the index is {}", move _109, _108) -> [success: bb38, unwind: bb43]
  }
  preds [bb36]
  succs [bb38, bb43]

bb38
  0: _107 = (*_2)[_108]
    SourceInfo(regex-syntax/src/utf8.rs:129:42-129:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:129:17-129:49)
      kind: _102 = utf8::Utf8Range::new(move _103, move _107) -> [return: bb39, unwind: bb43]
  }
  preds [bb37]
  succs [bb39, bb43]

bb39
  0: StorageDead(_107)
    SourceInfo(regex-syntax/src/utf8.rs:129:48-129:49)
  1: StorageDead(_103)
    SourceInfo(regex-syntax/src/utf8.rs:129:48-129:49)
  2: _74 = [move _75, move _84, move _93, move _102]
    SourceInfo(regex-syntax/src/utf8.rs:125:37-130:14)
  3: StorageDead(_102)
    SourceInfo(regex-syntax/src/utf8.rs:130:13-130:14)
  4: StorageDead(_93)
    SourceInfo(regex-syntax/src/utf8.rs:130:13-130:14)
  5: StorageDead(_84)
    SourceInfo(regex-syntax/src/utf8.rs:130:13-130:14)
  6: StorageDead(_75)
    SourceInfo(regex-syntax/src/utf8.rs:130:13-130:14)
  7: _0 = utf8::Utf8Sequence::Four(move _74)
    SourceInfo(regex-syntax/src/utf8.rs:125:18-130:15)
  8: StorageDead(_74)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  9: StorageDead(_108)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  10: StorageDead(_104)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  11: StorageDead(_99)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  12: StorageDead(_95)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  13: StorageDead(_90)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  14: StorageDead(_86)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  15: StorageDead(_81)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  16: StorageDead(_77)
    SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:130:14-130:15)
      kind: goto -> bb42
  }
  preds [bb38]
  succs [bb42]

bb40
  0: StorageDead(_122)
    SourceInfo(regex-syntax/src/utf8.rs:131:57-131:58)
  1: _120 = [move _121]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_121)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _119 = &_120
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _118 = &(*_119)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _114 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _115, move _118) -> [return: bb41, unwind: bb43]
  }
  preds [bb6]
  succs [bb41, bb43]

bb41
  0: StorageDead(_118)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_115)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _113 = core::panicking::panic_fmt(move _114) -> bb43
  }
  preds [bb40]
  succs [bb43]

bb42
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/utf8.rs:133:5-133:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:133:6-133:6)
      kind: return
  }
  preds [bb16, bb26, bb39]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:113:5-133:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb6, bb10, bb11, bb12, bb13, bb14, bb15, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb27, bb28, bb29, bb30, bb31, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb40, bb41]
  succs []

