bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1685:13-1685:17)
  1: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1685:26-1685:39)
  2: _3 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1685:26-1685:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1685:20-1685:39)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1685:26-1685:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1685:26-1685:39)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1686:13-1686:17)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1687:18-1687:26)
  1: _5 = &((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1687:18-1687:26)
  2: _2 = _5
    SourceInfo(regex-syntax/src/hir/literal.rs:1687:31-1687:35)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1687:34-1687:35)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1685:13-1685:17)
  5: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:9-1691:10)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:27)
  7: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:22)
  8: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:16)
  9: _9 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:22)
      kind: _8 = std::vec::Vec::<hir::literal::Literal>::len(move _9) -> [return: bb5, unwind: bb40]
  }
  preds [bb0, bb2]
  succs [bb5, bb40]

bb4
  0: _0 = core::option::Option::<&[u8]>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1686:28-1686:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1686:21-1686:32)
      kind: goto -> bb38
  }
  preds [bb2]
  succs [bb38]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:21-1689:22)
  1: _7 = Eq(move _8, const 0_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1689:12-1689:27)
      kind: switchInt(move _7) -> [0: bb7, otherwise: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:26-1689:27)
  1: _0 = core::option::Option::<&[u8]>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1690:20-1690:24)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1691:9-1691:10)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1691:9-1691:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb5]
  succs [bb38]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1689:26-1689:27)
  1: _6 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1691:10-1691:10)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1691:9-1691:10)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1691:9-1691:10)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:13-1692:17)
  5: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:20-1692:27)
  6: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:24-1692:27)
  7: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:20-1692:24)
  8: _14 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:20-1692:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1692:24-1692:27)
      kind: _13 = <std::vec::Vec<hir::literal::Literal> as core::ops::Index<usize>>::index(move _14, const 0_usize) -> [return: bb8, unwind: bb40]
  }
  preds [bb5]
  succs [bb8, bb40]

bb8
  0: _12 = &(*_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:20-1692:27)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:26-1692:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1692:20-1692:38)
      kind: _11 = hir::literal::Literal::as_bytes(move _12) -> [return: bb9, unwind: bb40]
  }
  preds [bb7]
  succs [bb9, bb40]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:37-1692:38)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:13-1692:17)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1692:38-1692:39)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1693:13-1693:20)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1693:23-1693:27)
  5: _16 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1693:23-1693:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1693:23-1693:33)
      kind: _15 = core::slice::<impl [u8]>::len(move _16) -> [return: bb10, unwind: bb40]
  }
  preds [bb8]
  succs [bb10, bb40]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1693:32-1693:33)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1693:13-1693:20)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  5: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:29)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:22)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:29)
  8: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:22)
  9: _23 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:29)
      kind: _22 = <std::vec::Vec<hir::literal::Literal> as core::ops::Deref>::deref(move _23) -> [return: bb11, unwind: bb40]
  }
  preds [bb9]
  succs [bb11, bb40]

bb11
  0: _21 = &(*_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:22)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:21-1694:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:29)
      kind: _20 = core::slice::<impl [hir::literal::Literal]>::iter(move _21) -> [return: bb12, unwind: bb40]
  }
  preds [bb10]
  succs [bb12, bb40]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:28-1694:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
      kind: _19 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::Iterator>::skip(move _20, const 1_usize) -> [return: bb13, unwind: bb40]
  }
  preds [bb11]
  succs [bb13, bb40]

bb13
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:36-1694:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
      kind: _18 = <core::iter::Skip<core::slice::Iter<'_, hir::literal::Literal>> as core::iter::IntoIterator>::into_iter(move _19) -> [return: bb14, unwind: bb40]
  }
  preds [bb12]
  succs [bb14, bb40]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:36-1694:37)
  1: PlaceMention(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  3: _24 = move _18
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
      kind: falseUnwind -> [real: bb16, unwind: bb40]
  }
  preds [bb14, bb34]
  succs [bb16, bb40]

bb16
  0: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  1: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  3: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  4: _29 = &mut _24
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  5: _28 = &mut (*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
      kind: _27 = <core::iter::Skip<core::slice::Iter<'_, hir::literal::Literal>> as core::iter::Iterator>::next(move _28) -> [return: bb17, unwind: bb40]
  }
  preds [bb15]
  succs [bb17, bb40]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:36-1694:37)
  1: PlaceMention(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  2: _30 = discriminant(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
      kind: switchInt(move _30) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:18-1694:37)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:13-1694:14)
  1: _32 = ((_27 as Some).0: &hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:13-1694:14)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1701:25)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1700:46)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1699:60)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1698:23)
  6: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1697:24)
  7: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1696:28)
  8: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1696:28)
  9: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1695:20)
  10: _40 = &(*_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1695:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1696:28)
      kind: _39 = hir::literal::Literal::as_bytes(move _40) -> [return: bb22, unwind: bb40]
  }
  preds [bb17, bb19]
  succs [bb22, bb40]

bb21
  0: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  3: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  4: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  5: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  7: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  8: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:14-1706:39)
  9: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:14-1706:39)
  10: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:19-1706:39)
  11: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:15-1706:19)
  12: _63 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:15-1706:19)
  13: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:38)
  14: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:36)
  15: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:30)
  16: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:24)
  17: _67 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:30)
      kind: _66 = core::slice::<impl [u8]>::len(move _67) -> [return: bb35, unwind: bb40]
  }
  preds [bb19]
  succs [bb35, bb40]

bb22
  0: _38 = &(*_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1696:28)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1696:27-1696:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1697:24)
      kind: _37 = core::slice::<impl [u8]>::iter(move _38) -> [return: bb23, unwind: bb40]
  }
  preds [bb20]
  succs [bb23, bb40]

bb23
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1697:23-1697:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1698:23)
      kind: _36 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::rev(move _37) -> [return: bb24, unwind: bb40]
  }
  preds [bb22]
  succs [bb24, bb40]

bb24
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1698:22-1698:23)
  1: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:59)
  2: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:53)
  3: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:46)
  4: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:26-1699:46)
  5: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:26)
  6: _45 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:26)
  7: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:45)
  8: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:43)
  9: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:37)
  10: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:31)
  11: _49 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:37)
      kind: _48 = core::slice::<impl [u8]>::len(move _49) -> [return: bb25, unwind: bb40]
  }
  preds [bb23]
  succs [bb25, bb40]

bb25
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:36-1699:37)
  1: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:40-1699:43)
  2: _50 = _15
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:40-1699:43)
  3: _51 = SubWithOverflow(_48, _50)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:43)
      kind: assert(!move (_51.1: bool), "attempt to compute `{} - {}`, which would overflow", move _48, move _50) -> [success: bb26, unwind: bb40]
  }
  preds [bb24]
  succs [bb26, bb40]

bb26
  0: _47 = move (_51.0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:43)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:42-1699:43)
  2: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:42-1699:43)
  3: _46 = core::ops::RangeFrom::<usize> { start: move _47 }
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:27-1699:45)
  4: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:44-1699:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1699:26-1699:46)
      kind: _44 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _45, move _46) -> [return: bb27, unwind: bb40]
  }
  preds [bb25]
  succs [bb27, bb40]

bb27
  0: _43 = &(*_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:46)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:45-1699:46)
  2: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:45-1699:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:53)
      kind: _42 = core::slice::<impl [u8]>::iter(move _43) -> [return: bb28, unwind: bb40]
  }
  preds [bb26]
  succs [bb28, bb40]

bb28
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:52-1699:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1699:22-1699:59)
      kind: _41 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::rev(move _42) -> [return: bb29, unwind: bb40]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:58-1699:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1699:60)
      kind: _35 = <core::iter::Rev<core::slice::Iter<'_, u8>> as core::iter::Iterator>::zip::<core::iter::Rev<core::slice::Iter<'_, u8>>>(move _36, move _41) -> [return: bb30, unwind: bb40]
  }
  preds [bb28]
  succs [bb30, bb40]

bb30
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:59-1699:60)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1699:59-1699:60)
  2: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1700:29-1700:45)
  3: _52 = {closure@regex-syntax/src/hir/literal.rs:1700:29: 1700:38}
    SourceInfo(regex-syntax/src/hir/literal.rs:1700:29-1700:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1700:46)
      kind: _34 = <core::iter::Zip<core::iter::Rev<core::slice::Iter<'_, u8>>, core::iter::Rev<core::slice::Iter<'_, u8>>> as core::iter::Iterator>::take_while::<{closure@regex-syntax/src/hir/literal.rs:1700:29: 1700:38}>(move _35, move _52) -> [return: bb31, unwind: bb40]
  }
  preds [bb29]
  succs [bb31, bb40]

bb31
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1700:45-1700:46)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1700:45-1700:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1695:19-1701:25)
      kind: _33 = <core::iter::TakeWhile<core::iter::Zip<core::iter::Rev<core::slice::Iter<'_, u8>>, core::iter::Rev<core::slice::Iter<'_, u8>>>, {closure@regex-syntax/src/hir/literal.rs:1700:29: 1700:38}> as core::iter::Iterator>::count(move _34) -> [return: bb32, unwind: bb40]
  }
  preds [bb30]
  succs [bb32, bb40]

bb32
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1701:24-1701:25)
  1: _15 = move _33
    SourceInfo(regex-syntax/src/hir/literal.rs:1695:13-1701:25)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1701:24-1701:25)
  3: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1701:25-1701:26)
  4: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1701:25-1701:26)
  5: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:16-1702:24)
  6: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:16-1702:19)
  7: _54 = _15
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:16-1702:19)
  8: _53 = Eq(move _54, const 0_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:16-1702:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1702:16-1702:24)
      kind: switchInt(move _53) -> [0: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34]

bb33
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:23-1702:24)
  1: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  3: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  4: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:30-1703:32)
  5: _59 = []
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:30-1703:32)
  6: _58 = &_59
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  7: _57 = &(*_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  8: _56 = move _57 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:29-1703:32)
  9: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:31-1703:32)
  10: _0 = core::option::Option::<&[u8]>::Some(move _56)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:24-1703:33)
  11: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:32-1703:33)
  12: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:33-1703:34)
  13: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1703:33-1703:34)
  14: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1704:13-1704:14)
  15: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  16: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  17: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  18: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  19: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  20: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  21: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  22: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  23: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  24: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb32]
  succs [bb38]

bb34
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1702:23-1702:24)
  1: _26 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1704:14-1704:14)
  2: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1704:13-1704:14)
  3: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  4: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  5: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  6: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1705:9-1705:10)
  7: _25 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1694:9-1705:10)
      kind: goto -> bb15
  }
  preds [bb32]
  succs [bb15]

bb35
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:29-1706:30)
  1: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:33-1706:36)
  2: _68 = _15
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:33-1706:36)
  3: _69 = SubWithOverflow(_66, _68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:36)
      kind: assert(!move (_69.1: bool), "attempt to compute `{} - {}`, which would overflow", move _66, move _68) -> [success: bb36, unwind: bb40]
  }
  preds [bb21]
  succs [bb36, bb40]

bb36
  0: _65 = move (_69.0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:36)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:35-1706:36)
  2: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:35-1706:36)
  3: _64 = core::ops::RangeFrom::<usize> { start: move _65 }
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:20-1706:38)
  4: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:37-1706:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1706:19-1706:39)
      kind: _62 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _63, move _64) -> [return: bb37, unwind: bb40]
  }
  preds [bb35]
  succs [bb37, bb40]

bb37
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:38-1706:39)
  1: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:38-1706:39)
  2: _61 = &(*_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:14-1706:39)
  3: _60 = &(*_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:14-1706:39)
  4: _0 = core::option::Option::<&[u8]>::Some(move _60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:9-1706:40)
  5: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1706:39-1706:40)
  6: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  7: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  8: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  9: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  10: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1707:6-1707:6)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1707:5-1707:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1707:6-1707:6)
      kind: goto -> bb39
  }
  preds [bb4, bb6, bb33]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1707:6-1707:6)
      kind: return
  }
  preds [bb37, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1682:5-1707:6)
      kind: resume
  }
  preds [bb3, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb15, bb16, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb29, bb30, bb31, bb35, bb36]
  succs []

