bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/unicode.rs:504:8-512:6)
  1: PlaceMention(_1)
    SourceInfo(regex-syntax/src/unicode.rs:504:14-504:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:505:9-505:14)
      kind: _5 = <str as core::cmp::PartialEq>::eq(_1, const "any") -> [return: bb9, unwind: bb24]
  }
  preds []
  succs [bb9, bb24]

bb1
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/unicode.rs:509:17-509:24)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:62)
      kind: _15 = unicode::property_values(const "General_Category") -> [return: bb13, unwind: bb24]
  }
  preds [bb6, bb7]
  succs [bb13, bb24]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:505:9-505:14)
      kind: falseEdge -> [real: bb10, imaginary: bb3]
  }
  preds [bb9]
  succs [bb3, bb10]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:506:9-506:19)
      kind: _4 = <str as core::cmp::PartialEq>::eq(_1, const "assigned") -> [return: bb8, unwind: bb24]
  }
  preds [bb2, bb9]
  succs [bb8, bb24]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:506:9-506:19)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb8]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:507:9-507:16)
      kind: _3 = <str as core::cmp::PartialEq>::eq(_1, const "ascii") -> [return: bb7, unwind: bb24]
  }
  preds [bb4, bb8]
  succs [bb7, bb24]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:507:9-507:16)
      kind: falseEdge -> [real: bb12, imaginary: bb1]
  }
  preds [bb7]
  succs [bb1, bb12]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:507:9-507:16)
      kind: switchInt(move _3) -> [0: bb1, otherwise: bb6]
  }
  preds [bb5]
  succs [bb1, bb6]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:506:9-506:19)
      kind: switchInt(move _4) -> [0: bb5, otherwise: bb4]
  }
  preds [bb3]
  succs [bb4, bb5]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:505:9-505:14)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb10
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/unicode.rs:505:23-505:28)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/unicode.rs:505:23-505:28)
  2: _7 = const "Any"
    SourceInfo(regex-syntax/src/unicode.rs:505:23-505:28)
  3: _6 = &(*_7)
    SourceInfo(regex-syntax/src/unicode.rs:505:23-505:28)
  4: _2 = core::option::Option::<&str>::Some(move _6)
    SourceInfo(regex-syntax/src/unicode.rs:505:18-505:29)
  5: StorageDead(_6)
    SourceInfo(regex-syntax/src/unicode.rs:505:28-505:29)
  6: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:505:28-505:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:505:28-505:29)
      kind: goto -> bb22
  }
  preds [bb2]
  succs [bb22]

bb11
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/unicode.rs:506:28-506:38)
  1: StorageLive(_9)
    SourceInfo(regex-syntax/src/unicode.rs:506:28-506:38)
  2: _9 = const "Assigned"
    SourceInfo(regex-syntax/src/unicode.rs:506:28-506:38)
  3: _8 = &(*_9)
    SourceInfo(regex-syntax/src/unicode.rs:506:28-506:38)
  4: _2 = core::option::Option::<&str>::Some(move _8)
    SourceInfo(regex-syntax/src/unicode.rs:506:23-506:39)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/unicode.rs:506:38-506:39)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/unicode.rs:506:38-506:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:506:38-506:39)
      kind: goto -> bb22
  }
  preds [bb4]
  succs [bb22]

bb12
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/unicode.rs:507:25-507:32)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/unicode.rs:507:25-507:32)
  2: _11 = const "ASCII"
    SourceInfo(regex-syntax/src/unicode.rs:507:25-507:32)
  3: _10 = &(*_11)
    SourceInfo(regex-syntax/src/unicode.rs:507:25-507:32)
  4: _2 = core::option::Option::<&str>::Some(move _10)
    SourceInfo(regex-syntax/src/unicode.rs:507:20-507:33)
  5: StorageDead(_10)
    SourceInfo(regex-syntax/src/unicode.rs:507:32-507:33)
  6: StorageDead(_11)
    SourceInfo(regex-syntax/src/unicode.rs:507:32-507:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:507:32-507:33)
      kind: goto -> bb22
  }
  preds [bb6]
  succs [bb22]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
      kind: _14 = <core::result::Result<core::option::Option<&[(&str, &str)]>, unicode::Error> as core::ops::Try>::branch(move _15) -> [return: bb14, unwind: bb24]
  }
  preds [bb1]
  succs [bb14, bb24]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  1: PlaceMention(_14)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  2: _16 = discriminant(_14)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
      kind: switchInt(move _16) -> [0: bb17, 1: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  1: _20 = ((_14 as Continue).0: core::option::Option<&[(&str, &str)]>)
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  2: _13 = _20
    SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:72)
      kind: _12 = core::option::Option::<&[(&str, &str)]>::unwrap(move _13) -> [return: bb20, unwind: bb24]
  }
  preds [bb14, bb16]
  succs [bb20, bb24]

bb18
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  1: _17 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, unicode::Error>)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  3: _19 = move _17
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:509:27-509:63)
      kind: _0 = <core::result::Result<core::option::Option<&str>, unicode::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, unicode::Error>>>::from_residual(move _19) -> [return: bb19, unwind: bb24]
  }
  preds [bb16]
  succs [bb19, bb24]

bb19
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/unicode.rs:509:62-509:63)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/unicode.rs:509:71-509:72)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/unicode.rs:509:72-509:73)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/unicode.rs:511:9-511:10)
  5: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:512:6-512:7)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:513:2-513:2)
      kind: goto -> bb23
  }
  preds [bb18]
  succs [bb23]

bb20
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/unicode.rs:509:71-509:72)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(regex-syntax/src/unicode.rs:509:17-509:24)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/unicode.rs:509:72-509:73)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/unicode.rs:510:29-510:36)
  4: _21 = &(*_12)
    SourceInfo(regex-syntax/src/unicode.rs:510:29-510:36)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/unicode.rs:510:38-510:54)
  6: _22 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:510:38-510:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:510:13-510:55)
      kind: _2 = unicode::canonical_value(move _21, move _22) -> [return: bb21, unwind: bb24]
  }
  preds [bb17]
  succs [bb21, bb24]

bb21
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/unicode.rs:510:54-510:55)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/unicode.rs:510:54-510:55)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/unicode.rs:511:9-511:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:511:9-511:10)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: _0 = core::result::Result::<core::option::Option<&str>, unicode::Error>::Ok(move _2)
    SourceInfo(regex-syntax/src/unicode.rs:504:5-512:7)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:512:6-512:7)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:513:2-513:2)
      kind: goto -> bb23
  }
  preds [bb10, bb11, bb12, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:513:2-513:2)
      kind: return
  }
  preds [bb19, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:501:1-513:2)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb13, bb17, bb18, bb20]
  succs []

