bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1032:13-1032:22)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1032:25-1032:26)
  2: _4 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1032:25-1032:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1032:25-1032:38)
      kind: _3 = core::fmt::Formatter::<'_>::debug_set(move _4) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1032:37-1032:38)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1032:13-1032:22)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1033:9-1044:10)
  3: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1033:15-1033:20)
  4: _6 = discriminant((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1033:15-1033:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1033:9-1033:20)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1033:15-1033:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1033:15-1033:20)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1034:13-1034:36)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/mod.rs:1039:26-1039:33)
  1: _30 = &(((*_1) as Bytes).0: hir::ClassBytes)
    SourceInfo(regex-syntax/src/hir/mod.rs:1039:26-1039:33)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:38)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:38)
  6: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:29)
  7: _35 = &(*_30)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:38)
      kind: _34 = hir::ClassBytes::ranges(move _35) -> [return: bb18, unwind: bb32]
  }
  preds [bb1, bb3]
  succs [bb18, bb32]

bb5
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1034:28-1034:35)
  1: _7 = &(((*_1) as Unicode).0: hir::ClassUnicode)
    SourceInfo(regex-syntax/src/hir/mod.rs:1034:28-1034:35)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:38)
  5: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:38)
  6: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:29)
  7: _12 = &(*_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:38)
      kind: _11 = hir::ClassUnicode::ranges(move _12) -> [return: bb6, unwind: bb32]
  }
  preds [bb3]
  succs [bb6, bb32]

bb6
  0: _10 = &(*_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:38)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:37-1035:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
      kind: _9 = core::slice::<impl [hir::ClassUnicodeRange]>::iter(move _10) -> [return: bb7, unwind: bb32]
  }
  preds [bb5]
  succs [bb7, bb32]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:44-1035:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
      kind: _8 = <core::slice::Iter<'_, hir::ClassUnicodeRange> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb8, unwind: bb32]
  }
  preds [bb6]
  succs [bb8, bb32]

bb8
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:44-1035:45)
  1: PlaceMention(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  3: _13 = move _8
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
      kind: falseUnwind -> [real: bb10, unwind: bb32]
  }
  preds [bb8, bb17]
  succs [bb10, bb32]

bb10
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  4: _18 = &mut _13
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  5: _17 = &mut (*_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
      kind: _16 = <core::slice::Iter<'_, hir::ClassUnicodeRange> as core::iter::Iterator>::next(move _17) -> [return: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:44-1035:45)
  1: PlaceMention(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  2: _19 = discriminant(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
      kind: switchInt(move _19) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:26-1035:45)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:21-1035:22)
  1: _21 = ((_16 as Some).0: &hir::ClassUnicodeRange)
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:21-1035:22)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:21-1036:52)
  3: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:21-1036:26)
  4: _23 = &mut _3
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:21-1036:26)
  5: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  6: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  7: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  8: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:34-1036:51)
  9: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:35-1036:42)
  10: _28 = ((*_21).0: char)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:35-1036:42)
  11: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:45-1036:50)
  12: _29 = ((*_21).1: char)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:45-1036:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1036:34-1036:51)
      kind: _27 = core::ops::RangeInclusive::<char>::new(move _28, move _29) -> [return: bb16, unwind: bb32]
  }
  preds [bb11, bb13]
  succs [bb16, bb32]

bb15
  0: _5 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  4: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  5: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  7: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1038:13-1038:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1038:13-1038:14)
      kind: goto -> bb30
  }
  preds [bb13]
  succs [bb30]

bb16
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:50-1036:51)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:50-1036:51)
  2: _26 = &_27
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  3: _25 = &(*_26)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  4: _24 = move _25 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:33-1036:51)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:50-1036:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1036:21-1036:52)
      kind: _22 = core::fmt::DebugSet::<'_, '_>::entry(move _23, move _24) -> [return: bb17, unwind: bb32]
  }
  preds [bb14]
  succs [bb17, bb32]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:51-1036:52)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:51-1036:52)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:52-1036:53)
  3: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:52-1036:53)
  4: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/mod.rs:1036:52-1036:53)
  5: _15 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:46-1037:18)
  6: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  7: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  8: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  9: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:1037:17-1037:18)
  10: _14 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1035:17-1037:18)
      kind: goto -> bb9
  }
  preds [bb16]
  succs [bb9]

bb18
  0: _33 = &(*_34)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:38)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:37-1040:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
      kind: _32 = core::slice::<impl [hir::ClassBytesRange]>::iter(move _33) -> [return: bb19, unwind: bb32]
  }
  preds [bb4]
  succs [bb19, bb32]

bb19
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:44-1040:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
      kind: _31 = <core::slice::Iter<'_, hir::ClassBytesRange> as core::iter::IntoIterator>::into_iter(move _32) -> [return: bb20, unwind: bb32]
  }
  preds [bb18]
  succs [bb20, bb32]

bb20
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:44-1040:45)
  1: PlaceMention(_31)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  3: _36 = move _31
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
      kind: falseUnwind -> [real: bb22, unwind: bb32]
  }
  preds [bb20, bb29]
  succs [bb22, bb32]

bb22
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  1: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  4: _40 = &mut _36
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  5: _39 = &mut (*_40)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
      kind: _38 = <core::slice::Iter<'_, hir::ClassBytesRange> as core::iter::Iterator>::next(move _39) -> [return: bb23, unwind: bb32]
  }
  preds [bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:44-1040:45)
  1: PlaceMention(_38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  2: _41 = discriminant(_38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
      kind: switchInt(move _41) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:26-1040:45)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:21-1040:22)
  1: _43 = ((_38 as Some).0: &hir::ClassBytesRange)
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:21-1040:22)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:21-1041:64)
  3: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:21-1041:26)
  4: _45 = &mut _3
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:21-1041:26)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  7: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  8: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:34-1041:63)
  9: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:35-1041:48)
  10: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:40-1041:47)
  11: _51 = ((*_43).0: u8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:40-1041:47)
  12: _50 = debug::Byte(move _51)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:35-1041:48)
  13: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:47-1041:48)
  14: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:51-1041:62)
  15: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:56-1041:61)
  16: _53 = ((*_43).1: u8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:56-1041:61)
  17: _52 = debug::Byte(move _53)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:51-1041:62)
  18: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:61-1041:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1041:34-1041:63)
      kind: _49 = core::ops::RangeInclusive::<debug::Byte>::new(move _50, move _52) -> [return: bb28, unwind: bb32]
  }
  preds [bb23, bb25]
  succs [bb28, bb32]

bb27
  0: _5 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  4: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  5: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  6: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  7: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/mod.rs:1043:13-1043:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1043:13-1043:14)
      kind: goto -> bb30
  }
  preds [bb25]
  succs [bb30]

bb28
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:62-1041:63)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:62-1041:63)
  2: _48 = &_49
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  3: _47 = &(*_48)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  4: _46 = move _47 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:33-1041:63)
  5: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:62-1041:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1041:21-1041:64)
      kind: _44 = core::fmt::DebugSet::<'_, '_>::entry(move _45, move _46) -> [return: bb29, unwind: bb32]
  }
  preds [bb26]
  succs [bb29, bb32]

bb29
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:63-1041:64)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:63-1041:64)
  2: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:64-1041:65)
  3: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:64-1041:65)
  4: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/mod.rs:1041:64-1041:65)
  5: _37 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:46-1042:18)
  6: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  7: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  8: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  9: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/mod.rs:1042:17-1042:18)
  10: _14 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1040:17-1042:18)
      kind: goto -> bb21
  }
  preds [bb28]
  succs [bb21]

bb30
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1044:9-1044:10)
  1: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/mod.rs:1045:9-1045:14)
  2: _54 = &mut _3
    SourceInfo(regex-syntax/src/hir/mod.rs:1045:9-1045:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1045:9-1045:23)
      kind: _0 = core::fmt::DebugSet::<'_, '_>::finish(move _54) -> [return: bb31, unwind: bb32]
  }
  preds [bb15, bb27]
  succs [bb31, bb32]

bb31
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/mod.rs:1045:22-1045:23)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1046:5-1046:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1046:6-1046:6)
      kind: return
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1029:5-1046:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb6, bb7, bb9, bb10, bb14, bb16, bb18, bb19, bb21, bb22, bb26, bb28, bb30]
  succs []

