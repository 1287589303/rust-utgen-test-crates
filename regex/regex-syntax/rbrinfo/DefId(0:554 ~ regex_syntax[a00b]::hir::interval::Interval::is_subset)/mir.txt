bb0
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:32-503:60)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:33-503:45)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:33-503:37)
  3: _7 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:33-503:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:503:33-503:45)
      kind: _6 = <Self as hir::interval::Interval>::lower(move _7) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:44-503:45)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:47-503:59)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:47-503:51)
  3: _9 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:47-503:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:503:47-503:59)
      kind: _8 = <Self as hir::interval::Interval>::upper(move _9) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:58-503:59)
  1: _5 = (move _6, move _8)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:32-503:60)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:59-503:60)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:59-503:60)
  4: PlaceMention(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:32-503:60)
  5: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:14-503:20)
  6: _3 = (_5.0: <Self as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:14-503:20)
  7: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:22-503:28)
  8: _4 = (_5.1: <Self as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:22-503:28)
  9: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:503:60-503:61)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:32-504:62)
  11: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:33-504:46)
  12: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:33-504:38)
  13: _14 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:33-504:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:504:33-504:46)
      kind: _13 = <Self as hir::interval::Interval>::lower(move _14) -> [return: bb3, unwind: bb18]
  }
  preds [bb1]
  succs [bb3, bb18]

bb3
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:45-504:46)
  1: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:48-504:61)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:48-504:53)
  3: _16 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:48-504:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:504:48-504:61)
      kind: _15 = <Self as hir::interval::Interval>::upper(move _16) -> [return: bb4, unwind: bb18]
  }
  preds [bb2]
  succs [bb4, bb18]

bb4
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:60-504:61)
  1: _12 = (move _13, move _15)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:32-504:62)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:61-504:62)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:61-504:62)
  4: PlaceMention(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:32-504:62)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:14-504:20)
  6: _10 = (_12.0: <Self as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:14-504:20)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:22-504:28)
  8: _11 = (_12.1: <Self as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:22-504:28)
  9: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:504:62-504:63)
  10: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:10-505:26)
  11: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:10-505:16)
  12: _18 = &_10
    SourceInfo(regex-syntax/src/hir/interval.rs:505:10-505:16)
  13: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:20-505:26)
  14: _19 = &_3
    SourceInfo(regex-syntax/src/hir/interval.rs:505:20-505:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:10-505:26)
      kind: _17 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::le(move _18, move _19) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:10-505:26)
      kind: switchInt(move _17) -> [0: bb10, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:25-505:26)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:25-505:26)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:30-505:46)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:30-505:36)
  4: _21 = &_3
    SourceInfo(regex-syntax/src/hir/interval.rs:505:30-505:36)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:40-505:46)
  6: _22 = &_11
    SourceInfo(regex-syntax/src/hir/interval.rs:505:40-505:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:30-505:46)
      kind: _20 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::le(move _21, move _22) -> [return: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:30-505:46)
      kind: switchInt(move _20) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:45-505:46)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:45-505:46)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:17-506:33)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:17-506:23)
  4: _24 = &_10
    SourceInfo(regex-syntax/src/hir/interval.rs:506:17-506:23)
  5: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:27-506:33)
  6: _25 = &_4
    SourceInfo(regex-syntax/src/hir/interval.rs:506:27-506:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:506:17-506:33)
      kind: _23 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::le(move _24, move _25) -> [return: bb12, unwind: bb18]
  }
  preds [bb7]
  succs [bb12, bb18]

bb9
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:45-505:46)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:45-505:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:25-505:26)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:505:25-505:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb5]
  succs [bb11]

bb11
  0: _0 = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:505:9-506:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:9-506:54)
      kind: goto -> bb17
  }
  preds [bb9, bb10]
  succs [bb17]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:506:17-506:33)
      kind: switchInt(move _23) -> [0: bb14, otherwise: bb13]
  }
  preds [bb8]
  succs [bb13, bb14]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:32-506:33)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:32-506:33)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:37-506:43)
  3: _26 = &_4
    SourceInfo(regex-syntax/src/hir/interval.rs:506:37-506:43)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:47-506:53)
  5: _27 = &_11
    SourceInfo(regex-syntax/src/hir/interval.rs:506:47-506:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:506:37-506:53)
      kind: _0 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::le(move _26, move _27) -> [return: bb15, unwind: bb18]
  }
  preds [bb12]
  succs [bb15, bb18]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:32-506:33)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:32-506:33)
  2: _0 = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:506:16-506:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:506:16-506:54)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:52-506:53)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:52-506:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:506:16-506:54)
      kind: goto -> bb16
  }
  preds [bb13]
  succs [bb16]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:53-506:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:505:9-506:54)
      kind: goto -> bb17
  }
  preds [bb14, bb15]
  succs [bb17]

bb17
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:53-506:54)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:506:53-506:54)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:507:5-507:6)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:507:5-507:6)
  4: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:507:5-507:6)
  5: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:507:5-507:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:507:6-507:6)
      kind: return
  }
  preds [bb11, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:502:5-507:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb6, bb8, bb13]
  succs []

