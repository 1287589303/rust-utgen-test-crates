bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:13-1836:20)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:33)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
      kind: _4 = hir::literal::Seq::len(move _5) -> [return: bb1, unwind: bb156]
  }
  preds []
  succs [bb1, bb156]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:38-1836:39)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
  2: _6 = discriminant(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1836:23-1836:39)
      kind: switchInt(move _6) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1836:29-1836:39)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1837:13-1837:17)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1838:18-1838:21)
  1: _8 = ((_4 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1838:18-1838:21)
  2: _3 = _8
    SourceInfo(regex-syntax/src/hir/literal.rs:1838:26-1838:29)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1838:28-1838:29)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1836:13-1836:20)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1839:10-1839:11)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:9-1847:10)
  7: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:64)
  8: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:34)
  9: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:16)
  10: _12 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:34)
      kind: _11 = hir::literal::Seq::min_literal_len(move _12) -> [return: bb6, unwind: bb156]
  }
  preds [bb1, bb3]
  succs [bb6, bb156]

bb5
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1837:21-1837:27)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1839:10-1839:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb3]
  succs [bb150]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:33-1841:34)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:49-1841:63)
  2: _13 = {closure@regex-syntax/src/hir/literal.rs:1841:49: 1841:54}
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:49-1841:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:64)
      kind: _10 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:1841:49: 1841:54}>(move _11, const false, move _13) -> [return: bb7, unwind: bb156]
  }
  preds [bb4]
  succs [bb7, bb156]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1841:12-1841:64)
      kind: switchInt(move _10) -> [0: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:63-1841:64)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:63-1841:64)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1845:13-1845:33)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1845:13-1845:17)
  4: _16 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1845:13-1845:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1845:13-1845:33)
      kind: _15 = hir::literal::Seq::make_infinite(move _16) -> [return: bb9, unwind: bb156]
  }
  preds [bb7]
  succs [bb9, bb156]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1845:32-1845:33)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1845:33-1845:34)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1846:13-1846:19)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1847:9-1847:10)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1847:9-1847:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb8]
  succs [bb150]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:63-1841:64)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1841:63-1841:64)
  2: _9 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1847:10-1847:10)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1847:9-1847:10)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1847:9-1847:10)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1852:9-1856:10)
  6: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1852:12-1852:18)
  7: _18 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1852:12-1852:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1852:12-1852:18)
      kind: switchInt(move _18) -> [0: bb12, otherwise: bb11]
  }
  preds [bb7]
  succs [bb11, bb12]

bb11
  0: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1853:41-1853:54)
  1: _19 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1853:41-1853:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1853:20-1853:38)
      kind: switchInt(move _19) -> [1: bb13, otherwise: bb16]
  }
  preds [bb10]
  succs [bb13, bb16]

bb12
  0: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1856:10-1856:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1852:9-1856:10)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1853:20-1853:38)
      kind: falseEdge -> [real: bb14, imaginary: bb16]
  }
  preds [bb11]
  succs [bb14, bb16]

bb14
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1853:25-1853:37)
  1: _20 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1853:25-1853:37)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1854:17-1854:53)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1854:42-1854:46)
  4: _22 = &mut (*_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1854:42-1854:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1854:17-1854:53)
      kind: _21 = hir::literal::PreferenceTrie::minimize(move _22, const true) -> [return: bb15, unwind: bb156]
  }
  preds [bb13]
  succs [bb15, bb156]

bb15
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1854:52-1854:53)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1854:53-1854:54)
  2: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1853:55-1855:14)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1855:13-1855:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1853:13-1855:14)
      kind: goto -> bb17
  }
  preds [bb14]
  succs [bb17]

bb16
  0: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1855:14-1855:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1853:13-1855:14)
      kind: goto -> bb17
  }
  preds [bb11, bb13]
  succs [bb17]

bb17
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1856:9-1856:10)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1856:9-1856:10)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1861:13-1861:16)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1861:22-1861:28)
  4: _24 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1861:22-1861:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1861:22-1861:28)
      kind: switchInt(move _24) -> [0: bb20, otherwise: bb18]
  }
  preds [bb12, bb15, bb16]
  succs [bb18, bb20]

bb18
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1862:13-1862:17)
  1: _25 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1862:13-1862:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1862:13-1862:41)
      kind: _23 = hir::literal::Seq::longest_common_prefix(move _25) -> [return: bb19, unwind: bb156]
  }
  preds [bb17]
  succs [bb19, bb156]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1862:40-1862:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1861:19-1865:10)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb20
  0: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1864:13-1864:17)
  1: _26 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1864:13-1864:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1864:13-1864:41)
      kind: _23 = hir::literal::Seq::longest_common_suffix(move _26) -> [return: bb21, unwind: bb156]
  }
  preds [bb17]
  succs [bb21, bb156]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1864:40-1864:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1861:19-1865:10)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1865:9-1865:10)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1861:13-1861:16)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1866:9-1916:10)
  3: PlaceMention(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1866:28-1866:31)
  4: _28 = discriminant(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1866:28-1866:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1866:16-1866:25)
      kind: switchInt(move _28) -> [1: bb23, otherwise: bb70]
  }
  preds [bb19, bb21]
  succs [bb23, bb70]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1866:16-1866:25)
      kind: falseEdge -> [real: bb24, imaginary: bb70]
  }
  preds [bb22]
  succs [bb24, bb70]

bb24
  0: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1866:21-1866:24)
  1: _29 = ((_23 as Some).0: &[u8])
    SourceInfo(regex-syntax/src/hir/literal.rs:1866:21-1866:24)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1882:13-1891:14)
  3: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:1882:16-1882:22)
  4: _31 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1882:16-1882:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1882:16-1882:22)
      kind: switchInt(move _31) -> [0: bb40, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb40]

bb25
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:20-1883:31)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:20-1883:27)
  2: _33 = _3
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:20-1883:27)
  3: _32 = Gt(move _33, const 1_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:20-1883:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1883:20-1883:31)
      kind: switchInt(move _32) -> [0: bb39, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb39]

bb26
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:30-1883:31)
  1: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:34)
  2: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:29)
  3: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:23)
  4: _36 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:29)
      kind: _35 = core::slice::<impl [u8]>::len(move _36) -> [return: bb27, unwind: bb156]
  }
  preds [bb25]
  succs [bb27, bb156]

bb27
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:28-1884:29)
  1: _34 = Ge(move _35, const 1_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1884:20-1884:34)
      kind: switchInt(move _34) -> [0: bb38, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb38]

bb28
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:33-1884:34)
  1: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:34)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:29)
  3: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:23)
  4: _39 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:29)
      kind: _38 = core::slice::<impl [u8]>::len(move _39) -> [return: bb29, unwind: bb156]
  }
  preds [bb27]
  succs [bb29, bb156]

bb29
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:28-1885:29)
  1: _37 = Le(move _38, const 3_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1885:20-1885:34)
      kind: switchInt(move _37) -> [0: bb37, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb37]

bb30
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:33-1885:34)
  1: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:20-1886:38)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:20-1886:32)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:25-1886:31)
  4: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:29-1886:30)
  5: _43 = const 0_usize
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:29-1886:30)
  6: _44 = Len((*_29))
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:25-1886:31)
  7: _45 = Lt(_43, _44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:25-1886:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1886:25-1886:31)
      kind: assert(move _45, "index out of bounds: the length is {} but the index is {}", move _44, _43) -> [success: bb31, unwind: bb156]
  }
  preds [bb29]
  succs [bb31, bb156]

bb31
  0: _42 = (*_29)[_43]
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:25-1886:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1886:20-1886:32)
      kind: _41 = hir::literal::rank(move _42) -> [return: bb32, unwind: bb156]
  }
  preds [bb30]
  succs [bb32, bb156]

bb32
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:31-1886:32)
  1: _40 = Lt(move _41, const 200_u8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:20-1886:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1886:20-1886:38)
      kind: switchInt(move _40) -> [0: bb36, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb36]

bb33
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:37-1886:38)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:37-1886:38)
  2: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1888:17-1888:41)
  3: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1888:17-1888:21)
  4: _48 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1888:17-1888:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1888:17-1888:41)
      kind: _47 = hir::literal::Seq::keep_first_bytes(move _48, const 1_usize) -> [return: bb34, unwind: bb156]
  }
  preds [bb32]
  succs [bb34, bb156]

bb34
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1888:40-1888:41)
  1: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1888:41-1888:42)
  2: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1889:17-1889:29)
  3: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/literal.rs:1889:17-1889:21)
  4: _50 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1889:17-1889:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1889:17-1889:29)
      kind: _49 = hir::literal::Seq::dedup(move _50) -> [return: bb35, unwind: bb156]
  }
  preds [bb33]
  succs [bb35, bb156]

bb35
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/literal.rs:1889:28-1889:29)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1889:29-1889:30)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1890:17-1890:23)
  3: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  4: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  5: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  6: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  7: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  8: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  9: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  10: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb149
  }
  preds [bb34]
  succs [bb149]

bb36
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:37-1886:38)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1886:37-1886:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb32]
  succs [bb40]

bb37
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1885:33-1885:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb29]
  succs [bb40]

bb38
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1884:33-1884:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb27]
  succs [bb40]

bb39
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1883:30-1883:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb25]
  succs [bb40]

bb40
  0: _30 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:14-1891:14)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  2: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  3: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  4: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  5: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  6: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1891:13-1891:14)
  7: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/literal.rs:1895:17-1895:23)
  8: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:32)
  9: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:21)
  10: _53 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:32)
      kind: _52 = hir::literal::Seq::is_exact(move _53) -> [return: bb41, unwind: bb156]
  }
  preds [bb24, bb36, bb37, bb38, bb39]
  succs [bb41, bb156]

bb41
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:32)
      kind: switchInt(move _52) -> [0: bb43, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb43]

bb42
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:31-1896:32)
  1: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:36-1896:46)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:36-1896:40)
  3: _55 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:36-1896:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:36-1896:46)
      kind: _54 = hir::literal::Seq::len(move _55) -> [return: bb44, unwind: bb156]
  }
  preds [bb41]
  succs [bb44, bb156]

bb43
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:31-1896:32)
  1: _51 = const false
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:77)
      kind: goto -> bb46
  }
  preds [bb41]
  succs [bb46]

bb44
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:45-1896:46)
  1: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:61-1896:76)
  2: _56 = {closure@regex-syntax/src/hir/literal.rs:1896:61: 1896:66}
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:61-1896:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:36-1896:77)
      kind: _51 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:1896:61: 1896:66}>(move _54, const false, move _56) -> [return: bb45, unwind: bb156]
  }
  preds [bb42]
  succs [bb45, bb156]

bb45
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:76-1896:77)
  1: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:76-1896:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1896:17-1896:77)
      kind: goto -> bb46
  }
  preds [bb44]
  succs [bb46]

bb46
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1896:76-1896:77)
  1: FakeRead(ForLet(None), _51)
    SourceInfo(regex-syntax/src/hir/literal.rs:1895:17-1895:23)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:17-1897:23)
  3: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:39)
  4: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:35)
  5: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:29)
  6: _60 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:35)
      kind: _59 = core::slice::<impl [u8]>::len(move _60) -> [return: bb47, unwind: bb156]
  }
  preds [bb43, bb45]
  succs [bb47, bb156]

bb47
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:34-1897:35)
  1: _58 = Gt(move _59, const 4_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:39)
      kind: switchInt(move _58) -> [0: bb49, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49]

bb48
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:38-1897:39)
  1: _57 = const true
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:69)
      kind: goto -> bb54
  }
  preds [bb47]
  succs [bb54]

bb49
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:38-1897:39)
  1: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:57)
  2: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:53)
  3: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:47)
  4: _63 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:53)
      kind: _62 = core::slice::<impl [u8]>::len(move _63) -> [return: bb50, unwind: bb156]
  }
  preds [bb47]
  succs [bb50, bb156]

bb50
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:52-1897:53)
  1: _61 = Gt(move _62, const 1_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:44-1897:57)
      kind: switchInt(move _61) -> [0: bb52, otherwise: bb51]
  }
  preds [bb49]
  succs [bb51, bb52]

bb51
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:56-1897:57)
  1: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:62-1897:68)
  2: _64 = _51
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:62-1897:68)
  3: _57 = Not(move _64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:61-1897:68)
  4: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:67-1897:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:43-1897:69)
      kind: goto -> bb53
  }
  preds [bb50]
  succs [bb53]

bb52
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:56-1897:57)
  1: _57 = const false
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:43-1897:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:43-1897:69)
      kind: goto -> bb53
  }
  preds [bb50]
  succs [bb53]

bb53
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:68-1897:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1897:26-1897:69)
      kind: goto -> bb54
  }
  preds [bb51, bb52]
  succs [bb54]

bb54
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:68-1897:69)
  1: FakeRead(ForLet(None), _57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1897:17-1897:23)
  2: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1898:16-1898:22)
  3: _65 = _57
    SourceInfo(regex-syntax/src/hir/literal.rs:1898:16-1898:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1898:16-1898:22)
      kind: switchInt(move _65) -> [0: bb68, otherwise: bb55]
  }
  preds [bb48, bb53]
  succs [bb55, bb68]

bb55
  0: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1906:17-1910:18)
  1: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1906:20-1906:26)
  2: _67 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1906:20-1906:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1906:20-1906:26)
      kind: switchInt(move _67) -> [0: bb59, otherwise: bb56]
  }
  preds [bb54]
  succs [bb56, bb59]

bb56
  0: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:21-1907:53)
  1: StorageLive(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:21-1907:25)
  2: _69 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:21-1907:25)
  3: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:43-1907:52)
  4: StorageLive(_71)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:43-1907:46)
  5: _71 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:43-1907:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1907:43-1907:52)
      kind: _70 = core::slice::<impl [u8]>::len(move _71) -> [return: bb57, unwind: bb156]
  }
  preds [bb55]
  succs [bb57, bb156]

bb57
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:51-1907:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1907:21-1907:53)
      kind: _68 = hir::literal::Seq::keep_first_bytes(move _69, move _70) -> [return: bb58, unwind: bb156]
  }
  preds [bb56]
  succs [bb58, bb156]

bb58
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:52-1907:53)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:52-1907:53)
  2: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1907:53-1907:54)
  3: _66 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1906:27-1908:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1906:17-1910:18)
      kind: goto -> bb62
  }
  preds [bb57]
  succs [bb62]

bb59
  0: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:21-1909:52)
  1: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:21-1909:25)
  2: _73 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:21-1909:25)
  3: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:42-1909:51)
  4: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:42-1909:45)
  5: _75 = &(*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:42-1909:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1909:42-1909:51)
      kind: _74 = core::slice::<impl [u8]>::len(move _75) -> [return: bb60, unwind: bb156]
  }
  preds [bb55]
  succs [bb60, bb156]

bb60
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:50-1909:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1909:21-1909:52)
      kind: _72 = hir::literal::Seq::keep_last_bytes(move _73, move _74) -> [return: bb61, unwind: bb156]
  }
  preds [bb59]
  succs [bb61, bb156]

bb61
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:51-1909:52)
  1: StorageDead(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:51-1909:52)
  2: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:1909:52-1909:53)
  3: _66 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1908:24-1910:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1906:17-1910:18)
      kind: goto -> bb62
  }
  preds [bb60]
  succs [bb62]

bb62
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1910:17-1910:18)
  1: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1910:17-1910:18)
  2: StorageLive(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:1911:17-1911:29)
  3: StorageLive(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:1911:17-1911:21)
  4: _77 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1911:17-1911:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1911:17-1911:29)
      kind: _76 = hir::literal::Seq::dedup(move _77) -> [return: bb63, unwind: bb156]
  }
  preds [bb58, bb61]
  succs [bb63, bb156]

bb63
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:1911:28-1911:29)
  1: StorageDead(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:1911:29-1911:30)
  2: StorageLive(_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  3: StorageLive(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  4: StorageLive(_80)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  5: StorageLive(_81)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:28-1912:35)
  6: _81 = core::option::Option::<usize>::Some(const 1_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:28-1912:35)
  7: _80 = &_81
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  8: StorageLive(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  9: StorageLive(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:37-1912:47)
  10: StorageLive(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:37-1912:41)
  11: _84 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:37-1912:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1912:37-1912:47)
      kind: _83 = hir::literal::Seq::len(move _84) -> [return: bb64, unwind: bb156]
  }
  preds [bb62]
  succs [bb64, bb156]

bb64
  0: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:1912:46-1912:47)
  1: _82 = &_83
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  2: _79 = (move _80, move _82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  3: StorageDead(_82)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  4: StorageDead(_80)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  5: PlaceMention(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  6: StorageLive(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  7: _85 = (_79.0: &core::option::Option<usize>)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  8: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  9: _86 = (_79.1: &core::option::Option<usize>)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  10: StorageLive(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  11: StorageLive(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  12: _88 = &(*_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  13: StorageLive(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  14: _89 = &(*_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: _87 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _88, move _89) -> [return: bb65, unwind: bb156]
  }
  preds [bb63]
  succs [bb65, bb156]

bb65
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _87) -> [0: bb67, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb67]

bb66
  0: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _78 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_87)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_83)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_81)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: _27 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1898:23-1915:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1898:13-1915:14)
      kind: goto -> bb69
  }
  preds [bb65]
  succs [bb69]

bb67
  0: StorageDead(_89)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_88)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _91 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_92)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_93)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _93 = move _91
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_94)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _95 = &(*_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _94 = &(*_95)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _97 = &(*_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _96 = &(*_97)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_98)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _98 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _92 = core::panicking::assert_failed::<core::option::Option<usize>, core::option::Option<usize>>(move _93, move _94, move _96, move _98) -> bb156
  }
  preds [bb65]
  succs [bb156]

bb68
  0: _27 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1915:14-1915:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1898:13-1915:14)
      kind: goto -> bb69
  }
  preds [bb54]
  succs [bb69]

bb69
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1915:13-1915:14)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  2: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1866:9-1916:10)
      kind: goto -> bb71
  }
  preds [bb66, bb68]
  succs [bb71]

bb70
  0: _27 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:10-1916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1866:9-1916:10)
      kind: goto -> bb71
  }
  preds [bb22, bb23]
  succs [bb71]

bb71
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1916:9-1916:10)
  1: StorageLive(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:1935:13-1935:18)
  2: StorageLive(_100)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:16-1936:31)
  3: StorageLive(_101)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:16-1936:20)
  4: _101 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:16-1936:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:16-1936:31)
      kind: _100 = hir::literal::Seq::is_exact(move _101) -> [return: bb72, unwind: bb156]
  }
  preds [bb69, bb70]
  succs [bb72, bb156]

bb72
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:16-1936:31)
      kind: switchInt(move _100) -> [0: bb76, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb76]

bb73
  0: StorageDead(_101)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:30-1936:31)
  1: StorageLive(_102)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:39-1936:51)
  2: StorageLive(_103)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:39-1936:43)
  3: _103 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:39-1936:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:39-1936:51)
      kind: _102 = <hir::literal::Seq as core::clone::Clone>::clone(move _103) -> [return: bb74, unwind: bb156]
  }
  preds [bb72]
  succs [bb74, bb156]

bb74
  0: StorageDead(_103)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:50-1936:51)
  1: _99 = core::option::Option::<hir::literal::Seq>::Some(move _102)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:34-1936:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:51-1936:52)
      kind: drop(_102) -> [return: bb75, unwind: bb156]
  }
  preds [bb73]
  succs [bb75, bb156]

bb75
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:51-1936:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:13-1936:68)
      kind: goto -> bb77
  }
  preds [bb74]
  succs [bb77]

bb76
  0: StorageDead(_101)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:30-1936:31)
  1: _99 = core::option::Option::<hir::literal::Seq>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:62-1936:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1936:13-1936:68)
      kind: goto -> bb77
  }
  preds [bb72]
  succs [bb77]

bb77
  0: StorageDead(_100)
    SourceInfo(regex-syntax/src/hir/literal.rs:1936:67-1936:68)
  1: FakeRead(ForLet(None), _99)
    SourceInfo(regex-syntax/src/hir/literal.rs:1935:13-1935:18)
  2: AscribeUserType(_99, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-syntax/src/hir/literal.rs:1935:20-1935:31)
  3: StorageLive(_104)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
  4: StorageLive(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
      kind: _105 = <[(usize, usize); 5] as core::iter::IntoIterator>::into_iter(const hir::literal::Seq::optimize_by_preference::ATTEMPTS) -> [return: bb78, unwind: bb155]
  }
  preds [bb75, bb76]
  succs [bb78, bb155]

bb78
  0: PlaceMention(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  1: StorageLive(_106)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  2: _106 = move _105
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
      kind: goto -> bb79
  }
  preds [bb77]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
      kind: falseUnwind -> [real: bb80, unwind: bb153]
  }
  preds [bb78, bb104]
  succs [bb80, bb153]

bb80
  0: StorageLive(_108)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  1: StorageLive(_109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  2: StorageLive(_110)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  3: StorageLive(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  4: _111 = &mut _106
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  5: _110 = &mut (*_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
      kind: _109 = <core::array::IntoIter<(usize, usize), 5> as core::iter::Iterator>::next(move _110) -> [return: bb81, unwind: bb153]
  }
  preds [bb79]
  succs [bb81, bb153]

bb81
  0: StorageDead(_110)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:37-1952:38)
  1: PlaceMention(_109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  2: _112 = discriminant(_109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
      kind: switchInt(move _112) -> [0: bb83, 1: bb84, otherwise: bb82]
  }
  preds [bb80]
  succs [bb82, bb83, bb84]

bb82
  0: FakeRead(ForMatchedPlace(None), _109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:30-1952:38)
      kind: unreachable
  }
  preds [bb81]
  succs []

bb83
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
      kind: falseEdge -> [real: bb85, imaginary: bb84]
  }
  preds [bb81]
  succs [bb84, bb85]

bb84
  0: StorageLive(_114)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:14-1952:18)
  1: _114 = (((_109 as Some).0: (usize, usize)).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:14-1952:18)
  2: StorageLive(_115)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:20-1952:25)
  3: _115 = (((_109 as Some).0: (usize, usize)).1: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:20-1952:25)
  4: StorageLive(_116)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:17-1953:20)
  5: StorageLive(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
  6: StorageLive(_118)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:33)
  7: _118 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
      kind: _117 = hir::literal::Seq::len(move _118) -> [return: bb86, unwind: bb153]
  }
  preds [bb81, bb83]
  succs [bb86, bb153]

bb85
  0: _104 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
      kind: goto -> bb106
  }
  preds [bb83]
  succs [bb106]

bb86
  0: StorageDead(_118)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:38-1953:39)
  1: PlaceMention(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
  2: _119 = discriminant(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1953:23-1953:39)
      kind: switchInt(move _119) -> [0: bb88, 1: bb89, otherwise: bb87]
  }
  preds [bb84]
  succs [bb87, bb88, bb89]

bb87
  0: FakeRead(ForMatchedPlace(None), _117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1953:29-1953:39)
      kind: unreachable
  }
  preds [bb86]
  succs []

bb88
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1954:17-1954:21)
      kind: falseEdge -> [real: bb90, imaginary: bb89]
  }
  preds [bb86]
  succs [bb89, bb90]

bb89
  0: StorageLive(_121)
    SourceInfo(regex-syntax/src/hir/literal.rs:1955:22-1955:25)
  1: _121 = ((_117 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1955:22-1955:25)
  2: _116 = _121
    SourceInfo(regex-syntax/src/hir/literal.rs:1955:30-1955:33)
  3: StorageDead(_121)
    SourceInfo(regex-syntax/src/hir/literal.rs:1955:32-1955:33)
  4: FakeRead(ForLet(None), _116)
    SourceInfo(regex-syntax/src/hir/literal.rs:1953:17-1953:20)
  5: StorageDead(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1956:14-1956:15)
  6: StorageLive(_122)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:13-1959:14)
  7: StorageLive(_123)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:16-1957:28)
  8: StorageLive(_124)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:16-1957:19)
  9: _124 = _116
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:16-1957:19)
  10: StorageLive(_125)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:23-1957:28)
  11: _125 = _115
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:23-1957:28)
  12: _123 = Le(move _124, move _125)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:16-1957:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1957:16-1957:28)
      kind: switchInt(move _123) -> [0: bb92, otherwise: bb91]
  }
  preds [bb86, bb88]
  succs [bb91, bb92]

bb90
  0: _104 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1954:25-1954:30)
  1: StorageDead(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:1956:14-1956:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb88]
  succs [bb105]

bb91
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:27-1957:28)
  1: StorageDead(_124)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:27-1957:28)
  2: _104 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1958:17-1958:22)
  3: StorageDead(_123)
    SourceInfo(regex-syntax/src/hir/literal.rs:1959:13-1959:14)
  4: StorageDead(_122)
    SourceInfo(regex-syntax/src/hir/literal.rs:1959:13-1959:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb89]
  succs [bb105]

bb92
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:27-1957:28)
  1: StorageDead(_124)
    SourceInfo(regex-syntax/src/hir/literal.rs:1957:27-1957:28)
  2: _122 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1959:14-1959:14)
  3: StorageDead(_123)
    SourceInfo(regex-syntax/src/hir/literal.rs:1959:13-1959:14)
  4: StorageDead(_122)
    SourceInfo(regex-syntax/src/hir/literal.rs:1959:13-1959:14)
  5: StorageLive(_127)
    SourceInfo(regex-syntax/src/hir/literal.rs:1960:13-1964:14)
  6: StorageLive(_128)
    SourceInfo(regex-syntax/src/hir/literal.rs:1960:16-1960:22)
  7: _128 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1960:16-1960:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1960:16-1960:22)
      kind: switchInt(move _128) -> [0: bb94, otherwise: bb93]
  }
  preds [bb89]
  succs [bb93, bb94]

bb93
  0: StorageLive(_129)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:17-1961:44)
  1: StorageLive(_130)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:17-1961:21)
  2: _130 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:17-1961:21)
  3: StorageLive(_131)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:39-1961:43)
  4: _131 = _114
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:39-1961:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1961:17-1961:44)
      kind: _129 = hir::literal::Seq::keep_first_bytes(move _130, move _131) -> [return: bb95, unwind: bb153]
  }
  preds [bb92]
  succs [bb95, bb153]

bb94
  0: StorageLive(_132)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:17-1963:43)
  1: StorageLive(_133)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:17-1963:21)
  2: _133 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:17-1963:21)
  3: StorageLive(_134)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:38-1963:42)
  4: _134 = _114
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:38-1963:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1963:17-1963:43)
      kind: _132 = hir::literal::Seq::keep_last_bytes(move _133, move _134) -> [return: bb96, unwind: bb153]
  }
  preds [bb92]
  succs [bb96, bb153]

bb95
  0: StorageDead(_131)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:43-1961:44)
  1: StorageDead(_130)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:43-1961:44)
  2: StorageDead(_129)
    SourceInfo(regex-syntax/src/hir/literal.rs:1961:44-1961:45)
  3: _127 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1960:23-1962:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1960:13-1964:14)
      kind: goto -> bb97
  }
  preds [bb93]
  succs [bb97]

bb96
  0: StorageDead(_134)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:42-1963:43)
  1: StorageDead(_133)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:42-1963:43)
  2: StorageDead(_132)
    SourceInfo(regex-syntax/src/hir/literal.rs:1963:43-1963:44)
  3: _127 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1962:20-1964:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1960:13-1964:14)
      kind: goto -> bb97
  }
  preds [bb94]
  succs [bb97]

bb97
  0: StorageDead(_128)
    SourceInfo(regex-syntax/src/hir/literal.rs:1964:13-1964:14)
  1: StorageDead(_127)
    SourceInfo(regex-syntax/src/hir/literal.rs:1964:13-1964:14)
  2: StorageLive(_135)
    SourceInfo(regex-syntax/src/hir/literal.rs:1965:16-1965:22)
  3: _135 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1965:16-1965:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1965:16-1965:22)
      kind: switchInt(move _135) -> [0: bb103, otherwise: bb98]
  }
  preds [bb95, bb96]
  succs [bb98, bb103]

bb98
  0: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1966:45-1966:58)
  1: _136 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1966:45-1966:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1966:24-1966:42)
      kind: switchInt(move _136) -> [1: bb99, otherwise: bb102]
  }
  preds [bb97]
  succs [bb99, bb102]

bb99
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1966:24-1966:42)
      kind: falseEdge -> [real: bb100, imaginary: bb102]
  }
  preds [bb98]
  succs [bb100, bb102]

bb100
  0: StorageLive(_137)
    SourceInfo(regex-syntax/src/hir/literal.rs:1966:29-1966:41)
  1: _137 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1966:29-1966:41)
  2: StorageLive(_138)
    SourceInfo(regex-syntax/src/hir/literal.rs:1967:21-1967:57)
  3: StorageLive(_139)
    SourceInfo(regex-syntax/src/hir/literal.rs:1967:46-1967:50)
  4: _139 = &mut (*_137)
    SourceInfo(regex-syntax/src/hir/literal.rs:1967:46-1967:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1967:21-1967:57)
      kind: _138 = hir::literal::PreferenceTrie::minimize(move _139, const true) -> [return: bb101, unwind: bb153]
  }
  preds [bb99]
  succs [bb101, bb153]

bb101
  0: StorageDead(_139)
    SourceInfo(regex-syntax/src/hir/literal.rs:1967:56-1967:57)
  1: StorageDead(_138)
    SourceInfo(regex-syntax/src/hir/literal.rs:1967:57-1967:58)
  2: _108 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1966:59-1968:18)
  3: StorageDead(_137)
    SourceInfo(regex-syntax/src/hir/literal.rs:1968:17-1968:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1966:17-1968:18)
      kind: goto -> bb104
  }
  preds [bb100]
  succs [bb104]

bb102
  0: _108 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1968:18-1968:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1966:17-1968:18)
      kind: goto -> bb104
  }
  preds [bb98, bb99]
  succs [bb104]

bb103
  0: _108 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1969:14-1969:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1965:13-1969:14)
      kind: goto -> bb104
  }
  preds [bb97]
  succs [bb104]

bb104
  0: StorageDead(_135)
    SourceInfo(regex-syntax/src/hir/literal.rs:1969:13-1969:14)
  1: StorageDead(_116)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  2: StorageDead(_115)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  3: StorageDead(_114)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  4: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  5: StorageDead(_109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  6: StorageDead(_108)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  7: _107 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1952:9-1970:10)
      kind: goto -> bb79
  }
  preds [bb101, bb102, bb103]
  succs [bb79]

bb105
  0: StorageDead(_116)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  1: StorageDead(_115)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  2: StorageDead(_114)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb90, bb91]
  succs [bb106]

bb106
  0: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  1: StorageDead(_109)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  2: StorageDead(_108)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
      kind: drop(_106) -> [return: bb107, unwind: bb154]
  }
  preds [bb85, bb105]
  succs [bb107, bb154]

bb107
  0: StorageDead(_106)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
      kind: drop(_105) -> [return: bb108, unwind: bb155]
  }
  preds [bb106]
  succs [bb108, bb155]

bb108
  0: StorageDead(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  1: StorageDead(_104)
    SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
  2: StorageLive(_140)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:9-1985:10)
  3: StorageLive(_141)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:44)
  4: StorageLive(_142)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:33)
  5: _142 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:44)
      kind: _141 = hir::literal::Seq::literals(move _142) -> [return: bb109, unwind: bb155]
  }
  preds [bb107]
  succs [bb109, bb155]

bb109
  0: StorageDead(_142)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:43-1981:44)
  1: PlaceMention(_141)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:44)
  2: _143 = discriminant(_141)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:29-1981:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1981:16-1981:26)
      kind: switchInt(move _143) -> [1: bb110, otherwise: bb118]
  }
  preds [bb108]
  succs [bb110, bb118]

bb110
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1981:16-1981:26)
      kind: falseEdge -> [real: bb111, imaginary: bb118]
  }
  preds [bb109]
  succs [bb111, bb118]

bb111
  0: StorageLive(_144)
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:21-1981:25)
  1: _144 = ((_141 as Some).0: &[hir::literal::Literal])
    SourceInfo(regex-syntax/src/hir/literal.rs:1981:21-1981:25)
  2: StorageLive(_145)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:57)
  3: StorageLive(_146)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:27)
  4: StorageLive(_147)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:27)
  5: StorageLive(_148)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:20)
  6: _148 = &(*_144)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:27)
      kind: _147 = core::slice::<impl [hir::literal::Literal]>::iter(move _148) -> [return: bb112, unwind: bb155]
  }
  preds [bb110]
  succs [bb112, bb155]

bb112
  0: _146 = &mut _147
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:27)
  1: StorageDead(_148)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:26-1982:27)
  2: StorageLive(_149)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:32-1982:56)
  3: _149 = {closure@regex-syntax/src/hir/literal.rs:1982:32: 1982:37}
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:32-1982:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:57)
      kind: _145 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::Iterator>::any::<{closure@regex-syntax/src/hir/literal.rs:1982:32: 1982:37}>(move _146, move _149) -> [return: bb113, unwind: bb155]
  }
  preds [bb111]
  succs [bb113, bb155]

bb113
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1982:16-1982:57)
      kind: switchInt(move _145) -> [0: bb116, otherwise: bb114]
  }
  preds [bb112]
  succs [bb114, bb116]

bb114
  0: StorageDead(_149)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  1: StorageDead(_147)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  2: StorageDead(_146)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  3: StorageLive(_150)
    SourceInfo(regex-syntax/src/hir/literal.rs:1983:17-1983:37)
  4: StorageLive(_151)
    SourceInfo(regex-syntax/src/hir/literal.rs:1983:17-1983:21)
  5: _151 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1983:17-1983:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1983:17-1983:37)
      kind: _150 = hir::literal::Seq::make_infinite(move _151) -> [return: bb115, unwind: bb155]
  }
  preds [bb113]
  succs [bb115, bb155]

bb115
  0: StorageDead(_151)
    SourceInfo(regex-syntax/src/hir/literal.rs:1983:36-1983:37)
  1: StorageDead(_150)
    SourceInfo(regex-syntax/src/hir/literal.rs:1983:37-1983:38)
  2: _140 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:58-1984:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1982:13-1984:14)
      kind: goto -> bb117
  }
  preds [bb114]
  succs [bb117]

bb116
  0: StorageDead(_149)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  1: StorageDead(_147)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  2: StorageDead(_146)
    SourceInfo(regex-syntax/src/hir/literal.rs:1982:56-1982:57)
  3: _140 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1984:14-1984:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1982:13-1984:14)
      kind: goto -> bb117
  }
  preds [bb113]
  succs [bb117]

bb117
  0: StorageDead(_145)
    SourceInfo(regex-syntax/src/hir/literal.rs:1984:13-1984:14)
  1: StorageDead(_144)
    SourceInfo(regex-syntax/src/hir/literal.rs:1985:9-1985:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1981:9-1985:10)
      kind: goto -> bb119
  }
  preds [bb115, bb116]
  succs [bb119]

bb118
  0: _140 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1985:10-1985:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1981:9-1985:10)
      kind: goto -> bb119
  }
  preds [bb109, bb110]
  succs [bb119]

bb119
  0: StorageDead(_141)
    SourceInfo(regex-syntax/src/hir/literal.rs:1985:9-1985:10)
  1: StorageDead(_140)
    SourceInfo(regex-syntax/src/hir/literal.rs:1985:9-1985:10)
  2: PlaceMention(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:1989:30-1989:35)
  3: _152 = discriminant(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:1989:30-1989:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1989:16-1989:27)
      kind: switchInt(move _152) -> [1: bb120, otherwise: bb142]
  }
  preds [bb117, bb118]
  succs [bb120, bb142]

bb120
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1989:16-1989:27)
      kind: falseEdge -> [real: bb121, imaginary: bb142]
  }
  preds [bb119]
  succs [bb121, bb142]

bb121
  0: StorageLive(_153)
    SourceInfo(regex-syntax/src/hir/literal.rs:1989:21-1989:26)
  1: _153 = move ((_99 as Some).0: hir::literal::Seq)
    SourceInfo(regex-syntax/src/hir/literal.rs:1989:21-1989:26)
  2: StorageLive(_154)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:13-1995:14)
  3: StorageLive(_155)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:17-1992:33)
  4: StorageLive(_156)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:17-1992:21)
  5: _156 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:17-1992:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1992:17-1992:33)
      kind: _155 = hir::literal::Seq::is_finite(move _156) -> [return: bb122, unwind: bb152]
  }
  preds [bb120]
  succs [bb122, bb152]

bb122
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1992:17-1992:33)
      kind: switchInt(move _155) -> [0: bb124, otherwise: bb123]
  }
  preds [bb121]
  succs [bb123, bb124]

bb123
  0: StorageDead(_156)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:32-1992:33)
  1: _154 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1995:14-1995:14)
  2: StorageDead(_155)
    SourceInfo(regex-syntax/src/hir/literal.rs:1995:13-1995:14)
  3: StorageDead(_154)
    SourceInfo(regex-syntax/src/hir/literal.rs:1995:13-1995:14)
  4: StorageLive(_159)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:13-2002:14)
  5: StorageLive(_160)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:67)
  6: StorageLive(_161)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:38)
  7: StorageLive(_162)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:20)
  8: _162 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:38)
      kind: _161 = hir::literal::Seq::min_literal_len(move _162) -> [return: bb128, unwind: bb152]
  }
  preds [bb122]
  succs [bb128, bb152]

bb124
  0: StorageDead(_156)
    SourceInfo(regex-syntax/src/hir/literal.rs:1992:32-1992:33)
  1: StorageLive(_158)
    SourceInfo(regex-syntax/src/hir/literal.rs:1993:25-1993:30)
  2: _158 = move _153
    SourceInfo(regex-syntax/src/hir/literal.rs:1993:25-1993:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1993:17-1993:22)
      kind: drop((*_1)) -> [return: bb125, unwind: bb126]
  }
  preds [bb122]
  succs [bb125, bb126]

bb125
  0: (*_1) = move _158
    SourceInfo(regex-syntax/src/hir/literal.rs:1993:17-1993:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1993:29-1993:30)
      kind: drop(_158) -> [return: bb127, unwind: bb152]
  }
  preds [bb124]
  succs [bb127, bb152]

bb126
  0: (*_1) = move _158
    SourceInfo(regex-syntax/src/hir/literal.rs:1993:17-1993:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1993:29-1993:30)
      kind: drop(_158) -> [return: bb152, unwind terminate(cleanup)]
  }
  preds [bb124]
  succs [bb152]

bb127
  0: StorageDead(_158)
    SourceInfo(regex-syntax/src/hir/literal.rs:1993:29-1993:30)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1994:17-1994:23)
  2: StorageDead(_155)
    SourceInfo(regex-syntax/src/hir/literal.rs:1995:13-1995:14)
  3: StorageDead(_154)
    SourceInfo(regex-syntax/src/hir/literal.rs:1995:13-1995:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb125]
  succs [bb146]

bb128
  0: StorageDead(_162)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:37-1999:38)
  1: StorageLive(_163)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:52-1999:66)
  2: _163 = {closure@regex-syntax/src/hir/literal.rs:1999:52: 1999:57}
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:52-1999:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:67)
      kind: _160 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:1999:52: 1999:57}>(move _161, const true, move _163) -> [return: bb129, unwind: bb152]
  }
  preds [bb123]
  succs [bb129, bb152]

bb129
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1999:16-1999:67)
      kind: switchInt(move _160) -> [0: bb134, otherwise: bb130]
  }
  preds [bb128]
  succs [bb130, bb134]

bb130
  0: StorageDead(_163)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:66-1999:67)
  1: StorageDead(_161)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:66-1999:67)
  2: StorageLive(_165)
    SourceInfo(regex-syntax/src/hir/literal.rs:2000:25-2000:30)
  3: _165 = move _153
    SourceInfo(regex-syntax/src/hir/literal.rs:2000:25-2000:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2000:17-2000:22)
      kind: drop((*_1)) -> [return: bb131, unwind: bb132]
  }
  preds [bb129]
  succs [bb131, bb132]

bb131
  0: (*_1) = move _165
    SourceInfo(regex-syntax/src/hir/literal.rs:2000:17-2000:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2000:29-2000:30)
      kind: drop(_165) -> [return: bb133, unwind: bb152]
  }
  preds [bb130]
  succs [bb133, bb152]

bb132
  0: (*_1) = move _165
    SourceInfo(regex-syntax/src/hir/literal.rs:2000:17-2000:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2000:29-2000:30)
      kind: drop(_165) -> [return: bb152, unwind terminate(cleanup)]
  }
  preds [bb130]
  succs [bb152]

bb133
  0: StorageDead(_165)
    SourceInfo(regex-syntax/src/hir/literal.rs:2000:29-2000:30)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2001:17-2001:23)
  2: StorageDead(_160)
    SourceInfo(regex-syntax/src/hir/literal.rs:2002:13-2002:14)
  3: StorageDead(_159)
    SourceInfo(regex-syntax/src/hir/literal.rs:2002:13-2002:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb131]
  succs [bb146]

bb134
  0: StorageDead(_163)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:66-1999:67)
  1: StorageDead(_161)
    SourceInfo(regex-syntax/src/hir/literal.rs:1999:66-1999:67)
  2: _159 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2002:14-2002:14)
  3: StorageDead(_160)
    SourceInfo(regex-syntax/src/hir/literal.rs:2002:13-2002:14)
  4: StorageDead(_159)
    SourceInfo(regex-syntax/src/hir/literal.rs:2002:13-2002:14)
  5: StorageLive(_166)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:55)
  6: StorageLive(_167)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:26)
  7: StorageLive(_168)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:20)
  8: _168 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:26)
      kind: _167 = hir::literal::Seq::len(move _168) -> [return: bb135, unwind: bb152]
  }
  preds [bb129]
  succs [bb135, bb152]

bb135
  0: StorageDead(_168)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:25-2005:26)
  1: StorageLive(_169)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:40-2005:54)
  2: _169 = {closure@regex-syntax/src/hir/literal.rs:2005:40: 2005:45}
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:40-2005:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:55)
      kind: _166 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:2005:40: 2005:45}>(move _167, const true, move _169) -> [return: bb136, unwind: bb152]
  }
  preds [bb134]
  succs [bb136, bb152]

bb136
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2005:16-2005:55)
      kind: switchInt(move _166) -> [0: bb141, otherwise: bb137]
  }
  preds [bb135]
  succs [bb137, bb141]

bb137
  0: StorageDead(_169)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:54-2005:55)
  1: StorageDead(_167)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:54-2005:55)
  2: StorageLive(_171)
    SourceInfo(regex-syntax/src/hir/literal.rs:2006:25-2006:30)
  3: _171 = move _153
    SourceInfo(regex-syntax/src/hir/literal.rs:2006:25-2006:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2006:17-2006:22)
      kind: drop((*_1)) -> [return: bb138, unwind: bb139]
  }
  preds [bb136]
  succs [bb138, bb139]

bb138
  0: (*_1) = move _171
    SourceInfo(regex-syntax/src/hir/literal.rs:2006:17-2006:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2006:29-2006:30)
      kind: drop(_171) -> [return: bb140, unwind: bb152]
  }
  preds [bb137]
  succs [bb140, bb152]

bb139
  0: (*_1) = move _171
    SourceInfo(regex-syntax/src/hir/literal.rs:2006:17-2006:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2006:29-2006:30)
      kind: drop(_171) -> [return: bb152, unwind terminate(cleanup)]
  }
  preds [bb137]
  succs [bb152]

bb140
  0: StorageDead(_171)
    SourceInfo(regex-syntax/src/hir/literal.rs:2006:29-2006:30)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2007:17-2007:23)
  2: StorageDead(_166)
    SourceInfo(regex-syntax/src/hir/literal.rs:2008:13-2008:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb138]
  succs [bb146]

bb141
  0: StorageDead(_169)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:54-2005:55)
  1: StorageDead(_167)
    SourceInfo(regex-syntax/src/hir/literal.rs:2005:54-2005:55)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2008:14-2008:14)
  3: StorageDead(_166)
    SourceInfo(regex-syntax/src/hir/literal.rs:2008:13-2008:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2009:9-2009:10)
      kind: drop(_153) -> [return: bb143, unwind: bb155]
  }
  preds [bb136]
  succs [bb143, bb155]

bb142
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2009:10-2009:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1989:9-2009:10)
      kind: goto -> bb144
  }
  preds [bb119, bb120]
  succs [bb144]

bb143
  0: StorageDead(_153)
    SourceInfo(regex-syntax/src/hir/literal.rs:2009:9-2009:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1989:9-2009:10)
      kind: goto -> bb144
  }
  preds [bb141]
  succs [bb144]

bb144
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
      kind: drop(_99) -> [return: bb145, unwind: bb156]
  }
  preds [bb142, bb143]
  succs [bb145, bb156]

bb145
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:6-2010:6)
      kind: goto -> bb151
  }
  preds [bb144]
  succs [bb151]

bb146
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2009:9-2009:10)
      kind: drop(_153) -> [return: bb147, unwind: bb155]
  }
  preds [bb127, bb133, bb140]
  succs [bb147, bb155]

bb147
  0: StorageDead(_153)
    SourceInfo(regex-syntax/src/hir/literal.rs:2009:9-2009:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
      kind: drop(_99) -> [return: bb148, unwind: bb156]
  }
  preds [bb146]
  succs [bb148, bb156]

bb148
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb149
  }
  preds [bb147]
  succs [bb149]

bb149
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb35, bb148]
  succs [bb150]

bb150
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:6-2010:6)
      kind: goto -> bb151
  }
  preds [bb5, bb9, bb149]
  succs [bb151]

bb151
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:6-2010:6)
      kind: return
  }
  preds [bb145, bb150]
  succs []

bb152
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2009:9-2009:10)
      kind: drop(_153) -> [return: bb155, unwind terminate(cleanup)]
  }
  preds [bb121, bb123, bb125, bb126, bb128, bb131, bb132, bb134, bb135, bb138, bb139]
  succs [bb155]

bb153
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
      kind: drop(_106) -> [return: bb154, unwind terminate(cleanup)]
  }
  preds [bb79, bb80, bb84, bb93, bb94, bb100]
  succs [bb154]

bb154
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1970:9-1970:10)
      kind: drop(_105) -> [return: bb155, unwind terminate(cleanup)]
  }
  preds [bb106, bb153]
  succs [bb155]

bb155
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2010:5-2010:6)
      kind: drop(_99) -> [return: bb156, unwind terminate(cleanup)]
  }
  preds [bb77, bb107, bb108, bb111, bb112, bb114, bb141, bb146, bb152, bb154]
  succs [bb156]

bb156
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1835:5-2010:6)
      kind: resume
  }
  preds [bb0, bb4, bb6, bb8, bb14, bb18, bb20, bb26, bb28, bb30, bb31, bb33, bb34, bb40, bb42, bb44, bb46, bb49, bb56, bb57, bb59, bb60, bb62, bb63, bb64, bb67, bb71, bb73, bb74, bb144, bb147, bb155]
  succs []

