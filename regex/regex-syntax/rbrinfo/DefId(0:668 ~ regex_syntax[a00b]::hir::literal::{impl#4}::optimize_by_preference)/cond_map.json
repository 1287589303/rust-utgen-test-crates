{
  "regex-syntax/src/hir/literal.rs:1886:20:1886:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "rank(fix[0]) < 200",
          "lhs": "rank(fix[0])",
          "rhs": "200",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1906:20:1906:26": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1882:16:1882:22": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1884:20:1884:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "fix.len() >= 1",
          "lhs": "fix.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1952:30:1952:38": [
    {
      "For": {
        "iter_var": "(keep, limit)",
        "iter_range": "ATTEMPTS"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1989:12:1989:35": [
    {
      "Bool": {
        "Other": "let Some(exact) = exact"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1966:20:1966:58": [
    {
      "Bool": {
        "Other": "let Some(ref mut lits) = self.literals"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1957:16:1957:28": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "len <= limit",
          "lhs": "len",
          "rhs": "limit",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1960:16:1960:22": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:2005:16:2005:55": [
    {
      "Bool": {
        "Other": "self.len().map_or(true, |len| len > 64)"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1982:16:1982:57": [
    {
      "Bool": {
        "Other": "lits.iter().any(|lit| lit.is_poisonous())"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1896:36:1896:77": [
    {
      "Bool": {
        "Other": "self.len().map_or(false, |len| len <= 16)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1953:29:1953:39": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/literal.rs:1953:29:1953:39",
        "match_str": "self.len()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/literal.rs:1955:17:1955:26": {
            "pat": {
              "pat_str": "Some(len)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:1955:30:1955:33"
          },
          "regex-syntax/src/hir/literal.rs:1954:17:1954:21": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:1954:25:1954:30"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1861:22:1861:28": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1965:16:1965:22": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1841:12:1841:64": [
    {
      "Bool": {
        "Other": "self.min_literal_len().map_or(false, |len| len == 0)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1981:12:1981:44": [
    {
      "Bool": {
        "Other": "let Some(lits) = self.literals()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1836:29:1836:39": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/literal.rs:1836:29:1836:39",
        "match_str": "self.len()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/literal.rs:1837:13:1837:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:1837:21:1837:27"
          },
          "regex-syntax/src/hir/literal.rs:1838:13:1838:22": {
            "pat": {
              "pat_str": "Some(len)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:1838:26:1838:29"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1896:17:1896:32": [
    {
      "Bool": {
        "Other": "self.is_exact()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1866:12:1866:31": [
    {
      "Bool": {
        "Other": "let Some(fix) = fix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1897:26:1897:39": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "fix.len() > 4",
          "lhs": "fix.len()",
          "rhs": "4",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1852:12:1852:18": [
    {
      "Bool": {
        "Other": "prefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1897:44:1897:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "fix.len() > 1",
          "lhs": "fix.len()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1897:62:1897:68": [
    {
      "Bool": {
        "Other": "isfast"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1999:16:1999:67": [
    {
      "Bool": {
        "Other": "self.min_literal_len().map_or(true, |len| len <= 2)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1992:17:1992:33": [
    {
      "Bool": {
        "Other": "self.is_finite()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1885:20:1885:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "fix.len() <= 3",
          "lhs": "fix.len()",
          "rhs": "3",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1898:16:1898:22": [
    {
      "Bool": {
        "Other": "usefix"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1853:16:1853:54": [
    {
      "Bool": {
        "Other": "let Some(ref mut lits) = self.literals"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1883:20:1883:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "origlen > 1",
          "lhs": "origlen",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:1936:16:1936:31": [
    {
      "Bool": {
        "Other": "self.is_exact()"
      }
    }
  ]
}