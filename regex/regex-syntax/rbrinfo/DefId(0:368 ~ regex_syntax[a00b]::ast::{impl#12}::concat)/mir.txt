bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:556:21-556:32)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:556:30-556:31)
  2: _3 = move _1
    SourceInfo(regex-syntax/src/ast/mod.rs:556:30-556:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:556:21-556:32)
      kind: _2 = std::boxed::Box::<ast::Concat>::new(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:556:31-556:32)
  1: _0 = ast::Ast::Concat(move _2)
    SourceInfo(regex-syntax/src/ast/mod.rs:556:9-556:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:556:32-556:33)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:556:32-556:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:557:5-557:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:557:6-557:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:556:31-556:32)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:557:5-557:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:555:5-557:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

