bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/error.rs:159:13-159:27)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:159:30-159:51)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:159:30-159:43)
  3: _4 = &(*((*_1).0: &str))
    SourceInfo(regex-syntax/src/error.rs:159:30-159:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:159:30-159:51)
      kind: _3 = core::str::<impl str>::lines(move _4) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:159:50-159:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:159:30-159:59)
      kind: _2 = <core::str::Lines<'_> as core::iter::Iterator>::count(move _3) -> [return: bb2, unwind: bb32]
  }
  preds [bb0]
  succs [bb2, bb32]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:159:58-159:59)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/error.rs:159:13-159:27)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:163:9-165:10)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:163:12-163:41)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/error.rs:163:12-163:25)
  5: _7 = &(*((*_1).0: &str))
    SourceInfo(regex-syntax/src/error.rs:163:12-163:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:163:12-163:41)
      kind: _6 = core::str::<impl str>::ends_with::<'_, char>(move _7, const '\n') -> [return: bb3, unwind: bb32]
  }
  preds [bb1]
  succs [bb3, bb32]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:163:12-163:41)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:163:40-163:41)
  1: _8 = AddWithOverflow(_2, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:164:13-164:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:164:13-164:28)
      kind: assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_usize) -> [success: bb5, unwind: bb32]
  }
  preds [bb3]
  succs [bb5, bb32]

bb5
  0: _2 = move (_8.0: usize)
    SourceInfo(regex-syntax/src/error.rs:164:13-164:28)
  1: _5 = const ()
    SourceInfo(regex-syntax/src/error.rs:163:42-165:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:163:9-165:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:163:40-163:41)
  1: _5 = const ()
    SourceInfo(regex-syntax/src/error.rs:165:10-165:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:163:9-165:10)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:165:9-165:10)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:165:9-165:10)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/error.rs:166:13-166:30)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/error.rs:167:16-167:31)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:167:16-167:26)
  5: _11 = _2
    SourceInfo(regex-syntax/src/error.rs:167:16-167:26)
  6: _10 = Le(move _11, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:167:16-167:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:16-167:31)
      kind: switchInt(move _10) -> [0: bb9, otherwise: bb8]
  }
  preds [bb5, bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:167:30-167:31)
  1: _9 = const 0_usize
    SourceInfo(regex-syntax/src/error.rs:167:34-167:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:13-167:75)
      kind: goto -> bb13
  }
  preds [bb7]
  succs [bb13]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:167:30-167:31)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:167:45-167:67)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/error.rs:167:45-167:67)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/error.rs:167:45-167:55)
  4: _14 = &_2
    SourceInfo(regex-syntax/src/error.rs:167:45-167:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:45-167:67)
      kind: _13 = <usize as std::string::ToString>::to_string(move _14) -> [return: bb10, unwind: bb32]
  }
  preds [bb7]
  succs [bb10, bb32]

bb10
  0: _12 = &_13
    SourceInfo(regex-syntax/src/error.rs:167:45-167:67)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/error.rs:167:66-167:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:45-167:73)
      kind: _9 = std::string::String::len(move _12) -> [return: bb11, unwind: bb31]
  }
  preds [bb9]
  succs [bb11, bb31]

bb11
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:167:72-167:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:74-167:75)
      kind: drop(_13) -> [return: bb12, unwind: bb32]
  }
  preds [bb10]
  succs [bb12, bb32]

bb12
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:167:74-167:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:13-167:75)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:167:74-167:75)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-syntax/src/error.rs:166:13-166:30)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/error.rs:168:13-168:22)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/error.rs:169:22-169:36)
  4: StorageLive(_17)
    SourceInfo(regex-syntax/src/error.rs:169:22-169:36)
  5: _17 = &((*_1).0: &str)
    SourceInfo(regex-syntax/src/error.rs:169:22-169:36)
  6: _16 = &(*(*_17))
    SourceInfo(regex-syntax/src/error.rs:169:22-169:36)
  7: StorageLive(_18)
    SourceInfo(regex-syntax/src/error.rs:170:13-170:30)
  8: _18 = _9
    SourceInfo(regex-syntax/src/error.rs:170:13-170:30)
  9: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
  10: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _20 = std::vec::Vec::<ast::Span>::new() -> [return: bb14, unwind: bb32]
  }
  preds [bb8, bb12]
  succs [bb14, bb32]

bb14
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/error.rs:171:35-171:45)
  1: _21 = _2
    SourceInfo(regex-syntax/src/error.rs:171:35-171:45)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _19 = std::vec::from_elem::<std::vec::Vec<ast::Span>>(move _20, move _21) -> [return: bb15, unwind: bb30]
  }
  preds [bb13]
  succs [bb15, bb30]

bb15
  0: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _22 = std::vec::Vec::<ast::Span>::new() -> [return: bb16, unwind: bb29]
  }
  preds [bb14]
  succs [bb16, bb29]

bb16
  0: _15 = error::Spans::<'_> { pattern: move _16, line_number_width: move _18, by_line: move _19, multi_line: move _22 }
    SourceInfo(regex-syntax/src/error.rs:168:25-173:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
      kind: drop(_22) -> [return: bb17, unwind: bb29]
  }
  preds [bb15]
  succs [bb17, bb29]

bb17
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
      kind: drop(_19) -> [return: bb18, unwind: bb32]
  }
  preds [bb16]
  succs [bb18, bb32]

bb18
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
  3: FakeRead(ForLet(None), _15)
    SourceInfo(regex-syntax/src/error.rs:168:13-168:22)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/error.rs:173:10-173:11)
  5: StorageLive(_23)
    SourceInfo(regex-syntax/src/error.rs:174:9-174:38)
  6: StorageLive(_24)
    SourceInfo(regex-syntax/src/error.rs:174:9-174:14)
  7: _24 = &mut _15
    SourceInfo(regex-syntax/src/error.rs:174:9-174:14)
  8: StorageLive(_25)
    SourceInfo(regex-syntax/src/error.rs:174:19-174:37)
  9: StorageLive(_26)
    SourceInfo(regex-syntax/src/error.rs:174:19-174:29)
  10: _26 = &(*((*_1).2: &ast::Span))
    SourceInfo(regex-syntax/src/error.rs:174:19-174:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:174:19-174:37)
      kind: _25 = <ast::Span as core::clone::Clone>::clone(move _26) -> [return: bb19, unwind: bb28]
  }
  preds [bb17]
  succs [bb19, bb28]

bb19
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/error.rs:174:36-174:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:174:9-174:38)
      kind: _23 = error::Spans::<'_>::add(move _24, move _25) -> [return: bb20, unwind: bb28]
  }
  preds [bb18]
  succs [bb20, bb28]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/error.rs:174:37-174:38)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/error.rs:174:37-174:38)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/error.rs:174:38-174:39)
  3: StorageLive(_27)
    SourceInfo(regex-syntax/src/error.rs:175:9-177:10)
  4: PlaceMention(((*_1).3: core::option::Option<&ast::Span>))
    SourceInfo(regex-syntax/src/error.rs:175:29-175:43)
  5: _28 = discriminant(((*_1).3: core::option::Option<&ast::Span>))
    SourceInfo(regex-syntax/src/error.rs:175:29-175:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:175:16-175:26)
      kind: switchInt(move _28) -> [1: bb21, otherwise: bb25]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:175:16-175:26)
      kind: falseEdge -> [real: bb22, imaginary: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: StorageLive(_29)
    SourceInfo(regex-syntax/src/error.rs:175:21-175:25)
  1: _29 = ((((*_1).3: core::option::Option<&ast::Span>) as Some).0: &ast::Span)
    SourceInfo(regex-syntax/src/error.rs:175:21-175:25)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/error.rs:176:13-176:36)
  3: StorageLive(_31)
    SourceInfo(regex-syntax/src/error.rs:176:13-176:18)
  4: _31 = &mut _15
    SourceInfo(regex-syntax/src/error.rs:176:13-176:18)
  5: StorageLive(_32)
    SourceInfo(regex-syntax/src/error.rs:176:23-176:35)
  6: StorageLive(_33)
    SourceInfo(regex-syntax/src/error.rs:176:23-176:27)
  7: _33 = &(*_29)
    SourceInfo(regex-syntax/src/error.rs:176:23-176:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:176:23-176:35)
      kind: _32 = <ast::Span as core::clone::Clone>::clone(move _33) -> [return: bb23, unwind: bb28]
  }
  preds [bb21]
  succs [bb23, bb28]

bb23
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/error.rs:176:34-176:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:176:13-176:36)
      kind: _30 = error::Spans::<'_>::add(move _31, move _32) -> [return: bb24, unwind: bb28]
  }
  preds [bb22]
  succs [bb24, bb28]

bb24
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/error.rs:176:35-176:36)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/error.rs:176:35-176:36)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/error.rs:176:36-176:37)
  3: _27 = const ()
    SourceInfo(regex-syntax/src/error.rs:175:44-177:10)
  4: StorageDead(_29)
    SourceInfo(regex-syntax/src/error.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:175:9-177:10)
      kind: goto -> bb26
  }
  preds [bb23]
  succs [bb26]

bb25
  0: _27 = const ()
    SourceInfo(regex-syntax/src/error.rs:177:10-177:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:175:9-177:10)
      kind: goto -> bb26
  }
  preds [bb20, bb21]
  succs [bb26]

bb26
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/error.rs:177:9-177:10)
  1: _0 = move _15
    SourceInfo(regex-syntax/src/error.rs:178:9-178:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:179:5-179:6)
      kind: drop(_15) -> [return: bb27, unwind: bb32]
  }
  preds [bb24, bb25]
  succs [bb27, bb32]

bb27
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/error.rs:179:5-179:6)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:179:5-179:6)
  2: StorageDead(_2)
    SourceInfo(regex-syntax/src/error.rs:179:5-179:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:179:6-179:6)
      kind: return
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:179:5-179:6)
      kind: drop(_15) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb18, bb19, bb22, bb23]
  succs [bb32]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:173:9-173:10)
      kind: drop(_19) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb32]

bb30
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
      kind: drop(_20) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:167:74-167:75)
      kind: drop(_13) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:156:5-179:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb9, bb11, bb13, bb17, bb26, bb28, bb29, bb30, bb31]
  succs []

