bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/unicode.rs:518:9-518:16)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:44)
      kind: _5 = unicode::property_values(const "Script") -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
      kind: _4 = <core::result::Result<core::option::Option<&[(&str, &str)]>, unicode::Error> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  2: _6 = discriminant(_4)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  1: _10 = ((_4 as Continue).0: core::option::Option<&[(&str, &str)]>)
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  2: _3 = _10
    SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:54)
      kind: _2 = core::option::Option::<&[(&str, &str)]>::unwrap(move _3) -> [return: bb8, unwind: bb11]
  }
  preds [bb2, bb4]
  succs [bb8, bb11]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  1: _7 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, unicode::Error>)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  3: _9 = move _7
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:518:19-518:45)
      kind: _0 = <core::result::Result<core::option::Option<&str>, unicode::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, unicode::Error>>>::from_residual(move _9) -> [return: bb7, unwind: bb11]
  }
  preds [bb4]
  succs [bb7, bb11]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:518:44-518:45)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:518:53-518:54)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:518:54-518:55)
  4: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:520:1-520:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:520:2-520:2)
      kind: goto -> bb10
  }
  preds [bb6]
  succs [bb10]

bb8
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:518:53-518:54)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/unicode.rs:518:9-518:16)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:518:54-518:55)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/unicode.rs:519:8-519:50)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/unicode.rs:519:24-519:31)
  5: _12 = &(*_2)
    SourceInfo(regex-syntax/src/unicode.rs:519:24-519:31)
  6: StorageLive(_13)
    SourceInfo(regex-syntax/src/unicode.rs:519:33-519:49)
  7: _13 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:519:33-519:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:519:8-519:50)
      kind: _11 = unicode::canonical_value(move _12, move _13) -> [return: bb9, unwind: bb11]
  }
  preds [bb5]
  succs [bb9, bb11]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/unicode.rs:519:49-519:50)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/unicode.rs:519:49-519:50)
  2: _0 = core::result::Result::<core::option::Option<&str>, unicode::Error>::Ok(move _11)
    SourceInfo(regex-syntax/src/unicode.rs:519:5-519:51)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/unicode.rs:519:50-519:51)
  4: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:520:1-520:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:520:2-520:2)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:520:2-520:2)
      kind: return
  }
  preds [bb7, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:515:1-520:2)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8]
  succs []

