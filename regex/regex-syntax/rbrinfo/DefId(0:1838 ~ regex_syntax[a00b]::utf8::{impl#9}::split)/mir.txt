bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/utf8.rs:397:12-397:31)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/utf8.rs:397:12-397:22)
  2: _3 = ((*_1).0: u32)
    SourceInfo(regex-syntax/src/utf8.rs:397:12-397:22)
  3: _2 = Lt(move _3, const 57344_u32)
    SourceInfo(regex-syntax/src/utf8.rs:397:12-397:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:397:12-397:31)
      kind: switchInt(move _2) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/utf8.rs:397:30-397:31)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/utf8.rs:397:35-397:52)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/utf8.rs:397:35-397:43)
  3: _5 = ((*_1).1: u32)
    SourceInfo(regex-syntax/src/utf8.rs:397:35-397:43)
  4: _4 = Gt(move _5, const 55295_u32)
    SourceInfo(regex-syntax/src/utf8.rs:397:35-397:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:397:35-397:52)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/utf8.rs:397:51-397:52)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/utf8.rs:398:18-401:14)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/utf8.rs:399:17-399:63)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/utf8.rs:399:38-399:48)
  4: _8 = ((*_1).0: u32)
    SourceInfo(regex-syntax/src/utf8.rs:399:38-399:48)
  5: _7 = utf8::ScalarRange { start: move _8, end: const 55295_u32 }
    SourceInfo(regex-syntax/src/utf8.rs:399:17-399:63)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/utf8.rs:399:62-399:63)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/utf8.rs:400:17-400:61)
  8: StorageLive(_10)
    SourceInfo(regex-syntax/src/utf8.rs:400:51-400:59)
  9: _10 = ((*_1).1: u32)
    SourceInfo(regex-syntax/src/utf8.rs:400:51-400:59)
  10: _9 = utf8::ScalarRange { start: const 57344_u32, end: move _10 }
    SourceInfo(regex-syntax/src/utf8.rs:400:17-400:61)
  11: StorageDead(_10)
    SourceInfo(regex-syntax/src/utf8.rs:400:60-400:61)
  12: _6 = (move _7, move _9)
    SourceInfo(regex-syntax/src/utf8.rs:398:18-401:14)
  13: StorageDead(_9)
    SourceInfo(regex-syntax/src/utf8.rs:401:13-401:14)
  14: StorageDead(_7)
    SourceInfo(regex-syntax/src/utf8.rs:401:13-401:14)
  15: _0 = core::option::Option::<(utf8::ScalarRange, utf8::ScalarRange)>::Some(move _6)
    SourceInfo(regex-syntax/src/utf8.rs:398:13-401:15)
  16: StorageDead(_6)
    SourceInfo(regex-syntax/src/utf8.rs:401:14-401:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:397:9-404:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/utf8.rs:397:51-397:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/utf8.rs:397:30-397:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: _0 = core::option::Option::<(utf8::ScalarRange, utf8::ScalarRange)>::None
    SourceInfo(regex-syntax/src/utf8.rs:403:13-403:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:397:9-404:10)
      kind: goto -> bb6
  }
  preds [bb3, bb4]
  succs [bb6]

bb6
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/utf8.rs:404:9-404:10)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/utf8.rs:404:9-404:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:405:6-405:6)
      kind: return
  }
  preds [bb2, bb5]
  succs []

