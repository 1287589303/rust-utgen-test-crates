bb0
  0: PlaceMention(_2)
    SourceInfo(regex-syntax/src/ast/visitor.rs:289:15-289:21)
  1: _3 = discriminant(_2)
    SourceInfo(regex-syntax/src/ast/visitor.rs:289:15-289:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:289:9-289:21)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), _2)
    SourceInfo(regex-syntax/src/ast/visitor.rs:289:15-289:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:289:15-289:21)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:290:13-290:33)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:291:13-291:28)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:292:13-292:39)
      kind: falseEdge -> [real: bb8, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb8]

bb5
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:299:34-299:38)
  1: _18 = ((_2 as Alternation).1: &[ast::Ast])
    SourceInfo(regex-syntax/src/ast/visitor.rs:299:34-299:38)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:300:20-300:35)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/visitor.rs:300:20-300:24)
  4: _20 = &(*_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:300:20-300:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:300:20-300:35)
      kind: _19 = core::slice::<impl [ast::Ast]>::is_empty(move _20) -> [return: bb15, unwind: bb22]
  }
  preds [bb0, bb4]
  succs [bb15, bb22]

bb6
  0: _0 = core::option::Option::<ast::visitor::Frame<'_>>::None
    SourceInfo(regex-syntax/src/ast/visitor.rs:290:37-290:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:290:37-290:41)
      kind: goto -> bb21
  }
  preds [bb2]
  succs [bb21]

bb7
  0: _0 = core::option::Option::<ast::visitor::Frame<'_>>::None
    SourceInfo(regex-syntax/src/ast/visitor.rs:291:32-291:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:291:32-291:36)
      kind: goto -> bb21
  }
  preds [bb3]
  succs [bb21]

bb8
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:292:29-292:33)
  1: _4 = ((_2 as Concat).1: &[ast::Ast])
    SourceInfo(regex-syntax/src/ast/visitor.rs:292:29-292:33)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/visitor.rs:293:20-293:35)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:293:20-293:24)
  4: _6 = &(*_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:293:20-293:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:293:20-293:35)
      kind: _5 = core::slice::<impl [ast::Ast]>::is_empty(move _6) -> [return: bb9, unwind: bb22]
  }
  preds [bb4]
  succs [bb9, bb22]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:293:20-293:35)
      kind: switchInt(move _5) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:293:34-293:35)
  1: _0 = core::option::Option::<ast::visitor::Frame<'_>>::None
    SourceInfo(regex-syntax/src/ast/visitor.rs:294:21-294:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:293:17-297:18)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb11
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:293:34-293:35)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:26-296:76)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:48-296:56)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:48-296:56)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:54-296:55)
  5: _10 = const 0_usize
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:54-296:55)
  6: _11 = Len((*_4))
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:49-296:56)
  7: _12 = Lt(_10, _11)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:49-296:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:296:49-296:56)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb12, unwind: bb22]
  }
  preds [bb9]
  succs [bb12, bb22]

bb12
  0: _9 = &(*_4)[_10]
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:48-296:56)
  1: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:48-296:56)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:64-296:74)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:64-296:74)
  4: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:69-296:74)
  5: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:65-296:69)
  6: _16 = &(*_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:65-296:69)
  7: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:70-296:73)
  8: _17 = core::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:70-296:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:296:69-296:74)
      kind: _15 = <[ast::Ast] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _16, move _17) -> [return: bb13, unwind: bb22]
  }
  preds [bb11]
  succs [bb13, bb22]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:73-296:74)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:73-296:74)
  2: _14 = &(*_15)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:64-296:74)
  3: _13 = &(*_14)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:64-296:74)
  4: _7 = ast::visitor::Frame::<'_>::Concat { head: move _8, tail: move _13 }
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:26-296:76)
  5: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:75-296:76)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:75-296:76)
  7: _0 = core::option::Option::<ast::visitor::Frame<'_>>::Some(move _7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:21-296:77)
  8: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:296:76-296:77)
  9: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/visitor.rs:297:17-297:18)
  10: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/visitor.rs:297:17-297:18)
  11: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/visitor.rs:297:17-297:18)
  12: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/visitor.rs:297:17-297:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:293:17-297:18)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/visitor.rs:297:17-297:18)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:298:13-298:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:298:13-298:14)
      kind: goto -> bb21
  }
  preds [bb10, bb13]
  succs [bb21]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:300:20-300:35)
      kind: switchInt(move _19) -> [0: bb17, otherwise: bb16]
  }
  preds [bb5]
  succs [bb16, bb17]

bb16
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/visitor.rs:300:34-300:35)
  1: _0 = core::option::Option::<ast::visitor::Frame<'_>>::None
    SourceInfo(regex-syntax/src/ast/visitor.rs:301:21-301:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:300:17-307:18)
      kind: goto -> bb20
  }
  preds [bb15]
  succs [bb20]

bb17
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/visitor.rs:300:34-300:35)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/visitor.rs:303:26-306:22)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:31-304:39)
  3: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:31-304:39)
  4: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:37-304:38)
  5: _24 = const 0_usize
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:37-304:38)
  6: _25 = Len((*_18))
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:32-304:39)
  7: _26 = Lt(_24, _25)
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:32-304:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:304:32-304:39)
      kind: assert(move _26, "index out of bounds: the length is {} but the index is {}", move _25, _24) -> [success: bb18, unwind: bb22]
  }
  preds [bb15]
  succs [bb18, bb22]

bb18
  0: _23 = &(*_18)[_24]
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:31-304:39)
  1: _22 = &(*_23)
    SourceInfo(regex-syntax/src/ast/visitor.rs:304:31-304:39)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:31-305:41)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:31-305:41)
  4: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:36-305:41)
  5: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:32-305:36)
  6: _30 = &(*_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:32-305:36)
  7: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:37-305:40)
  8: _31 = core::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:37-305:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:305:36-305:41)
      kind: _29 = <[ast::Ast] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _30, move _31) -> [return: bb19, unwind: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:40-305:41)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:40-305:41)
  2: _28 = &(*_29)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:31-305:41)
  3: _27 = &(*_28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:305:31-305:41)
  4: _21 = ast::visitor::Frame::<'_>::Alternation { head: move _22, tail: move _27 }
    SourceInfo(regex-syntax/src/ast/visitor.rs:303:26-306:22)
  5: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/visitor.rs:306:21-306:22)
  6: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/visitor.rs:306:21-306:22)
  7: _0 = core::option::Option::<ast::visitor::Frame<'_>>::Some(move _21)
    SourceInfo(regex-syntax/src/ast/visitor.rs:303:21-306:23)
  8: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/visitor.rs:306:22-306:23)
  9: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/visitor.rs:307:17-307:18)
  10: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:307:17-307:18)
  11: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/visitor.rs:307:17-307:18)
  12: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/visitor.rs:307:17-307:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:300:17-307:18)
      kind: goto -> bb20
  }
  preds [bb18]
  succs [bb20]

bb20
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:307:17-307:18)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:308:13-308:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:308:13-308:14)
      kind: goto -> bb21
  }
  preds [bb16, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:310:6-310:6)
      kind: return
  }
  preds [bb6, bb7, bb14, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:288:5-310:6)
      kind: resume
  }
  preds [bb5, bb8, bb11, bb12, bb17, bb18]
  succs []

