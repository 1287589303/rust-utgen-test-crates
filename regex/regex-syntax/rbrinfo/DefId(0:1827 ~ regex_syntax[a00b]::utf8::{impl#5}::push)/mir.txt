bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/utf8.rs:321:9-321:58)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/utf8.rs:321:9-321:25)
  2: _5 = &mut ((*_1).0: std::vec::Vec<utf8::ScalarRange>)
    SourceInfo(regex-syntax/src/utf8.rs:321:9-321:25)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/utf8.rs:321:31-321:57)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/utf8.rs:321:45-321:50)
  5: _7 = _2
    SourceInfo(regex-syntax/src/utf8.rs:321:45-321:50)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/utf8.rs:321:52-321:55)
  7: _8 = _3
    SourceInfo(regex-syntax/src/utf8.rs:321:52-321:55)
  8: _6 = utf8::ScalarRange { start: move _7, end: move _8 }
    SourceInfo(regex-syntax/src/utf8.rs:321:31-321:57)
  9: StorageDead(_8)
    SourceInfo(regex-syntax/src/utf8.rs:321:56-321:57)
  10: StorageDead(_7)
    SourceInfo(regex-syntax/src/utf8.rs:321:56-321:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:321:9-321:58)
      kind: _4 = std::vec::Vec::<utf8::ScalarRange>::push(move _5, move _6) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/utf8.rs:321:57-321:58)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/utf8.rs:321:57-321:58)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/utf8.rs:321:58-321:59)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/utf8.rs:320:46-322:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:322:6-322:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:320:5-322:6)
      kind: resume
  }
  preds [bb0]
  succs []

