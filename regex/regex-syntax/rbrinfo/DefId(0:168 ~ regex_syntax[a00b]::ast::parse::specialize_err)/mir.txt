bb0
  0: PlaceMention(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:2425:21-2425:27)
  1: _4 = discriminant(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:2425:21-2425:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2425:12-2425:18)
      kind: switchInt(move _4) -> [1: bb1, otherwise: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2425:12-2425:18)
      kind: falseEdge -> [real: bb2, imaginary: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:2425:16-2425:17)
  1: _5 = move ((_1 as Err).0: ast::Error)
    SourceInfo(regex-syntax/src/ast/parse.rs:2425:16-2425:17)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:12-2426:26)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:12-2426:18)
  4: _7 = &(_5.0: ast::ErrorKind)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:12-2426:18)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:22-2426:26)
  6: _8 = &_2
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:22-2426:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2426:12-2426:26)
      kind: _6 = <ast::ErrorKind as core::cmp::PartialEq>::eq(move _7, move _8) -> [return: bb3, unwind: bb15]
  }
  preds [bb1]
  succs [bb3, bb15]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2426:12-2426:26)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:25-2426:26)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:25-2426:26)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:17-2427:74)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:36-2427:38)
  4: _10 = move _3
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:36-2427:38)
  5: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:49-2427:58)
  6: _11 = move (_5.1: std::string::String)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:49-2427:58)
  7: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:66-2427:72)
  8: _12 = (_5.2: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:66-2427:72)
  9: _9 = ast::Error { kind: move _10, pattern: move _11, span: move _12 }
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:17-2427:74)
  10: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:73-2427:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2427:73-2427:74)
      kind: drop(_11) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:73-2427:74)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:73-2427:74)
  2: _0 = core::result::Result::<T, ast::Error>::Err(move _9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:13-2427:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2427:74-2427:75)
      kind: drop(_9) -> [return: bb6, unwind: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2427:74-2427:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2426:9-2430:10)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:25-2426:26)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2426:25-2426:26)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2429:17-2429:18)
  3: _13 = move _5
    SourceInfo(regex-syntax/src/ast/parse.rs:2429:17-2429:18)
  4: _0 = core::result::Result::<T, ast::Error>::Err(move _13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2429:13-2429:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2429:18-2429:19)
      kind: drop(_13) -> [return: bb8, unwind: bb15]
  }
  preds [bb3]
  succs [bb8, bb15]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2429:18-2429:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2426:9-2430:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2430:9-2430:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2431:5-2431:6)
      kind: drop(_5) -> [return: bb11, unwind: bb16]
  }
  preds [bb6, bb8]
  succs [bb11, bb16]

bb10
  0: _0 = move _1
    SourceInfo(regex-syntax/src/ast/parse.rs:2432:9-2432:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2425:5-2433:6)
      kind: goto -> bb12
  }
  preds [bb0, bb1]
  succs [bb12]

bb11
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:2431:5-2431:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2425:5-2433:6)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2434:1-2434:2)
      kind: drop(_1) -> [return: bb13, unwind: bb17]
  }
  preds [bb10, bb11]
  succs [bb13, bb17]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2434:2-2434:2)
      kind: return
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2427:74-2427:75)
      kind: drop(_9) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2431:5-2431:6)
      kind: drop(_5) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb2, bb5, bb7, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2434:1-2434:2)
      kind: drop(_1) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb9, bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2420:1-2434:2)
      kind: resume
  }
  preds [bb12, bb16]
  succs []

