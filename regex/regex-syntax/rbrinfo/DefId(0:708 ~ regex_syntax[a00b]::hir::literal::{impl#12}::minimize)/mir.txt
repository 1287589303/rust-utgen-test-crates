bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2238:13-2238:21)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _4 = std::vec::Vec::<hir::literal::State>::new() -> [return: bb1, unwind: bb27]
  }
  preds []
  succs [bb1, bb27]

bb1
  0: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _5 = std::vec::Vec::<core::option::Option<core::num::NonZero<usize>>>::new() -> [return: bb2, unwind: bb26]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: _3 = hir::literal::PreferenceTrie { states: move _4, matches: move _5, next_literal_index: const 1_usize }
    SourceInfo(regex-syntax/src/hir/literal.rs:2238:24-2242:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2242:9-2242:10)
      kind: drop(_5) -> [return: bb3, unwind: bb26]
  }
  preds [bb1]
  succs [bb3, bb26]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2242:9-2242:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2242:9-2242:10)
      kind: drop(_4) -> [return: bb4, unwind: bb27]
  }
  preds [bb2]
  succs [bb4, bb27]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2242:9-2242:10)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2238:13-2238:21)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:2243:13-2243:29)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _6 = std::vec::Vec::<usize>::new() -> [return: bb5, unwind: bb25]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: FakeRead(ForLet(None), _6)
    SourceInfo(regex-syntax/src/hir/literal.rs:2243:13-2243:29)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:9-2252:11)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:9-2244:17)
  3: _8 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:9-2244:17)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  6: _10 = &mut _3
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  8: _11 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  9: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  10: _12 = &mut _6
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  11: _9 = {closure@regex-syntax/src/hir/literal.rs:2244:29: 2244:34} { trie: move _10, keep_exact: move _11, make_inexact: move _12 }
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:29-2252:10)
  12: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:33-2244:34)
  13: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:33-2244:34)
  14: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2244:33-2244:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2244:9-2252:11)
      kind: _7 = std::vec::Vec::<hir::literal::Literal>::retain_mut::<{closure@regex-syntax/src/hir/literal.rs:2244:29: 2244:34}>(move _8, move _9) -> [return: bb6, unwind: bb24]
  }
  preds [bb4]
  succs [bb6, bb24]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2252:10-2252:11)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2252:10-2252:11)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2252:11-2252:12)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  5: _14 = move _6
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
      kind: _13 = <std::vec::Vec<usize> as core::iter::IntoIterator>::into_iter(move _14) -> [return: bb7, unwind: bb23]
  }
  preds [bb5]
  succs [bb7, bb23]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:29-2253:30)
  1: PlaceMention(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  3: _15 = move _13
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
      kind: falseUnwind -> [real: bb9, unwind: bb21]
  }
  preds [bb7, bb16]
  succs [bb9, bb21]

bb9
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  4: _20 = &mut _15
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  5: _19 = &mut (*_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
      kind: _18 = <std::vec::IntoIter<usize> as core::iter::Iterator>::next(move _19) -> [return: bb10, unwind: bb21]
  }
  preds [bb8]
  succs [bb10, bb21]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:29-2253:30)
  1: PlaceMention(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  2: _21 = discriminant(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
      kind: switchInt(move _21) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:18-2253:30)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:13-2253:14)
  1: _23 = ((_18 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:13-2253:14)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:39)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:24)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:21-2254:24)
  5: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:21)
  6: _27 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:21)
  7: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:22-2254:23)
  8: _28 = _23
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:22-2254:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2254:21-2254:24)
      kind: _26 = <std::vec::Vec<hir::literal::Literal> as core::ops::IndexMut<usize>>::index_mut(move _27, move _28) -> [return: bb15, unwind: bb21]
  }
  preds [bb10, bb12]
  succs [bb15, bb21]

bb14
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
      kind: drop(_15) -> [return: bb17, unwind: bb22]
  }
  preds [bb12]
  succs [bb17, bb22]

bb15
  0: _25 = &mut (*_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:24)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:23-2254:24)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:23-2254:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2254:13-2254:39)
      kind: _24 = hir::literal::Literal::make_inexact(move _25) -> [return: bb16, unwind: bb21]
  }
  preds [bb13]
  succs [bb16, bb21]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:38-2254:39)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:39-2254:40)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:2254:39-2254:40)
  3: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:31-2255:10)
  4: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  5: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  7: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  8: _16 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:9-2255:10)
      kind: goto -> bb8
  }
  preds [bb15]
  succs [bb8]

bb17
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
      kind: drop(_13) -> [return: bb18, unwind: bb24]
  }
  preds [bb14]
  succs [bb18, bb24]

bb18
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
      kind: drop(_6) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
      kind: drop(_3) -> [return: bb20, unwind: bb27]
  }
  preds [bb18]
  succs [bb20, bb27]

bb20
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2256:6-2256:6)
      kind: return
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
      kind: drop(_15) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb13, bb15]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2255:9-2255:10)
      kind: drop(_13) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb14, bb21]
  succs [bb24]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2253:29-2253:30)
      kind: drop(_14) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
      kind: drop(_6) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb5, bb17, bb22, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2256:5-2256:6)
      kind: drop(_3) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb4, bb18, bb24]
  succs [bb27]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2242:9-2242:10)
      kind: drop(_4) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2237:5-2256:6)
      kind: resume
  }
  preds [bb0, bb3, bb19, bb25, bb26]
  succs []

