bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:13-1288:18)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:21-1288:44)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:21-1288:35)
  3: _5 = &mut ((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:21-1288:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1288:21-1288:44)
      kind: _4 = core::option::Option::<std::vec::Vec<hir::literal::Literal>>::as_mut(move _5) -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:43-1288:44)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:49-1288:70)
  2: _6 = {closure@regex-syntax/src/hir/literal.rs:1288:49: 1288:55}
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:49-1288:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1288:21-1288:71)
      kind: _3 = core::option::Option::<&mut std::vec::Vec<hir::literal::Literal>>::map::<std::vec::Drain<'_, hir::literal::Literal>, {closure@regex-syntax/src/hir/literal.rs:1288:49: 1288:55}>(move _4, move _6) -> [return: bb2, unwind: bb35]
  }
  preds [bb0]
  succs [bb2, bb35]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:70-1288:71)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:70-1288:71)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1288:13-1288:18)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1289:13-1289:18)
  4: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1289:27-1289:40)
  5: _8 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1289:27-1289:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1289:21-1289:40)
      kind: switchInt(move _8) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1289:27-1289:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1289:27-1289:40)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1290:13-1290:17)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1291:18-1291:30)
  1: _10 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1291:18-1291:30)
  2: _7 = move _10
    SourceInfo(regex-syntax/src/hir/literal.rs:1291:35-1291:39)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1291:38-1291:39)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1289:13-1289:18)
  5: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:13-1293:24)
  6: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
  7: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
  8: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
  9: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:38)
  10: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
  11: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:38)
  12: _17 = &(*_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
      kind: _16 = <std::vec::Vec<hir::literal::Literal> as core::ops::Deref>::deref(move _17) -> [return: bb7, unwind: bb34]
  }
  preds [bb2, bb4]
  succs [bb7, bb34]

bb6
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1290:21-1290:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1290:21-1290:27)
      kind: goto -> bb29
  }
  preds [bb4]
  succs [bb29]

bb7
  0: _15 = &(*_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:38)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:37-1293:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
      kind: _14 = core::slice::<impl [hir::literal::Literal]>::iter(move _15) -> [return: bb8, unwind: bb34]
  }
  preds [bb5]
  succs [bb8, bb34]

bb8
  0: _13 = &mut _14
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:45)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:44-1293:45)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:55-1293:71)
  3: _18 = {closure@regex-syntax/src/hir/literal.rs:1293:55: 1293:58}
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:55-1293:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
      kind: _12 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::Iterator>::position::<{closure@regex-syntax/src/hir/literal.rs:1293:55: 1293:58}>(move _13, move _18) -> [return: bb9, unwind: bb34]
  }
  preds [bb7]
  succs [bb9, bb34]

bb9
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:71-1293:72)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:71-1293:72)
  2: PlaceMention(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
  3: _19 = discriminant(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1293:27-1293:72)
      kind: switchInt(move _19) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1293:33-1293:72)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1294:13-1294:17)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1295:18-1295:19)
  1: _21 = ((_12 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1295:18-1295:19)
  2: _11 = _21
    SourceInfo(regex-syntax/src/hir/literal.rs:1295:24-1295:25)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1295:24-1295:25)
  4: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1293:13-1293:24)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  6: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  7: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  8: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1297:13-1297:18)
  9: PlaceMention(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1297:27-1297:32)
  10: _23 = discriminant(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1297:27-1297:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1297:21-1297:32)
      kind: switchInt(move _23) -> [0: bb15, 1: bb16, otherwise: bb14]
  }
  preds [bb9, bb11]
  succs [bb14, bb15, bb16]

bb13
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1294:21-1294:27)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1296:10-1296:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb11]
  succs [bb28]

bb14
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1297:27-1297:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1297:27-1297:32)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1298:13-1298:17)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb12]
  succs [bb16, bb17]

bb16
  0: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1305:18-1305:22)
  1: _26 = move ((_3 as Some).0: std::vec::Drain<'_, hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1305:18-1305:22)
  2: _22 = move _26
    SourceInfo(regex-syntax/src/hir/literal.rs:1305:27-1305:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1305:30-1305:31)
      kind: drop(_26) -> [return: bb21, unwind: bb34]
  }
  preds [bb12, bb15]
  succs [bb21, bb34]

bb17
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1302:33-1302:37)
  1: _25 = core::option::Option::<std::vec::Vec<hir::literal::Literal>>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1302:33-1302:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1302:17-1302:30)
      kind: drop(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>)) -> [return: bb18, unwind: bb19]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) = move _25
    SourceInfo(regex-syntax/src/hir/literal.rs:1302:17-1302:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1302:36-1302:37)
      kind: drop(_25) -> [return: bb20, unwind: bb34]
  }
  preds [bb17]
  succs [bb20, bb34]

bb19
  0: ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) = move _25
    SourceInfo(regex-syntax/src/hir/literal.rs:1302:17-1302:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1302:36-1302:37)
      kind: drop(_25) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb34]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1302:36-1302:37)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1303:17-1303:23)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb18]
  succs [bb28]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1305:30-1305:31)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1297:13-1297:18)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:9-1311:40)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:9-1311:14)
  4: _28 = &mut (*_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:9-1311:14)
  5: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:22-1311:39)
  6: _29 = {closure@regex-syntax/src/hir/literal.rs:1311:22: 1311:25}
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:22-1311:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1311:9-1311:40)
      kind: _27 = std::vec::Vec::<hir::literal::Literal>::retain::<{closure@regex-syntax/src/hir/literal.rs:1311:22: 1311:25}>(move _28, move _29) -> [return: bb22, unwind: bb33]
  }
  preds [bb16]
  succs [bb22, bb33]

bb22
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:39-1311:40)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:39-1311:40)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1311:40-1311:41)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:9-1312:54)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:9-1312:14)
  5: _31 = &mut (*_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:9-1312:14)
  6: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:22-1312:46)
  7: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:22-1312:33)
  8: _33 = _11
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:22-1312:33)
  9: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:35-1312:46)
  10: _34 = _11
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:35-1312:46)
  11: _32 = core::ops::Range::<usize> { start: move _33, end: move _34 }
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:22-1312:46)
  12: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:45-1312:46)
  13: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:45-1312:46)
  14: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:48-1312:53)
  15: _35 = move _22
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:48-1312:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1312:9-1312:54)
      kind: _30 = std::vec::Vec::<hir::literal::Literal>::splice::<core::ops::Range<usize>, std::vec::Drain<'_, hir::literal::Literal>>(move _31, move _32, move _35) -> [return: bb23, unwind: bb32]
  }
  preds [bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:53-1312:54)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:53-1312:54)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:53-1312:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1312:54-1312:55)
      kind: drop(_30) -> [return: bb24, unwind: bb33]
  }
  preds [bb22]
  succs [bb24, bb33]

bb24
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1312:54-1312:55)
  1: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1313:9-1313:21)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1313:9-1313:13)
  3: _37 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1313:9-1313:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1313:9-1313:21)
      kind: _36 = hir::literal::Seq::dedup(move _37) -> [return: bb25, unwind: bb33]
  }
  preds [bb23]
  succs [bb25, bb33]

bb25
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:1313:20-1313:21)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:1313:21-1313:22)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1287:57-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
      kind: drop(_22) -> [return: bb26, unwind: bb34]
  }
  preds [bb24]
  succs [bb26, bb34]

bb26
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
      kind: drop(_3) -> [return: bb27, unwind: bb35]
  }
  preds [bb25]
  succs [bb27, bb35]

bb27
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:6-1314:6)
      kind: goto -> bb31
  }
  preds [bb26]
  succs [bb31]

bb28
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb13, bb20]
  succs [bb29]

bb29
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
      kind: drop(_3) -> [return: bb30, unwind: bb35]
  }
  preds [bb6, bb28]
  succs [bb30, bb35]

bb30
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:6-1314:6)
      kind: goto -> bb31
  }
  preds [bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:6-1314:6)
      kind: return
  }
  preds [bb27, bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1312:53-1312:54)
      kind: drop(_35) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb22]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
      kind: drop(_22) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb21, bb23, bb24, bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1314:5-1314:6)
      kind: drop(_3) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb8, bb16, bb18, bb19, bb25, bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1287:5-1314:6)
      kind: resume
  }
  preds [bb0, bb1, bb26, bb29, bb34]
  succs []

