bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:9-1161:50)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:9-1161:17)
  2: _4 = &mut ((*_1).0: hir::interval::IntervalSet<hir::ClassUnicodeRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:9-1161:17)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:39-1161:49)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:39-1161:49)
  5: _6 = &((*_2).0: hir::interval::IntervalSet<hir::ClassUnicodeRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:39-1161:49)
  6: _5 = &(*_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:39-1161:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1161:9-1161:50)
      kind: _3 = hir::interval::IntervalSet::<hir::ClassUnicodeRange>::symmetric_difference(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:49-1161:50)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:49-1161:50)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:50-1161:51)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1161:50-1161:51)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1160:66-1162:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1162:6-1162:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1160:5-1162:6)
      kind: resume
  }
  preds [bb0]
  succs []

