bb0
  0: PlaceMention(((*_2).1: ast::ClassAsciiKind))
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _5 = discriminant(((*_2).1: ast::ClassAsciiKind))
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:344:9-344:23)
      kind: switchInt(move _5) -> [0: bb2, 1: bb4, 2: bb6, 3: bb8, 4: bb10, 5: bb12, 6: bb14, 7: bb16, 8: bb18, 9: bb20, 10: bb22, 11: bb24, 12: bb26, 13: bb28, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb4, bb6, bb8, bb10, bb12, bb14, bb16, bb18, bb20, bb22, bb24, bb26, bb28]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_2).1: ast::ClassAsciiKind))
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:345:13-345:18)
      kind: falseEdge -> [real: bb30, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb30]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:346:13-346:18)
      kind: falseEdge -> [real: bb34, imaginary: bb4]
  }
  preds [bb2, bb32]
  succs [bb4, bb34]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:347:13-347:18)
      kind: falseEdge -> [real: bb36, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb36]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:348:13-348:18)
      kind: falseEdge -> [real: bb40, imaginary: bb6]
  }
  preds [bb4, bb38]
  succs [bb6, bb40]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:349:13-349:18)
      kind: falseEdge -> [real: bb42, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb42]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:350:13-350:18)
      kind: falseEdge -> [real: bb46, imaginary: bb8]
  }
  preds [bb6, bb44]
  succs [bb8, bb46]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:351:13-351:18)
      kind: falseEdge -> [real: bb48, imaginary: bb9]
  }
  preds [bb0, bb7]
  succs [bb9, bb48]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:352:13-352:18)
      kind: falseEdge -> [real: bb52, imaginary: bb10]
  }
  preds [bb8, bb50]
  succs [bb10, bb52]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:353:13-353:18)
      kind: falseEdge -> [real: bb54, imaginary: bb11]
  }
  preds [bb0, bb9]
  succs [bb11, bb54]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:354:13-354:18)
      kind: falseEdge -> [real: bb58, imaginary: bb12]
  }
  preds [bb10, bb56]
  succs [bb12, bb58]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:355:13-355:18)
      kind: falseEdge -> [real: bb60, imaginary: bb13]
  }
  preds [bb0, bb11]
  succs [bb13, bb60]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:356:13-356:18)
      kind: falseEdge -> [real: bb64, imaginary: bb14]
  }
  preds [bb12, bb62]
  succs [bb14, bb64]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:357:13-357:18)
      kind: falseEdge -> [real: bb66, imaginary: bb15]
  }
  preds [bb0, bb13]
  succs [bb15, bb66]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:358:13-358:18)
      kind: falseEdge -> [real: bb70, imaginary: bb16]
  }
  preds [bb14, bb68]
  succs [bb16, bb70]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:359:13-359:18)
      kind: falseEdge -> [real: bb72, imaginary: bb17]
  }
  preds [bb0, bb15]
  succs [bb17, bb72]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:360:13-360:18)
      kind: falseEdge -> [real: bb76, imaginary: bb18]
  }
  preds [bb16, bb74]
  succs [bb18, bb76]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:361:13-361:18)
      kind: falseEdge -> [real: bb78, imaginary: bb19]
  }
  preds [bb0, bb17]
  succs [bb19, bb78]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:362:13-362:18)
      kind: falseEdge -> [real: bb82, imaginary: bb20]
  }
  preds [bb18, bb80]
  succs [bb20, bb82]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:363:13-363:18)
      kind: falseEdge -> [real: bb84, imaginary: bb21]
  }
  preds [bb0, bb19]
  succs [bb21, bb84]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:364:13-364:18)
      kind: falseEdge -> [real: bb88, imaginary: bb22]
  }
  preds [bb20, bb86]
  succs [bb22, bb88]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:365:13-365:18)
      kind: falseEdge -> [real: bb90, imaginary: bb23]
  }
  preds [bb0, bb21]
  succs [bb23, bb90]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:366:13-366:18)
      kind: falseEdge -> [real: bb94, imaginary: bb24]
  }
  preds [bb22, bb92]
  succs [bb24, bb94]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:367:13-367:18)
      kind: falseEdge -> [real: bb96, imaginary: bb25]
  }
  preds [bb0, bb23]
  succs [bb25, bb96]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:368:13-368:18)
      kind: falseEdge -> [real: bb100, imaginary: bb26]
  }
  preds [bb24, bb98]
  succs [bb26, bb100]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:369:13-369:17)
      kind: falseEdge -> [real: bb102, imaginary: bb27]
  }
  preds [bb0, bb25]
  succs [bb27, bb102]

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:370:13-370:17)
      kind: falseEdge -> [real: bb106, imaginary: bb28]
  }
  preds [bb26, bb104]
  succs [bb28, bb106]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:371:13-371:19)
      kind: falseEdge -> [real: bb108, imaginary: bb29]
  }
  preds [bb0, bb27]
  succs [bb29, bb108]

bb29
  0: StorageLive(_101)
    SourceInfo(regex-syntax/src/ast/print.rs:372:23-372:31)
  1: _101 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:372:23-372:31)
  2: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/print.rs:372:42-372:54)
  3: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/print.rs:372:42-372:54)
  4: _103 = const "[:xdigit:]"
    SourceInfo(regex-syntax/src/ast/print.rs:372:42-372:54)
  5: _102 = &(*_103)
    SourceInfo(regex-syntax/src/ast/print.rs:372:42-372:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:372:23-372:55)
      kind: _0 = <W as core::fmt::Write>::write_str(move _101, move _102) -> [return: bb112, unwind: bb114]
  }
  preds [bb28, bb110]
  succs [bb112, bb114]

bb30
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:345:22-345:33)
  3: _6 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:345:22-345:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:345:22-345:33)
      kind: switchInt(move _6) -> [0: bb32, otherwise: bb31]
  }
  preds [bb2]
  succs [bb31, bb32]

bb31
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:345:32-345:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:345:32-345:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:345:32-345:33)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:345:37-345:45)
  4: _7 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:345:37-345:45)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:345:56-345:68)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:345:56-345:68)
  7: _9 = const "[:^alnum:]"
    SourceInfo(regex-syntax/src/ast/print.rs:345:56-345:68)
  8: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/print.rs:345:56-345:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:345:37-345:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _7, move _8) -> [return: bb33, unwind: bb114]
  }
  preds [bb30]
  succs [bb33, bb114]

bb32
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:345:32-345:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:345:22-345:33)
      kind: goto -> bb3
  }
  preds [bb30]
  succs [bb3]

bb33
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:345:68-345:69)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:345:68-345:69)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:345:68-345:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:345:68-345:69)
      kind: goto -> bb113
  }
  preds [bb31]
  succs [bb113]

bb34
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:346:22-346:30)
  1: _10 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:346:22-346:30)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/print.rs:346:41-346:52)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:346:41-346:52)
  4: _12 = const "[:alnum:]"
    SourceInfo(regex-syntax/src/ast/print.rs:346:41-346:52)
  5: _11 = &(*_12)
    SourceInfo(regex-syntax/src/ast/print.rs:346:41-346:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:346:22-346:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _10, move _11) -> [return: bb35, unwind: bb114]
  }
  preds [bb3]
  succs [bb35, bb114]

bb35
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/print.rs:346:52-346:53)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:346:52-346:53)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:346:52-346:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:346:52-346:53)
      kind: goto -> bb113
  }
  preds [bb34]
  succs [bb113]

bb36
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:347:22-347:33)
  3: _13 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:347:22-347:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:347:22-347:33)
      kind: switchInt(move _13) -> [0: bb38, otherwise: bb37]
  }
  preds [bb4]
  succs [bb37, bb38]

bb37
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:347:32-347:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:347:32-347:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:347:32-347:33)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:347:37-347:45)
  4: _14 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:347:37-347:45)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:347:56-347:68)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:347:56-347:68)
  7: _16 = const "[:^alpha:]"
    SourceInfo(regex-syntax/src/ast/print.rs:347:56-347:68)
  8: _15 = &(*_16)
    SourceInfo(regex-syntax/src/ast/print.rs:347:56-347:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:347:37-347:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _14, move _15) -> [return: bb39, unwind: bb114]
  }
  preds [bb36]
  succs [bb39, bb114]

bb38
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:347:32-347:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:347:22-347:33)
      kind: goto -> bb5
  }
  preds [bb36]
  succs [bb5]

bb39
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:347:68-347:69)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:347:68-347:69)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:347:68-347:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:347:68-347:69)
      kind: goto -> bb113
  }
  preds [bb37]
  succs [bb113]

bb40
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:348:22-348:30)
  1: _17 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:348:22-348:30)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:348:41-348:52)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:348:41-348:52)
  4: _19 = const "[:alpha:]"
    SourceInfo(regex-syntax/src/ast/print.rs:348:41-348:52)
  5: _18 = &(*_19)
    SourceInfo(regex-syntax/src/ast/print.rs:348:41-348:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:348:22-348:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _17, move _18) -> [return: bb41, unwind: bb114]
  }
  preds [bb5]
  succs [bb41, bb114]

bb41
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:348:52-348:53)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:348:52-348:53)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:348:52-348:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:348:52-348:53)
      kind: goto -> bb113
  }
  preds [bb40]
  succs [bb113]

bb42
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:349:22-349:33)
  3: _20 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:349:22-349:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:349:22-349:33)
      kind: switchInt(move _20) -> [0: bb44, otherwise: bb43]
  }
  preds [bb6]
  succs [bb43, bb44]

bb43
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:349:32-349:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:349:32-349:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:349:32-349:33)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:349:37-349:45)
  4: _21 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:349:37-349:45)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/print.rs:349:56-349:68)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:349:56-349:68)
  7: _23 = const "[:^ascii:]"
    SourceInfo(regex-syntax/src/ast/print.rs:349:56-349:68)
  8: _22 = &(*_23)
    SourceInfo(regex-syntax/src/ast/print.rs:349:56-349:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:349:37-349:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _21, move _22) -> [return: bb45, unwind: bb114]
  }
  preds [bb42]
  succs [bb45, bb114]

bb44
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:349:32-349:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:349:22-349:33)
      kind: goto -> bb7
  }
  preds [bb42]
  succs [bb7]

bb45
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/print.rs:349:68-349:69)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:349:68-349:69)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:349:68-349:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:349:68-349:69)
      kind: goto -> bb113
  }
  preds [bb43]
  succs [bb113]

bb46
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:350:22-350:30)
  1: _24 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:350:22-350:30)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:350:41-350:52)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:350:41-350:52)
  4: _26 = const "[:ascii:]"
    SourceInfo(regex-syntax/src/ast/print.rs:350:41-350:52)
  5: _25 = &(*_26)
    SourceInfo(regex-syntax/src/ast/print.rs:350:41-350:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:350:22-350:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _24, move _25) -> [return: bb47, unwind: bb114]
  }
  preds [bb7]
  succs [bb47, bb114]

bb47
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:350:52-350:53)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:350:52-350:53)
  2: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:350:52-350:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:350:52-350:53)
      kind: goto -> bb113
  }
  preds [bb46]
  succs [bb113]

bb48
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:351:22-351:33)
  3: _27 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:351:22-351:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:351:22-351:33)
      kind: switchInt(move _27) -> [0: bb50, otherwise: bb49]
  }
  preds [bb8]
  succs [bb49, bb50]

bb49
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:351:32-351:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:351:32-351:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:351:32-351:33)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:351:37-351:45)
  4: _28 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:351:37-351:45)
  5: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:351:56-351:68)
  6: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:351:56-351:68)
  7: _30 = const "[:^blank:]"
    SourceInfo(regex-syntax/src/ast/print.rs:351:56-351:68)
  8: _29 = &(*_30)
    SourceInfo(regex-syntax/src/ast/print.rs:351:56-351:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:351:37-351:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _28, move _29) -> [return: bb51, unwind: bb114]
  }
  preds [bb48]
  succs [bb51, bb114]

bb50
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:351:32-351:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:351:22-351:33)
      kind: goto -> bb9
  }
  preds [bb48]
  succs [bb9]

bb51
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:351:68-351:69)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:351:68-351:69)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:351:68-351:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:351:68-351:69)
      kind: goto -> bb113
  }
  preds [bb49]
  succs [bb113]

bb52
  0: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/print.rs:352:22-352:30)
  1: _31 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:352:22-352:30)
  2: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:352:41-352:52)
  3: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/print.rs:352:41-352:52)
  4: _33 = const "[:blank:]"
    SourceInfo(regex-syntax/src/ast/print.rs:352:41-352:52)
  5: _32 = &(*_33)
    SourceInfo(regex-syntax/src/ast/print.rs:352:41-352:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:352:22-352:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _31, move _32) -> [return: bb53, unwind: bb114]
  }
  preds [bb9]
  succs [bb53, bb114]

bb53
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:352:52-352:53)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/print.rs:352:52-352:53)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/print.rs:352:52-352:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:352:52-352:53)
      kind: goto -> bb113
  }
  preds [bb52]
  succs [bb113]

bb54
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:353:22-353:33)
  3: _34 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:353:22-353:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:353:22-353:33)
      kind: switchInt(move _34) -> [0: bb56, otherwise: bb55]
  }
  preds [bb10]
  succs [bb55, bb56]

bb55
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:353:32-353:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:353:32-353:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:353:32-353:33)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/print.rs:353:37-353:45)
  4: _35 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:353:37-353:45)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:353:56-353:68)
  6: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/print.rs:353:56-353:68)
  7: _37 = const "[:^cntrl:]"
    SourceInfo(regex-syntax/src/ast/print.rs:353:56-353:68)
  8: _36 = &(*_37)
    SourceInfo(regex-syntax/src/ast/print.rs:353:56-353:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:353:37-353:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _35, move _36) -> [return: bb57, unwind: bb114]
  }
  preds [bb54]
  succs [bb57, bb114]

bb56
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:353:32-353:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:353:22-353:33)
      kind: goto -> bb11
  }
  preds [bb54]
  succs [bb11]

bb57
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:353:68-353:69)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/print.rs:353:68-353:69)
  2: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/print.rs:353:68-353:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:353:68-353:69)
      kind: goto -> bb113
  }
  preds [bb55]
  succs [bb113]

bb58
  0: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/print.rs:354:22-354:30)
  1: _38 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:354:22-354:30)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/print.rs:354:41-354:52)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/print.rs:354:41-354:52)
  4: _40 = const "[:cntrl:]"
    SourceInfo(regex-syntax/src/ast/print.rs:354:41-354:52)
  5: _39 = &(*_40)
    SourceInfo(regex-syntax/src/ast/print.rs:354:41-354:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:354:22-354:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _38, move _39) -> [return: bb59, unwind: bb114]
  }
  preds [bb11]
  succs [bb59, bb114]

bb59
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/print.rs:354:52-354:53)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/print.rs:354:52-354:53)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/print.rs:354:52-354:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:354:52-354:53)
      kind: goto -> bb113
  }
  preds [bb58]
  succs [bb113]

bb60
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:355:22-355:33)
  3: _41 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:355:22-355:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:355:22-355:33)
      kind: switchInt(move _41) -> [0: bb62, otherwise: bb61]
  }
  preds [bb12]
  succs [bb61, bb62]

bb61
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:355:32-355:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:355:32-355:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:355:32-355:33)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/print.rs:355:37-355:45)
  4: _42 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:355:37-355:45)
  5: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/print.rs:355:56-355:68)
  6: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/print.rs:355:56-355:68)
  7: _44 = const "[:^digit:]"
    SourceInfo(regex-syntax/src/ast/print.rs:355:56-355:68)
  8: _43 = &(*_44)
    SourceInfo(regex-syntax/src/ast/print.rs:355:56-355:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:355:37-355:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _42, move _43) -> [return: bb63, unwind: bb114]
  }
  preds [bb60]
  succs [bb63, bb114]

bb62
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:355:32-355:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:355:22-355:33)
      kind: goto -> bb13
  }
  preds [bb60]
  succs [bb13]

bb63
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/print.rs:355:68-355:69)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/print.rs:355:68-355:69)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/print.rs:355:68-355:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:355:68-355:69)
      kind: goto -> bb113
  }
  preds [bb61]
  succs [bb113]

bb64
  0: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/print.rs:356:22-356:30)
  1: _45 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:356:22-356:30)
  2: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/print.rs:356:41-356:52)
  3: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/print.rs:356:41-356:52)
  4: _47 = const "[:digit:]"
    SourceInfo(regex-syntax/src/ast/print.rs:356:41-356:52)
  5: _46 = &(*_47)
    SourceInfo(regex-syntax/src/ast/print.rs:356:41-356:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:356:22-356:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _45, move _46) -> [return: bb65, unwind: bb114]
  }
  preds [bb13]
  succs [bb65, bb114]

bb65
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/print.rs:356:52-356:53)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/print.rs:356:52-356:53)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/print.rs:356:52-356:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:356:52-356:53)
      kind: goto -> bb113
  }
  preds [bb64]
  succs [bb113]

bb66
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/print.rs:357:22-357:33)
  3: _48 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:357:22-357:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:357:22-357:33)
      kind: switchInt(move _48) -> [0: bb68, otherwise: bb67]
  }
  preds [bb14]
  succs [bb67, bb68]

bb67
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/print.rs:357:32-357:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:357:32-357:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:357:32-357:33)
  3: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/print.rs:357:37-357:45)
  4: _49 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:357:37-357:45)
  5: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/print.rs:357:56-357:68)
  6: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/print.rs:357:56-357:68)
  7: _51 = const "[:^graph:]"
    SourceInfo(regex-syntax/src/ast/print.rs:357:56-357:68)
  8: _50 = &(*_51)
    SourceInfo(regex-syntax/src/ast/print.rs:357:56-357:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:357:37-357:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _49, move _50) -> [return: bb69, unwind: bb114]
  }
  preds [bb66]
  succs [bb69, bb114]

bb68
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/print.rs:357:32-357:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:357:22-357:33)
      kind: goto -> bb15
  }
  preds [bb66]
  succs [bb15]

bb69
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/print.rs:357:68-357:69)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/print.rs:357:68-357:69)
  2: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/print.rs:357:68-357:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:357:68-357:69)
      kind: goto -> bb113
  }
  preds [bb67]
  succs [bb113]

bb70
  0: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/print.rs:358:22-358:30)
  1: _52 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:358:22-358:30)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/print.rs:358:41-358:52)
  3: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/print.rs:358:41-358:52)
  4: _54 = const "[:graph:]"
    SourceInfo(regex-syntax/src/ast/print.rs:358:41-358:52)
  5: _53 = &(*_54)
    SourceInfo(regex-syntax/src/ast/print.rs:358:41-358:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:358:22-358:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _52, move _53) -> [return: bb71, unwind: bb114]
  }
  preds [bb15]
  succs [bb71, bb114]

bb71
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/print.rs:358:52-358:53)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/print.rs:358:52-358:53)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/print.rs:358:52-358:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:358:52-358:53)
      kind: goto -> bb113
  }
  preds [bb70]
  succs [bb113]

bb72
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/print.rs:359:22-359:33)
  3: _55 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:359:22-359:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:359:22-359:33)
      kind: switchInt(move _55) -> [0: bb74, otherwise: bb73]
  }
  preds [bb16]
  succs [bb73, bb74]

bb73
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/print.rs:359:32-359:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:359:32-359:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:359:32-359:33)
  3: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/print.rs:359:37-359:45)
  4: _56 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:359:37-359:45)
  5: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/print.rs:359:56-359:68)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/print.rs:359:56-359:68)
  7: _58 = const "[:^lower:]"
    SourceInfo(regex-syntax/src/ast/print.rs:359:56-359:68)
  8: _57 = &(*_58)
    SourceInfo(regex-syntax/src/ast/print.rs:359:56-359:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:359:37-359:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _56, move _57) -> [return: bb75, unwind: bb114]
  }
  preds [bb72]
  succs [bb75, bb114]

bb74
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/print.rs:359:32-359:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:359:22-359:33)
      kind: goto -> bb17
  }
  preds [bb72]
  succs [bb17]

bb75
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/print.rs:359:68-359:69)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/print.rs:359:68-359:69)
  2: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/print.rs:359:68-359:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:359:68-359:69)
      kind: goto -> bb113
  }
  preds [bb73]
  succs [bb113]

bb76
  0: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/print.rs:360:22-360:30)
  1: _59 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:360:22-360:30)
  2: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/print.rs:360:41-360:52)
  3: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/print.rs:360:41-360:52)
  4: _61 = const "[:lower:]"
    SourceInfo(regex-syntax/src/ast/print.rs:360:41-360:52)
  5: _60 = &(*_61)
    SourceInfo(regex-syntax/src/ast/print.rs:360:41-360:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:360:22-360:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _59, move _60) -> [return: bb77, unwind: bb114]
  }
  preds [bb17]
  succs [bb77, bb114]

bb77
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/print.rs:360:52-360:53)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/print.rs:360:52-360:53)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/print.rs:360:52-360:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:360:52-360:53)
      kind: goto -> bb113
  }
  preds [bb76]
  succs [bb113]

bb78
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/print.rs:361:22-361:33)
  3: _62 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:361:22-361:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:361:22-361:33)
      kind: switchInt(move _62) -> [0: bb80, otherwise: bb79]
  }
  preds [bb18]
  succs [bb79, bb80]

bb79
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/print.rs:361:32-361:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:361:32-361:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:361:32-361:33)
  3: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/print.rs:361:37-361:45)
  4: _63 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:361:37-361:45)
  5: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/print.rs:361:56-361:68)
  6: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/print.rs:361:56-361:68)
  7: _65 = const "[:^print:]"
    SourceInfo(regex-syntax/src/ast/print.rs:361:56-361:68)
  8: _64 = &(*_65)
    SourceInfo(regex-syntax/src/ast/print.rs:361:56-361:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:361:37-361:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _63, move _64) -> [return: bb81, unwind: bb114]
  }
  preds [bb78]
  succs [bb81, bb114]

bb80
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/print.rs:361:32-361:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:361:22-361:33)
      kind: goto -> bb19
  }
  preds [bb78]
  succs [bb19]

bb81
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/print.rs:361:68-361:69)
  1: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/print.rs:361:68-361:69)
  2: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/print.rs:361:68-361:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:361:68-361:69)
      kind: goto -> bb113
  }
  preds [bb79]
  succs [bb113]

bb82
  0: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/print.rs:362:22-362:30)
  1: _66 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:362:22-362:30)
  2: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/print.rs:362:41-362:52)
  3: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/print.rs:362:41-362:52)
  4: _68 = const "[:print:]"
    SourceInfo(regex-syntax/src/ast/print.rs:362:41-362:52)
  5: _67 = &(*_68)
    SourceInfo(regex-syntax/src/ast/print.rs:362:41-362:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:362:22-362:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _66, move _67) -> [return: bb83, unwind: bb114]
  }
  preds [bb19]
  succs [bb83, bb114]

bb83
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/print.rs:362:52-362:53)
  1: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/print.rs:362:52-362:53)
  2: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/print.rs:362:52-362:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:362:52-362:53)
      kind: goto -> bb113
  }
  preds [bb82]
  succs [bb113]

bb84
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/print.rs:363:22-363:33)
  3: _69 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:363:22-363:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:363:22-363:33)
      kind: switchInt(move _69) -> [0: bb86, otherwise: bb85]
  }
  preds [bb20]
  succs [bb85, bb86]

bb85
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/print.rs:363:32-363:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:363:32-363:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:363:32-363:33)
  3: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/print.rs:363:37-363:45)
  4: _70 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:363:37-363:45)
  5: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/print.rs:363:56-363:68)
  6: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/print.rs:363:56-363:68)
  7: _72 = const "[:^punct:]"
    SourceInfo(regex-syntax/src/ast/print.rs:363:56-363:68)
  8: _71 = &(*_72)
    SourceInfo(regex-syntax/src/ast/print.rs:363:56-363:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:363:37-363:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _70, move _71) -> [return: bb87, unwind: bb114]
  }
  preds [bb84]
  succs [bb87, bb114]

bb86
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/print.rs:363:32-363:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:363:22-363:33)
      kind: goto -> bb21
  }
  preds [bb84]
  succs [bb21]

bb87
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/print.rs:363:68-363:69)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/print.rs:363:68-363:69)
  2: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/print.rs:363:68-363:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:363:68-363:69)
      kind: goto -> bb113
  }
  preds [bb85]
  succs [bb113]

bb88
  0: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/print.rs:364:22-364:30)
  1: _73 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:364:22-364:30)
  2: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/print.rs:364:41-364:52)
  3: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/print.rs:364:41-364:52)
  4: _75 = const "[:punct:]"
    SourceInfo(regex-syntax/src/ast/print.rs:364:41-364:52)
  5: _74 = &(*_75)
    SourceInfo(regex-syntax/src/ast/print.rs:364:41-364:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:364:22-364:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _73, move _74) -> [return: bb89, unwind: bb114]
  }
  preds [bb21]
  succs [bb89, bb114]

bb89
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/print.rs:364:52-364:53)
  1: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/print.rs:364:52-364:53)
  2: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/print.rs:364:52-364:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:364:52-364:53)
      kind: goto -> bb113
  }
  preds [bb88]
  succs [bb113]

bb90
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/print.rs:365:22-365:33)
  3: _76 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:365:22-365:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:365:22-365:33)
      kind: switchInt(move _76) -> [0: bb92, otherwise: bb91]
  }
  preds [bb22]
  succs [bb91, bb92]

bb91
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/print.rs:365:32-365:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:365:32-365:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:365:32-365:33)
  3: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/print.rs:365:37-365:45)
  4: _77 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:365:37-365:45)
  5: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/print.rs:365:56-365:68)
  6: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/print.rs:365:56-365:68)
  7: _79 = const "[:^space:]"
    SourceInfo(regex-syntax/src/ast/print.rs:365:56-365:68)
  8: _78 = &(*_79)
    SourceInfo(regex-syntax/src/ast/print.rs:365:56-365:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:365:37-365:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _77, move _78) -> [return: bb93, unwind: bb114]
  }
  preds [bb90]
  succs [bb93, bb114]

bb92
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/print.rs:365:32-365:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:365:22-365:33)
      kind: goto -> bb23
  }
  preds [bb90]
  succs [bb23]

bb93
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/print.rs:365:68-365:69)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/print.rs:365:68-365:69)
  2: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/print.rs:365:68-365:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:365:68-365:69)
      kind: goto -> bb113
  }
  preds [bb91]
  succs [bb113]

bb94
  0: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/print.rs:366:22-366:30)
  1: _80 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:366:22-366:30)
  2: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/print.rs:366:41-366:52)
  3: StorageLive(_82)
    SourceInfo(regex-syntax/src/ast/print.rs:366:41-366:52)
  4: _82 = const "[:space:]"
    SourceInfo(regex-syntax/src/ast/print.rs:366:41-366:52)
  5: _81 = &(*_82)
    SourceInfo(regex-syntax/src/ast/print.rs:366:41-366:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:366:22-366:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _80, move _81) -> [return: bb95, unwind: bb114]
  }
  preds [bb23]
  succs [bb95, bb114]

bb95
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/print.rs:366:52-366:53)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/print.rs:366:52-366:53)
  2: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/print.rs:366:52-366:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:366:52-366:53)
      kind: goto -> bb113
  }
  preds [bb94]
  succs [bb113]

bb96
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/print.rs:367:22-367:33)
  3: _83 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:367:22-367:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:367:22-367:33)
      kind: switchInt(move _83) -> [0: bb98, otherwise: bb97]
  }
  preds [bb24]
  succs [bb97, bb98]

bb97
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/print.rs:367:32-367:33)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:367:32-367:33)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:367:32-367:33)
  3: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/print.rs:367:37-367:45)
  4: _84 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:367:37-367:45)
  5: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/print.rs:367:56-367:68)
  6: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/print.rs:367:56-367:68)
  7: _86 = const "[:^upper:]"
    SourceInfo(regex-syntax/src/ast/print.rs:367:56-367:68)
  8: _85 = &(*_86)
    SourceInfo(regex-syntax/src/ast/print.rs:367:56-367:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:367:37-367:69)
      kind: _0 = <W as core::fmt::Write>::write_str(move _84, move _85) -> [return: bb99, unwind: bb114]
  }
  preds [bb96]
  succs [bb99, bb114]

bb98
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/print.rs:367:32-367:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:367:22-367:33)
      kind: goto -> bb25
  }
  preds [bb96]
  succs [bb25]

bb99
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/print.rs:367:68-367:69)
  1: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/print.rs:367:68-367:69)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/print.rs:367:68-367:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:367:68-367:69)
      kind: goto -> bb113
  }
  preds [bb97]
  succs [bb113]

bb100
  0: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/print.rs:368:22-368:30)
  1: _87 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:368:22-368:30)
  2: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/print.rs:368:41-368:52)
  3: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/print.rs:368:41-368:52)
  4: _89 = const "[:upper:]"
    SourceInfo(regex-syntax/src/ast/print.rs:368:41-368:52)
  5: _88 = &(*_89)
    SourceInfo(regex-syntax/src/ast/print.rs:368:41-368:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:368:22-368:53)
      kind: _0 = <W as core::fmt::Write>::write_str(move _87, move _88) -> [return: bb101, unwind: bb114]
  }
  preds [bb25]
  succs [bb101, bb114]

bb101
  0: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/print.rs:368:52-368:53)
  1: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/print.rs:368:52-368:53)
  2: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/print.rs:368:52-368:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:368:52-368:53)
      kind: goto -> bb113
  }
  preds [bb100]
  succs [bb113]

bb102
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/print.rs:369:21-369:32)
  3: _90 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:369:21-369:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:369:21-369:32)
      kind: switchInt(move _90) -> [0: bb104, otherwise: bb103]
  }
  preds [bb26]
  succs [bb103, bb104]

bb103
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/print.rs:369:31-369:32)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:369:31-369:32)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:369:31-369:32)
  3: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/print.rs:369:36-369:44)
  4: _91 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:369:36-369:44)
  5: StorageLive(_92)
    SourceInfo(regex-syntax/src/ast/print.rs:369:55-369:66)
  6: StorageLive(_93)
    SourceInfo(regex-syntax/src/ast/print.rs:369:55-369:66)
  7: _93 = const "[:^word:]"
    SourceInfo(regex-syntax/src/ast/print.rs:369:55-369:66)
  8: _92 = &(*_93)
    SourceInfo(regex-syntax/src/ast/print.rs:369:55-369:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:369:36-369:67)
      kind: _0 = <W as core::fmt::Write>::write_str(move _91, move _92) -> [return: bb105, unwind: bb114]
  }
  preds [bb102]
  succs [bb105, bb114]

bb104
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/print.rs:369:31-369:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:369:21-369:32)
      kind: goto -> bb27
  }
  preds [bb102]
  succs [bb27]

bb105
  0: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/print.rs:369:66-369:67)
  1: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/print.rs:369:66-369:67)
  2: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/print.rs:369:66-369:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:369:66-369:67)
      kind: goto -> bb113
  }
  preds [bb103]
  succs [bb113]

bb106
  0: StorageLive(_94)
    SourceInfo(regex-syntax/src/ast/print.rs:370:21-370:29)
  1: _94 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:370:21-370:29)
  2: StorageLive(_95)
    SourceInfo(regex-syntax/src/ast/print.rs:370:40-370:50)
  3: StorageLive(_96)
    SourceInfo(regex-syntax/src/ast/print.rs:370:40-370:50)
  4: _96 = const "[:word:]"
    SourceInfo(regex-syntax/src/ast/print.rs:370:40-370:50)
  5: _95 = &(*_96)
    SourceInfo(regex-syntax/src/ast/print.rs:370:40-370:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:370:21-370:51)
      kind: _0 = <W as core::fmt::Write>::write_str(move _94, move _95) -> [return: bb107, unwind: bb114]
  }
  preds [bb27]
  succs [bb107, bb114]

bb107
  0: StorageDead(_95)
    SourceInfo(regex-syntax/src/ast/print.rs:370:50-370:51)
  1: StorageDead(_94)
    SourceInfo(regex-syntax/src/ast/print.rs:370:50-370:51)
  2: StorageDead(_96)
    SourceInfo(regex-syntax/src/ast/print.rs:370:50-370:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:370:50-370:51)
      kind: goto -> bb113
  }
  preds [bb106]
  succs [bb113]

bb108
  0: _3 = &fake shallow ((*_2).1: ast::ClassAsciiKind)
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:344:15-344:23)
  2: StorageLive(_97)
    SourceInfo(regex-syntax/src/ast/print.rs:371:23-371:34)
  3: _97 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:371:23-371:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:371:23-371:34)
      kind: switchInt(move _97) -> [0: bb110, otherwise: bb109]
  }
  preds [bb28]
  succs [bb109, bb110]

bb109
  0: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/print.rs:371:33-371:34)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:371:33-371:34)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:371:33-371:34)
  3: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/print.rs:371:38-371:46)
  4: _98 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:371:38-371:46)
  5: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/print.rs:371:57-371:70)
  6: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/print.rs:371:57-371:70)
  7: _100 = const "[:^xdigit:]"
    SourceInfo(regex-syntax/src/ast/print.rs:371:57-371:70)
  8: _99 = &(*_100)
    SourceInfo(regex-syntax/src/ast/print.rs:371:57-371:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:371:38-371:71)
      kind: _0 = <W as core::fmt::Write>::write_str(move _98, move _99) -> [return: bb111, unwind: bb114]
  }
  preds [bb108]
  succs [bb111, bb114]

bb110
  0: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/print.rs:371:33-371:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:371:23-371:34)
      kind: goto -> bb29
  }
  preds [bb108]
  succs [bb29]

bb111
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/print.rs:371:70-371:71)
  1: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/print.rs:371:70-371:71)
  2: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/print.rs:371:70-371:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:371:70-371:71)
      kind: goto -> bb113
  }
  preds [bb109]
  succs [bb113]

bb112
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/print.rs:372:54-372:55)
  1: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/print.rs:372:54-372:55)
  2: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/print.rs:372:54-372:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:372:54-372:55)
      kind: goto -> bb113
  }
  preds [bb29]
  succs [bb113]

bb113
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:374:6-374:6)
      kind: return
  }
  preds [bb33, bb35, bb39, bb41, bb45, bb47, bb51, bb53, bb57, bb59, bb63, bb65, bb69, bb71, bb75, bb77, bb81, bb83, bb87, bb89, bb93, bb95, bb99, bb101, bb105, bb107, bb111, bb112]
  succs []

bb114
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:342:5-374:6)
      kind: resume
  }
  preds [bb29, bb31, bb34, bb37, bb40, bb43, bb46, bb49, bb52, bb55, bb58, bb61, bb64, bb67, bb70, bb73, bb76, bb79, bb82, bb85, bb88, bb91, bb94, bb97, bb100, bb103, bb106, bb109]
  succs []

