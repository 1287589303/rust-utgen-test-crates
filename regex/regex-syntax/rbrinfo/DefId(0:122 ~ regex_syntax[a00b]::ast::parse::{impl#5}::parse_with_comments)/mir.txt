bb0
  0: StorageLive(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9-61:10)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  2: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:20-983:33)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:20-983:24)
  5: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:20-983:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:983:20-983:33)
      kind: _5 = ast::parse::ParserI::<'_, P>::offset(move _6) -> [return: bb1, unwind: bb265]
  }
  preds []
  succs [bb1, bb265]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:32-983:33)
  1: _4 = &_5
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:35-983:36)
  4: _8 = const 0_usize
    SourceInfo(regex-syntax/src/ast/parse.rs:983:35-983:36)
  5: _7 = &_8
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  6: _3 = (move _4, move _7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  7: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  9: PlaceMention(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  10: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  11: _9 = (_3.0: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  12: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  13: _10 = (_3.1: &usize)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  14: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  15: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  16: _12 = (*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  17: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  18: _13 = (*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  19: _11 = Eq(move _12, move _13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
      kind: switchInt(move _11) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: _2 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:18-59:18)
  3: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:17-59:18)
  4: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  5: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  6: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  7: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  8: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  9: StorageDead(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  10: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:30)
  11: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:22)
  12: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:22)
  13: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:13)
  14: _30 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:22)
      kind: _29 = ast::parse::ParserI::<'_, P>::parser(move _30) -> [return: bb5, unwind: bb265]
  }
  preds [bb1]
  succs [bb5, bb265]

bb3
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  3: _15 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:32-54:65)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  5: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
  6: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  7: _17 = move _15
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  8: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  9: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  10: _19 = &(*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  11: _18 = &(*_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  12: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  13: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  14: _21 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  15: _20 = &(*_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  16: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  17: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
  18: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  19: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  20: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  21: _26 = [const "parser can only be used once"]
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  22: _25 = &_26
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  23: _24 = &(*_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:983:38-983:68)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
      kind: _23 = core::fmt::Arguments::<'_>::new_const::<1>(move _24) -> [return: bb4, unwind: bb265]
  }
  preds [bb1]
  succs [bb4, bb265]

bb4
  0: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:143-58:144)
  1: _22 = core::option::Option::<core::fmt::Arguments<'_>>::Some(move _23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  2: StorageDead(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:144-58:145)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
      kind: _16 = core::panicking::assert_failed::<usize, usize>(move _17, move _18, move _20, move _22) -> bb265
  }
  preds [bb3]
  succs [bb265]

bb5
  0: _28 = &(*_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:22)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:21-984:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:984:9-984:30)
      kind: _27 = ast::parse::Parser::reset(move _28) -> [return: bb6, unwind: bb265]
  }
  preds [bb2]
  succs [bb6, bb265]

bb6
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:29-984:30)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:30-984:31)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:984:30-984:31)
  3: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:13-985:23)
  4: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:46-985:57)
  5: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:46-985:50)
  6: _33 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:46-985:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:985:46-985:57)
      kind: _32 = ast::parse::ParserI::<'_, P>::span(move _33) -> [return: bb7, unwind: bb265]
  }
  preds [bb5]
  succs [bb7, bb265]

bb7
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:56-985:57)
  1: StorageLive(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _34 = std::vec::Vec::<ast::Ast>::new() -> [return: bb8, unwind: bb265]
  }
  preds [bb6]
  succs [bb8, bb265]

bb8
  0: _31 = ast::Concat { span: move _32, asts: move _34 }
    SourceInfo(regex-syntax/src/ast/parse.rs:985:26-985:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:985:72-985:73)
      kind: drop(_34) -> [return: bb9, unwind: bb265]
  }
  preds [bb7]
  succs [bb9, bb265]

bb9
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:72-985:73)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:72-985:73)
  2: FakeRead(ForLet(None), _31)
    SourceInfo(regex-syntax/src/ast/parse.rs:985:13-985:23)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:986:9-1022:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:986:9-1022:10)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:986:9-1022:10)
      kind: falseUnwind -> [real: bb11, unwind: bb264]
  }
  preds [bb9, bb141]
  succs [bb11, bb264]

bb11
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:987:13-987:30)
  1: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:987:13-987:17)
  2: _38 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:987:13-987:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:987:13-987:30)
      kind: _37 = ast::parse::ParserI::<'_, P>::bump_space(move _38) -> [return: bb12, unwind: bb264]
  }
  preds [bb10]
  succs [bb12, bb264]

bb12
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:987:29-987:30)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:987:30-987:31)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:13-990:14)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:16-988:29)
  4: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:16-988:20)
  5: _41 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:16-988:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:988:16-988:29)
      kind: _40 = ast::parse::ParserI::<'_, P>::is_eof(move _41) -> [return: bb13, unwind: bb264]
  }
  preds [bb11]
  succs [bb13, bb264]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:988:16-988:29)
      kind: switchInt(move _40) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:28-988:29)
  1: _35 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:989:17-989:22)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:990:13-990:14)
  3: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:990:13-990:14)
  4: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1022:9-1022:10)
  5: StorageLive(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:13-1023:16)
  6: StorageLive(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  7: StorageLive(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:45)
  8: StorageLive(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:23)
  9: _145 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:23)
  10: StorageLive(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:38-1023:44)
  11: _146 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:38-1023:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:45)
      kind: _144 = ast::parse::ParserI::<'_, P>::pop_group_end(move _145, move _146) -> [return: bb142, unwind: bb215]
  }
  preds [bb13]
  succs [bb142, bb215]

bb15
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:988:28-988:29)
  1: _39 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:990:14-990:14)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:990:13-990:14)
  3: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:990:13-990:14)
  4: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:991:19-991:30)
  5: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:991:19-991:23)
  6: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:991:19-991:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:991:19-991:30)
      kind: _43 = ast::parse::ParserI::<'_, P>::char(move _44) -> [return: bb16, unwind: bb264]
  }
  preds [bb13]
  succs [bb16, bb264]

bb16
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:991:29-991:30)
  1: PlaceMention(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:991:19-991:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:991:13-991:30)
      kind: switchInt(_43) -> [40: bb18, 41: bb19, 124: bb20, 91: bb21, 63: bb22, 42: bb23, 43: bb24, 123: bb25, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25]

bb17
  0: StorageLive(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:22-1020:33)
  1: _131 = &mut (_31.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:22-1020:33)
  2: StorageLive(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:73)
  3: StorageLive(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  4: StorageLive(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  5: StorageLive(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:61)
  6: StorageLive(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:43)
  7: _136 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:61)
      kind: _135 = ast::parse::ParserI::<'_, P>::parse_primitive(move _136) -> [return: bb130, unwind: bb264]
  }
  preds [bb16, bb25]
  succs [bb130, bb264]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:17-992:20)
      kind: falseEdge -> [real: bb26, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb26]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:17-993:20)
      kind: falseEdge -> [real: bb39, imaginary: bb20]
  }
  preds [bb16, bb18]
  succs [bb20, bb39]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:17-994:20)
      kind: falseEdge -> [real: bb52, imaginary: bb21]
  }
  preds [bb16, bb19]
  succs [bb21, bb52]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:995:17-995:20)
      kind: falseEdge -> [real: bb65, imaginary: bb22]
  }
  preds [bb16, bb20]
  succs [bb22, bb65]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:999:17-999:20)
      kind: falseEdge -> [real: bb78, imaginary: bb23]
  }
  preds [bb16, bb21]
  succs [bb23, bb78]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1005:17-1005:20)
      kind: falseEdge -> [real: bb91, imaginary: bb24]
  }
  preds [bb16, bb22]
  succs [bb24, bb91]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1011:17-1011:20)
      kind: falseEdge -> [real: bb104, imaginary: bb25]
  }
  preds [bb16, bb23]
  succs [bb25, bb104]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1017:17-1017:20)
      kind: falseEdge -> [real: bb117, imaginary: bb17]
  }
  preds [bb16, bb24]
  succs [bb17, bb117]

bb26
  0: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  1: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  2: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:56)
  3: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:37)
  4: _48 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:37)
  5: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:49-992:55)
  6: _49 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:992:49-992:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:56)
      kind: _47 = ast::parse::ParserI::<'_, P>::push_group(move _48, move _49) -> [return: bb27, unwind: bb263]
  }
  preds [bb18]
  succs [bb27, bb263]

bb27
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:55-992:56)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:55-992:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
      kind: _46 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _47) -> [return: bb28, unwind: bb262]
  }
  preds [bb26]
  succs [bb28, bb262]

bb28
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  1: PlaceMention(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  2: _50 = discriminant(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
      kind: switchInt(move _50) -> [0: bb31, 1: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  1: _54 = move ((_46 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  2: _45 = move _54
    SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_54) -> [return: bb34, unwind: bb261]
  }
  preds [bb28, bb30]
  succs [bb34, bb261]

bb32
  0: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  1: _51 = move ((_46 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  3: _53 = move _51
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:33-992:57)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _53) -> [return: bb33, unwind: bb259]
  }
  preds [bb30]
  succs [bb33, bb259]

bb33
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_51) -> [return: bb192, unwind: bb261]
  }
  preds [bb32]
  succs [bb192, bb261]

bb34
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:24-992:30)
      kind: drop(_31) -> [return: bb35, unwind: bb36]
  }
  preds [bb31]
  succs [bb35, bb36]

bb35
  0: _31 = move _45
    SourceInfo(regex-syntax/src/ast/parse.rs:992:24-992:30)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:992:24-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_45) -> [return: bb37, unwind: bb261]
  }
  preds [bb34]
  succs [bb37, bb261]

bb36
  0: _31 = move _45
    SourceInfo(regex-syntax/src/ast/parse.rs:992:24-992:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_45) -> [return: bb261, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb261]

bb37
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_46) -> [return: bb38, unwind: bb264]
  }
  preds [bb35]
  succs [bb38, bb264]

bb38
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: goto -> bb141
  }
  preds [bb37]
  succs [bb141]

bb39
  0: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  1: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:55)
  3: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:37)
  4: _58 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:37)
  5: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:48-993:54)
  6: _59 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:993:48-993:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:55)
      kind: _57 = ast::parse::ParserI::<'_, P>::pop_group(move _58, move _59) -> [return: bb40, unwind: bb258]
  }
  preds [bb19]
  succs [bb40, bb258]

bb40
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:54-993:55)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:54-993:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
      kind: _56 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _57) -> [return: bb41, unwind: bb257]
  }
  preds [bb39]
  succs [bb41, bb257]

bb41
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  1: PlaceMention(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  2: _60 = discriminant(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
      kind: switchInt(move _60) -> [0: bb44, 1: bb43, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb43, bb44]

bb42
  0: FakeRead(ForMatchedPlace(None), _56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
      kind: unreachable
  }
  preds [bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: falseEdge -> [real: bb45, imaginary: bb44]
  }
  preds [bb41]
  succs [bb44, bb45]

bb44
  0: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  1: _64 = move ((_56 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  2: _55 = move _64
    SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_64) -> [return: bb47, unwind: bb256]
  }
  preds [bb41, bb43]
  succs [bb47, bb256]

bb45
  0: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  1: _61 = move ((_56 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  2: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  3: _63 = move _61
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:33-993:56)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _63) -> [return: bb46, unwind: bb254]
  }
  preds [bb43]
  succs [bb46, bb254]

bb46
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_61) -> [return: bb190, unwind: bb256]
  }
  preds [bb45]
  succs [bb190, bb256]

bb47
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:24-993:30)
      kind: drop(_31) -> [return: bb48, unwind: bb49]
  }
  preds [bb44]
  succs [bb48, bb49]

bb48
  0: _31 = move _55
    SourceInfo(regex-syntax/src/ast/parse.rs:993:24-993:30)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:993:24-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_55) -> [return: bb50, unwind: bb256]
  }
  preds [bb47]
  succs [bb50, bb256]

bb49
  0: _31 = move _55
    SourceInfo(regex-syntax/src/ast/parse.rs:993:24-993:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_55) -> [return: bb256, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb256]

bb50
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_56) -> [return: bb51, unwind: bb264]
  }
  preds [bb48]
  succs [bb51, bb264]

bb51
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: goto -> bb141
  }
  preds [bb50]
  succs [bb141]

bb52
  0: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  1: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  2: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:60)
  3: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:37)
  4: _68 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:37)
  5: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:53-994:59)
  6: _69 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:994:53-994:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:60)
      kind: _67 = ast::parse::ParserI::<'_, P>::push_alternate(move _68, move _69) -> [return: bb53, unwind: bb253]
  }
  preds [bb20]
  succs [bb53, bb253]

bb53
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:59-994:60)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:59-994:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
      kind: _66 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _67) -> [return: bb54, unwind: bb252]
  }
  preds [bb52]
  succs [bb54, bb252]

bb54
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  1: PlaceMention(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  2: _70 = discriminant(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
      kind: switchInt(move _70) -> [0: bb57, 1: bb56, otherwise: bb55]
  }
  preds [bb53]
  succs [bb55, bb56, bb57]

bb55
  0: FakeRead(ForMatchedPlace(None), _66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
      kind: unreachable
  }
  preds [bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: falseEdge -> [real: bb58, imaginary: bb57]
  }
  preds [bb54]
  succs [bb57, bb58]

bb57
  0: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  1: _74 = move ((_66 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  2: _65 = move _74
    SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_74) -> [return: bb60, unwind: bb251]
  }
  preds [bb54, bb56]
  succs [bb60, bb251]

bb58
  0: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  1: _71 = move ((_66 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  2: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  3: _73 = move _71
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:33-994:61)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _73) -> [return: bb59, unwind: bb249]
  }
  preds [bb56]
  succs [bb59, bb249]

bb59
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_71) -> [return: bb188, unwind: bb251]
  }
  preds [bb58]
  succs [bb188, bb251]

bb60
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:24-994:30)
      kind: drop(_31) -> [return: bb61, unwind: bb62]
  }
  preds [bb57]
  succs [bb61, bb62]

bb61
  0: _31 = move _65
    SourceInfo(regex-syntax/src/ast/parse.rs:994:24-994:30)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:994:24-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_65) -> [return: bb63, unwind: bb251]
  }
  preds [bb60]
  succs [bb63, bb251]

bb62
  0: _31 = move _65
    SourceInfo(regex-syntax/src/ast/parse.rs:994:24-994:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_65) -> [return: bb251, unwind terminate(cleanup)]
  }
  preds [bb60]
  succs [bb251]

bb63
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_66) -> [return: bb64, unwind: bb264]
  }
  preds [bb61]
  succs [bb64, bb264]

bb64
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: goto -> bb141
  }
  preds [bb63]
  succs [bb141]

bb65
  0: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:25-996:30)
  1: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  2: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:55)
  3: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:37)
  4: _78 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:55)
      kind: _77 = ast::parse::ParserI::<'_, P>::parse_set_class(move _78) -> [return: bb66, unwind: bb264]
  }
  preds [bb21]
  succs [bb66, bb264]

bb66
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:54-996:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
      kind: _76 = <core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::Try>::branch(move _77) -> [return: bb67, unwind: bb248]
  }
  preds [bb65]
  succs [bb67, bb248]

bb67
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  1: PlaceMention(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  2: _79 = discriminant(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
      kind: switchInt(move _79) -> [0: bb70, 1: bb69, otherwise: bb68]
  }
  preds [bb66]
  succs [bb68, bb69, bb70]

bb68
  0: FakeRead(ForMatchedPlace(None), _76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
      kind: unreachable
  }
  preds [bb67]
  succs []

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: falseEdge -> [real: bb71, imaginary: bb70]
  }
  preds [bb67]
  succs [bb70, bb71]

bb70
  0: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  1: _83 = move ((_76 as Continue).0: ast::ClassBracketed)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  2: _75 = move _83
    SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: drop(_83) -> [return: bb73, unwind: bb247]
  }
  preds [bb67, bb69]
  succs [bb73, bb247]

bb71
  0: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  1: _80 = move ((_76 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  2: StorageLive(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  3: _82 = move _80
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:33-996:56)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _82) -> [return: bb72, unwind: bb245]
  }
  preds [bb69]
  succs [bb72, bb245]

bb72
  0: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: drop(_80) -> [return: bb186, unwind: bb247]
  }
  preds [bb71]
  succs [bb186, bb247]

bb73
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  1: FakeRead(ForLet(None), _75)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:25-996:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:56-996:57)
      kind: drop(_76) -> [return: bb74, unwind: bb244]
  }
  preds [bb70]
  succs [bb74, bb244]

bb74
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:56-996:57)
  1: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:21-997:66)
  2: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:21-997:32)
  3: _85 = &mut (_31.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:21-997:32)
  4: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:38-997:65)
  5: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:59-997:64)
  6: _87 = move _75
    SourceInfo(regex-syntax/src/ast/parse.rs:997:59-997:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:997:38-997:65)
      kind: _86 = ast::Ast::class_bracketed(move _87) -> [return: bb75, unwind: bb243]
  }
  preds [bb73]
  succs [bb75, bb243]

bb75
  0: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:64-997:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:997:21-997:66)
      kind: _84 = std::vec::Vec::<ast::Ast>::push(move _85, move _86) -> [return: bb76, unwind: bb242]
  }
  preds [bb74]
  succs [bb76, bb242]

bb76
  0: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:65-997:66)
  1: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:65-997:66)
  2: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:997:66-997:67)
  3: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:995:24-998:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:998:17-998:18)
      kind: drop(_75) -> [return: bb77, unwind: bb264]
  }
  preds [bb75]
  succs [bb77, bb264]

bb77
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:998:17-998:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:998:17-998:18)
      kind: goto -> bb141
  }
  preds [bb76]
  succs [bb141]

bb78
  0: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  1: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  2: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:22)
  3: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1000:34)
  4: _91 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1000:34)
  5: StorageLive(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1001:25-1001:31)
  6: _92 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:1001:25-1001:31)
  7: StorageLive(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1002:25-1002:55)
  8: _93 = ast::RepetitionKind::ZeroOrOne
    SourceInfo(regex-syntax/src/ast/parse.rs:1002:25-1002:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:22)
      kind: _90 = ast::parse::ParserI::<'_, P>::parse_uncounted_repetition(move _91, move _92, move _93) -> [return: bb79, unwind: bb241]
  }
  preds [bb22]
  succs [bb79, bb241]

bb79
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:21-1003:22)
  1: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:21-1003:22)
  2: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:21-1003:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
      kind: _89 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _90) -> [return: bb80, unwind: bb240]
  }
  preds [bb78]
  succs [bb80, bb240]

bb80
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  1: PlaceMention(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  2: _94 = discriminant(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
      kind: switchInt(move _94) -> [0: bb83, 1: bb82, otherwise: bb81]
  }
  preds [bb79]
  succs [bb81, bb82, bb83]

bb81
  0: FakeRead(ForMatchedPlace(None), _89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
      kind: unreachable
  }
  preds [bb80]
  succs []

bb82
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: falseEdge -> [real: bb84, imaginary: bb83]
  }
  preds [bb80]
  succs [bb83, bb84]

bb83
  0: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  1: _98 = move ((_89 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  2: _88 = move _98
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_98) -> [return: bb86, unwind: bb239]
  }
  preds [bb80, bb82]
  succs [bb86, bb239]

bb84
  0: StorageLive(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  1: _95 = move ((_89 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  2: StorageLive(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  3: _97 = move _95
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:30-1003:23)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _97) -> [return: bb85, unwind: bb237]
  }
  preds [bb82]
  succs [bb85, bb237]

bb85
  0: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_95) -> [return: bb184, unwind: bb239]
  }
  preds [bb84]
  succs [bb184, bb239]

bb86
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1000:21-1000:27)
      kind: drop(_31) -> [return: bb87, unwind: bb88]
  }
  preds [bb83]
  succs [bb87, bb88]

bb87
  0: _31 = move _88
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:21-1000:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_88) -> [return: bb89, unwind: bb239]
  }
  preds [bb86]
  succs [bb89, bb239]

bb88
  0: _31 = move _88
    SourceInfo(regex-syntax/src/ast/parse.rs:1000:21-1000:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_88) -> [return: bb239, unwind terminate(cleanup)]
  }
  preds [bb86]
  succs [bb239]

bb89
  0: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:23-1003:24)
      kind: drop(_89) -> [return: bb90, unwind: bb264]
  }
  preds [bb87]
  succs [bb90, bb264]

bb90
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:23-1003:24)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:999:24-1004:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:999:24-1004:18)
      kind: goto -> bb141
  }
  preds [bb89]
  succs [bb141]

bb91
  0: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  1: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  2: StorageLive(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:22)
  3: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1006:34)
  4: _102 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1006:34)
  5: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1007:25-1007:31)
  6: _103 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:1007:25-1007:31)
  7: StorageLive(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1008:25-1008:56)
  8: _104 = ast::RepetitionKind::ZeroOrMore
    SourceInfo(regex-syntax/src/ast/parse.rs:1008:25-1008:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:22)
      kind: _101 = ast::parse::ParserI::<'_, P>::parse_uncounted_repetition(move _102, move _103, move _104) -> [return: bb92, unwind: bb236]
  }
  preds [bb23]
  succs [bb92, bb236]

bb92
  0: StorageDead(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:21-1009:22)
  1: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:21-1009:22)
  2: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:21-1009:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
      kind: _100 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _101) -> [return: bb93, unwind: bb235]
  }
  preds [bb91]
  succs [bb93, bb235]

bb93
  0: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  1: PlaceMention(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  2: _105 = discriminant(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
      kind: switchInt(move _105) -> [0: bb96, 1: bb95, otherwise: bb94]
  }
  preds [bb92]
  succs [bb94, bb95, bb96]

bb94
  0: FakeRead(ForMatchedPlace(None), _100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
      kind: unreachable
  }
  preds [bb93]
  succs []

bb95
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: falseEdge -> [real: bb97, imaginary: bb96]
  }
  preds [bb93]
  succs [bb96, bb97]

bb96
  0: StorageLive(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  1: _109 = move ((_100 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  2: _99 = move _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_109) -> [return: bb99, unwind: bb234]
  }
  preds [bb93, bb95]
  succs [bb99, bb234]

bb97
  0: StorageLive(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  1: _106 = move ((_100 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  2: StorageLive(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  3: _108 = move _106
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:30-1009:23)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _108) -> [return: bb98, unwind: bb232]
  }
  preds [bb95]
  succs [bb98, bb232]

bb98
  0: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_106) -> [return: bb182, unwind: bb234]
  }
  preds [bb97]
  succs [bb182, bb234]

bb99
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1006:21-1006:27)
      kind: drop(_31) -> [return: bb100, unwind: bb101]
  }
  preds [bb96]
  succs [bb100, bb101]

bb100
  0: _31 = move _99
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:21-1006:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_99) -> [return: bb102, unwind: bb234]
  }
  preds [bb99]
  succs [bb102, bb234]

bb101
  0: _31 = move _99
    SourceInfo(regex-syntax/src/ast/parse.rs:1006:21-1006:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_99) -> [return: bb234, unwind terminate(cleanup)]
  }
  preds [bb99]
  succs [bb234]

bb102
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:23-1009:24)
      kind: drop(_100) -> [return: bb103, unwind: bb264]
  }
  preds [bb100]
  succs [bb103, bb264]

bb103
  0: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:23-1009:24)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1005:24-1010:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1005:24-1010:18)
      kind: goto -> bb141
  }
  preds [bb102]
  succs [bb141]

bb104
  0: StorageLive(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  1: StorageLive(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  2: StorageLive(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:22)
  3: StorageLive(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1012:34)
  4: _113 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1012:34)
  5: StorageLive(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1013:25-1013:31)
  6: _114 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:1013:25-1013:31)
  7: StorageLive(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1014:25-1014:55)
  8: _115 = ast::RepetitionKind::OneOrMore
    SourceInfo(regex-syntax/src/ast/parse.rs:1014:25-1014:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:22)
      kind: _112 = ast::parse::ParserI::<'_, P>::parse_uncounted_repetition(move _113, move _114, move _115) -> [return: bb105, unwind: bb231]
  }
  preds [bb24]
  succs [bb105, bb231]

bb105
  0: StorageDead(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:21-1015:22)
  1: StorageDead(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:21-1015:22)
  2: StorageDead(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:21-1015:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
      kind: _111 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _112) -> [return: bb106, unwind: bb230]
  }
  preds [bb104]
  succs [bb106, bb230]

bb106
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  1: PlaceMention(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  2: _116 = discriminant(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
      kind: switchInt(move _116) -> [0: bb109, 1: bb108, otherwise: bb107]
  }
  preds [bb105]
  succs [bb107, bb108, bb109]

bb107
  0: FakeRead(ForMatchedPlace(None), _111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
      kind: unreachable
  }
  preds [bb106]
  succs []

bb108
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: falseEdge -> [real: bb110, imaginary: bb109]
  }
  preds [bb106]
  succs [bb109, bb110]

bb109
  0: StorageLive(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  1: _120 = move ((_111 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  2: _110 = move _120
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_120) -> [return: bb112, unwind: bb229]
  }
  preds [bb106, bb108]
  succs [bb112, bb229]

bb110
  0: StorageLive(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  1: _117 = move ((_111 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  2: StorageLive(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  3: _119 = move _117
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:30-1015:23)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _119) -> [return: bb111, unwind: bb227]
  }
  preds [bb108]
  succs [bb111, bb227]

bb111
  0: StorageDead(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_117) -> [return: bb180, unwind: bb229]
  }
  preds [bb110]
  succs [bb180, bb229]

bb112
  0: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1012:21-1012:27)
      kind: drop(_31) -> [return: bb113, unwind: bb114]
  }
  preds [bb109]
  succs [bb113, bb114]

bb113
  0: _31 = move _110
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:21-1012:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_110) -> [return: bb115, unwind: bb229]
  }
  preds [bb112]
  succs [bb115, bb229]

bb114
  0: _31 = move _110
    SourceInfo(regex-syntax/src/ast/parse.rs:1012:21-1012:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_110) -> [return: bb229, unwind terminate(cleanup)]
  }
  preds [bb112]
  succs [bb229]

bb115
  0: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:23-1015:24)
      kind: drop(_111) -> [return: bb116, unwind: bb264]
  }
  preds [bb113]
  succs [bb116, bb264]

bb116
  0: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:23-1015:24)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1011:24-1016:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1011:24-1016:18)
      kind: goto -> bb141
  }
  preds [bb115]
  succs [bb141]

bb117
  0: StorageLive(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  1: StorageLive(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  2: StorageLive(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:67)
  3: StorageLive(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:34)
  4: _124 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:34)
  5: StorageLive(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:60-1018:66)
  6: _125 = move _31
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:60-1018:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:67)
      kind: _123 = ast::parse::ParserI::<'_, P>::parse_counted_repetition(move _124, move _125) -> [return: bb118, unwind: bb226]
  }
  preds [bb25]
  succs [bb118, bb226]

bb118
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:66-1018:67)
  1: StorageDead(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:66-1018:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
      kind: _122 = <core::result::Result<ast::Concat, ast::Error> as core::ops::Try>::branch(move _123) -> [return: bb119, unwind: bb225]
  }
  preds [bb117]
  succs [bb119, bb225]

bb119
  0: StorageDead(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  1: PlaceMention(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  2: _126 = discriminant(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
      kind: switchInt(move _126) -> [0: bb122, 1: bb121, otherwise: bb120]
  }
  preds [bb118]
  succs [bb120, bb121, bb122]

bb120
  0: FakeRead(ForMatchedPlace(None), _122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
      kind: unreachable
  }
  preds [bb119]
  succs []

bb121
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: falseEdge -> [real: bb123, imaginary: bb122]
  }
  preds [bb119]
  succs [bb122, bb123]

bb122
  0: StorageLive(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  1: _130 = move ((_122 as Continue).0: ast::Concat)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  2: _121 = move _130
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_130) -> [return: bb125, unwind: bb224]
  }
  preds [bb119, bb121]
  succs [bb125, bb224]

bb123
  0: StorageLive(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  1: _127 = move ((_122 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  2: StorageLive(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  3: _129 = move _127
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:30-1018:68)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _129) -> [return: bb124, unwind: bb222]
  }
  preds [bb121]
  succs [bb124, bb222]

bb124
  0: StorageDead(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_127) -> [return: bb178, unwind: bb224]
  }
  preds [bb123]
  succs [bb178, bb224]

bb125
  0: StorageDead(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:21-1018:27)
      kind: drop(_31) -> [return: bb126, unwind: bb127]
  }
  preds [bb122]
  succs [bb126, bb127]

bb126
  0: _31 = move _121
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:21-1018:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_121) -> [return: bb128, unwind: bb224]
  }
  preds [bb125]
  succs [bb128, bb224]

bb127
  0: _31 = move _121
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:21-1018:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_121) -> [return: bb224, unwind terminate(cleanup)]
  }
  preds [bb125]
  succs [bb224]

bb128
  0: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:68-1018:69)
      kind: drop(_122) -> [return: bb129, unwind: bb264]
  }
  preds [bb126]
  succs [bb129, bb264]

bb129
  0: StorageDead(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:68-1018:69)
  1: _36 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1017:24-1019:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1017:24-1019:18)
      kind: goto -> bb141
  }
  preds [bb128]
  succs [bb141]

bb130
  0: StorageDead(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:60-1020:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
      kind: _134 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::Try>::branch(move _135) -> [return: bb131, unwind: bb221]
  }
  preds [bb17]
  succs [bb131, bb221]

bb131
  0: StorageDead(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  1: PlaceMention(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  2: _137 = discriminant(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
      kind: switchInt(move _137) -> [0: bb134, 1: bb133, otherwise: bb132]
  }
  preds [bb130]
  succs [bb132, bb133, bb134]

bb132
  0: FakeRead(ForMatchedPlace(None), _134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
      kind: unreachable
  }
  preds [bb131]
  succs []

bb133
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: falseEdge -> [real: bb135, imaginary: bb134]
  }
  preds [bb131]
  succs [bb134, bb135]

bb134
  0: StorageLive(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  1: _141 = move ((_134 as Continue).0: ast::parse::Primitive)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  2: _133 = move _141
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: drop(_141) -> [return: bb137, unwind: bb220]
  }
  preds [bb131, bb133]
  succs [bb137, bb220]

bb135
  0: StorageLive(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  1: _138 = move ((_134 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  2: StorageLive(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  3: _140 = move _138
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:62)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _140) -> [return: bb136, unwind: bb218]
  }
  preds [bb133]
  succs [bb136, bb218]

bb136
  0: StorageDead(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: drop(_138) -> [return: bb176, unwind: bb220]
  }
  preds [bb135]
  succs [bb176, bb220]

bb137
  0: StorageDead(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:39-1020:73)
      kind: _132 = ast::parse::Primitive::into_ast(move _133) -> [return: bb138, unwind: bb217]
  }
  preds [bb134]
  succs [bb138, bb217]

bb138
  0: StorageDead(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:72-1020:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:22-1020:74)
      kind: _36 = std::vec::Vec::<ast::Ast>::push(move _131, move _132) -> [return: bb139, unwind: bb216]
  }
  preds [bb137]
  succs [bb139, bb216]

bb139
  0: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  1: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
      kind: drop(_134) -> [return: bb140, unwind: bb264]
  }
  preds [bb138]
  succs [bb140, bb264]

bb140
  0: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
      kind: goto -> bb141
  }
  preds [bb139]
  succs [bb141]

bb141
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1022:9-1022:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:986:9-1022:10)
      kind: goto -> bb10
  }
  preds [bb38, bb51, bb64, bb77, bb90, bb103, bb116, bb129, bb140]
  succs [bb10]

bb142
  0: StorageDead(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:44-1023:45)
  1: StorageDead(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:44-1023:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
      kind: _143 = <core::result::Result<ast::Ast, ast::Error> as core::ops::Try>::branch(move _144) -> [return: bb143, unwind: bb214]
  }
  preds [bb14]
  succs [bb143, bb214]

bb143
  0: StorageDead(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  1: PlaceMention(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  2: _147 = discriminant(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
      kind: switchInt(move _147) -> [0: bb146, 1: bb145, otherwise: bb144]
  }
  preds [bb142]
  succs [bb144, bb145, bb146]

bb144
  0: FakeRead(ForMatchedPlace(None), _143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
      kind: unreachable
  }
  preds [bb143]
  succs []

bb145
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: falseEdge -> [real: bb147, imaginary: bb146]
  }
  preds [bb143]
  succs [bb146, bb147]

bb146
  0: StorageLive(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  1: _151 = move ((_143 as Continue).0: ast::Ast)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  2: _142 = move _151
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: drop(_151) -> [return: bb149, unwind: bb213]
  }
  preds [bb143, bb145]
  succs [bb149, bb213]

bb147
  0: StorageLive(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  1: _148 = move ((_143 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  2: StorageLive(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  3: _150 = move _148
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:19-1023:46)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _150) -> [return: bb148, unwind: bb211]
  }
  preds [bb145]
  succs [bb148, bb211]

bb148
  0: StorageDead(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: drop(_148) -> [return: bb173, unwind: bb213]
  }
  preds [bb147]
  succs [bb173, bb213]

bb149
  0: StorageDead(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  1: FakeRead(ForLet(None), _142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:13-1023:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:46-1023:47)
      kind: drop(_143) -> [return: bb150, unwind: bb210]
  }
  preds [bb146]
  succs [bb150, bb210]

bb150
  0: StorageDead(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:46-1023:47)
  1: StorageLive(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  2: StorageLive(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  3: StorageLive(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:43)
  4: StorageLive(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:31)
  5: StorageLive(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:26-1024:30)
  6: _156 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:26-1024:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:31)
      kind: _155 = ast::parse::NestLimiter::<'_, '_, P>::new(move _156) -> [return: bb151, unwind: bb210]
  }
  preds [bb149]
  succs [bb151, bb210]

bb151
  0: StorageDead(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:30-1024:31)
  1: StorageLive(_157)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:38-1024:42)
  2: StorageLive(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:38-1024:42)
  3: _158 = &_142
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:38-1024:42)
  4: _157 = &(*_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:38-1024:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:43)
      kind: _154 = ast::parse::NestLimiter::<'_, '_, P>::check(move _155, move _157) -> [return: bb152, unwind: bb210]
  }
  preds [bb150]
  succs [bb152, bb210]

bb152
  0: StorageDead(_157)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:42-1024:43)
  1: StorageDead(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:42-1024:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
      kind: _153 = <core::result::Result<(), ast::Error> as core::ops::Try>::branch(move _154) -> [return: bb153, unwind: bb209]
  }
  preds [bb151]
  succs [bb153, bb209]

bb153
  0: StorageDead(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  1: PlaceMention(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  2: _159 = discriminant(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
      kind: switchInt(move _159) -> [0: bb156, 1: bb155, otherwise: bb154]
  }
  preds [bb152]
  succs [bb154, bb155, bb156]

bb154
  0: FakeRead(ForMatchedPlace(None), _153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
      kind: unreachable
  }
  preds [bb153]
  succs []

bb155
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
      kind: falseEdge -> [real: bb157, imaginary: bb156]
  }
  preds [bb153]
  succs [bb156, bb157]

bb156
  0: StorageLive(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  1: _163 = ((_153 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  2: _152 = _163
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
  3: StorageDead(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
      kind: drop(_153) -> [return: bb159, unwind: bb210]
  }
  preds [bb153, bb155]
  succs [bb159, bb210]

bb157
  0: StorageLive(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  1: _160 = move ((_153 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  2: StorageLive(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  3: _162 = move _160
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:9-1024:44)
      kind: _0 = <core::result::Result<ast::WithComments, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _162) -> [return: bb158, unwind: bb206]
  }
  preds [bb155]
  succs [bb158, bb206]

bb158
  0: StorageDead(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
      kind: drop(_160) -> [return: bb171, unwind: bb208]
  }
  preds [bb157]
  succs [bb171, bb208]

bb159
  0: StorageDead(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  1: StorageDead(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  2: StorageDead(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  3: StorageLive(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1025:12-1031:10)
  4: StorageLive(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1026:13-1026:16)
  5: _165 = move _142
    SourceInfo(regex-syntax/src/ast/parse.rs:1026:13-1026:16)
  6: StorageLive(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1027:23-1030:14)
  7: StorageLive(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:17-1028:58)
  8: StorageLive(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:17-1028:58)
  9: StorageLive(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:22-1028:58)
  10: StorageLive(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:58)
  11: StorageLive(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:58)
  12: StorageLive(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:45)
  13: StorageLive(_173)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:36)
  14: StorageLive(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:27)
  15: _174 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:36)
      kind: _173 = ast::parse::ParserI::<'_, P>::parser(move _174) -> [return: bb160, unwind: bb205]
  }
  preds [bb156]
  succs [bb160, bb205]

bb160
  0: StorageDead(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:35-1028:36)
  1: _172 = &((*_173).7: core::cell::RefCell<std::vec::Vec<ast::Comment>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:58)
      kind: _171 = core::cell::RefCell::<std::vec::Vec<ast::Comment>>::borrow_mut(move _172) -> [return: bb161, unwind: bb205]
  }
  preds [bb159]
  succs [bb161, bb205]

bb161
  0: _170 = &mut _171
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:23-1028:58)
  1: StorageDead(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:57-1028:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1028:22-1028:58)
      kind: _169 = <core::cell::RefMut<'_, std::vec::Vec<ast::Comment>> as core::ops::DerefMut>::deref_mut(move _170) -> [return: bb162, unwind: bb201]
  }
  preds [bb160]
  succs [bb162, bb201]

bb162
  0: StorageDead(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:57-1028:58)
  1: _168 = &mut (*_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:17-1028:58)
  2: _167 = &mut (*_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1028:17-1028:58)
  3: StorageLive(_175)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _175 = std::vec::Vec::<ast::Comment>::new() -> [return: bb163, unwind: bb201]
  }
  preds [bb161]
  succs [bb163, bb201]

bb163
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1027:23-1030:14)
      kind: _166 = core::mem::replace::<std::vec::Vec<ast::Comment>>(move _167, move _175) -> [return: bb164, unwind: bb200]
  }
  preds [bb162]
  succs [bb164, bb200]

bb164
  0: StorageDead(_175)
    SourceInfo(regex-syntax/src/ast/parse.rs:1030:13-1030:14)
  1: StorageDead(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1030:13-1030:14)
  2: _164 = ast::WithComments { ast: move _165, comments: move _166 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1025:12-1031:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
      kind: drop(_166) -> [return: bb165, unwind: bb198]
  }
  preds [bb163]
  succs [bb165, bb198]

bb165
  0: StorageDead(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
      kind: drop(_165) -> [return: bb166, unwind: bb199]
  }
  preds [bb164]
  succs [bb166, bb199]

bb166
  0: StorageDead(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
  1: _0 = core::result::Result::<ast::WithComments, ast::Error>::Ok(move _164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1025:9-1031:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:10-1031:11)
      kind: drop(_164) -> [return: bb167, unwind: bb202]
  }
  preds [bb165]
  succs [bb167, bb202]

bb167
  0: StorageDead(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1031:10-1031:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_142) -> [return: bb168, unwind: bb203]
  }
  preds [bb166]
  succs [bb168, bb203]

bb168
  0: StorageDead(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_31) -> [return: bb169, unwind: bb204]
  }
  preds [bb167]
  succs [bb169, bb204]

bb169
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_171) -> [return: bb170, unwind: bb265]
  }
  preds [bb168]
  succs [bb170, bb265]

bb170
  0: StorageDead(_173)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  1: StorageDead(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  2: StorageDead(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  3: StorageDead(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:6-1032:6)
      kind: goto -> bb197
  }
  preds [bb169]
  succs [bb197]

bb171
  0: StorageDead(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
      kind: drop(_153) -> [return: bb172, unwind: bb210]
  }
  preds [bb158]
  succs [bb172, bb210]

bb172
  0: StorageDead(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  1: StorageDead(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  2: StorageDead(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_142) -> [return: bb175, unwind: bb264]
  }
  preds [bb171]
  succs [bb175, bb264]

bb173
  0: StorageDead(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:46-1023:47)
      kind: drop(_143) -> [return: bb174, unwind: bb264]
  }
  preds [bb148]
  succs [bb174, bb264]

bb174
  0: StorageDead(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1023:46-1023:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb175
  }
  preds [bb173]
  succs [bb175]

bb175
  0: StorageDead(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb195
  }
  preds [bb172, bb174]
  succs [bb195]

bb176
  0: StorageDead(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
  1: StorageDead(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:72-1020:73)
  2: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  3: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
      kind: drop(_134) -> [return: bb177, unwind: bb264]
  }
  preds [bb136]
  succs [bb177, bb264]

bb177
  0: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb176]
  succs [bb194]

bb178
  0: StorageDead(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  1: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:68-1018:69)
      kind: drop(_122) -> [return: bb179, unwind: bb264]
  }
  preds [bb124]
  succs [bb179, bb264]

bb179
  0: StorageDead(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1018:68-1018:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb178]
  succs [bb194]

bb180
  0: StorageDead(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  1: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:23-1015:24)
      kind: drop(_111) -> [return: bb181, unwind: bb264]
  }
  preds [bb111]
  succs [bb181, bb264]

bb181
  0: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1015:23-1015:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb180]
  succs [bb194]

bb182
  0: StorageDead(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  1: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:23-1009:24)
      kind: drop(_100) -> [return: bb183, unwind: bb264]
  }
  preds [bb98]
  succs [bb183, bb264]

bb183
  0: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1009:23-1009:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb182]
  succs [bb194]

bb184
  0: StorageDead(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:23-1003:24)
      kind: drop(_89) -> [return: bb185, unwind: bb264]
  }
  preds [bb85]
  succs [bb185, bb264]

bb185
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1003:23-1003:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb184]
  succs [bb194]

bb186
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:56-996:57)
      kind: drop(_76) -> [return: bb187, unwind: bb264]
  }
  preds [bb72]
  succs [bb187, bb264]

bb187
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:996:56-996:57)
  1: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:998:17-998:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb186]
  succs [bb194]

bb188
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  1: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_66) -> [return: bb189, unwind: bb264]
  }
  preds [bb59]
  succs [bb189, bb264]

bb189
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb188]
  succs [bb194]

bb190
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_56) -> [return: bb191, unwind: bb264]
  }
  preds [bb46]
  succs [bb191, bb264]

bb191
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb190]
  succs [bb194]

bb192
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_46) -> [return: bb193, unwind: bb264]
  }
  preds [bb33]
  succs [bb193, bb264]

bb193
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb194
  }
  preds [bb192]
  succs [bb194]

bb194
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1022:9-1022:10)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1022:9-1022:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb195
  }
  preds [bb177, bb179, bb181, bb183, bb185, bb187, bb189, bb191, bb193]
  succs [bb195]

bb195
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_31) -> [return: bb196, unwind: bb265]
  }
  preds [bb175, bb194]
  succs [bb196, bb265]

bb196
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:6-1032:6)
      kind: goto -> bb197
  }
  preds [bb195]
  succs [bb197]

bb197
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:6-1032:6)
      kind: return
  }
  preds [bb170, bb196]
  succs []

bb198
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
      kind: drop(_165) -> [return: bb199, unwind terminate(cleanup)]
  }
  preds [bb164]
  succs [bb199]

bb199
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:10-1031:11)
      kind: drop(_164) -> [return: bb202, unwind terminate(cleanup)]
  }
  preds [bb165, bb198]
  succs [bb202]

bb200
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1030:13-1030:14)
      kind: drop(_175) -> [return: bb201, unwind terminate(cleanup)]
  }
  preds [bb163]
  succs [bb201]

bb201
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
      kind: drop(_165) -> [return: bb202, unwind terminate(cleanup)]
  }
  preds [bb161, bb162, bb200]
  succs [bb202]

bb202
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_142) -> [return: bb203, unwind terminate(cleanup)]
  }
  preds [bb166, bb199, bb201]
  succs [bb203]

bb203
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_31) -> [return: bb204, unwind terminate(cleanup)]
  }
  preds [bb167, bb202]
  succs [bb204]

bb204
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_171) -> [return: bb265, unwind terminate(cleanup)]
  }
  preds [bb168, bb203]
  succs [bb265]

bb205
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1031:9-1031:10)
      kind: drop(_165) -> [return: bb210, unwind terminate(cleanup)]
  }
  preds [bb159, bb160]
  succs [bb210]

bb206
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
      kind: drop(_162) -> [return: bb207, unwind terminate(cleanup)]
  }
  preds [bb157]
  succs [bb207]

bb207
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
      kind: drop(_160) -> [return: bb208, unwind terminate(cleanup)]
  }
  preds [bb206]
  succs [bb208]

bb208
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:44-1024:45)
      kind: drop(_153) -> [return: bb210, unwind terminate(cleanup)]
  }
  preds [bb158, bb207]
  succs [bb210]

bb209
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1024:43-1024:44)
      kind: drop(_154) -> [return: bb210, unwind terminate(cleanup)]
  }
  preds [bb152]
  succs [bb210]

bb210
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_142) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb149, bb150, bb151, bb156, bb171, bb205, bb208, bb209]
  succs [bb264]

bb211
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: drop(_150) -> [return: bb212, unwind terminate(cleanup)]
  }
  preds [bb147]
  succs [bb212]

bb212
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: drop(_148) -> [return: bb213, unwind terminate(cleanup)]
  }
  preds [bb211]
  succs [bb213]

bb213
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:46-1023:47)
      kind: drop(_143) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb146, bb148, bb212]
  succs [bb264]

bb214
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:45-1023:46)
      kind: drop(_144) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb142]
  succs [bb264]

bb215
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1023:44-1023:45)
      kind: drop(_146) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb264]

bb216
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
      kind: drop(_132) -> [return: bb220, unwind terminate(cleanup)]
  }
  preds [bb138]
  succs [bb220]

bb217
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:72-1020:73)
      kind: drop(_133) -> [return: bb220, unwind terminate(cleanup)]
  }
  preds [bb137]
  succs [bb220]

bb218
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: drop(_140) -> [return: bb219, unwind terminate(cleanup)]
  }
  preds [bb135]
  succs [bb219]

bb219
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: drop(_138) -> [return: bb220, unwind terminate(cleanup)]
  }
  preds [bb218]
  succs [bb220]

bb220
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:73-1020:74)
      kind: drop(_134) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb134, bb136, bb216, bb217, bb219]
  succs [bb264]

bb221
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1020:61-1020:62)
      kind: drop(_135) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb130]
  succs [bb264]

bb222
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_129) -> [return: bb223, unwind terminate(cleanup)]
  }
  preds [bb123]
  succs [bb223]

bb223
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_127) -> [return: bb224, unwind terminate(cleanup)]
  }
  preds [bb222]
  succs [bb224]

bb224
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:68-1018:69)
      kind: drop(_122) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb122, bb124, bb126, bb127, bb223]
  succs [bb264]

bb225
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:67-1018:68)
      kind: drop(_123) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb118]
  succs [bb264]

bb226
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1018:66-1018:67)
      kind: drop(_125) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb117]
  succs [bb264]

bb227
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_119) -> [return: bb228, unwind terminate(cleanup)]
  }
  preds [bb110]
  succs [bb228]

bb228
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_117) -> [return: bb229, unwind terminate(cleanup)]
  }
  preds [bb227]
  succs [bb229]

bb229
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:23-1015:24)
      kind: drop(_111) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb109, bb111, bb113, bb114, bb228]
  succs [bb264]

bb230
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:22-1015:23)
      kind: drop(_112) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb105]
  succs [bb264]

bb231
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1015:21-1015:22)
      kind: drop(_114) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb104]
  succs [bb264]

bb232
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_108) -> [return: bb233, unwind terminate(cleanup)]
  }
  preds [bb97]
  succs [bb233]

bb233
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_106) -> [return: bb234, unwind terminate(cleanup)]
  }
  preds [bb232]
  succs [bb234]

bb234
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:23-1009:24)
      kind: drop(_100) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb96, bb98, bb100, bb101, bb233]
  succs [bb264]

bb235
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:22-1009:23)
      kind: drop(_101) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb92]
  succs [bb264]

bb236
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1009:21-1009:22)
      kind: drop(_103) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb91]
  succs [bb264]

bb237
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_97) -> [return: bb238, unwind terminate(cleanup)]
  }
  preds [bb84]
  succs [bb238]

bb238
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_95) -> [return: bb239, unwind terminate(cleanup)]
  }
  preds [bb237]
  succs [bb239]

bb239
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:23-1003:24)
      kind: drop(_89) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb83, bb85, bb87, bb88, bb238]
  succs [bb264]

bb240
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:22-1003:23)
      kind: drop(_90) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb79]
  succs [bb264]

bb241
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1003:21-1003:22)
      kind: drop(_92) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb78]
  succs [bb264]

bb242
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:997:65-997:66)
      kind: drop(_86) -> [return: bb244, unwind terminate(cleanup)]
  }
  preds [bb75]
  succs [bb244]

bb243
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:997:64-997:65)
      kind: drop(_87) -> [return: bb244, unwind terminate(cleanup)]
  }
  preds [bb74]
  succs [bb244]

bb244
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:998:17-998:18)
      kind: drop(_75) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb73, bb242, bb243]
  succs [bb264]

bb245
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: drop(_82) -> [return: bb246, unwind terminate(cleanup)]
  }
  preds [bb71]
  succs [bb246]

bb246
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: drop(_80) -> [return: bb247, unwind terminate(cleanup)]
  }
  preds [bb245]
  succs [bb247]

bb247
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:56-996:57)
      kind: drop(_76) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb70, bb72, bb246]
  succs [bb264]

bb248
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:996:55-996:56)
      kind: drop(_77) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb66]
  succs [bb264]

bb249
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_73) -> [return: bb250, unwind terminate(cleanup)]
  }
  preds [bb58]
  succs [bb250]

bb250
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_71) -> [return: bb251, unwind terminate(cleanup)]
  }
  preds [bb249]
  succs [bb251]

bb251
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_66) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb57, bb59, bb61, bb62, bb250]
  succs [bb264]

bb252
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:60-994:61)
      kind: drop(_67) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb53]
  succs [bb264]

bb253
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:994:59-994:60)
      kind: drop(_69) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb264]

bb254
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_63) -> [return: bb255, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb255]

bb255
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_61) -> [return: bb256, unwind terminate(cleanup)]
  }
  preds [bb254]
  succs [bb256]

bb256
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_56) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb44, bb46, bb48, bb49, bb255]
  succs [bb264]

bb257
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:55-993:56)
      kind: drop(_57) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb264]

bb258
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:993:54-993:55)
      kind: drop(_59) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb39]
  succs [bb264]

bb259
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_53) -> [return: bb260, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb260]

bb260
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_51) -> [return: bb261, unwind terminate(cleanup)]
  }
  preds [bb259]
  succs [bb261]

bb261
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_46) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb31, bb33, bb35, bb36, bb260]
  succs [bb264]

bb262
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:56-992:57)
      kind: drop(_47) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb27]
  succs [bb264]

bb263
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:992:55-992:56)
      kind: drop(_49) -> [return: bb264, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb264]

bb264
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1032:5-1032:6)
      kind: drop(_31) -> [return: bb265, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb12, bb15, bb17, bb37, bb50, bb63, bb65, bb76, bb89, bb102, bb115, bb128, bb139, bb172, bb173, bb176, bb178, bb180, bb182, bb184, bb186, bb188, bb190, bb192, bb210, bb213, bb214, bb215, bb220, bb221, bb224, bb225, bb226, bb229, bb230, bb231, bb234, bb235, bb236, bb239, bb240, bb241, bb244, bb247, bb248, bb251, bb252, bb253, bb256, bb257, bb258, bb261, bb262, bb263]
  succs [bb265]

bb265
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:982:5-1032:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb169, bb195, bb204, bb264]
  succs []

