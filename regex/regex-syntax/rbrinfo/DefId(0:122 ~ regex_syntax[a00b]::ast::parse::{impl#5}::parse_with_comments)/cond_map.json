{
  "regex-syntax/src/ast/parse.rs:993:33:993:56": [
    {
      "Try": "self.pop_group(concat)?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:1018:30:1018:68": [
    {
      "Try": "self.parse_counted_repetition(concat)?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:991:19:991:30": [
    {
      "Match": {
        "match_source": "regex-syntax/src/ast/parse.rs:991:19:991:30",
        "match_str": "self.char()",
        "match_kind": "Other",
        "arms": {
          "regex-syntax/src/ast/parse.rs:995:17:995:20": {
            "pat": {
              "pat_str": "'['",
              "kind": {
                "Other": 91
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:995:24:998:18"
          },
          "regex-syntax/src/ast/parse.rs:1011:17:1011:20": {
            "pat": {
              "pat_str": "'+'",
              "kind": {
                "Other": 43
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1011:24:1016:18"
          },
          "regex-syntax/src/ast/parse.rs:994:17:994:20": {
            "pat": {
              "pat_str": "'|'",
              "kind": {
                "Other": 124
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:994:24:994:61"
          },
          "regex-syntax/src/ast/parse.rs:999:17:999:20": {
            "pat": {
              "pat_str": "'?'",
              "kind": {
                "Other": 63
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:999:24:1004:18"
          },
          "regex-syntax/src/ast/parse.rs:1020:17:1020:18": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1020:22:1020:74"
          },
          "regex-syntax/src/ast/parse.rs:992:17:992:20": {
            "pat": {
              "pat_str": "'('",
              "kind": {
                "Other": 40
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:992:24:992:57"
          },
          "regex-syntax/src/ast/parse.rs:1017:17:1017:20": {
            "pat": {
              "pat_str": "'{'",
              "kind": {
                "Other": 123
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1017:24:1019:18"
          },
          "regex-syntax/src/ast/parse.rs:1005:17:1005:20": {
            "pat": {
              "pat_str": "'*'",
              "kind": {
                "Other": 42
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1005:24:1010:18"
          },
          "regex-syntax/src/ast/parse.rs:993:17:993:20": {
            "pat": {
              "pat_str": "')'",
              "kind": {
                "Other": 41
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:993:24:993:56"
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9:61:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:13:52:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14:52:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24:52:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1012:30:1015:23": [
    {
      "Try": "self.parse_uncounted_repetition(\n                        concat,\n                        ast::RepetitionKind::OneOrMore,\n                    )?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:1020:39:1020:62": [
    {
      "Try": "self.parse_primitive()?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:1024:9:1024:44": [
    {
      "Try": "NestLimiter::new(self).check(&ast)?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:992:33:992:57": [
    {
      "Try": "self.push_group(concat)?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21:53:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15:51:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:13:52:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14:52:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24:52:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:994:33:994:61": [
    {
      "Try": "self.push_alternate(concat)?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:1023:19:1023:46": [
    {
      "Try": "self.pop_group_end(concat)?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:1006:30:1009:23": [
    {
      "Try": "self.parse_uncounted_repetition(\n                        concat,\n                        ast::RepetitionKind::ZeroOrMore,\n                    )?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:988:16:988:29": [
    {
      "Bool": {
        "Other": "self.is_eof()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1000:30:1003:23": [
    {
      "Try": "self.parse_uncounted_repetition(\n                        concat,\n                        ast::RepetitionKind::ZeroOrOne,\n                    )?"
    }
  ],
  "regex-syntax/src/ast/parse.rs:996:33:996:56": [
    {
      "Try": "self.parse_set_class()?"
    }
  ]
}