{
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ],
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2181:49:2181:67": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.char() != '}'",
          "lhs": "self.char()",
          "rhs": "'}'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2225:16:2225:25": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '\\\\'",
          "lhs": "c",
          "rhs": "'\\\\'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2179:32:2179:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.char() == '{'",
          "lhs": "self.char()",
          "rhs": "'{'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2216:37:2216:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2168:17:2168:35": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.char() == 'p'",
          "lhs": "self.char()",
          "rhs": "'p'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2173:23:2173:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.char() == 'P'",
          "lhs": "self.char()",
          "rhs": "'P'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2168:39:2168:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.char() == 'P'",
          "lhs": "self.char()",
          "rhs": "'P'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2184:16:2184:29": [
    {
      "Bool": {
        "Other": "self.is_eof()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2192:16:2192:45": [
    {
      "Bool": {
        "Other": "let Some(i) = name.find(\"!=\")"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2198:37:2198:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 2",
          "lhs": "i",
          "rhs": "2",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2201:23:2201:51": [
    {
      "Bool": {
        "Other": "let Some(i) = name.find(':')"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2210:23:2210:51": [
    {
      "Bool": {
        "Other": "let Some(i) = name.find('=')"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2181:19:2181:45": [
    {
      "Bool": {
        "Other": "self.bump_and_bump_space()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2207:37:2207:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i + 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:2174:13:2174:39": [
    {
      "Bool": {
        "Other": "self.bump_and_bump_space()"
      }
    }
  ]
}