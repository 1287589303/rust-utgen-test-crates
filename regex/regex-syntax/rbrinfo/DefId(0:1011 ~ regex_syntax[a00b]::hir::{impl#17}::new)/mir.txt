bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:27-1364:51)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:44-1364:50)
  2: _3 = move _1
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:44-1364:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1364:27-1364:51)
      kind: _2 = hir::interval::IntervalSet::<hir::ClassBytesRange>::new::<I>(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:50-1364:51)
  1: _0 = hir::ClassBytes { set: move _2 }
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:9-1364:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1364:52-1364:53)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1364:52-1364:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1365:5-1365:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1365:6-1365:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1364:50-1364:51)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1365:5-1365:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1360:5-1365:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

