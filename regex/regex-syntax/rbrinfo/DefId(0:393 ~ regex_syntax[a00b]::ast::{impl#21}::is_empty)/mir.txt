bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1155:15-1155:20)
  1: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1155:15-1155:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1155:9-1155:20)
      kind: switchInt(move _3) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = const false
    SourceInfo(regex-syntax/src/ast/mod.rs:1157:18-1157:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1157:18-1157:23)
      kind: goto -> bb5
  }
  preds [bb0, bb2, bb3]
  succs [bb5]

bb2
  0: _2 = discriminant((((*_1) as Item).0: ast::ClassSetItem))
    SourceInfo(regex-syntax/src/ast/mod.rs:1155:15-1155:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1155:9-1155:20)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1156:13-1156:51)
      kind: falseEdge -> [real: bb4, imaginary: bb1]
  }
  preds [bb2]
  succs [bb1, bb4]

bb4
  0: _0 = const true
    SourceInfo(regex-syntax/src/ast/mod.rs:1156:55-1156:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1156:55-1156:59)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1159:6-1159:6)
      kind: return
  }
  preds [bb1, bb4]
  succs []

