bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:9-2121:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:13-2119:28)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:13-2119:17)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:13-2119:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2119:13-2119:28)
      kind: _4 = hir::literal::Literal::is_exact(move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2119:13-2119:28)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:27-2119:28)
  1: _3 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2121:10-2121:10)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2121:9-2121:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2121:9-2121:10)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:9-2122:49)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:9-2122:19)
  6: _8 = &mut ((*_1).0: std::vec::Vec<u8>)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:9-2122:19)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  8: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  9: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  11: _12 = &((*_2).0: std::vec::Vec<u8>)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  12: _11 = &(*_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
      kind: _10 = <std::vec::Vec<u8> as core::ops::Deref>::deref(move _11) -> [return: bb4, unwind: bb7]
  }
  preds [bb1]
  succs [bb4, bb7]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:2119:27-2119:28)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2120:13-2120:19)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:2121:9-2121:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2121:9-2121:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2123:6-2123:6)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb4
  0: _9 = &(*_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:38-2122:48)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:47-2122:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2122:9-2122:49)
      kind: _7 = std::vec::Vec::<u8>::extend_from_slice(move _8, move _9) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:48-2122:49)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:48-2122:49)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:49-2122:50)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:49-2122:50)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:2122:49-2122:50)
  5: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:2118:45-2123:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2123:6-2123:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2123:6-2123:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2118:5-2123:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

