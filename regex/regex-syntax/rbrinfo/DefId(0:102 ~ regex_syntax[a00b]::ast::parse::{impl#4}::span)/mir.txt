bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:638:21-638:31)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:638:21-638:25)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:638:21-638:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:638:21-638:31)
      kind: _2 = ast::parse::ParserI::<'_, P>::pos(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:638:30-638:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:638:9-638:32)
      kind: _0 = ast::Span::splat(move _2) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:638:31-638:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:639:6-639:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:637:5-639:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

