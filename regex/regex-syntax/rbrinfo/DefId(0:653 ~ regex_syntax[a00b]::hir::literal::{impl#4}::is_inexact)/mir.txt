bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:9-1563:24)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:9-1563:13)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:9-1563:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1563:9-1563:24)
      kind: _2 = hir::literal::Seq::literals(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:23-1563:24)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:38-1563:79)
  2: _4 = {closure@regex-syntax/src/hir/literal.rs:1563:38: 1563:44}
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:38-1563:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1563:9-1563:80)
      kind: _0 = core::option::Option::<&[hir::literal::Literal]>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:1563:38: 1563:44}>(move _2, const true, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:79-1563:80)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1563:79-1563:80)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1564:6-1564:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1562:5-1564:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

