bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:304:12-304:23)
  1: _3 = ((*_2).1: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:304:12-304:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:304:12-304:23)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:305:13-305:21)
  1: _4 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:305:13-305:21)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:305:32-305:36)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:305:32-305:36)
  4: _6 = const "[^"
    SourceInfo(regex-syntax/src/ast/print.rs:305:32-305:36)
  5: _5 = &(*_6)
    SourceInfo(regex-syntax/src/ast/print.rs:305:32-305:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:305:13-305:37)
      kind: _0 = <W as core::fmt::Write>::write_str(move _4, move _5) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:305:36-305:37)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:305:36-305:37)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:306:9-306:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:304:9-308:10)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb3
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:307:13-307:21)
  1: _7 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:307:13-307:21)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:307:32-307:35)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:307:32-307:35)
  4: _9 = const "["
    SourceInfo(regex-syntax/src/ast/print.rs:307:32-307:35)
  5: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/print.rs:307:32-307:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:307:13-307:36)
      kind: _0 = <W as core::fmt::Write>::write_str(move _7, move _8) -> [return: bb4, unwind: bb6]
  }
  preds [bb0]
  succs [bb4, bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:307:35-307:36)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:307:35-307:36)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:308:9-308:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:304:9-308:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:308:9-308:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:309:6-309:6)
      kind: return
  }
  preds [bb2, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:300:5-309:6)
      kind: resume
  }
  preds [bb1, bb3]
  succs []

