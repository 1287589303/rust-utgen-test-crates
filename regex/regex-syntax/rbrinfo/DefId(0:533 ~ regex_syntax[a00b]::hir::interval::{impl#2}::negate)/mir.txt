bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:9-303:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:12-297:34)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:12-297:23)
  3: _4 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:12-297:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:297:12-297:34)
      kind: _3 = std::vec::Vec::<I>::is_empty(move _4) -> [return: bb1, unwind: bb57]
  }
  preds []
  succs [bb1, bb57]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:297:12-297:34)
      kind: switchInt(move _3) -> [0: bb7, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:33-297:34)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:30-298:76)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:31-298:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:298:31-298:52)
      kind: _9 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::min_value() -> [return: bb3, unwind: bb57]
  }
  preds [bb1]
  succs [bb3, bb57]

bb3
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:54-298:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:298:54-298:75)
      kind: _10 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::max_value() -> [return: bb4, unwind: bb57]
  }
  preds [bb2]
  succs [bb4, bb57]

bb4
  0: _8 = (move _9, move _10)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:30-298:76)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:75-298:76)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:75-298:76)
  3: PlaceMention(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:30-298:76)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:18-298:21)
  5: _6 = (_8.0: <I as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:18-298:21)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:23-298:26)
  7: _7 = (_8.1: <I as hir::interval::Interval>::Bound)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:23-298:26)
  8: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:298:76-298:77)
  9: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:13-299:50)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:13-299:24)
  11: _12 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:13-299:24)
  12: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:30-299:49)
  13: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:40-299:43)
  14: _14 = _6
    SourceInfo(regex-syntax/src/hir/interval.rs:299:40-299:43)
  15: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:45-299:48)
  16: _15 = _7
    SourceInfo(regex-syntax/src/hir/interval.rs:299:45-299:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:299:30-299:49)
      kind: _13 = <I as hir::interval::Interval>::create(move _14, move _15) -> [return: bb5, unwind: bb57]
  }
  preds [bb3]
  succs [bb5, bb57]

bb5
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:48-299:49)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:48-299:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:299:13-299:50)
      kind: _11 = std::vec::Vec::<I>::push(move _12, move _13) -> [return: bb6, unwind: bb57]
  }
  preds [bb4]
  succs [bb6, bb57]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:49-299:50)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:49-299:50)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:299:50-299:51)
  3: ((*_1).1: bool) = const true
    SourceInfo(regex-syntax/src/hir/interval.rs:301:13-301:31)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:302:13-302:19)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  6: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  7: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  8: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:340:6-340:6)
      kind: goto -> bb56
  }
  preds [bb5]
  succs [bb56]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:297:33-297:34)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:303:10-303:10)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:303:9-303:10)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:309:13-309:22)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:309:25-309:36)
  6: _17 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:309:25-309:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:309:25-309:42)
      kind: _16 = std::vec::Vec::<I>::len(move _17) -> [return: bb8, unwind: bb57]
  }
  preds [bb1]
  succs [bb8, bb57]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:309:41-309:42)
  1: FakeRead(ForLet(None), _16)
    SourceInfo(regex-syntax/src/hir/interval.rs:309:13-309:22)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:9-316:10)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:58)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:34)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:34)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:26)
  7: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:23-313:26)
  8: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:23)
  9: _24 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:23-313:26)
      kind: _23 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _24, const 0_usize) -> [return: bb9, unwind: bb57]
  }
  preds [bb7]
  succs [bb9, bb57]

bb9
  0: _22 = &(*_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:26)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:25-313:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:34)
      kind: _21 = <I as hir::interval::Interval>::lower(move _22) -> [return: bb10, unwind: bb57]
  }
  preds [bb8]
  succs [bb10, bb57]

bb10
  0: _20 = &_21
    SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:34)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:33-313:34)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:37-313:58)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:37-313:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:37-313:58)
      kind: _26 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::min_value() -> [return: bb11, unwind: bb57]
  }
  preds [bb9]
  succs [bb11, bb57]

bb11
  0: _25 = &_26
    SourceInfo(regex-syntax/src/hir/interval.rs:313:37-313:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:58)
      kind: _19 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::gt(move _20, move _25) -> [return: bb12, unwind: bb57]
  }
  preds [bb10]
  succs [bb12, bb57]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:12-313:58)
      kind: switchInt(move _19) -> [0: bb20, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  5: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:17-314:22)
  6: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:47)
  7: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:39)
  8: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:36-314:39)
  9: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:36)
  10: _31 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:314:36-314:39)
      kind: _30 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _31, const 0_usize) -> [return: bb14, unwind: bb57]
  }
  preds [bb12]
  succs [bb14, bb57]

bb14
  0: _29 = &(*_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:39)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:38-314:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:47)
      kind: _28 = <I as hir::interval::Interval>::lower(move _29) -> [return: bb15, unwind: bb57]
  }
  preds [bb13]
  succs [bb15, bb57]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:46-314:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:314:25-314:59)
      kind: _27 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::decrement(move _28) -> [return: bb16, unwind: bb57]
  }
  preds [bb14]
  succs [bb16, bb57]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:58-314:59)
  1: FakeRead(ForLet(None), _27)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:17-314:22)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:314:59-314:60)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:13-315:70)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:13-315:24)
  5: _33 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:13-315:24)
  6: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:30-315:69)
  7: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:40-315:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:315:40-315:61)
      kind: _35 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::min_value() -> [return: bb17, unwind: bb57]
  }
  preds [bb15]
  succs [bb17, bb57]

bb17
  0: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:63-315:68)
  1: _36 = _27
    SourceInfo(regex-syntax/src/hir/interval.rs:315:63-315:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:315:30-315:69)
      kind: _34 = <I as hir::interval::Interval>::create(move _35, move _36) -> [return: bb18, unwind: bb57]
  }
  preds [bb16]
  succs [bb18, bb57]

bb18
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:68-315:69)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:68-315:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:315:13-315:70)
      kind: _32 = std::vec::Vec::<I>::push(move _33, move _34) -> [return: bb19, unwind: bb57]
  }
  preds [bb17]
  succs [bb19, bb57]

bb19
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:69-315:70)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:69-315:70)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:315:70-315:71)
  3: _18 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:313:59-316:10)
  4: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:316:9-316:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:9-316:10)
      kind: goto -> bb21
  }
  preds [bb18]
  succs [bb21]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:313:57-313:58)
  5: _18 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:316:10-316:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:313:9-316:10)
      kind: goto -> bb21
  }
  preds [bb12]
  succs [bb21]

bb21
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:316:9-316:10)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:316:9-316:10)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  4: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  5: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:21-317:30)
  6: _40 = _16
    SourceInfo(regex-syntax/src/hir/interval.rs:317:21-317:30)
  7: _39 = core::ops::Range::<usize> { start: const 1_usize, end: move _40 }
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  8: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:29-317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
      kind: _38 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _39) -> [return: bb22, unwind: bb57]
  }
  preds [bb19, bb20]
  succs [bb22, bb57]

bb22
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:29-317:30)
  1: PlaceMention(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  3: _41 = move _38
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
      kind: falseUnwind -> [real: bb24, unwind: bb57]
  }
  preds [bb22, bb38]
  succs [bb24, bb57]

bb24
  0: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  1: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  2: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  3: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  4: _46 = &mut _41
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  5: _45 = &mut (*_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
      kind: _44 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _45) -> [return: bb25, unwind: bb57]
  }
  preds [bb23]
  succs [bb25, bb57]

bb25
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:29-317:30)
  1: PlaceMention(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  2: _47 = discriminant(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
      kind: switchInt(move _47) -> [0: bb27, 1: bb28, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _44)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:18-317:30)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:13-317:14)
  1: _49 = ((_44 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:317:13-317:14)
  2: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:17-318:22)
  3: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:51)
  4: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:43)
  5: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:36-318:43)
  6: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:36)
  7: _54 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:36)
  8: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:42)
  9: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:38)
  10: _56 = _49
    SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:38)
  11: _57 = SubWithOverflow(_56, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:42)
      kind: assert(!move (_57.1: bool), "attempt to compute `{} - {}`, which would overflow", move _56, const 1_usize) -> [success: bb30, unwind: bb57]
  }
  preds [bb25, bb27]
  succs [bb30, bb57]

bb29
  0: _37 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  3: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  4: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  5: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  6: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  7: StorageLive(_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:9-325:10)
  8: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:70)
  9: StorageLive(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:46)
  10: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:46)
  11: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:38)
  12: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:23-322:38)
  13: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:23)
  14: _75 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:23)
  15: StorageLive(_76)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:37)
  16: StorageLive(_77)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:33)
  17: _77 = _16
    SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:33)
  18: _78 = SubWithOverflow(_77, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:37)
      kind: assert(!move (_78.1: bool), "attempt to compute `{} - {}`, which would overflow", move _77, const 1_usize) -> [success: bb39, unwind: bb57]
  }
  preds [bb27]
  succs [bb39, bb57]

bb30
  0: _55 = move (_57.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:37-318:42)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:41-318:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:318:36-318:43)
      kind: _53 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _54, move _55) -> [return: bb31, unwind: bb57]
  }
  preds [bb28]
  succs [bb31, bb57]

bb31
  0: _52 = &(*_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:43)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:42-318:43)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:42-318:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:51)
      kind: _51 = <I as hir::interval::Interval>::upper(move _52) -> [return: bb32, unwind: bb57]
  }
  preds [bb30]
  succs [bb32, bb57]

bb32
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:50-318:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:318:25-318:63)
      kind: _50 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::increment(move _51) -> [return: bb33, unwind: bb57]
  }
  preds [bb31]
  succs [bb33, bb57]

bb33
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:62-318:63)
  1: FakeRead(ForLet(None), _50)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:17-318:22)
  2: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:318:63-318:64)
  3: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:17-319:22)
  4: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:47)
  5: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:39)
  6: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:36-319:39)
  7: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:36)
  8: _62 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:36)
  9: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:37-319:38)
  10: _63 = _49
    SourceInfo(regex-syntax/src/hir/interval.rs:319:37-319:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:319:36-319:39)
      kind: _61 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _62, move _63) -> [return: bb34, unwind: bb57]
  }
  preds [bb32]
  succs [bb34, bb57]

bb34
  0: _60 = &(*_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:39)
  1: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:38-319:39)
  2: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:38-319:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:47)
      kind: _59 = <I as hir::interval::Interval>::lower(move _60) -> [return: bb35, unwind: bb57]
  }
  preds [bb33]
  succs [bb35, bb57]

bb35
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:46-319:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:319:25-319:59)
      kind: _58 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::decrement(move _59) -> [return: bb36, unwind: bb57]
  }
  preds [bb34]
  succs [bb36, bb57]

bb36
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:58-319:59)
  1: FakeRead(ForLet(None), _58)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:17-319:22)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:319:59-319:60)
  3: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:13-320:54)
  4: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:13-320:24)
  5: _65 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:13-320:24)
  6: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:30-320:53)
  7: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:40-320:45)
  8: _67 = _50
    SourceInfo(regex-syntax/src/hir/interval.rs:320:40-320:45)
  9: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:47-320:52)
  10: _68 = _58
    SourceInfo(regex-syntax/src/hir/interval.rs:320:47-320:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:320:30-320:53)
      kind: _66 = <I as hir::interval::Interval>::create(move _67, move _68) -> [return: bb37, unwind: bb57]
  }
  preds [bb35]
  succs [bb37, bb57]

bb37
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:52-320:53)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:52-320:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:320:13-320:54)
      kind: _64 = std::vec::Vec::<I>::push(move _65, move _66) -> [return: bb38, unwind: bb57]
  }
  preds [bb36]
  succs [bb38, bb57]

bb38
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:53-320:54)
  1: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:53-320:54)
  2: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:320:54-320:55)
  3: _43 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:317:31-321:10)
  4: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  5: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  6: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  7: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  8: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  9: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:321:9-321:10)
  10: _42 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:317:9-321:10)
      kind: goto -> bb23
  }
  preds [bb37]
  succs [bb23]

bb39
  0: _76 = move (_78.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:24-322:37)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:36-322:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:23-322:38)
      kind: _74 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _75, move _76) -> [return: bb40, unwind: bb57]
  }
  preds [bb29]
  succs [bb40, bb57]

bb40
  0: _73 = &(*_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:38)
  1: StorageDead(_76)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:37-322:38)
  2: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:37-322:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:46)
      kind: _72 = <I as hir::interval::Interval>::upper(move _73) -> [return: bb41, unwind: bb57]
  }
  preds [bb39]
  succs [bb41, bb57]

bb41
  0: _71 = &_72
    SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:46)
  1: StorageDead(_73)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:45-322:46)
  2: StorageLive(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:49-322:70)
  3: StorageLive(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:49-322:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:49-322:70)
      kind: _80 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::max_value() -> [return: bb42, unwind: bb57]
  }
  preds [bb40]
  succs [bb42, bb57]

bb42
  0: _79 = &_80
    SourceInfo(regex-syntax/src/hir/interval.rs:322:49-322:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:70)
      kind: _70 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::lt(move _71, move _79) -> [return: bb43, unwind: bb57]
  }
  preds [bb41]
  succs [bb43, bb57]

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:12-322:70)
      kind: switchInt(move _70) -> [0: bb52, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb52]

bb44
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  3: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  4: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  5: StorageLive(_81)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:17-323:22)
  6: StorageLive(_82)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:59)
  7: StorageLive(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:51)
  8: StorageLive(_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:36-323:51)
  9: StorageLive(_85)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:36)
  10: _85 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:36)
  11: StorageLive(_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:50)
  12: StorageLive(_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:46)
  13: _87 = _16
    SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:46)
  14: _88 = SubWithOverflow(_87, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:50)
      kind: assert(!move (_88.1: bool), "attempt to compute `{} - {}`, which would overflow", move _87, const 1_usize) -> [success: bb45, unwind: bb57]
  }
  preds [bb43]
  succs [bb45, bb57]

bb45
  0: _86 = move (_88.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:37-323:50)
  1: StorageDead(_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:49-323:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:323:36-323:51)
      kind: _84 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _85, move _86) -> [return: bb46, unwind: bb57]
  }
  preds [bb44]
  succs [bb46, bb57]

bb46
  0: _83 = &(*_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:51)
  1: StorageDead(_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:50-323:51)
  2: StorageDead(_85)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:50-323:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:59)
      kind: _82 = <I as hir::interval::Interval>::upper(move _83) -> [return: bb47, unwind: bb57]
  }
  preds [bb45]
  succs [bb47, bb57]

bb47
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:58-323:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:323:25-323:71)
      kind: _81 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::increment(move _82) -> [return: bb48, unwind: bb57]
  }
  preds [bb46]
  succs [bb48, bb57]

bb48
  0: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:70-323:71)
  1: FakeRead(ForLet(None), _81)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:17-323:22)
  2: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:323:71-323:72)
  3: StorageLive(_89)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:13-324:70)
  4: StorageLive(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:13-324:24)
  5: _90 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:13-324:24)
  6: StorageLive(_91)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:30-324:69)
  7: StorageLive(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:40-324:45)
  8: _92 = _81
    SourceInfo(regex-syntax/src/hir/interval.rs:324:40-324:45)
  9: StorageLive(_93)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:47-324:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:324:47-324:68)
      kind: _93 = <<I as hir::interval::Interval>::Bound as hir::interval::Bound>::max_value() -> [return: bb49, unwind: bb57]
  }
  preds [bb47]
  succs [bb49, bb57]

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:324:30-324:69)
      kind: _91 = <I as hir::interval::Interval>::create(move _92, move _93) -> [return: bb50, unwind: bb57]
  }
  preds [bb48]
  succs [bb50, bb57]

bb50
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:68-324:69)
  1: StorageDead(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:68-324:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:324:13-324:70)
      kind: _89 = std::vec::Vec::<I>::push(move _90, move _91) -> [return: bb51, unwind: bb57]
  }
  preds [bb49]
  succs [bb51, bb57]

bb51
  0: StorageDead(_91)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:69-324:70)
  1: StorageDead(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:69-324:70)
  2: StorageDead(_89)
    SourceInfo(regex-syntax/src/hir/interval.rs:324:70-324:71)
  3: _69 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:322:71-325:10)
  4: StorageDead(_81)
    SourceInfo(regex-syntax/src/hir/interval.rs:325:9-325:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:9-325:10)
      kind: goto -> bb53
  }
  preds [bb50]
  succs [bb53]

bb52
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  3: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  4: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:322:69-322:70)
  5: _69 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:325:10-325:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:322:9-325:10)
      kind: goto -> bb53
  }
  preds [bb43]
  succs [bb53]

bb53
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:325:9-325:10)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:325:9-325:10)
  2: StorageLive(_94)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:9-326:39)
  3: StorageLive(_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:9-326:20)
  4: _95 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:9-326:20)
  5: StorageLive(_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:27-326:38)
  6: StorageLive(_97)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:29-326:38)
  7: _97 = _16
    SourceInfo(regex-syntax/src/hir/interval.rs:326:29-326:38)
  8: _96 = core::ops::RangeTo::<usize> { end: move _97 }
    SourceInfo(regex-syntax/src/hir/interval.rs:326:27-326:38)
  9: StorageDead(_97)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:37-326:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:326:9-326:39)
      kind: _94 = std::vec::Vec::<I>::drain::<core::ops::RangeTo<usize>>(move _95, move _96) -> [return: bb54, unwind: bb57]
  }
  preds [bb51, bb52]
  succs [bb54, bb57]

bb54
  0: StorageDead(_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:38-326:39)
  1: StorageDead(_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:38-326:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:326:39-326:40)
      kind: drop(_94) -> [return: bb55, unwind: bb57]
  }
  preds [bb53]
  succs [bb55, bb57]

bb55
  0: StorageDead(_94)
    SourceInfo(regex-syntax/src/hir/interval.rs:326:39-326:40)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:296:30-340:6)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:340:5-340:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:340:6-340:6)
      kind: goto -> bb56
  }
  preds [bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:340:6-340:6)
      kind: return
  }
  preds [bb6, bb55]
  succs []

bb57
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:296:5-340:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb7, bb8, bb9, bb10, bb11, bb13, bb14, bb15, bb16, bb17, bb18, bb21, bb23, bb24, bb28, bb29, bb30, bb31, bb32, bb33, bb34, bb35, bb36, bb37, bb39, bb40, bb41, bb42, bb44, bb45, bb46, bb47, bb48, bb49, bb50, bb53, bb54]
  succs []

