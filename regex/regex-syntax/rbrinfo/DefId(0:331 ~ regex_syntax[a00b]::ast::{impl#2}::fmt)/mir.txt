bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:9-197:44)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:9-197:44)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:39-197:43)
  3: _5 = _1
    SourceInfo(regex-syntax/src/ast/mod.rs:197:39-197:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:197:9-197:44)
      kind: _4 = <error::Formatter<'_, ast::ErrorKind> as core::convert::From<&ast::Error>>::from(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &_4
    SourceInfo(regex-syntax/src/ast/mod.rs:197:9-197:44)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:43-197:44)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:49-197:50)
  3: _6 = &mut (*_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:49-197:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:197:9-197:51)
      kind: _0 = <error::Formatter<'_, ast::ErrorKind> as core::fmt::Display>::fmt(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:50-197:51)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:197:50-197:51)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:198:5-198:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:198:6-198:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:196:5-198:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

