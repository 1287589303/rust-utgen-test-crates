bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/utf8.rs:427:9-427:24)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/utf8.rs:427:9-427:13)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/utf8.rs:427:9-427:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:427:9-427:24)
      kind: _2 = utf8::ScalarRange::is_valid(move _3) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:427:9-427:24)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/utf8.rs:427:23-427:24)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/utf8.rs:427:28-427:36)
  2: _4 = ((*_1).1: u32)
    SourceInfo(regex-syntax/src/utf8.rs:427:28-427:36)
  3: _0 = Le(move _4, const 127_u32)
    SourceInfo(regex-syntax/src/utf8.rs:427:28-427:44)
  4: StorageDead(_4)
    SourceInfo(regex-syntax/src/utf8.rs:427:43-427:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:427:9-427:44)
      kind: goto -> bb4
  }
  preds [bb1]
  succs [bb4]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/utf8.rs:427:23-427:24)
  1: _0 = const false
    SourceInfo(regex-syntax/src/utf8.rs:427:9-427:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:427:9-427:44)
      kind: goto -> bb4
  }
  preds [bb1]
  succs [bb4]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/utf8.rs:427:43-427:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:428:6-428:6)
      kind: return
  }
  preds [bb2, bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:426:5-428:6)
      kind: resume
  }
  preds [bb0]
  succs []

