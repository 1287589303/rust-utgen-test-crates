bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/unicode.rs:453:9-453:19)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/unicode.rs:453:51-455:58)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/unicode.rs:453:51-454:16)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/unicode.rs:453:51-453:57)
  4: _5 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:453:51-453:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:453:51-454:16)
      kind: _4 = core::slice::<impl [(char, char)]>::iter(move _5) -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/unicode.rs:454:15-454:16)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/unicode.rs:455:14-455:57)
  2: _6 = {closure@regex-syntax/src/unicode.rs:455:14: 455:23}
    SourceInfo(regex-syntax/src/unicode.rs:455:14-455:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:453:51-455:58)
      kind: _3 = <core::slice::Iter<'_, (char, char)> as core::iter::Iterator>::map::<hir::ClassUnicodeRange, {closure@regex-syntax/src/unicode.rs:455:14: 455:23}>(move _4, move _6) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/unicode.rs:455:57-455:58)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:455:57-455:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:453:51-456:19)
      kind: _2 = <core::iter::Map<core::slice::Iter<'_, (char, char)>, {closure@regex-syntax/src/unicode.rs:455:14: 455:23}> as core::iter::Iterator>::collect::<std::vec::Vec<hir::ClassUnicodeRange>>(move _3) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:456:18-456:19)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/unicode.rs:453:9-453:19)
  2: AscribeUserType(_2, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(regex-syntax/src/unicode.rs:453:21-453:48)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/unicode.rs:457:28-457:38)
  4: _7 = move _2
    SourceInfo(regex-syntax/src/unicode.rs:457:28-457:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:457:5-457:39)
      kind: _0 = hir::ClassUnicode::new::<std::vec::Vec<hir::ClassUnicodeRange>>(move _7) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:457:38-457:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:458:1-458:2)
      kind: drop(_2) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:458:1-458:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:458:2-458:2)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:457:38-457:39)
      kind: drop(_7) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:458:1-458:2)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:452:1-458:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb4, bb7]
  succs []

