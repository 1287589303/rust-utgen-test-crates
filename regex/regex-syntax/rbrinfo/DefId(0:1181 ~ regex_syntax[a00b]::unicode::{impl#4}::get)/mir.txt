bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/unicode.rs:199:9-199:19)
  1: _3 = &(*((*_1).0: &[(char, &[char])]))
    SourceInfo(regex-syntax/src/unicode.rs:199:9-199:19)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/unicode.rs:199:41-199:43)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/unicode.rs:199:41-199:43)
  4: _5 = &_2
    SourceInfo(regex-syntax/src/unicode.rs:199:41-199:43)
  5: _4 = &(*_5)
    SourceInfo(regex-syntax/src/unicode.rs:199:41-199:43)
  6: StorageLive(_6)
    SourceInfo(regex-syntax/src/unicode.rs:199:45-199:58)
  7: _6 = {closure@regex-syntax/src/unicode.rs:199:45: 199:55}
    SourceInfo(regex-syntax/src/unicode.rs:199:45-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:199:9-199:59)
      kind: _0 = core::slice::<impl [(char, &[char])]>::binary_search_by_key::<'_, char, {closure@regex-syntax/src/unicode.rs:199:45: 199:55}>(move _3, move _4, move _6) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/unicode.rs:199:58-199:59)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:199:58-199:59)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:199:58-199:59)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/unicode.rs:200:5-200:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:200:6-200:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:198:5-200:6)
      kind: resume
  }
  preds [bb0]
  succs []

