bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/translate.rs:705:13-705:20)
  1: _3 = [const 0_u8; 4]
    SourceInfo(regex-syntax/src/hir/translate.rs:705:23-705:29)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/translate.rs:705:13-705:20)
  3: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:13-706:18)
  4: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:45)
  5: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:45)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:23)
  7: _7 = _2
    SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:23)
  8: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  9: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  10: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  11: _10 = &mut _3
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  12: _9 = &mut (*_10)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  13: _8 = move _9 as &mut [u8] (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/hir/translate.rs:706:36-706:44)
  14: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:43-706:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:45)
      kind: _6 = core::char::methods::<impl char>::encode_utf8(move _7, move _8) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:45)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:44-706:45)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:44-706:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:706:21-706:56)
      kind: _4 = core::str::<impl str>::as_bytes(move _5) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:55-706:56)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:13-706:18)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:56-706:57)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/translate.rs:706:56-706:57)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:13-707:22)
  5: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:43)
  6: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:37)
  7: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:29)
  8: _14 = &(*_1)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:37)
      kind: _13 = hir::translate::TranslatorI::<'_, '_>::trans(move _14) -> [return: bb3, unwind: bb21]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:36-707:37)
  1: _12 = &((*_13).0: core::cell::RefCell<std::vec::Vec<hir::translate::HirFrame>>)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:707:25-707:56)
      kind: _11 = core::cell::RefCell::<std::vec::Vec<hir::translate::HirFrame>>::borrow_mut(move _12) -> [return: bb4, unwind: bb21]
  }
  preds [bb2]
  succs [bb4, bb21]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:55-707:56)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:13-707:22)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/translate.rs:707:56-707:57)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  6: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  7: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  8: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  9: _20 = &mut _11
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
      kind: _19 = <core::cell::RefMut<'_, std::vec::Vec<hir::translate::HirFrame>> as core::ops::DerefMut>::deref_mut(move _20) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: _18 = &mut (*_19)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
      kind: _17 = <std::vec::Vec<hir::translate::HirFrame> as core::ops::DerefMut>::deref_mut(move _18) -> [return: bb6, unwind: bb20]
  }
  preds [bb4]
  succs [bb6, bb20]

bb6
  0: _16 = &mut (*_17)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:64)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:63-708:64)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:63-708:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
      kind: _15 = core::slice::<impl [hir::translate::HirFrame]>::last_mut(move _16) -> [return: bb7, unwind: bb20]
  }
  preds [bb5]
  succs [bb7, bb20]

bb7
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:74-708:75)
  1: PlaceMention(_15)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  2: _22 = discriminant(_15)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:16-708:56)
      kind: switchInt(move _22) -> [1: bb8, otherwise: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: _21 = discriminant((*((_15 as Some).0: &mut hir::translate::HirFrame)))
    SourceInfo(regex-syntax/src/hir/translate.rs:708:59-708:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:16-708:56)
      kind: switchInt(move _21) -> [1: bb9, otherwise: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:16-708:56)
      kind: falseEdge -> [real: bb10, imaginary: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:39-708:54)
  1: _23 = &mut (((*((_15 as Some).0: &mut hir::translate::HirFrame)) as Literal).0: std::vec::Vec<u8>)
    SourceInfo(regex-syntax/src/hir/translate.rs:708:39-708:54)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:13-709:45)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:13-709:20)
  4: _25 = &mut (*_23)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:13-709:20)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:39-709:44)
  6: _26 = &(*_4)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:39-709:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:709:13-709:45)
      kind: _24 = std::vec::Vec::<u8>::extend_from_slice(move _25, move _26) -> [return: bb11, unwind: bb20]
  }
  preds [bb9]
  succs [bb11, bb20]

bb11
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:44-709:45)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:44-709:45)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/translate.rs:709:45-709:46)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/translate.rs:708:76-710:10)
  4: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/translate.rs:710:9-710:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:9-712:10)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb12
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:58)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:18)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:58)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:18)
  4: _30 = &mut _11
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:58)
      kind: _29 = <core::cell::RefMut<'_, std::vec::Vec<hir::translate::HirFrame>> as core::ops::DerefMut>::deref_mut(move _30) -> [return: bb13, unwind: bb20]
  }
  preds [bb7, bb8, bb9]
  succs [bb13, bb20]

bb13
  0: _28 = &mut (*_29)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:18)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:17-711:18)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:24-711:57)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:42-711:56)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:42-711:47)
  5: _33 = &(*_4)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:42-711:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:711:42-711:56)
      kind: _32 = std::slice::<impl [u8]>::to_vec(move _33) -> [return: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:55-711:56)
  1: _31 = hir::translate::HirFrame::Literal(move _32)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:24-711:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:711:56-711:57)
      kind: drop(_32) -> [return: bb15, unwind: bb19]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:56-711:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:711:13-711:58)
      kind: _27 = std::vec::Vec::<hir::translate::HirFrame>::push(move _28, move _31) -> [return: bb16, unwind: bb19]
  }
  preds [bb14]
  succs [bb16, bb19]

bb16
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:57-711:58)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:57-711:58)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:58-711:59)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/translate.rs:711:58-711:59)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/translate.rs:710:16-712:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:708:9-712:10)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
      kind: drop(_11) -> [return: bb18, unwind: bb21]
  }
  preds [bb11, bb16]
  succs [bb18, bb21]

bb18
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  5: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:713:6-713:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:711:57-711:58)
      kind: drop(_31) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb14, bb15]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:713:5-713:6)
      kind: drop(_11) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb6, bb10, bb12, bb13, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/translate.rs:704:5-713:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb17, bb20]
  succs []

