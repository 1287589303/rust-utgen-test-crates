bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:9-1653:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  2: _5 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1638:9-1638:20)
      kind: switchInt(move _5) -> [0: bb6, 1: bb6, 2: bb6, 3: bb6, 4: bb6, 5: bb6, 6: bb6, 7: bb6, 8: bb2, 9: bb3, 10: bb4, 11: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb6, bb6, bb6, bb6, bb6, bb6, bb6]

bb1
  0: _2 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1652:18-1652:20)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1653:9-1653:10)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1655:13-1655:23)
  3: _27 = {closure@regex-syntax/src/ast/mod.rs:1655:26: 1655:28}
    SourceInfo(regex-syntax/src/ast/mod.rs:1655:26-1655:64)
  4: FakeRead(ForLet(None), _27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1655:13-1655:23)
  5: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:13-1656:22)
  6: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:25-1656:52)
  7: _29 = &_27
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:25-1656:52)
  8: _28 = {closure@regex-syntax/src/ast/mod.rs:1656:25: 1656:27} { empty_span: move _29 }
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:25-1656:52)
  9: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:26-1656:27)
  10: FakeRead(ForLet(None), _28)
    SourceInfo(regex-syntax/src/ast/mod.rs:1656:13-1656:22)
  11: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:13-1657:22)
  12: StorageLive(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  13: StorageLive(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  14: _33 = SizeOf([ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  15: _34 = AlignOf([ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
      kind: _35 = alloc::alloc::exchange_malloc(move _33, move _34) -> [return: bb24, unwind: bb77]
  }
  preds [bb0, bb5, bb10, bb14, bb19, bb23, bb23]
  succs [bb24, bb77]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1648:13-1648:35)
      kind: falseEdge -> [real: bb8, imaginary: bb3]
  }
  preds [bb0, bb6]
  succs [bb3, bb8]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1649:13-1649:30)
      kind: falseEdge -> [real: bb12, imaginary: bb4]
  }
  preds [bb0, bb2, bb10]
  succs [bb4, bb12]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1650:13-1650:36)
      kind: falseEdge -> [real: bb16, imaginary: bb5]
  }
  preds [bb0, bb3, bb14]
  succs [bb5, bb16]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1651:13-1651:31)
      kind: falseEdge -> [real: bb20, imaginary: bb1]
  }
  preds [bb0, bb4, bb19]
  succs [bb1, bb20]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1639:13-1647:37)
      kind: falseEdge -> [real: bb7, imaginary: bb2]
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb0, bb0, bb0]
  succs [bb2, bb7]

bb7
  0: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1647:41-1647:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1647:41-1647:47)
      kind: goto -> bb62
  }
  preds [bb6]
  succs [bb62]

bb8
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:29-1648:34)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:29-1648:34)
  2: _7 = &(((*_1) as Repetition).0: std::boxed::Box<ast::Repetition>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:29-1648:34)
  3: _8 = &_7
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:29-1648:34)
  4: _3 = &fake shallow (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  5: _4 = &fake shallow _1
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:40-1648:60)
  7: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:40-1648:45)
  8: _10 = &(*((*(*(*_8))).3: std::boxed::Box<ast::Ast>))
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:40-1648:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1648:40-1648:60)
      kind: _9 = ast::Ast::has_subexprs(move _10) -> [return: bb9, unwind: bb77]
  }
  preds [bb2]
  succs [bb9, bb77]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1648:40-1648:60)
      kind: switchInt(move _9) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:69-1648:70)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:69-1648:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1648:39-1648:60)
      kind: falseEdge -> [real: bb1, imaginary: bb3]
  }
  preds [bb9]
  succs [bb1, bb3]

bb11
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  2: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  3: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:59-1648:60)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:64-1648:70)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:69-1648:70)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1648:69-1648:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb9]
  succs [bb62]

bb12
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:24-1649:29)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:24-1649:29)
  2: _12 = &(((*_1) as Group).0: std::boxed::Box<ast::Group>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:24-1649:29)
  3: _13 = &_12
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:24-1649:29)
  4: _3 = &fake shallow (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  5: _4 = &fake shallow _1
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  6: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:35-1649:55)
  7: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:35-1649:40)
  8: _15 = &(*((*(*(*_13))).2: std::boxed::Box<ast::Ast>))
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:35-1649:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1649:35-1649:55)
      kind: _14 = ast::Ast::has_subexprs(move _15) -> [return: bb13, unwind: bb77]
  }
  preds [bb3]
  succs [bb13, bb77]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1649:35-1649:55)
      kind: switchInt(move _14) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:64-1649:65)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:64-1649:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1649:34-1649:55)
      kind: falseEdge -> [real: bb1, imaginary: bb4]
  }
  preds [bb13]
  succs [bb1, bb4]

bb15
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  2: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  3: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:54-1649:55)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:59-1649:65)
  5: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:64-1649:65)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1649:64-1649:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb13]
  succs [bb62]

bb16
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:30-1650:35)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:30-1650:35)
  2: _17 = &(((*_1) as Alternation).0: std::boxed::Box<ast::Alternation>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:30-1650:35)
  3: _18 = &_17
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:30-1650:35)
  4: _3 = &fake shallow (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  5: _4 = &fake shallow _1
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  6: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:57)
  7: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:46)
  8: _20 = &((*(*(*_18))).1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:57)
      kind: _19 = std::vec::Vec::<ast::Ast>::is_empty(move _20) -> [return: bb17, unwind: bb77]
  }
  preds [bb4]
  succs [bb17, bb77]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:57)
      kind: switchInt(move _19) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  2: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  3: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:61-1650:67)
  5: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:66-1650:67)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:66-1650:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb17]
  succs [bb62]

bb19
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:56-1650:57)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:66-1650:67)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1650:66-1650:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1650:40-1650:57)
      kind: falseEdge -> [real: bb1, imaginary: bb5]
  }
  preds [bb17]
  succs [bb1, bb5]

bb20
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:25-1651:30)
  1: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:25-1651:30)
  2: _22 = &(((*_1) as Concat).0: std::boxed::Box<ast::Concat>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:25-1651:30)
  3: _23 = &_22
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:25-1651:30)
  4: _3 = &fake shallow (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  5: _4 = &fake shallow _1
    SourceInfo(regex-syntax/src/ast/mod.rs:1638:15-1638:20)
  6: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:52)
  7: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:41)
  8: _25 = &((*(*(*_23))).1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:52)
      kind: _24 = std::vec::Vec::<ast::Ast>::is_empty(move _25) -> [return: bb21, unwind: bb77]
  }
  preds [bb5]
  succs [bb21, bb77]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:52)
      kind: switchInt(move _24) -> [0: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23]

bb22
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  2: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  3: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:56-1651:62)
  5: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:61-1651:62)
  6: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:61-1651:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb21]
  succs [bb62]

bb23
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:51-1651:52)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:61-1651:62)
  3: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1651:61-1651:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1651:35-1651:52)
      kind: falseEdge -> [real: bb1, imaginary: bb1]
  }
  preds [bb21]
  succs [bb1, bb1]

bb24
  0: StorageLive(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  1: _36 = ShallowInitBox(move _35, [ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:30-1657:61)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:43-1657:47)
  4: _38 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:43-1657:47)
  5: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:60)
  6: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:58)
  7: _40 = &_28
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:58)
  8: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:60)
  9: _41 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1657:49-1657:60)
      kind: _39 = <{closure@regex-syntax/src/ast/mod.rs:1656:25: 1656:27} as core::ops::Fn<()>>::call(move _40, move _41) -> [return: bb25, unwind: bb76]
  }
  preds [bb1]
  succs [bb25, bb76]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:59-1657:60)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:59-1657:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1657:30-1657:61)
      kind: _37 = core::mem::replace::<ast::Ast>(move _38, move _39) -> [return: bb26, unwind: bb75]
  }
  preds [bb24]
  succs [bb26, bb75]

bb26
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:60-1657:61)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:60-1657:61)
  2: (*_36) = [move _37]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37-54:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
      kind: drop(_37) -> [return: bb27, unwind: bb76]
  }
  preds [bb25]
  succs [bb27, bb76]

bb27
  0: StorageDead(_37)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
  1: _32 = move _36
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: _31 = move _32 as std::boxed::Box<[ast::Ast]> (PointerCoercion(Unsize))
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_32) -> [return: bb28, unwind: bb73]
  }
  preds [bb26]
  succs [bb28, bb73]

bb28
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_36) -> [return: bb29, unwind: bb74]
  }
  preds [bb27]
  succs [bb29, bb74]

bb29
  0: StorageDead(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  1: StorageDead(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:9-55:10)
      kind: _30 = std::slice::<impl [ast::Ast]>::into_vec::<std::alloc::Global>(move _31) -> [return: bb30, unwind: bb74]
  }
  preds [bb28]
  succs [bb30, bb74]

bb30
  0: StorageDead(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
  1: FakeRead(ForLet(None), _30)
    SourceInfo(regex-syntax/src/ast/mod.rs:1657:13-1657:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:9-1683:10)
      kind: goto -> bb31
  }
  preds [bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:9-1683:10)
      kind: falseUnwind -> [real: bb32, unwind: bb72]
  }
  preds [bb30, bb59]
  succs [bb32, bb72]

bb32
  0: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:46)
  1: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:40)
  2: _44 = &mut _30
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:46)
      kind: _43 = std::vec::Vec::<ast::Ast>::pop(move _44) -> [return: bb33, unwind: bb72]
  }
  preds [bb31]
  succs [bb33, bb72]

bb33
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:45-1658:46)
  1: PlaceMention(_43)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:46)
  2: _45 = discriminant(_43)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:35-1658:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:19-1658:32)
      kind: switchInt(move _45) -> [1: bb34, otherwise: bb57]
  }
  preds [bb32]
  succs [bb34, bb57]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:19-1658:32)
      kind: falseEdge -> [real: bb35, imaginary: bb57]
  }
  preds [bb33]
  succs [bb35, bb57]

bb35
  0: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:24-1658:31)
  1: _46 = move ((_43 as Some).0: ast::Ast)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:24-1658:31)
  2: PlaceMention(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1659:19-1659:22)
  3: _47 = discriminant(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1659:19-1659:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1659:13-1659:22)
      kind: switchInt(move _47) -> [0: bb41, 1: bb41, 2: bb41, 3: bb41, 4: bb41, 5: bb41, 6: bb41, 7: bb41, 8: bb37, 9: bb38, 10: bb39, 11: bb40, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38, bb39, bb40, bb41, bb41, bb41, bb41, bb41, bb41, bb41, bb41]

bb36
  0: FakeRead(ForMatchedPlace(None), _46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1659:19-1659:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1659:19-1659:22)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1670:17-1670:43)
      kind: falseEdge -> [real: bb43, imaginary: bb38]
  }
  preds [bb35, bb41]
  succs [bb38, bb43]

bb38
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1673:17-1673:38)
      kind: falseEdge -> [real: bb47, imaginary: bb39]
  }
  preds [bb35, bb37]
  succs [bb39, bb47]

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1676:17-1676:44)
      kind: falseEdge -> [real: bb51, imaginary: bb40]
  }
  preds [bb35, bb38]
  succs [bb40, bb51]

bb40
  0: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/mod.rs:1679:29-1679:38)
  1: _72 = &mut ((_46 as Concat).0: std::boxed::Box<ast::Concat>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1679:29-1679:38)
  2: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:21-1680:51)
  3: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:21-1680:26)
  4: _74 = &mut _30
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:21-1680:26)
  5: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:34-1680:50)
  6: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:34-1680:40)
  7: _76 = &mut ((*(*_72)).1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:34-1680:40)
  8: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:47-1680:49)
  9: _77 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:47-1680:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1680:34-1680:50)
      kind: _75 = std::vec::Vec::<ast::Ast>::drain::<core::ops::RangeFull>(move _76, move _77) -> [return: bb54, unwind: bb70]
  }
  preds [bb35, bb39]
  succs [bb54, bb70]

bb41
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1660:17-1669:41)
      kind: falseEdge -> [real: bb42, imaginary: bb37]
  }
  preds [bb35, bb35, bb35, bb35, bb35, bb35, bb35, bb35]
  succs [bb37, bb42]

bb42
  0: _42 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1669:45-1669:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1669:45-1669:47)
      kind: goto -> bb56
  }
  preds [bb41]
  succs [bb56]

bb43
  0: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/mod.rs:1670:33-1670:42)
  1: _48 = &mut ((_46 as Repetition).0: std::boxed::Box<ast::Repetition>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1670:33-1670:42)
  2: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:21-1671:70)
  3: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:21-1671:26)
  4: _50 = &mut _30
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:21-1671:26)
  5: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:32-1671:69)
  6: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:45-1671:55)
  7: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:45-1671:55)
  8: _53 = &mut ((*(*_48)).3: std::boxed::Box<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:45-1671:55)
  9: _52 = &mut (*(*_53))
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:45-1671:55)
  10: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:68)
  11: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:66)
  12: _55 = &_28
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:66)
  13: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:68)
  14: _56 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1671:57-1671:68)
      kind: _54 = <{closure@regex-syntax/src/ast/mod.rs:1656:25: 1656:27} as core::ops::Fn<()>>::call(move _55, move _56) -> [return: bb44, unwind: bb70]
  }
  preds [bb37]
  succs [bb44, bb70]

bb44
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:67-1671:68)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:67-1671:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1671:32-1671:69)
      kind: _51 = core::mem::replace::<ast::Ast>(move _52, move _54) -> [return: bb45, unwind: bb69]
  }
  preds [bb43]
  succs [bb45, bb69]

bb45
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:68-1671:69)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:68-1671:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1671:21-1671:70)
      kind: _49 = std::vec::Vec::<ast::Ast>::push(move _50, move _51) -> [return: bb46, unwind: bb68]
  }
  preds [bb44]
  succs [bb46, bb68]

bb46
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:69-1671:70)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:69-1671:70)
  2: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:70-1671:71)
  3: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/mod.rs:1671:70-1671:71)
  4: _42 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1670:47-1672:18)
  5: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/mod.rs:1672:17-1672:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1672:17-1672:18)
      kind: goto -> bb56
  }
  preds [bb45]
  succs [bb56]

bb47
  0: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/mod.rs:1673:28-1673:37)
  1: _57 = &mut ((_46 as Group).0: std::boxed::Box<ast::Group>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1673:28-1673:37)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:21-1674:70)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:21-1674:26)
  4: _59 = &mut _30
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:21-1674:26)
  5: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:32-1674:69)
  6: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:45-1674:55)
  7: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:45-1674:55)
  8: _62 = &mut ((*(*_57)).2: std::boxed::Box<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:45-1674:55)
  9: _61 = &mut (*(*_62))
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:45-1674:55)
  10: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:68)
  11: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:66)
  12: _64 = &_28
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:66)
  13: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:68)
  14: _65 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1674:57-1674:68)
      kind: _63 = <{closure@regex-syntax/src/ast/mod.rs:1656:25: 1656:27} as core::ops::Fn<()>>::call(move _64, move _65) -> [return: bb48, unwind: bb70]
  }
  preds [bb38]
  succs [bb48, bb70]

bb48
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:67-1674:68)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:67-1674:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1674:32-1674:69)
      kind: _60 = core::mem::replace::<ast::Ast>(move _61, move _63) -> [return: bb49, unwind: bb67]
  }
  preds [bb47]
  succs [bb49, bb67]

bb49
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:68-1674:69)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:68-1674:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1674:21-1674:70)
      kind: _58 = std::vec::Vec::<ast::Ast>::push(move _59, move _60) -> [return: bb50, unwind: bb66]
  }
  preds [bb48]
  succs [bb50, bb66]

bb50
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:69-1674:70)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:69-1674:70)
  2: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:70-1674:71)
  3: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/mod.rs:1674:70-1674:71)
  4: _42 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1673:42-1675:18)
  5: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/mod.rs:1675:17-1675:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1675:17-1675:18)
      kind: goto -> bb56
  }
  preds [bb49]
  succs [bb56]

bb51
  0: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/mod.rs:1676:34-1676:43)
  1: _66 = &mut ((_46 as Alternation).0: std::boxed::Box<ast::Alternation>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1676:34-1676:43)
  2: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:21-1677:51)
  3: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:21-1677:26)
  4: _68 = &mut _30
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:21-1677:26)
  5: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:34-1677:50)
  6: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:34-1677:40)
  7: _70 = &mut ((*(*_66)).1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:34-1677:40)
  8: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:47-1677:49)
  9: _71 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:47-1677:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1677:34-1677:50)
      kind: _69 = std::vec::Vec::<ast::Ast>::drain::<core::ops::RangeFull>(move _70, move _71) -> [return: bb52, unwind: bb70]
  }
  preds [bb39]
  succs [bb52, bb70]

bb52
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:49-1677:50)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:49-1677:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1677:21-1677:51)
      kind: _67 = <std::vec::Vec<ast::Ast> as core::iter::Extend<ast::Ast>>::extend::<std::vec::Drain<'_, ast::Ast>>(move _68, move _69) -> [return: bb53, unwind: bb65]
  }
  preds [bb51]
  succs [bb53, bb65]

bb53
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:50-1677:51)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:50-1677:51)
  2: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/mod.rs:1677:51-1677:52)
  3: _42 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1676:48-1678:18)
  4: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/mod.rs:1678:17-1678:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1678:17-1678:18)
      kind: goto -> bb56
  }
  preds [bb52]
  succs [bb56]

bb54
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:49-1680:50)
  1: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:49-1680:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1680:21-1680:51)
      kind: _73 = <std::vec::Vec<ast::Ast> as core::iter::Extend<ast::Ast>>::extend::<std::vec::Drain<'_, ast::Ast>>(move _74, move _75) -> [return: bb55, unwind: bb64]
  }
  preds [bb40]
  succs [bb55, bb64]

bb55
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:50-1680:51)
  1: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:50-1680:51)
  2: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/mod.rs:1680:51-1680:52)
  3: _42 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1679:43-1681:18)
  4: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/mod.rs:1681:17-1681:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1681:17-1681:18)
      kind: goto -> bb56
  }
  preds [bb54]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
      kind: drop(_46) -> [return: bb58, unwind: bb71]
  }
  preds [bb42, bb46, bb50, bb53, bb55]
  succs [bb58, bb71]

bb57
  0: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:9-1683:10)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1658:9-1683:10)
  2: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
      kind: drop(_43) -> [return: bb60, unwind: bb72]
  }
  preds [bb33, bb34]
  succs [bb60, bb72]

bb58
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
      kind: drop(_43) -> [return: bb59, unwind: bb72]
  }
  preds [bb56]
  succs [bb59, bb72]

bb59
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1658:9-1683:10)
      kind: goto -> bb31
  }
  preds [bb58]
  succs [bb31]

bb60
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1684:5-1684:6)
      kind: drop(_30) -> [return: bb61, unwind: bb77]
  }
  preds [bb57]
  succs [bb61, bb77]

bb61
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/mod.rs:1684:5-1684:6)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/mod.rs:1684:5-1684:6)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1684:5-1684:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1684:6-1684:6)
      kind: goto -> bb63
  }
  preds [bb60]
  succs [bb63]

bb62
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1653:9-1653:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1684:6-1684:6)
      kind: goto -> bb63
  }
  preds [bb7, bb11, bb15, bb18, bb22]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1684:6-1684:6)
      kind: return
  }
  preds [bb61, bb62]
  succs []

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1680:50-1680:51)
      kind: drop(_75) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb54]
  succs [bb70]

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1677:50-1677:51)
      kind: drop(_69) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb70]

bb66
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1674:69-1674:70)
      kind: drop(_60) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb70]

bb67
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1674:68-1674:69)
      kind: drop(_63) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb70]

bb68
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1671:69-1671:70)
      kind: drop(_51) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb70]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1671:68-1671:69)
      kind: drop(_54) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
      kind: drop(_46) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb40, bb43, bb47, bb51, bb64, bb65, bb66, bb67, bb68, bb69]
  succs [bb71]

bb71
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1683:9-1683:10)
      kind: drop(_43) -> [return: bb72, unwind terminate(cleanup)]
  }
  preds [bb56, bb70]
  succs [bb72]

bb72
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1684:5-1684:6)
      kind: drop(_30) -> [return: bb77, unwind terminate(cleanup)]
  }
  preds [bb31, bb32, bb57, bb58, bb71]
  succs [bb77]

bb73
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_36) -> [return: bb74, unwind terminate(cleanup)]
  }
  preds [bb27]
  succs [bb74]

bb74
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
      kind: drop(_31) -> [return: bb77, unwind terminate(cleanup)]
  }
  preds [bb28, bb29, bb73]
  succs [bb77]

bb75
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1657:60-1657:61)
      kind: drop(_39) -> [return: bb76, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb76]

bb76
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_36) -> [return: bb77, unwind terminate(cleanup)]
  }
  preds [bb24, bb26, bb75]
  succs [bb77]

bb77
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1635:5-1684:6)
      kind: resume
  }
  preds [bb1, bb8, bb12, bb16, bb20, bb60, bb72, bb74, bb76]
  succs []

