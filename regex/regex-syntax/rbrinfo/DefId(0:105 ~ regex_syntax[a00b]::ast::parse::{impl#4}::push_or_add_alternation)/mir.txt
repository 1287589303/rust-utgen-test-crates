bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:13-678:22)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:50)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:38)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:29)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:38)
      kind: _5 = ast::parse::ParserI::<'_, P>::parser(move _6) -> [return: bb1, unwind: bb36]
  }
  preds []
  succs [bb1, bb36]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:37-678:38)
  1: _4 = &((*_5).8: core::cell::RefCell<std::vec::Vec<ast::parse::GroupState>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:678:25-678:63)
      kind: _3 = core::cell::RefCell::<std::vec::Vec<ast::parse::GroupState>>::borrow_mut(move _4) -> [return: bb2, unwind: bb36]
  }
  preds [bb0]
  succs [bb2, bb36]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:62-678:63)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:13-678:22)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:678:63-678:64)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:9-682:10)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  8: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  9: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  10: _13 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
      kind: _12 = <core::cell::RefMut<'_, std::vec::Vec<ast::parse::GroupState>> as core::ops::DerefMut>::deref_mut(move _13) -> [return: bb3, unwind: bb35]
  }
  preds [bb1]
  succs [bb3, bb35]

bb3
  0: _11 = &mut (*_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
      kind: _10 = <std::vec::Vec<ast::parse::GroupState> as core::ops::DerefMut>::deref_mut(move _11) -> [return: bb4, unwind: bb35]
  }
  preds [bb2]
  succs [bb4, bb35]

bb4
  0: _9 = &mut (*_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:60)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:59-679:60)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:59-679:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
      kind: _8 = core::slice::<impl [ast::parse::GroupState]>::last_mut(move _9) -> [return: bb5, unwind: bb35]
  }
  preds [bb3]
  succs [bb5, bb35]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:70-679:71)
  1: PlaceMention(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  2: _15 = discriminant(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:16-679:52)
      kind: switchInt(move _15) -> [1: bb6, otherwise: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: _14 = discriminant((*((_8 as Some).0: &mut ast::parse::GroupState)))
    SourceInfo(regex-syntax/src/ast/parse.rs:679:55-679:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:16-679:52)
      kind: switchInt(move _14) -> [1: bb7, otherwise: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:679:16-679:52)
      kind: falseEdge -> [real: bb8, imaginary: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:38-679:50)
  1: _16 = &mut (((*((_8 as Some).0: &mut ast::parse::GroupState)) as Alternation).0: ast::Alternation)
    SourceInfo(regex-syntax/src/ast/parse.rs:679:38-679:50)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:13-680:46)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:13-680:22)
  4: _19 = &mut ((*_16).1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:13-680:22)
  5: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:28-680:45)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:28-680:34)
  7: _21 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:680:28-680:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:680:28-680:45)
      kind: _20 = ast::Concat::into_ast(move _21) -> [return: bb9, unwind: bb34]
  }
  preds [bb7]
  succs [bb9, bb34]

bb9
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:44-680:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:680:13-680:46)
      kind: _18 = std::vec::Vec::<ast::Ast>::push(move _19, move _20) -> [return: bb10, unwind: bb33]
  }
  preds [bb8]
  succs [bb10, bb33]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:45-680:46)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:45-680:46)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:680:46-680:47)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:681:13-681:19)
  4: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  5: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  7: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  8: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_3) -> [return: bb25, unwind: bb36]
  }
  preds [bb9]
  succs [bb25, bb36]

bb11
  0: _7 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:682:10-682:10)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:682:9-682:10)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-686:12)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-683:14)
  7: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-686:12)
  8: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-683:14)
  9: _25 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-683:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:683:9-686:12)
      kind: _24 = <core::cell::RefMut<'_, std::vec::Vec<ast::parse::GroupState>> as core::ops::DerefMut>::deref_mut(move _25) -> [return: bb12, unwind: bb35]
  }
  preds [bb5, bb6, bb7]
  succs [bb12, bb35]

bb12
  0: _23 = &mut (*_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:9-683:14)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:13-683:14)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:20-686:11)
  3: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:32-686:10)
  4: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:19-684:59)
  5: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:29-684:46)
  6: _29 = ((_2.0: ast::Span).0: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:29-684:46)
  7: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:48-684:58)
  8: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:48-684:52)
  9: _31 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:48-684:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:684:48-684:58)
      kind: _30 = ast::parse::ParserI::<'_, P>::pos(move _31) -> [return: bb13, unwind: bb35]
  }
  preds [bb11]
  succs [bb13, bb35]

bb13
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:57-684:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:684:19-684:59)
      kind: _28 = ast::Span::new(move _29, move _30) -> [return: bb14, unwind: bb35]
  }
  preds [bb12]
  succs [bb14, bb35]

bb14
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:58-684:59)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:684:58-684:59)
  2: StorageLive(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:9-55:10)
  3: StorageLive(_33)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  4: StorageLive(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  5: _35 = SizeOf([ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  6: _36 = AlignOf([ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
      kind: _37 = alloc::alloc::exchange_malloc(move _35, move _36) -> [return: bb15, unwind: bb35]
  }
  preds [bb13]
  succs [bb15, bb35]

bb15
  0: StorageLive(_38)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  1: _38 = ShallowInitBox(move _37, [ast::Ast; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:685:24-685:41)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:685:24-685:30)
  4: _40 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:685:24-685:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:685:24-685:41)
      kind: _39 = ast::Concat::into_ast(move _40) -> [return: bb16, unwind: bb31]
  }
  preds [bb14]
  succs [bb16, bb31]

bb16
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:685:40-685:41)
  1: (*_38) = [move _39]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37-54:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
      kind: drop(_39) -> [return: bb17, unwind: bb32]
  }
  preds [bb15]
  succs [bb17, bb32]

bb17
  0: StorageDead(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
  1: _34 = move _38
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: _33 = move _34 as std::boxed::Box<[ast::Ast]> (PointerCoercion(Unsize))
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_34) -> [return: bb18, unwind: bb29]
  }
  preds [bb16]
  succs [bb18, bb29]

bb18
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_38) -> [return: bb19, unwind: bb30]
  }
  preds [bb17]
  succs [bb19, bb30]

bb19
  0: StorageDead(_38)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  1: StorageDead(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:9-55:10)
      kind: _32 = std::slice::<impl [ast::Ast]>::into_vec::<std::alloc::Global>(move _33) -> [return: bb20, unwind: bb30]
  }
  preds [bb18]
  succs [bb20, bb30]

bb20
  0: StorageDead(_33)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
  1: _27 = ast::Alternation { span: move _28, asts: move _32 }
    SourceInfo(regex-syntax/src/ast/parse.rs:683:32-686:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:686:9-686:10)
      kind: drop(_32) -> [return: bb21, unwind: bb28]
  }
  preds [bb19]
  succs [bb21, bb28]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:9-686:10)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:9-686:10)
  2: _26 = ast::parse::GroupState::Alternation(move _27)
    SourceInfo(regex-syntax/src/ast/parse.rs:683:20-686:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:686:10-686:11)
      kind: drop(_27) -> [return: bb22, unwind: bb27]
  }
  preds [bb20]
  succs [bb22, bb27]

bb22
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:10-686:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:683:9-686:12)
      kind: _22 = std::vec::Vec::<ast::parse::GroupState>::push(move _23, move _26) -> [return: bb23, unwind: bb27]
  }
  preds [bb21]
  succs [bb23, bb27]

bb23
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:11-686:12)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:11-686:12)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:12-686:13)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:686:12-686:13)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:675:60-687:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_3) -> [return: bb24, unwind: bb36]
  }
  preds [bb22]
  succs [bb24, bb36]

bb24
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_2) -> [return: bb26, unwind: bb37]
  }
  preds [bb23]
  succs [bb26, bb37]

bb25
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_2) -> [return: bb26, unwind: bb37]
  }
  preds [bb10]
  succs [bb26, bb37]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:6-687:6)
      kind: return
  }
  preds [bb24, bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:686:11-686:12)
      kind: drop(_26) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb21, bb22]
  succs [bb35]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:686:10-686:11)
      kind: drop(_27) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb35]

bb29
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_38) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
      kind: drop(_33) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb18, bb19, bb29]
  succs [bb35]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:685:40-685:41)
      kind: drop(_40) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_38) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb16, bb31]
  succs [bb35]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:680:45-680:46)
      kind: drop(_20) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:680:44-680:45)
      kind: drop(_21) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_3) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb11, bb12, bb13, bb14, bb27, bb28, bb30, bb32, bb33, bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:687:5-687:6)
      kind: drop(_2) -> [return: bb37, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb10, bb23, bb35]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:675:5-687:6)
      kind: resume
  }
  preds [bb24, bb25, bb36]
  succs []

