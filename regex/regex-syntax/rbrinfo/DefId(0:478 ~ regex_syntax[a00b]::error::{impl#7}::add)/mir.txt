bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:185:12-185:30)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:185:12-185:16)
  2: _4 = &_2
    SourceInfo(regex-syntax/src/error.rs:185:12-185:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:185:12-185:30)
      kind: _3 = ast::Span::is_one_line(move _4) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:185:12-185:30)
      kind: switchInt(move _3) -> [0: bb9, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:185:29-185:30)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:186:17-186:18)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:186:21-186:36)
  3: _6 = ((_2.0: ast::Position).1: usize)
    SourceInfo(regex-syntax/src/error.rs:186:21-186:36)
  4: _7 = SubWithOverflow(_6, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:186:21-186:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:186:21-186:40)
      kind: assert(!move (_7.1: bool), "attempt to compute `{} - {}`, which would overflow", move _6, const 1_usize) -> [success: bb3, unwind: bb14]
  }
  preds [bb1]
  succs [bb3, bb14]

bb3
  0: _5 = move (_7.0: usize)
    SourceInfo(regex-syntax/src/error.rs:186:21-186:40)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:186:39-186:40)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(regex-syntax/src/error.rs:186:17-186:18)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/error.rs:187:13-187:39)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/error.rs:187:13-187:28)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/error.rs:187:25-187:28)
  6: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:187:13-187:25)
  7: _11 = &mut ((*_1).2: std::vec::Vec<std::vec::Vec<ast::Span>>)
    SourceInfo(regex-syntax/src/error.rs:187:13-187:25)
  8: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:187:26-187:27)
  9: _12 = _5
    SourceInfo(regex-syntax/src/error.rs:187:26-187:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:187:25-187:28)
      kind: _10 = <std::vec::Vec<std::vec::Vec<ast::Span>> as core::ops::IndexMut<usize>>::index_mut(move _11, move _12) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: _9 = &mut (*_10)
    SourceInfo(regex-syntax/src/error.rs:187:13-187:28)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:187:27-187:28)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:187:27-187:28)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/error.rs:187:34-187:38)
  4: _13 = _2
    SourceInfo(regex-syntax/src/error.rs:187:34-187:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:187:13-187:39)
      kind: _8 = std::vec::Vec::<ast::Span>::push(move _9, move _13) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:187:38-187:39)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:187:38-187:39)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:187:39-187:40)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:187:39-187:40)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:35)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:28)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:35)
  7: StorageLive(_17)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:28)
  8: StorageLive(_18)
    SourceInfo(regex-syntax/src/error.rs:188:25-188:28)
  9: StorageLive(_19)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:25)
  10: _19 = &mut ((*_1).2: std::vec::Vec<std::vec::Vec<ast::Span>>)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:25)
  11: StorageLive(_20)
    SourceInfo(regex-syntax/src/error.rs:188:26-188:27)
  12: _20 = _5
    SourceInfo(regex-syntax/src/error.rs:188:26-188:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:188:25-188:28)
      kind: _18 = <std::vec::Vec<std::vec::Vec<ast::Span>> as core::ops::IndexMut<usize>>::index_mut(move _19, move _20) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: _17 = &mut (*_18)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:188:13-188:35)
      kind: _16 = <std::vec::Vec<ast::Span> as core::ops::DerefMut>::deref_mut(move _17) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  0: _15 = &mut (*_16)
    SourceInfo(regex-syntax/src/error.rs:188:13-188:28)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/error.rs:188:27-188:28)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/error.rs:188:27-188:28)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/error.rs:188:27-188:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:188:13-188:35)
      kind: _14 = std::slice::<impl [ast::Span]>::sort(move _15) -> [return: bb8, unwind: bb14]
  }
  preds [bb6]
  succs [bb8, bb14]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/error.rs:188:34-188:35)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/error.rs:188:35-188:36)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/error.rs:188:35-188:36)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/error.rs:188:35-188:36)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/error.rs:185:31-189:10)
  5: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:189:9-189:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:185:9-192:10)
      kind: goto -> bb13
  }
  preds [bb7]
  succs [bb13]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:185:29-185:30)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/error.rs:190:13-190:39)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/error.rs:190:13-190:28)
  3: _22 = &mut ((*_1).3: std::vec::Vec<ast::Span>)
    SourceInfo(regex-syntax/src/error.rs:190:13-190:28)
  4: StorageLive(_23)
    SourceInfo(regex-syntax/src/error.rs:190:34-190:38)
  5: _23 = _2
    SourceInfo(regex-syntax/src/error.rs:190:34-190:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:190:13-190:39)
      kind: _21 = std::vec::Vec::<ast::Span>::push(move _22, move _23) -> [return: bb10, unwind: bb14]
  }
  preds [bb1]
  succs [bb10, bb14]

bb10
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/error.rs:190:38-190:39)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/error.rs:190:38-190:39)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/error.rs:190:39-190:40)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:35)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:28)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:35)
  6: StorageLive(_27)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:28)
  7: _27 = &mut ((*_1).3: std::vec::Vec<ast::Span>)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:191:13-191:35)
      kind: _26 = <std::vec::Vec<ast::Span> as core::ops::DerefMut>::deref_mut(move _27) -> [return: bb11, unwind: bb14]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: _25 = &mut (*_26)
    SourceInfo(regex-syntax/src/error.rs:191:13-191:28)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/error.rs:191:27-191:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:191:13-191:35)
      kind: _24 = std::slice::<impl [ast::Span]>::sort(move _25) -> [return: bb12, unwind: bb14]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/error.rs:191:34-191:35)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/error.rs:191:35-191:36)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/error.rs:191:35-191:36)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/error.rs:189:16-192:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:185:9-192:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:192:9-192:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:193:6-193:6)
      kind: return
  }
  preds [bb8, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:182:5-193:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb6, bb7, bb9, bb10, bb11]
  succs []

