bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:9-147:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:12-145:34)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:12-145:23)
  3: _5 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:12-145:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:145:12-145:34)
      kind: _4 = std::vec::Vec::<I>::is_empty(move _5) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:145:12-145:34)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:33-145:34)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:146:13-146:19)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:147:9-147:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:147:9-147:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb1]
  succs [bb42]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:145:33-145:34)
  1: _3 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:147:10-147:10)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:147:9-147:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:147:9-147:10)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:9-153:10)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:12-148:35)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:12-148:24)
  7: _9 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:12-148:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:148:12-148:35)
      kind: _8 = std::vec::Vec::<I>::is_empty(move _9) -> [return: bb4, unwind: bb43]
  }
  preds [bb1]
  succs [bb4, bb43]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:148:12-148:35)
      kind: switchInt(move _8) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:34-148:35)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:149:13-149:32)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:149:13-149:24)
  3: _12 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:149:13-149:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:149:13-149:32)
      kind: _11 = std::vec::Vec::<I>::clear(move _12) -> [return: bb6, unwind: bb43]
  }
  preds [bb4]
  succs [bb6, bb43]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:149:31-149:32)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:149:32-149:33)
  2: ((*_1).1: bool) = const true
    SourceInfo(regex-syntax/src/hir/interval.rs:151:13-151:31)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:152:13-152:19)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:153:9-153:10)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:153:9-153:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb5]
  succs [bb42]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:148:34-148:35)
  1: _7 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:153:10-153:10)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:153:9-153:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:153:9-153:10)
  4: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:159:13-159:22)
  5: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:159:25-159:36)
  6: _14 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:159:25-159:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:159:25-159:42)
      kind: _13 = std::vec::Vec::<I>::len(move _14) -> [return: bb8, unwind: bb43]
  }
  preds [bb4]
  succs [bb8, bb43]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:159:41-159:42)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-syntax/src/hir/interval.rs:159:13-159:22)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:161:13-161:20)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:161:26-161:35)
  4: _16 = _13
    SourceInfo(regex-syntax/src/hir/interval.rs:161:26-161:35)
  5: _15 = core::ops::Range::<usize> { start: const 0_usize, end: move _16 }
    SourceInfo(regex-syntax/src/hir/interval.rs:161:23-161:35)
  6: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:161:34-161:35)
  7: FakeRead(ForLet(None), _15)
    SourceInfo(regex-syntax/src/hir/interval.rs:161:13-161:20)
  8: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:13-162:20)
  9: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:26-162:44)
  10: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:26-162:38)
  11: _19 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:26-162:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:162:26-162:44)
      kind: _18 = std::vec::Vec::<I>::len(move _19) -> [return: bb9, unwind: bb43]
  }
  preds [bb7]
  succs [bb9, bb43]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:43-162:44)
  1: _17 = core::ops::Range::<usize> { start: const 0_usize, end: move _18 }
    SourceInfo(regex-syntax/src/hir/interval.rs:162:23-162:44)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:43-162:44)
  3: FakeRead(ForLet(None), _17)
    SourceInfo(regex-syntax/src/hir/interval.rs:162:13-162:20)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:13-163:18)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:21-163:31)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:21-163:24)
  7: _22 = &mut _15
    SourceInfo(regex-syntax/src/hir/interval.rs:163:21-163:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:163:21-163:31)
      kind: _21 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _22) -> [return: bb10, unwind: bb43]
  }
  preds [bb8]
  succs [bb10, bb43]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:30-163:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:163:21-163:40)
      kind: _20 = core::option::Option::<usize>::unwrap(move _21) -> [return: bb11, unwind: bb43]
  }
  preds [bb9]
  succs [bb11, bb43]

bb11
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:39-163:40)
  1: FakeRead(ForLet(None), _20)
    SourceInfo(regex-syntax/src/hir/interval.rs:163:13-163:18)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:13-164:18)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:21-164:31)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:21-164:24)
  5: _25 = &mut _17
    SourceInfo(regex-syntax/src/hir/interval.rs:164:21-164:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:164:21-164:31)
      kind: _24 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _25) -> [return: bb12, unwind: bb43]
  }
  preds [bb10]
  succs [bb12, bb43]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:30-164:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:164:21-164:40)
      kind: _23 = core::option::Option::<usize>::unwrap(move _24) -> [return: bb13, unwind: bb43]
  }
  preds [bb11]
  succs [bb13, bb43]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:39-164:40)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-syntax/src/hir/interval.rs:164:13-164:18)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:165:9-179:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:165:9-179:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:165:9-179:10)
      kind: falseUnwind -> [real: bb15, unwind: bb43]
  }
  preds [bb13, bb36]
  succs [bb15, bb43]

bb15
  0: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:13-168:14)
  1: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:73)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:45)
  3: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:42-166:45)
  4: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:42)
  5: _32 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:42)
  6: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:43-166:44)
  7: _33 = _20
    SourceInfo(regex-syntax/src/hir/interval.rs:166:43-166:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:42-166:45)
      kind: _31 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _32, move _33) -> [return: bb16, unwind: bb43]
  }
  preds [bb14]
  succs [bb16, bb43]

bb16
  0: _30 = &(*_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:45)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:44-166:45)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:44-166:45)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:56-166:72)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:56-166:72)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:69-166:72)
  6: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:57-166:69)
  7: _37 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:57-166:69)
  8: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:70-166:71)
  9: _38 = _23
    SourceInfo(regex-syntax/src/hir/interval.rs:166:70-166:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:69-166:72)
      kind: _36 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _37, move _38) -> [return: bb17, unwind: bb43]
  }
  preds [bb15]
  succs [bb17, bb43]

bb17
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:71-166:72)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:71-166:72)
  2: _35 = &(*_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:56-166:72)
  3: _34 = &(*_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:56-166:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:73)
      kind: _29 = <I as hir::interval::Interval>::intersect(move _30, move _34) -> [return: bb18, unwind: bb43]
  }
  preds [bb16]
  succs [bb18, bb43]

bb18
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:72-166:73)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:72-166:73)
  2: PlaceMention(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:73)
  3: _39 = discriminant(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:31-166:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:20-166:28)
      kind: switchInt(move _39) -> [1: bb19, otherwise: bb22]
  }
  preds [bb17]
  succs [bb19, bb22]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:20-166:28)
      kind: falseEdge -> [real: bb20, imaginary: bb22]
  }
  preds [bb18]
  succs [bb20, bb22]

bb20
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:25-166:27)
  1: _40 = ((_29 as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:166:25-166:27)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:17-167:37)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:17-167:28)
  4: _42 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:17-167:28)
  5: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:34-167:36)
  6: _43 = _40
    SourceInfo(regex-syntax/src/hir/interval.rs:167:34-167:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:167:17-167:37)
      kind: _41 = std::vec::Vec::<I>::push(move _42, move _43) -> [return: bb21, unwind: bb43]
  }
  preds [bb19]
  succs [bb21, bb43]

bb21
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:36-167:37)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:36-167:37)
  2: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:167:37-167:38)
  3: _28 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:166:74-168:14)
  4: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:13-168:14)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: _28 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:168:14-168:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:166:13-168:14)
      kind: goto -> bb23
  }
  preds [bb18, bb19]
  succs [bb23]

bb23
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:168:13-168:14)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:17-174:18)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:68)
  7: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:42)
  8: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:42)
  9: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:34)
  10: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:31-170:34)
  11: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:31)
  12: _52 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:31)
  13: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:32-170:33)
  14: _53 = _20
    SourceInfo(regex-syntax/src/hir/interval.rs:170:32-170:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:31-170:34)
      kind: _51 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _52, move _53) -> [return: bb24, unwind: bb43]
  }
  preds [bb21, bb22]
  succs [bb24, bb43]

bb24
  0: _50 = &(*_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:34)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:33-170:34)
  2: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:33-170:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:42)
      kind: _49 = <I as hir::interval::Interval>::upper(move _50) -> [return: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: _48 = &_49
    SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:42)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:41-170:42)
  2: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:68)
  3: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:68)
  4: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:60)
  5: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:57-170:60)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:57)
  7: _58 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:57)
  8: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:58-170:59)
  9: _59 = _23
    SourceInfo(regex-syntax/src/hir/interval.rs:170:58-170:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:57-170:60)
      kind: _57 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _58, move _59) -> [return: bb26, unwind: bb43]
  }
  preds [bb24]
  succs [bb26, bb43]

bb26
  0: _56 = &(*_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:60)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:59-170:60)
  2: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:59-170:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:68)
      kind: _55 = <I as hir::interval::Interval>::upper(move _56) -> [return: bb27, unwind: bb43]
  }
  preds [bb25]
  succs [bb27, bb43]

bb27
  0: _54 = &_55
    SourceInfo(regex-syntax/src/hir/interval.rs:170:45-170:68)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:68)
      kind: _47 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::lt(move _48, move _54) -> [return: bb28, unwind: bb43]
  }
  preds [bb26]
  succs [bb28, bb43]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:20-170:68)
      kind: switchInt(move _47) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  3: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  4: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  5: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  6: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:171:22-171:30)
  7: _60 = &mut _15
    SourceInfo(regex-syntax/src/hir/interval.rs:171:22-171:30)
  8: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:171:32-171:38)
  9: _61 = &mut _20
    SourceInfo(regex-syntax/src/hir/interval.rs:171:32-171:38)
  10: _46 = (move _60, move _61)
    SourceInfo(regex-syntax/src/hir/interval.rs:171:21-171:39)
  11: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:171:38-171:39)
  12: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:171:38-171:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:17-174:18)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb30
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  3: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  4: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  5: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:67-170:68)
  6: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:173:22-173:30)
  7: _62 = &mut _17
    SourceInfo(regex-syntax/src/hir/interval.rs:173:22-173:30)
  8: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:173:32-173:38)
  9: _63 = &mut _23
    SourceInfo(regex-syntax/src/hir/interval.rs:173:32-173:38)
  10: _46 = (move _62, move _63)
    SourceInfo(regex-syntax/src/hir/interval.rs:173:21-173:39)
  11: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:173:38-173:39)
  12: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:173:38-173:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:170:17-174:18)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb31
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:174:17-174:18)
  1: PlaceMention(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:170:17-174:18)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:169:18-169:20)
  3: _44 = move (_46.0: &mut core::ops::Range<usize>)
    SourceInfo(regex-syntax/src/hir/interval.rs:169:18-169:20)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:169:22-169:26)
  5: _45 = move (_46.1: &mut usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:169:22-169:26)
  6: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:174:18-174:19)
  7: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
  8: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:21)
  9: _65 = &mut (*_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
      kind: _64 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _65) -> [return: bb32, unwind: bb43]
  }
  preds [bb29, bb30]
  succs [bb32, bb43]

bb32
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:27-175:28)
  1: PlaceMention(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
  2: _66 = discriminant(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:175:13-175:28)
      kind: switchInt(move _66) -> [0: bb35, 1: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _64)
    SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:175:19-175:28)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:176:17-176:24)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: _26 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:177:25-177:30)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  3: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  4: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  5: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:9-180:39)
  6: StorageLive(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:9-180:20)
  7: _71 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:9-180:20)
  8: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:27-180:38)
  9: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:29-180:38)
  10: _73 = _13
    SourceInfo(regex-syntax/src/hir/interval.rs:180:29-180:38)
  11: _72 = core::ops::RangeTo::<usize> { end: move _73 }
    SourceInfo(regex-syntax/src/hir/interval.rs:180:27-180:38)
  12: StorageDead(_73)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:37-180:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:180:9-180:39)
      kind: _70 = std::vec::Vec::<I>::drain::<core::ops::RangeTo<usize>>(move _71, move _72) -> [return: bb37, unwind: bb43]
  }
  preds [bb32, bb34]
  succs [bb37, bb43]

bb36
  0: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:176:22-176:23)
  1: _67 = ((_64 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:176:22-176:23)
  2: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:176:36-176:37)
  3: _68 = _67
    SourceInfo(regex-syntax/src/hir/interval.rs:176:36-176:37)
  4: (*_45) = move _68
    SourceInfo(regex-syntax/src/hir/interval.rs:176:28-176:37)
  5: _27 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:176:28-176:37)
  6: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:176:36-176:37)
  7: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:176:36-176:37)
  8: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  9: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  10: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:179:9-179:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:165:9-179:10)
      kind: goto -> bb14
  }
  preds [bb34]
  succs [bb14]

bb37
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:38-180:39)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:38-180:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:180:39-180:40)
      kind: drop(_70) -> [return: bb38, unwind: bb43]
  }
  preds [bb35]
  succs [bb38, bb43]

bb38
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:180:39-180:40)
  1: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:50)
  2: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:34)
  3: _75 = ((*_1).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:34)
      kind: switchInt(move _75) -> [0: bb40, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40]

bb39
  0: _74 = ((*_2).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:38-181:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:50)
      kind: goto -> bb41
  }
  preds [bb38]
  succs [bb41]

bb40
  0: _74 = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:181:23-181:50)
      kind: goto -> bb41
  }
  preds [bb38]
  succs [bb41]

bb41
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:49-181:50)
  1: ((*_1).1: bool) = move _74
    SourceInfo(regex-syntax/src/hir/interval.rs:181:9-181:50)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:181:49-181:50)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:144:57-182:6)
  4: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:182:5-182:6)
  5: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:182:5-182:6)
  6: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:182:5-182:6)
  7: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:182:5-182:6)
  8: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:182:5-182:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:182:6-182:6)
      kind: goto -> bb42
  }
  preds [bb39, bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:182:6-182:6)
      kind: return
  }
  preds [bb2, bb6, bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:144:5-182:6)
      kind: resume
  }
  preds [bb0, bb3, bb5, bb7, bb8, bb9, bb10, bb11, bb12, bb14, bb15, bb16, bb17, bb20, bb23, bb24, bb25, bb26, bb27, bb31, bb35, bb37]
  succs []

