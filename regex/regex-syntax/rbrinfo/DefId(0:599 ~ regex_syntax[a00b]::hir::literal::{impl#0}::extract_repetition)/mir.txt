bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:13-449:23)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:26-449:30)
  2: _4 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:26-449:30)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:39-449:47)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:39-449:47)
  5: _6 = &((*_2).3: std::boxed::Box<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:39-449:47)
  6: _5 = &(*(*_6))
    SourceInfo(regex-syntax/src/hir/literal.rs:449:39-449:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:449:26-449:48)
      kind: _3 = hir::literal::Extractor::extract(move _4, move _5) -> [return: bb1, unwind: bb107]
  }
  preds []
  succs [bb1, bb107]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:47-449:48)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:47-449:48)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:13-449:23)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:449:48-449:49)
  4: PlaceMention((*_2))
    SourceInfo(regex-syntax/src/hir/literal.rs:450:15-450:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:450:9-450:19)
      kind: switchInt(((*_2).0: u32)) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _10 = discriminant(((*_2).1: core::option::Option<u32>))
    SourceInfo(regex-syntax/src/hir/literal.rs:450:15-450:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:450:9-450:19)
      kind: switchInt(move _10) -> [1: bb5, otherwise: bb4]
  }
  preds [bb1, bb3]
  succs [bb4, bb5]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:451:13-451:56)
      kind: falseEdge -> [real: bb6, imaginary: bb2]
  }
  preds [bb1]
  succs [bb2, bb6]

bb4
  0: StorageLive(_86)
    SourceInfo(regex-syntax/src/hir/literal.rs:480:31-480:34)
  1: _86 = ((*_2).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:480:31-480:34)
  2: StorageLive(_87)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:17-481:33)
  3: StorageLive(_88)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:25-481:32)
  4: StorageLive(_89)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:25-481:28)
  5: _89 = _86
    SourceInfo(regex-syntax/src/hir/literal.rs:481:25-481:28)
  6: _88 = Gt(move _89, const 0_u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:25-481:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:481:25-481:32)
      kind: switchInt(move _88) -> [0: bb61, otherwise: bb60]
  }
  preds [bb2, bb5, bb23, bb23]
  succs [bb60, bb61]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:464:13-464:56)
      kind: falseEdge -> [real: bb21, imaginary: bb4]
  }
  preds [bb2]
  succs [bb4, bb21]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:451:39-451:42)
  1: _11 = ((*_2).1: core::option::Option<u32>)
    SourceInfo(regex-syntax/src/hir/literal.rs:451:39-451:42)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:451:44-451:50)
  3: _12 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/hir/literal.rs:451:44-451:50)
  4: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:17-457:18)
  5: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:20-455:34)
  6: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:20-455:23)
  7: _15 = &_11
    SourceInfo(regex-syntax/src/hir/literal.rs:455:20-455:23)
  8: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:27-455:34)
  9: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:27-455:34)
  10: _17 = core::option::Option::<u32>::Some(const 1_u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:27-455:34)
  11: _16 = &_17
    SourceInfo(regex-syntax/src/hir/literal.rs:455:27-455:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:455:20-455:34)
      kind: _14 = <core::option::Option<u32> as core::cmp::PartialEq>::ne(move _15, move _16) -> [return: bb7, unwind: bb106]
  }
  preds [bb3]
  succs [bb7, bb106]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:455:20-455:34)
      kind: switchInt(move _14) -> [0: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:456:21-456:42)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:456:21-456:27)
  5: _19 = &mut _3
    SourceInfo(regex-syntax/src/hir/literal.rs:456:21-456:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:456:21-456:42)
      kind: _18 = hir::literal::Seq::make_inexact(move _19) -> [return: bb9, unwind: bb106]
  }
  preds [bb7]
  succs [bb9, bb106]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:456:41-456:42)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:456:42-456:43)
  2: _13 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:455:35-457:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:455:17-457:18)
      kind: goto -> bb11
  }
  preds [bb8]
  succs [bb11]

bb10
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:455:33-455:34)
  3: _13 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:457:18-457:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:455:17-457:18)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb11
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:457:17-457:18)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:457:17-457:18)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:458:21-458:30)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:458:48-458:70)
  4: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _22 = std::vec::Vec::<u8>::new() -> [return: bb12, unwind: bb106]
  }
  preds [bb9, bb10]
  succs [bb12, bb106]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:458:48-458:70)
      kind: _21 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _22) -> [return: bb13, unwind: bb105]
  }
  preds [bb11]
  succs [bb13, bb105]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:458:69-458:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:458:33-458:71)
      kind: _20 = hir::literal::Seq::singleton(move _21) -> [return: bb14, unwind: bb104]
  }
  preds [bb12]
  succs [bb14, bb104]

bb14
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:458:70-458:71)
  1: FakeRead(ForLet(None), _20)
    SourceInfo(regex-syntax/src/hir/literal.rs:458:21-458:30)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:459:17-461:18)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:459:21-459:27)
  4: _24 = _12
    SourceInfo(regex-syntax/src/hir/literal.rs:459:21-459:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:459:21-459:27)
      kind: switchInt(move _24) -> [0: bb15, otherwise: bb17]
  }
  preds [bb13]
  succs [bb15, bb17]

bb15
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:21-460:55)
  1: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:31-460:42)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:31-460:42)
  3: _27 = &mut _3
    SourceInfo(regex-syntax/src/hir/literal.rs:460:31-460:42)
  4: _26 = &mut (*_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:31-460:42)
  5: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:44-460:54)
  6: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:44-460:54)
  7: _29 = &mut _20
    SourceInfo(regex-syntax/src/hir/literal.rs:460:44-460:54)
  8: _28 = &mut (*_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:44-460:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:460:21-460:55)
      kind: _25 = core::mem::swap::<hir::literal::Seq>(move _26, move _28) -> [return: bb16, unwind: bb103]
  }
  preds [bb14]
  succs [bb16, bb103]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:54-460:55)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:54-460:55)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:55-460:56)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:55-460:56)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:460:55-460:56)
  5: _23 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:459:28-461:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:459:17-461:18)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb17
  0: _23 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:461:18-461:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:459:17-461:18)
      kind: goto -> bb18
  }
  preds [bb14]
  succs [bb18]

bb18
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:461:17-461:18)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:461:17-461:18)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:17-462:21)
  3: _30 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:17-462:21)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:28-462:34)
  5: _31 = move _3
    SourceInfo(regex-syntax/src/hir/literal.rs:462:28-462:34)
  6: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:36-462:46)
  7: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:36-462:46)
  8: _33 = &mut _20
    SourceInfo(regex-syntax/src/hir/literal.rs:462:36-462:46)
  9: _32 = &mut (*_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:36-462:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:462:17-462:47)
      kind: _0 = hir::literal::Extractor::union(move _30, move _31, move _32) -> [return: bb19, unwind: bb102]
  }
  preds [bb16, bb17]
  succs [bb19, bb102]

bb19
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:46-462:47)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:46-462:47)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:462:46-462:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
      kind: drop(_20) -> [return: bb20, unwind: bb106]
  }
  preds [bb18]
  succs [bb20, bb106]

bb20
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
      kind: goto -> bb88
  }
  preds [bb19]
  succs [bb88]

bb21
  0: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:31-464:34)
  1: _35 = &((*_2).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:31-464:34)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:46-464:49)
  3: _37 = &((((*_2).1: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:46-464:49)
  4: _7 = &fake shallow _2
    SourceInfo(regex-syntax/src/hir/literal.rs:450:15-450:19)
  5: _8 = &fake shallow ((*_2).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:450:15-450:19)
  6: _9 = &fake shallow ((*_2).1: core::option::Option<u32>)
    SourceInfo(regex-syntax/src/hir/literal.rs:450:15-450:19)
  7: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:70)
  8: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:63)
  9: _39 = (*_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:63)
  10: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:67-464:70)
  11: _40 = (*_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:67-464:70)
  12: _38 = Eq(move _39, move _40)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:70)
      kind: switchInt(move _38) -> [0: bb23, otherwise: bb22]
  }
  preds [bb5]
  succs [bb22, bb23]

bb22
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  3: FakeRead(ForMatchGuard, _7)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  4: FakeRead(ForMatchGuard, _8)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  5: FakeRead(ForMatchGuard, _9)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  6: FakeRead(ForGuardBinding, _35)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  7: FakeRead(ForGuardBinding, _37)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  8: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:31-464:34)
  9: _34 = ((*_2).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:31-464:34)
  10: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:46-464:49)
  11: _36 = ((((*_2).1: core::option::Option<u32>) as Some).0: u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:46-464:49)
  12: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:17-465:33)
  13: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:25-465:32)
  14: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:25-465:28)
  15: _43 = _34
    SourceInfo(regex-syntax/src/hir/literal.rs:465:25-465:28)
  16: _42 = Gt(move _43, const 0_u32)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:25-465:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:465:25-465:32)
      kind: switchInt(move _42) -> [0: bb25, otherwise: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb23
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:464:69-464:70)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  4: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:464:60-464:70)
      kind: falseEdge -> [real: bb4, imaginary: bb4]
  }
  preds [bb21]
  succs [bb4, bb4]

bb24
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:31-465:32)
  1: _41 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:465:33-465:33)
  2: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:32-465:33)
  3: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:32-465:33)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:466:21-466:26)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:467:21-467:53)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:467:35-467:52)
  7: _47 = ((*_1).2: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:467:35-467:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:467:21-467:53)
      kind: _46 = <u32 as core::convert::TryFrom<usize>>::try_from(move _47) -> [return: bb26, unwind: bb106]
  }
  preds [bb22]
  succs [bb26, bb106]

bb25
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:31-465:32)
  1: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:465:17-465:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:465:17-465:33)
      kind: _44 = core::panicking::panic(const "assertion failed: min > 0") -> bb106
  }
  preds [bb22]
  succs [bb106]

bb26
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:467:52-467:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:467:21-467:73)
      kind: _45 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap_or(move _46, const core::num::<impl u32>::MAX) -> [return: bb27, unwind: bb106]
  }
  preds [bb24]
  succs [bb27, bb106]

bb27
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:467:72-467:73)
  1: FakeRead(ForLet(None), _45)
    SourceInfo(regex-syntax/src/hir/literal.rs:466:21-466:26)
  2: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:468:21-468:28)
  3: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:468:46-468:68)
  4: StorageLive(_50)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _50 = std::vec::Vec::<u8>::new() -> [return: bb28, unwind: bb106]
  }
  preds [bb26]
  succs [bb28, bb106]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:468:46-468:68)
      kind: _49 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _50) -> [return: bb29, unwind: bb101]
  }
  preds [bb27]
  succs [bb29, bb101]

bb29
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/literal.rs:468:67-468:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:468:31-468:69)
      kind: _48 = hir::literal::Seq::singleton(move _49) -> [return: bb30, unwind: bb100]
  }
  preds [bb28]
  succs [bb30, bb100]

bb30
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:468:68-468:69)
  1: FakeRead(ForLet(None), _48)
    SourceInfo(regex-syntax/src/hir/literal.rs:468:21-468:28)
  2: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
  3: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  4: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  5: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:29-469:49)
  6: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:38-469:41)
  7: _55 = _34
    SourceInfo(regex-syntax/src/hir/literal.rs:469:38-469:41)
  8: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:43-469:48)
  9: _56 = _45
    SourceInfo(regex-syntax/src/hir/literal.rs:469:43-469:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:29-469:49)
      kind: _54 = core::cmp::min::<u32>(move _55, move _56) -> [return: bb31, unwind: bb99]
  }
  preds [bb29]
  succs [bb31, bb99]

bb31
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:48-469:49)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:48-469:49)
  2: _53 = core::ops::Range::<u32> { start: const 0_u32, end: move _54 }
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  3: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:48-469:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
      kind: _52 = <core::ops::Range<u32> as core::iter::IntoIterator>::into_iter(move _53) -> [return: bb32, unwind: bb99]
  }
  preds [bb30]
  succs [bb32, bb99]

bb32
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:48-469:49)
  1: PlaceMention(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  3: _57 = move _52
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
      kind: goto -> bb33
  }
  preds [bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
      kind: falseUnwind -> [real: bb34, unwind: bb99]
  }
  preds [bb32, bb48]
  succs [bb34, bb99]

bb34
  0: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  1: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  4: _62 = &mut _57
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  5: _61 = &mut (*_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
      kind: _60 = <core::ops::Range<u32> as core::iter::Iterator>::next(move _61) -> [return: bb35, unwind: bb99]
  }
  preds [bb33]
  succs [bb35, bb99]

bb35
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:48-469:49)
  1: PlaceMention(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  2: _63 = discriminant(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
      kind: switchInt(move _63) -> [0: bb37, 1: bb38, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38]

bb36
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:26-469:49)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
      kind: falseEdge -> [real: bb39, imaginary: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:470:21-472:22)
  1: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:470:24-470:40)
  2: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:470:24-470:27)
  3: _67 = &_48
    SourceInfo(regex-syntax/src/hir/literal.rs:470:24-470:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:470:24-470:40)
      kind: _66 = hir::literal::Seq::is_inexact(move _67) -> [return: bb40, unwind: bb99]
  }
  preds [bb35, bb37]
  succs [bb40, bb99]

bb39
  0: _51 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
      kind: goto -> bb49
  }
  preds [bb37]
  succs [bb49]

bb40
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:470:24-470:40)
      kind: switchInt(move _66) -> [0: bb42, otherwise: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:470:39-470:40)
  1: _51 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:471:25-471:30)
  2: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:472:21-472:22)
  3: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:472:21-472:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb40]
  succs [bb49]

bb42
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:470:39-470:40)
  1: _65 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:472:22-472:22)
  2: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:472:21-472:22)
  3: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:472:21-472:22)
  4: StorageLive(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:27-473:63)
  5: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:27-473:31)
  6: _70 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:27-473:31)
  7: StorageLive(_71)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:38-473:41)
  8: _71 = move _48
    SourceInfo(regex-syntax/src/hir/literal.rs:473:38-473:41)
  9: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:43-473:62)
  10: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:43-473:62)
  11: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:48-473:62)
  12: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:48-473:54)
  13: _75 = &_3
    SourceInfo(regex-syntax/src/hir/literal.rs:473:48-473:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:48-473:62)
      kind: _74 = <hir::literal::Seq as core::clone::Clone>::clone(move _75) -> [return: bb43, unwind: bb98]
  }
  preds [bb40]
  succs [bb43, bb98]

bb43
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:61-473:62)
  1: _73 = &mut _74
    SourceInfo(regex-syntax/src/hir/literal.rs:473:43-473:62)
  2: _72 = &mut (*_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:43-473:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:27-473:63)
      kind: _69 = hir::literal::Extractor::cross(move _70, move _71, move _72) -> [return: bb44, unwind: bb96]
  }
  preds [bb42]
  succs [bb44, bb96]

bb44
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
  2: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:21-473:24)
      kind: drop(_48) -> [return: bb45, unwind: bb46]
  }
  preds [bb43]
  succs [bb45, bb46]

bb45
  0: _48 = move _69
    SourceInfo(regex-syntax/src/hir/literal.rs:473:21-473:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
      kind: drop(_69) -> [return: bb47, unwind: bb97]
  }
  preds [bb44]
  succs [bb47, bb97]

bb46
  0: _48 = move _69
    SourceInfo(regex-syntax/src/hir/literal.rs:473:21-473:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
      kind: drop(_69) -> [return: bb97, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb97]

bb47
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:63-473:64)
      kind: drop(_74) -> [return: bb48, unwind: bb99]
  }
  preds [bb45]
  succs [bb48, bb99]

bb48
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:63-473:64)
  1: StorageDead(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:473:63-473:64)
  2: _59 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:469:50-474:18)
  3: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  4: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  5: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  6: _58 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:469:17-474:18)
      kind: goto -> bb33
  }
  preds [bb47]
  succs [bb33]

bb49
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  1: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  2: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  3: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  4: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  5: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/literal.rs:474:17-474:18)
  6: StorageLive(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:17-477:18)
  7: StorageLive(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:49)
  8: StorageLive(_78)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:40)
  9: StorageLive(_79)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:40)
  10: StorageLive(_80)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:36-475:39)
  11: _80 = _34
    SourceInfo(regex-syntax/src/hir/literal.rs:475:36-475:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:40)
      kind: _79 = <usize as core::convert::TryFrom<u32>>::try_from(move _80) -> [return: bb50, unwind: bb99]
  }
  preds [bb39, bb41]
  succs [bb50, bb99]

bb50
  0: _78 = &_79
    SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:40)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:39-475:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:49)
      kind: _77 = core::result::Result::<usize, core::num::TryFromIntError>::is_err(move _78) -> [return: bb51, unwind: bb99]
  }
  preds [bb49]
  succs [bb51, bb99]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:20-475:49)
      kind: switchInt(move _77) -> [0: bb53, otherwise: bb52]
  }
  preds [bb50]
  succs [bb52, bb53]

bb52
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:48-475:49)
  1: StorageDead(_78)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:48-475:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:65-477:18)
      kind: goto -> bb55
  }
  preds [bb51]
  succs [bb55]

bb53
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:48-475:49)
  1: StorageDead(_78)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:48-475:49)
  2: StorageLive(_81)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:53-475:64)
  3: StorageLive(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:53-475:56)
  4: _82 = _34
    SourceInfo(regex-syntax/src/hir/literal.rs:475:53-475:56)
  5: StorageLive(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:59-475:64)
  6: _83 = _45
    SourceInfo(regex-syntax/src/hir/literal.rs:475:59-475:64)
  7: _81 = Gt(move _82, move _83)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:53-475:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:53-475:64)
      kind: switchInt(move _81) -> [0: bb57, otherwise: bb54]
  }
  preds [bb51]
  succs [bb54, bb57]

bb54
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:63-475:64)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:63-475:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:65-477:18)
      kind: goto -> bb55
  }
  preds [bb53]
  succs [bb55]

bb55
  0: StorageLive(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:476:21-476:39)
  1: StorageLive(_85)
    SourceInfo(regex-syntax/src/hir/literal.rs:476:21-476:24)
  2: _85 = &mut _48
    SourceInfo(regex-syntax/src/hir/literal.rs:476:21-476:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:476:21-476:39)
      kind: _84 = hir::literal::Seq::make_inexact(move _85) -> [return: bb56, unwind: bb99]
  }
  preds [bb52, bb54]
  succs [bb56, bb99]

bb56
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/hir/literal.rs:476:38-476:39)
  1: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:476:39-476:40)
  2: _76 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:475:65-477:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:17-477:18)
      kind: goto -> bb58
  }
  preds [bb55]
  succs [bb58]

bb57
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:63-475:64)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:475:63-475:64)
  2: _76 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:477:18-477:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:475:17-477:18)
      kind: goto -> bb58
  }
  preds [bb53]
  succs [bb58]

bb58
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/hir/literal.rs:477:17-477:18)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:477:17-477:18)
  2: StorageDead(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:477:17-477:18)
  3: _0 = move _48
    SourceInfo(regex-syntax/src/hir/literal.rs:478:17-478:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
      kind: drop(_48) -> [return: bb59, unwind: bb106]
  }
  preds [bb56, bb57]
  succs [bb59, bb106]

bb59
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  2: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  3: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  4: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  5: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
      kind: goto -> bb88
  }
  preds [bb58]
  succs [bb88]

bb60
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:31-481:32)
  1: _87 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:481:33-481:33)
  2: StorageDead(_88)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:32-481:33)
  3: StorageDead(_87)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:32-481:33)
  4: StorageLive(_91)
    SourceInfo(regex-syntax/src/hir/literal.rs:482:21-482:26)
  5: StorageLive(_92)
    SourceInfo(regex-syntax/src/hir/literal.rs:483:21-483:53)
  6: StorageLive(_93)
    SourceInfo(regex-syntax/src/hir/literal.rs:483:35-483:52)
  7: _93 = ((*_1).2: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:483:35-483:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:483:21-483:53)
      kind: _92 = <u32 as core::convert::TryFrom<usize>>::try_from(move _93) -> [return: bb62, unwind: bb106]
  }
  preds [bb4]
  succs [bb62, bb106]

bb61
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:31-481:32)
  1: StorageLive(_90)
    SourceInfo(regex-syntax/src/hir/literal.rs:481:17-481:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:481:17-481:33)
      kind: _90 = core::panicking::panic(const "assertion failed: min > 0") -> bb106
  }
  preds [bb4]
  succs [bb106]

bb62
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/hir/literal.rs:483:52-483:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:483:21-483:73)
      kind: _91 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap_or(move _92, const core::num::<impl u32>::MAX) -> [return: bb63, unwind: bb106]
  }
  preds [bb60]
  succs [bb63, bb106]

bb63
  0: StorageDead(_92)
    SourceInfo(regex-syntax/src/hir/literal.rs:483:72-483:73)
  1: FakeRead(ForLet(None), _91)
    SourceInfo(regex-syntax/src/hir/literal.rs:482:21-482:26)
  2: StorageLive(_94)
    SourceInfo(regex-syntax/src/hir/literal.rs:484:21-484:28)
  3: StorageLive(_95)
    SourceInfo(regex-syntax/src/hir/literal.rs:484:46-484:68)
  4: StorageLive(_96)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _96 = std::vec::Vec::<u8>::new() -> [return: bb64, unwind: bb106]
  }
  preds [bb62]
  succs [bb64, bb106]

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:484:46-484:68)
      kind: _95 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _96) -> [return: bb65, unwind: bb95]
  }
  preds [bb63]
  succs [bb65, bb95]

bb65
  0: StorageDead(_96)
    SourceInfo(regex-syntax/src/hir/literal.rs:484:67-484:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:484:31-484:69)
      kind: _94 = hir::literal::Seq::singleton(move _95) -> [return: bb66, unwind: bb94]
  }
  preds [bb64]
  succs [bb66, bb94]

bb66
  0: StorageDead(_95)
    SourceInfo(regex-syntax/src/hir/literal.rs:484:68-484:69)
  1: FakeRead(ForLet(None), _94)
    SourceInfo(regex-syntax/src/hir/literal.rs:484:21-484:28)
  2: StorageLive(_97)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
  3: StorageLive(_98)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  4: StorageLive(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  5: StorageLive(_100)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:29-485:49)
  6: StorageLive(_101)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:38-485:41)
  7: _101 = _86
    SourceInfo(regex-syntax/src/hir/literal.rs:485:38-485:41)
  8: StorageLive(_102)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:43-485:48)
  9: _102 = _91
    SourceInfo(regex-syntax/src/hir/literal.rs:485:43-485:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:29-485:49)
      kind: _100 = core::cmp::min::<u32>(move _101, move _102) -> [return: bb67, unwind: bb93]
  }
  preds [bb65]
  succs [bb67, bb93]

bb67
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:48-485:49)
  1: StorageDead(_101)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:48-485:49)
  2: _99 = core::ops::Range::<u32> { start: const 0_u32, end: move _100 }
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  3: StorageDead(_100)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:48-485:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
      kind: _98 = <core::ops::Range<u32> as core::iter::IntoIterator>::into_iter(move _99) -> [return: bb68, unwind: bb93]
  }
  preds [bb66]
  succs [bb68, bb93]

bb68
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:48-485:49)
  1: PlaceMention(_98)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  2: StorageLive(_103)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  3: _103 = move _98
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
      kind: goto -> bb69
  }
  preds [bb67]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
      kind: falseUnwind -> [real: bb70, unwind: bb93]
  }
  preds [bb68, bb84]
  succs [bb70, bb93]

bb70
  0: StorageLive(_104)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  1: StorageLive(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  2: StorageLive(_106)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  3: StorageLive(_107)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  4: _107 = &mut _103
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  5: _106 = &mut (*_107)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
      kind: _105 = <core::ops::Range<u32> as core::iter::Iterator>::next(move _106) -> [return: bb71, unwind: bb93]
  }
  preds [bb69]
  succs [bb71, bb93]

bb71
  0: StorageDead(_106)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:48-485:49)
  1: PlaceMention(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  2: _108 = discriminant(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
      kind: switchInt(move _108) -> [0: bb73, 1: bb74, otherwise: bb72]
  }
  preds [bb70]
  succs [bb72, bb73, bb74]

bb72
  0: FakeRead(ForMatchedPlace(None), _105)
    SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:26-485:49)
      kind: unreachable
  }
  preds [bb71]
  succs []

bb73
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
      kind: falseEdge -> [real: bb75, imaginary: bb74]
  }
  preds [bb71]
  succs [bb74, bb75]

bb74
  0: StorageLive(_110)
    SourceInfo(regex-syntax/src/hir/literal.rs:486:21-488:22)
  1: StorageLive(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:486:24-486:40)
  2: StorageLive(_112)
    SourceInfo(regex-syntax/src/hir/literal.rs:486:24-486:27)
  3: _112 = &_94
    SourceInfo(regex-syntax/src/hir/literal.rs:486:24-486:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:486:24-486:40)
      kind: _111 = hir::literal::Seq::is_inexact(move _112) -> [return: bb76, unwind: bb93]
  }
  preds [bb71, bb73]
  succs [bb76, bb93]

bb75
  0: _97 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
      kind: goto -> bb85
  }
  preds [bb73]
  succs [bb85]

bb76
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:486:24-486:40)
      kind: switchInt(move _111) -> [0: bb78, otherwise: bb77]
  }
  preds [bb74]
  succs [bb77, bb78]

bb77
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/hir/literal.rs:486:39-486:40)
  1: _97 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:487:25-487:30)
  2: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:488:21-488:22)
  3: StorageDead(_110)
    SourceInfo(regex-syntax/src/hir/literal.rs:488:21-488:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb76]
  succs [bb85]

bb78
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/hir/literal.rs:486:39-486:40)
  1: _110 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:488:22-488:22)
  2: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/literal.rs:488:21-488:22)
  3: StorageDead(_110)
    SourceInfo(regex-syntax/src/hir/literal.rs:488:21-488:22)
  4: StorageLive(_114)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:27-489:63)
  5: StorageLive(_115)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:27-489:31)
  6: _115 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:27-489:31)
  7: StorageLive(_116)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:38-489:41)
  8: _116 = move _94
    SourceInfo(regex-syntax/src/hir/literal.rs:489:38-489:41)
  9: StorageLive(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:43-489:62)
  10: StorageLive(_118)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:43-489:62)
  11: StorageLive(_119)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:48-489:62)
  12: StorageLive(_120)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:48-489:54)
  13: _120 = &_3
    SourceInfo(regex-syntax/src/hir/literal.rs:489:48-489:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:48-489:62)
      kind: _119 = <hir::literal::Seq as core::clone::Clone>::clone(move _120) -> [return: bb79, unwind: bb92]
  }
  preds [bb76]
  succs [bb79, bb92]

bb79
  0: StorageDead(_120)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:61-489:62)
  1: _118 = &mut _119
    SourceInfo(regex-syntax/src/hir/literal.rs:489:43-489:62)
  2: _117 = &mut (*_118)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:43-489:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:27-489:63)
      kind: _114 = hir::literal::Extractor::cross(move _115, move _116, move _117) -> [return: bb80, unwind: bb90]
  }
  preds [bb78]
  succs [bb80, bb90]

bb80
  0: StorageDead(_117)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
  1: StorageDead(_116)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
  2: StorageDead(_115)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:21-489:24)
      kind: drop(_94) -> [return: bb81, unwind: bb82]
  }
  preds [bb79]
  succs [bb81, bb82]

bb81
  0: _94 = move _114
    SourceInfo(regex-syntax/src/hir/literal.rs:489:21-489:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
      kind: drop(_114) -> [return: bb83, unwind: bb91]
  }
  preds [bb80]
  succs [bb83, bb91]

bb82
  0: _94 = move _114
    SourceInfo(regex-syntax/src/hir/literal.rs:489:21-489:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
      kind: drop(_114) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb80]
  succs [bb91]

bb83
  0: StorageDead(_114)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:63-489:64)
      kind: drop(_119) -> [return: bb84, unwind: bb93]
  }
  preds [bb81]
  succs [bb84, bb93]

bb84
  0: StorageDead(_119)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:63-489:64)
  1: StorageDead(_118)
    SourceInfo(regex-syntax/src/hir/literal.rs:489:63-489:64)
  2: _104 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:485:50-490:18)
  3: StorageDead(_107)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  4: StorageDead(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  5: StorageDead(_104)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  6: _58 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:485:17-490:18)
      kind: goto -> bb69
  }
  preds [bb83]
  succs [bb69]

bb85
  0: StorageDead(_107)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  1: StorageDead(_105)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  2: StorageDead(_104)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  3: StorageDead(_103)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  4: StorageDead(_98)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  5: StorageDead(_97)
    SourceInfo(regex-syntax/src/hir/literal.rs:490:17-490:18)
  6: StorageLive(_121)
    SourceInfo(regex-syntax/src/hir/literal.rs:491:17-491:35)
  7: StorageLive(_122)
    SourceInfo(regex-syntax/src/hir/literal.rs:491:17-491:20)
  8: _122 = &mut _94
    SourceInfo(regex-syntax/src/hir/literal.rs:491:17-491:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:491:17-491:35)
      kind: _121 = hir::literal::Seq::make_inexact(move _122) -> [return: bb86, unwind: bb93]
  }
  preds [bb75, bb77]
  succs [bb86, bb93]

bb86
  0: StorageDead(_122)
    SourceInfo(regex-syntax/src/hir/literal.rs:491:34-491:35)
  1: StorageDead(_121)
    SourceInfo(regex-syntax/src/hir/literal.rs:491:35-491:36)
  2: _0 = move _94
    SourceInfo(regex-syntax/src/hir/literal.rs:492:17-492:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
      kind: drop(_94) -> [return: bb87, unwind: bb106]
  }
  preds [bb85]
  succs [bb87, bb106]

bb87
  0: StorageDead(_94)
    SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
  1: StorageDead(_91)
    SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
      kind: goto -> bb88
  }
  preds [bb86]
  succs [bb88]

bb88
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:495:5-495:6)
      kind: drop(_3) -> [return: bb89, unwind: bb107]
  }
  preds [bb20, bb59, bb87]
  succs [bb89, bb107]

bb89
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:495:5-495:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:495:6-495:6)
      kind: return
  }
  preds [bb88]
  succs []

bb90
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
      kind: drop(_116) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb79]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:63-489:64)
      kind: drop(_119) -> [return: bb93, unwind terminate(cleanup)]
  }
  preds [bb81, bb82, bb90]
  succs [bb93]

bb92
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:489:62-489:63)
      kind: drop(_116) -> [return: bb93, unwind terminate(cleanup)]
  }
  preds [bb78]
  succs [bb93]

bb93
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:493:13-493:14)
      kind: drop(_94) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb66, bb67, bb69, bb70, bb74, bb83, bb85, bb91, bb92]
  succs [bb106]

bb94
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:484:68-484:69)
      kind: drop(_95) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb65]
  succs [bb106]

bb95
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:484:67-484:68)
      kind: drop(_96) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb64]
  succs [bb106]

bb96
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
      kind: drop(_71) -> [return: bb97, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb97]

bb97
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:63-473:64)
      kind: drop(_74) -> [return: bb99, unwind terminate(cleanup)]
  }
  preds [bb45, bb46, bb96]
  succs [bb99]

bb98
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:473:62-473:63)
      kind: drop(_71) -> [return: bb99, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb99]

bb99
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:479:13-479:14)
      kind: drop(_48) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb30, bb31, bb33, bb34, bb38, bb47, bb49, bb50, bb55, bb97, bb98]
  succs [bb106]

bb100
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:468:68-468:69)
      kind: drop(_49) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb106]

bb101
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:468:67-468:68)
      kind: drop(_50) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb106]

bb102
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:462:46-462:47)
      kind: drop(_31) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb103]

bb103
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:463:13-463:14)
      kind: drop(_20) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb15, bb102]
  succs [bb106]

bb104
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:458:70-458:71)
      kind: drop(_21) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb106]

bb105
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:458:69-458:70)
      kind: drop(_22) -> [return: bb106, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb106]

bb106
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:495:5-495:6)
      kind: drop(_3) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb6, bb8, bb11, bb19, bb24, bb25, bb26, bb27, bb58, bb60, bb61, bb62, bb63, bb86, bb93, bb94, bb95, bb99, bb100, bb101, bb103, bb104, bb105]
  succs [bb107]

bb107
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:448:5-495:6)
      kind: resume
  }
  preds [bb0, bb88, bb106]
  succs []

