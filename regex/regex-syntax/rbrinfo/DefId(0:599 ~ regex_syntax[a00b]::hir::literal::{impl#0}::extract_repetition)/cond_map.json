{
  "regex-syntax/src/hir/literal.rs:459:21:459:27": [
    {
      "Bool": {
        "Other": "greedy"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:464:60:464:70": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "min == max",
          "lhs": "min",
          "rhs": "max",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:470:24:470:40": [
    {
      "Bool": {
        "Other": "seq.is_inexact()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:455:20:455:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "max != Some(1)",
          "lhs": "max",
          "rhs": "Some(1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:469:26:469:49": [
    {
      "For": {
        "iter_var": "_",
        "iter_range": "0..cmp::min(min, limit)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:465:25:465:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "min > 0",
          "lhs": "min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:475:20:475:49": [
    {
      "Bool": {
        "Other": "usize::try_from(min).is_err()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:475:53:475:64": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "min > limit",
          "lhs": "min",
          "rhs": "limit",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:486:24:486:40": [
    {
      "Bool": {
        "Other": "seq.is_inexact()"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:485:26:485:49": [
    {
      "For": {
        "iter_var": "_",
        "iter_range": "0..cmp::min(min, limit)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:481:25:481:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "min > 0",
          "lhs": "min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:450:15:450:19": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/literal.rs:450:15:450:19",
        "match_str": "*rep",
        "match_kind": {
          "StructLike": [
            "min",
            "max",
            "greedy",
            "sub"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/literal.rs:480:13:480:40": {
            "pat": {
              "pat_str": "hir::Repetition { min, .. }",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "regex-syntax/src/hir/literal.rs:480:31:480:34"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:480:44:493:14"
          },
          "regex-syntax/src/hir/literal.rs:451:13:451:56": {
            "pat": {
              "pat_str": "hir::Repetition { min: 0, max, greedy, .. }",
              "kind": {
                "StructLike": {
                  "2": [
                    null,
                    "regex-syntax/src/hir/literal.rs:451:44:451:50"
                  ],
                  "0": [
                    0,
                    "regex-syntax/src/hir/literal.rs:451:36:451:37"
                  ],
                  "1": [
                    null,
                    "regex-syntax/src/hir/literal.rs:451:39:451:42"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:451:60:463:14"
          },
          "regex-syntax/src/hir/literal.rs:464:13:464:56": {
            "pat": {
              "pat_str": "hir::Repetition { min, max: Some(max), .. }",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "regex-syntax/src/hir/literal.rs:464:41:464:50"
                  ],
                  "0": [
                    null,
                    "regex-syntax/src/hir/literal.rs:464:31:464:34"
                  ]
                }
              }
            },
            "guard": {
              "regex-syntax/src/hir/literal.rs:464:60:464:70": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Eq",
                      "expr": "min == max",
                      "lhs": "min",
                      "rhs": "max",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "regex-syntax/src/hir/literal.rs:464:74:479:14"
          }
        }
      }
    }
  ]
}