bb0
  0: StorageLive(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:20-1878:31)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:20-1878:24)
  5: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:20-1878:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1878:20-1878:31)
      kind: _5 = ast::parse::ParserI::<'_, P>::char(move _6) -> [return: bb1, unwind: bb151]
  }
  preds []
  succs [bb1, bb151]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:30-1878:31)
  1: _4 = &_5
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:33-1878:36)
  4: _8 = const '['
    SourceInfo(regex-syntax/src/ast/parse.rs:1878:33-1878:36)
  5: _7 = &_8
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  6: _3 = (move _4, move _7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  7: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  9: PlaceMention(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  10: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  11: _9 = (_3.0: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  12: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  13: _10 = (_3.1: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  14: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  15: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  16: _12 = (*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  17: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  18: _13 = (*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  19: _11 = Eq(move _12, move _13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _11) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _2 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1880:13-1880:22)
  11: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:40-1881:51)
  12: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:40-1881:44)
  13: _25 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:40-1881:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1881:40-1881:51)
      kind: _24 = ast::parse::ParserI::<'_, P>::span(move _25) -> [return: bb4, unwind: bb151]
  }
  preds [bb1]
  succs [bb4, bb151]

bb3
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _15 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _17 = move _15
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _19 = &(*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _18 = &(*_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _21 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _20 = &(*_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _22 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _16 = core::panicking::assert_failed::<char, char>(move _17, move _18, move _20, move _22) -> bb151
  }
  preds [bb1]
  succs [bb151]

bb4
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:50-1881:51)
  1: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _26 = std::vec::Vec::<ast::ClassSetItem>::new() -> [return: bb5, unwind: bb151]
  }
  preds [bb2]
  succs [bb5, bb151]

bb5
  0: _23 = ast::ClassSetUnion { span: move _24, items: move _26 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:13-1881:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1881:67-1881:68)
      kind: drop(_26) -> [return: bb6, unwind: bb151]
  }
  preds [bb4]
  succs [bb6, bb151]

bb6
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:67-1881:68)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1881:67-1881:68)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1880:13-1880:22)
  3: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1882:9-1932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1882:9-1932:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1882:9-1932:10)
      kind: falseUnwind -> [real: bb8, unwind: bb150]
  }
  preds [bb6, bb33, bb115]
  succs [bb8, bb150]

bb8
  0: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1883:13-1883:30)
  1: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1883:13-1883:17)
  2: _30 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1883:13-1883:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1883:13-1883:30)
      kind: _29 = ast::parse::ParserI::<'_, P>::bump_space(move _30) -> [return: bb9, unwind: bb150]
  }
  preds [bb7]
  succs [bb9, bb150]

bb9
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1883:29-1883:30)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1883:30-1883:31)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:13-1886:14)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:16-1884:29)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:16-1884:20)
  5: _33 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:16-1884:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1884:16-1884:29)
      kind: _32 = ast::parse::ParserI::<'_, P>::is_eof(move _33) -> [return: bb10, unwind: bb150]
  }
  preds [bb8]
  succs [bb10, bb150]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1884:16-1884:29)
      kind: switchInt(move _32) -> [0: bb14, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb14]

bb11
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:28-1884:29)
  1: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:28-1885:55)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:28-1885:32)
  3: _36 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:28-1885:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1885:28-1885:55)
      kind: _35 = ast::parse::ParserI::<'_, P>::unclosed_class_error(move _36) -> [return: bb12, unwind: bb150]
  }
  preds [bb10]
  succs [bb12, bb150]

bb12
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:54-1885:55)
  1: _0 = core::result::Result::<ast::ClassBracketed, ast::Error>::Err(move _35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:24-1885:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1885:55-1885:56)
      kind: drop(_35) -> [return: bb13, unwind: bb150]
  }
  preds [bb11]
  succs [bb13, bb150]

bb13
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1885:55-1885:56)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1886:13-1886:14)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1886:13-1886:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb125
  }
  preds [bb12]
  succs [bb125]

bb14
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1884:28-1884:29)
  1: _31 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1886:14-1886:14)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1886:13-1886:14)
  3: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1886:13-1886:14)
  4: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
  5: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:23)
  6: _38 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
      kind: _37 = ast::parse::ParserI::<'_, P>::char(move _38) -> [return: bb15, unwind: bb150]
  }
  preds [bb10]
  succs [bb15, bb150]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:29-1887:30)
  1: PlaceMention(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1887:13-1887:30)
      kind: switchInt(_37) -> [91: bb17, 93: bb18, 38: bb19, 45: bb20, 126: bb21, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18, bb19, bb20, bb21]

bb16
  0: StorageLive(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:21-1929:62)
  1: StorageLive(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:21-1929:26)
  2: _133 = &mut _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:21-1929:26)
  3: StorageLive(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  4: StorageLive(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  5: StorageLive(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:60)
  6: StorageLive(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:36)
  7: _137 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:60)
      kind: _136 = ast::parse::ParserI::<'_, P>::parse_set_class_range(move _137) -> [return: bb105, unwind: bb150]
  }
  preds [bb15, bb21, bb73, bb85, bb97, bb97]
  succs [bb105, bb150]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1888:17-1888:20)
      kind: falseEdge -> [real: bb22, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb22]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:17-1901:20)
      kind: falseEdge -> [real: bb49, imaginary: bb19]
  }
  preds [bb15, bb17]
  succs [bb19, bb49]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:17-1907:20)
      kind: falseEdge -> [real: bb69, imaginary: bb20]
  }
  preds [bb15, bb18]
  succs [bb20, bb69]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:17-1914:20)
      kind: falseEdge -> [real: bb81, imaginary: bb21]
  }
  preds [bb15, bb19, bb73]
  succs [bb21, bb81]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:17-1921:20)
      kind: falseEdge -> [real: bb93, imaginary: bb16]
  }
  preds [bb15, bb20, bb85]
  succs [bb16, bb93]

bb22
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:21-1898:22)
  1: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:70)
  2: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
  3: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:70)
  4: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
  5: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
  6: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:50)
  7: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:38)
  8: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:29)
  9: _48 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:38)
      kind: _47 = ast::parse::ParserI::<'_, P>::parser(move _48) -> [return: bb23, unwind: bb150]
  }
  preds [bb17]
  succs [bb23, bb150]

bb23
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:37-1893:38)
  1: _46 = &((*_47).9: core::cell::RefCell<std::vec::Vec<ast::parse::ClassState>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
      kind: _45 = core::cell::RefCell::<std::vec::Vec<ast::parse::ClassState>>::borrow(move _46) -> [return: bb24, unwind: bb150]
  }
  preds [bb22]
  succs [bb24, bb150]

bb24
  0: _44 = &_45
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:70)
      kind: _43 = <core::cell::Ref<'_, std::vec::Vec<ast::parse::ClassState>> as core::ops::Deref>::deref(move _44) -> [return: bb25, unwind: bb149]
  }
  preds [bb23]
  succs [bb25, bb149]

bb25
  0: _42 = &(*_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:59)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:58-1893:59)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:58-1893:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:70)
      kind: _41 = std::vec::Vec::<ast::parse::ClassState>::is_empty(move _42) -> [return: bb26, unwind: bb149]
  }
  preds [bb24]
  succs [bb26, bb149]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:25-1893:70)
      kind: switchInt(move _41) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
      kind: drop(_45) -> [return: bb35, unwind: bb150]
  }
  preds [bb26]
  succs [bb35, bb150]

bb28
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
      kind: drop(_45) -> [return: bb29, unwind: bb150]
  }
  preds [bb26]
  succs [bb29, bb150]

bb29
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  2: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  3: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:74)
  4: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:48)
  5: _50 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:74)
      kind: _49 = ast::parse::ParserI::<'_, P>::maybe_parse_ascii_class(move _50) -> [return: bb30, unwind: bb150]
  }
  preds [bb28]
  succs [bb30, bb150]

bb30
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:73-1894:74)
  1: PlaceMention(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:74)
  2: _51 = discriminant(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:44-1894:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1894:32-1894:41)
      kind: switchInt(move _51) -> [1: bb31, otherwise: bb34]
  }
  preds [bb29]
  succs [bb31, bb34]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1894:32-1894:41)
      kind: falseEdge -> [real: bb32, imaginary: bb34]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:37-1894:40)
  1: _52 = move ((_49 as Some).0: ast::ClassAscii)
    SourceInfo(regex-syntax/src/ast/parse.rs:1894:37-1894:40)
  2: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:29-1895:70)
  3: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:29-1895:34)
  4: _55 = &mut _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:29-1895:34)
  5: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:40-1895:69)
  6: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:65-1895:68)
  7: _57 = move _52
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:65-1895:68)
  8: _56 = ast::ClassSetItem::Ascii(move _57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:40-1895:69)
  9: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:68-1895:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1895:29-1895:70)
      kind: _54 = ast::ClassSetUnion::push(move _55, move _56) -> [return: bb33, unwind: bb148]
  }
  preds [bb31]
  succs [bb33, bb148]

bb33
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:69-1895:70)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:69-1895:70)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1895:70-1895:71)
  3: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1897:25-1897:26)
  4: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  6: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  7: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1932:9-1932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb7
  }
  preds [bb32]
  succs [bb7]

bb34
  0: _40 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1897:26-1897:26)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:21-1898:22)
      kind: goto -> bb36
  }
  preds [bb30, bb31]
  succs [bb36]

bb35
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  2: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
  3: _40 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:22-1898:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:21-1898:22)
      kind: goto -> bb36
  }
  preds [bb27]
  succs [bb36]

bb36
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1898:21-1898:22)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  4: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:56)
  5: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:33)
  6: _61 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:33)
  7: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:50-1899:55)
  8: _62 = move _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:50-1899:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:56)
      kind: _60 = ast::parse::ParserI::<'_, P>::push_class_open(move _61, move _62) -> [return: bb37, unwind: bb147]
  }
  preds [bb34, bb35]
  succs [bb37, bb147]

bb37
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:55-1899:56)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:55-1899:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
      kind: _59 = <core::result::Result<ast::ClassSetUnion, ast::Error> as core::ops::Try>::branch(move _60) -> [return: bb38, unwind: bb146]
  }
  preds [bb36]
  succs [bb38, bb146]

bb38
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  1: PlaceMention(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  2: _63 = discriminant(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
      kind: switchInt(move _63) -> [0: bb41, 1: bb40, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  1: _67 = move ((_59 as Continue).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  2: _58 = move _67
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_67) -> [return: bb44, unwind: bb145]
  }
  preds [bb38, bb40]
  succs [bb44, bb145]

bb42
  0: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  1: _64 = move ((_59 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  2: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  3: _66 = move _64
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:29-1899:57)
      kind: _0 = <core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _66) -> [return: bb43, unwind: bb143]
  }
  preds [bb40]
  succs [bb43, bb143]

bb43
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_64) -> [return: bb122, unwind: bb145]
  }
  preds [bb42]
  succs [bb122, bb145]

bb44
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:21-1899:26)
      kind: drop(_23) -> [return: bb45, unwind: bb46]
  }
  preds [bb41]
  succs [bb45, bb46]

bb45
  0: _23 = move _58
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:21-1899:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_58) -> [return: bb47, unwind: bb145]
  }
  preds [bb44]
  succs [bb47, bb145]

bb46
  0: _23 = move _58
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:21-1899:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_58) -> [return: bb145, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb145]

bb47
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:57-1899:58)
      kind: drop(_59) -> [return: bb48, unwind: bb150]
  }
  preds [bb45]
  succs [bb48, bb150]

bb48
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:57-1899:58)
  1: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1888:24-1900:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1888:24-1900:18)
      kind: goto -> bb115
  }
  preds [bb47]
  succs [bb115]

bb49
  0: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  1: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  2: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:51)
  3: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:34)
  4: _71 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:34)
  5: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:45-1901:50)
  6: _72 = move _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:45-1901:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:51)
      kind: _70 = ast::parse::ParserI::<'_, P>::pop_class(move _71, move _72) -> [return: bb50, unwind: bb142]
  }
  preds [bb18]
  succs [bb50, bb142]

bb50
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:50-1901:51)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:50-1901:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
      kind: _69 = <core::result::Result<either::Either<ast::ClassSetUnion, ast::ClassBracketed>, ast::Error> as core::ops::Try>::branch(move _70) -> [return: bb51, unwind: bb141]
  }
  preds [bb49]
  succs [bb51, bb141]

bb51
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  1: PlaceMention(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  2: _73 = discriminant(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
      kind: switchInt(move _73) -> [0: bb54, 1: bb53, otherwise: bb52]
  }
  preds [bb50]
  succs [bb52, bb53, bb54]

bb52
  0: FakeRead(ForMatchedPlace(None), _69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
      kind: unreachable
  }
  preds [bb51]
  succs []

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: falseEdge -> [real: bb55, imaginary: bb54]
  }
  preds [bb51]
  succs [bb54, bb55]

bb54
  0: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  1: _77 = move ((_69 as Continue).0: either::Either<ast::ClassSetUnion, ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  2: _68 = move _77
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: drop(_77) -> [return: bb57, unwind: bb140]
  }
  preds [bb51, bb53]
  succs [bb57, bb140]

bb55
  0: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  1: _74 = move ((_69 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  2: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  3: _76 = move _74
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
      kind: _0 = <core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _76) -> [return: bb56, unwind: bb138]
  }
  preds [bb53]
  succs [bb56, bb138]

bb56
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: drop(_74) -> [return: bb119, unwind: bb140]
  }
  preds [bb55]
  succs [bb119, bb140]

bb57
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  1: PlaceMention(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  2: _78 = discriminant(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:24-1901:52)
      kind: switchInt(move _78) -> [0: bb59, 1: bb60, otherwise: bb58]
  }
  preds [bb54]
  succs [bb58, bb59, bb60]

bb58
  0: FakeRead(ForMatchedPlace(None), _68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:30-1901:52)
      kind: unreachable
  }
  preds [bb57]
  succs []

bb59
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1902:21-1902:47)
      kind: falseEdge -> [real: bb61, imaginary: bb60]
  }
  preds [bb57]
  succs [bb60, bb61]

bb60
  0: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:35-1905:40)
  1: _81 = move ((_68 as Right).0: ast::ClassBracketed)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:35-1905:40)
  2: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:55-1905:60)
  3: _83 = move _81
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:55-1905:60)
  4: _0 = core::result::Result::<ast::ClassBracketed, ast::Error>::Ok(move _83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:52-1905:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1905:60-1905:61)
      kind: drop(_83) -> [return: bb66, unwind: bb135]
  }
  preds [bb57, bb59]
  succs [bb66, bb135]

bb61
  0: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1902:34-1902:46)
  1: _79 = move ((_68 as Left).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/parse.rs:1902:34-1902:46)
  2: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1903:33-1903:45)
  3: _80 = move _79
    SourceInfo(regex-syntax/src/ast/parse.rs:1903:33-1903:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1903:25-1903:30)
      kind: drop(_23) -> [return: bb62, unwind: bb63]
  }
  preds [bb59]
  succs [bb62, bb63]

bb62
  0: _23 = move _80
    SourceInfo(regex-syntax/src/ast/parse.rs:1903:25-1903:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1903:44-1903:45)
      kind: drop(_80) -> [return: bb64, unwind: bb136]
  }
  preds [bb61]
  succs [bb64, bb136]

bb63
  0: _23 = move _80
    SourceInfo(regex-syntax/src/ast/parse.rs:1903:25-1903:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1903:44-1903:45)
      kind: drop(_80) -> [return: bb136, unwind terminate(cleanup)]
  }
  preds [bb61]
  succs [bb136]

bb64
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1903:44-1903:45)
  1: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1902:51-1904:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1904:21-1904:22)
      kind: drop(_79) -> [return: bb65, unwind: bb137]
  }
  preds [bb62]
  succs [bb65, bb137]

bb65
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1904:21-1904:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_68) -> [return: bb67, unwind: bb140]
  }
  preds [bb64]
  succs [bb67, bb140]

bb66
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:60-1905:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1905:60-1905:61)
      kind: drop(_81) -> [return: bb118, unwind: bb137]
  }
  preds [bb60]
  succs [bb118, bb137]

bb67
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_69) -> [return: bb68, unwind: bb150]
  }
  preds [bb65]
  succs [bb68, bb150]

bb68
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: goto -> bb115
  }
  preds [bb67]
  succs [bb115]

bb69
  0: _39 = &fake shallow _37
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
  1: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:48)
  2: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:35)
  3: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:35)
  4: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:28)
  5: _87 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:35)
      kind: _86 = ast::parse::ParserI::<'_, P>::peek(move _87) -> [return: bb70, unwind: bb150]
  }
  preds [bb19]
  succs [bb70, bb150]

bb70
  0: _85 = &_86
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:35)
  1: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:34-1907:35)
  2: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:39-1907:48)
  3: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:39-1907:48)
  4: _89 = core::option::Option::<char>::Some(const '&')
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:39-1907:48)
  5: _88 = &_89
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:39-1907:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:48)
      kind: _84 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _85, move _88) -> [return: bb71, unwind: bb150]
  }
  preds [bb69]
  succs [bb71, bb150]

bb71
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:48)
      kind: switchInt(move _84) -> [0: bb73, otherwise: bb72]
  }
  preds [bb70]
  succs [bb72, bb73]

bb72
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  3: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  4: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  5: FakeRead(ForMatchGuard, _39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  6: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:21-1908:48)
  7: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:29-1908:47)
  8: StorageLive(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:29-1908:33)
  9: _92 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:29-1908:33)
  10: StorageLive(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:42-1908:46)
  11: StorageLive(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:42-1908:46)
  12: _94 = const "&&"
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:42-1908:46)
  13: _93 = &(*_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:42-1908:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1908:29-1908:47)
      kind: _91 = ast::parse::ParserI::<'_, P>::bump_if(move _92, move _93) -> [return: bb74, unwind: bb150]
  }
  preds [bb71]
  succs [bb74, bb150]

bb73
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  3: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  4: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:47-1907:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:24-1907:48)
      kind: falseEdge -> [real: bb16, imaginary: bb20]
  }
  preds [bb71]
  succs [bb16, bb20]

bb74
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1908:29-1908:47)
      kind: switchInt(move _91) -> [0: bb76, otherwise: bb75]
  }
  preds [bb72]
  succs [bb75, bb76]

bb75
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:46-1908:47)
  1: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:46-1908:47)
  2: StorageDead(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:47-1908:48)
  3: _90 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:48-1908:48)
  4: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:47-1908:48)
  5: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:47-1908:48)
  6: StorageLive(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1909:29-1912:22)
  7: StorageLive(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1909:29-1909:33)
  8: _97 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1909:29-1909:33)
  9: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1910:25-1910:64)
  10: _98 = ast::ClassSetBinaryOpKind::Intersection
    SourceInfo(regex-syntax/src/ast/parse.rs:1910:25-1910:64)
  11: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1911:25-1911:30)
  12: _99 = move _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1911:25-1911:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1909:29-1912:22)
      kind: _96 = ast::parse::ParserI::<'_, P>::push_class_op(move _97, move _98, move _99) -> [return: bb77, unwind: bb134]
  }
  preds [bb74]
  succs [bb77, bb134]

bb76
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:46-1908:47)
  1: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:46-1908:47)
  2: StorageDead(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:47-1908:48)
  3: StorageLive(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1908:21-1908:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1908:21-1908:48)
      kind: _95 = core::panicking::panic(const "assertion failed: self.bump_if(\"&&\")") -> bb150
  }
  preds [bb74]
  succs [bb150]

bb77
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
  1: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
  2: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1909:21-1909:26)
      kind: drop(_23) -> [return: bb78, unwind: bb79]
  }
  preds [bb75]
  succs [bb78, bb79]

bb78
  0: _23 = move _96
    SourceInfo(regex-syntax/src/ast/parse.rs:1909:21-1909:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
      kind: drop(_96) -> [return: bb80, unwind: bb150]
  }
  preds [bb77]
  succs [bb80, bb150]

bb79
  0: _23 = move _96
    SourceInfo(regex-syntax/src/ast/parse.rs:1909:21-1909:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
      kind: drop(_96) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb77]
  succs [bb150]

bb80
  0: StorageDead(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
  1: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1907:52-1913:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1907:52-1913:18)
      kind: goto -> bb115
  }
  preds [bb78]
  succs [bb115]

bb81
  0: _39 = &fake shallow _37
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
  1: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:48)
  2: StorageLive(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:35)
  3: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:35)
  4: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:28)
  5: _103 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:35)
      kind: _102 = ast::parse::ParserI::<'_, P>::peek(move _103) -> [return: bb82, unwind: bb150]
  }
  preds [bb20]
  succs [bb82, bb150]

bb82
  0: _101 = &_102
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:35)
  1: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:34-1914:35)
  2: StorageLive(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:39-1914:48)
  3: StorageLive(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:39-1914:48)
  4: _105 = core::option::Option::<char>::Some(const '-')
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:39-1914:48)
  5: _104 = &_105
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:39-1914:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:48)
      kind: _100 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _101, move _104) -> [return: bb83, unwind: bb150]
  }
  preds [bb81]
  succs [bb83, bb150]

bb83
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:48)
      kind: switchInt(move _100) -> [0: bb85, otherwise: bb84]
  }
  preds [bb82]
  succs [bb84, bb85]

bb84
  0: StorageDead(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  1: StorageDead(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  2: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  3: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  4: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  5: FakeRead(ForMatchGuard, _39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  6: StorageLive(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:21-1915:48)
  7: StorageLive(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:29-1915:47)
  8: StorageLive(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:29-1915:33)
  9: _108 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:29-1915:33)
  10: StorageLive(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:42-1915:46)
  11: StorageLive(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:42-1915:46)
  12: _110 = const "--"
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:42-1915:46)
  13: _109 = &(*_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:42-1915:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1915:29-1915:47)
      kind: _107 = ast::parse::ParserI::<'_, P>::bump_if(move _108, move _109) -> [return: bb86, unwind: bb150]
  }
  preds [bb83]
  succs [bb86, bb150]

bb85
  0: StorageDead(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  1: StorageDead(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  2: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  3: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  4: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:47-1914:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:24-1914:48)
      kind: falseEdge -> [real: bb16, imaginary: bb21]
  }
  preds [bb83]
  succs [bb16, bb21]

bb86
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1915:29-1915:47)
      kind: switchInt(move _107) -> [0: bb88, otherwise: bb87]
  }
  preds [bb84]
  succs [bb87, bb88]

bb87
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:46-1915:47)
  1: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:46-1915:47)
  2: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:47-1915:48)
  3: _106 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:48-1915:48)
  4: StorageDead(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:47-1915:48)
  5: StorageDead(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:47-1915:48)
  6: StorageLive(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1916:29-1919:22)
  7: StorageLive(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1916:29-1916:33)
  8: _113 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1916:29-1916:33)
  9: StorageLive(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1917:25-1917:62)
  10: _114 = ast::ClassSetBinaryOpKind::Difference
    SourceInfo(regex-syntax/src/ast/parse.rs:1917:25-1917:62)
  11: StorageLive(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1918:25-1918:30)
  12: _115 = move _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1918:25-1918:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1916:29-1919:22)
      kind: _112 = ast::parse::ParserI::<'_, P>::push_class_op(move _113, move _114, move _115) -> [return: bb89, unwind: bb133]
  }
  preds [bb86]
  succs [bb89, bb133]

bb88
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:46-1915:47)
  1: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:46-1915:47)
  2: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:47-1915:48)
  3: StorageLive(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1915:21-1915:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1915:21-1915:48)
      kind: _111 = core::panicking::panic(const "assertion failed: self.bump_if(\"--\")") -> bb150
  }
  preds [bb86]
  succs [bb150]

bb89
  0: StorageDead(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
  1: StorageDead(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
  2: StorageDead(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1916:21-1916:26)
      kind: drop(_23) -> [return: bb90, unwind: bb91]
  }
  preds [bb87]
  succs [bb90, bb91]

bb90
  0: _23 = move _112
    SourceInfo(regex-syntax/src/ast/parse.rs:1916:21-1916:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
      kind: drop(_112) -> [return: bb92, unwind: bb150]
  }
  preds [bb89]
  succs [bb92, bb150]

bb91
  0: _23 = move _112
    SourceInfo(regex-syntax/src/ast/parse.rs:1916:21-1916:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
      kind: drop(_112) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb89]
  succs [bb150]

bb92
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
  1: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1914:52-1920:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1914:52-1920:18)
      kind: goto -> bb115
  }
  preds [bb90]
  succs [bb115]

bb93
  0: _39 = &fake shallow _37
    SourceInfo(regex-syntax/src/ast/parse.rs:1887:19-1887:30)
  1: StorageLive(_116)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:48)
  2: StorageLive(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:35)
  3: StorageLive(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:35)
  4: StorageLive(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:28)
  5: _119 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:35)
      kind: _118 = ast::parse::ParserI::<'_, P>::peek(move _119) -> [return: bb94, unwind: bb150]
  }
  preds [bb21]
  succs [bb94, bb150]

bb94
  0: _117 = &_118
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:35)
  1: StorageDead(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:34-1921:35)
  2: StorageLive(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:39-1921:48)
  3: StorageLive(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:39-1921:48)
  4: _121 = core::option::Option::<char>::Some(const '~')
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:39-1921:48)
  5: _120 = &_121
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:39-1921:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:48)
      kind: _116 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _117, move _120) -> [return: bb95, unwind: bb150]
  }
  preds [bb93]
  succs [bb95, bb150]

bb95
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:48)
      kind: switchInt(move _116) -> [0: bb97, otherwise: bb96]
  }
  preds [bb94]
  succs [bb96, bb97]

bb96
  0: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  1: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  2: StorageDead(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  3: StorageDead(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  4: StorageDead(_116)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  5: FakeRead(ForMatchGuard, _39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  6: StorageLive(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:21-1922:48)
  7: StorageLive(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:29-1922:47)
  8: StorageLive(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:29-1922:33)
  9: _124 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:29-1922:33)
  10: StorageLive(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:42-1922:46)
  11: StorageLive(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:42-1922:46)
  12: _126 = const "~~"
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:42-1922:46)
  13: _125 = &(*_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:42-1922:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1922:29-1922:47)
      kind: _123 = ast::parse::ParserI::<'_, P>::bump_if(move _124, move _125) -> [return: bb98, unwind: bb150]
  }
  preds [bb95]
  succs [bb98, bb150]

bb97
  0: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  1: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  2: StorageDead(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  3: StorageDead(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  4: StorageDead(_116)
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:47-1921:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:24-1921:48)
      kind: falseEdge -> [real: bb16, imaginary: bb16]
  }
  preds [bb95]
  succs [bb16, bb16]

bb98
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1922:29-1922:47)
      kind: switchInt(move _123) -> [0: bb100, otherwise: bb99]
  }
  preds [bb96]
  succs [bb99, bb100]

bb99
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:46-1922:47)
  1: StorageDead(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:46-1922:47)
  2: StorageDead(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:47-1922:48)
  3: _122 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:48-1922:48)
  4: StorageDead(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:47-1922:48)
  5: StorageDead(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:47-1922:48)
  6: StorageLive(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1923:29-1926:22)
  7: StorageLive(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1923:29-1923:33)
  8: _129 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1923:29-1923:33)
  9: StorageLive(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1924:25-1924:71)
  10: _130 = ast::ClassSetBinaryOpKind::SymmetricDifference
    SourceInfo(regex-syntax/src/ast/parse.rs:1924:25-1924:71)
  11: StorageLive(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1925:25-1925:30)
  12: _131 = move _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1925:25-1925:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1923:29-1926:22)
      kind: _128 = ast::parse::ParserI::<'_, P>::push_class_op(move _129, move _130, move _131) -> [return: bb101, unwind: bb132]
  }
  preds [bb98]
  succs [bb101, bb132]

bb100
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:46-1922:47)
  1: StorageDead(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:46-1922:47)
  2: StorageDead(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:47-1922:48)
  3: StorageLive(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1922:21-1922:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1922:21-1922:48)
      kind: _127 = core::panicking::panic(const "assertion failed: self.bump_if(\"~~\")") -> bb150
  }
  preds [bb98]
  succs [bb150]

bb101
  0: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
  1: StorageDead(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
  2: StorageDead(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1923:21-1923:26)
      kind: drop(_23) -> [return: bb102, unwind: bb103]
  }
  preds [bb99]
  succs [bb102, bb103]

bb102
  0: _23 = move _128
    SourceInfo(regex-syntax/src/ast/parse.rs:1923:21-1923:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
      kind: drop(_128) -> [return: bb104, unwind: bb150]
  }
  preds [bb101]
  succs [bb104, bb150]

bb103
  0: _23 = move _128
    SourceInfo(regex-syntax/src/ast/parse.rs:1923:21-1923:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
      kind: drop(_128) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb101]
  succs [bb150]

bb104
  0: StorageDead(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
  1: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1921:52-1927:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1921:52-1927:18)
      kind: goto -> bb115
  }
  preds [bb102]
  succs [bb115]

bb105
  0: StorageDead(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:59-1929:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
      kind: _135 = <core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::Try>::branch(move _136) -> [return: bb106, unwind: bb131]
  }
  preds [bb16]
  succs [bb106, bb131]

bb106
  0: StorageDead(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  1: PlaceMention(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  2: _138 = discriminant(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
      kind: switchInt(move _138) -> [0: bb109, 1: bb108, otherwise: bb107]
  }
  preds [bb105]
  succs [bb107, bb108, bb109]

bb107
  0: FakeRead(ForMatchedPlace(None), _135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
      kind: unreachable
  }
  preds [bb106]
  succs []

bb108
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: falseEdge -> [real: bb110, imaginary: bb109]
  }
  preds [bb106]
  succs [bb109, bb110]

bb109
  0: StorageLive(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  1: _142 = move ((_135 as Continue).0: ast::ClassSetItem)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  2: _134 = move _142
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: drop(_142) -> [return: bb112, unwind: bb130]
  }
  preds [bb106, bb108]
  succs [bb112, bb130]

bb110
  0: StorageLive(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  1: _139 = move ((_135 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  2: StorageLive(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  3: _141 = move _139
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:32-1929:61)
      kind: _0 = <core::result::Result<ast::ClassBracketed, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _141) -> [return: bb111, unwind: bb128]
  }
  preds [bb108]
  succs [bb111, bb128]

bb111
  0: StorageDead(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: drop(_139) -> [return: bb116, unwind: bb130]
  }
  preds [bb110]
  succs [bb116, bb130]

bb112
  0: StorageDead(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:21-1929:62)
      kind: _132 = ast::ClassSetUnion::push(move _133, move _134) -> [return: bb113, unwind: bb127]
  }
  preds [bb109]
  succs [bb113, bb127]

bb113
  0: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:61-1929:62)
  1: StorageDead(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:61-1929:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
      kind: drop(_135) -> [return: bb114, unwind: bb150]
  }
  preds [bb112]
  succs [bb114, bb150]

bb114
  0: StorageDead(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
  1: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
  2: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1928:22-1930:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1928:22-1930:18)
      kind: goto -> bb115
  }
  preds [bb113]
  succs [bb115]

bb115
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1932:9-1932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1882:9-1932:10)
      kind: goto -> bb7
  }
  preds [bb48, bb68, bb80, bb92, bb104, bb114]
  succs [bb7]

bb116
  0: StorageDead(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
  1: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:61-1929:62)
  2: StorageDead(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:61-1929:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
      kind: drop(_135) -> [return: bb117, unwind: bb150]
  }
  preds [bb111]
  succs [bb117, bb150]

bb117
  0: StorageDead(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
  1: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb116]
  succs [bb124]

bb118
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1905:60-1905:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_68) -> [return: bb120, unwind: bb140]
  }
  preds [bb66]
  succs [bb120, bb140]

bb119
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb120
  }
  preds [bb56]
  succs [bb120]

bb120
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_69) -> [return: bb121, unwind: bb150]
  }
  preds [bb118, bb119]
  succs [bb121, bb150]

bb121
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb120]
  succs [bb124]

bb122
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:57-1899:58)
      kind: drop(_59) -> [return: bb123, unwind: bb150]
  }
  preds [bb43]
  succs [bb123, bb150]

bb123
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1899:57-1899:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb122]
  succs [bb124]

bb124
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1932:9-1932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb125
  }
  preds [bb117, bb121, bb123]
  succs [bb125]

bb125
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1932:9-1932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1933:5-1933:6)
      kind: drop(_23) -> [return: bb126, unwind: bb151]
  }
  preds [bb13, bb124]
  succs [bb126, bb151]

bb126
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1933:5-1933:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1933:6-1933:6)
      kind: return
  }
  preds [bb125]
  succs []

bb127
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:61-1929:62)
      kind: drop(_134) -> [return: bb130, unwind terminate(cleanup)]
  }
  preds [bb112]
  succs [bb130]

bb128
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: drop(_141) -> [return: bb129, unwind terminate(cleanup)]
  }
  preds [bb110]
  succs [bb129]

bb129
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: drop(_139) -> [return: bb130, unwind terminate(cleanup)]
  }
  preds [bb128]
  succs [bb130]

bb130
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:62-1929:63)
      kind: drop(_135) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb109, bb111, bb127, bb129]
  succs [bb150]

bb131
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1929:60-1929:61)
      kind: drop(_136) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb105]
  succs [bb150]

bb132
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1926:21-1926:22)
      kind: drop(_131) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb99]
  succs [bb150]

bb133
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1919:21-1919:22)
      kind: drop(_115) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb87]
  succs [bb150]

bb134
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1912:21-1912:22)
      kind: drop(_99) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb75]
  succs [bb150]

bb135
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1905:60-1905:61)
      kind: drop(_81) -> [return: bb137, unwind terminate(cleanup)]
  }
  preds [bb60]
  succs [bb137]

bb136
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1904:21-1904:22)
      kind: drop(_79) -> [return: bb137, unwind terminate(cleanup)]
  }
  preds [bb62, bb63]
  succs [bb137]

bb137
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_68) -> [return: bb140, unwind terminate(cleanup)]
  }
  preds [bb64, bb66, bb135, bb136]
  succs [bb140]

bb138
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: drop(_76) -> [return: bb139, unwind terminate(cleanup)]
  }
  preds [bb55]
  succs [bb139]

bb139
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: drop(_74) -> [return: bb140, unwind terminate(cleanup)]
  }
  preds [bb138]
  succs [bb140]

bb140
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1906:17-1906:18)
      kind: drop(_69) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb54, bb56, bb65, bb118, bb137, bb139]
  succs [bb150]

bb141
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:51-1901:52)
      kind: drop(_70) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb50]
  succs [bb150]

bb142
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1901:50-1901:51)
      kind: drop(_72) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb150]

bb143
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_66) -> [return: bb144, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb144]

bb144
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_64) -> [return: bb145, unwind terminate(cleanup)]
  }
  preds [bb143]
  succs [bb145]

bb145
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:57-1899:58)
      kind: drop(_59) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb41, bb43, bb45, bb46, bb144]
  succs [bb150]

bb146
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:56-1899:57)
      kind: drop(_60) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb37]
  succs [bb150]

bb147
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1899:55-1899:56)
      kind: drop(_62) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb36]
  succs [bb150]

bb148
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1895:69-1895:70)
      kind: drop(_56) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb150]

bb149
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1893:69-1893:70)
      kind: drop(_45) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb24, bb25]
  succs [bb150]

bb150
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1933:5-1933:6)
      kind: drop(_23) -> [return: bb151, unwind terminate(cleanup)]
  }
  preds [bb7, bb8, bb9, bb11, bb12, bb14, bb16, bb22, bb23, bb27, bb28, bb29, bb47, bb67, bb69, bb70, bb72, bb76, bb78, bb79, bb81, bb82, bb84, bb88, bb90, bb91, bb93, bb94, bb96, bb100, bb102, bb103, bb113, bb116, bb120, bb122, bb130, bb131, bb132, bb133, bb134, bb140, bb141, bb142, bb145, bb146, bb147, bb148, bb149]
  succs [bb151]

bb151
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1877:5-1933:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb5, bb125, bb150]
  succs []

