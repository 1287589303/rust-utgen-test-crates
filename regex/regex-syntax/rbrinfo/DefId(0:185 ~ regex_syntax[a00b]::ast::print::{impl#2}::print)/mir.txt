bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:63:24-63:27)
  1: _4 = &(*_2)
    SourceInfo(regex-syntax/src/ast/print.rs:63:24-63:27)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:63:29-63:43)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:63:38-63:41)
  4: _6 = move _3
    SourceInfo(regex-syntax/src/ast/print.rs:63:38-63:41)
  5: _5 = ast::print::Writer::<W> { wtr: move _6 }
    SourceInfo(regex-syntax/src/ast/print.rs:63:29-63:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:63:42-63:43)
      kind: drop(_6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:63:42-63:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:63:9-63:44)
      kind: _0 = ast::visitor::visit::<ast::print::Writer<W>>(move _4, move _5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:63:43-63:44)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:63:43-63:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:64:5-64:6)
      kind: drop(_3) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:64:6-64:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:63:43-63:44)
      kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:64:5-64:6)
      kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:62:5-64:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

