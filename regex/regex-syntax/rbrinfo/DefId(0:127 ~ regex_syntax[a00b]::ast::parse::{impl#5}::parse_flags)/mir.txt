bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:13-1360:22)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:44-1360:55)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:44-1360:48)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:44-1360:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1360:44-1360:55)
      kind: _3 = ast::parse::ParserI::<'_, P>::span(move _4) -> [return: bb1, unwind: bb70]
  }
  preds []
  succs [bb1, bb70]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:54-1360:55)
  1: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _5 = std::vec::Vec::<ast::FlagsItem>::new() -> [return: bb2, unwind: bb70]
  }
  preds [bb0]
  succs [bb2, bb70]

bb2
  0: _2 = ast::Flags { span: move _3, items: move _5 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:25-1360:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1360:71-1360:72)
      kind: drop(_5) -> [return: bb3, unwind: bb70]
  }
  preds [bb1]
  succs [bb3, bb70]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:71-1360:72)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:71-1360:72)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1360:13-1360:22)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1361:13-1361:34)
  4: _6 = core::option::Option::<ast::Span>::None
    SourceInfo(regex-syntax/src/ast/parse.rs:1361:37-1361:41)
  5: FakeRead(ForLet(None), _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1361:13-1361:34)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
      kind: falseUnwind -> [real: bb5, unwind: bb69]
  }
  preds [bb3, bb42]
  succs [bb5, bb69]

bb5
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:33)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:26)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:19)
  3: _11 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:26)
      kind: _10 = ast::parse::ParserI::<'_, P>::char(move _11) -> [return: bb6, unwind: bb69]
  }
  preds [bb4]
  succs [bb6, bb69]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:25-1362:26)
  1: _9 = Ne(move _10, const ':')
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:15-1362:33)
      kind: switchInt(move _9) -> [0: bb48, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb48]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:32-1362:33)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:55)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:48)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:41)
  4: _14 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:48)
      kind: _13 = ast::parse::ParserI::<'_, P>::char(move _14) -> [return: bb8, unwind: bb69]
  }
  preds [bb6]
  succs [bb8, bb69]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:47-1362:48)
  1: _12 = Ne(move _13, const ')')
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:37-1362:55)
      kind: switchInt(move _12) -> [0: bb47, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb47]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:54-1362:55)
  1: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:13-1391:14)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:34)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:27)
  4: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:20)
  5: _18 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:27)
      kind: _17 = ast::parse::ParserI::<'_, P>::char(move _18) -> [return: bb10, unwind: bb69]
  }
  preds [bb8]
  succs [bb10, bb69]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:26-1363:27)
  1: _16 = Eq(move _17, const '-')
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1363:16-1363:34)
      kind: switchInt(move _16) -> [0: bb22, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb22]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:33-1363:34)
  1: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:37-1364:59)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:42-1364:58)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:42-1364:46)
  4: _21 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:42-1364:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1364:42-1364:58)
      kind: _20 = ast::parse::ParserI::<'_, P>::span_char(move _21) -> [return: bb12, unwind: bb69]
  }
  preds [bb10]
  succs [bb12, bb69]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:57-1364:58)
  1: _19 = core::option::Option::<ast::Span>::Some(move _20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:37-1364:59)
  2: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:58-1364:59)
  3: _6 = move _19
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:17-1364:59)
  4: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1364:58-1364:59)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1365:21-1365:25)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1366:27-1366:43)
  7: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1366:27-1366:31)
  8: _24 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1366:27-1366:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1366:27-1366:43)
      kind: _23 = ast::parse::ParserI::<'_, P>::span_char(move _24) -> [return: bb13, unwind: bb69]
  }
  preds [bb11]
  succs [bb13, bb69]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1366:42-1366:43)
  1: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1367:27-1367:55)
  2: _25 = ast::FlagsItemKind::Negation
    SourceInfo(regex-syntax/src/ast/parse.rs:1367:27-1367:55)
  3: _22 = ast::FlagsItem { span: move _23, kind: move _25 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1365:28-1368:18)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1368:17-1368:18)
  5: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1368:17-1368:18)
  6: FakeRead(ForLet(None), _22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1365:21-1365:25)
  7: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:54)
  8: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:39)
  9: _27 = &mut _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:39)
  10: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:49-1369:53)
  11: _28 = move _22
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:49-1369:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:54)
      kind: _26 = ast::Flags::add_item(move _27, move _28) -> [return: bb14, unwind: bb69]
  }
  preds [bb12]
  succs [bb14, bb69]

bb14
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:53-1369:54)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:53-1369:54)
  2: PlaceMention(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:54)
  3: _29 = discriminant(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:34-1369:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1369:24-1369:31)
      kind: switchInt(move _29) -> [1: bb15, otherwise: bb21]
  }
  preds [bb13]
  succs [bb15, bb21]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1369:24-1369:31)
      kind: falseEdge -> [real: bb16, imaginary: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:29-1369:30)
  1: _30 = ((_26 as Some).0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:1369:29-1369:30)
  2: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1370:32-1375:22)
  3: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1370:32-1370:36)
  4: _33 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1370:32-1370:36)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1371:25-1371:41)
  6: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1371:25-1371:29)
  7: _35 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1371:25-1371:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1371:25-1371:41)
      kind: _34 = ast::parse::ParserI::<'_, P>::span_char(move _35) -> [return: bb17, unwind: bb69]
  }
  preds [bb15]
  succs [bb17, bb69]

bb17
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1371:40-1371:41)
  1: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1372:25-1374:26)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:39-1373:58)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:50-1373:53)
  4: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:39-1373:50)
  5: _39 = &(_2.1: std::vec::Vec<ast::FlagsItem>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:39-1373:50)
  6: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:51-1373:52)
  7: _40 = _30
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:51-1373:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1373:50-1373:53)
      kind: _38 = <std::vec::Vec<ast::FlagsItem> as core::ops::Index<usize>>::index(move _39, move _40) -> [return: bb18, unwind: bb69]
  }
  preds [bb16]
  succs [bb18, bb69]

bb18
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:52-1373:53)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:52-1373:53)
  2: _37 = ((*_38).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:1373:39-1373:58)
  3: _36 = ast::ErrorKind::FlagRepeatedNegation { original: move _37 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1372:25-1374:26)
  4: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1374:25-1374:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1370:32-1375:22)
      kind: _32 = ast::parse::ParserI::<'_, P>::error(move _33, move _34, move _36) -> [return: bb19, unwind: bb69]
  }
  preds [bb17]
  succs [bb19, bb69]

bb19
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1375:21-1375:22)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1375:21-1375:22)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1375:21-1375:22)
  3: _0 = core::result::Result::<ast::Flags, ast::Error>::Err(move _32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1370:28-1375:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1375:22-1375:23)
      kind: drop(_32) -> [return: bb20, unwind: bb69]
  }
  preds [bb18]
  succs [bb20, bb69]

bb20
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1375:22-1375:23)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1375:23-1375:24)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1376:17-1376:18)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1377:13-1377:14)
  4: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1377:13-1377:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb19]
  succs [bb60]

bb21
  0: _15 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1376:18-1376:18)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1377:13-1377:14)
  2: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1377:13-1377:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1363:13-1391:14)
      kind: goto -> bb40
  }
  preds [bb14, bb15]
  succs [bb40]

bb22
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1363:33-1363:34)
  1: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1378:37-1378:41)
  2: _41 = core::option::Option::<ast::Span>::None
    SourceInfo(regex-syntax/src/ast/parse.rs:1378:37-1378:41)
  3: _6 = move _41
    SourceInfo(regex-syntax/src/ast/parse.rs:1378:17-1378:41)
  4: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1378:40-1378:41)
  5: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1379:21-1379:25)
  6: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1380:27-1380:43)
  7: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1380:27-1380:31)
  8: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1380:27-1380:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1380:27-1380:43)
      kind: _43 = ast::parse::ParserI::<'_, P>::span_char(move _44) -> [return: bb23, unwind: bb69]
  }
  preds [bb10]
  succs [bb23, bb69]

bb23
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1380:42-1380:43)
  1: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:27-1381:71)
  2: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  3: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  4: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:69)
  5: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:56)
  6: _49 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:69)
      kind: _48 = ast::parse::ParserI::<'_, P>::parse_flag(move _49) -> [return: bb24, unwind: bb69]
  }
  preds [bb22]
  succs [bb24, bb69]

bb24
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:68-1381:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
      kind: _47 = <core::result::Result<ast::Flag, ast::Error> as core::ops::Try>::branch(move _48) -> [return: bb25, unwind: bb68]
  }
  preds [bb23]
  succs [bb25, bb68]

bb25
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  1: PlaceMention(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  2: _50 = discriminant(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
      kind: switchInt(move _50) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  1: _54 = ((_47 as Continue).0: ast::Flag)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  2: _46 = _54
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
  3: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  4: _45 = ast::FlagsItemKind::Flag(move _46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:27-1381:71)
  5: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:70-1381:71)
  6: _42 = ast::FlagsItem { span: move _43, kind: move _45 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1379:28-1382:18)
  7: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:17-1382:18)
  8: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:17-1382:18)
  9: FakeRead(ForLet(None), _42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1379:21-1379:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1382:18-1382:19)
      kind: drop(_47) -> [return: bb31, unwind: bb69]
  }
  preds [bb25, bb27]
  succs [bb31, bb69]

bb29
  0: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  1: _51 = move ((_47 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  3: _53 = move _51
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:52-1381:70)
      kind: _0 = <core::result::Result<ast::Flags, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _53) -> [return: bb30, unwind: bb65]
  }
  preds [bb27]
  succs [bb30, bb65]

bb30
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
      kind: drop(_51) -> [return: bb58, unwind: bb67]
  }
  preds [bb29]
  succs [bb58, bb67]

bb31
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:18-1382:19)
  1: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:54)
  2: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:39)
  3: _56 = &mut _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:39)
  4: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:49-1383:53)
  5: _57 = move _42
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:49-1383:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:54)
      kind: _55 = ast::Flags::add_item(move _56, move _57) -> [return: bb32, unwind: bb69]
  }
  preds [bb28]
  succs [bb32, bb69]

bb32
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:53-1383:54)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:53-1383:54)
  2: PlaceMention(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:54)
  3: _58 = discriminant(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:34-1383:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1383:24-1383:31)
      kind: switchInt(move _58) -> [1: bb33, otherwise: bb39]
  }
  preds [bb31]
  succs [bb33, bb39]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1383:24-1383:31)
      kind: falseEdge -> [real: bb34, imaginary: bb39]
  }
  preds [bb32]
  succs [bb34, bb39]

bb34
  0: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:29-1383:30)
  1: _59 = ((_55 as Some).0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:1383:29-1383:30)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1384:32-1389:22)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1384:32-1384:36)
  4: _62 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1384:32-1384:36)
  5: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1385:25-1385:41)
  6: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1385:25-1385:29)
  7: _64 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1385:25-1385:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1385:25-1385:41)
      kind: _63 = ast::parse::ParserI::<'_, P>::span_char(move _64) -> [return: bb35, unwind: bb69]
  }
  preds [bb33]
  succs [bb35, bb69]

bb35
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1385:40-1385:41)
  1: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1386:25-1388:26)
  2: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:39-1387:58)
  3: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:50-1387:53)
  4: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:39-1387:50)
  5: _68 = &(_2.1: std::vec::Vec<ast::FlagsItem>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:39-1387:50)
  6: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:51-1387:52)
  7: _69 = _59
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:51-1387:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1387:50-1387:53)
      kind: _67 = <std::vec::Vec<ast::FlagsItem> as core::ops::Index<usize>>::index(move _68, move _69) -> [return: bb36, unwind: bb69]
  }
  preds [bb34]
  succs [bb36, bb69]

bb36
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:52-1387:53)
  1: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:52-1387:53)
  2: _66 = ((*_67).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:1387:39-1387:58)
  3: _65 = ast::ErrorKind::FlagDuplicate { original: move _66 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1386:25-1388:26)
  4: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1388:25-1388:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1384:32-1389:22)
      kind: _61 = ast::parse::ParserI::<'_, P>::error(move _62, move _63, move _65) -> [return: bb37, unwind: bb69]
  }
  preds [bb35]
  succs [bb37, bb69]

bb37
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1389:21-1389:22)
  1: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1389:21-1389:22)
  2: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1389:21-1389:22)
  3: _0 = core::result::Result::<ast::Flags, ast::Error>::Err(move _61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1384:28-1389:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1389:22-1389:23)
      kind: drop(_61) -> [return: bb38, unwind: bb69]
  }
  preds [bb36]
  succs [bb38, bb69]

bb38
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1389:22-1389:23)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1389:23-1389:24)
  2: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1390:17-1390:18)
  3: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  4: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb37]
  succs [bb60]

bb39
  0: _15 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1390:18-1390:18)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  2: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1363:13-1391:14)
      kind: goto -> bb40
  }
  preds [bb32, bb33]
  succs [bb40]

bb40
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  2: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1392:17-1392:28)
  3: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1392:17-1392:21)
  4: _71 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1392:17-1392:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1392:17-1392:28)
      kind: _70 = ast::parse::ParserI::<'_, P>::bump(move _71) -> [return: bb41, unwind: bb69]
  }
  preds [bb21, bb39]
  succs [bb41, bb69]

bb41
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1392:17-1392:28)
      kind: switchInt(move _70) -> [0: bb43, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb43]

bb42
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1392:27-1392:28)
  1: _8 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1396:14-1396:14)
  2: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1396:13-1396:14)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
      kind: goto -> bb4
  }
  preds [bb41]
  succs [bb4]

bb43
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1392:27-1392:28)
  1: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:21-1394:79)
  2: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:21-1394:25)
  3: _74 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:21-1394:25)
  4: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:32-1394:43)
  5: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:32-1394:36)
  6: _76 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:32-1394:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1394:32-1394:43)
      kind: _75 = ast::parse::ParserI::<'_, P>::span(move _76) -> [return: bb44, unwind: bb69]
  }
  preds [bb41]
  succs [bb44, bb69]

bb44
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:42-1394:43)
  1: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:45-1394:78)
  2: _77 = ast::ErrorKind::FlagUnexpectedEof
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:45-1394:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1394:21-1394:79)
      kind: _73 = ast::parse::ParserI::<'_, P>::error(move _74, move _75, move _77) -> [return: bb45, unwind: bb69]
  }
  preds [bb43]
  succs [bb45, bb69]

bb45
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:78-1394:79)
  1: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:78-1394:79)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1394:78-1394:79)
  3: _0 = core::result::Result::<ast::Flags, ast::Error>::Err(move _73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1393:24-1395:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1395:17-1395:18)
      kind: drop(_73) -> [return: bb46, unwind: bb69]
  }
  preds [bb44]
  succs [bb46, bb69]

bb46
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1395:17-1395:18)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1396:13-1396:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb45]
  succs [bb61]

bb47
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:54-1362:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb8]
  succs [bb49]

bb48
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:32-1362:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb6]
  succs [bb49]

bb49
  0: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
  1: _7 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1362:9-1397:10)
  2: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  6: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1398:9-1400:10)
  7: PlaceMention(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1398:29-1398:46)
  8: _82 = discriminant(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1398:29-1398:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1398:16-1398:26)
      kind: switchInt(move _82) -> [1: bb51, otherwise: bb50]
  }
  preds [bb47, bb48]
  succs [bb50, bb51]

bb50
  0: _81 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1400:10-1400:10)
  1: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1400:9-1400:10)
  2: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:26-1401:36)
  3: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:26-1401:30)
  4: _90 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:26-1401:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1401:26-1401:36)
      kind: _89 = ast::parse::ParserI::<'_, P>::pos(move _90) -> [return: bb55, unwind: bb69]
  }
  preds [bb49, bb51]
  succs [bb55, bb69]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1398:16-1398:26)
      kind: falseEdge -> [real: bb52, imaginary: bb50]
  }
  preds [bb49]
  succs [bb50, bb52]

bb52
  0: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1398:21-1398:25)
  1: _83 = ((_6 as Some).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:1398:21-1398:25)
  2: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:24-1399:78)
  3: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:24-1399:28)
  4: _86 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:24-1399:28)
  5: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:35-1399:39)
  6: _87 = _83
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:35-1399:39)
  7: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:41-1399:77)
  8: _88 = ast::ErrorKind::FlagDanglingNegation
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:41-1399:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1399:24-1399:78)
      kind: _85 = ast::parse::ParserI::<'_, P>::error(move _86, move _87, move _88) -> [return: bb53, unwind: bb69]
  }
  preds [bb51]
  succs [bb53, bb69]

bb53
  0: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:77-1399:78)
  1: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:77-1399:78)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:77-1399:78)
  3: _0 = core::result::Result::<ast::Flags, ast::Error>::Err(move _85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:20-1399:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1399:78-1399:79)
      kind: drop(_85) -> [return: bb54, unwind: bb69]
  }
  preds [bb52]
  succs [bb54, bb69]

bb54
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1399:78-1399:79)
  1: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1400:9-1400:10)
  2: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1400:9-1400:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb53]
  succs [bb62]

bb55
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:35-1401:36)
  1: ((_2.0: ast::Span).1: ast::Position) = move _89
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:9-1401:36)
  2: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1401:35-1401:36)
  3: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1402:12-1402:17)
  4: _91 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1402:12-1402:17)
  5: _0 = core::result::Result::<ast::Flags, ast::Error>::Ok(move _91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1402:9-1402:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1402:17-1402:18)
      kind: drop(_91) -> [return: bb56, unwind: bb69]
  }
  preds [bb50]
  succs [bb56, bb69]

bb56
  0: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1402:17-1402:18)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
      kind: drop(_2) -> [return: bb57, unwind: bb70]
  }
  preds [bb55]
  succs [bb57, bb70]

bb57
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:6-1403:6)
      kind: goto -> bb64
  }
  preds [bb56]
  succs [bb64]

bb58
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1381:70-1381:71)
  2: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:17-1382:18)
  3: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:17-1382:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1382:18-1382:19)
      kind: drop(_47) -> [return: bb59, unwind: bb69]
  }
  preds [bb30]
  succs [bb59, bb69]

bb59
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1382:18-1382:19)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1391:13-1391:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb20, bb38, bb59]
  succs [bb61]

bb61
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1397:9-1397:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb62
  }
  preds [bb46, bb60]
  succs [bb62]

bb62
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
      kind: drop(_2) -> [return: bb63, unwind: bb70]
  }
  preds [bb54, bb61]
  succs [bb63, bb70]

bb63
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:6-1403:6)
      kind: goto -> bb64
  }
  preds [bb62]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:6-1403:6)
      kind: return
  }
  preds [bb57, bb63]
  succs []

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
      kind: drop(_53) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
      kind: drop(_51) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1382:18-1382:19)
      kind: drop(_47) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb30, bb66]
  succs [bb69]

bb68
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1381:69-1381:70)
      kind: drop(_48) -> [return: bb69, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1403:5-1403:6)
      kind: drop(_2) -> [return: bb70, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb7, bb9, bb11, bb12, bb13, bb16, bb17, bb18, bb19, bb22, bb23, bb28, bb31, bb34, bb35, bb36, bb37, bb40, bb43, bb44, bb45, bb50, bb52, bb53, bb55, bb58, bb67, bb68]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1359:5-1403:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb56, bb62, bb69]
  succs []

