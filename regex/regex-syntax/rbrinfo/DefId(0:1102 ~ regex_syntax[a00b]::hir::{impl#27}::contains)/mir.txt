bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:9-2720:35)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:9-2720:18)
  2: _4 = (_1.0: u32)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:9-2720:18)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:21-2720:35)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:21-2720:25)
  5: _6 = _2
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:21-2720:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:2720:21-2720:35)
      kind: _5 = hir::Look::as_repr(move _6) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:34-2720:35)
  1: _3 = BitAnd(move _4, move _5)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:9-2720:35)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:34-2720:35)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:34-2720:35)
  4: _0 = Ne(move _3, const 0_u32)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:9-2720:40)
  5: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:2720:39-2720:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:2721:6-2721:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:2719:5-2721:6)
      kind: resume
  }
  preds [bb0]
  succs []

