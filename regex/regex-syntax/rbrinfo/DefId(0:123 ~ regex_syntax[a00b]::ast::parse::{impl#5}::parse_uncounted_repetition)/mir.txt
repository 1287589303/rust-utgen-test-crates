bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:31)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:24)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:17)
  4: _7 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:24)
      kind: _6 = ast::parse::ParserI::<'_, P>::char(move _7) -> [return: bb1, unwind: bb56]
  }
  preds []
  succs [bb1, bb56]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:23-1054:24)
  1: _5 = Eq(move _6, const '?')
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:13-1054:31)
      kind: switchInt(move _5) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:30-1054:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
      kind: goto -> bb10
  }
  preds [bb1]
  succs [bb10]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:30-1054:31)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:53)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:46)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:39)
  4: _10 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:46)
      kind: _9 = ast::parse::ParserI::<'_, P>::char(move _10) -> [return: bb4, unwind: bb56]
  }
  preds [bb1]
  succs [bb4, bb56]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:45-1054:46)
  1: _8 = Eq(move _9, const '*')
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:35-1054:53)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:52-1054:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
      kind: goto -> bb10
  }
  preds [bb4]
  succs [bb10]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:52-1054:53)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:75)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:68)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:61)
  4: _13 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:68)
      kind: _12 = ast::parse::ParserI::<'_, P>::char(move _13) -> [return: bb7, unwind: bb56]
  }
  preds [bb4]
  succs [bb7, bb56]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:67-1054:68)
  1: _11 = Eq(move _12, const '+')
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1054:57-1054:75)
      kind: switchInt(move _11) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:74-1054:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1054:74-1054:75)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1053:9-1055:10)
      kind: _14 = core::panicking::panic(const "assertion failed: self.char() == '?' || self.char() == '*' || self.char() == '+'") -> bb56
  }
  preds [bb7]
  succs [bb56]

bb10
  0: _4 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1055:10-1055:10)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1055:9-1055:10)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1055:9-1055:10)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1055:9-1055:10)
  4: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1055:9-1055:10)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1056:13-1056:21)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1056:24-1056:28)
  7: _16 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1056:24-1056:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1056:24-1056:34)
      kind: _15 = ast::parse::ParserI::<'_, P>::pos(move _16) -> [return: bb11, unwind: bb56]
  }
  preds [bb2, bb5, bb8]
  succs [bb11, bb56]

bb11
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1056:33-1056:34)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1056:13-1056:21)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:13-1057:16)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:36)
  5: _19 = &mut (_2.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
      kind: _18 = std::vec::Vec::<ast::Ast>::pop(move _19) -> [return: bb12, unwind: bb56]
  }
  preds [bb10]
  succs [bb12, bb56]

bb12
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:41-1057:42)
  1: PlaceMention(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
  2: _20 = discriminant(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1057:19-1057:42)
      kind: switchInt(move _20) -> [0: bb15, 1: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1057:25-1057:42)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1058:13-1058:22)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:21-1061:79)
  1: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:21-1061:25)
  2: _24 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:21-1061:25)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:32-1061:43)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:32-1061:36)
  5: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:32-1061:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1061:32-1061:43)
      kind: _25 = ast::parse::ParserI::<'_, P>::span(move _26) -> [return: bb18, unwind: bb55]
  }
  preds [bb12, bb14]
  succs [bb18, bb55]

bb16
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1058:18-1058:21)
  1: _21 = move ((_18 as Some).0: ast::Ast)
    SourceInfo(regex-syntax/src/ast/parse.rs:1058:18-1058:21)
  2: _17 = move _21
    SourceInfo(regex-syntax/src/ast/parse.rs:1058:26-1058:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1058:28-1058:29)
      kind: drop(_21) -> [return: bb17, unwind: bb55]
  }
  preds [bb14]
  succs [bb17, bb55]

bb17
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1058:28-1058:29)
  1: FakeRead(ForLet(None), _17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1057:13-1057:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1064:10-1064:11)
      kind: drop(_18) -> [return: bb21, unwind: bb54]
  }
  preds [bb16]
  succs [bb21, bb54]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:42-1061:43)
  1: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:45-1061:78)
  2: _27 = ast::ErrorKind::RepetitionMissing
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:45-1061:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1061:21-1061:79)
      kind: _23 = ast::parse::ParserI::<'_, P>::error(move _24, move _25, move _27) -> [return: bb19, unwind: bb55]
  }
  preds [bb15]
  succs [bb19, bb55]

bb19
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:78-1061:79)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:78-1061:79)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1061:78-1061:79)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1060:24-1062:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1062:17-1062:18)
      kind: drop(_23) -> [return: bb20, unwind: bb55]
  }
  preds [bb18]
  succs [bb20, bb55]

bb20
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1062:17-1062:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1064:10-1064:11)
      kind: drop(_18) -> [return: bb48, unwind: bb56]
  }
  preds [bb19]
  succs [bb48, bb56]

bb21
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1064:10-1064:11)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1065:9-1072:10)
  2: PlaceMention(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1065:15-1065:18)
  3: _29 = discriminant(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1065:15-1065:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1065:9-1065:18)
      kind: switchInt(move _29) -> [0: bb23, 1: bb23, otherwise: bb22]
  }
  preds [bb17]
  succs [bb22, bb23, bb23]

bb22
  0: _28 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1071:18-1071:20)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1072:9-1072:10)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1073:13-1073:23)
  3: _36 = const true
    SourceInfo(regex-syntax/src/ast/parse.rs:1073:26-1073:30)
  4: FakeRead(ForLet(None), _36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1073:13-1073:23)
  5: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:9-1077:10)
  6: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:12-1074:23)
  7: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:12-1074:16)
  8: _39 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:12-1074:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:12-1074:23)
      kind: _38 = ast::parse::ParserI::<'_, P>::bump(move _39) -> [return: bb28, unwind: bb54]
  }
  preds [bb21, bb23]
  succs [bb28, bb54]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1066:13-1066:42)
      kind: falseEdge -> [real: bb24, imaginary: bb22]
  }
  preds [bb21, bb21]
  succs [bb22, bb24]

bb24
  0: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:21-1068:79)
  1: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:21-1068:25)
  2: _32 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:21-1068:25)
  3: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:32-1068:43)
  4: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:32-1068:36)
  5: _34 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:32-1068:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1068:32-1068:43)
      kind: _33 = ast::parse::ParserI::<'_, P>::span(move _34) -> [return: bb25, unwind: bb54]
  }
  preds [bb23]
  succs [bb25, bb54]

bb25
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:42-1068:43)
  1: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:45-1068:78)
  2: _35 = ast::ErrorKind::RepetitionMissing
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:45-1068:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1068:21-1068:79)
      kind: _31 = ast::parse::ParserI::<'_, P>::error(move _32, move _33, move _35) -> [return: bb26, unwind: bb54]
  }
  preds [bb24]
  succs [bb26, bb54]

bb26
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:78-1068:79)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:78-1068:79)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1068:78-1068:79)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1067:24-1069:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1069:17-1069:18)
      kind: drop(_31) -> [return: bb27, unwind: bb54]
  }
  preds [bb25]
  succs [bb27, bb54]

bb27
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1069:17-1069:18)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1072:9-1072:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_17) -> [return: bb49, unwind: bb56]
  }
  preds [bb26]
  succs [bb49, bb56]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:12-1074:23)
      kind: switchInt(move _38) -> [0: bb34, otherwise: bb29]
  }
  preds [bb22]
  succs [bb29, bb34]

bb29
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:22-1074:23)
  1: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:45)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:38)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:31)
  4: _42 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:38)
      kind: _41 = ast::parse::ParserI::<'_, P>::char(move _42) -> [return: bb30, unwind: bb54]
  }
  preds [bb28]
  succs [bb30, bb54]

bb30
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:37-1074:38)
  1: _40 = Eq(move _41, const '?')
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:27-1074:45)
      kind: switchInt(move _40) -> [0: bb33, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb33]

bb31
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:44-1074:45)
  1: _36 = const false
    SourceInfo(regex-syntax/src/ast/parse.rs:1075:13-1075:27)
  2: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1076:13-1076:24)
  3: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1076:13-1076:17)
  4: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1076:13-1076:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1076:13-1076:24)
      kind: _43 = ast::parse::ParserI::<'_, P>::bump(move _44) -> [return: bb32, unwind: bb54]
  }
  preds [bb30]
  succs [bb32, bb54]

bb32
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1076:23-1076:24)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1076:24-1076:25)
  2: _37 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:46-1077:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:9-1077:10)
      kind: goto -> bb36
  }
  preds [bb31]
  succs [bb36]

bb33
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:44-1074:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb30]
  succs [bb35]

bb34
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1074:22-1074:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb28]
  succs [bb35]

bb35
  0: _37 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1077:10-1077:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1074:9-1077:10)
      kind: goto -> bb36
  }
  preds [bb33, bb34]
  succs [bb36]

bb36
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1077:9-1077:10)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1077:9-1077:10)
  2: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1077:9-1077:10)
  3: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:9-1086:12)
  4: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:9-1078:20)
  5: _46 = &mut (_2.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:9-1078:20)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:26-1086:11)
  7: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:42-1086:10)
  8: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:50)
  9: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:29)
  10: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:29)
  11: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:22)
  12: _52 = &_17
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:29)
      kind: _51 = ast::Ast::span(move _52) -> [return: bb37, unwind: bb54]
  }
  preds [bb32, bb35]
  succs [bb37, bb54]

bb37
  0: _50 = (*_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:29)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:28-1079:29)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:39-1079:49)
  3: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:39-1079:43)
  4: _54 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:39-1079:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1079:39-1079:49)
      kind: _53 = ast::parse::ParserI::<'_, P>::pos(move _54) -> [return: bb38, unwind: bb54]
  }
  preds [bb36]
  succs [bb38, bb54]

bb38
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:48-1079:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1079:19-1079:50)
      kind: _49 = ast::Span::with_end(move _50, move _53) -> [return: bb39, unwind: bb54]
  }
  preds [bb37]
  succs [bb39, bb54]

bb39
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:49-1079:50)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1079:49-1079:50)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1080:17-1083:14)
  3: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:23-1081:54)
  4: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:33-1081:41)
  5: _57 = _15
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:33-1081:41)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:43-1081:53)
  7: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:43-1081:47)
  8: _59 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:43-1081:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1081:43-1081:53)
      kind: _58 = ast::parse::ParserI::<'_, P>::pos(move _59) -> [return: bb40, unwind: bb54]
  }
  preds [bb38]
  succs [bb40, bb54]

bb40
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:52-1081:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1081:23-1081:54)
      kind: _56 = ast::Span::new(move _57, move _58) -> [return: bb41, unwind: bb54]
  }
  preds [bb39]
  succs [bb41, bb54]

bb41
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:53-1081:54)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1081:53-1081:54)
  2: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1082:17-1082:21)
  3: _60 = move _3
    SourceInfo(regex-syntax/src/ast/parse.rs:1082:17-1082:21)
  4: _55 = ast::RepetitionOp { span: move _56, kind: move _60 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1080:17-1083:14)
  5: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1083:13-1083:14)
  6: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1083:13-1083:14)
  7: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1084:13-1084:19)
  8: _61 = _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1084:13-1084:19)
  9: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1085:18-1085:31)
  10: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1085:27-1085:30)
  11: _63 = move _17
    SourceInfo(regex-syntax/src/ast/parse.rs:1085:27-1085:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1085:18-1085:31)
      kind: _62 = std::boxed::Box::<ast::Ast>::new(move _63) -> [return: bb42, unwind: bb53]
  }
  preds [bb40]
  succs [bb42, bb53]

bb42
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1085:30-1085:31)
  1: _48 = ast::Repetition { span: move _49, op: move _55, greedy: move _61, ast: move _62 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1078:42-1086:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1086:9-1086:10)
      kind: drop(_62) -> [return: bb43, unwind: bb52]
  }
  preds [bb41]
  succs [bb43, bb52]

bb43
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:9-1086:10)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:9-1086:10)
  2: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:9-1086:10)
  3: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:9-1086:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1078:26-1086:11)
      kind: _47 = ast::Ast::repetition(move _48) -> [return: bb44, unwind: bb52]
  }
  preds [bb42]
  succs [bb44, bb52]

bb44
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:10-1086:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1078:9-1086:12)
      kind: _45 = std::vec::Vec::<ast::Ast>::push(move _46, move _47) -> [return: bb45, unwind: bb51]
  }
  preds [bb43]
  succs [bb45, bb51]

bb45
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:11-1086:12)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:11-1086:12)
  2: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:12-1086:13)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1086:12-1086:13)
  4: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1087:12-1087:18)
  5: _64 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1087:12-1087:18)
  6: _0 = core::result::Result::<ast::Concat, ast::Error>::Ok(move _64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1087:9-1087:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1087:18-1087:19)
      kind: drop(_64) -> [return: bb46, unwind: bb54]
  }
  preds [bb44]
  succs [bb46, bb54]

bb46
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1087:18-1087:19)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_17) -> [return: bb47, unwind: bb56]
  }
  preds [bb45]
  succs [bb47, bb56]

bb47
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_2) -> [return: bb50, unwind: bb57]
  }
  preds [bb46]
  succs [bb50, bb57]

bb48
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1064:10-1064:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb20]
  succs [bb49]

bb49
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_2) -> [return: bb50, unwind: bb57]
  }
  preds [bb27, bb48]
  succs [bb50, bb57]

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:6-1088:6)
      kind: return
  }
  preds [bb47, bb49]
  succs []

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1086:11-1086:12)
      kind: drop(_47) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb54]

bb52
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1086:10-1086:11)
      kind: drop(_48) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb42, bb43]
  succs [bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1085:30-1085:31)
      kind: drop(_63) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_17) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb17, bb22, bb24, bb25, bb26, bb29, bb31, bb36, bb37, bb38, bb39, bb40, bb45, bb51, bb52, bb53]
  succs [bb56]

bb55
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1064:10-1064:11)
      kind: drop(_18) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb15, bb16, bb18, bb19]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1088:5-1088:6)
      kind: drop(_2) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb6, bb9, bb10, bb11, bb20, bb27, bb46, bb54, bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1048:5-1088:6)
      kind: resume
  }
  preds [bb47, bb49, bb56]
  succs []

