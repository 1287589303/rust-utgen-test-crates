bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:43)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:36)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:43)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:36)
  4: _5 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:43)
      kind: _4 = <std::vec::Vec<I> as core::ops::Deref>::deref(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &(*_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:36)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:35-98:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:98:25-98:43)
      kind: _2 = core::slice::<impl [I]>::iter(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:42-98:43)
  1: _0 = hir::interval::IntervalSetIter::<'_, I>(move _2)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:9-98:44)
  2: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:98:43-98:44)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:99:5-99:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:99:6-99:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:97:5-99:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

