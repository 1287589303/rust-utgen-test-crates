bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/unicode.rs:944:5-944:29)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/unicode.rs:906:9-906:18)
  2: _3 = const 0_usize
    SourceInfo(regex-syntax/src/unicode.rs:906:21-906:22)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/unicode.rs:906:9-906:18)
  4: StorageLive(_4)
    SourceInfo(regex-syntax/src/unicode.rs:907:9-907:27)
  5: _4 = const false
    SourceInfo(regex-syntax/src/unicode.rs:907:30-907:35)
  6: FakeRead(ForLet(None), _4)
    SourceInfo(regex-syntax/src/unicode.rs:907:9-907:27)
  7: StorageLive(_5)
    SourceInfo(regex-syntax/src/unicode.rs:908:5-917:6)
  8: StorageLive(_6)
    SourceInfo(regex-syntax/src/unicode.rs:908:8-908:24)
  9: StorageLive(_7)
    SourceInfo(regex-syntax/src/unicode.rs:908:8-908:19)
  10: StorageLive(_8)
    SourceInfo(regex-syntax/src/unicode.rs:908:8-908:13)
  11: _8 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:908:8-908:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:908:8-908:19)
      kind: _7 = core::slice::<impl [u8]>::len(move _8) -> [return: bb1, unwind: bb72]
  }
  preds []
  succs [bb1, bb72]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/unicode.rs:908:18-908:19)
  1: _6 = Ge(move _7, const 2_usize)
    SourceInfo(regex-syntax/src/unicode.rs:908:8-908:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:908:8-908:24)
      kind: switchInt(move _6) -> [0: bb26, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb26]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:908:23-908:24)
  1: StorageLive(_9)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-910:50)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-910:37)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/unicode.rs:910:31-910:37)
  5: StorageLive(_13)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-910:31)
  6: _13 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-910:31)
  7: StorageLive(_14)
    SourceInfo(regex-syntax/src/unicode.rs:910:32-910:36)
  8: _14 = core::ops::Range::<usize> { start: const 0_usize, end: const 2_usize }
    SourceInfo(regex-syntax/src/unicode.rs:910:32-910:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:31-910:37)
      kind: _12 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _13, move _14) -> [return: bb3, unwind: bb72]
  }
  preds [bb1]
  succs [bb3, bb72]

bb3
  0: _11 = &(*_12)
    SourceInfo(regex-syntax/src/unicode.rs:910:26-910:37)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/unicode.rs:910:36-910:37)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/unicode.rs:910:36-910:37)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:50)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/unicode.rs:910:46-910:50)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:46)
  6: StorageLive(_18)
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:46)
  7: _18 = const b"is"
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:46)
  8: _17 = &(*_18)
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:46)
  9: StorageLive(_19)
    SourceInfo(regex-syntax/src/unicode.rs:910:47-910:49)
  10: _19 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/unicode.rs:910:47-910:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:46-910:50)
      kind: _16 = <[u8; 2] as core::ops::Index<core::ops::RangeFull>>::index(move _17, move _19) -> [return: bb4, unwind: bb72]
  }
  preds [bb2]
  succs [bb4, bb72]

bb4
  0: _15 = &(*_16)
    SourceInfo(regex-syntax/src/unicode.rs:910:41-910:50)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-910:50)
      kind: _10 = <[u8] as core::cmp::PartialEq>::eq(move _11, move _15) -> [return: bb5, unwind: bb72]
  }
  preds [bb3]
  succs [bb5, bb72]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-910:50)
      kind: switchInt(move _10) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  4: StorageDead(_11)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
      kind: goto -> bb17
  }
  preds [bb5]
  succs [bb17]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  4: StorageDead(_11)
    SourceInfo(regex-syntax/src/unicode.rs:910:49-910:50)
  5: StorageLive(_20)
    SourceInfo(regex-syntax/src/unicode.rs:911:16-911:40)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/unicode.rs:911:16-911:27)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/unicode.rs:911:21-911:27)
  8: StorageLive(_23)
    SourceInfo(regex-syntax/src/unicode.rs:911:16-911:21)
  9: _23 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:911:16-911:21)
  10: StorageLive(_24)
    SourceInfo(regex-syntax/src/unicode.rs:911:22-911:26)
  11: _24 = core::ops::Range::<usize> { start: const 0_usize, end: const 2_usize }
    SourceInfo(regex-syntax/src/unicode.rs:911:22-911:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:911:21-911:27)
      kind: _22 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _23, move _24) -> [return: bb8, unwind: bb72]
  }
  preds [bb5]
  succs [bb8, bb72]

bb8
  0: _21 = &(*_22)
    SourceInfo(regex-syntax/src/unicode.rs:911:16-911:27)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/unicode.rs:911:26-911:27)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/unicode.rs:911:26-911:27)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:40)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/unicode.rs:911:36-911:40)
  5: StorageLive(_27)
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:36)
  6: StorageLive(_28)
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:36)
  7: _28 = const b"IS"
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:36)
  8: _27 = &(*_28)
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:36)
  9: StorageLive(_29)
    SourceInfo(regex-syntax/src/unicode.rs:911:37-911:39)
  10: _29 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/unicode.rs:911:37-911:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:911:36-911:40)
      kind: _26 = <[u8; 2] as core::ops::Index<core::ops::RangeFull>>::index(move _27, move _29) -> [return: bb9, unwind: bb72]
  }
  preds [bb7]
  succs [bb9, bb72]

bb9
  0: _25 = &(*_26)
    SourceInfo(regex-syntax/src/unicode.rs:911:31-911:40)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:911:16-911:40)
      kind: _20 = <[u8] as core::cmp::PartialEq>::eq(move _21, move _25) -> [return: bb10, unwind: bb72]
  }
  preds [bb8]
  succs [bb10, bb72]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:911:16-911:40)
      kind: switchInt(move _20) -> [0: bb12, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  4: StorageDead(_21)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb12
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  4: StorageDead(_21)
    SourceInfo(regex-syntax/src/unicode.rs:911:39-911:40)
  5: StorageLive(_30)
    SourceInfo(regex-syntax/src/unicode.rs:912:16-912:40)
  6: StorageLive(_31)
    SourceInfo(regex-syntax/src/unicode.rs:912:16-912:27)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/unicode.rs:912:21-912:27)
  8: StorageLive(_33)
    SourceInfo(regex-syntax/src/unicode.rs:912:16-912:21)
  9: _33 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:912:16-912:21)
  10: StorageLive(_34)
    SourceInfo(regex-syntax/src/unicode.rs:912:22-912:26)
  11: _34 = core::ops::Range::<usize> { start: const 0_usize, end: const 2_usize }
    SourceInfo(regex-syntax/src/unicode.rs:912:22-912:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:912:21-912:27)
      kind: _32 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _33, move _34) -> [return: bb13, unwind: bb72]
  }
  preds [bb10]
  succs [bb13, bb72]

bb13
  0: _31 = &(*_32)
    SourceInfo(regex-syntax/src/unicode.rs:912:16-912:27)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/unicode.rs:912:26-912:27)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/unicode.rs:912:26-912:27)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:40)
  4: StorageLive(_36)
    SourceInfo(regex-syntax/src/unicode.rs:912:36-912:40)
  5: StorageLive(_37)
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:36)
  6: StorageLive(_38)
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:36)
  7: _38 = const b"iS"
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:36)
  8: _37 = &(*_38)
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:36)
  9: StorageLive(_39)
    SourceInfo(regex-syntax/src/unicode.rs:912:37-912:39)
  10: _39 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/unicode.rs:912:37-912:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:912:36-912:40)
      kind: _36 = <[u8; 2] as core::ops::Index<core::ops::RangeFull>>::index(move _37, move _39) -> [return: bb14, unwind: bb72]
  }
  preds [bb12]
  succs [bb14, bb72]

bb14
  0: _35 = &(*_36)
    SourceInfo(regex-syntax/src/unicode.rs:912:31-912:40)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  2: StorageDead(_37)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:912:16-912:40)
      kind: _30 = <[u8] as core::cmp::PartialEq>::eq(move _31, move _35) -> [return: bb15, unwind: bb72]
  }
  preds [bb13]
  succs [bb15, bb72]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:912:16-912:40)
      kind: switchInt(move _30) -> [0: bb18, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  3: StorageDead(_32)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  4: StorageDead(_31)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: _9 = const true
    SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
      kind: goto -> bb22
  }
  preds [bb6, bb11, bb16]
  succs [bb22]

bb18
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  3: StorageDead(_32)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  4: StorageDead(_31)
    SourceInfo(regex-syntax/src/unicode.rs:912:39-912:40)
  5: StorageLive(_40)
    SourceInfo(regex-syntax/src/unicode.rs:913:16-913:27)
  6: StorageLive(_41)
    SourceInfo(regex-syntax/src/unicode.rs:913:21-913:27)
  7: StorageLive(_42)
    SourceInfo(regex-syntax/src/unicode.rs:913:16-913:21)
  8: _42 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:913:16-913:21)
  9: StorageLive(_43)
    SourceInfo(regex-syntax/src/unicode.rs:913:22-913:26)
  10: _43 = core::ops::Range::<usize> { start: const 0_usize, end: const 2_usize }
    SourceInfo(regex-syntax/src/unicode.rs:913:22-913:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:913:21-913:27)
      kind: _41 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _42, move _43) -> [return: bb19, unwind: bb72]
  }
  preds [bb15]
  succs [bb19, bb72]

bb19
  0: _40 = &(*_41)
    SourceInfo(regex-syntax/src/unicode.rs:913:16-913:27)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/unicode.rs:913:26-913:27)
  2: StorageDead(_42)
    SourceInfo(regex-syntax/src/unicode.rs:913:26-913:27)
  3: StorageLive(_44)
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:40)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/unicode.rs:913:36-913:40)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:36)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:36)
  7: _47 = const b"Is"
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:36)
  8: _46 = &(*_47)
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:36)
  9: StorageLive(_48)
    SourceInfo(regex-syntax/src/unicode.rs:913:37-913:39)
  10: _48 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/unicode.rs:913:37-913:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:913:36-913:40)
      kind: _45 = <[u8; 2] as core::ops::Index<core::ops::RangeFull>>::index(move _46, move _48) -> [return: bb20, unwind: bb72]
  }
  preds [bb18]
  succs [bb20, bb72]

bb20
  0: _44 = &(*_45)
    SourceInfo(regex-syntax/src/unicode.rs:913:31-913:40)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  2: StorageDead(_46)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:913:16-913:40)
      kind: _9 = <[u8] as core::cmp::PartialEq>::eq(move _40, move _44) -> [return: bb21, unwind: bb72]
  }
  preds [bb19]
  succs [bb21, bb72]

bb21
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  3: StorageDead(_41)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  4: StorageDead(_40)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:910:26-913:40)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  3: _4 = move _9
    SourceInfo(regex-syntax/src/unicode.rs:910:9-913:40)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/unicode.rs:913:39-913:40)
  5: StorageLive(_49)
    SourceInfo(regex-syntax/src/unicode.rs:914:12-914:26)
  6: _49 = _4
    SourceInfo(regex-syntax/src/unicode.rs:914:12-914:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:914:12-914:26)
      kind: switchInt(move _49) -> [0: bb24, otherwise: bb23]
  }
  preds [bb17, bb21]
  succs [bb23, bb24]

bb23
  0: _3 = const 2_usize
    SourceInfo(regex-syntax/src/unicode.rs:915:13-915:22)
  1: _5 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:914:27-916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:914:9-916:10)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb24
  0: _5 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:916:10-916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:914:9-916:10)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb25
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/unicode.rs:916:9-916:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:908:5-917:6)
      kind: goto -> bb27
  }
  preds [bb23, bb24]
  succs [bb27]

bb26
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:908:23-908:24)
  1: _5 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:917:6-917:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:908:5-917:6)
      kind: goto -> bb27
  }
  preds [bb1]
  succs [bb27]

bb27
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/unicode.rs:917:5-917:6)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/unicode.rs:917:5-917:6)
  2: StorageLive(_50)
    SourceInfo(regex-syntax/src/unicode.rs:918:9-918:23)
  3: _50 = const 0_usize
    SourceInfo(regex-syntax/src/unicode.rs:918:26-918:27)
  4: FakeRead(ForLet(None), _50)
    SourceInfo(regex-syntax/src/unicode.rs:918:9-918:23)
  5: StorageLive(_51)
    SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
  6: StorageLive(_52)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  7: StorageLive(_53)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  8: StorageLive(_54)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:19)
  9: _54 = _3
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:19)
  10: StorageLive(_55)
    SourceInfo(regex-syntax/src/unicode.rs:919:21-919:32)
  11: StorageLive(_56)
    SourceInfo(regex-syntax/src/unicode.rs:919:21-919:26)
  12: _56 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:919:21-919:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:21-919:32)
      kind: _55 = core::slice::<impl [u8]>::len(move _56) -> [return: bb28, unwind: bb72]
  }
  preds [bb25, bb26]
  succs [bb28, bb72]

bb28
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/unicode.rs:919:31-919:32)
  1: _53 = core::ops::Range::<usize> { start: move _54, end: move _55 }
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  2: StorageDead(_55)
    SourceInfo(regex-syntax/src/unicode.rs:919:31-919:32)
  3: StorageDead(_54)
    SourceInfo(regex-syntax/src/unicode.rs:919:31-919:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
      kind: _52 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _53) -> [return: bb29, unwind: bb72]
  }
  preds [bb27]
  succs [bb29, bb72]

bb29
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/unicode.rs:919:31-919:32)
  1: PlaceMention(_52)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  3: _57 = move _52
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
      kind: goto -> bb30
  }
  preds [bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
      kind: falseUnwind -> [real: bb31, unwind: bb72]
  }
  preds [bb29, bb58, bb59]
  succs [bb31, bb72]

bb31
  0: StorageLive(_59)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  1: StorageLive(_60)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  4: _62 = &mut _57
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  5: _61 = &mut (*_62)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
      kind: _60 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _61) -> [return: bb32, unwind: bb72]
  }
  preds [bb30]
  succs [bb32, bb72]

bb32
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/unicode.rs:919:31-919:32)
  1: PlaceMention(_60)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  2: _63 = discriminant(_60)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
      kind: switchInt(move _63) -> [0: bb34, 1: bb35, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:14-919:32)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: StorageLive(_65)
    SourceInfo(regex-syntax/src/unicode.rs:919:9-919:10)
  1: _65 = ((_60 as Some).0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:919:9-919:10)
  2: StorageLive(_66)
    SourceInfo(regex-syntax/src/unicode.rs:923:13-923:14)
  3: StorageLive(_67)
    SourceInfo(regex-syntax/src/unicode.rs:923:23-923:24)
  4: _67 = _65
    SourceInfo(regex-syntax/src/unicode.rs:923:23-923:24)
  5: _68 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:923:17-923:25)
  6: _69 = Lt(_67, _68)
    SourceInfo(regex-syntax/src/unicode.rs:923:17-923:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:923:17-923:25)
      kind: assert(move _69, "index out of bounds: the length is {} but the index is {}", move _68, _67) -> [success: bb37, unwind: bb72]
  }
  preds [bb32, bb34]
  succs [bb37, bb72]

bb36
  0: _51 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
  1: StorageDead(_62)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  2: StorageDead(_60)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  3: StorageDead(_59)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  4: StorageDead(_57)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  5: StorageDead(_52)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  6: StorageDead(_51)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  7: StorageLive(_96)
    SourceInfo(regex-syntax/src/unicode.rs:938:5-943:6)
  8: StorageLive(_97)
    SourceInfo(regex-syntax/src/unicode.rs:938:8-938:22)
  9: _97 = _4
    SourceInfo(regex-syntax/src/unicode.rs:938:8-938:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:8-938:22)
      kind: switchInt(move _97) -> [0: bb69, otherwise: bb60]
  }
  preds [bb34]
  succs [bb60, bb69]

bb37
  0: _66 = (*_1)[_67]
    SourceInfo(regex-syntax/src/unicode.rs:923:17-923:25)
  1: FakeRead(ForLet(None), _66)
    SourceInfo(regex-syntax/src/unicode.rs:923:13-923:14)
  2: StorageDead(_67)
    SourceInfo(regex-syntax/src/unicode.rs:923:25-923:26)
  3: StorageLive(_70)
    SourceInfo(regex-syntax/src/unicode.rs:924:12-924:21)
  4: StorageLive(_71)
    SourceInfo(regex-syntax/src/unicode.rs:924:12-924:13)
  5: _71 = _66
    SourceInfo(regex-syntax/src/unicode.rs:924:12-924:13)
  6: _70 = Eq(move _71, const 32_u8)
    SourceInfo(regex-syntax/src/unicode.rs:924:12-924:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:12-924:21)
      kind: switchInt(move _70) -> [0: bb39, otherwise: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/unicode.rs:924:20-924:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:48-926:10)
      kind: goto -> bb59
  }
  preds [bb37]
  succs [bb59]

bb39
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/unicode.rs:924:20-924:21)
  1: StorageLive(_72)
    SourceInfo(regex-syntax/src/unicode.rs:924:25-924:34)
  2: StorageLive(_73)
    SourceInfo(regex-syntax/src/unicode.rs:924:25-924:26)
  3: _73 = _66
    SourceInfo(regex-syntax/src/unicode.rs:924:25-924:26)
  4: _72 = Eq(move _73, const 95_u8)
    SourceInfo(regex-syntax/src/unicode.rs:924:25-924:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:25-924:34)
      kind: switchInt(move _72) -> [0: bb41, otherwise: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/unicode.rs:924:33-924:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:48-926:10)
      kind: goto -> bb59
  }
  preds [bb39]
  succs [bb59]

bb41
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/unicode.rs:924:33-924:34)
  1: StorageLive(_74)
    SourceInfo(regex-syntax/src/unicode.rs:924:38-924:47)
  2: StorageLive(_75)
    SourceInfo(regex-syntax/src/unicode.rs:924:38-924:39)
  3: _75 = _66
    SourceInfo(regex-syntax/src/unicode.rs:924:38-924:39)
  4: _74 = Eq(move _75, const 45_u8)
    SourceInfo(regex-syntax/src/unicode.rs:924:38-924:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:38-924:47)
      kind: switchInt(move _74) -> [0: bb43, otherwise: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/unicode.rs:924:46-924:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:924:48-926:10)
      kind: goto -> bb59
  }
  preds [bb41]
  succs [bb59]

bb43
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/unicode.rs:924:46-924:47)
  1: StorageLive(_77)
    SourceInfo(regex-syntax/src/unicode.rs:926:19-926:28)
  2: StorageLive(_78)
    SourceInfo(regex-syntax/src/unicode.rs:926:27-926:28)
  3: _78 = _66
    SourceInfo(regex-syntax/src/unicode.rs:926:27-926:28)
  4: _77 = Le(const 65_u8, move _78)
    SourceInfo(regex-syntax/src/unicode.rs:926:19-926:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:926:19-926:28)
      kind: switchInt(move _77) -> [0: bb51, otherwise: bb44]
  }
  preds [bb41]
  succs [bb44, bb51]

bb44
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/unicode.rs:926:27-926:28)
  1: StorageLive(_79)
    SourceInfo(regex-syntax/src/unicode.rs:926:32-926:41)
  2: StorageLive(_80)
    SourceInfo(regex-syntax/src/unicode.rs:926:32-926:33)
  3: _80 = _66
    SourceInfo(regex-syntax/src/unicode.rs:926:32-926:33)
  4: _79 = Le(move _80, const 90_u8)
    SourceInfo(regex-syntax/src/unicode.rs:926:32-926:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:926:32-926:41)
      kind: switchInt(move _79) -> [0: bb50, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb50]

bb45
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/unicode.rs:926:40-926:41)
  1: StorageLive(_81)
    SourceInfo(regex-syntax/src/unicode.rs:927:33-927:34)
  2: _81 = _66
    SourceInfo(regex-syntax/src/unicode.rs:927:33-927:34)
  3: StorageLive(_82)
    SourceInfo(regex-syntax/src/unicode.rs:927:37-927:50)
  4: _83 = SubWithOverflow(const 97_u8, const 65_u8)
    SourceInfo(regex-syntax/src/unicode.rs:927:37-927:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:927:37-927:50)
      kind: assert(!move (_83.1: bool), "attempt to compute `{} - {}`, which would overflow", const 97_u8, const 65_u8) -> [success: bb46, unwind: bb72]
  }
  preds [bb44]
  succs [bb46, bb72]

bb46
  0: _82 = move (_83.0: u8)
    SourceInfo(regex-syntax/src/unicode.rs:927:37-927:50)
  1: _84 = AddWithOverflow(_81, _82)
    SourceInfo(regex-syntax/src/unicode.rs:927:33-927:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:927:33-927:50)
      kind: assert(!move (_84.1: bool), "attempt to compute `{} + {}`, which would overflow", move _81, move _82) -> [success: bb47, unwind: bb72]
  }
  preds [bb45]
  succs [bb47, bb72]

bb47
  0: StorageLive(_85)
    SourceInfo(regex-syntax/src/unicode.rs:927:19-927:29)
  1: _85 = _50
    SourceInfo(regex-syntax/src/unicode.rs:927:19-927:29)
  2: _86 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:927:13-927:30)
  3: _87 = Lt(_85, _86)
    SourceInfo(regex-syntax/src/unicode.rs:927:13-927:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:927:13-927:30)
      kind: assert(move _87, "index out of bounds: the length is {} but the index is {}", move _86, _85) -> [success: bb48, unwind: bb72]
  }
  preds [bb46]
  succs [bb48, bb72]

bb48
  0: (*_1)[_85] = move (_84.0: u8)
    SourceInfo(regex-syntax/src/unicode.rs:927:13-927:50)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/unicode.rs:927:49-927:50)
  2: StorageDead(_81)
    SourceInfo(regex-syntax/src/unicode.rs:927:49-927:50)
  3: StorageDead(_85)
    SourceInfo(regex-syntax/src/unicode.rs:927:50-927:51)
  4: _88 = AddWithOverflow(_50, const 1_usize)
    SourceInfo(regex-syntax/src/unicode.rs:928:13-928:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:928:13-928:28)
      kind: assert(!move (_88.1: bool), "attempt to compute `{} + {}`, which would overflow", _50, const 1_usize) -> [success: bb49, unwind: bb72]
  }
  preds [bb47]
  succs [bb49, bb72]

bb49
  0: _50 = move (_88.0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:928:13-928:28)
  1: _59 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:926:42-929:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:926:16-932:10)
      kind: goto -> bb58
  }
  preds [bb48]
  succs [bb58]

bb50
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/unicode.rs:926:40-926:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb44]
  succs [bb52]

bb51
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/unicode.rs:926:27-926:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb52
  }
  preds [bb43]
  succs [bb52]

bb52
  0: StorageLive(_89)
    SourceInfo(regex-syntax/src/unicode.rs:929:19-929:28)
  1: StorageLive(_90)
    SourceInfo(regex-syntax/src/unicode.rs:929:19-929:20)
  2: _90 = _66
    SourceInfo(regex-syntax/src/unicode.rs:929:19-929:20)
  3: _89 = Le(move _90, const 127_u8)
    SourceInfo(regex-syntax/src/unicode.rs:929:19-929:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:929:19-929:28)
      kind: switchInt(move _89) -> [0: bb56, otherwise: bb53]
  }
  preds [bb50, bb51]
  succs [bb53, bb56]

bb53
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/unicode.rs:929:27-929:28)
  1: StorageLive(_91)
    SourceInfo(regex-syntax/src/unicode.rs:930:33-930:34)
  2: _91 = _66
    SourceInfo(regex-syntax/src/unicode.rs:930:33-930:34)
  3: StorageLive(_92)
    SourceInfo(regex-syntax/src/unicode.rs:930:19-930:29)
  4: _92 = _50
    SourceInfo(regex-syntax/src/unicode.rs:930:19-930:29)
  5: _93 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:930:13-930:30)
  6: _94 = Lt(_92, _93)
    SourceInfo(regex-syntax/src/unicode.rs:930:13-930:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:930:13-930:30)
      kind: assert(move _94, "index out of bounds: the length is {} but the index is {}", move _93, _92) -> [success: bb54, unwind: bb72]
  }
  preds [bb52]
  succs [bb54, bb72]

bb54
  0: (*_1)[_92] = move _91
    SourceInfo(regex-syntax/src/unicode.rs:930:13-930:34)
  1: StorageDead(_91)
    SourceInfo(regex-syntax/src/unicode.rs:930:33-930:34)
  2: StorageDead(_92)
    SourceInfo(regex-syntax/src/unicode.rs:930:34-930:35)
  3: _95 = AddWithOverflow(_50, const 1_usize)
    SourceInfo(regex-syntax/src/unicode.rs:931:13-931:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:931:13-931:28)
      kind: assert(!move (_95.1: bool), "attempt to compute `{} + {}`, which would overflow", _50, const 1_usize) -> [success: bb55, unwind: bb72]
  }
  preds [bb53]
  succs [bb55, bb72]

bb55
  0: _50 = move (_95.0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:931:13-931:28)
  1: _59 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:929:29-932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:929:16-932:10)
      kind: goto -> bb57
  }
  preds [bb54]
  succs [bb57]

bb56
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/unicode.rs:929:27-929:28)
  1: _59 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:932:10-932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:929:16-932:10)
      kind: goto -> bb57
  }
  preds [bb52]
  succs [bb57]

bb57
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:926:16-932:10)
      kind: goto -> bb58
  }
  preds [bb55, bb56]
  succs [bb58]

bb58
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  3: StorageDead(_72)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  4: StorageDead(_70)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  5: StorageDead(_66)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  6: StorageDead(_65)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  7: StorageDead(_62)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  8: StorageDead(_60)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  9: StorageDead(_59)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  10: _58 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:919:5-933:6)
      kind: goto -> bb30
  }
  preds [bb49, bb57]
  succs [bb30]

bb59
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  1: StorageDead(_72)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  2: StorageDead(_70)
    SourceInfo(regex-syntax/src/unicode.rs:932:9-932:10)
  3: StorageDead(_66)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  4: StorageDead(_65)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  5: StorageDead(_62)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  6: StorageDead(_60)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  7: StorageDead(_59)
    SourceInfo(regex-syntax/src/unicode.rs:933:5-933:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb38, bb40, bb42]
  succs [bb30]

bb60
  0: StorageLive(_98)
    SourceInfo(regex-syntax/src/unicode.rs:938:26-938:41)
  1: StorageLive(_99)
    SourceInfo(regex-syntax/src/unicode.rs:938:26-938:36)
  2: _99 = _50
    SourceInfo(regex-syntax/src/unicode.rs:938:26-938:36)
  3: _98 = Eq(move _99, const 1_usize)
    SourceInfo(regex-syntax/src/unicode.rs:938:26-938:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:26-938:41)
      kind: switchInt(move _98) -> [0: bb68, otherwise: bb61]
  }
  preds [bb36]
  succs [bb61, bb68]

bb61
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/unicode.rs:938:40-938:41)
  1: StorageLive(_100)
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:61)
  2: StorageLive(_101)
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:53)
  3: StorageLive(_102)
    SourceInfo(regex-syntax/src/unicode.rs:938:51-938:52)
  4: _102 = const 0_usize
    SourceInfo(regex-syntax/src/unicode.rs:938:51-938:52)
  5: _103 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:53)
  6: _104 = Lt(_102, _103)
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:45-938:53)
      kind: assert(move _104, "index out of bounds: the length is {} but the index is {}", move _103, _102) -> [success: bb62, unwind: bb72]
  }
  preds [bb60]
  succs [bb62, bb72]

bb62
  0: _101 = (*_1)[_102]
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:53)
  1: _100 = Eq(move _101, const 99_u8)
    SourceInfo(regex-syntax/src/unicode.rs:938:45-938:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:45-938:61)
      kind: switchInt(move _100) -> [0: bb67, otherwise: bb63]
  }
  preds [bb61]
  succs [bb63, bb67]

bb63
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/unicode.rs:938:60-938:61)
  1: StorageDead(_101)
    SourceInfo(regex-syntax/src/unicode.rs:938:60-938:61)
  2: StorageLive(_105)
    SourceInfo(regex-syntax/src/unicode.rs:939:15-939:16)
  3: _105 = const 0_usize
    SourceInfo(regex-syntax/src/unicode.rs:939:15-939:16)
  4: _106 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:939:9-939:17)
  5: _107 = Lt(_105, _106)
    SourceInfo(regex-syntax/src/unicode.rs:939:9-939:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:939:9-939:17)
      kind: assert(move _107, "index out of bounds: the length is {} but the index is {}", move _106, _105) -> [success: bb64, unwind: bb72]
  }
  preds [bb62]
  succs [bb64, bb72]

bb64
  0: (*_1)[_105] = const 105_u8
    SourceInfo(regex-syntax/src/unicode.rs:939:9-939:24)
  1: StorageDead(_105)
    SourceInfo(regex-syntax/src/unicode.rs:939:24-939:25)
  2: StorageLive(_108)
    SourceInfo(regex-syntax/src/unicode.rs:940:15-940:16)
  3: _108 = const 1_usize
    SourceInfo(regex-syntax/src/unicode.rs:940:15-940:16)
  4: _109 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:940:9-940:17)
  5: _110 = Lt(_108, _109)
    SourceInfo(regex-syntax/src/unicode.rs:940:9-940:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:940:9-940:17)
      kind: assert(move _110, "index out of bounds: the length is {} but the index is {}", move _109, _108) -> [success: bb65, unwind: bb72]
  }
  preds [bb63]
  succs [bb65, bb72]

bb65
  0: (*_1)[_108] = const 115_u8
    SourceInfo(regex-syntax/src/unicode.rs:940:9-940:24)
  1: StorageDead(_108)
    SourceInfo(regex-syntax/src/unicode.rs:940:24-940:25)
  2: StorageLive(_111)
    SourceInfo(regex-syntax/src/unicode.rs:941:15-941:16)
  3: _111 = const 2_usize
    SourceInfo(regex-syntax/src/unicode.rs:941:15-941:16)
  4: _112 = Len((*_1))
    SourceInfo(regex-syntax/src/unicode.rs:941:9-941:17)
  5: _113 = Lt(_111, _112)
    SourceInfo(regex-syntax/src/unicode.rs:941:9-941:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:941:9-941:17)
      kind: assert(move _113, "index out of bounds: the length is {} but the index is {}", move _112, _111) -> [success: bb66, unwind: bb72]
  }
  preds [bb64]
  succs [bb66, bb72]

bb66
  0: (*_1)[_111] = const 99_u8
    SourceInfo(regex-syntax/src/unicode.rs:941:9-941:24)
  1: StorageDead(_111)
    SourceInfo(regex-syntax/src/unicode.rs:941:24-941:25)
  2: _50 = const 3_usize
    SourceInfo(regex-syntax/src/unicode.rs:942:9-942:23)
  3: _96 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:938:62-943:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:5-943:6)
      kind: goto -> bb70
  }
  preds [bb65]
  succs [bb70]

bb67
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/unicode.rs:938:60-938:61)
  1: StorageDead(_101)
    SourceInfo(regex-syntax/src/unicode.rs:938:60-938:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb62]
  succs [bb69]

bb68
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/unicode.rs:938:40-938:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb60]
  succs [bb69]

bb69
  0: _96 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:943:6-943:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:938:5-943:6)
      kind: goto -> bb70
  }
  preds [bb36, bb67, bb68]
  succs [bb70]

bb70
  0: StorageDead(_100)
    SourceInfo(regex-syntax/src/unicode.rs:943:5-943:6)
  1: StorageDead(_98)
    SourceInfo(regex-syntax/src/unicode.rs:943:5-943:6)
  2: StorageDead(_97)
    SourceInfo(regex-syntax/src/unicode.rs:943:5-943:6)
  3: StorageDead(_96)
    SourceInfo(regex-syntax/src/unicode.rs:943:5-943:6)
  4: StorageLive(_114)
    SourceInfo(regex-syntax/src/unicode.rs:944:5-944:29)
  5: StorageLive(_115)
    SourceInfo(regex-syntax/src/unicode.rs:944:15-944:29)
  6: StorageLive(_116)
    SourceInfo(regex-syntax/src/unicode.rs:944:10-944:15)
  7: _116 = &mut (*_1)
    SourceInfo(regex-syntax/src/unicode.rs:944:10-944:15)
  8: StorageLive(_117)
    SourceInfo(regex-syntax/src/unicode.rs:944:16-944:28)
  9: StorageLive(_118)
    SourceInfo(regex-syntax/src/unicode.rs:944:18-944:28)
  10: _118 = _50
    SourceInfo(regex-syntax/src/unicode.rs:944:18-944:28)
  11: _117 = core::ops::RangeTo::<usize> { end: move _118 }
    SourceInfo(regex-syntax/src/unicode.rs:944:16-944:28)
  12: StorageDead(_118)
    SourceInfo(regex-syntax/src/unicode.rs:944:27-944:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:944:15-944:29)
      kind: _115 = <[u8] as core::ops::IndexMut<core::ops::RangeTo<usize>>>::index_mut(move _116, move _117) -> [return: bb71, unwind: bb72]
  }
  preds [bb66, bb69]
  succs [bb71, bb72]

bb71
  0: StorageDead(_117)
    SourceInfo(regex-syntax/src/unicode.rs:944:28-944:29)
  1: StorageDead(_116)
    SourceInfo(regex-syntax/src/unicode.rs:944:28-944:29)
  2: _114 = &mut (*_115)
    SourceInfo(regex-syntax/src/unicode.rs:944:5-944:29)
  3: _2 = &mut (*_114)
    SourceInfo(regex-syntax/src/unicode.rs:944:5-944:29)
  4: StorageDead(_50)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  6: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  7: _0 = &mut (*_2)
    SourceInfo(regex-syntax/src/unicode.rs:944:5-944:29)
  8: StorageDead(_115)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  9: StorageDead(_114)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  10: StorageDead(_2)
    SourceInfo(regex-syntax/src/unicode.rs:945:1-945:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:945:2-945:2)
      kind: return
  }
  preds [bb70]
  succs []

bb72
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:902:1-945:2)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb7, bb8, bb9, bb12, bb13, bb14, bb18, bb19, bb20, bb27, bb28, bb30, bb31, bb35, bb45, bb46, bb47, bb48, bb53, bb54, bb61, bb63, bb64, bb65, bb70]
  succs []

