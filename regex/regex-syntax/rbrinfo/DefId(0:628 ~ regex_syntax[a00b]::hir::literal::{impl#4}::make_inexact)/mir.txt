bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:833:13-833:17)
  1: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:833:26-833:39)
  2: _3 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:833:26-833:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:833:20-833:39)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:833:26-833:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:833:26-833:39)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:834:13-834:17)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:835:18-835:30)
  1: _5 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:835:18-835:30)
  2: _2 = move _5
    SourceInfo(regex-syntax/src/hir/literal.rs:835:35-835:39)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:835:38-835:39)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/hir/literal.rs:833:13-833:17)
  5: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  7: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:24)
  8: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  9: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:24)
  10: _10 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: _9 = <std::vec::Vec<hir::literal::Literal> as core::ops::DerefMut>::deref_mut(move _10) -> [return: bb5, unwind: bb17]
  }
  preds [bb0, bb2]
  succs [bb5, bb17]

bb4
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:834:21-834:27)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:840:5-840:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:840:6-840:6)
      kind: goto -> bb16
  }
  preds [bb2]
  succs [bb16]

bb5
  0: _8 = &mut (*_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:24)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:23-837:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: _7 = core::slice::<impl [hir::literal::Literal]>::iter_mut(move _8) -> [return: bb6, unwind: bb17]
  }
  preds [bb3]
  succs [bb6, bb17]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:34-837:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: _6 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::IntoIterator>::into_iter(move _7) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:34-837:35)
  1: PlaceMention(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  3: _11 = move _6
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
      kind: falseUnwind -> [real: bb9, unwind: bb17]
  }
  preds [bb7, bb15]
  succs [bb9, bb17]

bb9
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  4: _16 = &mut _11
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  5: _15 = &mut (*_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: _14 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::Iterator>::next(move _15) -> [return: bb10, unwind: bb17]
  }
  preds [bb8]
  succs [bb10, bb17]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:34-837:35)
  1: PlaceMention(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  2: _17 = discriminant(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: switchInt(move _17) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:20-837:35)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:13-837:16)
  1: _19 = move ((_14 as Some).0: &mut hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:837:13-837:16)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:838:13-838:31)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:838:13-838:16)
  4: _21 = &mut (*_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:838:13-838:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:838:13-838:31)
      kind: _20 = hir::literal::Literal::make_inexact(move _21) -> [return: bb15, unwind: bb17]
  }
  preds [bb10, bb12]
  succs [bb15, bb17]

bb14
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  4: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  5: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  6: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  7: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:840:5-840:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:840:6-840:6)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:838:30-838:31)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:838:31-838:32)
  2: _13 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:837:36-839:10)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  4: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:839:9-839:10)
  7: _12 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:837:9-839:10)
      kind: goto -> bb8
  }
  preds [bb13]
  succs [bb8]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:840:6-840:6)
      kind: return
  }
  preds [bb4, bb14]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:832:5-840:6)
      kind: resume
  }
  preds [bb3, bb5, bb6, bb8, bb9, bb13]
  succs []

