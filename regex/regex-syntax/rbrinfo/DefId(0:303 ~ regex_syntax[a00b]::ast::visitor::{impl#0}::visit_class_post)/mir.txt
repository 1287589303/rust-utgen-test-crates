bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:375:9-382:10)
  1: PlaceMention((*_2))
    SourceInfo(regex-syntax/src/ast/visitor.rs:375:15-375:19)
  2: _5 = discriminant((*_2))
    SourceInfo(regex-syntax/src/ast/visitor.rs:375:15-375:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:375:9-375:19)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_2))
    SourceInfo(regex-syntax/src/ast/visitor.rs:375:15-375:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:375:15-375:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:376:13-376:36)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:379:35-379:37)
  1: _17 = (((*_2) as BinaryOp).0: &ast::ClassSetBinaryOp)
    SourceInfo(regex-syntax/src/ast/visitor.rs:379:35-379:37)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:59)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:24)
  6: _21 = &mut (*_3)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:24)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:56-380:58)
  8: _22 = &(*_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:56-380:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:59)
      kind: _20 = <V as ast::visitor::Visitor>::visit_class_set_binary_op_post(move _21, move _22) -> [return: bb13, unwind: bb36]
  }
  preds [bb0, bb2]
  succs [bb13, bb36]

bb4
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:376:31-376:35)
  1: _6 = (((*_2) as Item).0: &ast::ClassSetItem)
    SourceInfo(regex-syntax/src/ast/visitor.rs:376:31-376:35)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:56)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:24)
  6: _10 = &mut (*_3)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:24)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:51-377:55)
  8: _11 = &(*_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:51-377:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:56)
      kind: _9 = <V as ast::visitor::Visitor>::visit_class_set_item_post(move _10, move _11) -> [return: bb5, unwind: bb36]
  }
  preds [bb2]
  succs [bb5, bb36]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:55-377:56)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:55-377:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
      kind: _8 = <core::result::Result<(), <V as ast::visitor::Visitor>::Err> as core::ops::Try>::branch(move _9) -> [return: bb6, unwind: bb35]
  }
  preds [bb4]
  succs [bb6, bb35]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  1: PlaceMention(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  2: _12 = discriminant(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
      kind: switchInt(move _12) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  1: _16 = ((_8 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  2: _7 = _16
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
      kind: drop(_8) -> [return: bb12, unwind: bb36]
  }
  preds [bb6, bb8]
  succs [bb12, bb36]

bb10
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  1: _13 = move ((_8 as Break).0: core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  3: _15 = move _13
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:17-377:57)
      kind: _0 = <core::result::Result<(), <V as ast::visitor::Visitor>::Err> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>>>::from_residual(move _15) -> [return: bb11, unwind: bb32]
  }
  preds [bb8]
  succs [bb11, bb32]

bb11
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
      kind: drop(_13) -> [return: bb24, unwind: bb34]
  }
  preds [bb10]
  succs [bb24, bb34]

bb12
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/ast/visitor.rs:376:40-378:14)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:378:13-378:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:378:13-378:14)
      kind: goto -> bb21
  }
  preds [bb9]
  succs [bb21]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:58-380:59)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:58-380:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
      kind: _19 = <core::result::Result<(), <V as ast::visitor::Visitor>::Err> as core::ops::Try>::branch(move _20) -> [return: bb14, unwind: bb31]
  }
  preds [bb3]
  succs [bb14, bb31]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  1: PlaceMention(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  2: _23 = discriminant(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
      kind: switchInt(move _23) -> [0: bb17, 1: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  1: _27 = ((_19 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  2: _18 = _27
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
      kind: drop(_19) -> [return: bb20, unwind: bb36]
  }
  preds [bb14, bb16]
  succs [bb20, bb36]

bb18
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  1: _24 = move ((_19 as Break).0: core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  3: _26 = move _24
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:17-380:60)
      kind: _0 = <core::result::Result<(), <V as ast::visitor::Visitor>::Err> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, <V as ast::visitor::Visitor>::Err>>>::from_residual(move _26) -> [return: bb19, unwind: bb28]
  }
  preds [bb16]
  succs [bb19, bb28]

bb19
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
      kind: drop(_24) -> [return: bb22, unwind: bb30]
  }
  preds [bb18]
  succs [bb22, bb30]

bb20
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/ast/visitor.rs:379:42-381:14)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:381:13-381:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:381:13-381:14)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb21
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:382:9-382:10)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:383:12-383:14)
  2: _28 = ()
    SourceInfo(regex-syntax/src/ast/visitor.rs:383:12-383:14)
  3: _0 = core::result::Result::<(), <V as ast::visitor::Visitor>::Err>::Ok(move _28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:383:9-383:15)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/visitor.rs:383:14-383:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:384:6-384:6)
      kind: goto -> bb27
  }
  preds [bb12, bb20]
  succs [bb27]

bb22
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
      kind: drop(_19) -> [return: bb23, unwind: bb36]
  }
  preds [bb19]
  succs [bb23, bb36]

bb23
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/visitor.rs:381:13-381:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb22]
  succs [bb26]

bb24
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
      kind: drop(_8) -> [return: bb25, unwind: bb36]
  }
  preds [bb11]
  succs [bb25, bb36]

bb25
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/visitor.rs:378:13-378:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/visitor.rs:382:9-382:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:384:6-384:6)
      kind: goto -> bb27
  }
  preds [bb23, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:384:6-384:6)
      kind: return
  }
  preds [bb21, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
      kind: drop(_26) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
      kind: drop(_24) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:60-380:61)
      kind: drop(_19) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb19, bb29]
  succs [bb36]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:380:59-380:60)
      kind: drop(_20) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb36]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
      kind: drop(_15) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
      kind: drop(_13) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:57-377:58)
      kind: drop(_8) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb11, bb33]
  succs [bb36]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:377:56-377:57)
      kind: drop(_9) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/visitor.rs:370:5-384:6)
      kind: resume
  }
  preds [bb3, bb4, bb9, bb17, bb22, bb24, bb30, bb31, bb34, bb35]
  succs []

