bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:9-563:10)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:80)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:36)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:16)
  4: _7 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:16)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:31-560:35)
  6: _8 = &(*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:31-560:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:36)
      kind: _6 = hir::literal::Seq::max_cross_len(move _7, move _8) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:35-560:36)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:35-560:36)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:51-560:79)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:51-560:79)
  4: _10 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:51-560:79)
  5: _9 = {closure@regex-syntax/src/hir/literal.rs:560:51: 560:56} { self: move _10 }
    SourceInfo(regex-syntax/src/hir/literal.rs:560:51-560:79)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:55-560:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:80)
      kind: _5 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:560:51: 560:56}>(move _6, const false, move _9) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:560:12-560:80)
      kind: switchInt(move _5) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:79-560:80)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:79-560:80)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:562:13-562:33)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:562:13-562:17)
  4: _12 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:562:13-562:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:562:13-562:33)
      kind: _11 = hir::literal::Seq::make_infinite(move _12) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:562:32-562:33)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:562:33-562:34)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:561:9-563:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:560:9-563:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:79-560:80)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:560:79-560:80)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:563:10-563:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:560:9-563:10)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:563:9-563:10)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:563:9-563:10)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:564:9-568:10)
  3: PlaceMention(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:564:38-564:47)
  4: _14 = discriminant(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:564:38-564:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:564:16-564:35)
      kind: switchInt(move _14) -> [1: bb7, otherwise: bb10]
  }
  preds [bb4, bb5]
  succs [bb7, bb10]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:564:16-564:35)
      kind: falseEdge -> [real: bb8, imaginary: bb10]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:13-565:37)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:13-565:17)
  2: _16 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:565:13-565:17)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:32-565:36)
  4: _17 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:32-565:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:565:13-565:37)
      kind: _15 = hir::literal::Seq::cross_reverse(move _16, move _17) -> [return: bb9, unwind: bb19]
  }
  preds [bb7]
  succs [bb9, bb19]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:36-565:37)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:36-565:37)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:565:37-565:38)
  3: _13 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:564:48-566:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:564:9-568:10)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:13-567:37)
  1: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:13-567:17)
  2: _19 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:567:13-567:17)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:32-567:36)
  4: _20 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:32-567:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:567:13-567:37)
      kind: _18 = hir::literal::Seq::cross_forward(move _19, move _20) -> [return: bb11, unwind: bb19]
  }
  preds [bb6, bb7]
  succs [bb11, bb19]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:36-567:37)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:36-567:37)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:567:37-567:38)
  3: _13 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:566:16-568:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:564:9-568:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:568:9-568:10)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:9-569:68)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:67)
  3: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:27)
  4: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:21)
  5: _24 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:27)
      kind: _23 = hir::literal::Seq::len(move _24) -> [return: bb13, unwind: bb19]
  }
  preds [bb9, bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:26-569:27)
  1: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:41-569:66)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:41-569:66)
  3: _26 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:41-569:66)
  4: _25 = {closure@regex-syntax/src/hir/literal.rs:569:41: 569:44} { self: move _26 }
    SourceInfo(regex-syntax/src/hir/literal.rs:569:41-569:66)
  5: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:43-569:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:67)
      kind: _22 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:569:41: 569:44}>(move _23, const true, move _25) -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:569:17-569:67)
      kind: switchInt(move _22) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:66-569:67)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:66-569:67)
  2: _21 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:569:68-569:68)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:67-569:68)
  4: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:67-569:68)
  5: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:9-570:44)
  6: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:9-570:13)
  7: _29 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:9-570:13)
  8: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:34-570:43)
  9: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:34-570:43)
  10: _31 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:570:34-570:43)
  11: _30 = &mut (*_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:34-570:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:570:9-570:44)
      kind: _28 = hir::literal::Extractor::enforce_literal_len(move _29, move _30) -> [return: bb17, unwind: bb19]
  }
  preds [bb14]
  succs [bb17, bb19]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:66-569:67)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:66-569:67)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:569:9-569:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:569:9-569:68)
      kind: _27 = core::panicking::panic(const "assertion failed: seq1.len().map_or(true, |x| x <= self.limit_total)") -> bb19
  }
  preds [bb14]
  succs [bb19]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:43-570:44)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:43-570:44)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:44-570:45)
  3: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:570:44-570:45)
  4: _0 = move _2
    SourceInfo(regex-syntax/src/hir/literal.rs:571:9-571:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:572:5-572:6)
      kind: drop(_2) -> [return: bb18, unwind: bb20]
  }
  preds [bb15]
  succs [bb18, bb20]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:572:6-572:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:572:5-572:6)
      kind: drop(_2) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb8, bb10, bb12, bb13, bb15, bb16]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:559:5-572:6)
      kind: resume
  }
  preds [bb17, bb19]
  succs []

