bb0
  0: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1401:37-1401:50)
  1: _2 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1401:37-1401:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1401:16-1401:34)
      kind: switchInt(move _2) -> [1: bb1, otherwise: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1401:16-1401:34)
      kind: falseEdge -> [real: bb2, imaginary: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1401:21-1401:33)
  1: _3 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1401:21-1401:33)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:28)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:28)
  7: _8 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: _7 = <std::vec::Vec<hir::literal::Literal> as core::ops::DerefMut>::deref_mut(move _8) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: _6 = &mut (*_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:28)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:27-1402:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: _5 = core::slice::<impl [hir::literal::Literal]>::iter_mut(move _6) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:38-1402:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: _4 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:38-1402:39)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  3: _9 = move _4
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
      kind: falseUnwind -> [real: bb7, unwind: bb16]
  }
  preds [bb5, bb13]
  succs [bb7, bb16]

bb7
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  4: _14 = &mut _9
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  5: _13 = &mut (*_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: _12 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::Iterator>::next(move _13) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:38-1402:39)
  1: PlaceMention(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  2: _15 = discriminant(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: switchInt(move _15) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:24-1402:39)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:17-1402:20)
  1: _17 = move ((_12 as Some).0: &mut hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:17-1402:20)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1403:17-1403:30)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1403:17-1403:20)
  4: _19 = &mut (*_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1403:17-1403:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1403:17-1403:30)
      kind: _18 = hir::literal::Literal::reverse(move _19) -> [return: bb13, unwind: bb16]
  }
  preds [bb8, bb10]
  succs [bb13, bb16]

bb12
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  6: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  7: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1405:9-1405:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1401:9-1405:10)
      kind: goto -> bb15
  }
  preds [bb10]
  succs [bb15]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1403:29-1403:30)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1403:30-1403:31)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:40-1404:14)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  4: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  5: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  6: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1404:13-1404:14)
  7: _10 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1402:13-1404:14)
      kind: goto -> bb6
  }
  preds [bb11]
  succs [bb6]

bb14
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1405:10-1405:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1401:9-1405:10)
      kind: goto -> bb15
  }
  preds [bb0, bb1]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1406:6-1406:6)
      kind: return
  }
  preds [bb12, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1400:5-1406:6)
      kind: resume
  }
  preds [bb2, bb3, bb4, bb6, bb7, bb11]
  succs []

