{
  "regex-syntax/src/hir/mod.rs:2594:26:2594:36": [
    {
      "Bool": {
        "Other": "props.utf8"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2606:46:2606:72": [
    {
      "Bool": {
        "Other": "p.is_alternation_literal()"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2608:23:2608:38": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/mod.rs:2608:23:2608:38",
        "match_str": "p.minimum_len()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/mod.rs:2609:21:2609:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/mod.rs:2609:29:2609:53"
          },
          "regex-syntax/src/hir/mod.rs:2610:21:2610:30": {
            "pat": {
              "pat_str": "Some(len)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/mod.rs:2610:34:2616:22"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2604:46:2604:60": [
    {
      "Bool": {
        "Other": "p.is_literal()"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2604:29:2604:42": [
    {
      "Bool": {
        "Other": "props.literal"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2647:16:2647:68": [
    {
      "Bool": {
        "Other": "x.properties().maximum_len().map_or(true, |x| x > 0)"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2591:18:2591:31": [
    {
      "For": {
        "iter_var": "x",
        "iter_range": "concat.iter()"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2636:16:2636:68": [
    {
      "Bool": {
        "Other": "x.properties().maximum_len().map_or(true, |x| x > 0)"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2594:40:2594:51": [
    {
      "Bool": {
        "Other": "p.is_utf8()"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2619:16:2619:57": [
    {
      "Bool": {
        "Other": "let Some(maximum_len) = props.maximum_len"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2606:17:2606:42": [
    {
      "Bool": {
        "Other": "props.alternation_literal"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2620:23:2620:38": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/mod.rs:2620:23:2620:38",
        "match_str": "p.maximum_len()",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/mod.rs:2621:21:2621:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/mod.rs:2621:29:2621:53"
          },
          "regex-syntax/src/hir/mod.rs:2622:21:2622:30": {
            "pat": {
              "pat_str": "Some(len)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/mod.rs:2622:34:2624:22"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2642:15:2642:38": [
    {
      "Bool": {
        "Other": "let Some(x) = it.next()"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2607:16:2607:57": [
    {
      "Bool": {
        "Other": "let Some(minimum_len) = props.minimum_len"
      }
    }
  ],
  "regex-syntax/src/hir/mod.rs:2631:15:2631:38": [
    {
      "Bool": {
        "Other": "let Some(x) = it.next()"
      }
    }
  ]
}