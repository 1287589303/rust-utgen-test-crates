bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:9-456:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:12-454:33)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:12-454:16)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:12-454:16)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:27-454:32)
  5: _6 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:27-454:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:454:12-454:33)
      kind: _4 = <Self as hir::interval::Interval>::is_subset(move _5, move _6) -> [return: bb1, unwind: bb36]
  }
  preds []
  succs [bb1, bb36]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:454:12-454:33)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:32-454:33)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:32-454:33)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:455:21-455:25)
  3: _8 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:455:21-455:25)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:455:27-455:31)
  5: _9 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:455:27-455:31)
  6: _0 = (move _8, move _9)
    SourceInfo(regex-syntax/src/hir/interval.rs:455:20-455:32)
  7: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:455:31-455:32)
  8: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:455:31-455:32)
  9: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:456:9-456:10)
  10: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:456:9-456:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb1]
  succs [bb35]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:32-454:33)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:454:32-454:33)
  2: _3 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:456:10-456:10)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:456:9-456:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:456:9-456:10)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:9-459:10)
  6: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:12-457:45)
  7: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:12-457:16)
  8: _12 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:12-457:16)
  9: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:39-457:44)
  10: _13 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:39-457:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:457:12-457:45)
      kind: _11 = <Self as hir::interval::Interval>::is_intersection_empty(move _12, move _13) -> [return: bb4, unwind: bb36]
  }
  preds [bb1]
  succs [bb4, bb36]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:457:12-457:45)
      kind: switchInt(move _11) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:44-457:45)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:44-457:45)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:21-458:39)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:26-458:38)
  4: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:26-458:30)
  5: _17 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:26-458:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:458:26-458:38)
      kind: _16 = <Self as core::clone::Clone>::clone(move _17) -> [return: bb6, unwind: bb36]
  }
  preds [bb4]
  succs [bb6, bb36]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:37-458:38)
  1: _15 = core::option::Option::<Self>::Some(move _16)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:21-458:39)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:38-458:39)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:41-458:45)
  4: _18 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:458:41-458:45)
  5: _0 = (move _15, move _18)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:20-458:46)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:45-458:46)
  7: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:458:45-458:46)
  8: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:459:9-459:10)
  9: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:459:9-459:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb35
  }
  preds [bb5]
  succs [bb35]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:44-457:45)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:457:44-457:45)
  2: _10 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:459:10-459:10)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:459:9-459:10)
  4: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:459:9-459:10)
  5: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:13-460:22)
  6: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:38)
  7: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:38)
  8: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:30)
  9: _22 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:38)
      kind: _21 = <Self as hir::interval::Interval>::lower(move _22) -> [return: bb8, unwind: bb36]
  }
  preds [bb4]
  succs [bb8, bb36]

bb8
  0: _20 = &_21
    SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:38)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:37-460:38)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:53)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:53)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:45)
  5: _25 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:53)
      kind: _24 = <Self as hir::interval::Interval>::lower(move _25) -> [return: bb9, unwind: bb36]
  }
  preds [bb7]
  succs [bb9, bb36]

bb9
  0: _23 = &_24
    SourceInfo(regex-syntax/src/hir/interval.rs:460:41-460:53)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:52-460:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:460:25-460:53)
      kind: _19 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::gt(move _20, move _23) -> [return: bb10, unwind: bb36]
  }
  preds [bb8]
  succs [bb10, bb36]

bb10
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:52-460:53)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:52-460:53)
  2: FakeRead(ForLet(None), _19)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:13-460:22)
  3: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:53-460:54)
  4: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:460:53-460:54)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:13-461:22)
  6: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:38)
  7: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:38)
  8: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:30)
  9: _29 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:38)
      kind: _28 = <Self as hir::interval::Interval>::upper(move _29) -> [return: bb11, unwind: bb36]
  }
  preds [bb9]
  succs [bb11, bb36]

bb11
  0: _27 = &_28
    SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:38)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:37-461:38)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:53)
  3: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:53)
  4: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:45)
  5: _32 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:53)
      kind: _31 = <Self as hir::interval::Interval>::upper(move _32) -> [return: bb12, unwind: bb36]
  }
  preds [bb10]
  succs [bb12, bb36]

bb12
  0: _30 = &_31
    SourceInfo(regex-syntax/src/hir/interval.rs:461:41-461:53)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:52-461:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:461:25-461:53)
      kind: _26 = <<Self as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::lt(move _27, move _30) -> [return: bb13, unwind: bb36]
  }
  preds [bb11]
  succs [bb13, bb36]

bb13
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:52-461:53)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:52-461:53)
  2: FakeRead(ForLet(None), _26)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:13-461:22)
  3: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:53-461:54)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:461:53-461:54)
  5: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:9-464:40)
  6: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:17-464:26)
  7: _34 = _19
    SourceInfo(regex-syntax/src/hir/interval.rs:464:17-464:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:464:17-464:26)
      kind: switchInt(move _34) -> [0: bb14, otherwise: bb16]
  }
  preds [bb12]
  succs [bb14, bb16]

bb14
  0: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:30-464:39)
  1: _35 = _26
    SourceInfo(regex-syntax/src/hir/interval.rs:464:30-464:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:464:30-464:39)
      kind: switchInt(move _35) -> [0: bb15, otherwise: bb16]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:9-464:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:464:9-464:40)
      kind: _36 = core::panicking::panic(const "assertion failed: add_lower || add_upper") -> bb36
  }
  preds [bb14]
  succs [bb36]

bb16
  0: _33 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:464:40-464:40)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:39-464:40)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:39-464:40)
  3: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:464:39-464:40)
  4: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:13-465:20)
  5: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:24-465:28)
  6: _38 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:465:24-465:28)
  7: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:30-465:34)
  8: _39 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:465:30-465:34)
  9: _37 = (move _38, move _39)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:23-465:35)
  10: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:34-465:35)
  11: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:34-465:35)
  12: FakeRead(ForLet(None), _37)
    SourceInfo(regex-syntax/src/hir/interval.rs:465:13-465:20)
  13: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:466:9-469:10)
  14: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:466:12-466:21)
  15: _41 = _19
    SourceInfo(regex-syntax/src/hir/interval.rs:466:12-466:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:466:12-466:21)
      kind: switchInt(move _41) -> [0: bb18, otherwise: bb17]
  }
  preds [bb13, bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:17-467:22)
  1: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:25-467:38)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:25-467:30)
  3: _44 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:25-467:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:467:25-467:38)
      kind: _43 = <Self as hir::interval::Interval>::lower(move _44) -> [return: bb19, unwind: bb36]
  }
  preds [bb16]
  succs [bb19, bb36]

bb18
  0: _40 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:469:10-469:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:466:9-469:10)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:37-467:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:467:25-467:50)
      kind: _42 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::decrement(move _43) -> [return: bb20, unwind: bb36]
  }
  preds [bb17]
  succs [bb20, bb36]

bb20
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:49-467:50)
  1: FakeRead(ForLet(None), _42)
    SourceInfo(regex-syntax/src/hir/interval.rs:467:17-467:22)
  2: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:21-468:60)
  3: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:26-468:59)
  4: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:39-468:51)
  5: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:39-468:43)
  6: _48 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:39-468:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:468:39-468:51)
      kind: _47 = <Self as hir::interval::Interval>::lower(move _48) -> [return: bb21, unwind: bb36]
  }
  preds [bb19]
  succs [bb21, bb36]

bb21
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:50-468:51)
  1: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:53-468:58)
  2: _49 = _42
    SourceInfo(regex-syntax/src/hir/interval.rs:468:53-468:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:468:26-468:59)
      kind: _46 = <Self as hir::interval::Interval>::create(move _47, move _49) -> [return: bb22, unwind: bb36]
  }
  preds [bb20]
  succs [bb22, bb36]

bb22
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:58-468:59)
  1: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:58-468:59)
  2: _45 = core::option::Option::<Self>::Some(move _46)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:21-468:60)
  3: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:59-468:60)
  4: (_37.0: core::option::Option<Self>) = move _45
    SourceInfo(regex-syntax/src/hir/interval.rs:468:13-468:60)
  5: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:468:59-468:60)
  6: _40 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:466:22-469:10)
  7: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:469:9-469:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:466:9-469:10)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:469:9-469:10)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:469:9-469:10)
  2: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:470:9-478:10)
  3: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:470:12-470:21)
  4: _51 = _26
    SourceInfo(regex-syntax/src/hir/interval.rs:470:12-470:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:470:12-470:21)
      kind: switchInt(move _51) -> [0: bb33, otherwise: bb24]
  }
  preds [bb18, bb22]
  succs [bb24, bb33]

bb24
  0: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:17-471:22)
  1: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:25-471:38)
  2: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:25-471:30)
  3: _54 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:25-471:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:471:25-471:38)
      kind: _53 = <Self as hir::interval::Interval>::upper(move _54) -> [return: bb25, unwind: bb36]
  }
  preds [bb23]
  succs [bb25, bb36]

bb25
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:37-471:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:471:25-471:50)
      kind: _52 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::increment(move _53) -> [return: bb26, unwind: bb36]
  }
  preds [bb24]
  succs [bb26, bb36]

bb26
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:49-471:50)
  1: FakeRead(ForLet(None), _52)
    SourceInfo(regex-syntax/src/hir/interval.rs:471:17-471:22)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:17-472:22)
  3: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:38-472:43)
  4: _56 = _52
    SourceInfo(regex-syntax/src/hir/interval.rs:472:38-472:43)
  5: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:45-472:57)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:45-472:49)
  7: _58 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:45-472:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:472:45-472:57)
      kind: _57 = <Self as hir::interval::Interval>::upper(move _58) -> [return: bb27, unwind: bb36]
  }
  preds [bb25]
  succs [bb27, bb36]

bb27
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:56-472:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:472:25-472:58)
      kind: _55 = <Self as hir::interval::Interval>::create(move _56, move _57) -> [return: bb28, unwind: bb36]
  }
  preds [bb26]
  succs [bb28, bb36]

bb28
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:57-472:58)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:57-472:58)
  2: FakeRead(ForLet(None), _55)
    SourceInfo(regex-syntax/src/hir/interval.rs:472:17-472:22)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:473:16-473:31)
  4: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:473:16-473:21)
  5: _60 = &(_37.0: core::option::Option<Self>)
    SourceInfo(regex-syntax/src/hir/interval.rs:473:16-473:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:473:16-473:31)
      kind: _59 = core::option::Option::<Self>::is_none(move _60) -> [return: bb29, unwind: bb36]
  }
  preds [bb27]
  succs [bb29, bb36]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:473:16-473:31)
      kind: switchInt(move _59) -> [0: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31]

bb30
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:473:30-473:31)
  1: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:474:25-474:36)
  2: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:474:30-474:35)
  3: _62 = _55
    SourceInfo(regex-syntax/src/hir/interval.rs:474:30-474:35)
  4: _61 = core::option::Option::<Self>::Some(move _62)
    SourceInfo(regex-syntax/src/hir/interval.rs:474:25-474:36)
  5: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:474:35-474:36)
  6: (_37.0: core::option::Option<Self>) = move _61
    SourceInfo(regex-syntax/src/hir/interval.rs:474:17-474:36)
  7: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:474:35-474:36)
  8: _50 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:473:32-475:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:473:13-477:14)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb31
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:473:30-473:31)
  1: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:476:25-476:36)
  2: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:476:30-476:35)
  3: _64 = _55
    SourceInfo(regex-syntax/src/hir/interval.rs:476:30-476:35)
  4: _63 = core::option::Option::<Self>::Some(move _64)
    SourceInfo(regex-syntax/src/hir/interval.rs:476:25-476:36)
  5: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:476:35-476:36)
  6: (_37.1: core::option::Option<Self>) = move _63
    SourceInfo(regex-syntax/src/hir/interval.rs:476:17-476:36)
  7: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:476:35-476:36)
  8: _50 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:475:20-477:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:473:13-477:14)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb32
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:477:13-477:14)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:478:9-478:10)
  2: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:478:9-478:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:470:9-478:10)
      kind: goto -> bb34
  }
  preds [bb30, bb31]
  succs [bb34]

bb33
  0: _50 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:478:10-478:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:470:9-478:10)
      kind: goto -> bb34
  }
  preds [bb23]
  succs [bb34]

bb34
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:478:9-478:10)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:478:9-478:10)
  2: _0 = _37
    SourceInfo(regex-syntax/src/hir/interval.rs:479:9-479:12)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:480:5-480:6)
  4: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:480:5-480:6)
  5: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:480:5-480:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:480:6-480:6)
      kind: goto -> bb35
  }
  preds [bb32, bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:480:6-480:6)
      kind: return
  }
  preds [bb2, bb6, bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:453:5-480:6)
      kind: resume
  }
  preds [bb0, bb3, bb5, bb7, bb8, bb9, bb10, bb11, bb12, bb15, bb17, bb19, bb20, bb21, bb24, bb25, bb26, bb27, bb28]
  succs []

