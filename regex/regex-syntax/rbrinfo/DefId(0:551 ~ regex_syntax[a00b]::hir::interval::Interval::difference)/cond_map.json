{
  "regex-syntax/src/hir/interval.rs:460:25:460:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "other.lower() > self.lower()",
          "lhs": "other.lower()",
          "rhs": "self.lower()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:464:30:464:39": [
    {
      "Bool": {
        "Other": "add_upper"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:457:12:457:45": [
    {
      "Bool": {
        "Other": "self.is_intersection_empty(other)"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:466:12:466:21": [
    {
      "Bool": {
        "Other": "add_lower"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:473:16:473:31": [
    {
      "Bool": {
        "Other": "ret.0.is_none()"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:464:17:464:26": [
    {
      "Bool": {
        "Other": "add_lower"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:461:25:461:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "other.upper() < self.upper()",
          "lhs": "other.upper()",
          "rhs": "self.upper()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:454:12:454:33": [
    {
      "Bool": {
        "Other": "self.is_subset(other)"
      }
    }
  ],
  "regex-syntax/src/hir/interval.rs:470:12:470:21": [
    {
      "Bool": {
        "Other": "add_upper"
      }
    }
  ]
}