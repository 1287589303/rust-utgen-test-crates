{
  "regex-syntax/src/hir/literal.rs:614:17:614:67": [
    {
      "Bool": {
        "Other": "seq1.len().map_or(true, |x| x <= self.limit_total)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:594:19:594:28": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/literal.rs:594:19:594:28",
        "match_str": "self.kind",
        "match_kind": {
          "Enum": [
            "Prefix",
            "Suffix"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/literal.rs:599:17:599:36": {
            "pat": {
              "pat_str": "ExtractKind::Suffix",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:599:40:602:18"
          },
          "regex-syntax/src/hir/literal.rs:595:17:595:36": {
            "pat": {
              "pat_str": "ExtractKind::Prefix",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/literal.rs:595:40:598:18"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:606:16:608:61": [
    {
      "Bool": {
        "Other": "seq1\n                .max_union_len(seq2)\n                .map_or(false, |len| len > self.limit_total)"
      }
    }
  ],
  "regex-syntax/src/hir/literal.rs:578:12:578:80": [
    {
      "Bool": {
        "Other": "seq1.max_union_len(seq2).map_or(false, |len| len > self.limit_total)"
      }
    }
  ]
}