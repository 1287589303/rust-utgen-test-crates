bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:9-612:10)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:80)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:36)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:16)
  4: _7 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:16)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:31-578:35)
  6: _8 = &(*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:31-578:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:36)
      kind: _6 = hir::literal::Seq::max_union_len(move _7, move _8) -> [return: bb1, unwind: bb29]
  }
  preds []
  succs [bb1, bb29]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:35-578:36)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:35-578:36)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:51-578:79)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:51-578:79)
  4: _10 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:51-578:79)
  5: _9 = {closure@regex-syntax/src/hir/literal.rs:578:51: 578:56} { self: move _10 }
    SourceInfo(regex-syntax/src/hir/literal.rs:578:51-578:79)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:55-578:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:80)
      kind: _5 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:578:51: 578:56}>(move _6, const false, move _9) -> [return: bb2, unwind: bb29]
  }
  preds [bb0]
  succs [bb2, bb29]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:578:12-578:80)
      kind: switchInt(move _5) -> [0: bb21, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:79-578:80)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:79-578:80)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:594:13-603:14)
  3: PlaceMention(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:594:19-594:28)
  4: _12 = discriminant(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:594:19-594:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:594:13-594:28)
      kind: switchInt(move _12) -> [0: bb5, 1: bb6, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:594:19-594:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:594:19-594:28)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:595:17-595:36)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:600:21-600:44)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:600:21-600:25)
  2: _18 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:600:21-600:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:600:21-600:44)
      kind: _17 = hir::literal::Seq::keep_last_bytes(move _18, const 4_usize) -> [return: bb10, unwind: bb29]
  }
  preds [bb3, bb5]
  succs [bb10, bb29]

bb7
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:596:21-596:45)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:596:21-596:25)
  2: _14 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:596:21-596:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:596:21-596:45)
      kind: _13 = hir::literal::Seq::keep_first_bytes(move _14, const 4_usize) -> [return: bb8, unwind: bb29]
  }
  preds [bb5]
  succs [bb8, bb29]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:596:44-596:45)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:596:45-596:46)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:597:21-597:45)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:597:21-597:25)
  4: _16 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:597:21-597:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:597:21-597:45)
      kind: _15 = hir::literal::Seq::keep_first_bytes(move _16, const 4_usize) -> [return: bb9, unwind: bb29]
  }
  preds [bb7]
  succs [bb9, bb29]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:597:44-597:45)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:597:45-597:46)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:595:40-598:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:595:40-598:18)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:600:43-600:44)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:600:44-600:45)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:601:21-601:44)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:601:21-601:25)
  4: _20 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:601:21-601:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:601:21-601:44)
      kind: _19 = hir::literal::Seq::keep_last_bytes(move _20, const 4_usize) -> [return: bb11, unwind: bb29]
  }
  preds [bb6]
  succs [bb11, bb29]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:601:43-601:44)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:601:44-601:45)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:599:40-602:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:599:40-602:18)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:603:13-603:14)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:604:13-604:25)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:604:13-604:17)
  3: _22 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:604:13-604:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:604:13-604:25)
      kind: _21 = hir::literal::Seq::dedup(move _22) -> [return: bb13, unwind: bb29]
  }
  preds [bb9, bb11]
  succs [bb13, bb29]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:604:24-604:25)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:604:25-604:26)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:605:13-605:25)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:605:13-605:17)
  4: _24 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:605:13-605:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:605:13-605:25)
      kind: _23 = hir::literal::Seq::dedup(move _24) -> [return: bb14, unwind: bb29]
  }
  preds [bb12]
  succs [bb14, bb29]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:605:24-605:25)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:605:25-605:26)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:606:16-608:61)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:606:16-607:37)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:606:16-606:20)
  5: _27 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:606:16-606:20)
  6: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:607:32-607:36)
  7: _28 = &(*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:607:32-607:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:606:16-607:37)
      kind: _26 = hir::literal::Seq::max_union_len(move _27, move _28) -> [return: bb15, unwind: bb29]
  }
  preds [bb13]
  succs [bb15, bb29]

bb15
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:607:36-607:37)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:607:36-607:37)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:32-608:60)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:32-608:60)
  4: _30 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:32-608:60)
  5: _29 = {closure@regex-syntax/src/hir/literal.rs:608:32: 608:37} { self: move _30 }
    SourceInfo(regex-syntax/src/hir/literal.rs:608:32-608:60)
  6: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:36-608:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:606:16-608:61)
      kind: _25 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:608:32: 608:37}>(move _26, const false, move _29) -> [return: bb16, unwind: bb29]
  }
  preds [bb14]
  succs [bb16, bb29]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:606:16-608:61)
      kind: switchInt(move _25) -> [0: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb19]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:60-608:61)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:60-608:61)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:610:17-610:37)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:610:17-610:21)
  4: _32 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:610:17-610:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:610:17-610:37)
      kind: _31 = hir::literal::Seq::make_infinite(move _32) -> [return: bb18, unwind: bb29]
  }
  preds [bb16]
  succs [bb18, bb29]

bb18
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:610:36-610:37)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:610:37-610:38)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:609:13-611:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:606:13-611:14)
      kind: goto -> bb20
  }
  preds [bb17]
  succs [bb20]

bb19
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:60-608:61)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:608:60-608:61)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:611:14-611:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:606:13-611:14)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb20
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:611:13-611:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:578:9-612:10)
      kind: goto -> bb22
  }
  preds [bb18, bb19]
  succs [bb22]

bb21
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:79-578:80)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:578:79-578:80)
  2: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:612:10-612:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:578:9-612:10)
      kind: goto -> bb22
  }
  preds [bb2]
  succs [bb22]

bb22
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:612:9-612:10)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:612:9-612:10)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:9-613:25)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:9-613:13)
  4: _34 = &mut _2
    SourceInfo(regex-syntax/src/hir/literal.rs:613:9-613:13)
  5: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:20-613:24)
  6: _35 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:20-613:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:613:9-613:25)
      kind: _33 = hir::literal::Seq::union(move _34, move _35) -> [return: bb23, unwind: bb29]
  }
  preds [bb20, bb21]
  succs [bb23, bb29]

bb23
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:24-613:25)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:24-613:25)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:613:25-613:26)
  3: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:9-614:68)
  4: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:67)
  5: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:27)
  6: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:21)
  7: _39 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:27)
      kind: _38 = hir::literal::Seq::len(move _39) -> [return: bb24, unwind: bb29]
  }
  preds [bb22]
  succs [bb24, bb29]

bb24
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:26-614:27)
  1: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:41-614:66)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:41-614:66)
  3: _41 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:41-614:66)
  4: _40 = {closure@regex-syntax/src/hir/literal.rs:614:41: 614:44} { self: move _41 }
    SourceInfo(regex-syntax/src/hir/literal.rs:614:41-614:66)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:43-614:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:67)
      kind: _37 = core::option::Option::<usize>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:614:41: 614:44}>(move _38, const true, move _40) -> [return: bb25, unwind: bb29]
  }
  preds [bb23]
  succs [bb25, bb29]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:614:17-614:67)
      kind: switchInt(move _37) -> [0: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:66-614:67)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:66-614:67)
  2: _36 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:614:68-614:68)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:67-614:68)
  4: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:67-614:68)
  5: _0 = move _2
    SourceInfo(regex-syntax/src/hir/literal.rs:615:9-615:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:616:5-616:6)
      kind: drop(_2) -> [return: bb28, unwind: bb30]
  }
  preds [bb25]
  succs [bb28, bb30]

bb27
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:66-614:67)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:66-614:67)
  2: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:614:9-614:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:614:9-614:68)
      kind: _42 = core::panicking::panic(const "assertion failed: seq1.len().map_or(true, |x| x <= self.limit_total)") -> bb29
  }
  preds [bb25]
  succs [bb29]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:616:6-616:6)
      kind: return
  }
  preds [bb26]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:616:5-616:6)
      kind: drop(_2) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb6, bb7, bb8, bb10, bb12, bb13, bb14, bb15, bb17, bb22, bb23, bb24, bb27]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:577:5-616:6)
      kind: resume
  }
  preds [bb26, bb29]
  succs []

