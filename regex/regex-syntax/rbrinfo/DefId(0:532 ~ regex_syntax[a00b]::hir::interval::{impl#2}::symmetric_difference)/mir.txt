bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:286:13-286:29)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:286:32-286:36)
  2: _4 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:286:32-286:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:286:32-286:44)
      kind: _3 = <hir::interval::IntervalSet<I> as core::clone::Clone>::clone(move _4) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:286:43-286:44)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/interval.rs:286:13-286:29)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:9-287:38)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:9-287:21)
  4: _6 = &mut _3
    SourceInfo(regex-syntax/src/hir/interval.rs:287:9-287:21)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:32-287:37)
  6: _7 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:32-287:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:287:9-287:38)
      kind: _5 = hir::interval::IntervalSet::<I>::intersect(move _6, move _7) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:37-287:38)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:37-287:38)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:287:38-287:39)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:9-288:26)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:9-288:13)
  5: _9 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:9-288:13)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:20-288:25)
  7: _10 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:20-288:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:288:9-288:26)
      kind: _8 = hir::interval::IntervalSet::<I>::union(move _9, move _10) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:25-288:26)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:25-288:26)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:288:26-288:27)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:9-289:39)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:9-289:13)
  5: _12 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:9-289:13)
  6: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:25-289:38)
  7: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:25-289:38)
  8: _14 = &_3
    SourceInfo(regex-syntax/src/hir/interval.rs:289:25-289:38)
  9: _13 = &(*_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:25-289:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:289:9-289:39)
      kind: _11 = hir::interval::IntervalSet::<I>::difference(move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:38-289:39)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:38-289:39)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:39-289:40)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:289:39-289:40)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:284:68-290:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:290:5-290:6)
      kind: drop(_3) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:290:5-290:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:290:6-290:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:290:5-290:6)
      kind: drop(_3) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:284:5-290:6)
      kind: resume
  }
  preds [bb0, bb4, bb6]
  succs []

