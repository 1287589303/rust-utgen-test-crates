bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:13-1790:24)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:48)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:40)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:31)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:40)
      kind: _5 = ast::parse::ParserI::<'_, P>::parser(move _6) -> [return: bb1, unwind: bb65]
  }
  preds []
  succs [bb1, bb65]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:39-1790:40)
  1: _4 = &((*_5).11: core::cell::RefCell<std::string::String>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1790:27-1790:61)
      kind: _3 = core::cell::RefCell::<std::string::String>::borrow_mut(move _4) -> [return: bb2, unwind: bb65]
  }
  preds [bb0]
  succs [bb2, bb65]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:60-1790:61)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:13-1790:24)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1790:61-1790:62)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:24)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:16)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:24)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:16)
  7: _10 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:24)
      kind: _9 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _10) -> [return: bb3, unwind: bb64]
  }
  preds [bb1]
  succs [bb3, bb64]

bb3
  0: _8 = &mut (*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:16)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:15-1791:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1791:9-1791:24)
      kind: _7 = std::string::String::clear(move _8) -> [return: bb4, unwind: bb64]
  }
  preds [bb2]
  succs [bb4, bb64]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:23-1791:24)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:24-1791:25)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1791:24-1791:25)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1793:13-1793:22)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1793:25-1793:29)
  5: _12 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1793:25-1793:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1793:25-1793:35)
      kind: _11 = ast::parse::ParserI::<'_, P>::pos(move _12) -> [return: bb5, unwind: bb64]
  }
  preds [bb3]
  succs [bb5, bb64]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1793:34-1793:35)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1793:13-1793:22)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:13-1794:18)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:21-1794:37)
  4: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:21-1794:25)
  5: _15 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:21-1794:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1794:21-1794:37)
      kind: _14 = ast::parse::ParserI::<'_, P>::span_char(move _15) -> [return: bb6, unwind: bb64]
  }
  preds [bb4]
  succs [bb6, bb64]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:36-1794:37)
  1: _13 = (_14.1: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:21-1794:41)
  2: FakeRead(ForLet(None), _13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:13-1794:18)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1794:41-1794:42)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
      kind: falseUnwind -> [real: bb8, unwind: bb64]
  }
  preds [bb6, bb22]
  succs [bb8, bb64]

bb8
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:15-1795:41)
  1: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:15-1795:19)
  2: _19 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:15-1795:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:15-1795:41)
      kind: _18 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _19) -> [return: bb9, unwind: bb64]
  }
  preds [bb7]
  succs [bb9, bb64]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:15-1795:41)
      kind: switchInt(move _18) -> [0: bb24, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:40-1795:41)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:63)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:56)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:49)
  4: _22 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:56)
      kind: _21 = ast::parse::ParserI::<'_, P>::char(move _22) -> [return: bb11, unwind: bb64]
  }
  preds [bb9]
  succs [bb11, bb64]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:55-1795:56)
  1: _20 = Ne(move _21, const '}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:45-1795:63)
      kind: switchInt(move _20) -> [0: bb23, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:62-1795:63)
  1: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:13-1801:14)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:17-1796:36)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:24-1796:35)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:24-1796:28)
  5: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:24-1796:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1796:24-1796:35)
      kind: _25 = ast::parse::ParserI::<'_, P>::char(move _26) -> [return: bb13, unwind: bb64]
  }
  preds [bb11]
  succs [bb13, bb64]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:34-1796:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1796:17-1796:36)
      kind: _24 = ast::parse::is_hex(move _25) -> [return: bb14, unwind: bb64]
  }
  preds [bb12]
  succs [bb14, bb64]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1796:17-1796:36)
      kind: switchInt(move _24) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:35-1796:36)
  1: _23 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1801:14-1801:14)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1801:13-1801:14)
  3: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1801:13-1801:14)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:38)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:20)
  6: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:38)
  7: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:20)
  8: _36 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:38)
      kind: _35 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _36) -> [return: bb20, unwind: bb64]
  }
  preds [bb14]
  succs [bb20, bb64]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1796:35-1796:36)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1797:28-1800:18)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1797:28-1797:32)
  3: _29 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1797:28-1797:32)
  4: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1798:21-1798:37)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1798:21-1798:25)
  6: _31 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1798:21-1798:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1798:21-1798:37)
      kind: _30 = ast::parse::ParserI::<'_, P>::span_char(move _31) -> [return: bb17, unwind: bb64]
  }
  preds [bb14]
  succs [bb17, bb64]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1798:36-1798:37)
  1: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1799:21-1799:58)
  2: _32 = ast::ErrorKind::EscapeHexInvalidDigit
    SourceInfo(regex-syntax/src/ast/parse.rs:1799:21-1799:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1797:28-1800:18)
      kind: _28 = ast::parse::ParserI::<'_, P>::error(move _29, move _30, move _32) -> [return: bb18, unwind: bb64]
  }
  preds [bb16]
  succs [bb18, bb64]

bb18
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1800:17-1800:18)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1800:17-1800:18)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1800:17-1800:18)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1797:24-1800:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1800:18-1800:19)
      kind: drop(_28) -> [return: bb19, unwind: bb64]
  }
  preds [bb17]
  succs [bb19, bb64]

bb19
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1800:18-1800:19)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1801:13-1801:14)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1801:13-1801:14)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  4: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb18]
  succs [bb61]

bb20
  0: _34 = &mut (*_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:20)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:19-1802:20)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:26-1802:37)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:26-1802:30)
  4: _38 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:26-1802:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1802:26-1802:37)
      kind: _37 = ast::parse::ParserI::<'_, P>::char(move _38) -> [return: bb21, unwind: bb64]
  }
  preds [bb15]
  succs [bb21, bb64]

bb21
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:36-1802:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1802:13-1802:38)
      kind: _33 = std::string::String::push(move _34, move _37) -> [return: bb22, unwind: bb64]
  }
  preds [bb20]
  succs [bb22, bb64]

bb22
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:37-1802:38)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:37-1802:38)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:38-1802:39)
  3: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1802:38-1802:39)
  4: _17 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:64-1803:10)
  5: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
      kind: goto -> bb7
  }
  preds [bb21]
  succs [bb7]

bb23
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:62-1795:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb11]
  succs [bb25]

bb24
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:40-1795:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb9]
  succs [bb25]

bb25
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
  1: _16 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1795:9-1803:10)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  4: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1803:9-1803:10)
  6: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:9-1809:10)
  7: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:12-1804:25)
  8: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:12-1804:16)
  9: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:12-1804:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1804:12-1804:25)
      kind: _43 = ast::parse::ParserI::<'_, P>::is_eof(move _44) -> [return: bb26, unwind: bb64]
  }
  preds [bb23, bb24]
  succs [bb26, bb64]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1804:12-1804:25)
      kind: switchInt(move _43) -> [0: bb32, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb32]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:24-1804:25)
  1: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1805:24-1808:14)
  2: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1805:24-1805:28)
  3: _47 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1805:24-1805:28)
  4: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:17-1806:49)
  5: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:27-1806:36)
  6: _49 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:27-1806:36)
  7: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:38-1806:48)
  8: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:38-1806:42)
  9: _51 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:38-1806:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1806:38-1806:48)
      kind: _50 = ast::parse::ParserI::<'_, P>::pos(move _51) -> [return: bb28, unwind: bb64]
  }
  preds [bb26]
  succs [bb28, bb64]

bb28
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:47-1806:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1806:17-1806:49)
      kind: _48 = ast::Span::new(move _49, move _50) -> [return: bb29, unwind: bb64]
  }
  preds [bb27]
  succs [bb29, bb64]

bb29
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:48-1806:49)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1806:48-1806:49)
  2: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1807:17-1807:52)
  3: _52 = ast::ErrorKind::EscapeUnexpectedEof
    SourceInfo(regex-syntax/src/ast/parse.rs:1807:17-1807:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1805:24-1808:14)
      kind: _46 = ast::parse::ParserI::<'_, P>::error(move _47, move _48, move _52) -> [return: bb30, unwind: bb64]
  }
  preds [bb28]
  succs [bb30, bb64]

bb30
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1808:13-1808:14)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1808:13-1808:14)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1808:13-1808:14)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1805:20-1808:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1808:14-1808:15)
      kind: drop(_46) -> [return: bb31, unwind: bb64]
  }
  preds [bb29]
  succs [bb31, bb64]

bb31
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1808:14-1808:15)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1809:9-1809:10)
  2: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1809:9-1809:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb30]
  succs [bb61]

bb32
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1804:24-1804:25)
  1: _42 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1809:10-1809:10)
  2: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1809:9-1809:10)
  3: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1809:9-1809:10)
  4: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1810:13-1810:16)
  5: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1810:19-1810:23)
  6: _54 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1810:19-1810:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1810:19-1810:29)
      kind: _53 = ast::parse::ParserI::<'_, P>::pos(move _54) -> [return: bb33, unwind: bb64]
  }
  preds [bb26]
  succs [bb33, bb64]

bb33
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1810:28-1810:29)
  1: FakeRead(ForLet(None), _53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1810:13-1810:16)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:13-1811:16)
  3: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:26)
  4: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:35)
  5: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:26)
  6: _58 = &_3
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:35)
      kind: _57 = <core::cell::RefMut<'_, std::string::String> as core::ops::Deref>::deref(move _58) -> [return: bb34, unwind: bb64]
  }
  preds [bb32]
  succs [bb34, bb64]

bb34
  0: _56 = &(*_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:26)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:25-1811:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1811:19-1811:35)
      kind: _55 = std::string::String::as_str(move _56) -> [return: bb35, unwind: bb64]
  }
  preds [bb33]
  succs [bb35, bb64]

bb35
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:34-1811:35)
  1: FakeRead(ForLet(None), _55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:13-1811:16)
  2: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1811:35-1811:36)
  3: StorageLive(_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  4: StorageLive(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  5: StorageLive(_61)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  6: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:20-1812:31)
  7: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:20-1812:24)
  8: _63 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:20-1812:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1812:20-1812:31)
      kind: _62 = ast::parse::ParserI::<'_, P>::char(move _63) -> [return: bb36, unwind: bb64]
  }
  preds [bb34]
  succs [bb36, bb64]

bb36
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:30-1812:31)
  1: _61 = &_62
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_64)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:33-1812:36)
  4: _65 = const '}'
    SourceInfo(regex-syntax/src/ast/parse.rs:1812:33-1812:36)
  5: _64 = &_65
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  6: _60 = (move _61, move _64)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  7: StorageDead(_64)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  8: StorageDead(_61)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  9: PlaceMention(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  10: StorageLive(_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  11: _66 = (_60.0: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  12: StorageLive(_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  13: _67 = (_60.1: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  14: StorageLive(_68)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  15: StorageLive(_69)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  16: _69 = (*_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  17: StorageLive(_70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  18: _70 = (*_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  19: _68 = Eq(move _69, move _70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _68) -> [0: bb38, otherwise: bb37]
  }
  preds [bb35]
  succs [bb37, bb38]

bb37
  0: StorageDead(_70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_69)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _59 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_68)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_65)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_62)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_60)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_59)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1813:9-1813:35)
  11: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1813:9-1813:13)
  12: _81 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1813:9-1813:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1813:9-1813:35)
      kind: _80 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _81) -> [return: bb39, unwind: bb64]
  }
  preds [bb36]
  succs [bb39, bb64]

bb38
  0: StorageDead(_70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_69)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_72)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _72 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _72)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_73)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_74)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _74 = move _72
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_75)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_76)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _76 = &(*_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _75 = &(*_76)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_77)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _78 = &(*_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _77 = &(*_78)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _79 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _73 = core::panicking::assert_failed::<char, char>(move _74, move _75, move _77, move _79) -> bb64
  }
  preds [bb36]
  succs [bb64]

bb39
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1813:34-1813:35)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1813:35-1813:36)
  2: StorageLive(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:9-1820:10)
  3: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:12-1815:26)
  4: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:12-1815:15)
  5: _84 = &(*_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:12-1815:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1815:12-1815:26)
      kind: _83 = core::str::<impl str>::is_empty(move _84) -> [return: bb40, unwind: bb64]
  }
  preds [bb37]
  succs [bb40, bb64]

bb40
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1815:12-1815:26)
      kind: switchInt(move _83) -> [0: bb46, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb46]

bb41
  0: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:25-1815:26)
  1: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1816:24-1819:14)
  2: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1816:24-1816:28)
  3: _87 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1816:24-1816:28)
  4: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:17-1817:49)
  5: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:27-1817:36)
  6: _89 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:27-1817:36)
  7: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:38-1817:48)
  8: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:38-1817:42)
  9: _91 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:38-1817:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1817:38-1817:48)
      kind: _90 = ast::parse::ParserI::<'_, P>::pos(move _91) -> [return: bb42, unwind: bb64]
  }
  preds [bb40]
  succs [bb42, bb64]

bb42
  0: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:47-1817:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1817:17-1817:49)
      kind: _88 = ast::Span::new(move _89, move _90) -> [return: bb43, unwind: bb64]
  }
  preds [bb41]
  succs [bb43, bb64]

bb43
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:48-1817:49)
  1: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1817:48-1817:49)
  2: StorageLive(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1818:17-1818:47)
  3: _92 = ast::ErrorKind::EscapeHexEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1818:17-1818:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1816:24-1819:14)
      kind: _86 = ast::parse::ParserI::<'_, P>::error(move _87, move _88, move _92) -> [return: bb44, unwind: bb64]
  }
  preds [bb42]
  succs [bb44, bb64]

bb44
  0: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1819:13-1819:14)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1819:13-1819:14)
  2: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1819:13-1819:14)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1816:20-1819:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1819:14-1819:15)
      kind: drop(_86) -> [return: bb45, unwind: bb64]
  }
  preds [bb43]
  succs [bb45, bb64]

bb45
  0: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1819:14-1819:15)
  1: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1820:9-1820:10)
  2: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1820:9-1820:10)
  3: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  4: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb61
  }
  preds [bb44]
  succs [bb61]

bb46
  0: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1815:25-1815:26)
  1: _82 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1820:10-1820:10)
  2: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1820:9-1820:10)
  3: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1820:9-1820:10)
  4: StorageLive(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
  5: StorageLive(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:48)
  6: StorageLive(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:43)
  7: StorageLive(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:35-1821:38)
  8: _96 = &(*_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:35-1821:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:43)
      kind: _95 = core::num::<impl u32>::from_str_radix(move _96, const 16_u32) -> [return: bb47, unwind: bb64]
  }
  preds [bb40]
  succs [bb47, bb64]

bb47
  0: StorageDead(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:42-1821:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:48)
      kind: _94 = core::result::Result::<u32, core::num::ParseIntError>::ok(move _95) -> [return: bb48, unwind: bb64]
  }
  preds [bb46]
  succs [bb48, bb64]

bb48
  0: StorageDead(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:47-1821:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
      kind: _93 = core::option::Option::<u32>::and_then::<char, fn(u32) -> core::option::Option<char> {core::char::methods::<impl char>::from_u32}>(move _94, core::char::methods::<impl char>::from_u32) -> [return: bb49, unwind: bb64]
  }
  preds [bb47]
  succs [bb49, bb64]

bb49
  0: StorageDead(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:72-1821:73)
  1: PlaceMention(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
  2: _97 = discriminant(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1821:9-1821:73)
      kind: switchInt(move _97) -> [0: bb51, 1: bb52, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb51, bb52]

bb50
  0: FakeRead(ForMatchedPlace(None), _93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1821:15-1821:73)
      kind: unreachable
  }
  preds [bb49]
  succs []

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1822:13-1822:17)
      kind: falseEdge -> [real: bb53, imaginary: bb52]
  }
  preds [bb49]
  succs [bb52, bb53]

bb52
  0: StorageLive(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1826:18-1826:19)
  1: _104 = ((_93 as Some).0: char)
    SourceInfo(regex-syntax/src/ast/parse.rs:1826:18-1826:19)
  2: StorageLive(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1826:27-1830:14)
  3: StorageLive(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:23-1827:51)
  4: StorageLive(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:33-1827:38)
  5: _107 = _13
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:33-1827:38)
  6: StorageLive(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:40-1827:50)
  7: StorageLive(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:40-1827:44)
  8: _109 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:40-1827:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1827:40-1827:50)
      kind: _108 = ast::parse::ParserI::<'_, P>::pos(move _109) -> [return: bb57, unwind: bb64]
  }
  preds [bb49, bb51]
  succs [bb57, bb64]

bb53
  0: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1822:25-1825:14)
  1: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1822:25-1822:29)
  2: _99 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1822:25-1822:29)
  3: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:17-1823:38)
  4: StorageLive(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:27-1823:32)
  5: _101 = _13
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:27-1823:32)
  6: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:34-1823:37)
  7: _102 = _53
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:34-1823:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1823:17-1823:38)
      kind: _100 = ast::Span::new(move _101, move _102) -> [return: bb54, unwind: bb64]
  }
  preds [bb51]
  succs [bb54, bb64]

bb54
  0: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:37-1823:38)
  1: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1823:37-1823:38)
  2: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1824:17-1824:49)
  3: _103 = ast::ErrorKind::EscapeHexInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:1824:17-1824:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1822:25-1825:14)
      kind: _98 = ast::parse::ParserI::<'_, P>::error(move _99, move _100, move _103) -> [return: bb55, unwind: bb64]
  }
  preds [bb53]
  succs [bb55, bb64]

bb55
  0: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1825:13-1825:14)
  1: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1825:13-1825:14)
  2: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1825:13-1825:14)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1822:21-1825:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1825:14-1825:15)
      kind: drop(_98) -> [return: bb56, unwind: bb64]
  }
  preds [bb54]
  succs [bb56, bb64]

bb56
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1825:14-1825:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1825:14-1825:15)
      kind: goto -> bb59
  }
  preds [bb55]
  succs [bb59]

bb57
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:49-1827:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1827:23-1827:51)
      kind: _106 = ast::Span::new(move _107, move _108) -> [return: bb58, unwind: bb64]
  }
  preds [bb52]
  succs [bb58, bb64]

bb58
  0: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:50-1827:51)
  1: StorageDead(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1827:50-1827:51)
  2: StorageLive(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1828:23-1828:55)
  3: StorageLive(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1828:50-1828:54)
  4: _111 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1828:50-1828:54)
  5: _110 = ast::LiteralKind::HexBrace(move _111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1828:23-1828:55)
  6: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1828:54-1828:55)
  7: StorageLive(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1829:17-1829:18)
  8: _112 = _104
    SourceInfo(regex-syntax/src/ast/parse.rs:1829:17-1829:18)
  9: _105 = ast::Literal { span: move _106, kind: move _110, c: move _112 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1826:27-1830:14)
  10: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1830:13-1830:14)
  11: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1830:13-1830:14)
  12: StorageDead(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1830:13-1830:14)
  13: _0 = core::result::Result::<ast::Literal, ast::Error>::Ok(move _105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1826:24-1830:15)
  14: StorageDead(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1830:14-1830:15)
  15: StorageDead(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1830:14-1830:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1830:14-1830:15)
      kind: goto -> bb59
  }
  preds [bb57]
  succs [bb59]

bb59
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
      kind: drop(_3) -> [return: bb60, unwind: bb65]
  }
  preds [bb56, bb58]
  succs [bb60, bb65]

bb60
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  1: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:6-1832:6)
      kind: goto -> bb63
  }
  preds [bb59]
  succs [bb63]

bb61
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
      kind: drop(_3) -> [return: bb62, unwind: bb65]
  }
  preds [bb19, bb31, bb45]
  succs [bb62, bb65]

bb62
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:6-1832:6)
      kind: goto -> bb63
  }
  preds [bb61]
  succs [bb63]

bb63
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:6-1832:6)
      kind: return
  }
  preds [bb60, bb62]
  succs []

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1832:5-1832:6)
      kind: drop(_3) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb7, bb8, bb10, bb12, bb13, bb15, bb16, bb17, bb18, bb20, bb21, bb25, bb27, bb28, bb29, bb30, bb32, bb33, bb34, bb35, bb37, bb38, bb39, bb41, bb42, bb43, bb44, bb46, bb47, bb48, bb52, bb53, bb54, bb55, bb57]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1786:5-1832:6)
      kind: resume
  }
  preds [bb0, bb1, bb59, bb61, bb64]
  succs []

