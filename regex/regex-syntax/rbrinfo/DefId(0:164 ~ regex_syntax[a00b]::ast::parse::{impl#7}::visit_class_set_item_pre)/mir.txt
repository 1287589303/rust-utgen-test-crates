bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2364:13-2364:17)
  1: PlaceMention((*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2364:26-2364:30)
  2: _4 = discriminant((*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2364:26-2364:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2364:20-2364:30)
      kind: switchInt(move _4) -> [0: bb4, 1: bb4, 2: bb4, 3: bb4, 4: bb4, 5: bb4, 6: bb2, 7: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb4, bb4, bb4, bb4, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2364:26-2364:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2364:26-2364:30)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2374:13-2374:48)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb0, bb4]
  succs [bb3, bb6]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:38-2375:43)
  1: _8 = &(((*_2) as Union).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:38-2375:43)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:48-2375:55)
  3: _9 = &((*_8).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:48-2375:55)
  4: _3 = &(*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:48-2375:55)
  5: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:54-2375:55)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2375:54-2375:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2375:54-2375:55)
      kind: goto -> bb7
  }
  preds [bb0, bb2]
  succs [bb7]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2365:13-2370:41)
      kind: falseEdge -> [real: bb5, imaginary: bb2]
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb0]
  succs [bb2, bb5]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2372:27-2372:29)
  1: _6 = ()
    SourceInfo(regex-syntax/src/ast/parse.rs:2372:27-2372:29)
  2: _0 = core::result::Result::<(), ast::Error>::Ok(move _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2372:24-2372:30)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2372:29-2372:30)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2378:5-2378:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2378:6-2378:6)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2374:42-2374:47)
  1: _7 = &(((*_2) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2374:42-2374:47)
  2: _3 = &((*(*_7)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2374:52-2374:59)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2374:58-2374:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2374:58-2374:59)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb7
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2364:13-2364:17)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:9-2377:13)
  2: _10 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:9-2377:13)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:30-2377:34)
  4: _11 = &(*_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:30-2377:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2377:9-2377:35)
      kind: _0 = ast::parse::NestLimiter::<'_, '_, P>::increment_depth(move _10, move _11) -> [return: bb8, unwind: bb10]
  }
  preds [bb3, bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:34-2377:35)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2377:34-2377:35)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2378:5-2378:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2378:6-2378:6)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2378:6-2378:6)
      kind: return
  }
  preds [bb5, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2360:5-2378:6)
      kind: resume
  }
  preds [bb7]
  succs []

