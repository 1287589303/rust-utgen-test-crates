bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
  8: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  9: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:47)
  11: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:35)
  12: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:26)
  13: _14 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:35)
      kind: _13 = ast::parse::ParserI::<'_, P>::parser(move _14) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:34-918:35)
  1: _12 = &((*_13).9: core::cell::RefCell<std::vec::Vec<ast::parse::ClassState>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
      kind: _11 = core::cell::RefCell::<std::vec::Vec<ast::parse::ClassState>>::borrow(move _12) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  0: _10 = &_11
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
      kind: _9 = <core::cell::Ref<'_, std::vec::Vec<ast::parse::ClassState>> as core::ops::Deref>::deref(move _10) -> [return: bb3, unwind: bb22]
  }
  preds [bb1]
  succs [bb3, bb22]

bb3
  0: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
      kind: _7 = <std::vec::Vec<ast::parse::ClassState> as core::ops::Deref>::deref(move _8) -> [return: bb4, unwind: bb22]
  }
  preds [bb2]
  succs [bb4, bb22]

bb4
  0: _6 = &(*_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:56)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:55-918:56)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:55-918:56)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:55-918:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:63)
      kind: _5 = core::slice::<impl [ast::parse::ClassState]>::iter(move _6) -> [return: bb5, unwind: bb22]
  }
  preds [bb3]
  succs [bb5, bb22]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:62-918:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
      kind: _4 = <core::slice::Iter<'_, ast::parse::ClassState> as core::iter::Iterator>::rev(move _5) -> [return: bb6, unwind: bb22]
  }
  preds [bb4]
  succs [bb6, bb22]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:68-918:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
      kind: _3 = <core::iter::Rev<core::slice::Iter<'_, ast::parse::ClassState>> as core::iter::IntoIterator>::into_iter(move _4) -> [return: bb7, unwind: bb22]
  }
  preds [bb5]
  succs [bb7, bb22]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:68-918:69)
  1: PlaceMention(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  3: _15 = move _3
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
      kind: falseUnwind -> [real: bb9, unwind: bb22]
  }
  preds [bb7, bb18]
  succs [bb9, bb22]

bb9
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  4: _20 = &mut _15
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  5: _19 = &mut (*_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
      kind: _18 = <core::iter::Rev<core::slice::Iter<'_, ast::parse::ClassState>> as core::iter::Iterator>::next(move _19) -> [return: bb10, unwind: bb22]
  }
  preds [bb8]
  succs [bb10, bb22]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:68-918:69)
  1: PlaceMention(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  2: _21 = discriminant(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
      kind: switchInt(move _21) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:22-918:69)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:13-918:18)
  1: _23 = ((_18 as Some).0: &ast::parse::ClassState)
    SourceInfo(regex-syntax/src/ast/parse.rs:918:13-918:18)
  2: PlaceMention((*_23))
    SourceInfo(regex-syntax/src/ast/parse.rs:919:55-919:61)
  3: _24 = discriminant((*_23))
    SourceInfo(regex-syntax/src/ast/parse.rs:919:55-919:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:919:20-919:52)
      kind: switchInt(move _24) -> [0: bb15, otherwise: bb18]
  }
  preds [bb10, bb12]
  succs [bb15, bb18]

bb14
  0: _2 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  4: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
      kind: drop(_11) -> [return: bb19, unwind: bb23]
  }
  preds [bb12]
  succs [bb19, bb23]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:919:20-919:52)
      kind: falseEdge -> [real: bb16, imaginary: bb18]
  }
  preds [bb13]
  succs [bb16, bb18]

bb16
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:919:39-919:46)
  1: _25 = &(((*_23) as Open).1: ast::ClassBracketed)
    SourceInfo(regex-syntax/src/ast/parse.rs:919:39-919:46)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:24-920:28)
  3: _27 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:24-920:28)
  4: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:35-920:43)
  5: _28 = ((*_25).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:35-920:43)
  6: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:45-920:74)
  7: _29 = ast::ErrorKind::ClassUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:920:45-920:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:920:24-920:75)
      kind: _0 = ast::parse::ParserI::<'_, P>::error(move _27, move _28, move _29) -> [return: bb17, unwind: bb22]
  }
  preds [bb15]
  succs [bb17, bb22]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:74-920:75)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:74-920:75)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:920:74-920:75)
  3: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:921:13-921:14)
  4: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  5: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  7: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  8: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
      kind: drop(_11) -> [return: bb21, unwind: bb23]
  }
  preds [bb16]
  succs [bb21, bb23]

bb18
  0: _17 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:921:14-921:14)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  2: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  5: _16 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:918:9-922:10)
      kind: goto -> bb8
  }
  preds [bb13, bb15]
  succs [bb8]

bb19
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  5: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  6: StorageLive(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  7: StorageLive(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  8: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  9: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  10: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  11: _35 = [const "no open character class found"]
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  12: _34 = &_35
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  13: _33 = &(*_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:925:16-925:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _32 = core::fmt::Arguments::<'_>::new_const::<1>(move _33) -> [return: bb20, unwind: bb23]
  }
  preds [bb14]
  succs [bb20, bb23]

bb20
  0: StorageDead(_33)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _31 = core::panicking::panic_fmt(move _32) -> bb23
  }
  preds [bb19]
  succs [bb23]

bb21
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  5: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:926:6-926:6)
      kind: return
  }
  preds [bb17]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:922:9-922:10)
      kind: drop(_11) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb16]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:917:5-926:6)
      kind: resume
  }
  preds [bb0, bb1, bb14, bb17, bb19, bb20, bb22]
  succs []

