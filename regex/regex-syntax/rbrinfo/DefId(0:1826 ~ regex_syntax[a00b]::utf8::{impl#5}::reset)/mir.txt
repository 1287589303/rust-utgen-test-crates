bb0
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/utf8.rs:316:9-316:33)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/utf8.rs:316:9-316:25)
  2: _5 = &mut ((*_1).0: std::vec::Vec<utf8::ScalarRange>)
    SourceInfo(regex-syntax/src/utf8.rs:316:9-316:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:316:9-316:33)
      kind: _4 = std::vec::Vec::<utf8::ScalarRange>::clear(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/utf8.rs:316:32-316:33)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/utf8.rs:316:33-316:34)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/utf8.rs:317:9-317:52)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/utf8.rs:317:9-317:13)
  4: _7 = &mut (*_1)
    SourceInfo(regex-syntax/src/utf8.rs:317:9-317:13)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/utf8.rs:317:19-317:35)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/utf8.rs:317:29-317:34)
  7: _9 = _2
    SourceInfo(regex-syntax/src/utf8.rs:317:29-317:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:317:19-317:35)
      kind: _8 = <u32 as core::convert::From<char>>::from(move _9) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/utf8.rs:317:34-317:35)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/utf8.rs:317:37-317:51)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/utf8.rs:317:47-317:50)
  3: _11 = _3
    SourceInfo(regex-syntax/src/utf8.rs:317:47-317:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:317:37-317:51)
      kind: _10 = <u32 as core::convert::From<char>>::from(move _11) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/utf8.rs:317:50-317:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:317:9-317:52)
      kind: _6 = utf8::Utf8Sequences::push(move _7, move _8, move _10) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/utf8.rs:317:51-317:52)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/utf8.rs:317:51-317:52)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/utf8.rs:317:51-317:52)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/utf8.rs:317:52-317:53)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/utf8.rs:315:53-318:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:318:6-318:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:315:5-318:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

