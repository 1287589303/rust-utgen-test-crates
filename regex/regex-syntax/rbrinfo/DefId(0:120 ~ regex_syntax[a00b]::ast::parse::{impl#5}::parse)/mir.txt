bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:9-977:35)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:9-977:13)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:9-977:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:977:9-977:35)
      kind: _2 = ast::parse::ParserI::<'_, P>::parse_with_comments(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:34-977:35)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:40-977:55)
  2: _4 = {closure@regex-syntax/src/ast/parse.rs:977:40: 977:46}
    SourceInfo(regex-syntax/src/ast/parse.rs:977:40-977:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:977:9-977:56)
      kind: _0 = core::result::Result::<ast::WithComments, ast::Error>::map::<ast::Ast, {closure@regex-syntax/src/ast/parse.rs:977:40: 977:46}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:55-977:56)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:977:55-977:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:978:6-978:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:977:55-977:56)
      kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:976:5-978:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

