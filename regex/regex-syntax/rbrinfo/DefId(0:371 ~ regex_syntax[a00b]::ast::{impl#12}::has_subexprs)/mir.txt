bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:588:15-588:20)
  1: _2 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:588:15-588:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:588:9-588:20)
      kind: switchInt(move _2) -> [0: bb2, 1: bb2, 2: bb2, 3: bb2, 4: bb2, 5: bb2, 6: bb2, 7: bb3, 8: bb3, 9: bb3, 10: bb3, 11: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb2, bb2, bb2, bb2, bb2, bb2, bb3, bb3, bb3, bb3, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:588:15-588:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:588:15-588:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:589:13-595:32)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb0, bb0]
  succs [bb3, bb4]

bb3
  0: _0 = const true
    SourceInfo(regex-syntax/src/ast/mod.rs:600:33-600:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:600:33-600:37)
      kind: goto -> bb5
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb2]
  succs [bb5]

bb4
  0: _0 = const false
    SourceInfo(regex-syntax/src/ast/mod.rs:595:36-595:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:595:36-595:41)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:602:6-602:6)
      kind: return
  }
  preds [bb3, bb4]
  succs []

