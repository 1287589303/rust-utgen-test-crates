bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:13-1844:24)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:48)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:40)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:31)
  4: _5 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:40)
      kind: _4 = ast::parse::ParserI::<'_, P>::parser(move _5) -> [return: bb1, unwind: bb66]
  }
  preds []
  succs [bb1, bb66]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:39-1844:40)
  1: _3 = &((*_4).11: core::cell::RefCell<std::string::String>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1844:27-1844:61)
      kind: _2 = core::cell::RefCell::<std::string::String>::borrow_mut(move _3) -> [return: bb2, unwind: bb66]
  }
  preds [bb0]
  succs [bb2, bb66]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:60-1844:61)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:13-1844:24)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1844:61-1844:62)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:24)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:16)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:24)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:16)
  7: _9 = &mut _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:24)
      kind: _8 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _9) -> [return: bb3, unwind: bb65]
  }
  preds [bb1]
  succs [bb3, bb65]

bb3
  0: _7 = &mut (*_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:16)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:15-1845:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1845:9-1845:24)
      kind: _6 = std::string::String::clear(move _7) -> [return: bb4, unwind: bb65]
  }
  preds [bb2]
  succs [bb4, bb65]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:23-1845:24)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:24-1845:25)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1845:24-1845:25)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
      kind: falseUnwind -> [real: bb6, unwind: bb65]
  }
  preds [bb4, bb13]
  succs [bb6, bb65]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:16-1847:29)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:16-1847:20)
  2: _13 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:16-1847:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:16-1847:29)
      kind: _12 = ast::parse::ParserI::<'_, P>::is_eof(move _13) -> [return: bb7, unwind: bb65]
  }
  preds [bb5]
  succs [bb7, bb65]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:16-1847:29)
      kind: switchInt(move _12) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:28-1847:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:61-1849:10)
      kind: goto -> bb15
  }
  preds [bb7]
  succs [bb15]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:28-1847:29)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:60)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:44)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:37)
  4: _16 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:44)
      kind: _15 = ast::parse::ParserI::<'_, P>::char(move _16) -> [return: bb10, unwind: bb65]
  }
  preds [bb7]
  succs [bb10, bb65]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:43-1847:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:60)
      kind: _14 = core::char::methods::<impl char>::is_whitespace(move _15) -> [return: bb11, unwind: bb65]
  }
  preds [bb9]
  succs [bb11, bb65]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:33-1847:60)
      kind: switchInt(move _14) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:59-1847:60)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1848:13-1848:24)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1848:13-1848:17)
  3: _18 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1848:13-1848:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1848:13-1848:24)
      kind: _17 = ast::parse::ParserI::<'_, P>::bump(move _18) -> [return: bb13, unwind: bb65]
  }
  preds [bb11]
  succs [bb13, bb65]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1848:23-1848:24)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1848:24-1848:25)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:61-1849:10)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
      kind: goto -> bb5
  }
  preds [bb12]
  succs [bb5]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:59-1847:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb15
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
  1: _10 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1847:9-1849:10)
  2: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  5: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1849:9-1849:10)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1850:13-1850:18)
  7: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1850:21-1850:25)
  8: _23 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1850:21-1850:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1850:21-1850:31)
      kind: _22 = ast::parse::ParserI::<'_, P>::pos(move _23) -> [return: bb16, unwind: bb65]
  }
  preds [bb8, bb14]
  succs [bb16, bb65]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1850:30-1850:31)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1850:13-1850:18)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
      kind: falseUnwind -> [real: bb18, unwind: bb65]
  }
  preds [bb16, bb29]
  succs [bb18, bb65]

bb18
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:16-1851:29)
  1: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:16-1851:20)
  2: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:16-1851:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:16-1851:29)
      kind: _25 = ast::parse::ParserI::<'_, P>::is_eof(move _26) -> [return: bb19, unwind: bb65]
  }
  preds [bb17]
  succs [bb19, bb65]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:16-1851:29)
      kind: switchInt(move _25) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:28-1851:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:74-1854:10)
      kind: goto -> bb32
  }
  preds [bb19]
  succs [bb32]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:28-1851:29)
  1: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:33-1851:51)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:40-1851:51)
  3: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:40-1851:44)
  4: _29 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:40-1851:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:40-1851:51)
      kind: _28 = ast::parse::ParserI::<'_, P>::char(move _29) -> [return: bb22, unwind: bb65]
  }
  preds [bb19]
  succs [bb22, bb65]

bb22
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:50-1851:51)
  1: _27 = Le(const '0', move _28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:33-1851:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:33-1851:51)
      kind: switchInt(move _27) -> [0: bb31, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb31]

bb23
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:50-1851:51)
  1: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:73)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:66)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:59)
  4: _32 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:66)
      kind: _31 = ast::parse::ParserI::<'_, P>::char(move _32) -> [return: bb24, unwind: bb65]
  }
  preds [bb22]
  succs [bb24, bb65]

bb24
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:65-1851:66)
  1: _30 = Le(move _31, const '9')
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:55-1851:73)
      kind: switchInt(move _30) -> [0: bb30, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb30]

bb25
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:72-1851:73)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:38)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:20)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:38)
  4: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:20)
  5: _36 = &mut _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:38)
      kind: _35 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _36) -> [return: bb26, unwind: bb65]
  }
  preds [bb24]
  succs [bb26, bb65]

bb26
  0: _34 = &mut (*_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:20)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:19-1852:20)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:26-1852:37)
  3: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:26-1852:30)
  4: _38 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:26-1852:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1852:26-1852:37)
      kind: _37 = ast::parse::ParserI::<'_, P>::char(move _38) -> [return: bb27, unwind: bb65]
  }
  preds [bb25]
  succs [bb27, bb65]

bb27
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:36-1852:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1852:13-1852:38)
      kind: _33 = std::string::String::push(move _34, move _37) -> [return: bb28, unwind: bb65]
  }
  preds [bb26]
  succs [bb28, bb65]

bb28
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:37-1852:38)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:37-1852:38)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:38-1852:39)
  3: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1852:38-1852:39)
  4: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1853:13-1853:39)
  5: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1853:13-1853:17)
  6: _40 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1853:13-1853:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1853:13-1853:39)
      kind: _39 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _40) -> [return: bb29, unwind: bb65]
  }
  preds [bb27]
  succs [bb29, bb65]

bb29
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1853:38-1853:39)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1853:39-1853:40)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:74-1854:10)
  3: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  4: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
      kind: goto -> bb17
  }
  preds [bb28]
  succs [bb17]

bb30
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:72-1851:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb24]
  succs [bb32]

bb31
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:50-1851:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb22]
  succs [bb32]

bb32
  0: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
  1: _24 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1851:9-1854:10)
  2: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  3: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  4: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  6: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1854:9-1854:10)
  7: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:13-1855:17)
  8: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:30-1855:35)
  9: _45 = _22
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:30-1855:35)
  10: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:37-1855:47)
  11: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:37-1855:41)
  12: _47 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:37-1855:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1855:37-1855:47)
      kind: _46 = ast::parse::ParserI::<'_, P>::pos(move _47) -> [return: bb33, unwind: bb65]
  }
  preds [bb20, bb30, bb31]
  succs [bb33, bb65]

bb33
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:46-1855:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1855:20-1855:48)
      kind: _44 = ast::Span::new(move _45, move _46) -> [return: bb34, unwind: bb65]
  }
  preds [bb32]
  succs [bb34, bb65]

bb34
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:47-1855:48)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:47-1855:48)
  2: FakeRead(ForLet(None), _44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1855:13-1855:17)
  3: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
      kind: goto -> bb35
  }
  preds [bb33]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
      kind: falseUnwind -> [real: bb36, unwind: bb65]
  }
  preds [bb34, bb43]
  succs [bb36, bb65]

bb36
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:16-1856:29)
  1: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:16-1856:20)
  2: _50 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:16-1856:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:16-1856:29)
      kind: _49 = ast::parse::ParserI::<'_, P>::is_eof(move _50) -> [return: bb37, unwind: bb65]
  }
  preds [bb35]
  succs [bb37, bb65]

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:16-1856:29)
      kind: switchInt(move _49) -> [0: bb39, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39]

bb38
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:28-1856:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:61-1858:10)
      kind: goto -> bb45
  }
  preds [bb37]
  succs [bb45]

bb39
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:28-1856:29)
  1: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:60)
  2: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:44)
  3: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:37)
  4: _53 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:44)
      kind: _52 = ast::parse::ParserI::<'_, P>::char(move _53) -> [return: bb40, unwind: bb65]
  }
  preds [bb37]
  succs [bb40, bb65]

bb40
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:43-1856:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:60)
      kind: _51 = core::char::methods::<impl char>::is_whitespace(move _52) -> [return: bb41, unwind: bb65]
  }
  preds [bb39]
  succs [bb41, bb65]

bb41
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:33-1856:60)
      kind: switchInt(move _51) -> [0: bb44, otherwise: bb42]
  }
  preds [bb40]
  succs [bb42, bb44]

bb42
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:59-1856:60)
  1: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1857:13-1857:39)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1857:13-1857:17)
  3: _55 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1857:13-1857:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1857:13-1857:39)
      kind: _54 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _55) -> [return: bb43, unwind: bb65]
  }
  preds [bb41]
  succs [bb43, bb65]

bb43
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1857:38-1857:39)
  1: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1857:39-1857:40)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:61-1858:10)
  3: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  4: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
      kind: goto -> bb35
  }
  preds [bb42]
  succs [bb35]

bb44
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:59-1856:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb41]
  succs [bb45]

bb45
  0: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
  1: _48 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1856:9-1858:10)
  2: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  3: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  4: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  5: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1858:9-1858:10)
  6: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:13-1859:19)
  7: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:29)
  8: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:38)
  9: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:29)
  10: _62 = &_2
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:38)
      kind: _61 = <core::cell::RefMut<'_, std::string::String> as core::ops::Deref>::deref(move _62) -> [return: bb46, unwind: bb65]
  }
  preds [bb38, bb44]
  succs [bb46, bb65]

bb46
  0: _60 = &(*_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:29)
  1: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:28-1859:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1859:22-1859:38)
      kind: _59 = std::string::String::as_str(move _60) -> [return: bb47, unwind: bb65]
  }
  preds [bb45]
  succs [bb47, bb65]

bb47
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:37-1859:38)
  1: FakeRead(ForLet(None), _59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:13-1859:19)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1859:38-1859:39)
  3: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:9-1862:10)
  4: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:12-1860:29)
  5: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:12-1860:18)
  6: _65 = &(*_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:12-1860:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1860:12-1860:29)
      kind: _64 = core::str::<impl str>::is_empty(move _65) -> [return: bb48, unwind: bb65]
  }
  preds [bb46]
  succs [bb48, bb65]

bb48
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1860:12-1860:29)
      kind: switchInt(move _64) -> [0: bb52, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb52]

bb49
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:28-1860:29)
  1: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:24-1861:70)
  2: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:24-1861:28)
  3: _68 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:24-1861:28)
  4: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:35-1861:39)
  5: _69 = _44
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:35-1861:39)
  6: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:41-1861:69)
  7: _70 = ast::ErrorKind::DecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:41-1861:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1861:24-1861:70)
      kind: _67 = ast::parse::ParserI::<'_, P>::error(move _68, move _69, move _70) -> [return: bb50, unwind: bb65]
  }
  preds [bb48]
  succs [bb50, bb65]

bb50
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:69-1861:70)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:69-1861:70)
  2: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:69-1861:70)
  3: _0 = core::result::Result::<u32, ast::Error>::Err(move _67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:20-1861:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1861:70-1861:71)
      kind: drop(_67) -> [return: bb51, unwind: bb65]
  }
  preds [bb49]
  succs [bb51, bb65]

bb51
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1861:70-1861:71)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1862:9-1862:10)
  2: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1862:9-1862:10)
  3: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  4: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  5: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
      kind: drop(_2) -> [return: bb63, unwind: bb66]
  }
  preds [bb50]
  succs [bb63, bb66]

bb52
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1860:28-1860:29)
  1: _63 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1862:10-1862:10)
  2: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1862:9-1862:10)
  3: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1862:9-1862:10)
  4: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
  5: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:46)
  6: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:35-1863:41)
  7: _73 = &(*_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:35-1863:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:46)
      kind: _72 = core::num::<impl u32>::from_str_radix(move _73, const 10_u32) -> [return: bb53, unwind: bb65]
  }
  preds [bb48]
  succs [bb53, bb65]

bb53
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:45-1863:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
      kind: _71 = core::result::Result::<u32, core::num::ParseIntError>::ok(move _72) -> [return: bb54, unwind: bb65]
  }
  preds [bb52]
  succs [bb54, bb65]

bb54
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:50-1863:51)
  1: PlaceMention(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
  2: _74 = discriminant(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1863:9-1863:51)
      kind: switchInt(move _74) -> [0: bb57, 1: bb56, otherwise: bb55]
  }
  preds [bb53]
  succs [bb55, bb56, bb57]

bb55
  0: FakeRead(ForMatchedPlace(None), _71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1863:15-1863:51)
      kind: unreachable
  }
  preds [bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1864:13-1864:20)
      kind: falseEdge -> [real: bb58, imaginary: bb57]
  }
  preds [bb54]
  succs [bb57, bb58]

bb57
  0: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:25-1865:73)
  1: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:25-1865:29)
  2: _78 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:25-1865:29)
  3: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:36-1865:40)
  4: _79 = _44
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:36-1865:40)
  5: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:42-1865:72)
  6: _80 = ast::ErrorKind::DecimalInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:42-1865:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1865:25-1865:73)
      kind: _77 = ast::parse::ParserI::<'_, P>::error(move _78, move _79, move _80) -> [return: bb59, unwind: bb65]
  }
  preds [bb54, bb56]
  succs [bb59, bb65]

bb58
  0: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:18-1864:19)
  1: _75 = ((_71 as Some).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:18-1864:19)
  2: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:27-1864:28)
  3: _76 = _75
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:27-1864:28)
  4: _0 = core::result::Result::<u32, ast::Error>::Ok(move _76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:24-1864:29)
  5: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:28-1864:29)
  6: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1864:28-1864:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1864:28-1864:29)
      kind: goto -> bb61
  }
  preds [bb56]
  succs [bb61]

bb59
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:72-1865:73)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:72-1865:73)
  2: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:72-1865:73)
  3: _0 = core::result::Result::<u32, ast::Error>::Err(move _77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:21-1865:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1865:73-1865:74)
      kind: drop(_77) -> [return: bb60, unwind: bb65]
  }
  preds [bb57]
  succs [bb60, bb65]

bb60
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1865:73-1865:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1865:73-1865:74)
      kind: goto -> bb61
  }
  preds [bb59]
  succs [bb61]

bb61
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  1: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
      kind: drop(_2) -> [return: bb62, unwind: bb66]
  }
  preds [bb58, bb60]
  succs [bb62, bb66]

bb62
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:6-1867:6)
      kind: goto -> bb64
  }
  preds [bb61]
  succs [bb64]

bb63
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:6-1867:6)
      kind: goto -> bb64
  }
  preds [bb51]
  succs [bb64]

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:6-1867:6)
      kind: return
  }
  preds [bb62, bb63]
  succs []

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1867:5-1867:6)
      kind: drop(_2) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb5, bb6, bb9, bb10, bb12, bb15, bb17, bb18, bb21, bb23, bb25, bb26, bb27, bb28, bb32, bb33, bb35, bb36, bb39, bb40, bb42, bb45, bb46, bb47, bb49, bb50, bb52, bb53, bb57, bb59]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1843:5-1867:6)
      kind: resume
  }
  preds [bb0, bb1, bb51, bb61, bb65]
  succs []

