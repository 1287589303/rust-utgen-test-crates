bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:9-188:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:12-186:34)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:12-186:23)
  3: _5 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:12-186:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:12-186:34)
      kind: _4 = std::vec::Vec::<I>::is_empty(move _5) -> [return: bb1, unwind: bb91]
  }
  preds []
  succs [bb1, bb91]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:12-186:34)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:33-186:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:62-188:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:33-186:34)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:38-186:61)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:38-186:50)
  3: _7 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:38-186:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:38-186:61)
      kind: _6 = std::vec::Vec::<I>::is_empty(move _7) -> [return: bb4, unwind: bb91]
  }
  preds [bb1]
  succs [bb4, bb91]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:38-186:61)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:60-186:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:186:62-188:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:187:13-187:19)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:275:6-275:6)
      kind: goto -> bb90
  }
  preds [bb2, bb5]
  succs [bb90]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:186:60-186:61)
  1: _3 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:188:10-188:10)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:188:9-188:10)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:202:13-202:22)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:202:25-202:36)
  7: _10 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:202:25-202:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:202:25-202:42)
      kind: _9 = std::vec::Vec::<I>::len(move _10) -> [return: bb8, unwind: bb91]
  }
  preds [bb4]
  succs [bb8, bb91]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:202:41-202:42)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-syntax/src/hir/interval.rs:202:13-202:22)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:30-203:36)
  3: _13 = (const 0_usize, const 0_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:30-203:36)
  4: PlaceMention(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:30-203:36)
  5: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:14-203:19)
  6: _11 = (_13.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:14-203:19)
  7: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:21-203:26)
  8: _12 = (_13.1: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:21-203:26)
  9: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:203:36-203:37)
  10: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
      kind: falseUnwind -> [real: bb10, unwind: bb91]
  }
  preds [bb8, bb73, bb77]
  succs [bb10, bb91]

bb10
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:22-204:35)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:22-204:23)
  2: _17 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:204:22-204:23)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:26-204:35)
  4: _18 = _9
    SourceInfo(regex-syntax/src/hir/interval.rs:204:26-204:35)
  5: _16 = Lt(move _17, move _18)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:22-204:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:22-204:35)
      kind: switchInt(move _16) -> [0: bb75, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb75]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:34-204:35)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:34-204:35)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:39-204:61)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:39-204:40)
  4: _20 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:204:39-204:40)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:43-204:61)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:43-204:55)
  7: _22 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:43-204:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:43-204:61)
      kind: _21 = std::vec::Vec::<I>::len(move _22) -> [return: bb12, unwind: bb91]
  }
  preds [bb10]
  succs [bb12, bb91]

bb12
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:60-204:61)
  1: _19 = Lt(move _20, move _21)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:39-204:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:39-204:61)
      kind: switchInt(move _19) -> [0: bb74, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb74]

bb13
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:60-204:61)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:60-204:61)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:13-211:14)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:64)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:39)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:39)
  6: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:31)
  7: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:28-208:31)
  8: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:28)
  9: _29 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:28)
  10: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:29-208:30)
  11: _30 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:208:29-208:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:28-208:31)
      kind: _28 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _29, move _30) -> [return: bb14, unwind: bb91]
  }
  preds [bb12]
  succs [bb14, bb91]

bb14
  0: _27 = &(*_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:31)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:30-208:31)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:30-208:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:39)
      kind: _26 = <I as hir::interval::Interval>::upper(move _27) -> [return: bb15, unwind: bb91]
  }
  preds [bb13]
  succs [bb15, bb91]

bb15
  0: _25 = &_26
    SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:39)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:38-208:39)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:64)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:64)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:56)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:53-208:56)
  6: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:53)
  7: _35 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:53)
  8: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:54-208:55)
  9: _36 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:208:54-208:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:53-208:56)
      kind: _34 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _35, move _36) -> [return: bb16, unwind: bb91]
  }
  preds [bb14]
  succs [bb16, bb91]

bb16
  0: _33 = &(*_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:56)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:55-208:56)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:55-208:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:64)
      kind: _32 = <I as hir::interval::Interval>::lower(move _33) -> [return: bb17, unwind: bb91]
  }
  preds [bb15]
  succs [bb17, bb91]

bb17
  0: _31 = &_32
    SourceInfo(regex-syntax/src/hir/interval.rs:208:42-208:64)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:64)
      kind: _24 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::lt(move _25, move _31) -> [return: bb18, unwind: bb91]
  }
  preds [bb16]
  succs [bb18, bb91]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:208:16-208:64)
      kind: switchInt(move _24) -> [0: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb21]

bb19
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  3: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  4: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  6: _38 = AddWithOverflow(_12, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:209:17-209:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:209:17-209:23)
      kind: assert(!move (_38.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_usize) -> [success: bb20, unwind: bb91]
  }
  preds [bb18]
  succs [bb20, bb91]

bb20
  0: _12 = move (_38.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:209:17-209:23)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:211:13-211:14)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:211:13-211:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb19]
  succs [bb77]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  3: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  4: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:208:63-208:64)
  6: _23 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:211:14-211:14)
  7: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:211:13-211:14)
  8: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:211:13-211:14)
  9: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:13-219:14)
  10: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:64)
  11: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:38)
  12: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:38)
  13: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:30)
  14: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:27-214:30)
  15: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:27)
  16: _45 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:27)
  17: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:28-214:29)
  18: _46 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:214:28-214:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:27-214:30)
      kind: _44 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _45, move _46) -> [return: bb22, unwind: bb91]
  }
  preds [bb18]
  succs [bb22, bb91]

bb22
  0: _43 = &(*_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:30)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:29-214:30)
  2: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:29-214:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:38)
      kind: _42 = <I as hir::interval::Interval>::upper(move _43) -> [return: bb23, unwind: bb91]
  }
  preds [bb21]
  succs [bb23, bb91]

bb23
  0: _41 = &_42
    SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:38)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:37-214:38)
  2: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:64)
  3: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:64)
  4: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:56)
  5: StorageLive(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:53-214:56)
  6: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:53)
  7: _51 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:53)
  8: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:54-214:55)
  9: _52 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:214:54-214:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:53-214:56)
      kind: _50 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _51, move _52) -> [return: bb24, unwind: bb91]
  }
  preds [bb22]
  succs [bb24, bb91]

bb24
  0: _49 = &(*_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:56)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:55-214:56)
  2: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:55-214:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:64)
      kind: _48 = <I as hir::interval::Interval>::lower(move _49) -> [return: bb25, unwind: bb91]
  }
  preds [bb23]
  succs [bb25, bb91]

bb25
  0: _47 = &_48
    SourceInfo(regex-syntax/src/hir/interval.rs:214:41-214:64)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:64)
      kind: _40 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::lt(move _41, move _47) -> [return: bb26, unwind: bb91]
  }
  preds [bb24]
  succs [bb26, bb91]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:214:16-214:64)
      kind: switchInt(move _40) -> [0: bb31, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb31]

bb27
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  3: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  4: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  6: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:21-215:26)
  7: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:40-215:43)
  8: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:29-215:40)
  9: _56 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:29-215:40)
  10: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:41-215:42)
  11: _57 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:215:41-215:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:215:40-215:43)
      kind: _55 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _56, move _57) -> [return: bb28, unwind: bb91]
  }
  preds [bb26]
  succs [bb28, bb91]

bb28
  0: _54 = (*_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:29-215:43)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:42-215:43)
  2: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:42-215:43)
  3: FakeRead(ForLet(None), _54)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:21-215:26)
  4: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:215:43-215:44)
  5: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:17-216:40)
  6: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:17-216:28)
  7: _59 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:17-216:28)
  8: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:34-216:39)
  9: _60 = _54
    SourceInfo(regex-syntax/src/hir/interval.rs:216:34-216:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:216:17-216:40)
      kind: _58 = std::vec::Vec::<I>::push(move _59, move _60) -> [return: bb29, unwind: bb91]
  }
  preds [bb27]
  succs [bb29, bb91]

bb29
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:39-216:40)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:39-216:40)
  2: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:216:40-216:41)
  3: _61 = AddWithOverflow(_11, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:217:17-217:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:217:17-217:23)
      kind: assert(!move (_61.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, const 1_usize) -> [success: bb30, unwind: bb91]
  }
  preds [bb28]
  succs [bb30, bb91]

bb30
  0: _11 = move (_61.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:217:17-217:23)
  1: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:219:13-219:14)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:219:13-219:14)
  3: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:219:13-219:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb29]
  succs [bb77]

bb31
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  3: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  4: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:214:63-214:64)
  6: _39 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:219:14-219:14)
  7: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:219:13-219:14)
  8: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:219:13-219:14)
  9: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:13-221:77)
  10: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:76)
  11: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:36)
  12: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:33-221:36)
  13: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:33)
  14: _66 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:33)
  15: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:34-221:35)
  16: _67 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:221:34-221:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:221:33-221:36)
      kind: _65 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _66, move _67) -> [return: bb32, unwind: bb91]
  }
  preds [bb26]
  succs [bb32, bb91]

bb32
  0: _64 = &(*_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:36)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:35-221:36)
  2: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:35-221:36)
  3: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:59-221:75)
  4: StorageLive(_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:59-221:75)
  5: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:72-221:75)
  6: StorageLive(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:60-221:72)
  7: _71 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:60-221:72)
  8: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:73-221:74)
  9: _72 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:221:73-221:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:221:72-221:75)
      kind: _70 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _71, move _72) -> [return: bb33, unwind: bb91]
  }
  preds [bb31]
  succs [bb33, bb91]

bb33
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:74-221:75)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:74-221:75)
  2: _69 = &(*_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:59-221:75)
  3: _68 = &(*_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:59-221:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:76)
      kind: _63 = <I as hir::interval::Interval>::is_intersection_empty(move _64, move _68) -> [return: bb34, unwind: bb91]
  }
  preds [bb32]
  succs [bb34, bb91]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:221:22-221:76)
      kind: switchInt(move _63) -> [0: bb36, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36]

bb35
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:75-221:76)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:75-221:76)
  2: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  3: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  4: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  5: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:13-221:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:221:13-221:77)
      kind: _73 = core::panicking::panic(const "assertion failed: !self.ranges[a].is_intersection_empty(&other.ranges[b])") -> bb91
  }
  preds [bb34]
  succs [bb91]

bb36
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:75-221:76)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:75-221:76)
  2: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  3: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  4: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  5: _62 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:221:77-221:77)
  6: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  7: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:221:76-221:77)
  8: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:17-234:26)
  9: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:40-234:43)
  10: StorageLive(_76)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:29-234:40)
  11: _76 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:29-234:40)
  12: StorageLive(_77)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:41-234:42)
  13: _77 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:234:41-234:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:234:40-234:43)
      kind: _75 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _76, move _77) -> [return: bb37, unwind: bb91]
  }
  preds [bb34]
  succs [bb37, bb91]

bb37
  0: _74 = (*_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:29-234:43)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:42-234:43)
  2: StorageDead(_76)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:42-234:43)
  3: FakeRead(ForLet(None), _74)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:17-234:26)
  4: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/interval.rs:234:43-234:44)
  5: StorageLive(_78)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
      kind: goto -> bb38
  }
  preds [bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
      kind: falseUnwind -> [real: bb39, unwind: bb91]
  }
  preds [bb37, bb68]
  succs [bb39, bb91]

bb39
  0: StorageLive(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:19-235:41)
  1: StorageLive(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:19-235:20)
  2: _80 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:235:19-235:20)
  3: StorageLive(_81)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:23-235:41)
  4: StorageLive(_82)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:23-235:35)
  5: _82 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:23-235:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:235:23-235:41)
      kind: _81 = std::vec::Vec::<I>::len(move _82) -> [return: bb40, unwind: bb91]
  }
  preds [bb38]
  succs [bb40, bb91]

bb40
  0: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:40-235:41)
  1: _79 = Lt(move _80, move _81)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:19-235:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:235:19-235:41)
      kind: switchInt(move _79) -> [0: bb69, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb69]

bb41
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:40-235:41)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:40-235:41)
  2: StorageLive(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:21-236:66)
  3: StorageLive(_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:21-236:26)
  4: _84 = &_74
    SourceInfo(regex-syntax/src/hir/interval.rs:236:21-236:26)
  5: StorageLive(_85)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:49-236:65)
  6: StorageLive(_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:49-236:65)
  7: StorageLive(_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:62-236:65)
  8: StorageLive(_88)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:50-236:62)
  9: _88 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:50-236:62)
  10: StorageLive(_89)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:63-236:64)
  11: _89 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:236:63-236:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:236:62-236:65)
      kind: _87 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _88, move _89) -> [return: bb42, unwind: bb91]
  }
  preds [bb40]
  succs [bb42, bb91]

bb42
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:64-236:65)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:64-236:65)
  2: _86 = &(*_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:49-236:65)
  3: _85 = &(*_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:49-236:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:236:21-236:66)
      kind: _83 = <I as hir::interval::Interval>::is_intersection_empty(move _84, move _85) -> [return: bb43, unwind: bb91]
  }
  preds [bb41]
  succs [bb43, bb91]

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:236:21-236:66)
      kind: switchInt(move _83) -> [0: bb45, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb45]

bb44
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  1: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  2: StorageDead(_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  3: StorageDead(_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb43]
  succs [bb70]

bb45
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  1: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  2: StorageDead(_87)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  3: StorageDead(_86)
    SourceInfo(regex-syntax/src/hir/interval.rs:236:65-236:66)
  4: StorageLive(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:238:21-238:30)
  5: _90 = _74
    SourceInfo(regex-syntax/src/hir/interval.rs:238:33-238:38)
  6: FakeRead(ForLet(None), _90)
    SourceInfo(regex-syntax/src/hir/interval.rs:238:21-238:30)
  7: StorageLive(_91)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:25-251:18)
  8: StorageLive(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  9: StorageLive(_93)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:36)
  10: _93 = &_74
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:36)
  11: StorageLive(_94)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:48-239:64)
  12: StorageLive(_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:48-239:64)
  13: StorageLive(_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:61-239:64)
  14: StorageLive(_97)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:49-239:61)
  15: _97 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:49-239:61)
  16: StorageLive(_98)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:62-239:63)
  17: _98 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:239:62-239:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:61-239:64)
      kind: _96 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _97, move _98) -> [return: bb46, unwind: bb91]
  }
  preds [bb43]
  succs [bb46, bb91]

bb46
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:63-239:64)
  1: StorageDead(_97)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:63-239:64)
  2: _95 = &(*_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:48-239:64)
  3: _94 = &(*_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:48-239:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
      kind: _92 = <I as hir::interval::Interval>::difference(move _93, move _94) -> [return: bb47, unwind: bb91]
  }
  preds [bb45]
  succs [bb47, bb91]

bb47
  0: StorageDead(_94)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:64-239:65)
  1: StorageDead(_93)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:64-239:65)
  2: PlaceMention(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  3: _101 = discriminant((_92.0: core::option::Option<I>))
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:25-239:65)
      kind: switchInt(move _101) -> [0: bb49, 1: bb52, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49, bb52]

bb48
  0: FakeRead(ForMatchedPlace(None), _92)
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
      kind: unreachable
  }
  preds [bb47, bb49, bb52]
  succs []

bb49
  0: _99 = discriminant((_92.1: core::option::Option<I>))
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:25-239:65)
      kind: switchInt(move _99) -> [0: bb50, 1: bb51, otherwise: bb48]
  }
  preds [bb47]
  succs [bb48, bb50, bb51]

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:240:21-240:33)
      kind: falseEdge -> [real: bb55, imaginary: bb52]
  }
  preds [bb49]
  succs [bb52, bb55]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:246:44-246:64)
      kind: falseEdge -> [real: bb59, imaginary: bb54]
  }
  preds [bb49, bb53]
  succs [bb54, bb59]

bb52
  0: _100 = discriminant((_92.1: core::option::Option<I>))
    SourceInfo(regex-syntax/src/hir/interval.rs:239:31-239:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:25-239:65)
      kind: switchInt(move _100) -> [0: bb53, 1: bb54, otherwise: bb48]
  }
  preds [bb47, bb50]
  succs [bb48, bb53, bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:246:21-246:41)
      kind: falseEdge -> [real: bb58, imaginary: bb51]
  }
  preds [bb52]
  succs [bb51, bb58]

bb54
  0: StorageLive(_105)
    SourceInfo(regex-syntax/src/hir/interval.rs:247:27-247:33)
  1: _105 = (((_92.0: core::option::Option<I>) as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:247:27-247:33)
  2: StorageLive(_106)
    SourceInfo(regex-syntax/src/hir/interval.rs:247:41-247:47)
  3: _106 = (((_92.1: core::option::Option<I>) as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:247:41-247:47)
  4: StorageLive(_107)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:25-248:49)
  5: StorageLive(_108)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:25-248:36)
  6: _108 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:25-248:36)
  7: StorageLive(_109)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:42-248:48)
  8: _109 = _105
    SourceInfo(regex-syntax/src/hir/interval.rs:248:42-248:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:248:25-248:49)
      kind: _107 = std::vec::Vec::<I>::push(move _108, move _109) -> [return: bb60, unwind: bb91]
  }
  preds [bb51, bb52]
  succs [bb60, bb91]

bb55
  0: _103 = AddWithOverflow(_11, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:243:25-243:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:243:25-243:31)
      kind: assert(!move (_103.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, const 1_usize) -> [success: bb56, unwind: bb91]
  }
  preds [bb50]
  succs [bb56, bb91]

bb56
  0: _11 = move (_103.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:243:25-243:31)
  1: StorageDead(_91)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:17-251:18)
  2: StorageDead(_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  3: StorageDead(_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  4: StorageDead(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  5: StorageDead(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  6: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  7: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  8: StorageDead(_78)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  9: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb55]
  succs [bb77]

bb57
  0: _91 = _104
    SourceInfo(regex-syntax/src/hir/interval.rs:246:68-246:74)
  1: StorageDead(_104)
    SourceInfo(regex-syntax/src/hir/interval.rs:246:73-246:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:246:73-246:74)
      kind: goto -> bb61
  }
  preds [bb58, bb59]
  succs [bb61]

bb58
  0: StorageLive(_104)
    SourceInfo(regex-syntax/src/hir/interval.rs:246:27-246:33)
  1: _104 = (((_92.0: core::option::Option<I>) as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:246:27-246:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:25-251:18)
      kind: goto -> bb57
  }
  preds [bb53]
  succs [bb57]

bb59
  0: StorageLive(_104)
    SourceInfo(regex-syntax/src/hir/interval.rs:246:56-246:62)
  1: _104 = (((_92.1: core::option::Option<I>) as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:246:56-246:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:239:25-251:18)
      kind: goto -> bb57
  }
  preds [bb51]
  succs [bb57]

bb60
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:48-248:49)
  1: StorageDead(_108)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:48-248:49)
  2: StorageDead(_107)
    SourceInfo(regex-syntax/src/hir/interval.rs:248:49-248:50)
  3: _91 = _106
    SourceInfo(regex-syntax/src/hir/interval.rs:249:25-249:31)
  4: StorageDead(_106)
    SourceInfo(regex-syntax/src/hir/interval.rs:250:21-250:22)
  5: StorageDead(_105)
    SourceInfo(regex-syntax/src/hir/interval.rs:250:21-250:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:250:21-250:22)
      kind: goto -> bb61
  }
  preds [bb54]
  succs [bb61]

bb61
  0: _74 = move _91
    SourceInfo(regex-syntax/src/hir/interval.rs:239:17-251:18)
  1: StorageDead(_91)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:17-251:18)
  2: StorageDead(_96)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  3: StorageDead(_95)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  4: StorageDead(_92)
    SourceInfo(regex-syntax/src/hir/interval.rs:251:18-251:19)
  5: StorageLive(_110)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:17-260:18)
  6: StorageLive(_111)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:63)
  7: StorageLive(_112)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:43)
  8: StorageLive(_113)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:43)
  9: StorageLive(_114)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:35)
  10: StorageLive(_115)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:32-258:35)
  11: StorageLive(_116)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:32)
  12: _116 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:32)
  13: StorageLive(_117)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:33-258:34)
  14: _117 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:258:33-258:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:258:32-258:35)
      kind: _115 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _116, move _117) -> [return: bb62, unwind: bb91]
  }
  preds [bb57, bb60]
  succs [bb62, bb91]

bb62
  0: _114 = &(*_115)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:35)
  1: StorageDead(_117)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:34-258:35)
  2: StorageDead(_116)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:34-258:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:43)
      kind: _113 = <I as hir::interval::Interval>::upper(move _114) -> [return: bb63, unwind: bb91]
  }
  preds [bb61]
  succs [bb63, bb91]

bb63
  0: _112 = &_113
    SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:43)
  1: StorageDead(_114)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:42-258:43)
  2: StorageLive(_118)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:63)
  3: StorageLive(_119)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:63)
  4: StorageLive(_120)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:55)
  5: _120 = &_90
    SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:63)
      kind: _119 = <I as hir::interval::Interval>::upper(move _120) -> [return: bb64, unwind: bb91]
  }
  preds [bb62]
  succs [bb64, bb91]

bb64
  0: _118 = &_119
    SourceInfo(regex-syntax/src/hir/interval.rs:258:46-258:63)
  1: StorageDead(_120)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:63)
      kind: _111 = <<I as hir::interval::Interval>::Bound as core::cmp::PartialOrd>::gt(move _112, move _118) -> [return: bb65, unwind: bb91]
  }
  preds [bb63]
  succs [bb65, bb91]

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:258:20-258:63)
      kind: switchInt(move _111) -> [0: bb67, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb67]

bb66
  0: StorageDead(_119)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  1: StorageDead(_118)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  2: StorageDead(_115)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  3: StorageDead(_113)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  4: StorageDead(_112)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  5: _78 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:259:21-259:26)
  6: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/interval.rs:260:17-260:18)
  7: StorageDead(_110)
    SourceInfo(regex-syntax/src/hir/interval.rs:260:17-260:18)
  8: StorageDead(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb65]
  succs [bb71]

bb67
  0: StorageDead(_119)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  1: StorageDead(_118)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  2: StorageDead(_115)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  3: StorageDead(_113)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  4: StorageDead(_112)
    SourceInfo(regex-syntax/src/hir/interval.rs:258:62-258:63)
  5: _110 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:260:18-260:18)
  6: StorageDead(_111)
    SourceInfo(regex-syntax/src/hir/interval.rs:260:17-260:18)
  7: StorageDead(_110)
    SourceInfo(regex-syntax/src/hir/interval.rs:260:17-260:18)
  8: _122 = AddWithOverflow(_12, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:263:17-263:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:263:17-263:23)
      kind: assert(!move (_122.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, const 1_usize) -> [success: bb68, unwind: bb91]
  }
  preds [bb65]
  succs [bb68, bb91]

bb68
  0: _12 = move (_122.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:263:17-263:23)
  1: _15 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:237:13-264:14)
  2: StorageDead(_90)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  3: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  4: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
      kind: goto -> bb38
  }
  preds [bb67]
  succs [bb38]

bb69
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:40-235:41)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:40-235:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb40]
  succs [bb70]

bb70
  0: StorageLive(_124)
    SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
  1: _78 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:235:13-264:14)
  2: StorageDead(_124)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb44, bb69]
  succs [bb71]

bb71
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  2: StorageDead(_78)
    SourceInfo(regex-syntax/src/hir/interval.rs:264:13-264:14)
  3: StorageLive(_126)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:13-265:36)
  4: StorageLive(_127)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:13-265:24)
  5: _127 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:13-265:24)
  6: StorageLive(_128)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:30-265:35)
  7: _128 = _74
    SourceInfo(regex-syntax/src/hir/interval.rs:265:30-265:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:265:13-265:36)
      kind: _126 = std::vec::Vec::<I>::push(move _127, move _128) -> [return: bb72, unwind: bb91]
  }
  preds [bb66, bb70]
  succs [bb72, bb91]

bb72
  0: StorageDead(_128)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:35-265:36)
  1: StorageDead(_127)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:35-265:36)
  2: StorageDead(_126)
    SourceInfo(regex-syntax/src/hir/interval.rs:265:36-265:37)
  3: _129 = AddWithOverflow(_11, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:266:13-266:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:266:13-266:19)
      kind: assert(!move (_129.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, const 1_usize) -> [success: bb73, unwind: bb91]
  }
  preds [bb71]
  succs [bb73, bb91]

bb73
  0: _11 = move (_129.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:266:13-266:19)
  1: _15 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:204:62-267:10)
  2: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  4: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
      kind: goto -> bb9
  }
  preds [bb72]
  succs [bb9]

bb74
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:60-204:61)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:60-204:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb12]
  succs [bb76]

bb75
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:34-204:35)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:34-204:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb76
  }
  preds [bb10]
  succs [bb76]

bb76
  0: StorageLive(_131)
    SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
  1: _14 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:204:9-267:10)
  2: StorageDead(_131)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  4: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  6: StorageLive(_133)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
      kind: goto -> bb78
  }
  preds [bb74, bb75]
  succs [bb78]

bb77
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:267:9-267:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb9
  }
  preds [bb20, bb30, bb56]
  succs [bb9]

bb78
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
      kind: falseUnwind -> [real: bb79, unwind: bb91]
  }
  preds [bb76, bb83]
  succs [bb79, bb91]

bb79
  0: StorageLive(_134)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:15-268:28)
  1: StorageLive(_135)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:15-268:16)
  2: _135 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:268:15-268:16)
  3: StorageLive(_136)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:19-268:28)
  4: _136 = _9
    SourceInfo(regex-syntax/src/hir/interval.rs:268:19-268:28)
  5: _134 = Lt(move _135, move _136)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:15-268:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:268:15-268:28)
      kind: switchInt(move _134) -> [0: bb84, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb84]

bb80
  0: StorageDead(_136)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:27-268:28)
  1: StorageDead(_135)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:27-268:28)
  2: StorageLive(_137)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:17-269:22)
  3: StorageLive(_138)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:36-269:39)
  4: StorageLive(_139)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:25-269:36)
  5: _139 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:25-269:36)
  6: StorageLive(_140)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:37-269:38)
  7: _140 = _11
    SourceInfo(regex-syntax/src/hir/interval.rs:269:37-269:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:269:36-269:39)
      kind: _138 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _139, move _140) -> [return: bb81, unwind: bb91]
  }
  preds [bb79]
  succs [bb81, bb91]

bb81
  0: _137 = (*_138)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:25-269:39)
  1: StorageDead(_140)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:38-269:39)
  2: StorageDead(_139)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:38-269:39)
  3: FakeRead(ForLet(None), _137)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:17-269:22)
  4: StorageDead(_138)
    SourceInfo(regex-syntax/src/hir/interval.rs:269:39-269:40)
  5: StorageLive(_141)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:13-270:36)
  6: StorageLive(_142)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:13-270:24)
  7: _142 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:13-270:24)
  8: StorageLive(_143)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:30-270:35)
  9: _143 = _137
    SourceInfo(regex-syntax/src/hir/interval.rs:270:30-270:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:270:13-270:36)
      kind: _141 = std::vec::Vec::<I>::push(move _142, move _143) -> [return: bb82, unwind: bb91]
  }
  preds [bb80]
  succs [bb82, bb91]

bb82
  0: StorageDead(_143)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:35-270:36)
  1: StorageDead(_142)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:35-270:36)
  2: StorageDead(_141)
    SourceInfo(regex-syntax/src/hir/interval.rs:270:36-270:37)
  3: _144 = AddWithOverflow(_11, const 1_usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:271:13-271:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:271:13-271:19)
      kind: assert(!move (_144.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, const 1_usize) -> [success: bb83, unwind: bb91]
  }
  preds [bb81]
  succs [bb83, bb91]

bb83
  0: _11 = move (_144.0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:271:13-271:19)
  1: _15 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:268:29-272:10)
  2: StorageDead(_137)
    SourceInfo(regex-syntax/src/hir/interval.rs:272:9-272:10)
  3: StorageDead(_134)
    SourceInfo(regex-syntax/src/hir/interval.rs:272:9-272:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
      kind: goto -> bb78
  }
  preds [bb82]
  succs [bb78]

bb84
  0: StorageDead(_136)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:27-268:28)
  1: StorageDead(_135)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:27-268:28)
  2: StorageLive(_146)
    SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
  3: _133 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:268:9-272:10)
  4: StorageDead(_146)
    SourceInfo(regex-syntax/src/hir/interval.rs:272:9-272:10)
  5: StorageDead(_134)
    SourceInfo(regex-syntax/src/hir/interval.rs:272:9-272:10)
  6: StorageDead(_133)
    SourceInfo(regex-syntax/src/hir/interval.rs:272:9-272:10)
  7: StorageLive(_148)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:9-273:39)
  8: StorageLive(_149)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:9-273:20)
  9: _149 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:9-273:20)
  10: StorageLive(_150)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:27-273:38)
  11: StorageLive(_151)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:29-273:38)
  12: _151 = _9
    SourceInfo(regex-syntax/src/hir/interval.rs:273:29-273:38)
  13: _150 = core::ops::RangeTo::<usize> { end: move _151 }
    SourceInfo(regex-syntax/src/hir/interval.rs:273:27-273:38)
  14: StorageDead(_151)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:37-273:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:273:9-273:39)
      kind: _148 = std::vec::Vec::<I>::drain::<core::ops::RangeTo<usize>>(move _149, move _150) -> [return: bb85, unwind: bb91]
  }
  preds [bb79]
  succs [bb85, bb91]

bb85
  0: StorageDead(_150)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:38-273:39)
  1: StorageDead(_149)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:38-273:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:273:39-273:40)
      kind: drop(_148) -> [return: bb86, unwind: bb91]
  }
  preds [bb84]
  succs [bb86, bb91]

bb86
  0: StorageDead(_148)
    SourceInfo(regex-syntax/src/hir/interval.rs:273:39-273:40)
  1: StorageLive(_152)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:50)
  2: StorageLive(_153)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:34)
  3: _153 = ((*_1).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:34)
      kind: switchInt(move _153) -> [0: bb88, otherwise: bb87]
  }
  preds [bb85]
  succs [bb87, bb88]

bb87
  0: _152 = ((*_2).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:38-274:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:50)
      kind: goto -> bb89
  }
  preds [bb86]
  succs [bb89]

bb88
  0: _152 = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:274:23-274:50)
      kind: goto -> bb89
  }
  preds [bb86]
  succs [bb89]

bb89
  0: StorageDead(_153)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:49-274:50)
  1: ((*_1).1: bool) = move _152
    SourceInfo(regex-syntax/src/hir/interval.rs:274:9-274:50)
  2: StorageDead(_152)
    SourceInfo(regex-syntax/src/hir/interval.rs:274:49-274:50)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:185:58-275:6)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:275:5-275:6)
  5: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:275:5-275:6)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:275:5-275:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:275:6-275:6)
      kind: goto -> bb90
  }
  preds [bb87, bb88]
  succs [bb90]

bb90
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:275:6-275:6)
      kind: return
  }
  preds [bb6, bb89]
  succs []

bb91
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:185:5-275:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb9, bb11, bb13, bb14, bb15, bb16, bb17, bb19, bb21, bb22, bb23, bb24, bb25, bb27, bb28, bb29, bb31, bb32, bb33, bb35, bb36, bb38, bb39, bb41, bb42, bb45, bb46, bb54, bb55, bb61, bb62, bb63, bb64, bb67, bb71, bb72, bb78, bb80, bb81, bb82, bb84, bb85]
  succs []

