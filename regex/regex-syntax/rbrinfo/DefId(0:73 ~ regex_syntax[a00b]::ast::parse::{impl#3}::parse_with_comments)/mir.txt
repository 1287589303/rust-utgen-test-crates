bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:9-372:36)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:9-372:36)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:22-372:26)
  3: _5 = move _1
    SourceInfo(regex-syntax/src/ast/parse.rs:372:22-372:26)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:28-372:35)
  5: _6 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:28-372:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:372:9-372:36)
      kind: _4 = ast::parse::ParserI::<'_, &mut ast::parse::Parser>::new(move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _3 = &_4
    SourceInfo(regex-syntax/src/ast/parse.rs:372:9-372:36)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:35-372:36)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:35-372:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:372:9-372:58)
      kind: _0 = ast::parse::ParserI::<'_, &mut ast::parse::Parser>::parse_with_comments(move _3) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:372:57-372:58)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:373:5-373:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:373:6-373:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:368:5-373:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

