bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1009:15-1009:20)
  1: _2 = discriminant((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1009:15-1009:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1009:9-1009:20)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:1009:15-1009:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1009:15-1009:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1010:13-1010:34)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:26-1011:31)
  1: _7 = &(((*_1) as Bytes).0: hir::ClassBytes)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:26-1011:31)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:46)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:46)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:37)
  5: _10 = &(*_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:46)
      kind: _9 = hir::ClassBytes::ranges(move _10) -> [return: bb7, unwind: bb10]
  }
  preds [bb0, bb2]
  succs [bb7, bb10]

bb4
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:28-1010:33)
  1: _3 = &(((*_1) as Unicode).0: hir::ClassUnicode)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:28-1010:33)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:48)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:48)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:39)
  5: _6 = &(*_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:48)
      kind: _5 = hir::ClassUnicode::ranges(move _6) -> [return: bb5, unwind: bb10]
  }
  preds [bb2]
  succs [bb5, bb10]

bb5
  0: _4 = &(*_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:48)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:47-1010:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1010:38-1010:59)
      kind: _0 = core::slice::<impl [hir::ClassUnicodeRange]>::is_empty(move _4) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:58-1010:59)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:58-1010:59)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1010:58-1010:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1010:58-1010:59)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: _8 = &(*_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:46)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:45-1011:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1011:36-1011:57)
      kind: _0 = core::slice::<impl [hir::ClassBytesRange]>::is_empty(move _8) -> [return: bb8, unwind: bb10]
  }
  preds [bb3]
  succs [bb8, bb10]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:56-1011:57)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:56-1011:57)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:1011:56-1011:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1011:56-1011:57)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1013:6-1013:6)
      kind: return
  }
  preds [bb6, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1008:5-1013:6)
      kind: resume
  }
  preds [bb3, bb4, bb5, bb7]
  succs []

