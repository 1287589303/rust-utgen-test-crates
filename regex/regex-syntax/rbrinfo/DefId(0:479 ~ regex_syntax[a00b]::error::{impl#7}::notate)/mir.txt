bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/error.rs:198:13-198:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:198:27-198:40)
      kind: _2 = std::string::String::new() -> [return: bb1, unwind: bb39]
  }
  preds []
  succs [bb1, bb39]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/error.rs:198:13-198:24)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:46)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:38)
  6: _7 = &(*((*_1).0: &str))
    SourceInfo(regex-syntax/src/error.rs:199:26-199:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:46)
      kind: _6 = core::str::<impl str>::lines(move _7) -> [return: bb2, unwind: bb38]
  }
  preds [bb0]
  succs [bb2, bb38]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:199:45-199:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
      kind: _5 = <core::str::Lines<'_> as core::iter::Iterator>::enumerate(move _6) -> [return: bb3, unwind: bb38]
  }
  preds [bb1]
  succs [bb3, bb38]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:199:57-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
      kind: _4 = <core::iter::Enumerate<core::str::Lines<'_>> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb4, unwind: bb38]
  }
  preds [bb2]
  succs [bb4, bb38]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:199:57-199:58)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  3: _8 = move _4
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
      kind: falseUnwind -> [real: bb6, unwind: bb38]
  }
  preds [bb4, bb33]
  succs [bb6, bb38]

bb6
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  4: _13 = &mut _8
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  5: _12 = &mut (*_13)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
      kind: _11 = <core::iter::Enumerate<core::str::Lines<'_>> as core::iter::Iterator>::next(move _12) -> [return: bb7, unwind: bb38]
  }
  preds [bb5]
  succs [bb7, bb38]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:199:57-199:58)
  1: PlaceMention(_11)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  2: _14 = discriminant(_11)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
      kind: switchInt(move _14) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:26-199:58)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/error.rs:199:14-199:15)
  1: _16 = (((_11 as Some).0: (usize, &str)).0: usize)
    SourceInfo(regex-syntax/src/error.rs:199:14-199:15)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/error.rs:199:17-199:21)
  3: _17 = (((_11 as Some).0: (usize, &str)).1: &str)
    SourceInfo(regex-syntax/src/error.rs:199:17-199:21)
  4: StorageLive(_18)
    SourceInfo(regex-syntax/src/error.rs:200:13-205:14)
  5: StorageLive(_19)
    SourceInfo(regex-syntax/src/error.rs:200:16-200:42)
  6: StorageLive(_20)
    SourceInfo(regex-syntax/src/error.rs:200:16-200:38)
  7: _20 = ((*_1).1: usize)
    SourceInfo(regex-syntax/src/error.rs:200:16-200:38)
  8: _19 = Gt(move _20, const 0_usize)
    SourceInfo(regex-syntax/src/error.rs:200:16-200:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:200:16-200:42)
      kind: switchInt(move _19) -> [0: bb19, otherwise: bb12]
  }
  preds [bb7, bb9]
  succs [bb12, bb19]

bb11
  0: _3 = const ()
    SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  6: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  7: _0 = move _2
    SourceInfo(regex-syntax/src/error.rs:213:9-213:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:214:5-214:6)
      kind: drop(_2) -> [return: bb34, unwind: bb39]
  }
  preds [bb9]
  succs [bb34, bb39]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/error.rs:200:41-200:42)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/error.rs:201:17-201:68)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/error.rs:201:17-201:24)
  3: _22 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:201:17-201:24)
  4: StorageLive(_23)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  5: StorageLive(_24)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  6: StorageLive(_25)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  7: StorageLive(_26)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  8: StorageLive(_27)
    SourceInfo(regex-syntax/src/error.rs:201:35-201:67)
  9: StorageLive(_28)
    SourceInfo(regex-syntax/src/error.rs:201:35-201:39)
  10: _28 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:201:35-201:39)
  11: StorageLive(_29)
    SourceInfo(regex-syntax/src/error.rs:201:61-201:66)
  12: StorageLive(_30)
    SourceInfo(regex-syntax/src/error.rs:201:61-201:62)
  13: _30 = _16
    SourceInfo(regex-syntax/src/error.rs:201:61-201:62)
  14: _31 = AddWithOverflow(_30, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:201:61-201:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:61-201:66)
      kind: assert(!move (_31.1: bool), "attempt to compute `{} + {}`, which would overflow", move _30, const 1_usize) -> [success: bb13, unwind: bb38]
  }
  preds [bb10]
  succs [bb13, bb38]

bb13
  0: _29 = move (_31.0: usize)
    SourceInfo(regex-syntax/src/error.rs:201:61-201:66)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/error.rs:201:65-201:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:35-201:67)
      kind: _27 = error::Spans::<'_>::left_pad_line_number(move _28, move _29) -> [return: bb14, unwind: bb38]
  }
  preds [bb12]
  succs [bb14, bb38]

bb14
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/error.rs:201:66-201:67)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/error.rs:201:66-201:67)
  2: _26 = &_27
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  3: _25 = &(*_26)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
      kind: _24 = <std::string::String as core::ops::Deref>::deref(move _25) -> [return: bb15, unwind: bb37]
  }
  preds [bb13]
  succs [bb15, bb37]

bb15
  0: _23 = &(*_24)
    SourceInfo(regex-syntax/src/error.rs:201:34-201:67)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/error.rs:201:66-201:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:17-201:68)
      kind: _21 = std::string::String::push_str(move _22, move _23) -> [return: bb16, unwind: bb37]
  }
  preds [bb14]
  succs [bb16, bb37]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/error.rs:201:67-201:68)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/error.rs:201:67-201:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
      kind: drop(_27) -> [return: bb17, unwind: bb38]
  }
  preds [bb15]
  succs [bb17, bb38]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
  4: StorageLive(_32)
    SourceInfo(regex-syntax/src/error.rs:202:17-202:39)
  5: StorageLive(_33)
    SourceInfo(regex-syntax/src/error.rs:202:17-202:24)
  6: _33 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:202:17-202:24)
  7: StorageLive(_34)
    SourceInfo(regex-syntax/src/error.rs:202:34-202:38)
  8: StorageLive(_35)
    SourceInfo(regex-syntax/src/error.rs:202:34-202:38)
  9: _35 = const ": "
    SourceInfo(regex-syntax/src/error.rs:202:34-202:38)
  10: _34 = &(*_35)
    SourceInfo(regex-syntax/src/error.rs:202:34-202:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:202:17-202:39)
      kind: _32 = std::string::String::push_str(move _33, move _34) -> [return: bb18, unwind: bb38]
  }
  preds [bb16]
  succs [bb18, bb38]

bb18
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/error.rs:202:38-202:39)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/error.rs:202:38-202:39)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/error.rs:202:39-202:40)
  3: StorageDead(_32)
    SourceInfo(regex-syntax/src/error.rs:202:39-202:40)
  4: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:200:43-203:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:200:13-205:14)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/error.rs:200:41-200:42)
  1: StorageLive(_36)
    SourceInfo(regex-syntax/src/error.rs:204:17-204:41)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/error.rs:204:17-204:24)
  3: _37 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:204:17-204:24)
  4: StorageLive(_38)
    SourceInfo(regex-syntax/src/error.rs:204:34-204:40)
  5: StorageLive(_39)
    SourceInfo(regex-syntax/src/error.rs:204:34-204:40)
  6: _39 = const "    "
    SourceInfo(regex-syntax/src/error.rs:204:34-204:40)
  7: _38 = &(*_39)
    SourceInfo(regex-syntax/src/error.rs:204:34-204:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:204:17-204:41)
      kind: _36 = std::string::String::push_str(move _37, move _38) -> [return: bb20, unwind: bb38]
  }
  preds [bb10]
  succs [bb20, bb38]

bb20
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/error.rs:204:40-204:41)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/error.rs:204:40-204:41)
  2: StorageDead(_39)
    SourceInfo(regex-syntax/src/error.rs:204:41-204:42)
  3: StorageDead(_36)
    SourceInfo(regex-syntax/src/error.rs:204:41-204:42)
  4: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:203:20-205:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:200:13-205:14)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/error.rs:205:13-205:14)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/error.rs:205:13-205:14)
  2: StorageLive(_40)
    SourceInfo(regex-syntax/src/error.rs:206:13-206:35)
  3: StorageLive(_41)
    SourceInfo(regex-syntax/src/error.rs:206:13-206:20)
  4: _41 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:206:13-206:20)
  5: StorageLive(_42)
    SourceInfo(regex-syntax/src/error.rs:206:30-206:34)
  6: _42 = &(*_17)
    SourceInfo(regex-syntax/src/error.rs:206:30-206:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:206:13-206:35)
      kind: _40 = std::string::String::push_str(move _41, move _42) -> [return: bb22, unwind: bb38]
  }
  preds [bb18, bb20]
  succs [bb22, bb38]

bb22
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/error.rs:206:34-206:35)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/error.rs:206:34-206:35)
  2: StorageDead(_40)
    SourceInfo(regex-syntax/src/error.rs:206:35-206:36)
  3: StorageLive(_43)
    SourceInfo(regex-syntax/src/error.rs:207:13-207:31)
  4: StorageLive(_44)
    SourceInfo(regex-syntax/src/error.rs:207:13-207:20)
  5: _44 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:207:13-207:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:207:13-207:31)
      kind: _43 = std::string::String::push(move _44, const '\n') -> [return: bb23, unwind: bb38]
  }
  preds [bb21]
  succs [bb23, bb38]

bb23
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/error.rs:207:30-207:31)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/error.rs:207:31-207:32)
  2: StorageLive(_45)
    SourceInfo(regex-syntax/src/error.rs:208:34-208:53)
  3: StorageLive(_46)
    SourceInfo(regex-syntax/src/error.rs:208:34-208:38)
  4: _46 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:208:34-208:38)
  5: StorageLive(_47)
    SourceInfo(regex-syntax/src/error.rs:208:51-208:52)
  6: _47 = _16
    SourceInfo(regex-syntax/src/error.rs:208:51-208:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:208:34-208:53)
      kind: _45 = error::Spans::<'_>::notate_line(move _46, move _47) -> [return: bb24, unwind: bb38]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/error.rs:208:52-208:53)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/error.rs:208:52-208:53)
  2: PlaceMention(_45)
    SourceInfo(regex-syntax/src/error.rs:208:34-208:53)
  3: _48 = discriminant(_45)
    SourceInfo(regex-syntax/src/error.rs:208:34-208:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:208:20-208:31)
      kind: switchInt(move _48) -> [1: bb25, otherwise: bb30]
  }
  preds [bb23]
  succs [bb25, bb30]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:208:20-208:31)
      kind: falseEdge -> [real: bb26, imaginary: bb30]
  }
  preds [bb24]
  succs [bb26, bb30]

bb26
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/error.rs:208:25-208:30)
  1: _49 = move ((_45 as Some).0: std::string::String)
    SourceInfo(regex-syntax/src/error.rs:208:25-208:30)
  2: StorageLive(_50)
    SourceInfo(regex-syntax/src/error.rs:209:17-209:41)
  3: StorageLive(_51)
    SourceInfo(regex-syntax/src/error.rs:209:17-209:24)
  4: _51 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:209:17-209:24)
  5: StorageLive(_52)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  6: StorageLive(_53)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  7: StorageLive(_54)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  8: StorageLive(_55)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  9: _55 = &_49
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  10: _54 = &(*_55)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
      kind: _53 = <std::string::String as core::ops::Deref>::deref(move _54) -> [return: bb27, unwind: bb35]
  }
  preds [bb25]
  succs [bb27, bb35]

bb27
  0: _52 = &(*_53)
    SourceInfo(regex-syntax/src/error.rs:209:34-209:40)
  1: StorageDead(_54)
    SourceInfo(regex-syntax/src/error.rs:209:39-209:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:209:17-209:41)
      kind: _50 = std::string::String::push_str(move _51, move _52) -> [return: bb28, unwind: bb35]
  }
  preds [bb26]
  succs [bb28, bb35]

bb28
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/error.rs:209:40-209:41)
  1: StorageDead(_51)
    SourceInfo(regex-syntax/src/error.rs:209:40-209:41)
  2: StorageDead(_55)
    SourceInfo(regex-syntax/src/error.rs:209:41-209:42)
  3: StorageDead(_53)
    SourceInfo(regex-syntax/src/error.rs:209:41-209:42)
  4: StorageDead(_50)
    SourceInfo(regex-syntax/src/error.rs:209:41-209:42)
  5: StorageLive(_56)
    SourceInfo(regex-syntax/src/error.rs:210:17-210:35)
  6: StorageLive(_57)
    SourceInfo(regex-syntax/src/error.rs:210:17-210:24)
  7: _57 = &mut _2
    SourceInfo(regex-syntax/src/error.rs:210:17-210:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:210:17-210:35)
      kind: _56 = std::string::String::push(move _57, const '\n') -> [return: bb29, unwind: bb35]
  }
  preds [bb27]
  succs [bb29, bb35]

bb29
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/error.rs:210:34-210:35)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/error.rs:210:35-210:36)
  2: _10 = const ()
    SourceInfo(regex-syntax/src/error.rs:208:54-211:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:211:13-211:14)
      kind: drop(_49) -> [return: bb31, unwind: bb36]
  }
  preds [bb28]
  succs [bb31, bb36]

bb30
  0: _10 = const ()
    SourceInfo(regex-syntax/src/error.rs:211:14-211:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:208:13-211:14)
      kind: goto -> bb32
  }
  preds [bb24, bb25]
  succs [bb32]

bb31
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/error.rs:211:13-211:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:208:13-211:14)
      kind: goto -> bb32
  }
  preds [bb29]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
      kind: drop(_45) -> [return: bb33, unwind: bb38]
  }
  preds [bb30, bb31]
  succs [bb33, bb38]

bb33
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  4: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  5: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
  6: _9 = const ()
    SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:199:9-212:10)
      kind: goto -> bb5
  }
  preds [bb32]
  succs [bb5]

bb34
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/error.rs:214:5-214:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:214:6-214:6)
      kind: return
  }
  preds [bb11]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:211:13-211:14)
      kind: drop(_49) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb26, bb27, bb28]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:212:9-212:10)
      kind: drop(_45) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb29, bb35]
  succs [bb38]

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:201:68-201:69)
      kind: drop(_27) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb14, bb15]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:214:5-214:6)
      kind: drop(_2) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb5, bb6, bb12, bb13, bb16, bb17, bb19, bb21, bb22, bb23, bb32, bb36, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:197:5-214:6)
      kind: resume
  }
  preds [bb0, bb11, bb38]
  succs []

