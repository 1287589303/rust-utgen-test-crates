bb0
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:30-1102:10)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:40)
  3: _7 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:40)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:56-1099:61)
  5: _8 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:56-1099:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
      kind: _6 = hir::literal::Seq::cross_preamble(move _7, move _8) -> [return: bb1, unwind: bb73]
  }
  preds []
  succs [bb1, bb73]

bb1
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:61-1099:62)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:61-1099:62)
  2: PlaceMention(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
  3: _9 = discriminant(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1099:30-1099:62)
      kind: switchInt(move _9) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1099:36-1099:62)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1100:13-1100:17)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:19-1101:24)
  1: _11 = move (((_6 as Some).0: (&mut std::vec::Vec<hir::literal::Literal>, &mut std::vec::Vec<hir::literal::Literal>)).0: &mut std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:19-1101:24)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:26-1101:31)
  3: _12 = move (((_6 as Some).0: (&mut std::vec::Vec<hir::literal::Literal>, &mut std::vec::Vec<hir::literal::Literal>)).1: &mut std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:26-1101:31)
  4: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:38-1101:43)
  5: _13 = move _11
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:38-1101:43)
  6: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:45-1101:50)
  7: _14 = move _12
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:45-1101:50)
  8: _5 = (move _13, move _14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:37-1101:51)
  9: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:50-1101:51)
  10: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:50-1101:51)
  11: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:50-1101:51)
  12: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1101:50-1101:51)
  13: PlaceMention(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:30-1102:10)
  14: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:14-1099:19)
  15: _3 = move (_5.0: &mut std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:14-1099:19)
  16: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:21-1099:26)
  17: _4 = move (_5.1: &mut std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1099:21-1099:26)
  18: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1102:10-1102:11)
  19: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1102:10-1102:11)
  20: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:13-1107:19)
  21: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:22-1107:33)
  22: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:22-1107:27)
  23: _17 = &(*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:22-1107:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1107:22-1107:33)
      kind: _16 = std::vec::Vec::<hir::literal::Literal>::len(move _17) -> [return: bb6, unwind: bb73]
  }
  preds [bb1, bb3]
  succs [bb6, bb73]

bb5
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1100:21-1100:27)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1102:10-1102:11)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1102:10-1102:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1134:6-1134:6)
      kind: goto -> bb60
  }
  preds [bb3]
  succs [bb60]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:32-1107:33)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:49-1107:60)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:49-1107:54)
  3: _19 = &(*_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:49-1107:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1107:49-1107:60)
      kind: _18 = std::vec::Vec::<hir::literal::Literal>::len(move _19) -> [return: bb7, unwind: bb73]
  }
  preds [bb4]
  succs [bb7, bb73]

bb7
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:59-1107:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1107:22-1107:61)
      kind: _15 = core::num::<impl usize>::saturating_mul(move _16, move _18) -> [return: bb8, unwind: bb73]
  }
  preds [bb6]
  succs [bb8, bb73]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:60-1107:61)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:60-1107:61)
  2: FakeRead(ForLet(None), _15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1107:13-1107:19)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:13-1108:21)
  4: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:37-1108:42)
  5: _21 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:37-1108:42)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:44-1108:70)
  7: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:63-1108:69)
  8: _23 = _15
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:63-1108:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1108:44-1108:70)
      kind: _22 = std::vec::Vec::<hir::literal::Literal>::with_capacity(move _23) -> [return: bb9, unwind: bb73]
  }
  preds [bb7]
  succs [bb9, bb73]

bb9
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:69-1108:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1108:24-1108:71)
      kind: _20 = core::mem::replace::<std::vec::Vec<hir::literal::Literal>>(move _21, move _22) -> [return: bb10, unwind: bb72]
  }
  preds [bb8]
  succs [bb10, bb72]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:70-1108:71)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:70-1108:71)
  2: FakeRead(ForLet(None), _20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1108:13-1108:21)
  3: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  6: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:45)
  7: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:35)
  8: _28 = &mut (*_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:35)
  9: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:42-1109:44)
  10: _29 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:42-1109:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:45)
      kind: _27 = std::vec::Vec::<hir::literal::Literal>::drain::<core::ops::RangeFull>(move _28, move _29) -> [return: bb11, unwind: bb71]
  }
  preds [bb9]
  succs [bb11, bb71]

bb11
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:44-1109:45)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:44-1109:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
      kind: _26 = <std::vec::Drain<'_, hir::literal::Literal> as core::iter::Iterator>::enumerate(move _27) -> [return: bb12, unwind: bb70]
  }
  preds [bb10]
  succs [bb12, bb70]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:56-1109:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
      kind: _25 = <core::iter::Enumerate<std::vec::Drain<'_, hir::literal::Literal>> as core::iter::IntoIterator>::into_iter(move _26) -> [return: bb13, unwind: bb69]
  }
  preds [bb11]
  succs [bb13, bb69]

bb13
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:56-1109:57)
  1: PlaceMention(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  3: _30 = move _25
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
      kind: falseUnwind -> [real: bb15, unwind: bb67]
  }
  preds [bb13, bb54]
  succs [bb15, bb67]

bb15
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  4: _35 = &mut _30
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  5: _34 = &mut (*_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
      kind: _33 = <core::iter::Enumerate<std::vec::Drain<'_, hir::literal::Literal>> as core::iter::Iterator>::next(move _34) -> [return: bb16, unwind: bb67]
  }
  preds [bb14]
  succs [bb16, bb67]

bb16
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:56-1109:57)
  1: PlaceMention(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  2: _36 = discriminant(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
      kind: switchInt(move _36) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:30-1109:57)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:14-1109:15)
  1: _38 = (((_33 as Some).0: (usize, hir::literal::Literal)).0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:14-1109:15)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:17-1109:25)
  3: _39 = move (((_33 as Some).0: (usize, hir::literal::Literal)).1: hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:17-1109:25)
  4: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  5: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  6: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:36)
  7: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  8: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:36)
  9: _44 = &_20
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: _43 = <std::vec::Vec<hir::literal::Literal> as core::ops::Deref>::deref(move _44) -> [return: bb21, unwind: bb65]
  }
  preds [bb16, bb18]
  succs [bb21, bb65]

bb20
  0: _24 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_33) -> [return: bb55, unwind: bb67]
  }
  preds [bb18]
  succs [bb55, bb67]

bb21
  0: _42 = &(*_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:36)
  1: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:35-1110:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: _41 = core::slice::<impl [hir::literal::Literal]>::iter(move _42) -> [return: bb22, unwind: bb65]
  }
  preds [bb19]
  succs [bb22, bb65]

bb22
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:42-1110:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: _40 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::IntoIterator>::into_iter(move _41) -> [return: bb23, unwind: bb65]
  }
  preds [bb21]
  succs [bb23, bb65]

bb23
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:42-1110:43)
  1: PlaceMention(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  2: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  3: _45 = move _40
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
      kind: falseUnwind -> [real: bb25, unwind: bb65]
  }
  preds [bb23, bb38, bb52]
  succs [bb25, bb65]

bb25
  0: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  1: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  2: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  3: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  4: _49 = &mut _45
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  5: _48 = &mut (*_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: _47 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::Iterator>::next(move _48) -> [return: bb26, unwind: bb65]
  }
  preds [bb24]
  succs [bb26, bb65]

bb26
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:42-1110:43)
  1: PlaceMention(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  2: _50 = discriminant(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: switchInt(move _50) -> [0: bb28, 1: bb29, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:28-1110:43)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
      kind: falseEdge -> [real: bb30, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb30]

bb29
  0: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:17-1110:24)
  1: _52 = ((_47 as Some).0: &hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:17-1110:24)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:17-1121:18)
  3: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:21-1111:39)
  4: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:21-1111:28)
  5: _55 = &(*_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:21-1111:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1111:21-1111:39)
      kind: _54 = hir::literal::Literal::is_exact(move _55) -> [return: bb31, unwind: bb65]
  }
  preds [bb26, bb28]
  succs [bb31, bb65]

bb30
  0: _32 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  3: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  4: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  5: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  6: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_39) -> [return: bb53, unwind: bb66]
  }
  preds [bb28]
  succs [bb53, bb66]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1111:21-1111:39)
      kind: switchInt(move _54) -> [0: bb33, otherwise: bb32]
  }
  preds [bb29]
  succs [bb32, bb33]

bb32
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:38-1111:39)
  1: _53 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1121:18-1121:18)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1121:17-1121:18)
  3: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1121:17-1121:18)
  4: StorageLive(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1122:21-1122:31)
  5: StorageLive(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1122:49-1124:18)
  6: StorageLive(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:51)
  7: StorageLive(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:35)
  8: StorageLive(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:29)
  9: _68 = &_39
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:35)
      kind: _67 = hir::literal::Literal::len(move _68) -> [return: bb39, unwind: bb65]
  }
  preds [bb31]
  succs [bb39, bb65]

bb33
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/literal.rs:1111:38-1111:39)
  1: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:21-1119:22)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:24-1117:30)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:24-1117:25)
  4: _59 = _38
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:24-1117:25)
  5: _58 = Eq(move _59, const 0_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:24-1117:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1117:24-1117:30)
      kind: switchInt(move _58) -> [0: bb37, otherwise: bb34]
  }
  preds [bb31]
  succs [bb34, bb37]

bb34
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:29-1117:30)
  1: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:25-1118:52)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:25-1118:30)
  3: _61 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:25-1118:30)
  4: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:36-1118:51)
  5: StorageLive(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:36-1118:43)
  6: _63 = &(*_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:36-1118:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1118:36-1118:51)
      kind: _62 = <hir::literal::Literal as core::clone::Clone>::clone(move _63) -> [return: bb35, unwind: bb65]
  }
  preds [bb33]
  succs [bb35, bb65]

bb35
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:50-1118:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1118:25-1118:52)
      kind: _60 = std::vec::Vec::<hir::literal::Literal>::push(move _61, move _62) -> [return: bb36, unwind: bb64]
  }
  preds [bb34]
  succs [bb36, bb64]

bb36
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:51-1118:52)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:51-1118:52)
  2: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/literal.rs:1118:52-1118:53)
  3: _57 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:31-1119:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1117:21-1119:22)
      kind: goto -> bb38
  }
  preds [bb35]
  succs [bb38]

bb37
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/literal.rs:1117:29-1117:30)
  1: _57 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1119:22-1119:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1117:21-1119:22)
      kind: goto -> bb38
  }
  preds [bb33]
  succs [bb38]

bb38
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/literal.rs:1119:21-1119:22)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/literal.rs:1119:21-1119:22)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/literal.rs:1121:17-1121:18)
  3: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/literal.rs:1121:17-1121:18)
  4: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  5: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  6: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  7: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb36, bb37]
  succs [bb24]

bb39
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:34-1123:35)
  1: StorageLive(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:38-1123:51)
  2: StorageLive(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:38-1123:45)
  3: _70 = &(*_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:38-1123:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1123:38-1123:51)
      kind: _69 = hir::literal::Literal::len(move _70) -> [return: bb40, unwind: bb65]
  }
  preds [bb32]
  succs [bb40, bb65]

bb40
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:50-1123:51)
  1: _71 = AddWithOverflow(_67, _69)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:51)
      kind: assert(!move (_71.1: bool), "attempt to compute `{} + {}`, which would overflow", move _67, move _69) -> [success: bb41, unwind: bb65]
  }
  preds [bb39]
  succs [bb41, bb65]

bb41
  0: _66 = move (_71.0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:21-1123:51)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:50-1123:51)
  2: StorageDead(_67)
    SourceInfo(regex-syntax/src/hir/literal.rs:1123:50-1123:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1122:49-1124:18)
      kind: _65 = std::vec::Vec::<u8>::with_capacity(move _66) -> [return: bb42, unwind: bb65]
  }
  preds [bb40]
  succs [bb42, bb65]

bb42
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/hir/literal.rs:1124:17-1124:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1122:34-1124:19)
      kind: _64 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _65) -> [return: bb43, unwind: bb63]
  }
  preds [bb41]
  succs [bb43, bb63]

bb43
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/hir/literal.rs:1124:18-1124:19)
  1: FakeRead(ForLet(None), _64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1122:21-1122:31)
  2: StorageLive(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:17-1125:41)
  3: StorageLive(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:17-1125:23)
  4: _73 = &mut _64
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:17-1125:23)
  5: StorageLive(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:31-1125:40)
  6: StorageLive(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:31-1125:40)
  7: _75 = &_39
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:31-1125:40)
  8: _74 = &(*_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:31-1125:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1125:17-1125:41)
      kind: _72 = hir::literal::Literal::extend(move _73, move _74) -> [return: bb44, unwind: bb62]
  }
  preds [bb42]
  succs [bb44, bb62]

bb44
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:40-1125:41)
  1: StorageDead(_73)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:40-1125:41)
  2: StorageDead(_75)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:41-1125:42)
  3: StorageDead(_72)
    SourceInfo(regex-syntax/src/hir/literal.rs:1125:41-1125:42)
  4: StorageLive(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:17-1126:40)
  5: StorageLive(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:17-1126:23)
  6: _77 = &mut _64
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:17-1126:23)
  7: StorageLive(_78)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:31-1126:39)
  8: StorageLive(_79)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:31-1126:39)
  9: _79 = &_52
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:31-1126:39)
  10: _78 = &(*(*_79))
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:31-1126:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1126:17-1126:40)
      kind: _76 = hir::literal::Literal::extend(move _77, move _78) -> [return: bb45, unwind: bb62]
  }
  preds [bb43]
  succs [bb45, bb62]

bb45
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:39-1126:40)
  1: StorageDead(_77)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:39-1126:40)
  2: StorageDead(_79)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:40-1126:41)
  3: StorageDead(_76)
    SourceInfo(regex-syntax/src/hir/literal.rs:1126:40-1126:41)
  4: StorageLive(_80)
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:17-1129:18)
  5: StorageLive(_81)
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:21-1127:40)
  6: StorageLive(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:21-1127:29)
  7: _82 = &_39
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:21-1127:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1127:21-1127:40)
      kind: _81 = hir::literal::Literal::is_exact(move _82) -> [return: bb46, unwind: bb62]
  }
  preds [bb44]
  succs [bb46, bb62]

bb46
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1127:21-1127:40)
      kind: switchInt(move _81) -> [0: bb48, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb48]

bb47
  0: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:39-1127:40)
  1: _80 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1129:18-1129:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1127:17-1129:18)
      kind: goto -> bb50
  }
  preds [bb46]
  succs [bb50]

bb48
  0: StorageDead(_82)
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:39-1127:40)
  1: StorageLive(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:1128:21-1128:42)
  2: StorageLive(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:1128:21-1128:27)
  3: _84 = &mut _64
    SourceInfo(regex-syntax/src/hir/literal.rs:1128:21-1128:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1128:21-1128:42)
      kind: _83 = hir::literal::Literal::make_inexact(move _84) -> [return: bb49, unwind: bb62]
  }
  preds [bb46]
  succs [bb49, bb62]

bb49
  0: StorageDead(_84)
    SourceInfo(regex-syntax/src/hir/literal.rs:1128:41-1128:42)
  1: StorageDead(_83)
    SourceInfo(regex-syntax/src/hir/literal.rs:1128:42-1128:43)
  2: _80 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1127:41-1129:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1127:17-1129:18)
      kind: goto -> bb50
  }
  preds [bb48]
  succs [bb50]

bb50
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/hir/literal.rs:1129:17-1129:18)
  1: StorageDead(_80)
    SourceInfo(regex-syntax/src/hir/literal.rs:1129:17-1129:18)
  2: StorageLive(_85)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:17-1130:35)
  3: StorageLive(_86)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:17-1130:22)
  4: _86 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:17-1130:22)
  5: StorageLive(_87)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:28-1130:34)
  6: _87 = move _64
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:28-1130:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1130:17-1130:35)
      kind: _85 = std::vec::Vec::<hir::literal::Literal>::push(move _86, move _87) -> [return: bb51, unwind: bb61]
  }
  preds [bb47, bb49]
  succs [bb51, bb61]

bb51
  0: StorageDead(_87)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:34-1130:35)
  1: StorageDead(_86)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:34-1130:35)
  2: StorageDead(_85)
    SourceInfo(regex-syntax/src/hir/literal.rs:1130:35-1130:36)
  3: _46 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:44-1131:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
      kind: drop(_64) -> [return: bb52, unwind: bb65]
  }
  preds [bb50]
  succs [bb52, bb65]

bb52
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  2: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  3: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  4: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
  5: _31 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1110:13-1131:14)
      kind: goto -> bb24
  }
  preds [bb51]
  succs [bb24]

bb53
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_33) -> [return: bb54, unwind: bb67]
  }
  preds [bb30]
  succs [bb54, bb67]

bb54
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  3: _31 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:9-1132:10)
      kind: goto -> bb14
  }
  preds [bb53]
  succs [bb14]

bb55
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  2: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_30) -> [return: bb56, unwind: bb68]
  }
  preds [bb20]
  succs [bb56, bb68]

bb56
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_25) -> [return: bb57, unwind: bb71]
  }
  preds [bb55]
  succs [bb57, bb71]

bb57
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
  2: StorageLive(_88)
    SourceInfo(regex-syntax/src/hir/literal.rs:1133:9-1133:21)
  3: StorageLive(_89)
    SourceInfo(regex-syntax/src/hir/literal.rs:1133:9-1133:13)
  4: _89 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1133:9-1133:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1133:9-1133:21)
      kind: _88 = hir::literal::Seq::dedup(move _89) -> [return: bb58, unwind: bb71]
  }
  preds [bb56]
  succs [bb58, bb71]

bb58
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/hir/literal.rs:1133:20-1133:21)
  1: StorageDead(_88)
    SourceInfo(regex-syntax/src/hir/literal.rs:1133:21-1133:22)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1098:54-1134:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
      kind: drop(_20) -> [return: bb59, unwind: bb73]
  }
  preds [bb57]
  succs [bb59, bb73]

bb59
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1134:6-1134:6)
      kind: goto -> bb60
  }
  preds [bb58]
  succs [bb60]

bb60
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1134:6-1134:6)
      kind: return
  }
  preds [bb5, bb59]
  succs []

bb61
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1130:34-1130:35)
      kind: drop(_87) -> [return: bb62, unwind terminate(cleanup)]
  }
  preds [bb50]
  succs [bb62]

bb62
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1131:13-1131:14)
      kind: drop(_64) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb43, bb44, bb45, bb48, bb61]
  succs [bb65]

bb63
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1124:18-1124:19)
      kind: drop(_65) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb65]

bb64
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1118:51-1118:52)
      kind: drop(_62) -> [return: bb65, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb65]

bb65
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_39) -> [return: bb66, unwind terminate(cleanup)]
  }
  preds [bb19, bb21, bb22, bb24, bb25, bb29, bb32, bb34, bb39, bb40, bb41, bb51, bb62, bb63, bb64]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_33) -> [return: bb67, unwind terminate(cleanup)]
  }
  preds [bb30, bb65]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_30) -> [return: bb68, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb20, bb53, bb66]
  succs [bb68]

bb68
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1132:9-1132:10)
      kind: drop(_25) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb55, bb67]
  succs [bb71]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:56-1109:57)
      kind: drop(_26) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb71]

bb70
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1109:56-1109:57)
      kind: drop(_27) -> [return: bb71, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb71]

bb71
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1134:5-1134:6)
      kind: drop(_20) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb10, bb56, bb57, bb68, bb69, bb70]
  succs [bb73]

bb72
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1108:70-1108:71)
      kind: drop(_22) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1098:5-1134:6)
      kind: resume
  }
  preds [bb0, bb4, bb6, bb7, bb8, bb58, bb71, bb72]
  succs []

