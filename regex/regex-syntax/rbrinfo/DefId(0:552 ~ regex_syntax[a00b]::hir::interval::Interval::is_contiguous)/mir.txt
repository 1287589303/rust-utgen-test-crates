bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:13-486:19)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:22-486:34)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:22-486:26)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:22-486:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:486:22-486:34)
      kind: _4 = <Self as hir::interval::Interval>::lower(move _5) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:33-486:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:486:22-486:43)
      kind: _3 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::as_u32(move _4) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:42-486:43)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/interval.rs:486:13-486:19)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:13-487:19)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:22-487:34)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:22-487:26)
  5: _8 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:22-487:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:487:22-487:34)
      kind: _7 = <Self as hir::interval::Interval>::upper(move _8) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:33-487:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:487:22-487:43)
      kind: _6 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::as_u32(move _7) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:42-487:43)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-syntax/src/hir/interval.rs:487:13-487:19)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:13-488:19)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:22-488:35)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:22-488:27)
  5: _11 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:22-488:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:488:22-488:35)
      kind: _10 = <Self as hir::interval::Interval>::lower(move _11) -> [return: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:34-488:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:488:22-488:44)
      kind: _9 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::as_u32(move _10) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:43-488:44)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-syntax/src/hir/interval.rs:488:13-488:19)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:13-489:19)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:22-489:35)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:22-489:27)
  5: _14 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:22-489:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:489:22-489:35)
      kind: _13 = <Self as hir::interval::Interval>::upper(move _14) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:34-489:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:489:22-489:44)
      kind: _12 = <<Self as hir::interval::Interval>::Bound as hir::interval::Bound>::as_u32(move _13) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:43-489:44)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(regex-syntax/src/hir/interval.rs:489:13-489:19)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:9-490:33)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:18-490:24)
  4: _16 = _3
    SourceInfo(regex-syntax/src/hir/interval.rs:490:18-490:24)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:26-490:32)
  6: _17 = _9
    SourceInfo(regex-syntax/src/hir/interval.rs:490:26-490:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:490:9-490:33)
      kind: _15 = core::cmp::max::<u32>(move _16, move _17) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:32-490:33)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:32-490:33)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:37-490:79)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:37-490:61)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:46-490:52)
  5: _20 = _6
    SourceInfo(regex-syntax/src/hir/interval.rs:490:46-490:52)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:54-490:60)
  7: _21 = _12
    SourceInfo(regex-syntax/src/hir/interval.rs:490:54-490:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:490:37-490:61)
      kind: _19 = core::cmp::min::<u32>(move _20, move _21) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:60-490:61)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:60-490:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:490:37-490:79)
      kind: _18 = core::num::<impl u32>::saturating_add(move _19, const 1_u32) -> [return: bb11, unwind: bb12]
  }
  preds [bb9]
  succs [bb11, bb12]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:78-490:79)
  1: _0 = Le(move _15, move _18)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:9-490:79)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:78-490:79)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:490:78-490:79)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:491:5-491:6)
  5: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:491:5-491:6)
  6: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:491:5-491:6)
  7: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:491:5-491:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:491:6-491:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:485:5-491:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10]
  succs []

