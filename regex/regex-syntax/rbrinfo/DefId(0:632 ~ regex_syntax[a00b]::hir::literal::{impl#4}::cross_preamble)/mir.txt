bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1144:13-1144:18)
  1: PlaceMention(((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1144:27-1144:41)
  2: _4 = discriminant(((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1144:27-1144:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1144:21-1144:41)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1144:27-1144:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1144:27-1144:41)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1145:13-1145:17)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1159:18-1159:30)
  1: _16 = &mut ((((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1159:18-1159:30)
  2: _3 = move _16
    SourceInfo(regex-syntax/src/hir/literal.rs:1159:35-1159:39)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1159:38-1159:39)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1144:13-1144:18)
  5: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1161:13-1161:18)
  6: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1161:27-1161:40)
  7: _18 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1161:27-1161:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1161:21-1161:40)
      kind: switchInt(move _18) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb0, bb2]
  succs [bb15, bb16, bb17]

bb4
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:17-1156:18)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:53)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:42)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:42)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:24)
  5: _10 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:42)
      kind: _9 = hir::literal::Seq::min_literal_len(move _10) -> [return: bb5, unwind: bb23]
  }
  preds [bb2]
  succs [bb5, bb23]

bb5
  0: _8 = &_9
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:42)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:41-1152:42)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:46-1152:53)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:46-1152:53)
  4: _12 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:46-1152:53)
  5: _11 = &_12
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:46-1152:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:53)
      kind: _7 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _8, move _11) -> [return: bb6, unwind: bb23]
  }
  preds [bb4]
  succs [bb6, bb23]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1152:20-1152:53)
      kind: switchInt(move _7) -> [0: bb12, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  4: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1153:29-1153:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1153:29-1153:44)
      kind: _13 = hir::literal::Seq::infinite() -> [return: bb8, unwind: bb23]
  }
  preds [bb6]
  succs [bb8, bb23]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1153:21-1153:26)
      kind: drop((*_1)) -> [return: bb9, unwind: bb10]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: (*_1) = move _13
    SourceInfo(regex-syntax/src/hir/literal.rs:1153:21-1153:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1153:43-1153:44)
      kind: drop(_13) -> [return: bb11, unwind: bb23]
  }
  preds [bb8]
  succs [bb11, bb23]

bb10
  0: (*_1) = move _13
    SourceInfo(regex-syntax/src/hir/literal.rs:1153:21-1153:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1153:43-1153:44)
      kind: drop(_13) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb23]

bb11
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1153:43-1153:44)
  1: _6 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:54-1154:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1152:17-1156:18)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb12
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1152:52-1152:53)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1155:21-1155:40)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1155:21-1155:25)
  6: _15 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1155:21-1155:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1155:21-1155:40)
      kind: _14 = hir::literal::Seq::make_inexact(move _15) -> [return: bb13, unwind: bb23]
  }
  preds [bb6]
  succs [bb13, bb23]

bb13
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1155:39-1155:40)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1155:40-1155:41)
  2: _6 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1154:24-1156:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1152:17-1156:18)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1156:17-1156:18)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1156:17-1156:18)
  2: _0 = core::option::Option::<(&mut std::vec::Vec<hir::literal::Literal>, &mut std::vec::Vec<hir::literal::Literal>)>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1157:24-1157:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1157:17-1157:28)
      kind: goto -> bb21
  }
  preds [bb11, bb13]
  succs [bb21]

bb15
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1161:27-1161:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1161:27-1161:40)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1162:13-1162:17)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb3]
  succs [bb17, bb18]

bb17
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1168:18-1168:30)
  1: _23 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1168:18-1168:30)
  2: _17 = move _23
    SourceInfo(regex-syntax/src/hir/literal.rs:1168:35-1168:39)
  3: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:1168:38-1168:39)
  4: FakeRead(ForLet(None), _17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1161:13-1161:18)
  5: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:14-1170:28)
  6: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:15-1170:20)
  7: _25 = &mut (*_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:15-1170:20)
  8: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:22-1170:27)
  9: _26 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:22-1170:27)
  10: _24 = (move _25, move _26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:14-1170:28)
  11: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:27-1170:28)
  12: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:27-1170:28)
  13: _0 = core::option::Option::<(&mut std::vec::Vec<hir::literal::Literal>, &mut std::vec::Vec<hir::literal::Literal>)>::Some(move _24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:9-1170:29)
  14: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:1170:28-1170:29)
  15: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1171:5-1171:6)
  16: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1171:5-1171:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1171:6-1171:6)
      kind: goto -> bb22
  }
  preds [bb3, bb16]
  succs [bb22]

bb18
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:17-1165:32)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:17-1165:22)
  2: _21 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:17-1165:22)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:29-1165:31)
  4: _22 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:29-1165:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1165:17-1165:32)
      kind: _20 = std::vec::Vec::<hir::literal::Literal>::drain::<core::ops::RangeFull>(move _21, move _22) -> [return: bb19, unwind: bb23]
  }
  preds [bb16]
  succs [bb19, bb23]

bb19
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:31-1165:32)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:31-1165:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1165:32-1165:33)
      kind: drop(_20) -> [return: bb20, unwind: bb23]
  }
  preds [bb18]
  succs [bb20, bb23]

bb20
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1165:32-1165:33)
  1: _0 = core::option::Option::<(&mut std::vec::Vec<hir::literal::Literal>, &mut std::vec::Vec<hir::literal::Literal>)>::None
    SourceInfo(regex-syntax/src/hir/literal.rs:1166:24-1166:28)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1171:5-1171:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1171:5-1171:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1171:6-1171:6)
      kind: goto -> bb22
  }
  preds [bb14, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1171:6-1171:6)
      kind: return
  }
  preds [bb17, bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1140:5-1171:6)
      kind: resume
  }
  preds [bb4, bb5, bb7, bb9, bb10, bb12, bb18, bb19]
  succs []

