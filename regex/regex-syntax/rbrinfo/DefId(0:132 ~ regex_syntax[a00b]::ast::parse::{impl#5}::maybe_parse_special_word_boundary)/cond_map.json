{
  "regex-syntax/src/ast/parse.rs:1647:16:1647:29": [
    {
      "Bool": {
        "Other": "self.is_eof()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1628:13:1628:39": [
    {
      "Bool": {
        "Other": "self.bump_and_bump_space()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1651:12:1651:25": [
    {
      "Bool": {
        "Other": "self.is_eof()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1659:26:1659:42": [
    {
      "Match": {
        "match_source": "regex-syntax/src/ast/parse.rs:1659:26:1659:42",
        "match_str": "scratch.as_str()",
        "match_kind": "Other",
        "arms": {
          "regex-syntax/src/ast/parse.rs:1663:13:1663:23": {
            "pat": {
              "pat_str": "\"end-half\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1663:27:1663:66"
          },
          "regex-syntax/src/ast/parse.rs:1660:13:1660:20": {
            "pat": {
              "pat_str": "\"start\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1660:24:1660:61"
          },
          "regex-syntax/src/ast/parse.rs:1661:13:1661:18": {
            "pat": {
              "pat_str": "\"end\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1661:22:1661:57"
          },
          "regex-syntax/src/ast/parse.rs:1664:13:1664:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1664:18:1669:14"
          },
          "regex-syntax/src/ast/parse.rs:1662:13:1662:25": {
            "pat": {
              "pat_str": "\"start-half\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/parse.rs:1662:29:1662:70"
          }
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1651:29:1651:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.char() != '}'",
          "lhs": "self.char()",
          "rhs": "'}'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1639:13:1639:39": [
    {
      "Bool": {
        "Other": "is_valid_char(self.char())"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:1647:33:1647:59": [
    {
      "Bool": {
        "Other": "is_valid_char(self.char())"
      }
    }
  ]
}