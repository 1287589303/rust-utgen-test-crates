bb0
  0: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1518:37-1518:50)
  1: _3 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1518:37-1518:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1518:16-1518:34)
      kind: switchInt(move _3) -> [1: bb1, otherwise: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1518:16-1518:34)
      kind: falseEdge -> [real: bb2, imaginary: bb14]
  }
  preds [bb0]
  succs [bb2, bb14]

bb2
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1518:21-1518:33)
  1: _4 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1518:21-1518:33)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:26)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:26)
  7: _9 = &mut (*_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: _8 = <std::vec::Vec<hir::literal::Literal> as core::ops::DerefMut>::deref_mut(move _9) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: _7 = &mut (*_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:26)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:25-1519:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: _6 = core::slice::<impl [hir::literal::Literal]>::iter_mut(move _7) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:36-1519:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: _5 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:36-1519:37)
  1: PlaceMention(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  3: _10 = move _5
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
      kind: falseUnwind -> [real: bb7, unwind: bb16]
  }
  preds [bb5, bb13]
  succs [bb7, bb16]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  4: _15 = &mut _10
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  5: _14 = &mut (*_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: _13 = <core::slice::IterMut<'_, hir::literal::Literal> as core::iter::Iterator>::next(move _14) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:36-1519:37)
  1: PlaceMention(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  2: _16 = discriminant(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: switchInt(move _16) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:22-1519:37)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:17-1519:18)
  1: _18 = move ((_13 as Some).0: &mut hir::literal::Literal)
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:17-1519:18)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:17-1520:39)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:17-1520:18)
  4: _20 = &mut (*_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:17-1520:18)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:35-1520:38)
  6: _21 = _2
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:35-1520:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1520:17-1520:39)
      kind: _19 = hir::literal::Literal::keep_last_bytes(move _20, move _21) -> [return: bb13, unwind: bb16]
  }
  preds [bb8, bb10]
  succs [bb13, bb16]

bb12
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  4: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  6: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  7: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1522:9-1522:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1518:9-1522:10)
      kind: goto -> bb15
  }
  preds [bb10]
  succs [bb15]

bb13
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:38-1520:39)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:38-1520:39)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1520:39-1520:40)
  3: _12 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:38-1521:14)
  4: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  5: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  7: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1521:13-1521:14)
  8: _11 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1519:13-1521:14)
      kind: goto -> bb6
  }
  preds [bb11]
  succs [bb6]

bb14
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1522:10-1522:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1518:9-1522:10)
      kind: goto -> bb15
  }
  preds [bb0, bb1]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1523:6-1523:6)
      kind: return
  }
  preds [bb12, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1517:5-1523:6)
      kind: resume
  }
  preds [bb2, bb3, bb4, bb6, bb7, bb11]
  succs []

