bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:13-1945:18)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:48)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:25)
  4: _5 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:48)
      kind: _4 = ast::parse::ParserI::<'_, P>::parse_set_class_item(move _5) -> [return: bb1, unwind: bb105]
  }
  preds []
  succs [bb1, bb105]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:47-1945:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
      kind: _3 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb104]
  }
  preds [bb0]
  succs [bb2, bb104]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  1: PlaceMention(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  2: _6 = discriminant(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  1: _10 = move ((_3 as Continue).0: ast::parse::Primitive)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  2: _2 = move _10
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: drop(_10) -> [return: bb8, unwind: bb103]
  }
  preds [bb2, bb4]
  succs [bb8, bb103]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  1: _7 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  3: _9 = move _7
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:21-1945:49)
      kind: _0 = <core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _9) -> [return: bb7, unwind: bb101]
  }
  preds [bb4]
  succs [bb7, bb101]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: drop(_7) -> [return: bb80, unwind: bb103]
  }
  preds [bb6]
  succs [bb80, bb103]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:13-1945:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:49-1945:50)
      kind: drop(_3) -> [return: bb9, unwind: bb100]
  }
  preds [bb5]
  succs [bb9, bb100]

bb9
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:49-1945:50)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1946:9-1946:26)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1946:9-1946:13)
  3: _12 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1946:9-1946:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1946:9-1946:26)
      kind: _11 = ast::parse::ParserI::<'_, P>::bump_space(move _12) -> [return: bb10, unwind: bb100]
  }
  preds [bb8]
  succs [bb10, bb100]

bb10
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1946:25-1946:26)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1946:26-1946:27)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:9-1949:10)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:12-1947:25)
  4: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:12-1947:16)
  5: _15 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:12-1947:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1947:12-1947:25)
      kind: _14 = ast::parse::ParserI::<'_, P>::is_eof(move _15) -> [return: bb11, unwind: bb100]
  }
  preds [bb9]
  succs [bb11, bb100]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1947:12-1947:25)
      kind: switchInt(move _14) -> [0: bb15, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:24-1947:25)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:24-1948:51)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:24-1948:28)
  3: _18 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:24-1948:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1948:24-1948:51)
      kind: _17 = ast::parse::ParserI::<'_, P>::unclosed_class_error(move _18) -> [return: bb13, unwind: bb100]
  }
  preds [bb11]
  succs [bb13, bb100]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:50-1948:51)
  1: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Err(move _17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:20-1948:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1948:51-1948:52)
      kind: drop(_17) -> [return: bb14, unwind: bb100]
  }
  preds [bb12]
  succs [bb14, bb100]

bb14
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1948:51-1948:52)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1949:9-1949:10)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1949:9-1949:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb13]
  succs [bb79]

bb15
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1947:24-1947:25)
  1: _13 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1949:10-1949:10)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1949:9-1949:10)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1949:9-1949:10)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:9-1960:10)
  5: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:30)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:23)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:16)
  8: _22 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:23)
      kind: _21 = ast::parse::ParserI::<'_, P>::char(move _22) -> [return: bb16, unwind: bb100]
  }
  preds [bb11]
  succs [bb16, bb100]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:22-1955:23)
  1: _20 = Ne(move _21, const '-')
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1955:12-1955:30)
      kind: switchInt(move _20) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:29-1955:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1958:9-1960:10)
      kind: goto -> bb26
  }
  preds [bb16]
  succs [bb26]

bb18
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1955:29-1955:30)
  1: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:46)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:33)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:33)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:20)
  5: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:33)
      kind: _25 = ast::parse::ParserI::<'_, P>::peek_space(move _26) -> [return: bb19, unwind: bb100]
  }
  preds [bb16]
  succs [bb19, bb100]

bb19
  0: _24 = &_25
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:33)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:32-1956:33)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:37-1956:46)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:37-1956:46)
  4: _28 = core::option::Option::<char>::Some(const ']')
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:37-1956:46)
  5: _27 = &_28
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:37-1956:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:46)
      kind: _23 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _24, move _27) -> [return: bb20, unwind: bb100]
  }
  preds [bb18]
  succs [bb20, bb100]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1956:16-1956:46)
      kind: switchInt(move _23) -> [0: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  3: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1958:9-1960:10)
      kind: goto -> bb26
  }
  preds [bb20]
  succs [bb26]

bb22
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  3: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1956:45-1956:46)
  4: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:46)
  5: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:33)
  6: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:33)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:20)
  8: _32 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:33)
      kind: _31 = ast::parse::ParserI::<'_, P>::peek_space(move _32) -> [return: bb23, unwind: bb100]
  }
  preds [bb20]
  succs [bb23, bb100]

bb23
  0: _30 = &_31
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:33)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:32-1957:33)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:37-1957:46)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:37-1957:46)
  4: _34 = core::option::Option::<char>::Some(const '-')
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:37-1957:46)
  5: _33 = &_34
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:37-1957:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:46)
      kind: _29 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _30, move _33) -> [return: bb24, unwind: bb100]
  }
  preds [bb22]
  succs [bb24, bb100]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1957:16-1957:46)
      kind: switchInt(move _29) -> [0: bb28, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb28]

bb25
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  3: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1958:9-1960:10)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:20-1959:25)
  1: _36 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:20-1959:25)
  2: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:46-1959:50)
  3: _37 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:46-1959:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1959:20-1959:51)
      kind: _0 = ast::parse::Primitive::into_class_set_item::<P>(move _36, move _37) -> [return: bb27, unwind: bb99]
  }
  preds [bb17, bb21, bb25]
  succs [bb27, bb99]

bb27
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:50-1959:51)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1959:50-1959:51)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  3: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  5: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb26]
  succs [bb79]

bb28
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  3: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1957:45-1957:46)
  4: _19 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:10-1960:10)
  5: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  6: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  7: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  8: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1960:9-1960:10)
  9: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:9-1965:10)
  10: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:13-1963:39)
  11: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:13-1963:17)
  12: _40 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:13-1963:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1963:13-1963:39)
      kind: _39 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _40) -> [return: bb29, unwind: bb100]
  }
  preds [bb24]
  succs [bb29, bb100]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1963:13-1963:39)
      kind: switchInt(move _39) -> [0: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31]

bb30
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:38-1963:39)
  1: _38 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1965:10-1965:10)
  2: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1965:9-1965:10)
  3: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1965:9-1965:10)
  4: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:13-1966:18)
  5: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  6: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:48)
  7: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:25)
  8: _47 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:48)
      kind: _46 = ast::parse::ParserI::<'_, P>::parse_set_class_item(move _47) -> [return: bb34, unwind: bb100]
  }
  preds [bb29]
  succs [bb34, bb100]

bb31
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1963:38-1963:39)
  1: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:24-1964:51)
  2: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:24-1964:28)
  3: _43 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:24-1964:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1964:24-1964:51)
      kind: _42 = ast::parse::ParserI::<'_, P>::unclosed_class_error(move _43) -> [return: bb32, unwind: bb100]
  }
  preds [bb29]
  succs [bb32, bb100]

bb32
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:50-1964:51)
  1: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Err(move _42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:20-1964:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1964:51-1964:52)
      kind: drop(_42) -> [return: bb33, unwind: bb100]
  }
  preds [bb31]
  succs [bb33, bb100]

bb33
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1964:51-1964:52)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1965:9-1965:10)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1965:9-1965:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb32]
  succs [bb79]

bb34
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:47-1966:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
      kind: _45 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::Try>::branch(move _46) -> [return: bb35, unwind: bb98]
  }
  preds [bb30]
  succs [bb35, bb98]

bb35
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  1: PlaceMention(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  2: _48 = discriminant(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
      kind: switchInt(move _48) -> [0: bb38, 1: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38]

bb36
  0: FakeRead(ForMatchedPlace(None), _45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: falseEdge -> [real: bb39, imaginary: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  1: _52 = move ((_45 as Continue).0: ast::parse::Primitive)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  2: _44 = move _52
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: drop(_52) -> [return: bb41, unwind: bb97]
  }
  preds [bb35, bb37]
  succs [bb41, bb97]

bb39
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  1: _49 = move ((_45 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  2: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  3: _51 = move _49
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:21-1966:49)
      kind: _0 = <core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _51) -> [return: bb40, unwind: bb95]
  }
  preds [bb37]
  succs [bb40, bb95]

bb40
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: drop(_49) -> [return: bb76, unwind: bb97]
  }
  preds [bb39]
  succs [bb76, bb97]

bb41
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  1: FakeRead(ForLet(None), _44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:13-1966:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:49-1966:50)
      kind: drop(_45) -> [return: bb42, unwind: bb94]
  }
  preds [bb38]
  succs [bb42, bb94]

bb42
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:49-1966:50)
  1: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1967:13-1967:18)
  2: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:19-1968:66)
  3: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:47)
  4: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:41)
  5: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:34)
  6: _57 = &_2
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:41)
      kind: _56 = ast::parse::Primitive::span(move _57) -> [return: bb43, unwind: bb94]
  }
  preds [bb41]
  succs [bb43, bb94]

bb43
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:40-1968:41)
  1: _55 = ((*_56).0: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:29-1968:47)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:65)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:61)
  4: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:54)
  5: _60 = &_44
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:61)
      kind: _59 = ast::parse::Primitive::span(move _60) -> [return: bb44, unwind: bb94]
  }
  preds [bb42]
  succs [bb44, bb94]

bb44
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:60-1968:61)
  1: _58 = ((*_59).1: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:49-1968:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1968:19-1968:66)
      kind: _54 = ast::Span::new(move _55, move _58) -> [return: bb45, unwind: bb94]
  }
  preds [bb43]
  succs [bb45, bb94]

bb45
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:65-1968:66)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1968:65-1968:66)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  4: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:50)
  5: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:25)
  6: _64 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:25)
  7: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:45-1969:49)
  8: _65 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:45-1969:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:50)
      kind: _63 = ast::parse::Primitive::into_class_literal::<P>(move _64, move _65) -> [return: bb46, unwind: bb93]
  }
  preds [bb44]
  succs [bb46, bb93]

bb46
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:49-1969:50)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:49-1969:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
      kind: _62 = <core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch(move _63) -> [return: bb47, unwind: bb92]
  }
  preds [bb45]
  succs [bb47, bb92]

bb47
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  1: PlaceMention(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  2: _66 = discriminant(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
      kind: switchInt(move _66) -> [0: bb50, 1: bb49, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49, bb50]

bb48
  0: FakeRead(ForMatchedPlace(None), _62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
      kind: unreachable
  }
  preds [bb47]
  succs []

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
      kind: falseEdge -> [real: bb51, imaginary: bb50]
  }
  preds [bb47]
  succs [bb50, bb51]

bb50
  0: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  1: _70 = move ((_62 as Continue).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  2: _61 = move _70
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
  3: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  4: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  5: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  6: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:48)
  7: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:23)
  8: _74 = move _44
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:23)
  9: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:43-1970:47)
  10: _75 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:43-1970:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:48)
      kind: _73 = ast::parse::Primitive::into_class_literal::<P>(move _74, move _75) -> [return: bb53, unwind: bb88]
  }
  preds [bb47, bb49]
  succs [bb53, bb88]

bb51
  0: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  1: _67 = move ((_62 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  2: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  3: _69 = move _67
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:20-1969:51)
      kind: _0 = <core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _69) -> [return: bb52, unwind: bb89]
  }
  preds [bb49]
  succs [bb52, bb89]

bb52
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
      kind: drop(_67) -> [return: bb72, unwind: bb91]
  }
  preds [bb51]
  succs [bb72, bb91]

bb53
  0: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:47-1970:48)
  1: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:47-1970:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
      kind: _72 = <core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch(move _73) -> [return: bb54, unwind: bb87]
  }
  preds [bb50]
  succs [bb54, bb87]

bb54
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  1: PlaceMention(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  2: _76 = discriminant(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
      kind: switchInt(move _76) -> [0: bb57, 1: bb56, otherwise: bb55]
  }
  preds [bb53]
  succs [bb55, bb56, bb57]

bb55
  0: FakeRead(ForMatchedPlace(None), _72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
      kind: unreachable
  }
  preds [bb54]
  succs []

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
      kind: falseEdge -> [real: bb58, imaginary: bb57]
  }
  preds [bb54]
  succs [bb57, bb58]

bb57
  0: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  1: _80 = move ((_72 as Continue).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  2: _71 = move _80
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
  3: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  4: _53 = ast::ClassSetRange { span: move _54, start: move _61, end: move _71 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1967:21-1971:10)
  5: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  6: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  7: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  8: FakeRead(ForLet(None), _53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1967:13-1967:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_72) -> [return: bb60, unwind: bb91]
  }
  preds [bb54, bb56]
  succs [bb60, bb91]

bb58
  0: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  1: _77 = move ((_72 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  2: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  3: _79 = move _77
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:18-1970:49)
      kind: _0 = <core::result::Result<ast::ClassSetItem, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _79) -> [return: bb59, unwind: bb84]
  }
  preds [bb56]
  succs [bb59, bb84]

bb59
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
      kind: drop(_77) -> [return: bb70, unwind: bb86]
  }
  preds [bb58]
  succs [bb70, bb86]

bb60
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_62) -> [return: bb61, unwind: bb94]
  }
  preds [bb57]
  succs [bb61, bb94]

bb61
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  2: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  3: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:9-1976:10)
  4: StorageLive(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:13-1972:29)
  5: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:13-1972:18)
  6: _83 = &_53
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:13-1972:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1972:13-1972:29)
      kind: _82 = ast::ClassSetRange::is_valid(move _83) -> [return: bb62, unwind: bb94]
  }
  preds [bb60]
  succs [bb62, bb94]

bb62
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1972:13-1972:29)
      kind: switchInt(move _82) -> [0: bb64, otherwise: bb63]
  }
  preds [bb61]
  succs [bb63, bb64]

bb63
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:28-1972:29)
  1: _81 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1976:10-1976:10)
  2: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1976:9-1976:10)
  3: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1976:9-1976:10)
  4: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:12-1977:43)
  5: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:37-1977:42)
  6: _90 = move _53
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:37-1977:42)
  7: _89 = ast::ClassSetItem::Range(move _90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:12-1977:43)
  8: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:42-1977:43)
  9: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Ok(move _89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:9-1977:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1977:43-1977:44)
      kind: drop(_89) -> [return: bb67, unwind: bb94]
  }
  preds [bb62]
  succs [bb67, bb94]

bb64
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1972:28-1972:29)
  1: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:17-1974:74)
  2: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:17-1974:21)
  3: _86 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:17-1974:21)
  4: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:28-1974:38)
  5: _87 = (_53.0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:28-1974:38)
  6: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:40-1974:73)
  7: _88 = ast::ErrorKind::ClassRangeInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:40-1974:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1974:17-1974:74)
      kind: _85 = ast::parse::ParserI::<'_, P>::error(move _86, move _87, move _88) -> [return: bb65, unwind: bb94]
  }
  preds [bb62]
  succs [bb65, bb94]

bb65
  0: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:73-1974:74)
  1: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:73-1974:74)
  2: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1974:73-1974:74)
  3: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Err(move _85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1973:20-1975:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1975:13-1975:14)
      kind: drop(_85) -> [return: bb66, unwind: bb94]
  }
  preds [bb64]
  succs [bb66, bb94]

bb66
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1975:13-1975:14)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1976:9-1976:10)
  2: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1976:9-1976:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb65]
  succs [bb75]

bb67
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1977:43-1977:44)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_44) -> [return: bb68, unwind: bb100]
  }
  preds [bb63]
  succs [bb68, bb100]

bb68
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_2) -> [return: bb69, unwind: bb105]
  }
  preds [bb67]
  succs [bb69, bb105]

bb69
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:6-1978:6)
      kind: goto -> bb83
  }
  preds [bb68]
  succs [bb83]

bb70
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
  1: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  3: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_72) -> [return: bb71, unwind: bb91]
  }
  preds [bb59]
  succs [bb71, bb91]

bb71
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb70]
  succs [bb73]

bb72
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:9-1971:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb52]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_62) -> [return: bb74, unwind: bb94]
  }
  preds [bb71, bb72]
  succs [bb74, bb94]

bb74
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  1: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  2: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb73]
  succs [bb75]

bb75
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_44) -> [return: bb78, unwind: bb100]
  }
  preds [bb66, bb74]
  succs [bb78, bb100]

bb76
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:49-1966:50)
      kind: drop(_45) -> [return: bb77, unwind: bb100]
  }
  preds [bb40]
  succs [bb77, bb100]

bb77
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1966:49-1966:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb76]
  succs [bb78]

bb78
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb75, bb77]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_2) -> [return: bb82, unwind: bb105]
  }
  preds [bb14, bb27, bb33, bb78]
  succs [bb82, bb105]

bb80
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:49-1945:50)
      kind: drop(_3) -> [return: bb81, unwind: bb105]
  }
  preds [bb7]
  succs [bb81, bb105]

bb81
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1945:49-1945:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb82
  }
  preds [bb80]
  succs [bb82]

bb82
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:6-1978:6)
      kind: goto -> bb83
  }
  preds [bb79, bb81]
  succs [bb83]

bb83
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:6-1978:6)
      kind: return
  }
  preds [bb69, bb82]
  succs []

bb84
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
      kind: drop(_79) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb58]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
      kind: drop(_77) -> [return: bb86, unwind terminate(cleanup)]
  }
  preds [bb84]
  succs [bb86]

bb86
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_72) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb59, bb85]
  succs [bb91]

bb87
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:48-1970:49)
      kind: drop(_73) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb53]
  succs [bb91]

bb88
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1970:47-1970:48)
      kind: drop(_74) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb50]
  succs [bb91]

bb89
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
      kind: drop(_69) -> [return: bb90, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb90]

bb90
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
      kind: drop(_67) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb89]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1971:10-1971:11)
      kind: drop(_62) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb52, bb57, bb70, bb86, bb87, bb88, bb90]
  succs [bb94]

bb92
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:50-1969:51)
      kind: drop(_63) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb46]
  succs [bb94]

bb93
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1969:49-1969:50)
      kind: drop(_64) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb45]
  succs [bb94]

bb94
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_44) -> [return: bb100, unwind terminate(cleanup)]
  }
  preds [bb41, bb42, bb43, bb44, bb60, bb61, bb63, bb64, bb65, bb73, bb91, bb92, bb93]
  succs [bb100]

bb95
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: drop(_51) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb39]
  succs [bb96]

bb96
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: drop(_49) -> [return: bb97, unwind terminate(cleanup)]
  }
  preds [bb95]
  succs [bb97]

bb97
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:49-1966:50)
      kind: drop(_45) -> [return: bb100, unwind terminate(cleanup)]
  }
  preds [bb38, bb40, bb96]
  succs [bb100]

bb98
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1966:48-1966:49)
      kind: drop(_46) -> [return: bb100, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb100]

bb99
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1959:50-1959:51)
      kind: drop(_36) -> [return: bb100, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb100]

bb100
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1978:5-1978:6)
      kind: drop(_2) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb12, bb13, bb15, bb18, bb19, bb22, bb23, bb28, bb30, bb31, bb32, bb67, bb75, bb76, bb94, bb97, bb98, bb99]
  succs [bb105]

bb101
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: drop(_9) -> [return: bb102, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb102]

bb102
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: drop(_7) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb101]
  succs [bb103]

bb103
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:49-1945:50)
      kind: drop(_3) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb102]
  succs [bb105]

bb104
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1945:48-1945:49)
      kind: drop(_4) -> [return: bb105, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb105]

bb105
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1944:5-1978:6)
      kind: resume
  }
  preds [bb0, bb68, bb79, bb80, bb100, bb103, bb104]
  succs []

