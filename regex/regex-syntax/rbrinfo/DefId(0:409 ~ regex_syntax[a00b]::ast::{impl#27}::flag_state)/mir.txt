bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1565:13-1565:24)
  1: _3 = const false
    SourceInfo(regex-syntax/src/ast/mod.rs:1565:27-1565:32)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1565:13-1565:24)
  3: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
  4: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  5: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  6: _6 = &((*_1).1: std::vec::Vec<ast::FlagsItem>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
      kind: _5 = <&std::vec::Vec<ast::FlagsItem> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:28-1566:29)
  1: PlaceMention(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  3: _7 = move _5
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
      kind: falseUnwind -> [real: bb3, unwind: bb19]
  }
  preds [bb1, bb17]
  succs [bb3, bb19]

bb3
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  4: _12 = &mut _7
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  5: _11 = &mut (*_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
      kind: _10 = <core::slice::Iter<'_, ast::FlagsItem> as core::iter::Iterator>::next(move _11) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:28-1566:29)
  1: PlaceMention(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  2: _13 = discriminant(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
      kind: switchInt(move _13) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:18-1566:29)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:13-1566:14)
  1: _15 = ((_10 as Some).0: &ast::FlagsItem)
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:13-1566:14)
  2: PlaceMention(((*_15).1: ast::FlagsItemKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:1567:19-1567:25)
  3: _18 = discriminant(((*_15).1: ast::FlagsItemKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:1567:19-1567:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1567:13-1567:25)
      kind: switchInt(move _18) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb4, bb6]
  succs [bb9, bb10, bb11]

bb8
  0: _4 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  5: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  6: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  7: _0 = core::option::Option::<bool>::None
    SourceInfo(regex-syntax/src/ast/mod.rs:1577:9-1577:13)
  8: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1578:5-1578:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1578:6-1578:6)
      kind: goto -> bb18
  }
  preds [bb6]
  succs [bb18]

bb9
  0: _9 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1574:22-1574:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1574:22-1574:24)
      kind: goto -> bb17
  }
  preds [bb7, bb11, bb16, bb16]
  succs [bb17]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1568:17-1568:40)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb7]
  succs [bb11, bb12]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1571:17-1571:47)
      kind: falseEdge -> [real: bb13, imaginary: bb9]
  }
  preds [bb7, bb10]
  succs [bb9, bb13]

bb12
  0: _3 = const true
    SourceInfo(regex-syntax/src/ast/mod.rs:1569:21-1569:35)
  1: _9 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1568:44-1570:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1568:44-1570:18)
      kind: goto -> bb17
  }
  preds [bb10]
  succs [bb17]

bb13
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:37-1571:46)
  1: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:37-1571:46)
  2: _19 = &((((*_15).1: ast::FlagsItemKind) as Flag).0: ast::Flag)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:37-1571:46)
  3: _20 = &_19
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:37-1571:46)
  4: _16 = &fake shallow ((*_15).1: ast::FlagsItemKind)
    SourceInfo(regex-syntax/src/ast/mod.rs:1567:19-1567:25)
  5: _17 = &fake shallow _15
    SourceInfo(regex-syntax/src/ast/mod.rs:1567:19-1567:25)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:65)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:56)
  8: _22 = &(*_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:56)
  9: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:60-1571:65)
  10: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:60-1571:65)
  11: _24 = &_2
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:60-1571:65)
  12: _23 = &_24
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:60-1571:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:65)
      kind: _21 = <&ast::Flag as core::cmp::PartialEq>::eq(move _22, move _23) -> [return: bb14, unwind: bb19]
  }
  preds [bb11]
  succs [bb14, bb19]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:65)
      kind: switchInt(move _21) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  4: FakeRead(ForMatchGuard, _16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  5: FakeRead(ForMatchGuard, _17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  6: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:33-1572:41)
  7: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:34-1572:41)
  8: _27 = _3
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:34-1572:41)
  9: _26 = Not(move _27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:33-1572:41)
  10: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:40-1572:41)
  11: _0 = core::option::Option::<bool>::Some(move _26)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:28-1572:42)
  12: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/mod.rs:1572:41-1572:42)
  13: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1573:17-1573:18)
  14: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1573:17-1573:18)
  15: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  16: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  17: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  18: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  19: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  20: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  21: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  22: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1578:5-1578:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1578:6-1578:6)
      kind: goto -> bb18
  }
  preds [bb14]
  succs [bb18]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  3: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1571:64-1571:65)
  4: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1573:17-1573:18)
  5: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1573:17-1573:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1571:51-1571:65)
      kind: falseEdge -> [real: bb9, imaginary: bb9]
  }
  preds [bb14]
  succs [bb9, bb9]

bb17
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1576:9-1576:10)
  4: _8 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1566:9-1576:10)
      kind: goto -> bb2
  }
  preds [bb9, bb12]
  succs [bb2]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1578:6-1578:6)
      kind: return
  }
  preds [bb8, bb15]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1564:5-1578:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb13]
  succs []

