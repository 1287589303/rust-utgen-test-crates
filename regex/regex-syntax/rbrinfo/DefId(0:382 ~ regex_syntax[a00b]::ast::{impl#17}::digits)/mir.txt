bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:774:15-774:20)
  1: _2 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:774:15-774:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:774:9-774:20)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:774:15-774:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:774:15-774:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:775:13-775:30)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:776:13-776:41)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb6]

bb4
  0: _0 = const 8_u32
    SourceInfo(regex-syntax/src/ast/mod.rs:777:44-777:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:777:44-777:45)
      kind: goto -> bb7
  }
  preds [bb0, bb3]
  succs [bb7]

bb5
  0: _0 = const 2_u32
    SourceInfo(regex-syntax/src/ast/mod.rs:775:34-775:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:775:34-775:35)
      kind: goto -> bb7
  }
  preds [bb2]
  succs [bb7]

bb6
  0: _0 = const 4_u32
    SourceInfo(regex-syntax/src/ast/mod.rs:776:45-776:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:776:45-776:46)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:779:6-779:6)
      kind: return
  }
  preds [bb4, bb5, bb6]
  succs []

