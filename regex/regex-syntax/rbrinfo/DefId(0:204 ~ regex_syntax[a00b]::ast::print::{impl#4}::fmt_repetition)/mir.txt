bb0
  0: PlaceMention((((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind))
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  1: _5 = discriminant((((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind))
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:179:9-179:26)
      kind: switchInt(move _5) -> [0: bb2, 1: bb4, 2: bb6, 3: bb8, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb4, bb6, bb8]

bb1
  0: FakeRead(ForMatchedPlace(None), (((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind))
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:180:13-180:22)
      kind: falseEdge -> [real: bb9, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb9]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:181:13-181:22)
      kind: falseEdge -> [real: bb13, imaginary: bb4]
  }
  preds [bb2, bb11]
  succs [bb4, bb13]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:182:13-182:23)
      kind: falseEdge -> [real: bb15, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb15]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:183:13-183:23)
      kind: falseEdge -> [real: bb19, imaginary: bb6]
  }
  preds [bb4, bb17]
  succs [bb6, bb19]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:184:13-184:22)
      kind: falseEdge -> [real: bb21, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb21]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:185:13-185:22)
      kind: falseEdge -> [real: bb25, imaginary: bb8]
  }
  preds [bb6, bb23]
  succs [bb8, bb25]

bb8
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:186:19-186:24)
  1: _27 = &(((((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind) as Range).0: ast::RepetitionRange)
    SourceInfo(regex-syntax/src/ast/print.rs:186:19-186:24)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  3: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  4: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:45)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:21)
  6: _31 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:21)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:187:43-187:44)
  8: _32 = &(*_27)
    SourceInfo(regex-syntax/src/ast/print.rs:187:43-187:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:45)
      kind: _30 = ast::print::Writer::<W>::fmt_repetition_range(move _31, move _32) -> [return: bb27, unwind: bb46]
  }
  preds [bb0, bb7]
  succs [bb27, bb46]

bb9
  0: _3 = &fake shallow (((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind)
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:180:26-180:36)
  3: _6 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:180:26-180:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:180:26-180:36)
      kind: switchInt(move _6) -> [0: bb11, otherwise: bb10]
  }
  preds [bb2]
  succs [bb10, bb11]

bb10
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:180:35-180:36)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:180:35-180:36)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:180:35-180:36)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:180:40-180:48)
  4: _7 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:180:40-180:48)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:180:59-180:62)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:180:59-180:62)
  7: _9 = const "?"
    SourceInfo(regex-syntax/src/ast/print.rs:180:59-180:62)
  8: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/print.rs:180:59-180:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:180:40-180:63)
      kind: _0 = <W as core::fmt::Write>::write_str(move _7, move _8) -> [return: bb12, unwind: bb46]
  }
  preds [bb9]
  succs [bb12, bb46]

bb11
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:180:35-180:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:180:26-180:36)
      kind: goto -> bb3
  }
  preds [bb9]
  succs [bb3]

bb12
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:180:62-180:63)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:180:62-180:63)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/print.rs:180:62-180:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:180:62-180:63)
      kind: goto -> bb45
  }
  preds [bb10]
  succs [bb45]

bb13
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:181:26-181:34)
  1: _10 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:181:26-181:34)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/print.rs:181:45-181:49)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:181:45-181:49)
  4: _12 = const "??"
    SourceInfo(regex-syntax/src/ast/print.rs:181:45-181:49)
  5: _11 = &(*_12)
    SourceInfo(regex-syntax/src/ast/print.rs:181:45-181:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:181:26-181:50)
      kind: _0 = <W as core::fmt::Write>::write_str(move _10, move _11) -> [return: bb14, unwind: bb46]
  }
  preds [bb3]
  succs [bb14, bb46]

bb14
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/print.rs:181:49-181:50)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:181:49-181:50)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:181:49-181:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:181:49-181:50)
      kind: goto -> bb45
  }
  preds [bb13]
  succs [bb45]

bb15
  0: _3 = &fake shallow (((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind)
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:182:27-182:37)
  3: _13 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:182:27-182:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:182:27-182:37)
      kind: switchInt(move _13) -> [0: bb17, otherwise: bb16]
  }
  preds [bb4]
  succs [bb16, bb17]

bb16
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:182:36-182:37)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:182:36-182:37)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:182:36-182:37)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:182:41-182:49)
  4: _14 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:182:41-182:49)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:182:60-182:63)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:182:60-182:63)
  7: _16 = const "*"
    SourceInfo(regex-syntax/src/ast/print.rs:182:60-182:63)
  8: _15 = &(*_16)
    SourceInfo(regex-syntax/src/ast/print.rs:182:60-182:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:182:41-182:64)
      kind: _0 = <W as core::fmt::Write>::write_str(move _14, move _15) -> [return: bb18, unwind: bb46]
  }
  preds [bb15]
  succs [bb18, bb46]

bb17
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:182:36-182:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:182:27-182:37)
      kind: goto -> bb5
  }
  preds [bb15]
  succs [bb5]

bb18
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:182:63-182:64)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:182:63-182:64)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:182:63-182:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:182:63-182:64)
      kind: goto -> bb45
  }
  preds [bb16]
  succs [bb45]

bb19
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:183:27-183:35)
  1: _17 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:183:27-183:35)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:183:46-183:50)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:183:46-183:50)
  4: _19 = const "*?"
    SourceInfo(regex-syntax/src/ast/print.rs:183:46-183:50)
  5: _18 = &(*_19)
    SourceInfo(regex-syntax/src/ast/print.rs:183:46-183:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:183:27-183:51)
      kind: _0 = <W as core::fmt::Write>::write_str(move _17, move _18) -> [return: bb20, unwind: bb46]
  }
  preds [bb5]
  succs [bb20, bb46]

bb20
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:183:50-183:51)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:183:50-183:51)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:183:50-183:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:183:50-183:51)
      kind: goto -> bb45
  }
  preds [bb19]
  succs [bb45]

bb21
  0: _3 = &fake shallow (((*_2).1: ast::RepetitionOp).1: ast::RepetitionKind)
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  1: _4 = &fake shallow _2
    SourceInfo(regex-syntax/src/ast/print.rs:179:15-179:26)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:184:26-184:36)
  3: _20 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:184:26-184:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:184:26-184:36)
      kind: switchInt(move _20) -> [0: bb23, otherwise: bb22]
  }
  preds [bb6]
  succs [bb22, bb23]

bb22
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:184:35-184:36)
  1: FakeRead(ForMatchGuard, _3)
    SourceInfo(regex-syntax/src/ast/print.rs:184:35-184:36)
  2: FakeRead(ForMatchGuard, _4)
    SourceInfo(regex-syntax/src/ast/print.rs:184:35-184:36)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:184:40-184:48)
  4: _21 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:184:40-184:48)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/print.rs:184:59-184:62)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:184:59-184:62)
  7: _23 = const "+"
    SourceInfo(regex-syntax/src/ast/print.rs:184:59-184:62)
  8: _22 = &(*_23)
    SourceInfo(regex-syntax/src/ast/print.rs:184:59-184:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:184:40-184:63)
      kind: _0 = <W as core::fmt::Write>::write_str(move _21, move _22) -> [return: bb24, unwind: bb46]
  }
  preds [bb21]
  succs [bb24, bb46]

bb23
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/print.rs:184:35-184:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:184:26-184:36)
      kind: goto -> bb7
  }
  preds [bb21]
  succs [bb7]

bb24
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/print.rs:184:62-184:63)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:184:62-184:63)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:184:62-184:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:184:62-184:63)
      kind: goto -> bb45
  }
  preds [bb22]
  succs [bb45]

bb25
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:185:26-185:34)
  1: _24 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:185:26-185:34)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:185:45-185:49)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:185:45-185:49)
  4: _26 = const "+?"
    SourceInfo(regex-syntax/src/ast/print.rs:185:45-185:49)
  5: _25 = &(*_26)
    SourceInfo(regex-syntax/src/ast/print.rs:185:45-185:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:185:26-185:50)
      kind: _0 = <W as core::fmt::Write>::write_str(move _24, move _25) -> [return: bb26, unwind: bb46]
  }
  preds [bb7]
  succs [bb26, bb46]

bb26
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:185:49-185:50)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:185:49-185:50)
  2: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:185:49-185:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:185:49-185:50)
      kind: goto -> bb45
  }
  preds [bb25]
  succs [bb45]

bb27
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:187:44-187:45)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/print.rs:187:44-187:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
      kind: _29 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _30) -> [return: bb28, unwind: bb46]
  }
  preds [bb8]
  succs [bb28, bb46]

bb28
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  1: PlaceMention(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  2: _33 = discriminant(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
      kind: switchInt(move _33) -> [0: bb31, 1: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  1: _37 = ((_29 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  2: _28 = _37
    SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  4: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:46-187:47)
  5: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:187:46-187:47)
  6: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/print.rs:188:17-190:18)
  7: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/print.rs:188:21-188:31)
  8: _39 = ((*_2).2: bool)
    SourceInfo(regex-syntax/src/ast/print.rs:188:21-188:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:188:21-188:31)
      kind: switchInt(move _39) -> [0: bb35, otherwise: bb34]
  }
  preds [bb28, bb30]
  succs [bb34, bb35]

bb32
  0: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  1: _34 = ((_29 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  3: _36 = _34
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:187:17-187:46)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _36) -> [return: bb33, unwind: bb46]
  }
  preds [bb30]
  succs [bb33, bb46]

bb33
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:187:45-187:46)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:187:46-187:47)
  3: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:187:46-187:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb44
  }
  preds [bb32]
  succs [bb44]

bb34
  0: _38 = const ()
    SourceInfo(regex-syntax/src/ast/print.rs:190:18-190:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:188:17-190:18)
      kind: goto -> bb43
  }
  preds [bb31]
  succs [bb43]

bb35
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  1: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  2: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:44)
  3: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:29)
  4: _43 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:29)
  5: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/print.rs:189:40-189:43)
  6: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/print.rs:189:40-189:43)
  7: _45 = const "?"
    SourceInfo(regex-syntax/src/ast/print.rs:189:40-189:43)
  8: _44 = &(*_45)
    SourceInfo(regex-syntax/src/ast/print.rs:189:40-189:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:44)
      kind: _42 = <W as core::fmt::Write>::write_str(move _43, move _44) -> [return: bb36, unwind: bb46]
  }
  preds [bb31]
  succs [bb36, bb46]

bb36
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/print.rs:189:43-189:44)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/print.rs:189:43-189:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
      kind: _41 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _42) -> [return: bb37, unwind: bb46]
  }
  preds [bb35]
  succs [bb37, bb46]

bb37
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  1: PlaceMention(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  2: _46 = discriminant(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
      kind: switchInt(move _46) -> [0: bb40, 1: bb39, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39, bb40]

bb38
  0: FakeRead(ForMatchedPlace(None), _41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
      kind: unreachable
  }
  preds [bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
      kind: falseEdge -> [real: bb41, imaginary: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  1: _50 = ((_41 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  2: _40 = _50
    SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
  3: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  4: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  6: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  7: _38 = const ()
    SourceInfo(regex-syntax/src/ast/print.rs:188:32-190:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:188:17-190:18)
      kind: goto -> bb43
  }
  preds [bb37, bb39]
  succs [bb43]

bb41
  0: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  1: _47 = ((_41 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  2: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  3: _49 = _47
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:189:21-189:45)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _49) -> [return: bb42, unwind: bb46]
  }
  preds [bb39]
  succs [bb42, bb46]

bb42
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  1: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/print.rs:189:44-189:45)
  2: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  3: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  4: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/print.rs:189:45-189:46)
  5: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/print.rs:190:17-190:18)
  6: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/print.rs:190:17-190:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb44
  }
  preds [bb41]
  succs [bb44]

bb43
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/print.rs:190:17-190:18)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/print.rs:190:17-190:18)
  2: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/print.rs:191:20-191:22)
  3: _51 = ()
    SourceInfo(regex-syntax/src/ast/print.rs:191:20-191:22)
  4: _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _51)
    SourceInfo(regex-syntax/src/ast/print.rs:191:17-191:23)
  5: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/print.rs:191:22-191:23)
  6: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:192:13-192:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:192:13-192:14)
      kind: goto -> bb45
  }
  preds [bb34, bb40]
  succs [bb45]

bb44
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:192:13-192:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:194:6-194:6)
      kind: goto -> bb45
  }
  preds [bb33, bb42]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:194:6-194:6)
      kind: return
  }
  preds [bb12, bb14, bb18, bb20, bb24, bb26, bb43, bb44]
  succs []

bb46
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:177:5-194:6)
      kind: resume
  }
  preds [bb8, bb10, bb13, bb16, bb19, bb22, bb25, bb27, bb32, bb35, bb36, bb41]
  succs []

