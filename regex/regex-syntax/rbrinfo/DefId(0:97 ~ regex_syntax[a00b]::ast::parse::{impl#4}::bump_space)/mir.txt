bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:9-561:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:13-559:37)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:13-559:17)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:13-559:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:559:13-559:37)
      kind: _3 = ast::parse::ParserI::<'_, P>::ignore_whitespace(move _4) -> [return: bb1, unwind: bb48]
  }
  preds []
  succs [bb1, bb48]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:559:13-559:37)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:36-559:37)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:561:10-561:10)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:561:9-561:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:561:9-561:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:562:9-585:10)
      kind: goto -> bb4
  }
  preds [bb1]
  succs [bb4]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:559:36-559:37)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:560:13-560:19)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:561:9-561:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:561:9-561:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:586:6-586:6)
      kind: goto -> bb43
  }
  preds [bb1]
  succs [bb43]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:562:9-585:10)
      kind: falseUnwind -> [real: bb5, unwind: bb48]
  }
  preds [bb2, bb41]
  succs [bb5, bb48]

bb5
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:16-562:29)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:16-562:20)
  2: _8 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:16-562:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:562:16-562:29)
      kind: _7 = ast::parse::ParserI::<'_, P>::is_eof(move _8) -> [return: bb6, unwind: bb48]
  }
  preds [bb4]
  succs [bb6, bb48]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:562:16-562:29)
      kind: switchInt(move _7) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:28-562:29)
  1: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:9-585:10)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:562:9-585:10)
  3: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:585:9-585:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb6]
  succs [bb42]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:562:28-562:29)
  1: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:43)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:27)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:20)
  4: _11 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:27)
      kind: _10 = ast::parse::ParserI::<'_, P>::char(move _11) -> [return: bb9, unwind: bb48]
  }
  preds [bb6]
  succs [bb9, bb48]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:26-563:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:43)
      kind: _9 = core::char::methods::<impl char>::is_whitespace(move _10) -> [return: bb10, unwind: bb48]
  }
  preds [bb8]
  succs [bb10, bb48]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:563:16-563:43)
      kind: switchInt(move _9) -> [0: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:42-563:43)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:564:17-564:28)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:564:17-564:21)
  3: _13 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:564:17-564:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:564:17-564:28)
      kind: _12 = ast::parse::ParserI::<'_, P>::bump(move _13) -> [return: bb12, unwind: bb48]
  }
  preds [bb10]
  succs [bb12, bb48]

bb12
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:564:27-564:28)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:564:28-564:29)
  2: _6 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:563:44-565:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:563:13-584:14)
      kind: goto -> bb41
  }
  preds [bb11]
  succs [bb41]

bb13
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:563:42-563:43)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:41)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:34)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:27)
  4: _16 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:34)
      kind: _15 = ast::parse::ParserI::<'_, P>::char(move _16) -> [return: bb14, unwind: bb48]
  }
  preds [bb10]
  succs [bb14, bb48]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:33-565:34)
  1: _14 = Eq(move _15, const '#')
    SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:565:23-565:41)
      kind: switchInt(move _14) -> [0: bb40, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb40]

bb15
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:40-565:41)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:566:21-566:26)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:566:29-566:33)
  3: _18 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:566:29-566:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:566:29-566:39)
      kind: _17 = ast::parse::ParserI::<'_, P>::pos(move _18) -> [return: bb16, unwind: bb48]
  }
  preds [bb14]
  succs [bb16, bb48]

bb16
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:566:38-566:39)
  1: FakeRead(ForLet(None), _17)
    SourceInfo(regex-syntax/src/ast/parse.rs:566:21-566:26)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:567:21-567:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:567:40-567:53)
      kind: _19 = std::string::String::new() -> [return: bb17, unwind: bb48]
  }
  preds [bb15]
  succs [bb17, bb48]

bb17
  0: FakeRead(ForLet(None), _19)
    SourceInfo(regex-syntax/src/ast/parse.rs:567:21-567:37)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:568:17-568:28)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:568:17-568:21)
  3: _21 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:568:17-568:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:568:17-568:28)
      kind: _20 = ast::parse::ParserI::<'_, P>::bump(move _21) -> [return: bb18, unwind: bb47]
  }
  preds [bb16]
  succs [bb18, bb47]

bb18
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:568:27-568:28)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:568:28-568:29)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
      kind: falseUnwind -> [real: bb20, unwind: bb47]
  }
  preds [bb18, bb28]
  succs [bb20, bb47]

bb20
  0: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:24-569:37)
  1: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:24-569:28)
  2: _24 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:24-569:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:569:24-569:37)
      kind: _23 = ast::parse::ParserI::<'_, P>::is_eof(move _24) -> [return: bb21, unwind: bb47]
  }
  preds [bb19]
  succs [bb21, bb47]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:569:24-569:37)
      kind: switchInt(move _23) -> [0: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23]

bb22
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:36-569:37)
  1: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
  2: _22 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb21]
  succs [bb29]

bb23
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:569:36-569:37)
  1: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:570:25-570:26)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:570:29-570:33)
  3: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:570:29-570:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:570:29-570:40)
      kind: _25 = ast::parse::ParserI::<'_, P>::char(move _26) -> [return: bb24, unwind: bb47]
  }
  preds [bb21]
  succs [bb24, bb47]

bb24
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:570:39-570:40)
  1: FakeRead(ForLet(None), _25)
    SourceInfo(regex-syntax/src/ast/parse.rs:570:25-570:26)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:571:21-571:32)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:571:21-571:25)
  4: _28 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:571:21-571:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:571:21-571:32)
      kind: _27 = ast::parse::ParserI::<'_, P>::bump(move _28) -> [return: bb25, unwind: bb47]
  }
  preds [bb23]
  succs [bb25, bb47]

bb25
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:571:31-571:32)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:571:32-571:33)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:572:21-574:22)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:572:24-572:33)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:572:24-572:25)
  5: _31 = _25
    SourceInfo(regex-syntax/src/ast/parse.rs:572:24-572:25)
  6: _30 = Eq(move _31, const '\n')
    SourceInfo(regex-syntax/src/ast/parse.rs:572:24-572:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:572:24-572:33)
      kind: switchInt(move _30) -> [0: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:572:32-572:33)
  1: _22 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:573:25-573:30)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:574:21-574:22)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:574:21-574:22)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb25]
  succs [bb29]

bb27
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:572:32-572:33)
  1: _29 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:574:22-574:22)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:574:21-574:22)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:574:21-574:22)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:21-575:41)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:21-575:33)
  6: _34 = &mut _19
    SourceInfo(regex-syntax/src/ast/parse.rs:575:21-575:33)
  7: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:39-575:40)
  8: _35 = _25
    SourceInfo(regex-syntax/src/ast/parse.rs:575:39-575:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:575:21-575:41)
      kind: _33 = std::string::String::push(move _34, move _35) -> [return: bb28, unwind: bb47]
  }
  preds [bb25]
  succs [bb28, bb47]

bb28
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:40-575:41)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:40-575:41)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:575:41-575:42)
  3: _6 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:569:38-576:18)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  5: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:569:17-576:18)
      kind: goto -> bb19
  }
  preds [bb27]
  succs [bb19]

bb29
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:576:17-576:18)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:577:21-577:28)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:27-578:55)
  4: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:37-578:42)
  5: _41 = _17
    SourceInfo(regex-syntax/src/ast/parse.rs:578:37-578:42)
  6: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:44-578:54)
  7: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:44-578:48)
  8: _43 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:44-578:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:578:44-578:54)
      kind: _42 = ast::parse::ParserI::<'_, P>::pos(move _43) -> [return: bb30, unwind: bb47]
  }
  preds [bb22, bb26]
  succs [bb30, bb47]

bb30
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:53-578:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:578:27-578:55)
      kind: _40 = ast::Span::new(move _41, move _42) -> [return: bb31, unwind: bb47]
  }
  preds [bb29]
  succs [bb31, bb47]

bb31
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:54-578:55)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:578:54-578:55)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:579:30-579:42)
  3: _44 = move _19
    SourceInfo(regex-syntax/src/ast/parse.rs:579:30-579:42)
  4: _39 = ast::Comment { span: move _40, comment: move _44 }
    SourceInfo(regex-syntax/src/ast/parse.rs:577:31-580:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:580:17-580:18)
      kind: drop(_44) -> [return: bb32, unwind: bb47]
  }
  preds [bb30]
  succs [bb32, bb47]

bb32
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:580:17-580:18)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:580:17-580:18)
  2: FakeRead(ForLet(None), _39)
    SourceInfo(regex-syntax/src/ast/parse.rs:577:21-577:28)
  3: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:66)
  4: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
  5: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:66)
  6: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
  7: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
  8: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:39)
  9: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:30)
  10: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:21)
  11: _52 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:30)
      kind: _51 = ast::parse::ParserI::<'_, P>::parser(move _52) -> [return: bb33, unwind: bb46]
  }
  preds [bb31]
  succs [bb33, bb46]

bb33
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:29-581:30)
  1: _50 = &((*_51).7: core::cell::RefCell<std::vec::Vec<ast::Comment>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
      kind: _49 = core::cell::RefCell::<std::vec::Vec<ast::Comment>>::borrow_mut(move _50) -> [return: bb34, unwind: bb46]
  }
  preds [bb32]
  succs [bb34, bb46]

bb34
  0: _48 = &mut _49
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:66)
      kind: _47 = <core::cell::RefMut<'_, std::vec::Vec<ast::Comment>> as core::ops::DerefMut>::deref_mut(move _48) -> [return: bb35, unwind: bb45]
  }
  preds [bb33]
  succs [bb35, bb45]

bb35
  0: _46 = &mut (*_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:52)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:51-581:52)
  2: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:51-581:52)
  3: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:58-581:65)
  4: _53 = move _39
    SourceInfo(regex-syntax/src/ast/parse.rs:581:58-581:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:17-581:66)
      kind: _45 = std::vec::Vec::<ast::Comment>::push(move _46, move _53) -> [return: bb36, unwind: bb44]
  }
  preds [bb34]
  succs [bb36, bb44]

bb36
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:65-581:66)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:65-581:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
      kind: drop(_49) -> [return: bb37, unwind: bb46]
  }
  preds [bb35]
  succs [bb37, bb46]

bb37
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
  4: _6 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:565:42-582:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
      kind: drop(_39) -> [return: bb38, unwind: bb47]
  }
  preds [bb36]
  succs [bb38, bb47]

bb38
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
      kind: drop(_19) -> [return: bb39, unwind: bb48]
  }
  preds [bb37]
  succs [bb39, bb48]

bb39
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:584:13-584:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:563:13-584:14)
      kind: goto -> bb41
  }
  preds [bb38]
  succs [bb41]

bb40
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:565:40-565:41)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:583:17-583:22)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:584:13-584:14)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:584:13-584:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb42
  }
  preds [bb14]
  succs [bb42]

bb41
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:584:13-584:14)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:585:9-585:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:562:9-585:10)
      kind: goto -> bb4
  }
  preds [bb12, bb39]
  succs [bb4]

bb42
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:585:9-585:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:586:6-586:6)
      kind: goto -> bb43
  }
  preds [bb7, bb40]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:586:6-586:6)
      kind: return
  }
  preds [bb3, bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:65-581:66)
      kind: drop(_53) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:581:66-581:67)
      kind: drop(_49) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb34, bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
      kind: drop(_39) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb32, bb33, bb36, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:582:13-582:14)
      kind: drop(_19) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb17, bb19, bb20, bb23, bb24, bb27, bb29, bb30, bb31, bb37, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:558:5-586:6)
      kind: resume
  }
  preds [bb0, bb4, bb5, bb8, bb9, bb11, bb13, bb15, bb16, bb38, bb47]
  succs []

