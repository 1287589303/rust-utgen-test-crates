bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:9-603:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:13-601:37)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:13-601:17)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:13-601:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:601:13-601:37)
      kind: _3 = ast::parse::ParserI::<'_, P>::ignore_whitespace(move _4) -> [return: bb1, unwind: bb42]
  }
  preds []
  succs [bb1, bb42]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:601:13-601:37)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:36-601:37)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:603:10-603:10)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:603:9-603:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:603:9-603:10)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:9-606:10)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:12-604:25)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:12-604:16)
  7: _9 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:12-604:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:604:12-604:25)
      kind: _8 = ast::parse::ParserI::<'_, P>::is_eof(move _9) -> [return: bb5, unwind: bb42]
  }
  preds [bb1]
  succs [bb5, bb42]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:601:36-601:37)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:602:20-602:24)
  2: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:602:20-602:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:602:20-602:31)
      kind: _0 = ast::parse::ParserI::<'_, P>::peek(move _6) -> [return: bb4, unwind: bb42]
  }
  preds [bb1]
  succs [bb4, bb42]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:602:30-602:31)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:603:9-603:10)
  2: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:603:9-603:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb3]
  succs [bb41]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:604:12-604:25)
      kind: switchInt(move _8) -> [0: bb7, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb7]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:24-604:25)
  1: _0 = core::option::Option::<char>::None
    SourceInfo(regex-syntax/src/ast/parse.rs:605:20-605:24)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:606:9-606:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:606:9-606:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb5]
  succs [bb41]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:604:24-604:25)
  1: _7 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:606:10-606:10)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:606:9-606:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:606:9-606:10)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:13-607:22)
  5: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:38)
  6: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:29)
  7: _13 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:38)
      kind: _12 = ast::parse::ParserI::<'_, P>::offset(move _13) -> [return: bb8, unwind: bb42]
  }
  preds [bb5]
  succs [bb8, bb42]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:37-607:38)
  1: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:63)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:52)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:45)
  4: _16 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:52)
      kind: _15 = ast::parse::ParserI::<'_, P>::char(move _16) -> [return: bb9, unwind: bb42]
  }
  preds [bb7]
  succs [bb9, bb42]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:51-607:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:607:41-607:63)
      kind: _14 = core::char::methods::<impl char>::len_utf8(move _15) -> [return: bb10, unwind: bb42]
  }
  preds [bb8]
  succs [bb10, bb42]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:62-607:63)
  1: _17 = AddWithOverflow(_12, _14)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:63)
      kind: assert(!move (_17.1: bool), "attempt to compute `{} + {}`, which would overflow", move _12, move _14) -> [success: bb11, unwind: bb42]
  }
  preds [bb9]
  succs [bb11, bb42]

bb11
  0: _11 = move (_17.0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:25-607:63)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:62-607:63)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:62-607:63)
  3: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:607:13-607:22)
  4: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:608:13-608:27)
  5: _18 = const false
    SourceInfo(regex-syntax/src/ast/parse.rs:608:30-608:35)
  6: FakeRead(ForLet(None), _18)
    SourceInfo(regex-syntax/src/ast/parse.rs:608:13-608:27)
  7: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
  8: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  9: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  10: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:46)
  11: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:37-609:46)
  12: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:37)
  13: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:37)
  14: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:27)
  15: _26 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:37)
      kind: _25 = ast::parse::ParserI::<'_, P>::pattern(move _26) -> [return: bb12, unwind: bb42]
  }
  preds [bb10]
  succs [bb12, bb42]

bb12
  0: _24 = &(*_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:37)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:36-609:37)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:38-609:45)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:38-609:43)
  4: _28 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:609:38-609:43)
  5: _27 = core::ops::RangeFrom::<usize> { start: move _28 }
    SourceInfo(regex-syntax/src/ast/parse.rs:609:38-609:45)
  6: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:44-609:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:37-609:46)
      kind: _23 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _24, move _27) -> [return: bb13, unwind: bb42]
  }
  preds [bb11]
  succs [bb13, bb42]

bb13
  0: _22 = &(*_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:46)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:45-609:46)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:45-609:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
      kind: _21 = core::str::<impl str>::char_indices(move _22) -> [return: bb14, unwind: bb42]
  }
  preds [bb12]
  succs [bb14, bb42]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:60-609:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
      kind: _20 = <core::str::CharIndices<'_> as core::iter::IntoIterator>::into_iter(move _21) -> [return: bb15, unwind: bb42]
  }
  preds [bb13]
  succs [bb15, bb42]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:60-609:61)
  1: PlaceMention(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  3: _29 = move _20
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
      kind: falseUnwind -> [real: bb17, unwind: bb42]
  }
  preds [bb15, bb24, bb35]
  succs [bb17, bb42]

bb17
  0: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  1: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  4: _34 = &mut _29
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  5: _33 = &mut (*_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
      kind: _32 = <core::str::CharIndices<'_> as core::iter::Iterator>::next(move _33) -> [return: bb18, unwind: bb42]
  }
  preds [bb16]
  succs [bb18, bb42]

bb18
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:60-609:61)
  1: PlaceMention(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  2: _35 = discriminant(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
      kind: switchInt(move _35) -> [0: bb20, 1: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _32)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:23-609:61)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:14-609:15)
  1: _37 = (((_32 as Some).0: (usize, char)).0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:14-609:15)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:17-609:18)
  3: _38 = (((_32 as Some).0: (usize, char)).1: char)
    SourceInfo(regex-syntax/src/ast/parse.rs:609:17-609:18)
  4: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:610:16-610:33)
  5: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:610:16-610:17)
  6: _40 = _38
    SourceInfo(regex-syntax/src/ast/parse.rs:610:16-610:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:610:16-610:33)
      kind: _39 = core::char::methods::<impl char>::is_whitespace(move _40) -> [return: bb23, unwind: bb42]
  }
  preds [bb18, bb20]
  succs [bb23, bb42]

bb22
  0: _19 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
      kind: goto -> bb36
  }
  preds [bb20]
  succs [bb36]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:610:16-610:33)
      kind: switchInt(move _39) -> [0: bb25, otherwise: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:610:32-610:33)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  3: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  4: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  5: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  6: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb23]
  succs [bb16]

bb25
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:610:32-610:33)
  1: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:612:24-612:34)
  2: _42 = _18
    SourceInfo(regex-syntax/src/ast/parse.rs:612:24-612:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:612:24-612:34)
      kind: switchInt(move _42) -> [0: bb26, otherwise: bb29]
  }
  preds [bb23]
  succs [bb26, bb29]

bb26
  0: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:612:38-612:46)
  1: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:612:38-612:39)
  2: _44 = _38
    SourceInfo(regex-syntax/src/ast/parse.rs:612:38-612:39)
  3: _43 = Eq(move _44, const '#')
    SourceInfo(regex-syntax/src/ast/parse.rs:612:38-612:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:612:38-612:46)
      kind: switchInt(move _43) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:612:45-612:46)
  1: _18 = const true
    SourceInfo(regex-syntax/src/ast/parse.rs:613:17-613:34)
  2: _31 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:612:47-614:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:612:20-619:14)
      kind: goto -> bb35
  }
  preds [bb26]
  succs [bb35]

bb28
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:612:45-612:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb26]
  succs [bb29]

bb29
  0: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:614:23-614:33)
  1: _45 = _18
    SourceInfo(regex-syntax/src/ast/parse.rs:614:23-614:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:614:23-614:33)
      kind: switchInt(move _45) -> [0: bb33, otherwise: bb30]
  }
  preds [bb25, bb28]
  succs [bb30, bb33]

bb30
  0: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:614:37-614:46)
  1: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:614:37-614:38)
  2: _47 = _38
    SourceInfo(regex-syntax/src/ast/parse.rs:614:37-614:38)
  3: _46 = Eq(move _47, const '\n')
    SourceInfo(regex-syntax/src/ast/parse.rs:614:37-614:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:614:37-614:46)
      kind: switchInt(move _46) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:614:45-614:46)
  1: _18 = const false
    SourceInfo(regex-syntax/src/ast/parse.rs:615:17-615:35)
  2: _31 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:614:47-616:14)
  3: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  4: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:612:20-619:14)
      kind: goto -> bb35
  }
  preds [bb30]
  succs [bb35]

bb32
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:614:45-614:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb30]
  succs [bb33]

bb33
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:617:26-617:27)
  1: _49 = _37
    SourceInfo(regex-syntax/src/ast/parse.rs:617:26-617:27)
  2: _50 = AddWithOverflow(_11, _49)
    SourceInfo(regex-syntax/src/ast/parse.rs:617:17-617:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:617:17-617:27)
      kind: assert(!move (_50.1: bool), "attempt to compute `{} + {}`, which would overflow", _11, move _49) -> [success: bb34, unwind: bb42]
  }
  preds [bb29, bb32]
  succs [bb34, bb42]

bb34
  0: _11 = move (_50.0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:617:17-617:27)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:617:26-617:27)
  2: _19 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:618:17-618:22)
  3: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  4: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  5: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  6: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  7: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  8: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  9: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb35
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  2: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:619:13-619:14)
  3: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  4: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  5: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  6: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  7: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  8: _30 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:609:9-620:10)
      kind: goto -> bb16
  }
  preds [bb27, bb31]
  succs [bb16]

bb36
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  2: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  5: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  6: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  7: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:620:9-620:10)
  8: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:40)
  9: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:40)
  10: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:32)
  11: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:23-621:32)
  12: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:23)
  13: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:23)
  14: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:13)
  15: _57 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:23)
      kind: _56 = ast::parse::ParserI::<'_, P>::pattern(move _57) -> [return: bb37, unwind: bb42]
  }
  preds [bb22, bb34]
  succs [bb37, bb42]

bb37
  0: _55 = &(*_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:23)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:22-621:23)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:24-621:31)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:24-621:29)
  4: _59 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:621:24-621:29)
  5: _58 = core::ops::RangeFrom::<usize> { start: move _59 }
    SourceInfo(regex-syntax/src/ast/parse.rs:621:24-621:31)
  6: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:30-621:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:621:23-621:32)
      kind: _54 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _55, move _58) -> [return: bb38, unwind: bb42]
  }
  preds [bb36]
  succs [bb38, bb42]

bb38
  0: _53 = &(*_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:32)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:31-621:32)
  2: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:31-621:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:40)
      kind: _52 = core::str::<impl str>::chars(move _53) -> [return: bb39, unwind: bb42]
  }
  preds [bb37]
  succs [bb39, bb42]

bb39
  0: _51 = &mut _52
    SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:40)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:39-621:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:621:9-621:47)
      kind: _0 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _51) -> [return: bb40, unwind: bb42]
  }
  preds [bb38]
  succs [bb40, bb42]

bb40
  0: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:621:46-621:47)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:622:5-622:6)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:622:5-622:6)
  3: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:622:5-622:6)
  4: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:622:5-622:6)
  5: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:622:5-622:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:622:6-622:6)
      kind: goto -> bb41
  }
  preds [bb39]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:622:6-622:6)
      kind: return
  }
  preds [bb4, bb6, bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:600:5-622:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb16, bb17, bb21, bb33, bb36, bb37, bb38, bb39]
  succs []

