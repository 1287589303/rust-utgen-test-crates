bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:26-2064:38)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:26-2064:31)
  2: _3 = move _1
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:26-2064:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2064:26-2064:38)
      kind: _2 = <B as core::convert::Into<std::vec::Vec<u8>>>::into(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:37-2064:38)
  1: _0 = hir::literal::Literal { bytes: move _2, exact: const false }
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:9-2064:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2064:53-2064:54)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:2064:53-2064:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2065:5-2065:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2065:6-2065:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2064:37-2064:38)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2065:5-2065:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:2063:5-2065:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

