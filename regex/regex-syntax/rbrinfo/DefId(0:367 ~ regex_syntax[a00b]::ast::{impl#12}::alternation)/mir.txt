bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:551:26-551:37)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:551:35-551:36)
  2: _3 = move _1
    SourceInfo(regex-syntax/src/ast/mod.rs:551:35-551:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:551:26-551:37)
      kind: _2 = std::boxed::Box::<ast::Alternation>::new(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:551:36-551:37)
  1: _0 = ast::Ast::Alternation(move _2)
    SourceInfo(regex-syntax/src/ast/mod.rs:551:9-551:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:551:37-551:38)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:551:37-551:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:552:5-552:6)
      kind: drop(_1) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:552:6-552:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:551:36-551:37)
      kind: drop(_3) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:552:5-552:6)
      kind: drop(_1) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:550:5-552:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

