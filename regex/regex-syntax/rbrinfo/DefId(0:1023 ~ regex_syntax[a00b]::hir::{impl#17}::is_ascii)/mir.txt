bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:36)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:29)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:29)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:17)
  4: _5 = &((*_1).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:29)
      kind: _4 = hir::interval::IntervalSet::<hir::ClassBytesRange>::intervals(move _5) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _3 = &(*_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:29)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:28-1441:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:36)
      kind: _2 = core::slice::<impl [hir::ClassBytesRange]>::last(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:35-1441:36)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:50-1441:67)
  2: _6 = {closure@regex-syntax/src/hir/mod.rs:1441:50: 1441:53}
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:50-1441:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1441:9-1441:68)
      kind: _0 = core::option::Option::<&hir::ClassBytesRange>::map_or::<bool, {closure@regex-syntax/src/hir/mod.rs:1441:50: 1441:53}>(move _2, const true, move _6) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:67-1441:68)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1441:67-1441:68)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1442:5-1442:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1442:6-1442:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1440:5-1442:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

