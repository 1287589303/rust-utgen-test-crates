bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:123:13-123:16)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:123:25-123:30)
  2: _4 = discriminant((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:123:25-123:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:123:19-123:30)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:123:25-123:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:123:25-123:30)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:124:13-124:30)
      kind: falseEdge -> [real: bb9, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb9]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:125:13-125:24)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:126:13-126:34)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:127:13-127:36)
      kind: falseEdge -> [real: bb12, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb12]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:128:13-128:41)
      kind: falseEdge -> [real: bb13, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb13]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:129:13-129:37)
      kind: falseEdge -> [real: bb14, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb14]

bb8
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:134:17-135:66)
  1: _10 = const "Unicode-aware case insensitivity matching is not available (make sure the unicode-case feature is enabled)"
    SourceInfo(regex-syntax/src/hir/mod.rs:134:17-135:66)
  2: _3 = &(*_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:134:17-135:66)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:136:13-136:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:136:13-136:14)
      kind: goto -> bb15
  }
  preds [bb0, bb7]
  succs [bb15]

bb9
  0: _3 = const "Unicode not allowed here"
    SourceInfo(regex-syntax/src/hir/mod.rs:124:34-124:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:124:34-124:60)
      kind: goto -> bb15
  }
  preds [bb2]
  succs [bb15]

bb10
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:125:28-125:61)
  1: _5 = const "pattern can match invalid UTF-8"
    SourceInfo(regex-syntax/src/hir/mod.rs:125:28-125:61)
  2: _3 = &(*_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:125:28-125:61)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:125:60-125:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:125:60-125:61)
      kind: goto -> bb15
  }
  preds [bb3]
  succs [bb15]

bb11
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:126:38-126:78)
  1: _6 = const "invalid line terminator, must be ASCII"
    SourceInfo(regex-syntax/src/hir/mod.rs:126:38-126:78)
  2: _3 = &(*_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:126:38-126:78)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:126:77-126:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:126:77-126:78)
      kind: goto -> bb15
  }
  preds [bb4]
  succs [bb15]

bb12
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:127:40-127:68)
  1: _7 = const "Unicode property not found"
    SourceInfo(regex-syntax/src/hir/mod.rs:127:40-127:68)
  2: _3 = &(*_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:127:40-127:68)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:127:67-127:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:127:67-127:68)
      kind: goto -> bb15
  }
  preds [bb5]
  succs [bb15]

bb13
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:128:45-128:79)
  1: _8 = const "Unicode property value not found"
    SourceInfo(regex-syntax/src/hir/mod.rs:128:45-128:79)
  2: _3 = &(*_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:128:45-128:79)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:128:78-128:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:128:78-128:79)
      kind: goto -> bb15
  }
  preds [bb6]
  succs [bb15]

bb14
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:130:17-131:66)
  1: _9 = const "Unicode-aware Perl class not found (make sure the unicode-perl feature is enabled)"
    SourceInfo(regex-syntax/src/hir/mod.rs:130:17-131:66)
  2: _3 = &(*_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:130:17-131:66)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:132:13-132:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:132:13-132:14)
      kind: goto -> bb15
  }
  preds [bb7]
  succs [bb15]

bb15
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/mod.rs:123:13-123:16)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:9-138:10)
  2: _11 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:9-138:10)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:21-138:24)
  4: _12 = &(*_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:21-138:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:138:9-138:25)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _11, move _12) -> [return: bb16, unwind: bb17]
  }
  preds [bb8, bb9, bb10, bb11, bb12, bb13, bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:24-138:25)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:138:24-138:25)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:139:5-139:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:139:6-139:6)
      kind: return
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:120:5-139:6)
      kind: resume
  }
  preds [bb15]
  succs []

