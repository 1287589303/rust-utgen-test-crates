{
  "regex-syntax/src/hir/print.rs:232:20:232:46": [
    {
      "Bool": {
        "Other": "let Some(ref name) = *name"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:130:20:130:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "len > 1",
          "lhs": "len",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:145:25:145:64": [
    {
      "Try": "self.write_literal_char(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:121:29:121:56": [
    {
      "Try": "self.write_literal_char(c)?"
    }
  ],
  "regex-syntax/src/hir/print.rs:146:25:146:62": [
    {
      "Try": "self.write_literal_char(range.end())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:140:24:140:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "range.start() == range.end()",
          "lhs": "range.start()",
          "rhs": "range.end()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:212:21:212:54": [
    {
      "Try": "self.wtr.write_str(r\"\\b{start}\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:98:17:98:45": [
    {
      "Try": "self.wtr.write_str(r\"(?:)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:227:21:227:57": [
    {
      "Try": "self.wtr.write_str(r\"\\b{end-half}\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:159:17:159:46": [
    {
      "Try": "self.wtr.write_str(\"(?-u:[\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:120:34:120:48": [
    {
      "For": {
        "iter_var": "c",
        "iter_range": "string.chars()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:215:21:215:52": [
    {
      "Try": "self.wtr.write_str(r\"\\b{end}\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:200:21:200:47": [
    {
      "Try": "self.wtr.write_str(r\"\\b\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:206:21:206:60": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\b{start})\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:138:17:138:41": [
    {
      "Try": "self.wtr.write_str(\"[\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:169:25:169:68": [
    {
      "Try": "self.write_literal_class_byte(range.end())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:163:31:163:63": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "range.start() + 1 == range.end()",
          "lhs": "range.start() + 1",
          "rhs": "range.end()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:156:20:156:43": [
    {
      "Bool": {
        "Other": "cls.ranges().is_empty()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:203:21:203:47": [
    {
      "Try": "self.wtr.write_str(r\"\\B\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:131:21:131:46": [
    {
      "Try": "self.wtr.write_str(r\")\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:142:31:142:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "u32::from(range.start()) + 1",
          "lhs": "u32::from(range.start())",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:135:20:135:43": [
    {
      "Bool": {
        "Other": "cls.ranges().is_empty()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:116:21:116:48": [
    {
      "Try": "self.wtr.write_str(r\"(?:\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:160:30:160:40": [
    {
      "For": {
        "iter_var": "range",
        "iter_range": "cls.iter()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:91:15:91:26": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/print.rs:91:15:91:26",
        "match_str": "*hir.kind()",
        "match_kind": {
          "Enum": [
            "Empty",
            "Literal",
            "Class",
            "Look",
            "Repetition",
            "Capture",
            "Concat",
            "Alternation"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/print.rs:92:13:92:27": {
            "pat": {
              "pat_str": "HirKind::Empty",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:92:31:99:14"
          },
          "regex-syntax/src/hir/print.rs:174:13:174:36": {
            "pat": {
              "pat_str": "HirKind::Look(ref look)",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:174:40:229:14"
          },
          "regex-syntax/src/hir/print.rs:155:13:155:55": {
            "pat": {
              "pat_str": "HirKind::Class(hir::Class::Bytes(ref cls))",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:155:59:173:14"
          },
          "regex-syntax/src/hir/print.rs:134:13:134:57": {
            "pat": {
              "pat_str": "HirKind::Class(hir::Class::Unicode(ref cls))",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:134:61:154:14"
          },
          "regex-syntax/src/hir/print.rs:230:13:230:60": {
            "pat": {
              "pat_str": "HirKind::Capture(hir::Capture { ref name, .. })",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:230:64:235:14"
          },
          "regex-syntax/src/hir/print.rs:101:13:101:35": {
            "pat": {
              "pat_str": "HirKind::Repetition(_)",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:101:39:101:41"
          },
          "regex-syntax/src/hir/print.rs:102:13:102:54": {
            "pat": {
              "pat_str": "HirKind::Literal(hir::Literal(ref bytes))",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:102:58:133:14"
          },
          "regex-syntax/src/hir/print.rs:249:13:249:31": {
            "pat": {
              "pat_str": "HirKind::Concat(_)",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:249:61:251:14"
          },
          "regex-syntax/src/hir/print.rs:249:34:249:57": {
            "pat": {
              "pat_str": "HirKind::Alternation(_)",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:249:61:251:14"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:164:25:164:70": [
    {
      "Try": "self.write_literal_class_byte(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:191:21:191:51": [
    {
      "Try": "self.wtr.write_str(\"(?mR:$)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:176:21:176:47": [
    {
      "Try": "self.wtr.write_str(r\"\\A\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:179:21:179:47": [
    {
      "Try": "self.wtr.write_str(r\"\\z\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:150:25:150:62": [
    {
      "Try": "self.write_literal_char(range.end())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:126:29:126:56": [
    {
      "Try": "self.write_literal_byte(b)?"
    }
  ],
  "regex-syntax/src/hir/print.rs:250:17:250:44": [
    {
      "Try": "self.wtr.write_str(r\"(?:\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:224:21:224:59": [
    {
      "Try": "self.wtr.write_str(r\"\\b{start-half}\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:221:21:221:63": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\b{end-half})\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:218:21:218:65": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\b{start-half})\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:163:31:163:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "range.start() + 1",
          "lhs": "range.start()",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:188:21:188:51": [
    {
      "Try": "self.wtr.write_str(\"(?mR:^)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:174:46:174:51": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/print.rs:174:46:174:51",
        "match_str": "*look",
        "match_kind": {
          "Enum": [
            "Start",
            "End",
            "StartLF",
            "EndLF",
            "StartCRLF",
            "EndCRLF",
            "WordAscii",
            "WordAsciiNegate",
            "WordUnicode",
            "WordUnicodeNegate",
            "WordStartAscii",
            "WordEndAscii",
            "WordStartUnicode",
            "WordEndUnicode",
            "WordStartHalfAscii",
            "WordEndHalfAscii",
            "WordStartHalfUnicode",
            "WordEndHalfUnicode"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/print.rs:205:17:205:42": {
            "pat": {
              "pat_str": "hir::Look::WordStartAscii",
              "kind": {
                "Enum": 1024
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:205:46:207:18"
          },
          "regex-syntax/src/hir/print.rs:190:17:190:35": {
            "pat": {
              "pat_str": "hir::Look::EndCRLF",
              "kind": {
                "Enum": 32
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:190:39:192:18"
          },
          "regex-syntax/src/hir/print.rs:226:17:226:46": {
            "pat": {
              "pat_str": "hir::Look::WordEndHalfUnicode",
              "kind": {
                "Enum": 131072
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:226:50:228:18"
          },
          "regex-syntax/src/hir/print.rs:175:17:175:33": {
            "pat": {
              "pat_str": "hir::Look::Start",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:175:37:177:18"
          },
          "regex-syntax/src/hir/print.rs:208:17:208:40": {
            "pat": {
              "pat_str": "hir::Look::WordEndAscii",
              "kind": {
                "Enum": 2048
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:208:44:210:18"
          },
          "regex-syntax/src/hir/print.rs:214:17:214:42": {
            "pat": {
              "pat_str": "hir::Look::WordEndUnicode",
              "kind": {
                "Enum": 8192
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:214:46:216:18"
          },
          "regex-syntax/src/hir/print.rs:211:17:211:44": {
            "pat": {
              "pat_str": "hir::Look::WordStartUnicode",
              "kind": {
                "Enum": 4096
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:211:48:213:18"
          },
          "regex-syntax/src/hir/print.rs:196:17:196:43": {
            "pat": {
              "pat_str": "hir::Look::WordAsciiNegate",
              "kind": {
                "Enum": 128
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:196:47:198:18"
          },
          "regex-syntax/src/hir/print.rs:199:17:199:39": {
            "pat": {
              "pat_str": "hir::Look::WordUnicode",
              "kind": {
                "Enum": 256
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:199:43:201:18"
          },
          "regex-syntax/src/hir/print.rs:181:17:181:35": {
            "pat": {
              "pat_str": "hir::Look::StartLF",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:181:39:183:18"
          },
          "regex-syntax/src/hir/print.rs:217:17:217:46": {
            "pat": {
              "pat_str": "hir::Look::WordStartHalfAscii",
              "kind": {
                "Enum": 16384
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:217:50:219:18"
          },
          "regex-syntax/src/hir/print.rs:220:17:220:44": {
            "pat": {
              "pat_str": "hir::Look::WordEndHalfAscii",
              "kind": {
                "Enum": 32768
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:220:48:222:18"
          },
          "regex-syntax/src/hir/print.rs:187:17:187:37": {
            "pat": {
              "pat_str": "hir::Look::StartCRLF",
              "kind": {
                "Enum": 16
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:187:41:189:18"
          },
          "regex-syntax/src/hir/print.rs:202:17:202:45": {
            "pat": {
              "pat_str": "hir::Look::WordUnicodeNegate",
              "kind": {
                "Enum": 512
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:202:49:204:18"
          },
          "regex-syntax/src/hir/print.rs:223:17:223:48": {
            "pat": {
              "pat_str": "hir::Look::WordStartHalfUnicode",
              "kind": {
                "Enum": 65536
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:223:52:225:18"
          },
          "regex-syntax/src/hir/print.rs:193:17:193:37": {
            "pat": {
              "pat_str": "hir::Look::WordAscii",
              "kind": {
                "Enum": 64
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:193:41:195:18"
          },
          "regex-syntax/src/hir/print.rs:178:17:178:31": {
            "pat": {
              "pat_str": "hir::Look::End",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:178:35:180:18"
          },
          "regex-syntax/src/hir/print.rs:184:17:184:33": {
            "pat": {
              "pat_str": "hir::Look::EndLF",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:184:37:186:18"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:182:21:182:50": [
    {
      "Try": "self.wtr.write_str(\"(?m:^)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:153:17:153:41": [
    {
      "Try": "self.wtr.write_str(\"]\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:148:25:148:64": [
    {
      "Try": "self.write_literal_char(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:185:21:185:50": [
    {
      "Try": "self.wtr.write_str(\"(?m:$)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:115:20:115:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "len > 1",
          "lhs": "len",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:142:31:143:50": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "lhs": "u32::from(range.start()) + 1",
          "rhs": "u32::from(range.end())",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:233:21:233:54": [
    {
      "Try": "write!(self.wtr, \"?P<{}>\", name)?"
    }
  ],
  "regex-syntax/src/hir/print.rs:139:30:139:40": [
    {
      "For": {
        "iter_var": "range",
        "iter_range": "cls.iter()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:231:17:231:41": [
    {
      "Try": "self.wtr.write_str(\"(\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:168:25:168:49": [
    {
      "Try": "self.wtr.write_str(\"-\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:141:25:141:64": [
    {
      "Try": "self.write_literal_char(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:118:23:118:29": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/print.rs:118:23:118:29",
        "match_str": "result",
        "match_kind": {
          "Enum": [
            "Ok",
            "Err"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/print.rs:119:21:119:31": {
            "pat": {
              "pat_str": "Ok(string)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:119:35:123:22"
          },
          "regex-syntax/src/hir/print.rs:124:21:124:27": {
            "pat": {
              "pat_str": "Err(_)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/print.rs:124:31:128:22"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:165:25:165:68": [
    {
      "Try": "self.write_literal_class_byte(range.end())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:162:25:162:70": [
    {
      "Try": "self.write_literal_class_byte(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:149:25:149:49": [
    {
      "Try": "self.wtr.write_str(\"-\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:209:21:209:58": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\b{end})\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:172:17:172:42": [
    {
      "Try": "self.wtr.write_str(\"])\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:167:25:167:70": [
    {
      "Try": "self.write_literal_class_byte(range.start())?"
    }
  ],
  "regex-syntax/src/hir/print.rs:194:21:194:53": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\b)\")?"
    }
  ],
  "regex-syntax/src/hir/print.rs:161:24:161:52": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "range.start() == range.end()",
          "lhs": "range.start()",
          "rhs": "range.end()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:125:35:125:47": [
    {
      "For": {
        "iter_var": "&b",
        "iter_range": "bytes.iter()"
      }
    }
  ],
  "regex-syntax/src/hir/print.rs:197:21:197:53": [
    {
      "Try": "self.wtr.write_str(r\"(?-u:\\B)\")?"
    }
  ]
}