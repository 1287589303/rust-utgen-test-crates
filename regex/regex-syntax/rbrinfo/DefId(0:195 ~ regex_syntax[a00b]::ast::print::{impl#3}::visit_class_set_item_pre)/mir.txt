bb0
  0: PlaceMention((*_2))
    SourceInfo(regex-syntax/src/ast/print.rs:113:15-113:19)
  1: _3 = discriminant((*_2))
    SourceInfo(regex-syntax/src/ast/print.rs:113:15-113:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:113:9-113:19)
      kind: switchInt(move _3) -> [6: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:117:21-117:23)
  1: _7 = ()
    SourceInfo(regex-syntax/src/ast/print.rs:117:21-117:23)
  2: _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _7)
    SourceInfo(regex-syntax/src/ast/print.rs:117:18-117:24)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:117:23-117:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:117:23-117:24)
      kind: goto -> bb5
  }
  preds [bb0, bb2]
  succs [bb5]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:114:13-114:48)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:114:42-114:47)
  1: _4 = &(((*_2) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/print.rs:114:42-114:47)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:115:17-115:21)
  3: _5 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/print.rs:115:17-115:21)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:115:46-115:47)
  5: _6 = &(*(*_4))
    SourceInfo(regex-syntax/src/ast/print.rs:115:46-115:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:115:17-115:48)
      kind: _0 = ast::print::Writer::<W>::fmt_class_bracketed_pre(move _5, move _6) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:115:47-115:48)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:115:47-115:48)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:116:13-116:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:116:13-116:14)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:119:6-119:6)
      kind: return
  }
  preds [bb1, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:109:5-119:6)
      kind: resume
  }
  preds [bb3]
  succs []

