bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:818:13-818:17)
  1: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:818:26-818:39)
  2: _4 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:818:26-818:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:818:20-818:39)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:818:26-818:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:818:26-818:39)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:819:13-819:17)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:820:18-820:30)
  1: _6 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:820:18-820:30)
  2: _3 = move _6
    SourceInfo(regex-syntax/src/hir/literal.rs:820:35-820:39)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:820:38-820:39)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:818:13-818:17)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:9-824:10)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:52)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:23)
  8: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:16)
  9: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:23)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:16)
  11: _12 = &(*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:23)
      kind: _11 = <std::vec::Vec<hir::literal::Literal> as core::ops::Deref>::deref(move _12) -> [return: bb5, unwind: bb14]
  }
  preds [bb0, bb2]
  succs [bb5, bb14]

bb4
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:819:21-819:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:819:21-819:27)
      kind: goto -> bb11
  }
  preds [bb2]
  succs [bb11]

bb5
  0: _10 = &(*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:16)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:15-822:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:23)
      kind: _9 = core::slice::<impl [hir::literal::Literal]>::last(move _10) -> [return: bb6, unwind: bb14]
  }
  preds [bb3]
  succs [bb6, bb14]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:22-822:23)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:38-822:51)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:38-822:51)
  3: _14 = &_2
    SourceInfo(regex-syntax/src/hir/literal.rs:822:38-822:51)
  4: _13 = {closure@regex-syntax/src/hir/literal.rs:822:38: 822:41} { lit: move _14 }
    SourceInfo(regex-syntax/src/hir/literal.rs:822:38-822:51)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:40-822:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:52)
      kind: _8 = core::option::Option::<&hir::literal::Literal>::map_or::<bool, {closure@regex-syntax/src/hir/literal.rs:822:38: 822:41}>(move _9, const false, move _13) -> [return: bb7, unwind: bb14]
  }
  preds [bb5]
  succs [bb7, bb14]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:822:12-822:52)
      kind: switchInt(move _8) -> [0: bb9, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:823:13-823:19)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:824:9-824:10)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:824:9-824:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:822:51-822:52)
  3: _7 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:824:10-824:10)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:824:9-824:10)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:824:9-824:10)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:9-825:23)
  7: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:9-825:13)
  8: _17 = &mut (*_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:9-825:13)
  9: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:19-825:22)
  10: _18 = move _2
    SourceInfo(regex-syntax/src/hir/literal.rs:825:19-825:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:825:9-825:23)
      kind: _16 = std::vec::Vec::<hir::literal::Literal>::push(move _17, move _18) -> [return: bb10, unwind: bb13]
  }
  preds [bb7]
  succs [bb10, bb13]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:22-825:23)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:22-825:23)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:825:23-825:24)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:817:42-826:6)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:826:5-826:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:826:5-826:6)
      kind: drop(_2) -> [return: bb12, unwind: bb15]
  }
  preds [bb9]
  succs [bb12, bb15]

bb11
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:826:5-826:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:826:5-826:6)
      kind: drop(_2) -> [return: bb12, unwind: bb15]
  }
  preds [bb4, bb8]
  succs [bb12, bb15]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:826:6-826:6)
      kind: return
  }
  preds [bb10, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:825:22-825:23)
      kind: drop(_18) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:826:5-826:6)
      kind: drop(_2) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb3, bb5, bb6, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:817:5-826:6)
      kind: resume
  }
  preds [bb10, bb11, bb14]
  succs []

