bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:561:9-574:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:561:15-561:20)
  2: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:561:15-561:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:561:9-561:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:561:15-561:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:561:15-561:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:562:13-562:33)
      kind: falseEdge -> [real: bb14, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb14]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:563:13-563:30)
      kind: falseEdge -> [real: bb15, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb15]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:564:13-564:32)
      kind: falseEdge -> [real: bb16, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb16]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:565:13-565:31)
      kind: falseEdge -> [real: bb17, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb17]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:566:13-566:34)
      kind: falseEdge -> [real: bb18, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb18]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:567:13-567:37)
      kind: falseEdge -> [real: bb19, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb19]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:568:13-568:34)
      kind: falseEdge -> [real: bb20, imaginary: bb9]
  }
  preds [bb0, bb7]
  succs [bb9, bb20]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:569:13-569:39)
      kind: falseEdge -> [real: bb21, imaginary: bb10]
  }
  preds [bb0, bb8]
  succs [bb10, bb21]

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:570:13-570:35)
      kind: falseEdge -> [real: bb22, imaginary: bb11]
  }
  preds [bb0, bb9]
  succs [bb11, bb22]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:571:13-571:30)
      kind: falseEdge -> [real: bb23, imaginary: bb12]
  }
  preds [bb0, bb10]
  succs [bb12, bb23]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:572:13-572:36)
      kind: falseEdge -> [real: bb24, imaginary: bb13]
  }
  preds [bb0, bb11]
  succs [bb13, bb24]

bb13
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:25-573:30)
  1: _24 = &(((*_1) as Concat).0: std::boxed::Box<ast::Concat>)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:25-573:30)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:35-573:42)
  3: _25 = &((*(*_24)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:35-573:42)
  4: _2 = &(*_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:35-573:42)
  5: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:41-573:42)
  6: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:573:41-573:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:573:41-573:42)
      kind: goto -> bb25
  }
  preds [bb0, bb12]
  succs [bb25]

bb14
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:562:24-562:32)
  1: _4 = &(((*_1) as Empty).0: std::boxed::Box<ast::Span>)
    SourceInfo(regex-syntax/src/ast/mod.rs:562:24-562:32)
  2: _2 = &(*(*_4))
    SourceInfo(regex-syntax/src/ast/mod.rs:562:37-562:41)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:562:40-562:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:562:40-562:41)
      kind: goto -> bb25
  }
  preds [bb2]
  succs [bb25]

bb15
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:24-563:29)
  1: _5 = &(((*_1) as Flags).0: std::boxed::Box<ast::SetFlags>)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:24-563:29)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:34-563:41)
  3: _6 = &((*(*_5)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:34-563:41)
  4: _2 = &(*_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:34-563:41)
  5: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:40-563:41)
  6: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:563:40-563:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:563:40-563:41)
      kind: goto -> bb25
  }
  preds [bb3]
  succs [bb25]

bb16
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:26-564:31)
  1: _7 = &(((*_1) as Literal).0: std::boxed::Box<ast::Literal>)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:26-564:31)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:36-564:43)
  3: _8 = &((*(*_7)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:36-564:43)
  4: _2 = &(*_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:36-564:43)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:42-564:43)
  6: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:564:42-564:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:564:42-564:43)
      kind: goto -> bb25
  }
  preds [bb4]
  succs [bb25]

bb17
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:565:22-565:30)
  1: _9 = &(((*_1) as Dot).0: std::boxed::Box<ast::Span>)
    SourceInfo(regex-syntax/src/ast/mod.rs:565:22-565:30)
  2: _2 = &(*(*_9))
    SourceInfo(regex-syntax/src/ast/mod.rs:565:35-565:39)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:565:38-565:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:565:38-565:39)
      kind: goto -> bb25
  }
  preds [bb5]
  succs [bb25]

bb18
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:28-566:33)
  1: _10 = &(((*_1) as Assertion).0: std::boxed::Box<ast::Assertion>)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:28-566:33)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:38-566:45)
  3: _11 = &((*(*_10)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:38-566:45)
  4: _2 = &(*_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:38-566:45)
  5: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:44-566:45)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:566:44-566:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:566:44-566:45)
      kind: goto -> bb25
  }
  preds [bb6]
  succs [bb25]

bb19
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:31-567:36)
  1: _12 = &(((*_1) as ClassUnicode).0: std::boxed::Box<ast::ClassUnicode>)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:31-567:36)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:41-567:48)
  3: _13 = &((*(*_12)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:41-567:48)
  4: _2 = &(*_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:41-567:48)
  5: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:47-567:48)
  6: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:567:47-567:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:567:47-567:48)
      kind: goto -> bb25
  }
  preds [bb7]
  succs [bb25]

bb20
  0: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:28-568:33)
  1: _14 = &(((*_1) as ClassPerl).0: std::boxed::Box<ast::ClassPerl>)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:28-568:33)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:38-568:45)
  3: _15 = &((*(*_14)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:38-568:45)
  4: _2 = &(*_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:38-568:45)
  5: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:44-568:45)
  6: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:568:44-568:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:568:44-568:45)
      kind: goto -> bb25
  }
  preds [bb8]
  succs [bb25]

bb21
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:33-569:38)
  1: _16 = &(((*_1) as ClassBracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:33-569:38)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:43-569:50)
  3: _17 = &((*(*_16)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:43-569:50)
  4: _2 = &(*_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:43-569:50)
  5: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:49-569:50)
  6: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:569:49-569:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:569:49-569:50)
      kind: goto -> bb25
  }
  preds [bb9]
  succs [bb25]

bb22
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:29-570:34)
  1: _18 = &(((*_1) as Repetition).0: std::boxed::Box<ast::Repetition>)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:29-570:34)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:39-570:46)
  3: _19 = &((*(*_18)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:39-570:46)
  4: _2 = &(*_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:39-570:46)
  5: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:45-570:46)
  6: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:570:45-570:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:570:45-570:46)
      kind: goto -> bb25
  }
  preds [bb10]
  succs [bb25]

bb23
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:24-571:29)
  1: _20 = &(((*_1) as Group).0: std::boxed::Box<ast::Group>)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:24-571:29)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:34-571:41)
  3: _21 = &((*(*_20)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:34-571:41)
  4: _2 = &(*_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:34-571:41)
  5: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:40-571:41)
  6: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:571:40-571:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:571:40-571:41)
      kind: goto -> bb25
  }
  preds [bb11]
  succs [bb25]

bb24
  0: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:30-572:35)
  1: _22 = &(((*_1) as Alternation).0: std::boxed::Box<ast::Alternation>)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:30-572:35)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:40-572:47)
  3: _23 = &((*(*_22)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:40-572:47)
  4: _2 = &(*_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:40-572:47)
  5: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:46-572:47)
  6: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:572:46-572:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:572:46-572:47)
      kind: goto -> bb25
  }
  preds [bb12]
  succs [bb25]

bb25
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:561:9-574:10)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:575:5-575:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:575:6-575:6)
      kind: return
  }
  preds [bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24]
  succs []

