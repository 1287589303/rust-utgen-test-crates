bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:13-453:22)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:52)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:38)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:29)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:38)
      kind: _5 = ast::parse::ParserI::<'_, P>::parser(move _6) -> [return: bb1, unwind: bb22]
  }
  preds []
  succs [bb1, bb22]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:37-453:38)
  1: _4 = &((*_5).10: core::cell::RefCell<std::vec::Vec<ast::CaptureName>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:453:25-453:65)
      kind: _3 = core::cell::RefCell::<std::vec::Vec<ast::CaptureName>>::borrow_mut(move _4) -> [return: bb2, unwind: bb22]
  }
  preds [bb0]
  succs [bb2, bb22]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:64-453:65)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:13-453:22)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:453:65-453:66)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  8: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  9: _12 = &_3
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
      kind: _11 = <core::cell::RefMut<'_, std::vec::Vec<ast::CaptureName>> as core::ops::Deref>::deref(move _12) -> [return: bb3, unwind: bb21]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: _10 = &(*_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
      kind: _9 = <std::vec::Vec<ast::CaptureName> as core::ops::Deref>::deref(move _10) -> [return: bb4, unwind: bb21]
  }
  preds [bb2]
  succs [bb4, bb21]

bb4
  0: _8 = &(*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-454:20)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:19-454:20)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:19-454:20)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:35-455:53)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:35-455:53)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:36-455:53)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:36-455:44)
  7: _16 = &((*_2).1: std::string::String)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:36-455:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:455:36-455:53)
      kind: _15 = std::string::String::as_str(move _16) -> [return: bb5, unwind: bb21]
  }
  preds [bb3]
  succs [bb5, bb21]

bb5
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:52-455:53)
  1: _14 = &_15
    SourceInfo(regex-syntax/src/ast/parse.rs:455:35-455:53)
  2: _13 = &(*_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:35-455:53)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:55-455:74)
  4: _17 = {closure@regex-syntax/src/ast/parse.rs:455:55: 455:58}
    SourceInfo(regex-syntax/src/ast/parse.rs:455:55-455:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
      kind: _7 = core::slice::<impl [ast::CaptureName]>::binary_search_by_key::<'_, &str, {closure@regex-syntax/src/ast/parse.rs:455:55: 455:58}>(move _8, move _13, move _17) -> [return: bb6, unwind: bb21]
  }
  preds [bb4]
  succs [bb6, bb21]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:74-455:75)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:74-455:75)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:455:74-455:75)
  3: PlaceMention(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  4: _18 = discriminant(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:454:9-455:75)
      kind: switchInt(move _18) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:454:15-455:75)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:457:13-457:19)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:16-461:17)
  1: _28 = ((_7 as Ok).0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:16-461:17)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:26-464:14)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:26-461:30)
  4: _30 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:26-461:30)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:462:17-462:25)
  6: _31 = ((*_2).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:462:17-462:25)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:17-463:79)
  8: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:77)
  9: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:69-463:72)
  10: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
  11: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
  12: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
  13: _37 = &_3
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
      kind: _36 = <core::cell::RefMut<'_, std::vec::Vec<ast::CaptureName>> as core::ops::Deref>::deref(move _37) -> [return: bb14, unwind: bb21]
  }
  preds [bb6, bb8]
  succs [bb14, bb21]

bb10
  0: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:457:17-457:18)
  1: _19 = ((_7 as Err).0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:457:17-457:18)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:45)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:22)
  4: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:45)
  5: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:22)
  6: _23 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:45)
      kind: _22 = <core::cell::RefMut<'_, std::vec::Vec<ast::CaptureName>> as core::ops::DerefMut>::deref_mut(move _23) -> [return: bb11, unwind: bb21]
  }
  preds [bb8]
  succs [bb11, bb21]

bb11
  0: _21 = &mut (*_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:22)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:21-458:22)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:30-458:31)
  3: _24 = _19
    SourceInfo(regex-syntax/src/ast/parse.rs:458:30-458:31)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:33-458:44)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:33-458:36)
  6: _26 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:33-458:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:458:33-458:44)
      kind: _25 = <ast::CaptureName as core::clone::Clone>::clone(move _26) -> [return: bb12, unwind: bb21]
  }
  preds [bb10]
  succs [bb12, bb21]

bb12
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:43-458:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:458:17-458:45)
      kind: _20 = std::vec::Vec::<ast::CaptureName>::insert(move _21, move _24, move _25) -> [return: bb13, unwind: bb20]
  }
  preds [bb11]
  succs [bb13, bb20]

bb13
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:44-458:45)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:44-458:45)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:44-458:45)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:45-458:46)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:458:45-458:46)
  5: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:459:20-459:22)
  6: _27 = ()
    SourceInfo(regex-syntax/src/ast/parse.rs:459:20-459:22)
  7: _0 = core::result::Result::<(), ast::Error>::Ok(move _27)
    SourceInfo(regex-syntax/src/ast/parse.rs:459:17-459:23)
  8: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:459:22-459:23)
  9: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:460:13-460:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:460:13-460:14)
      kind: goto -> bb18
  }
  preds [bb12]
  succs [bb18]

bb14
  0: _35 = &(*_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:69)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:68-463:69)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:70-463:71)
  3: _38 = _28
    SourceInfo(regex-syntax/src/ast/parse.rs:463:70-463:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:463:69-463:72)
      kind: _34 = <std::vec::Vec<ast::CaptureName> as core::ops::Index<usize>>::index(move _35, move _38) -> [return: bb15, unwind: bb21]
  }
  preds [bb9]
  succs [bb15, bb21]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:71-463:72)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:71-463:72)
  2: _33 = ((*_34).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:64-463:77)
  3: _32 = ast::ErrorKind::GroupNameDuplicate { original: move _33 }
    SourceInfo(regex-syntax/src/ast/parse.rs:463:17-463:79)
  4: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:463:78-463:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:461:26-464:14)
      kind: _29 = ast::parse::ParserI::<'_, P>::error(move _30, move _31, move _32) -> [return: bb16, unwind: bb21]
  }
  preds [bb14]
  succs [bb16, bb21]

bb16
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:13-464:14)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:13-464:14)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:13-464:14)
  3: _0 = core::result::Result::<(), ast::Error>::Err(move _29)
    SourceInfo(regex-syntax/src/ast/parse.rs:461:22-464:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
      kind: drop(_29) -> [return: bb17, unwind: bb21]
  }
  preds [bb15]
  succs [bb17, bb21]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
  3: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:464:14-464:15)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
      kind: drop(_3) -> [return: bb19, unwind: bb22]
  }
  preds [bb13, bb17]
  succs [bb19, bb22]

bb19
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:466:6-466:6)
      kind: return
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:458:44-458:45)
      kind: drop(_25) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:466:5-466:6)
      kind: drop(_3) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb9, bb10, bb11, bb14, bb15, bb16, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:452:5-466:6)
      kind: resume
  }
  preds [bb0, bb1, bb18, bb21]
  succs []

