bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:9-1434:50)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:9-1434:17)
  2: _4 = &mut ((*_1).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:9-1434:17)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:39-1434:49)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:39-1434:49)
  5: _6 = &((*_2).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:39-1434:49)
  6: _5 = &(*_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:39-1434:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1434:9-1434:50)
      kind: _3 = hir::interval::IntervalSet::<hir::ClassBytesRange>::symmetric_difference(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:49-1434:50)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:49-1434:50)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:50-1434:51)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1434:50-1434:51)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1433:64-1435:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1435:6-1435:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1433:5-1435:6)
      kind: resume
  }
  preds [bb0]
  succs []

