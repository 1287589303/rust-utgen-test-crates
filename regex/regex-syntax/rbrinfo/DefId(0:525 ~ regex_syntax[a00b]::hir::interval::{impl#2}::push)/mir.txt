bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:9-86:35)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:9-86:20)
  2: _4 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:9-86:20)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:26-86:34)
  4: _5 = _2
    SourceInfo(regex-syntax/src/hir/interval.rs:86:26-86:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:86:9-86:35)
      kind: _3 = std::vec::Vec::<I>::push(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:34-86:35)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:34-86:35)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:86:35-86:36)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:87:9-87:28)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:87:9-87:13)
  5: _7 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:87:9-87:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:87:9-87:28)
      kind: _6 = hir::interval::IntervalSet::<I>::canonicalize(move _7) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:87:27-87:28)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:87:28-87:29)
  2: ((*_1).1: bool) = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:91:9-91:28)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:83:41-92:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:92:6-92:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:83:5-92:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

