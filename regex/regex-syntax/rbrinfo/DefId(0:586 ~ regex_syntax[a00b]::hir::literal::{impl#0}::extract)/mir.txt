bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:174:16-174:26)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:174:16-174:19)
  2: _4 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:174:16-174:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:174:16-174:26)
      kind: _3 = hir::Hir::kind(move _4) -> [return: bb1, unwind: bb52]
  }
  preds []
  succs [bb1, bb52]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:174:25-174:26)
  1: PlaceMention((*_3))
    SourceInfo(regex-syntax/src/hir/literal.rs:174:15-174:26)
  2: _6 = discriminant((*_3))
    SourceInfo(regex-syntax/src/hir/literal.rs:174:15-174:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:174:9-174:26)
      kind: switchInt(move _6) -> [0: bb11, 1: bb3, 2: bb4, 3: bb11, 4: bb7, 5: bb8, 6: bb9, 7: bb10, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb7, bb8, bb9, bb10, bb11, bb11]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_3))
    SourceInfo(regex-syntax/src/hir/literal.rs:174:15-174:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:174:15-174:26)
      kind: unreachable
  }
  preds [bb1, bb4]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:176:13-176:45)
      kind: falseEdge -> [real: bb16, imaginary: bb4]
  }
  preds [bb1, bb11]
  succs [bb4, bb16]

bb4
  0: _5 = discriminant((((*_3) as Class).0: hir::Class))
    SourceInfo(regex-syntax/src/hir/literal.rs:174:15-174:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:174:9-174:26)
      kind: switchInt(move _5) -> [0: bb5, 1: bb6, otherwise: bb2]
  }
  preds [bb1, bb3]
  succs [bb2, bb5, bb6]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:182:13-182:48)
      kind: falseEdge -> [real: bb22, imaginary: bb6]
  }
  preds [bb4]
  succs [bb6, bb22]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:185:13-185:46)
      kind: falseEdge -> [real: bb24, imaginary: bb7]
  }
  preds [bb4, bb5]
  succs [bb7, bb24]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:186:13-186:32)
      kind: falseEdge -> [real: bb26, imaginary: bb8]
  }
  preds [bb1, bb6]
  succs [bb8, bb26]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:187:13-187:50)
      kind: falseEdge -> [real: bb28, imaginary: bb9]
  }
  preds [bb1, bb7]
  succs [bb9, bb28]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:188:13-188:29)
      kind: falseEdge -> [real: bb30, imaginary: bb10]
  }
  preds [bb1, bb8]
  succs [bb10, bb30]

bb10
  0: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:192:25-192:33)
  1: _43 = &(((*_3) as Alternation).0: std::vec::Vec<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/literal.rs:192:25-192:33)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:17-196:21)
  3: _44 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:17-196:21)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:53)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:46)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:53)
  7: StorageLive(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:46)
  8: _48 = &(*_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:53)
      kind: _47 = <std::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _48) -> [return: bb43, unwind: bb52]
  }
  preds [bb1, bb9]
  succs [bb43, bb52]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:13-175:28)
      kind: falseEdge -> [real: bb12, imaginary: bb3]
  }
  preds [bb1, bb1]
  succs [bb3, bb12]

bb12
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:175:47-175:75)
  1: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _8 = std::vec::Vec::<u8>::new() -> [return: bb13, unwind: bb52]
  }
  preds [bb11]
  succs [bb13, bb52]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:47-175:75)
      kind: _7 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _8) -> [return: bb14, unwind: bb51]
  }
  preds [bb12]
  succs [bb14, bb51]

bb14
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:175:74-175:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:32-175:76)
      kind: _0 = hir::literal::Seq::singleton(move _7) -> [return: bb15, unwind: bb50]
  }
  preds [bb13]
  succs [bb15, bb50]

bb15
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:175:75-175:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:75-175:76)
      kind: goto -> bb46
  }
  preds [bb14]
  succs [bb46]

bb16
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:176:34-176:43)
  1: _9 = &((((*_3) as Literal).0: hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-syntax/src/hir/literal.rs:176:34-176:43)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:177:21-177:28)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:36-178:72)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:57-178:71)
  5: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:57-178:62)
  6: _13 = &(*(*_9))
    SourceInfo(regex-syntax/src/hir/literal.rs:178:57-178:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:178:57-178:71)
      kind: _12 = std::slice::<impl [u8]>::to_vec(move _13) -> [return: bb17, unwind: bb52]
  }
  preds [bb3]
  succs [bb17, bb52]

bb17
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:70-178:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:178:36-178:72)
      kind: _11 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _12) -> [return: bb18, unwind: bb49]
  }
  preds [bb16]
  succs [bb18, bb49]

bb18
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:71-178:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:178:21-178:73)
      kind: _10 = hir::literal::Seq::singleton(move _11) -> [return: bb19, unwind: bb48]
  }
  preds [bb17]
  succs [bb19, bb48]

bb19
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:178:72-178:73)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-syntax/src/hir/literal.rs:177:21-177:28)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:17-179:51)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:17-179:21)
  4: _15 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:17-179:21)
  5: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:42-179:50)
  6: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:42-179:50)
  7: _17 = &mut _10
    SourceInfo(regex-syntax/src/hir/literal.rs:179:42-179:50)
  8: _16 = &mut (*_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:42-179:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:179:17-179:51)
      kind: _14 = hir::literal::Extractor::enforce_literal_len(move _15, move _16) -> [return: bb20, unwind: bb47]
  }
  preds [bb18]
  succs [bb20, bb47]

bb20
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:50-179:51)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:50-179:51)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:51-179:52)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:179:51-179:52)
  4: _0 = move _10
    SourceInfo(regex-syntax/src/hir/literal.rs:180:17-180:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:181:13-181:14)
      kind: drop(_10) -> [return: bb21, unwind: bb52]
  }
  preds [bb19]
  succs [bb21, bb52]

bb21
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:181:13-181:14)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:181:13-181:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:181:13-181:14)
      kind: goto -> bb46
  }
  preds [bb20]
  succs [bb46]

bb22
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:182:39-182:46)
  1: _18 = &(((((*_3) as Class).0: hir::Class) as Unicode).0: hir::ClassUnicode)
    SourceInfo(regex-syntax/src/hir/literal.rs:182:39-182:46)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:17-183:21)
  3: _19 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:17-183:21)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:44-183:47)
  5: _20 = &(*_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:44-183:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:183:17-183:48)
      kind: _0 = hir::literal::Extractor::extract_class_unicode(move _19, move _20) -> [return: bb23, unwind: bb52]
  }
  preds [bb5]
  succs [bb23, bb52]

bb23
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:47-183:48)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:183:47-183:48)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:184:13-184:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:184:13-184:14)
      kind: goto -> bb46
  }
  preds [bb22]
  succs [bb46]

bb24
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:37-185:44)
  1: _21 = &(((((*_3) as Class).0: hir::Class) as Bytes).0: hir::ClassBytes)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:37-185:44)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:50-185:54)
  3: _22 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:50-185:54)
  4: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:75-185:78)
  5: _23 = &(*_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:75-185:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:185:50-185:79)
      kind: _0 = hir::literal::Extractor::extract_class_bytes(move _22, move _23) -> [return: bb25, unwind: bb52]
  }
  preds [bb6]
  succs [bb25, bb52]

bb25
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:78-185:79)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:78-185:79)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:185:78-185:79)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:185:78-185:79)
      kind: goto -> bb46
  }
  preds [bb24]
  succs [bb46]

bb26
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:24-186:31)
  1: _24 = &(((*_3) as Repetition).0: hir::Repetition)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:24-186:31)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:36-186:40)
  3: _25 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:36-186:40)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:60-186:63)
  5: _26 = &(*_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:60-186:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:186:36-186:64)
      kind: _0 = hir::literal::Extractor::extract_repetition(move _25, move _26) -> [return: bb27, unwind: bb52]
  }
  preds [bb7]
  succs [bb27, bb52]

bb27
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:63-186:64)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:63-186:64)
  2: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:186:63-186:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:186:63-186:64)
      kind: goto -> bb46
  }
  preds [bb26]
  succs [bb46]

bb28
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:36-187:43)
  1: _27 = &((((*_3) as Capture).0: hir::Capture).2: std::boxed::Box<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:36-187:43)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:54-187:58)
  3: _28 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:54-187:58)
  4: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:67-187:70)
  5: _29 = &(*(*_27))
    SourceInfo(regex-syntax/src/hir/literal.rs:187:67-187:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:187:54-187:71)
      kind: _0 = hir::literal::Extractor::extract(move _28, move _29) -> [return: bb29, unwind: bb52]
  }
  preds [bb8]
  succs [bb29, bb52]

bb29
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:70-187:71)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:70-187:71)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:187:70-187:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:187:70-187:71)
      kind: goto -> bb46
  }
  preds [bb28]
  succs [bb46]

bb30
  0: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:188:20-188:28)
  1: _30 = &(((*_3) as Concat).0: std::vec::Vec<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/literal.rs:188:20-188:28)
  2: PlaceMention(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:188:39-188:48)
  3: _31 = discriminant(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:188:39-188:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:188:33-188:48)
      kind: switchInt(move _31) -> [0: bb32, 1: bb33, otherwise: bb31]
  }
  preds [bb9]
  succs [bb31, bb32, bb33]

bb31
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:188:39-188:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:188:39-188:48)
      kind: unreachable
  }
  preds [bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:189:17-189:36)
      kind: falseEdge -> [real: bb34, imaginary: bb33]
  }
  preds [bb30]
  succs [bb33, bb34]

bb33
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:40-190:44)
  1: _37 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:40-190:44)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:77)
  3: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:71)
  4: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:64)
  5: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:71)
  6: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:64)
  7: _42 = &(*_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:71)
      kind: _41 = <std::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _42) -> [return: bb38, unwind: bb52]
  }
  preds [bb30, bb32]
  succs [bb38, bb52]

bb34
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:40-189:44)
  1: _32 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:40-189:44)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:71)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:64)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:71)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:64)
  6: _36 = &(*_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:71)
      kind: _35 = <std::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _36) -> [return: bb35, unwind: bb52]
  }
  preds [bb32]
  succs [bb35, bb52]

bb35
  0: _34 = &(*_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:64)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:63-189:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:189:60-189:71)
      kind: _33 = core::slice::<impl [hir::Hir]>::iter(move _34) -> [return: bb36, unwind: bb52]
  }
  preds [bb34]
  succs [bb36, bb52]

bb36
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:70-189:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:189:40-189:72)
      kind: _0 = hir::literal::Extractor::extract_concat::<'_, core::slice::Iter<'_, hir::Hir>>(move _32, move _33) -> [return: bb37, unwind: bb52]
  }
  preds [bb35]
  succs [bb37, bb52]

bb37
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:71-189:72)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:71-189:72)
  2: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:189:71-189:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:189:71-189:72)
      kind: goto -> bb42
  }
  preds [bb36]
  succs [bb42]

bb38
  0: _40 = &(*_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:64)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:63-190:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:71)
      kind: _39 = core::slice::<impl [hir::Hir]>::iter(move _40) -> [return: bb39, unwind: bb52]
  }
  preds [bb33]
  succs [bb39, bb52]

bb39
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:70-190:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:190:60-190:77)
      kind: _38 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::rev(move _39) -> [return: bb40, unwind: bb52]
  }
  preds [bb38]
  succs [bb40, bb52]

bb40
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:76-190:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:190:40-190:78)
      kind: _0 = hir::literal::Extractor::extract_concat::<'_, core::iter::Rev<core::slice::Iter<'_, hir::Hir>>>(move _37, move _38) -> [return: bb41, unwind: bb52]
  }
  preds [bb39]
  succs [bb41, bb52]

bb41
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:77-190:78)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:77-190:78)
  2: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:190:77-190:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:190:77-190:78)
      kind: goto -> bb42
  }
  preds [bb40]
  succs [bb42]

bb42
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:191:13-191:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:191:13-191:14)
      kind: goto -> bb46
  }
  preds [bb37, bb41]
  succs [bb46]

bb43
  0: _46 = &(*_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:46)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:45-196:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:196:42-196:53)
      kind: _45 = core::slice::<impl [hir::Hir]>::iter(move _46) -> [return: bb44, unwind: bb52]
  }
  preds [bb10]
  succs [bb44, bb52]

bb44
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:52-196:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:196:17-196:54)
      kind: _0 = hir::literal::Extractor::extract_alternation::<'_, core::slice::Iter<'_, hir::Hir>>(move _44, move _45) -> [return: bb45, unwind: bb52]
  }
  preds [bb43]
  succs [bb45, bb52]

bb45
  0: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:53-196:54)
  1: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/literal.rs:196:53-196:54)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/hir/literal.rs:197:13-197:14)
  3: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:197:13-197:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:197:13-197:14)
      kind: goto -> bb46
  }
  preds [bb44]
  succs [bb46]

bb46
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:199:5-199:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:199:6-199:6)
      kind: return
  }
  preds [bb15, bb21, bb23, bb25, bb27, bb29, bb42, bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:181:13-181:14)
      kind: drop(_10) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb52]

bb48
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:178:72-178:73)
      kind: drop(_11) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb52]

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:178:71-178:72)
      kind: drop(_12) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb52]

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:75-175:76)
      kind: drop(_7) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb52]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:175:74-175:75)
      kind: drop(_8) -> [return: bb52, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:171:5-199:6)
      kind: resume
  }
  preds [bb0, bb10, bb12, bb16, bb20, bb22, bb24, bb26, bb28, bb33, bb34, bb35, bb36, bb38, bb39, bb40, bb43, bb44, bb47, bb48, bb49, bb50, bb51]
  succs []

