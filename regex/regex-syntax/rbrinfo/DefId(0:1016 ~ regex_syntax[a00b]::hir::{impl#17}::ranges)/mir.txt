bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1389:9-1389:29)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1389:9-1389:17)
  2: _3 = &((*_1).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1389:9-1389:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1389:9-1389:29)
      kind: _2 = hir::interval::IntervalSet::<hir::ClassBytesRange>::intervals(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1389:9-1389:29)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1389:28-1389:29)
  2: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:1390:5-1390:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1390:6-1390:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1388:5-1390:6)
      kind: resume
  }
  preds [bb0]
  succs []

