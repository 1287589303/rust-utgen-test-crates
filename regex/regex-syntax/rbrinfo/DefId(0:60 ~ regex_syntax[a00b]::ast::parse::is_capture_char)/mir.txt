bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:112:8-112:13)
  1: _3 = _2
    SourceInfo(regex-syntax/src/ast/parse.rs:112:8-112:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:112:8-112:13)
      kind: switchInt(move _3) -> [0: bb6, otherwise: bb1]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:17)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:10)
  2: _5 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:10)
  3: _4 = Eq(move _5, const '_')
    SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:17)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:16-113:17)
  1: _0 = const true
    SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:38)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:16-113:17)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:21-113:22)
  2: _6 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:113:21-113:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:113:21-113:38)
      kind: _0 = core::char::methods::<impl char>::is_alphabetic(move _6) -> [return: bb4, unwind: bb19]
  }
  preds [bb1]
  succs [bb4, bb19]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:37-113:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:113:9-113:38)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:113:37-113:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:112:5-116:6)
      kind: goto -> bb18
  }
  preds [bb2, bb4]
  succs [bb18]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:17)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:10)
  2: _8 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:10)
  3: _7 = Eq(move _8, const '_')
    SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:17)
      kind: switchInt(move _7) -> [0: bb8, otherwise: bb7]
  }
  preds [bb0]
  succs [bb7, bb8]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:16-115:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb14
  }
  preds [bb6]
  succs [bb14]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:16-115:17)
  1: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:21-115:29)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:21-115:22)
  3: _10 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:115:21-115:22)
  4: _9 = Eq(move _10, const '.')
    SourceInfo(regex-syntax/src/ast/parse.rs:115:21-115:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:21-115:29)
      kind: switchInt(move _9) -> [0: bb10, otherwise: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:28-115:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb14
  }
  preds [bb8]
  succs [bb14]

bb10
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:28-115:29)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:33-115:41)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:33-115:34)
  3: _12 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:115:33-115:34)
  4: _11 = Eq(move _12, const '[')
    SourceInfo(regex-syntax/src/ast/parse.rs:115:33-115:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:33-115:41)
      kind: switchInt(move _11) -> [0: bb12, otherwise: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:40-115:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb14
  }
  preds [bb10]
  succs [bb14]

bb12
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:40-115:41)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:45-115:53)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:45-115:46)
  3: _14 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:115:45-115:46)
  4: _13 = Eq(move _14, const ']')
    SourceInfo(regex-syntax/src/ast/parse.rs:115:45-115:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:45-115:53)
      kind: switchInt(move _13) -> [0: bb15, otherwise: bb13]
  }
  preds [bb10]
  succs [bb13, bb15]

bb13
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:52-115:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  0: _0 = const true
    SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb17
  }
  preds [bb7, bb9, bb11, bb13]
  succs [bb17]

bb15
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:52-115:53)
  1: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:57-115:58)
  2: _15 = _1
    SourceInfo(regex-syntax/src/ast/parse.rs:115:57-115:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:57-115:76)
      kind: _0 = core::char::methods::<impl char>::is_alphanumeric(move _15) -> [return: bb16, unwind: bb19]
  }
  preds [bb12]
  succs [bb16, bb19]

bb16
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:75-115:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:115:9-115:76)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:75-115:76)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:75-115:76)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:75-115:76)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:115:75-115:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:112:5-116:6)
      kind: goto -> bb18
  }
  preds [bb14, bb16]
  succs [bb18]

bb18
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:116:5-116:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:117:2-117:2)
      kind: return
  }
  preds [bb5, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:111:1-117:2)
      kind: resume
  }
  preds [bb3, bb15]
  succs []

