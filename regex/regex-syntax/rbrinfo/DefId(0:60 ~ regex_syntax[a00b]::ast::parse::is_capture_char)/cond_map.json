{
  "regex-syntax/src/ast/parse.rs:115:57:115:76": [
    {
      "Bool": {
        "Other": "c.is_alphanumeric()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:113:21:113:38": [
    {
      "Bool": {
        "Other": "c.is_alphabetic()"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:112:8:112:13": [
    {
      "Bool": {
        "Other": "first"
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:115:21:115:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '.'",
          "lhs": "c",
          "rhs": "'.'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:115:9:115:17": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '_'",
          "lhs": "c",
          "rhs": "'_'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:115:45:115:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == ']'",
          "lhs": "c",
          "rhs": "']'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:113:9:113:17": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '_'",
          "lhs": "c",
          "rhs": "'_'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-syntax/src/ast/parse.rs:115:33:115:41": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "c == '['",
          "lhs": "c",
          "rhs": "'['",
          "cmp_with_int": true
        }
      }
    }
  ]
}