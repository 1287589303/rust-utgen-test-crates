bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1193:9-1202:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1193:15-1193:20)
  2: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1193:15-1193:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1193:9-1193:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb7, 5: bb6, 6: bb8, 7: bb9, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1193:15-1193:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1193:15-1193:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1194:13-1194:42)
      kind: falseEdge -> [real: bb10, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb10]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1195:13-1195:41)
      kind: falseEdge -> [real: bb11, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb11]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1196:13-1196:39)
      kind: falseEdge -> [real: bb12, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb12]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1197:13-1197:39)
      kind: falseEdge -> [real: bb13, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb13]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1198:13-1198:38)
      kind: falseEdge -> [real: bb14, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb14]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1199:13-1199:41)
      kind: falseEdge -> [real: bb15, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb15]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1200:13-1200:43)
      kind: falseEdge -> [real: bb16, imaginary: bb9]
  }
  preds [bb0, bb7]
  succs [bb9, bb16]

bb9
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:33-1201:38)
  1: _17 = &(((*_1) as Union).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:33-1201:38)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:43-1201:50)
  3: _18 = &((*_17).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:43-1201:50)
  4: _2 = &(*_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:43-1201:50)
  5: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:49-1201:50)
  6: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1201:49-1201:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1201:49-1201:50)
      kind: goto -> bb17
  }
  preds [bb0, bb8]
  succs [bb17]

bb10
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1194:33-1194:41)
  1: _4 = &(((*_1) as Empty).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1194:33-1194:41)
  2: _2 = &(*_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1194:46-1194:50)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1194:49-1194:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1194:49-1194:50)
      kind: goto -> bb17
  }
  preds [bb2]
  succs [bb17]

bb11
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:35-1195:40)
  1: _5 = &(((*_1) as Literal).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:35-1195:40)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:45-1195:52)
  3: _6 = &((*_5).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:45-1195:52)
  4: _2 = &(*_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:45-1195:52)
  5: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:51-1195:52)
  6: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1195:51-1195:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1195:51-1195:52)
      kind: goto -> bb17
  }
  preds [bb3]
  succs [bb17]

bb12
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:33-1196:38)
  1: _7 = &(((*_1) as Range).0: ast::ClassSetRange)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:33-1196:38)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:43-1196:50)
  3: _8 = &((*_7).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:43-1196:50)
  4: _2 = &(*_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:43-1196:50)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:49-1196:50)
  6: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1196:49-1196:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1196:49-1196:50)
      kind: goto -> bb17
  }
  preds [bb4]
  succs [bb17]

bb13
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:33-1197:38)
  1: _9 = &(((*_1) as Ascii).0: ast::ClassAscii)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:33-1197:38)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:43-1197:50)
  3: _10 = &((*_9).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:43-1197:50)
  4: _2 = &(*_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:43-1197:50)
  5: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:49-1197:50)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1197:49-1197:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1197:49-1197:50)
      kind: goto -> bb17
  }
  preds [bb5]
  succs [bb17]

bb14
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:32-1198:37)
  1: _11 = &(((*_1) as Perl).0: ast::ClassPerl)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:32-1198:37)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:42-1198:49)
  3: _12 = &((*_11).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:42-1198:49)
  4: _2 = &(*_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:42-1198:49)
  5: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:48-1198:49)
  6: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1198:48-1198:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1198:48-1198:49)
      kind: goto -> bb17
  }
  preds [bb6]
  succs [bb17]

bb15
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:35-1199:40)
  1: _13 = &(((*_1) as Unicode).0: ast::ClassUnicode)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:35-1199:40)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:45-1199:52)
  3: _14 = &((*_13).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:45-1199:52)
  4: _2 = &(*_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:45-1199:52)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:51-1199:52)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1199:51-1199:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1199:51-1199:52)
      kind: goto -> bb17
  }
  preds [bb7]
  succs [bb17]

bb16
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:37-1200:42)
  1: _15 = &(((*_1) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:37-1200:42)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:47-1200:54)
  3: _16 = &((*(*_15)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:47-1200:54)
  4: _2 = &(*_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:47-1200:54)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:53-1200:54)
  6: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1200:53-1200:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1200:53-1200:54)
      kind: goto -> bb17
  }
  preds [bb8]
  succs [bb17]

bb17
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1193:9-1202:10)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1203:5-1203:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1203:6-1203:6)
      kind: return
  }
  preds [bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16]
  succs []

