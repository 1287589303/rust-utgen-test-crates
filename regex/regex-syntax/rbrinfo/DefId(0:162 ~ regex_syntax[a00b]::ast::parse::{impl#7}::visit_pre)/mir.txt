bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2317:13-2317:17)
  1: PlaceMention((*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2317:26-2317:30)
  2: _4 = discriminant((*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2317:26-2317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2317:20-2317:30)
      kind: switchInt(move _4) -> [0: bb7, 1: bb7, 2: bb7, 3: bb7, 4: bb7, 5: bb7, 6: bb7, 7: bb2, 8: bb3, 9: bb4, 10: bb5, 11: bb6, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb7, bb7, bb7, bb7, bb7, bb7]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_2))
    SourceInfo(regex-syntax/src/ast/parse.rs:2317:26-2317:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2317:26-2317:30)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2328:13-2328:39)
      kind: falseEdge -> [real: bb9, imaginary: bb3]
  }
  preds [bb0, bb7]
  succs [bb3, bb9]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2329:13-2329:35)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2330:13-2330:30)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2331:13-2331:36)
      kind: falseEdge -> [real: bb12, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb12]

bb6
  0: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:25-2332:30)
  1: _14 = &(((*_2) as Concat).0: std::boxed::Box<ast::Concat>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:25-2332:30)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:35-2332:42)
  3: _15 = &((*(*_14)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:35-2332:42)
  4: _3 = &(*_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:35-2332:42)
  5: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:41-2332:42)
  6: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2332:41-2332:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2332:41-2332:42)
      kind: goto -> bb13
  }
  preds [bb0, bb5]
  succs [bb13]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2318:13-2324:32)
      kind: falseEdge -> [real: bb8, imaginary: bb2]
  }
  preds [bb0, bb0, bb0, bb0, bb0, bb0, bb0]
  succs [bb2, bb8]

bb8
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2326:27-2326:29)
  1: _6 = ()
    SourceInfo(regex-syntax/src/ast/parse.rs:2326:27-2326:29)
  2: _0 = core::result::Result::<(), ast::Error>::Ok(move _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2326:24-2326:30)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2326:29-2326:30)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2335:5-2335:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2335:6-2335:6)
      kind: goto -> bb15
  }
  preds [bb7]
  succs [bb15]

bb9
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2328:33-2328:38)
  1: _7 = &(((*_2) as ClassBracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2328:33-2328:38)
  2: _3 = &((*(*_7)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2328:43-2328:50)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2328:49-2328:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2328:49-2328:50)
      kind: goto -> bb13
  }
  preds [bb2]
  succs [bb13]

bb10
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:29-2329:34)
  1: _8 = &(((*_2) as Repetition).0: std::boxed::Box<ast::Repetition>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:29-2329:34)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:39-2329:46)
  3: _9 = &((*(*_8)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:39-2329:46)
  4: _3 = &(*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:39-2329:46)
  5: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:45-2329:46)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2329:45-2329:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2329:45-2329:46)
      kind: goto -> bb13
  }
  preds [bb3]
  succs [bb13]

bb11
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:24-2330:29)
  1: _10 = &(((*_2) as Group).0: std::boxed::Box<ast::Group>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:24-2330:29)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:34-2330:41)
  3: _11 = &((*(*_10)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:34-2330:41)
  4: _3 = &(*_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:34-2330:41)
  5: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:40-2330:41)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2330:40-2330:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2330:40-2330:41)
      kind: goto -> bb13
  }
  preds [bb4]
  succs [bb13]

bb12
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:30-2331:35)
  1: _12 = &(((*_2) as Alternation).0: std::boxed::Box<ast::Alternation>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:30-2331:35)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:40-2331:47)
  3: _13 = &((*(*_12)).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:40-2331:47)
  4: _3 = &(*_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:40-2331:47)
  5: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:46-2331:47)
  6: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2331:46-2331:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2331:46-2331:47)
      kind: goto -> bb13
  }
  preds [bb5]
  succs [bb13]

bb13
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2317:13-2317:17)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:9-2334:13)
  2: _16 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:9-2334:13)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:30-2334:34)
  4: _17 = &(*_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:30-2334:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2334:9-2334:35)
      kind: _0 = ast::parse::NestLimiter::<'_, '_, P>::increment_depth(move _16, move _17) -> [return: bb14, unwind: bb16]
  }
  preds [bb6, bb9, bb10, bb11, bb12]
  succs [bb14, bb16]

bb14
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:34-2334:35)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2334:34-2334:35)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2335:5-2335:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2335:6-2335:6)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2335:6-2335:6)
      kind: return
  }
  preds [bb8, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2316:5-2335:6)
      kind: resume
  }
  preds [bb13]
  succs []

