bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/unicode.rs:143:9-159:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/unicode.rs:125:9-133:10)
  2: PlaceMention(((*_1).1: core::option::Option<char>))
    SourceInfo(regex-syntax/src/unicode.rs:125:29-125:38)
  3: _5 = discriminant(((*_1).1: core::option::Option<char>))
    SourceInfo(regex-syntax/src/unicode.rs:125:29-125:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:125:16-125:26)
      kind: switchInt(move _5) -> [1: bb1, otherwise: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:125:16-125:26)
      kind: falseEdge -> [real: bb2, imaginary: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/unicode.rs:125:21-125:25)
  1: _6 = ((((*_1).1: core::option::Option<char>) as Some).0: char)
    SourceInfo(regex-syntax/src/unicode.rs:125:21-125:25)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/unicode.rs:126:13-132:14)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/unicode.rs:127:17-127:25)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/unicode.rs:127:17-127:21)
  5: _9 = _6
    SourceInfo(regex-syntax/src/unicode.rs:127:17-127:21)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  7: _10 = _2
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  8: _8 = Lt(move _9, move _10)
    SourceInfo(regex-syntax/src/unicode.rs:127:17-127:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:127:17-127:25)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  2: _7 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:132:14-132:14)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/unicode.rs:132:13-132:14)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/unicode.rs:132:13-132:14)
  5: _4 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:125:39-133:10)
  6: StorageDead(_6)
    SourceInfo(regex-syntax/src/unicode.rs:133:9-133:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:125:9-133:10)
      kind: goto -> bb11
  }
  preds [bb2]
  succs [bb11]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/unicode.rs:127:24-127:25)
  2: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  7: _16 = [const "got codepoint U+", const " which occurs before last codepoint U+"]
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  8: _15 = &_16
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  9: _14 = &(*_15)
    SourceInfo(regex-syntax/src/unicode.rs:128:17-129:40)
  10: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_20)
    SourceInfo(regex-syntax/src/unicode.rs:128:34-128:38)
  14: StorageLive(_21)
    SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
  15: StorageLive(_22)
    SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
  16: StorageLive(_23)
    SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
  17: StorageLive(_24)
    SourceInfo(regex-syntax/src/unicode.rs:130:27-130:28)
  18: _24 = _2
    SourceInfo(regex-syntax/src/unicode.rs:130:27-130:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
      kind: _23 = <u32 as core::convert::From<char>>::from(move _24) -> [return: bb5, unwind: bb31]
  }
  preds [bb2]
  succs [bb5, bb31]

bb5
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/unicode.rs:130:28-130:29)
  1: _22 = &_23
    SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
  2: _21 = &(*_22)
    SourceInfo(regex-syntax/src/unicode.rs:130:17-130:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:128:34-128:38)
      kind: _20 = core::fmt::rt::Argument::<'_>::new_upper_hex::<u32>(move _21) -> [return: bb6, unwind: bb31]
  }
  preds [bb4]
  succs [bb6, bb31]

bb6
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/unicode.rs:128:37-128:38)
  1: StorageLive(_25)
    SourceInfo(regex-syntax/src/unicode.rs:129:35-129:39)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
  3: StorageLive(_27)
    SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
  4: StorageLive(_28)
    SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
  5: StorageLive(_29)
    SourceInfo(regex-syntax/src/unicode.rs:131:27-131:31)
  6: _29 = _6
    SourceInfo(regex-syntax/src/unicode.rs:131:27-131:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
      kind: _28 = <u32 as core::convert::From<char>>::from(move _29) -> [return: bb7, unwind: bb31]
  }
  preds [bb5]
  succs [bb7, bb31]

bb7
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/unicode.rs:131:31-131:32)
  1: _27 = &_28
    SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
  2: _26 = &(*_27)
    SourceInfo(regex-syntax/src/unicode.rs:131:17-131:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:129:35-129:39)
      kind: _25 = core::fmt::rt::Argument::<'_>::new_upper_hex::<u32>(move _26) -> [return: bb8, unwind: bb31]
  }
  preds [bb6]
  succs [bb8, bb31]

bb8
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/unicode.rs:129:38-129:39)
  1: _19 = [move _20, move _25]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: StorageDead(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  4: _18 = &_19
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  5: _17 = &(*_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _13 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _14, move _17) -> [return: bb9, unwind: bb31]
  }
  preds [bb7]
  succs [bb9, bb31]

bb9
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _12 = core::panicking::panic_fmt(move _13) -> bb31
  }
  preds [bb8]
  succs [bb31]

bb10
  0: _4 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:133:10-133:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:125:9-133:10)
      kind: goto -> bb11
  }
  preds [bb0, bb1]
  succs [bb11]

bb11
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/unicode.rs:133:9-133:10)
  1: StorageLive(_30)
    SourceInfo(regex-syntax/src/unicode.rs:134:21-134:28)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/unicode.rs:134:26-134:27)
  3: _31 = _2
    SourceInfo(regex-syntax/src/unicode.rs:134:26-134:27)
  4: _30 = core::option::Option::<char>::Some(move _31)
    SourceInfo(regex-syntax/src/unicode.rs:134:21-134:28)
  5: StorageDead(_31)
    SourceInfo(regex-syntax/src/unicode.rs:134:27-134:28)
  6: ((*_1).1: core::option::Option<char>) = move _30
    SourceInfo(regex-syntax/src/unicode.rs:134:9-134:28)
  7: StorageDead(_30)
    SourceInfo(regex-syntax/src/unicode.rs:134:27-134:28)
  8: StorageLive(_32)
    SourceInfo(regex-syntax/src/unicode.rs:135:9-137:10)
  9: StorageLive(_33)
    SourceInfo(regex-syntax/src/unicode.rs:135:12-135:41)
  10: StorageLive(_34)
    SourceInfo(regex-syntax/src/unicode.rs:135:12-135:21)
  11: _34 = ((*_1).2: usize)
    SourceInfo(regex-syntax/src/unicode.rs:135:12-135:21)
  12: StorageLive(_35)
    SourceInfo(regex-syntax/src/unicode.rs:135:25-135:41)
  13: StorageLive(_36)
    SourceInfo(regex-syntax/src/unicode.rs:135:25-135:35)
  14: _36 = &(*((*_1).0: &[(char, &[char])]))
    SourceInfo(regex-syntax/src/unicode.rs:135:25-135:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:135:25-135:41)
      kind: _35 = core::slice::<impl [(char, &[char])]>::len(move _36) -> [return: bb12, unwind: bb31]
  }
  preds [bb3, bb10]
  succs [bb12, bb31]

bb12
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/unicode.rs:135:40-135:41)
  1: _33 = Ge(move _34, move _35)
    SourceInfo(regex-syntax/src/unicode.rs:135:12-135:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:135:12-135:41)
      kind: switchInt(move _33) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/unicode.rs:135:40-135:41)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/unicode.rs:135:40-135:41)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/unicode.rs:136:20-136:23)
  3: StorageLive(_39)
    SourceInfo(regex-syntax/src/unicode.rs:136:20-136:23)
  4: StorageLive(_40)
    SourceInfo(regex-syntax/src/unicode.rs:136:21-136:23)
  5: _40 = []
    SourceInfo(regex-syntax/src/unicode.rs:136:21-136:23)
  6: _39 = &_40
    SourceInfo(regex-syntax/src/unicode.rs:136:20-136:23)
  7: _38 = &(*_39)
    SourceInfo(regex-syntax/src/unicode.rs:136:20-136:23)
  8: _0 = move _38 as &[char] (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/unicode.rs:136:20-136:23)
  9: StorageDead(_38)
    SourceInfo(regex-syntax/src/unicode.rs:136:22-136:23)
  10: StorageDead(_40)
    SourceInfo(regex-syntax/src/unicode.rs:136:23-136:24)
  11: StorageDead(_39)
    SourceInfo(regex-syntax/src/unicode.rs:136:23-136:24)
  12: StorageDead(_33)
    SourceInfo(regex-syntax/src/unicode.rs:137:9-137:10)
  13: StorageDead(_32)
    SourceInfo(regex-syntax/src/unicode.rs:137:9-137:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb12]
  succs [bb29]

bb14
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/unicode.rs:135:40-135:41)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/unicode.rs:135:40-135:41)
  2: _32 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:137:10-137:10)
  3: StorageDead(_33)
    SourceInfo(regex-syntax/src/unicode.rs:137:9-137:10)
  4: StorageDead(_32)
    SourceInfo(regex-syntax/src/unicode.rs:137:9-137:10)
  5: StorageLive(_43)
    SourceInfo(regex-syntax/src/unicode.rs:138:33-138:42)
  6: _43 = ((*_1).2: usize)
    SourceInfo(regex-syntax/src/unicode.rs:138:33-138:42)
  7: _44 = Len((*((*_1).0: &[(char, &[char])])))
    SourceInfo(regex-syntax/src/unicode.rs:138:22-138:43)
  8: _45 = Lt(_43, _44)
    SourceInfo(regex-syntax/src/unicode.rs:138:22-138:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:138:22-138:43)
      kind: assert(move _45, "index out of bounds: the length is {} but the index is {}", move _44, _43) -> [success: bb15, unwind: bb31]
  }
  preds [bb12]
  succs [bb15, bb31]

bb15
  0: PlaceMention((*((*_1).0: &[(char, &[char])]))[_43])
    SourceInfo(regex-syntax/src/unicode.rs:138:22-138:43)
  1: StorageLive(_41)
    SourceInfo(regex-syntax/src/unicode.rs:138:14-138:15)
  2: _41 = ((*((*_1).0: &[(char, &[char])]))[_43].0: char)
    SourceInfo(regex-syntax/src/unicode.rs:138:14-138:15)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/unicode.rs:138:17-138:18)
  4: _42 = ((*((*_1).0: &[(char, &[char])]))[_43].1: &[char])
    SourceInfo(regex-syntax/src/unicode.rs:138:17-138:18)
  5: StorageDead(_43)
    SourceInfo(regex-syntax/src/unicode.rs:138:43-138:44)
  6: StorageLive(_46)
    SourceInfo(regex-syntax/src/unicode.rs:139:9-142:10)
  7: StorageLive(_47)
    SourceInfo(regex-syntax/src/unicode.rs:139:12-139:18)
  8: StorageLive(_48)
    SourceInfo(regex-syntax/src/unicode.rs:139:12-139:13)
  9: _48 = _41
    SourceInfo(regex-syntax/src/unicode.rs:139:12-139:13)
  10: StorageLive(_49)
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  11: _49 = _2
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  12: _47 = Eq(move _48, move _49)
    SourceInfo(regex-syntax/src/unicode.rs:139:12-139:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:139:12-139:18)
      kind: switchInt(move _47) -> [0: bb18, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  2: _51 = AddWithOverflow(((*_1).2: usize), const 1_usize)
    SourceInfo(regex-syntax/src/unicode.rs:140:13-140:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:140:13-140:27)
      kind: assert(!move (_51.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).2: usize), const 1_usize) -> [success: bb17, unwind: bb31]
  }
  preds [bb15]
  succs [bb17, bb31]

bb17
  0: ((*_1).2: usize) = move (_51.0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:140:13-140:27)
  1: _0 = _42
    SourceInfo(regex-syntax/src/unicode.rs:141:20-141:21)
  2: StorageDead(_47)
    SourceInfo(regex-syntax/src/unicode.rs:142:9-142:10)
  3: StorageDead(_46)
    SourceInfo(regex-syntax/src/unicode.rs:142:9-142:10)
  4: StorageDead(_42)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb16]
  succs [bb29]

bb18
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/unicode.rs:139:17-139:18)
  2: _46 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:142:10-142:10)
  3: StorageDead(_47)
    SourceInfo(regex-syntax/src/unicode.rs:142:9-142:10)
  4: StorageDead(_46)
    SourceInfo(regex-syntax/src/unicode.rs:142:9-142:10)
  5: StorageLive(_52)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
  6: StorageLive(_53)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:19)
  7: _53 = &(*_1)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:19)
  8: StorageLive(_54)
    SourceInfo(regex-syntax/src/unicode.rs:143:24-143:25)
  9: _54 = _2
    SourceInfo(regex-syntax/src/unicode.rs:143:24-143:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
      kind: _52 = unicode::SimpleCaseFolder::get(move _53, move _54) -> [return: bb19, unwind: bb31]
  }
  preds [bb15]
  succs [bb19, bb31]

bb19
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/unicode.rs:143:25-143:26)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/unicode.rs:143:25-143:26)
  2: PlaceMention(_52)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
  3: _55 = discriminant(_52)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:143:9-143:26)
      kind: switchInt(move _55) -> [0: bb22, 1: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _52)
    SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:143:15-143:26)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:144:13-144:19)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_61)
    SourceInfo(regex-syntax/src/unicode.rs:148:16-148:17)
  1: _61 = ((_52 as Ok).0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:148:16-148:17)
  2: StorageLive(_62)
    SourceInfo(regex-syntax/src/unicode.rs:155:17-155:39)
  3: StorageLive(_63)
    SourceInfo(regex-syntax/src/unicode.rs:155:25-155:38)
  4: StorageLive(_64)
    SourceInfo(regex-syntax/src/unicode.rs:155:25-155:26)
  5: _64 = _61
    SourceInfo(regex-syntax/src/unicode.rs:155:25-155:26)
  6: StorageLive(_65)
    SourceInfo(regex-syntax/src/unicode.rs:155:29-155:38)
  7: _65 = ((*_1).2: usize)
    SourceInfo(regex-syntax/src/unicode.rs:155:29-155:38)
  8: _63 = Gt(move _64, move _65)
    SourceInfo(regex-syntax/src/unicode.rs:155:25-155:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:155:25-155:38)
      kind: switchInt(move _63) -> [0: bb25, otherwise: bb24]
  }
  preds [bb19, bb21]
  succs [bb24, bb25]

bb23
  0: StorageLive(_56)
    SourceInfo(regex-syntax/src/unicode.rs:144:17-144:18)
  1: _56 = ((_52 as Err).0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:144:17-144:18)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/unicode.rs:145:29-145:30)
  3: _57 = _56
    SourceInfo(regex-syntax/src/unicode.rs:145:29-145:30)
  4: ((*_1).2: usize) = move _57
    SourceInfo(regex-syntax/src/unicode.rs:145:17-145:30)
  5: StorageDead(_57)
    SourceInfo(regex-syntax/src/unicode.rs:145:29-145:30)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/unicode.rs:146:17-146:20)
  7: StorageLive(_59)
    SourceInfo(regex-syntax/src/unicode.rs:146:17-146:20)
  8: StorageLive(_60)
    SourceInfo(regex-syntax/src/unicode.rs:146:18-146:20)
  9: _60 = []
    SourceInfo(regex-syntax/src/unicode.rs:146:18-146:20)
  10: _59 = &_60
    SourceInfo(regex-syntax/src/unicode.rs:146:17-146:20)
  11: _58 = &(*_59)
    SourceInfo(regex-syntax/src/unicode.rs:146:17-146:20)
  12: _3 = move _58 as &[char] (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/unicode.rs:146:17-146:20)
  13: StorageDead(_58)
    SourceInfo(regex-syntax/src/unicode.rs:146:19-146:20)
  14: StorageDead(_60)
    SourceInfo(regex-syntax/src/unicode.rs:147:13-147:14)
  15: StorageDead(_59)
    SourceInfo(regex-syntax/src/unicode.rs:147:13-147:14)
  16: StorageDead(_56)
    SourceInfo(regex-syntax/src/unicode.rs:147:13-147:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:147:13-147:14)
      kind: goto -> bb28
  }
  preds [bb21]
  succs [bb28]

bb24
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/unicode.rs:155:37-155:38)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/unicode.rs:155:37-155:38)
  2: _62 = const ()
    SourceInfo(regex-syntax/src/unicode.rs:155:39-155:39)
  3: StorageDead(_63)
    SourceInfo(regex-syntax/src/unicode.rs:155:38-155:39)
  4: StorageDead(_62)
    SourceInfo(regex-syntax/src/unicode.rs:155:38-155:39)
  5: StorageLive(_67)
    SourceInfo(regex-syntax/src/unicode.rs:156:29-156:30)
  6: _67 = _61
    SourceInfo(regex-syntax/src/unicode.rs:156:29-156:30)
  7: _68 = AddWithOverflow(_67, const 1_usize)
    SourceInfo(regex-syntax/src/unicode.rs:156:29-156:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:156:29-156:34)
      kind: assert(!move (_68.1: bool), "attempt to compute `{} + {}`, which would overflow", move _67, const 1_usize) -> [success: bb26, unwind: bb31]
  }
  preds [bb22]
  succs [bb26, bb31]

bb25
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/unicode.rs:155:37-155:38)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/unicode.rs:155:37-155:38)
  2: StorageLive(_66)
    SourceInfo(regex-syntax/src/unicode.rs:155:17-155:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:155:17-155:39)
      kind: _66 = core::panicking::panic(const "assertion failed: i > self.next") -> bb31
  }
  preds [bb22]
  succs [bb31]

bb26
  0: ((*_1).2: usize) = move (_68.0: usize)
    SourceInfo(regex-syntax/src/unicode.rs:156:17-156:34)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/unicode.rs:156:33-156:34)
  2: StorageLive(_69)
    SourceInfo(regex-syntax/src/unicode.rs:157:28-157:29)
  3: _69 = _61
    SourceInfo(regex-syntax/src/unicode.rs:157:28-157:29)
  4: _70 = Len((*((*_1).0: &[(char, &[char])])))
    SourceInfo(regex-syntax/src/unicode.rs:157:17-157:30)
  5: _71 = Lt(_69, _70)
    SourceInfo(regex-syntax/src/unicode.rs:157:17-157:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:157:17-157:30)
      kind: assert(move _71, "index out of bounds: the length is {} but the index is {}", move _70, _69) -> [success: bb27, unwind: bb31]
  }
  preds [bb24]
  succs [bb27, bb31]

bb27
  0: _3 = ((*((*_1).0: &[(char, &[char])]))[_69].1: &[char])
    SourceInfo(regex-syntax/src/unicode.rs:157:17-157:32)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/unicode.rs:158:13-158:14)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/unicode.rs:158:13-158:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:158:13-158:14)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  2: _0 = &(*_3)
    SourceInfo(regex-syntax/src/unicode.rs:143:9-159:10)
  3: StorageDead(_52)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:160:6-160:6)
      kind: goto -> bb30
  }
  preds [bb23, bb27]
  succs [bb30]

bb29
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/unicode.rs:160:5-160:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:160:6-160:6)
      kind: goto -> bb30
  }
  preds [bb13, bb17]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:160:6-160:6)
      kind: return
  }
  preds [bb28, bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/unicode.rs:124:5-160:6)
      kind: resume
  }
  preds [bb4, bb5, bb6, bb7, bb8, bb9, bb11, bb14, bb16, bb18, bb24, bb25, bb26]
  succs []

