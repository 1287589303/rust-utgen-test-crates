bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:9-346:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:12-344:31)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:12-344:16)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:12-344:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:344:12-344:31)
      kind: _3 = hir::interval::IntervalSet::<I>::is_canonical(move _4) -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:344:12-344:31)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:30-344:31)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:345:13-345:19)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:346:9-346:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:346:9-346:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:368:6-368:6)
      kind: goto -> bb34
  }
  preds [bb1]
  succs [bb34]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:344:30-344:31)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:346:10-346:10)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:346:9-346:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:346:9-346:10)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:27)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:20)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:27)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:20)
  8: _9 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:27)
      kind: _8 = <std::vec::Vec<I> as core::ops::DerefMut>::deref_mut(move _9) -> [return: bb4, unwind: bb35]
  }
  preds [bb1]
  succs [bb4, bb35]

bb4
  0: _7 = &mut (*_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:20)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:19-347:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:347:9-347:27)
      kind: _6 = std::slice::<impl [I]>::sort(move _7) -> [return: bb5, unwind: bb35]
  }
  preds [bb3]
  succs [bb5, bb35]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:26-347:27)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:27-347:28)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:347:27-347:28)
  3: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:9-348:41)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:18-348:40)
  5: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:18-348:29)
  6: _12 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:18-348:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:348:18-348:40)
      kind: _11 = std::vec::Vec::<I>::is_empty(move _12) -> [return: bb6, unwind: bb35]
  }
  preds [bb4]
  succs [bb6, bb35]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:348:18-348:40)
      kind: switchInt(move _11) -> [0: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:39-348:40)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:9-348:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:348:9-348:41)
      kind: _13 = core::panicking::panic(const "assertion failed: !self.ranges.is_empty()") -> bb35
  }
  preds [bb6]
  succs [bb35]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:39-348:40)
  1: _10 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:348:41-348:41)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:40-348:41)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:348:40-348:41)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:353:13-353:22)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:353:25-353:36)
  6: _15 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:353:25-353:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:353:25-353:42)
      kind: _14 = std::vec::Vec::<I>::len(move _15) -> [return: bb9, unwind: bb35]
  }
  preds [bb6]
  succs [bb9, bb35]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:353:41-353:42)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(regex-syntax/src/hir/interval.rs:353:13-353:22)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  4: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  5: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:24-354:33)
  6: _19 = _14
    SourceInfo(regex-syntax/src/hir/interval.rs:354:24-354:33)
  7: _18 = core::ops::Range::<usize> { start: const 0_usize, end: move _19 }
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  8: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:32-354:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
      kind: _17 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _18) -> [return: bb10, unwind: bb35]
  }
  preds [bb8]
  succs [bb10, bb35]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:32-354:33)
  1: PlaceMention(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  2: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  3: _20 = move _17
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
      kind: falseUnwind -> [real: bb12, unwind: bb35]
  }
  preds [bb10, bb26, bb31]
  succs [bb12, bb35]

bb12
  0: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  1: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  4: _25 = &mut _20
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  5: _24 = &mut (*_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
      kind: _23 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _24) -> [return: bb13, unwind: bb35]
  }
  preds [bb11]
  succs [bb13, bb35]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:32-354:33)
  1: PlaceMention(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  2: _26 = discriminant(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
      kind: switchInt(move _26) -> [0: bb15, 1: bb16, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _23)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:21-354:33)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:13-354:17)
  1: _28 = ((_23 as Some).0: usize)
    SourceInfo(regex-syntax/src/hir/interval.rs:354:13-354:17)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:13-363:14)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:45)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:33)
  5: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:27)
  6: _32 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:33)
      kind: _31 = std::vec::Vec::<I>::len(move _32) -> [return: bb18, unwind: bb35]
  }
  preds [bb13, bb15]
  succs [bb18, bb35]

bb17
  0: _16 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  5: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  6: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  7: StorageLive(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:9-367:39)
  8: StorageLive(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:9-367:20)
  9: _60 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:9-367:20)
  10: StorageLive(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:27-367:38)
  11: StorageLive(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:29-367:38)
  12: _62 = _14
    SourceInfo(regex-syntax/src/hir/interval.rs:367:29-367:38)
  13: _61 = core::ops::RangeTo::<usize> { end: move _62 }
    SourceInfo(regex-syntax/src/hir/interval.rs:367:27-367:38)
  14: StorageDead(_62)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:37-367:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:367:9-367:39)
      kind: _59 = std::vec::Vec::<I>::drain::<core::ops::RangeTo<usize>>(move _60, move _61) -> [return: bb32, unwind: bb35]
  }
  preds [bb15]
  succs [bb32, bb35]

bb18
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:32-357:33)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:36-357:45)
  2: _33 = _14
    SourceInfo(regex-syntax/src/hir/interval.rs:357:36-357:45)
  3: _30 = Gt(move _31, move _33)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:357:16-357:45)
      kind: switchInt(move _30) -> [0: bb28, otherwise: bb19]
  }
  preds [bb16]
  succs [bb19, bb28]

bb19
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:44-357:45)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:44-357:45)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:73)
  3: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:64)
  4: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:47)
  5: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:64)
  6: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:47)
  7: _40 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:64)
      kind: _39 = <std::vec::Vec<I> as core::ops::DerefMut>::deref_mut(move _40) -> [return: bb20, unwind: bb35]
  }
  preds [bb18]
  succs [bb20, bb35]

bb20
  0: _38 = &mut (*_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:47)
  1: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:46-358:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:64)
      kind: _37 = core::slice::<impl [I]>::split_last_mut(move _38) -> [return: bb21, unwind: bb35]
  }
  preds [bb19]
  succs [bb21, bb35]

bb21
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:63-358:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:73)
      kind: _36 = core::option::Option::<(&mut I, &mut [I])>::unwrap(move _37) -> [return: bb22, unwind: bb35]
  }
  preds [bb20]
  succs [bb22, bb35]

bb22
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:72-358:73)
  1: PlaceMention(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:36-358:73)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:22-358:26)
  3: _34 = move (_36.0: &mut I)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:22-358:26)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:28-358:32)
  5: _35 = move (_36.1: &mut [I])
    SourceInfo(regex-syntax/src/hir/interval.rs:358:28-358:32)
  6: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:73-358:74)
  7: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/interval.rs:358:73-358:74)
  8: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:61)
  9: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:42)
  10: _42 = &(*_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:42)
  11: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:49-359:60)
  12: StorageLive(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:49-359:60)
  13: StorageLive(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:55-359:59)
  14: _45 = _28
    SourceInfo(regex-syntax/src/hir/interval.rs:359:55-359:59)
  15: _46 = Len((*_35))
    SourceInfo(regex-syntax/src/hir/interval.rs:359:50-359:60)
  16: _47 = Lt(_45, _46)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:50-359:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:359:50-359:60)
      kind: assert(move _47, "index out of bounds: the length is {} but the index is {}", move _46, _45) -> [success: bb23, unwind: bb35]
  }
  preds [bb21]
  succs [bb23, bb35]

bb23
  0: _44 = &(*_35)[_45]
    SourceInfo(regex-syntax/src/hir/interval.rs:359:49-359:60)
  1: _43 = &(*_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:49-359:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:61)
      kind: _41 = <I as hir::interval::Interval>::union(move _42, move _43) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:60-359:61)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:60-359:61)
  2: PlaceMention(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:61)
  3: _48 = discriminant(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:38-359:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:359:24-359:35)
      kind: switchInt(move _48) -> [1: bb25, otherwise: bb27]
  }
  preds [bb23]
  succs [bb25, bb27]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:359:24-359:35)
      kind: falseEdge -> [real: bb26, imaginary: bb27]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: StorageLive(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:29-359:34)
  1: _49 = ((_41 as Some).0: I)
    SourceInfo(regex-syntax/src/hir/interval.rs:359:29-359:34)
  2: StorageLive(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:360:29-360:34)
  3: _51 = _49
    SourceInfo(regex-syntax/src/hir/interval.rs:360:29-360:34)
  4: (*_34) = move _51
    SourceInfo(regex-syntax/src/hir/interval.rs:360:21-360:34)
  5: StorageDead(_51)
    SourceInfo(regex-syntax/src/hir/interval.rs:360:33-360:34)
  6: StorageDead(_49)
    SourceInfo(regex-syntax/src/hir/interval.rs:362:17-362:18)
  7: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  8: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  9: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  10: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  11: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  12: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  13: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  14: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  15: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  16: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  17: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb25]
  succs [bb11]

bb27
  0: _29 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:362:18-362:18)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  4: StorageDead(_44)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  5: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:357:13-363:14)
      kind: goto -> bb29
  }
  preds [bb24, bb25]
  succs [bb29]

bb28
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:44-357:45)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/interval.rs:357:44-357:45)
  2: _29 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:363:14-363:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:357:13-363:14)
      kind: goto -> bb29
  }
  preds [bb18]
  succs [bb29]

bb29
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  1: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/interval.rs:363:13-363:14)
  2: StorageLive(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:17-364:22)
  3: StorageLive(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:36-364:42)
  4: StorageLive(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:25-364:36)
  5: _54 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:25-364:36)
  6: StorageLive(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:37-364:41)
  7: _55 = _28
    SourceInfo(regex-syntax/src/hir/interval.rs:364:37-364:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:364:36-364:42)
      kind: _53 = <std::vec::Vec<I> as core::ops::Index<usize>>::index(move _54, move _55) -> [return: bb30, unwind: bb35]
  }
  preds [bb27, bb28]
  succs [bb30, bb35]

bb30
  0: _52 = (*_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:25-364:42)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:41-364:42)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:41-364:42)
  3: FakeRead(ForLet(None), _52)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:17-364:22)
  4: StorageDead(_53)
    SourceInfo(regex-syntax/src/hir/interval.rs:364:42-364:43)
  5: StorageLive(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:13-365:36)
  6: StorageLive(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:13-365:24)
  7: _57 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:13-365:24)
  8: StorageLive(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:30-365:35)
  9: _58 = _52
    SourceInfo(regex-syntax/src/hir/interval.rs:365:30-365:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:365:13-365:36)
      kind: _56 = std::vec::Vec::<I>::push(move _57, move _58) -> [return: bb31, unwind: bb35]
  }
  preds [bb29]
  succs [bb31, bb35]

bb31
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:35-365:36)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:35-365:36)
  2: StorageDead(_56)
    SourceInfo(regex-syntax/src/hir/interval.rs:365:36-365:37)
  3: _22 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:354:34-366:10)
  4: StorageDead(_52)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  5: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  6: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  7: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  8: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/interval.rs:366:9-366:10)
  9: _21 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:354:9-366:10)
      kind: goto -> bb11
  }
  preds [bb30]
  succs [bb11]

bb32
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:38-367:39)
  1: StorageDead(_60)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:38-367:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:367:39-367:40)
      kind: drop(_59) -> [return: bb33, unwind: bb35]
  }
  preds [bb17]
  succs [bb33, bb35]

bb33
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/hir/interval.rs:367:39-367:40)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:343:32-368:6)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:368:5-368:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:368:6-368:6)
      kind: goto -> bb34
  }
  preds [bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:368:6-368:6)
      kind: return
  }
  preds [bb2, bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:343:5-368:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5, bb7, bb8, bb9, bb11, bb12, bb16, bb17, bb19, bb20, bb21, bb22, bb23, bb29, bb30, bb32]
  succs []

