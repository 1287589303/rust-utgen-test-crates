bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:19)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:19)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:13)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:19)
      kind: _3 = hir::literal::Seq::len(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = &_3
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:19)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:18-1540:19)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:23-1540:30)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:23-1540:30)
  4: _6 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:23-1540:30)
  5: _5 = &_6
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:23-1540:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1540:9-1540:30)
      kind: _0 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _2, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:29-1540:30)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1540:29-1540:30)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1541:5-1541:6)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1541:5-1541:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1541:6-1541:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1539:5-1541:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

