bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:33)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:17)
  4: _6 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:17)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:274:28-274:32)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:274:28-274:32)
  7: _8 = const "(?"
    SourceInfo(regex-syntax/src/ast/print.rs:274:28-274:32)
  8: _7 = &(*_8)
    SourceInfo(regex-syntax/src/ast/print.rs:274:28-274:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:33)
      kind: _5 = <W as core::fmt::Write>::write_str(move _6, move _7) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/print.rs:274:32-274:33)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/print.rs:274:32-274:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
      kind: _4 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb23]
  }
  preds [bb0]
  succs [bb2, bb23]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  2: _9 = discriminant(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
      kind: switchInt(move _9) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  1: _13 = ((_4 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  2: _3 = _13
    SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  6: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  7: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  8: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  9: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:35)
  10: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:13)
  11: _17 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:13)
  12: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:275:24-275:34)
  13: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:275:24-275:34)
  14: _19 = &((*_2).1: ast::Flags)
    SourceInfo(regex-syntax/src/ast/print.rs:275:24-275:34)
  15: _18 = &(*_19)
    SourceInfo(regex-syntax/src/ast/print.rs:275:24-275:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:35)
      kind: _16 = ast::print::Writer::<W>::fmt_flags(move _17, move _18) -> [return: bb8, unwind: bb23]
  }
  preds [bb2, bb4]
  succs [bb8, bb23]

bb6
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  1: _10 = ((_4 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  3: _12 = _10
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:274:9-274:34)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _12) -> [return: bb7, unwind: bb23]
  }
  preds [bb4]
  succs [bb7, bb23]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/print.rs:274:33-274:34)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:274:34-274:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb6]
  succs [bb22]

bb8
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/print.rs:275:34-275:35)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/print.rs:275:34-275:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
      kind: _15 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _16) -> [return: bb9, unwind: bb23]
  }
  preds [bb5]
  succs [bb9, bb23]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  1: PlaceMention(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  2: _20 = discriminant(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
      kind: switchInt(move _20) -> [0: bb12, 1: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  1: _24 = ((_15 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  2: _14 = _24
    SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
  3: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  4: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  5: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  6: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  7: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  8: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  9: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:32)
  10: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:17)
  11: _28 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:17)
  12: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:276:28-276:31)
  13: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:276:28-276:31)
  14: _30 = const ")"
    SourceInfo(regex-syntax/src/ast/print.rs:276:28-276:31)
  15: _29 = &(*_30)
    SourceInfo(regex-syntax/src/ast/print.rs:276:28-276:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:32)
      kind: _27 = <W as core::fmt::Write>::write_str(move _28, move _29) -> [return: bb15, unwind: bb23]
  }
  preds [bb9, bb11]
  succs [bb15, bb23]

bb13
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  1: _21 = ((_15 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  3: _23 = _21
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:275:9-275:36)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _23) -> [return: bb14, unwind: bb23]
  }
  preds [bb11]
  succs [bb14, bb23]

bb14
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/print.rs:275:35-275:36)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  4: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/print.rs:275:36-275:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb13]
  succs [bb22]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/print.rs:276:31-276:32)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/print.rs:276:31-276:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
      kind: _26 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _27) -> [return: bb16, unwind: bb23]
  }
  preds [bb12]
  succs [bb16, bb23]

bb16
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  1: PlaceMention(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  2: _31 = discriminant(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
      kind: switchInt(move _31) -> [0: bb19, 1: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  1: _35 = ((_26 as Continue).0: ())
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  2: _25 = _35
    SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
  3: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  4: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  5: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  6: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  7: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:277:12-277:14)
  8: _36 = ()
    SourceInfo(regex-syntax/src/ast/print.rs:277:12-277:14)
  9: _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _36)
    SourceInfo(regex-syntax/src/ast/print.rs:277:9-277:15)
  10: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/print.rs:277:14-277:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:278:6-278:6)
      kind: goto -> bb22
  }
  preds [bb16, bb18]
  succs [bb22]

bb20
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  1: _32 = ((_26 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  3: _34 = _32
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:276:9-276:33)
      kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _34) -> [return: bb21, unwind: bb23]
  }
  preds [bb18]
  succs [bb21, bb23]

bb21
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/print.rs:276:32-276:33)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  3: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  4: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/print.rs:276:33-276:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:278:6-278:6)
      kind: return
  }
  preds [bb7, bb14, bb19, bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:273:5-278:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb12, bb13, bb15, bb20]
  succs []

