bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:533:13-533:22)
  1: _3 = const 0_usize
    SourceInfo(regex-syntax/src/hir/literal.rs:533:25-533:26)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:533:13-533:22)
  3: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
  4: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  5: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  6: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:21)
  7: _7 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
      kind: _6 = hir::ClassUnicode::iter(move _7) -> [return: bb1, unwind: bb15]
  }
  preds []
  succs [bb1, bb15]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:27-534:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
      kind: _5 = <hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb2, unwind: bb15]
  }
  preds [bb0]
  succs [bb2, bb15]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:27-534:28)
  1: PlaceMention(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  3: _8 = move _5
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
      kind: falseUnwind -> [real: bb4, unwind: bb15]
  }
  preds [bb2, bb13]
  succs [bb4, bb15]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  4: _13 = &mut _8
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  5: _12 = &mut (*_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
      kind: _11 = <hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next(move _12) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:27-534:28)
  1: PlaceMention(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  2: _14 = discriminant(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
      kind: switchInt(move _14) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:18-534:28)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:13-534:14)
  1: _16 = ((_11 as Some).0: &hir::ClassUnicodeRange)
    SourceInfo(regex-syntax/src/hir/literal.rs:534:13-534:14)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:13-537:14)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:16-535:40)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:16-535:21)
  5: _19 = _3
    SourceInfo(regex-syntax/src/hir/literal.rs:535:16-535:21)
  6: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:24-535:40)
  7: _20 = ((*_1).1: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:24-535:40)
  8: _18 = Gt(move _19, move _20)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:16-535:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:535:16-535:40)
      kind: switchInt(move _18) -> [0: bb11, otherwise: bb10]
  }
  preds [bb5, bb7]
  succs [bb10, bb11]

bb9
  0: _4 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  5: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  6: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  7: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:9-540:14)
  8: _25 = _3
    SourceInfo(regex-syntax/src/hir/literal.rs:540:9-540:14)
  9: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:17-540:33)
  10: _26 = ((*_1).1: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:17-540:33)
  11: _0 = Gt(move _25, move _26)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:9-540:33)
  12: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:32-540:33)
  13: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:540:32-540:33)
  14: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:541:5-541:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:541:6-541:6)
      kind: goto -> bb14
  }
  preds [bb7]
  succs [bb14]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:39-535:40)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:39-535:40)
  2: _0 = const true
    SourceInfo(regex-syntax/src/hir/literal.rs:536:24-536:28)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:537:13-537:14)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:537:13-537:14)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  7: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  8: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  9: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  10: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  11: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  12: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:541:5-541:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:541:6-541:6)
      kind: goto -> bb14
  }
  preds [bb8]
  succs [bb14]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:39-535:40)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:535:39-535:40)
  2: _17 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:537:14-537:14)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:537:13-537:14)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:537:13-537:14)
  5: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:22-538:29)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:22-538:23)
  7: _23 = &(*_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:22-538:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:538:22-538:29)
      kind: _22 = hir::ClassUnicodeRange::len(move _23) -> [return: bb12, unwind: bb15]
  }
  preds [bb8]
  succs [bb12, bb15]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:28-538:29)
  1: _24 = AddWithOverflow(_3, _22)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:13-538:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:538:13-538:29)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, move _22) -> [success: bb13, unwind: bb15]
  }
  preds [bb11]
  succs [bb13, bb15]

bb13
  0: _3 = move (_24.0: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:13-538:29)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:538:28-538:29)
  2: _10 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:534:29-539:10)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  4: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  5: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  6: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:539:9-539:10)
  7: _9 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:534:9-539:10)
      kind: goto -> bb3
  }
  preds [bb12]
  succs [bb3]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:541:6-541:6)
      kind: return
  }
  preds [bb9, bb10]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:532:5-541:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb11, bb12]
  succs []

