bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1693:9-1717:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1693:15-1693:20)
  2: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1693:15-1693:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1693:9-1693:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1693:15-1693:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1693:15-1693:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1694:13-1694:37)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1712:32-1712:38)
  1: _15 = &(((*_1) as BinaryOp).0: ast::ClassSetBinaryOp)
    SourceInfo(regex-syntax/src/ast/mod.rs:1712:32-1712:38)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:20-1713:37)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:20-1713:26)
  4: _17 = &(*((*_15).2: std::boxed::Box<ast::ClassSet>))
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:20-1713:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1713:20-1713:37)
      kind: _16 = ast::ClassSet::is_empty(move _17) -> [return: bb18, unwind: bb85]
  }
  preds [bb0, bb2]
  succs [bb18, bb85]

bb4
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1694:28-1694:36)
  1: _4 = &(((*_1) as Item).0: ast::ClassSetItem)
    SourceInfo(regex-syntax/src/ast/mod.rs:1694:28-1694:36)
  2: PlaceMention((*_4))
    SourceInfo(regex-syntax/src/ast/mod.rs:1694:47-1694:52)
  3: _5 = discriminant((*_4))
    SourceInfo(regex-syntax/src/ast/mod.rs:1694:47-1694:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1694:41-1694:52)
      kind: switchInt(move _5) -> [0: bb8, 1: bb8, 2: bb8, 3: bb8, 4: bb8, 5: bb8, 6: bb6, 7: bb7, otherwise: bb5]
  }
  preds [bb2]
  succs [bb5, bb6, bb7, bb8, bb8, bb8, bb8, bb8, bb8]

bb5
  0: FakeRead(ForMatchedPlace(None), (*_4))
    SourceInfo(regex-syntax/src/ast/mod.rs:1694:47-1694:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1694:47-1694:52)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1701:17-1701:47)
      kind: falseEdge -> [real: bb10, imaginary: bb7]
  }
  preds [bb4, bb8]
  succs [bb7, bb10]

bb7
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1706:37-1706:42)
  1: _11 = &(((*_4) as Union).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/mod.rs:1706:37-1706:42)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1707:24-1707:42)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1707:24-1707:31)
  4: _13 = &((*_11).1: std::vec::Vec<ast::ClassSetItem>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1707:24-1707:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1707:24-1707:42)
      kind: _12 = std::vec::Vec::<ast::ClassSetItem>::is_empty(move _13) -> [return: bb14, unwind: bb85]
  }
  preds [bb4, bb6]
  succs [bb14, bb85]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1695:17-1700:40)
      kind: falseEdge -> [real: bb9, imaginary: bb6]
  }
  preds [bb4, bb4, bb4, bb4, bb4, bb4]
  succs [bb6, bb9]

bb9
  0: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1700:44-1700:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1700:44-1700:50)
      kind: goto -> bb67
  }
  preds [bb8]
  succs [bb67]

bb10
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1701:41-1701:46)
  1: _7 = &(((*_4) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1701:41-1701:46)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1702:24-1702:41)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1702:24-1702:30)
  4: _9 = &((*(*_7)).2: ast::ClassSet)
    SourceInfo(regex-syntax/src/ast/mod.rs:1702:24-1702:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1702:24-1702:41)
      kind: _8 = ast::ClassSet::is_empty(move _9) -> [return: bb11, unwind: bb85]
  }
  preds [bb6]
  succs [bb11, bb85]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1702:24-1702:41)
      kind: switchInt(move _8) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1702:40-1702:41)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1703:25-1703:31)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1704:21-1704:22)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1705:17-1705:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb67
  }
  preds [bb11]
  succs [bb67]

bb13
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1702:40-1702:41)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1704:22-1704:22)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1704:21-1704:22)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1705:17-1705:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1705:17-1705:18)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1707:24-1707:42)
      kind: switchInt(move _12) -> [0: bb16, otherwise: bb15]
  }
  preds [bb7]
  succs [bb15, bb16]

bb15
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1707:41-1707:42)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1708:25-1708:31)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1709:21-1709:22)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1710:17-1710:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb67
  }
  preds [bb14]
  succs [bb67]

bb16
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1707:41-1707:42)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1709:22-1709:22)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1709:21-1709:22)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/mod.rs:1710:17-1710:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1710:17-1710:18)
      kind: goto -> bb17
  }
  preds [bb14]
  succs [bb17]

bb17
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1711:13-1711:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1711:13-1711:14)
      kind: goto -> bb25
  }
  preds [bb13, bb16]
  succs [bb25]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1713:20-1713:37)
      kind: switchInt(move _16) -> [0: bb23, otherwise: bb19]
  }
  preds [bb3]
  succs [bb19, bb23]

bb19
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:36-1713:37)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:41-1713:58)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:41-1713:47)
  3: _19 = &(*((*_15).3: std::boxed::Box<ast::ClassSet>))
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:41-1713:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1713:41-1713:58)
      kind: _18 = ast::ClassSet::is_empty(move _19) -> [return: bb20, unwind: bb85]
  }
  preds [bb18]
  succs [bb20, bb85]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1713:41-1713:58)
      kind: switchInt(move _18) -> [0: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:57-1713:58)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1714:21-1714:27)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1715:17-1715:18)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1715:17-1715:18)
  4: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1716:13-1716:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb68
  }
  preds [bb20]
  succs [bb68]

bb22
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:57-1713:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb20]
  succs [bb24]

bb23
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/mod.rs:1713:36-1713:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb24
  }
  preds [bb18]
  succs [bb24]

bb24
  0: _2 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1715:18-1715:18)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1715:17-1715:18)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/mod.rs:1715:17-1715:18)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1716:13-1716:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1716:13-1716:14)
      kind: goto -> bb25
  }
  preds [bb22, bb23]
  succs [bb25]

bb25
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1717:9-1717:10)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1719:13-1719:23)
  2: _21 = {closure@regex-syntax/src/ast/mod.rs:1719:26: 1719:28}
    SourceInfo(regex-syntax/src/ast/mod.rs:1719:26-1719:64)
  3: FakeRead(ForLet(None), _21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1719:13-1719:23)
  4: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:13-1720:22)
  5: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:25-1720:77)
  6: _23 = &_21
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:25-1720:77)
  7: _22 = {closure@regex-syntax/src/ast/mod.rs:1720:25: 1720:27} { empty_span: move _23 }
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:25-1720:77)
  8: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:26-1720:27)
  9: FakeRead(ForLet(None), _22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1720:13-1720:22)
  10: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:13-1721:22)
  11: StorageLive(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  12: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  13: _27 = SizeOf([ast::ClassSet; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  14: _28 = AlignOf([ast::ClassSet; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
      kind: _29 = alloc::alloc::exchange_malloc(move _27, move _28) -> [return: bb26, unwind: bb85]
  }
  preds [bb17, bb24]
  succs [bb26, bb85]

bb26
  0: StorageLive(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  1: _30 = ShallowInitBox(move _29, [ast::ClassSet; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:30-1721:61)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:43-1721:47)
  4: _32 = &mut (*_1)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:43-1721:47)
  5: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:60)
  6: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:58)
  7: _34 = &_22
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:58)
  8: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:60)
  9: _35 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1721:49-1721:60)
      kind: _33 = <{closure@regex-syntax/src/ast/mod.rs:1720:25: 1720:27} as core::ops::Fn<()>>::call(move _34, move _35) -> [return: bb27, unwind: bb84]
  }
  preds [bb25]
  succs [bb27, bb84]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:59-1721:60)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:59-1721:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1721:30-1721:61)
      kind: _31 = core::mem::replace::<ast::ClassSet>(move _32, move _33) -> [return: bb28, unwind: bb83]
  }
  preds [bb26]
  succs [bb28, bb83]

bb28
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:60-1721:61)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:60-1721:61)
  2: (*_30) = [move _31]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37-54:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
      kind: drop(_31) -> [return: bb29, unwind: bb84]
  }
  preds [bb27]
  succs [bb29, bb84]

bb29
  0: StorageDead(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
  1: _26 = move _30
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: _25 = move _26 as std::boxed::Box<[ast::ClassSet]> (PointerCoercion(Unsize))
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_26) -> [return: bb30, unwind: bb81]
  }
  preds [bb28]
  succs [bb30, bb81]

bb30
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_30) -> [return: bb31, unwind: bb82]
  }
  preds [bb29]
  succs [bb31, bb82]

bb31
  0: StorageDead(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  1: StorageDead(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:9-55:10)
      kind: _24 = std::slice::<impl [ast::ClassSet]>::into_vec::<std::alloc::Global>(move _25) -> [return: bb32, unwind: bb82]
  }
  preds [bb30]
  succs [bb32, bb82]

bb32
  0: StorageDead(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
  1: FakeRead(ForLet(None), _24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1721:13-1721:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:9-1743:10)
      kind: goto -> bb33
  }
  preds [bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:9-1743:10)
      kind: falseUnwind -> [real: bb34, unwind: bb80]
  }
  preds [bb32, bb64]
  succs [bb34, bb80]

bb34
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:46)
  1: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:40)
  2: _38 = &mut _24
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:46)
      kind: _37 = std::vec::Vec::<ast::ClassSet>::pop(move _38) -> [return: bb35, unwind: bb80]
  }
  preds [bb33]
  succs [bb35, bb80]

bb35
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:45-1722:46)
  1: PlaceMention(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:46)
  2: _39 = discriminant(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:35-1722:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:19-1722:32)
      kind: switchInt(move _39) -> [1: bb36, otherwise: bb62]
  }
  preds [bb34]
  succs [bb36, bb62]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:19-1722:32)
      kind: falseEdge -> [real: bb37, imaginary: bb62]
  }
  preds [bb35]
  succs [bb37, bb62]

bb37
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:24-1722:31)
  1: _40 = move ((_37 as Some).0: ast::ClassSet)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:24-1722:31)
  2: PlaceMention(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1723:19-1723:22)
  3: _41 = discriminant(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1723:19-1723:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1723:13-1723:22)
      kind: switchInt(move _41) -> [0: bb39, 1: bb40, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb39, bb40]

bb38
  0: FakeRead(ForMatchedPlace(None), _40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1723:19-1723:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1723:19-1723:22)
      kind: unreachable
  }
  preds [bb37]
  succs []

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1724:17-1724:45)
      kind: falseEdge -> [real: bb41, imaginary: bb40]
  }
  preds [bb37]
  succs [bb40, bb41]

bb40
  0: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/mod.rs:1738:36-1738:46)
  1: _60 = &mut ((_40 as BinaryOp).0: ast::ClassSetBinaryOp)
    SourceInfo(regex-syntax/src/ast/mod.rs:1738:36-1738:46)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:21-1739:71)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:21-1739:26)
  4: _62 = &mut _24
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:21-1739:26)
  5: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:32-1739:70)
  6: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:45-1739:56)
  7: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:45-1739:56)
  8: _65 = &mut ((*_60).2: std::boxed::Box<ast::ClassSet>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:45-1739:56)
  9: _64 = &mut (*(*_65))
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:45-1739:56)
  10: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:69)
  11: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:67)
  12: _67 = &_22
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:67)
  13: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:69)
  14: _68 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1739:58-1739:69)
      kind: _66 = <{closure@regex-syntax/src/ast/mod.rs:1720:25: 1720:27} as core::ops::Fn<()>>::call(move _67, move _68) -> [return: bb55, unwind: bb78]
  }
  preds [bb37, bb39]
  succs [bb55, bb78]

bb41
  0: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/mod.rs:1724:32-1724:44)
  1: _42 = &mut ((_40 as Item).0: ast::ClassSetItem)
    SourceInfo(regex-syntax/src/ast/mod.rs:1724:32-1724:44)
  2: PlaceMention((*_42))
    SourceInfo(regex-syntax/src/ast/mod.rs:1724:55-1724:60)
  3: _43 = discriminant((*_42))
    SourceInfo(regex-syntax/src/ast/mod.rs:1724:55-1724:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1724:49-1724:60)
      kind: switchInt(move _43) -> [0: bb45, 1: bb45, 2: bb45, 3: bb45, 4: bb45, 5: bb45, 6: bb43, 7: bb44, otherwise: bb42]
  }
  preds [bb39]
  succs [bb42, bb43, bb44, bb45, bb45, bb45, bb45, bb45, bb45]

bb42
  0: FakeRead(ForMatchedPlace(None), (*_42))
    SourceInfo(regex-syntax/src/ast/mod.rs:1724:55-1724:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1724:55-1724:60)
      kind: unreachable
  }
  preds [bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1731:21-1731:55)
      kind: falseEdge -> [real: bb47, imaginary: bb44]
  }
  preds [bb41, bb45]
  succs [bb44, bb47]

bb44
  0: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/mod.rs:1734:41-1734:50)
  1: _53 = &mut (((*_42) as Union).0: ast::ClassSetUnion)
    SourceInfo(regex-syntax/src/ast/mod.rs:1734:41-1734:50)
  2: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:25-1735:76)
  3: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:25-1735:30)
  4: _55 = &mut _24
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:25-1735:30)
  5: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:75)
  6: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:55)
  7: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:45)
  8: _58 = &mut ((*_53).1: std::vec::Vec<ast::ClassSetItem>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:45)
  9: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:52-1735:54)
  10: _59 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:52-1735:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:55)
      kind: _57 = std::vec::Vec::<ast::ClassSetItem>::drain::<core::ops::RangeFull>(move _58, move _59) -> [return: bb51, unwind: bb78]
  }
  preds [bb41, bb43]
  succs [bb51, bb78]

bb45
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1725:21-1730:44)
      kind: falseEdge -> [real: bb46, imaginary: bb43]
  }
  preds [bb41, bb41, bb41, bb41, bb41, bb41]
  succs [bb43, bb46]

bb46
  0: _36 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1730:48-1730:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1730:48-1730:50)
      kind: goto -> bb54
  }
  preds [bb45]
  succs [bb54]

bb47
  0: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/mod.rs:1731:45-1731:54)
  1: _44 = &mut (((*_42) as Bracketed).0: std::boxed::Box<ast::ClassBracketed>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1731:45-1731:54)
  2: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:25-1732:75)
  3: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:25-1732:30)
  4: _46 = &mut _24
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:25-1732:30)
  5: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:36-1732:74)
  6: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:49-1732:60)
  7: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:49-1732:60)
  8: _49 = &mut ((*(*_44)).2: ast::ClassSet)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:49-1732:60)
  9: _48 = &mut (*_49)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:49-1732:60)
  10: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:73)
  11: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:71)
  12: _51 = &_22
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:71)
  13: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:73)
  14: _52 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1732:62-1732:73)
      kind: _50 = <{closure@regex-syntax/src/ast/mod.rs:1720:25: 1720:27} as core::ops::Fn<()>>::call(move _51, move _52) -> [return: bb48, unwind: bb78]
  }
  preds [bb43]
  succs [bb48, bb78]

bb48
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:72-1732:73)
  1: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:72-1732:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1732:36-1732:74)
      kind: _47 = core::mem::replace::<ast::ClassSet>(move _48, move _50) -> [return: bb49, unwind: bb77]
  }
  preds [bb47]
  succs [bb49, bb77]

bb49
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:73-1732:74)
  1: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:73-1732:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1732:25-1732:75)
      kind: _45 = std::vec::Vec::<ast::ClassSet>::push(move _46, move _47) -> [return: bb50, unwind: bb76]
  }
  preds [bb48]
  succs [bb50, bb76]

bb50
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:74-1732:75)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:74-1732:75)
  2: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:75-1732:76)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/mod.rs:1732:75-1732:76)
  4: _36 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1731:59-1733:22)
  5: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/mod.rs:1733:21-1733:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1733:21-1733:22)
      kind: goto -> bb54
  }
  preds [bb49]
  succs [bb54]

bb51
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:54-1735:55)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:54-1735:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1735:38-1735:75)
      kind: _56 = <std::vec::Drain<'_, ast::ClassSetItem> as core::iter::Iterator>::map::<ast::ClassSet, fn(ast::ClassSetItem) -> ast::ClassSet {ast::ClassSet::Item}>(move _57, ast::ClassSet::Item) -> [return: bb52, unwind: bb75]
  }
  preds [bb44]
  succs [bb52, bb75]

bb52
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:74-1735:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1735:25-1735:76)
      kind: _54 = <std::vec::Vec<ast::ClassSet> as core::iter::Extend<ast::ClassSet>>::extend::<core::iter::Map<std::vec::Drain<'_, ast::ClassSetItem>, fn(ast::ClassSetItem) -> ast::ClassSet {ast::ClassSet::Item}>>(move _55, move _56) -> [return: bb53, unwind: bb74]
  }
  preds [bb51]
  succs [bb53, bb74]

bb53
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:75-1735:76)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:75-1735:76)
  2: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/mod.rs:1735:76-1735:77)
  3: _36 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1734:55-1736:22)
  4: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/mod.rs:1736:21-1736:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1736:21-1736:22)
      kind: goto -> bb54
  }
  preds [bb52]
  succs [bb54]

bb54
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/mod.rs:1737:17-1737:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1737:17-1737:18)
      kind: goto -> bb61
  }
  preds [bb46, bb50, bb53]
  succs [bb61]

bb55
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:68-1739:69)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:68-1739:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1739:32-1739:70)
      kind: _63 = core::mem::replace::<ast::ClassSet>(move _64, move _66) -> [return: bb56, unwind: bb73]
  }
  preds [bb40]
  succs [bb56, bb73]

bb56
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:69-1739:70)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:69-1739:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1739:21-1739:71)
      kind: _61 = std::vec::Vec::<ast::ClassSet>::push(move _62, move _63) -> [return: bb57, unwind: bb72]
  }
  preds [bb55]
  succs [bb57, bb72]

bb57
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:70-1739:71)
  1: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:70-1739:71)
  2: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:71-1739:72)
  3: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/mod.rs:1739:71-1739:72)
  4: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:21-1740:71)
  5: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:21-1740:26)
  6: _70 = &mut _24
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:21-1740:26)
  7: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:32-1740:70)
  8: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:45-1740:56)
  9: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:45-1740:56)
  10: _73 = &mut ((*_60).3: std::boxed::Box<ast::ClassSet>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:45-1740:56)
  11: _72 = &mut (*(*_73))
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:45-1740:56)
  12: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:69)
  13: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:67)
  14: _75 = &_22
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:67)
  15: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:69)
  16: _76 = ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1740:58-1740:69)
      kind: _74 = <{closure@regex-syntax/src/ast/mod.rs:1720:25: 1720:27} as core::ops::Fn<()>>::call(move _75, move _76) -> [return: bb58, unwind: bb78]
  }
  preds [bb56]
  succs [bb58, bb78]

bb58
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:68-1740:69)
  1: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:68-1740:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1740:32-1740:70)
      kind: _71 = core::mem::replace::<ast::ClassSet>(move _72, move _74) -> [return: bb59, unwind: bb71]
  }
  preds [bb57]
  succs [bb59, bb71]

bb59
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:69-1740:70)
  1: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:69-1740:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1740:21-1740:71)
      kind: _69 = std::vec::Vec::<ast::ClassSet>::push(move _70, move _71) -> [return: bb60, unwind: bb70]
  }
  preds [bb58]
  succs [bb60, bb70]

bb60
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:70-1740:71)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:70-1740:71)
  2: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:71-1740:72)
  3: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/mod.rs:1740:71-1740:72)
  4: _36 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1738:51-1741:18)
  5: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/mod.rs:1741:17-1741:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1741:17-1741:18)
      kind: goto -> bb61
  }
  preds [bb59]
  succs [bb61]

bb61
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
      kind: drop(_40) -> [return: bb63, unwind: bb79]
  }
  preds [bb54, bb60]
  succs [bb63, bb79]

bb62
  0: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:9-1743:10)
  1: _0 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1722:9-1743:10)
  2: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
      kind: drop(_37) -> [return: bb65, unwind: bb80]
  }
  preds [bb35, bb36]
  succs [bb65, bb80]

bb63
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
      kind: drop(_37) -> [return: bb64, unwind: bb80]
  }
  preds [bb61]
  succs [bb64, bb80]

bb64
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1722:9-1743:10)
      kind: goto -> bb33
  }
  preds [bb63]
  succs [bb33]

bb65
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1744:5-1744:6)
      kind: drop(_24) -> [return: bb66, unwind: bb85]
  }
  preds [bb62]
  succs [bb66, bb85]

bb66
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1744:5-1744:6)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1744:5-1744:6)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1744:5-1744:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1744:6-1744:6)
      kind: goto -> bb69
  }
  preds [bb65]
  succs [bb69]

bb67
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1711:13-1711:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb68
  }
  preds [bb9, bb12, bb15]
  succs [bb68]

bb68
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1717:9-1717:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1744:6-1744:6)
      kind: goto -> bb69
  }
  preds [bb21, bb67]
  succs [bb69]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1744:6-1744:6)
      kind: return
  }
  preds [bb66, bb68]
  succs []

bb70
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1740:70-1740:71)
      kind: drop(_71) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb59]
  succs [bb78]

bb71
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1740:69-1740:70)
      kind: drop(_74) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb58]
  succs [bb78]

bb72
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1739:70-1739:71)
      kind: drop(_63) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb56]
  succs [bb78]

bb73
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1739:69-1739:70)
      kind: drop(_66) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb55]
  succs [bb78]

bb74
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1735:75-1735:76)
      kind: drop(_56) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb78]

bb75
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1735:74-1735:75)
      kind: drop(_57) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb78]

bb76
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1732:74-1732:75)
      kind: drop(_47) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb78]

bb77
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1732:73-1732:74)
      kind: drop(_50) -> [return: bb78, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb78]

bb78
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
      kind: drop(_40) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb40, bb44, bb47, bb57, bb70, bb71, bb72, bb73, bb74, bb75, bb76, bb77]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1743:9-1743:10)
      kind: drop(_37) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb61, bb78]
  succs [bb80]

bb80
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1744:5-1744:6)
      kind: drop(_24) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb33, bb34, bb62, bb63, bb79]
  succs [bb85]

bb81
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_30) -> [return: bb82, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb82]

bb82
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
      kind: drop(_25) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb30, bb31, bb81]
  succs [bb85]

bb83
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1721:60-1721:61)
      kind: drop(_33) -> [return: bb84, unwind terminate(cleanup)]
  }
  preds [bb27]
  succs [bb84]

bb84
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_30) -> [return: bb85, unwind terminate(cleanup)]
  }
  preds [bb26, bb28, bb83]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1690:5-1744:6)
      kind: resume
  }
  preds [bb3, bb7, bb10, bb19, bb25, bb65, bb80, bb82, bb84]
  succs []

