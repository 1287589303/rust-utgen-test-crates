bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:40)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:33)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:40)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:33)
  7: _9 = &((*_1).1: std::vec::Vec<ast::FlagsItem>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:40)
      kind: _8 = <std::vec::Vec<ast::FlagsItem> as core::ops::Deref>::deref(move _9) -> [return: bb1, unwind: bb17]
  }
  preds []
  succs [bb1, bb17]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:33)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:32-1546:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:40)
      kind: _6 = core::slice::<impl [ast::FlagsItem]>::iter(move _7) -> [return: bb2, unwind: bb17]
  }
  preds [bb0]
  succs [bb2, bb17]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:39-1546:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
      kind: _5 = <core::slice::Iter<'_, ast::FlagsItem> as core::iter::Iterator>::enumerate(move _6) -> [return: bb3, unwind: bb17]
  }
  preds [bb1]
  succs [bb3, bb17]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:51-1546:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
      kind: _4 = <core::iter::Enumerate<core::slice::Iter<'_, ast::FlagsItem>> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb4, unwind: bb17]
  }
  preds [bb2]
  succs [bb4, bb17]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:51-1546:52)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  3: _10 = move _4
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
      kind: falseUnwind -> [real: bb6, unwind: bb17]
  }
  preds [bb4, bb14]
  succs [bb6, bb17]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  4: _15 = &mut _10
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  5: _14 = &mut (*_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
      kind: _13 = <core::iter::Enumerate<core::slice::Iter<'_, ast::FlagsItem>> as core::iter::Iterator>::next(move _14) -> [return: bb7, unwind: bb17]
  }
  preds [bb5]
  succs [bb7, bb17]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:51-1546:52)
  1: PlaceMention(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  2: _16 = discriminant(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
      kind: switchInt(move _16) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:23-1546:52)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:14-1546:15)
  1: _18 = (((_13 as Some).0: (usize, &ast::FlagsItem)).0: usize)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:14-1546:15)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:17-1546:18)
  3: _19 = (((_13 as Some).0: (usize, &ast::FlagsItem)).1: &ast::FlagsItem)
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:17-1546:18)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:16-1547:35)
  5: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:16-1547:22)
  6: _21 = &((*_19).1: ast::FlagsItemKind)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:16-1547:22)
  7: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:26-1547:35)
  8: _22 = &(_2.1: ast::FlagsItemKind)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:26-1547:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1547:16-1547:35)
      kind: _20 = <ast::FlagsItemKind as core::cmp::PartialEq>::eq(move _21, move _22) -> [return: bb12, unwind: bb17]
  }
  preds [bb7, bb9]
  succs [bb12, bb17]

bb11
  0: _3 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  4: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  6: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  7: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  8: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:9-1551:30)
  9: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:9-1551:19)
  10: _26 = &mut ((*_1).1: std::vec::Vec<ast::FlagsItem>)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:9-1551:19)
  11: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:25-1551:29)
  12: _27 = move _2
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:25-1551:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1551:9-1551:30)
      kind: _25 = std::vec::Vec::<ast::FlagsItem>::push(move _26, move _27) -> [return: bb15, unwind: bb17]
  }
  preds [bb9]
  succs [bb15, bb17]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1547:16-1547:35)
      kind: switchInt(move _20) -> [0: bb14, otherwise: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:34-1547:35)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:34-1547:35)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1548:29-1548:30)
  3: _24 = _18
    SourceInfo(regex-syntax/src/ast/mod.rs:1548:29-1548:30)
  4: _0 = core::option::Option::<usize>::Some(move _24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1548:24-1548:31)
  5: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/mod.rs:1548:30-1548:31)
  6: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1549:13-1549:14)
  7: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  8: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  9: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  10: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  11: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  12: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  13: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  14: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  15: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1553:6-1553:6)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:34-1547:35)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/mod.rs:1547:34-1547:35)
  2: _12 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1549:14-1549:14)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/mod.rs:1549:13-1549:14)
  4: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  5: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  6: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  7: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  8: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/mod.rs:1550:9-1550:10)
  9: _11 = const ()
    SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1546:9-1550:10)
      kind: goto -> bb5
  }
  preds [bb12]
  succs [bb5]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:29-1551:30)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:29-1551:30)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/mod.rs:1551:30-1551:31)
  3: _0 = core::option::Option::<usize>::None
    SourceInfo(regex-syntax/src/ast/mod.rs:1552:9-1552:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1553:6-1553:6)
      kind: goto -> bb16
  }
  preds [bb11]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1553:6-1553:6)
      kind: return
  }
  preds [bb13, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1545:5-1553:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb10, bb11]
  succs []

