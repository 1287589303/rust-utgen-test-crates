bb0
  0: PlaceMention(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:75:15-75:19)
  1: _3 = discriminant(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:75:15-75:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:75:9-75:19)
      kind: switchInt(move _3) -> [0: bb2, 3: bb3, 4: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:13-79:14)
  1: _13 = move _1
    SourceInfo(regex-syntax/src/ast/parse.rs:79:13-79:14)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:22-79:76)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:22-79:23)
  4: _15 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:22-79:23)
  5: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:30-79:39)
  6: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:31-79:39)
  7: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:31-79:32)
  8: _18 = &_13
    SourceInfo(regex-syntax/src/ast/parse.rs:79:31-79:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:31-79:39)
      kind: _17 = ast::parse::Primitive::span(move _18) -> [return: bb13, unwind: bb19]
  }
  preds [bb0, bb4]
  succs [bb13, bb19]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:76:13-76:25)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:77:13-77:22)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:13-78:25)
      kind: falseEdge -> [real: bb9, imaginary: bb1]
  }
  preds [bb0, bb3]
  succs [bb1, bb9]

bb5
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:21-76:24)
  1: _4 = move ((_1 as Literal).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:21-76:24)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:32-76:58)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:54-76:57)
  4: _6 = move _4
    SourceInfo(regex-syntax/src/ast/parse.rs:76:54-76:57)
  5: _5 = ast::ClassSetItem::Literal(move _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:32-76:58)
  6: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:57-76:58)
  7: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Ok(move _5)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:29-76:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:76:58-76:59)
      kind: drop(_5) -> [return: bb6, unwind: bb22]
  }
  preds [bb2]
  succs [bb6, bb22]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:58-76:59)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:76:58-76:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:76:58-76:59)
      kind: goto -> bb17
  }
  preds [bb5]
  succs [bb17]

bb7
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:18-77:21)
  1: _7 = move ((_1 as Perl).0: ast::ClassPerl)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:18-77:21)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:29-77:52)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:48-77:51)
  4: _9 = move _7
    SourceInfo(regex-syntax/src/ast/parse.rs:77:48-77:51)
  5: _8 = ast::ClassSetItem::Perl(move _9)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:29-77:52)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:51-77:52)
  7: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Ok(move _8)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:26-77:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:77:52-77:53)
      kind: drop(_8) -> [return: bb8, unwind: bb22]
  }
  preds [bb3]
  succs [bb8, bb22]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:52-77:53)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:77:52-77:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:77:52-77:53)
      kind: goto -> bb17
  }
  preds [bb7]
  succs [bb17]

bb9
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:21-78:24)
  1: _10 = move ((_1 as Unicode).0: ast::ClassUnicode)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:21-78:24)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:32-78:58)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:54-78:57)
  4: _12 = move _10
    SourceInfo(regex-syntax/src/ast/parse.rs:78:54-78:57)
  5: _11 = ast::ClassSetItem::Unicode(move _12)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:32-78:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:57-78:58)
      kind: drop(_12) -> [return: bb10, unwind: bb20]
  }
  preds [bb4]
  succs [bb10, bb20]

bb10
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:57-78:58)
  1: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Ok(move _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:29-78:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
      kind: drop(_11) -> [return: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
      kind: drop(_10) -> [return: bb12, unwind: bb22]
  }
  preds [bb10]
  succs [bb12, bb22]

bb12
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:38-79:39)
  1: _16 = (*_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:30-79:39)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:41-79:75)
  3: _19 = ast::ErrorKind::ClassEscapeInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:79:41-79:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:22-79:76)
      kind: _14 = ast::parse::ParserI::<'_, P>::error(move _15, move _16, move _19) -> [return: bb14, unwind: bb19]
  }
  preds [bb1]
  succs [bb14, bb19]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:75-79:76)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:75-79:76)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:75-79:76)
  3: _0 = core::result::Result::<ast::ClassSetItem, ast::Error>::Err(move _14)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:18-79:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
      kind: drop(_14) -> [return: bb15, unwind: bb19]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
      kind: drop(_13) -> [return: bb16, unwind: bb22]
  }
  preds [bb14]
  succs [bb16, bb22]

bb16
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:81:5-81:6)
      kind: drop(_1) -> [return: bb18, unwind: bb23]
  }
  preds [bb6, bb8, bb12, bb16]
  succs [bb18, bb23]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:81:6-81:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:79:76-79:77)
      kind: drop(_13) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb1, bb13, bb14]
  succs [bb22]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
      kind: drop(_11) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:78:58-78:59)
      kind: drop(_10) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb10, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:81:5-81:6)
      kind: drop(_1) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb11, bb15, bb19, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:68:5-81:6)
      kind: resume
  }
  preds [bb17, bb22]
  succs []

