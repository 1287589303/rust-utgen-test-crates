bb0
  0: PlaceMention(((*_1).2: ast::ClassUnicodeKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:910:15-910:24)
  1: _3 = discriminant(((*_1).2: ast::ClassUnicodeKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:910:15-910:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:910:9-910:24)
      kind: switchInt(move _3) -> [2: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = ((*_1).1: bool)
    SourceInfo(regex-syntax/src/ast/mod.rs:915:18-915:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:915:18-915:30)
      kind: goto -> bb5
  }
  preds [bb0, bb2, bb3]
  succs [bb5]

bb2
  0: _2 = discriminant(((((*_1).2: ast::ClassUnicodeKind) as NamedValue).0: ast::ClassUnicodeOpKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:910:15-910:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:910:9-910:24)
      kind: switchInt(move _2) -> [2: bb3, otherwise: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:911:13-914:14)
      kind: falseEdge -> [real: bb4, imaginary: bb1]
  }
  preds [bb2]
  succs [bb1, bb4]

bb4
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:914:19-914:31)
  1: _4 = ((*_1).1: bool)
    SourceInfo(regex-syntax/src/ast/mod.rs:914:19-914:31)
  2: _0 = Not(move _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:914:18-914:31)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:914:30-914:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:914:30-914:31)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:917:6-917:6)
      kind: return
  }
  preds [bb1, bb4]
  succs []

