bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:399:9-399:29)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:399:9-399:20)
  2: _3 = &((*_1).0: P)
    SourceInfo(regex-syntax/src/ast/parse.rs:399:9-399:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:399:9-399:29)
      kind: _2 = <P as core::borrow::Borrow<ast::parse::Parser>>::borrow(move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:399:9-399:29)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:399:28-399:29)
  2: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:400:5-400:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:400:6-400:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:398:5-400:6)
      kind: resume
  }
  preds [bb0]
  succs []

