bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/parser.rs:38:23-38:39)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/parser.rs:38:23-38:31)
  2: _3 = &((*_1).0: ast::parse::ParserBuilder)
    SourceInfo(regex-syntax/src/parser.rs:38:23-38:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:38:23-38:39)
      kind: _2 = ast::parse::ParserBuilder::build(move _3) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/parser.rs:38:38-38:39)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/parser.rs:38:46-38:62)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/parser.rs:38:46-38:54)
  3: _5 = &((*_1).1: hir::translate::TranslatorBuilder)
    SourceInfo(regex-syntax/src/parser.rs:38:46-38:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:38:46-38:62)
      kind: _4 = hir::translate::TranslatorBuilder::build(move _5) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/parser.rs:38:61-38:62)
  1: _0 = parser::Parser { ast: move _2, hir: move _4 }
    SourceInfo(regex-syntax/src/parser.rs:38:9-38:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:38:63-38:64)
      kind: drop(_4) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/parser.rs:38:63-38:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:38:63-38:64)
      kind: drop(_2) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/parser.rs:38:63-38:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:39:6-39:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:38:63-38:64)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:37:5-39:6)
      kind: resume
  }
  preds [bb0, bb3, bb5]
  succs []

