{
  "regex-syntax/src/hir/translate.rs:408:31:408:59": [
    {
      "Try": "self.hir_perl_byte_class(x)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:400:42:400:64": [
    {
      "Try": "self.hir_assertion(x)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:452:34:452:46": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:452:34:452:46",
        "match_str": "*expr.kind()",
        "match_kind": {
          "Enum": [
            "Empty",
            "Literal",
            "Class",
            "Look",
            "Repetition",
            "Capture",
            "Concat",
            "Alternation"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "regex-syntax/src/hir/translate.rs:452:48:452:62": {
            "pat": {
              "pat_str": "HirKind::Empty",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:452:34:452:46",
        "match_str": "*expr.kind()",
        "match_kind": {
          "Enum": [
            "Empty",
            "Literal",
            "Class",
            "Look",
            "Repetition",
            "Capture",
            "Concat",
            "Alternation"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/translate.rs:452:48:452:62": {
            "pat": {
              "pat_str": "HirKind::Empty",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:451:23:451:62": [
    {
      "Bool": {
        "Other": "let Some(expr) = self.pop_concat_expr()"
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:414:47:414:73": [
    {
      "Try": "self.hir_unicode_class(x)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:420:21:424:23": [
    {
      "Try": "self.unicode_fold_and_negate(\n                        &ast.span,\n                        ast.negated,\n                        &mut cls,\n                    )?"
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:457:9:460:10": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:452:34:452:46",
        "match_str": "*expr.kind()",
        "match_kind": {
          "Enum": [
            "Empty",
            "Literal",
            "Class",
            "Look",
            "Repetition",
            "Capture",
            "Concat",
            "Alternation"
          ]
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          },
          "regex-syntax/src/hir/translate.rs:452:48:452:62": {
            "pat": {
              "pat_str": "HirKind::Empty",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    },
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:452:34:452:46",
        "match_str": "*expr.kind()",
        "match_kind": {
          "Enum": [
            "Empty",
            "Literal",
            "Class",
            "Look",
            "Repetition",
            "Capture",
            "Concat",
            "Alternation"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/translate.rs:452:48:452:62": {
            "pat": {
              "pat_str": "HirKind::Empty",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": null
          },
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:459:13:459:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:391:43:391:75": [
    {
      "Try": "self.case_fold_char(x.span, ch)?"
    },
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:391:43:391:75",
        "match_str": "self.case_fold_char(x.span, ch)?",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/translate.rs:392:21:392:25": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:392:29:392:47"
          },
          "regex-syntax/src/hir/translate.rs:393:21:393:31": {
            "pat": {
              "pat_str": "Some(expr)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:393:35:393:66"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:389:42:389:72": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:389:42:389:72",
        "match_str": "self.ast_literal_to_scalar(x)?",
        "match_kind": {
          "Enum": [
            "Left",
            "Right"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/translate.rs:391:17:391:33": {
            "pat": {
              "pat_str": "Either::Left(ch)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:391:37:394:18"
          },
          "regex-syntax/src/hir/translate.rs:390:17:390:36": {
            "pat": {
              "pat_str": "Either::Right(byte)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:390:40:390:60"
          }
        }
      }
    },
    {
      "Try": "self.ast_literal_to_scalar(x)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:372:15:372:19": [
    {
      "Match": {
        "match_source": "regex-syntax/src/hir/translate.rs:372:15:372:19",
        "match_str": "*ast",
        "match_kind": {
          "Enum": [
            "Empty",
            "Flags",
            "Literal",
            "Dot",
            "Assertion",
            "ClassUnicode",
            "ClassPerl",
            "ClassBracketed",
            "Repetition",
            "Group",
            "Alternation",
            "Concat"
          ]
        },
        "arms": {
          "regex-syntax/src/hir/translate.rs:443:13:443:30": {
            "pat": {
              "pat_str": "Ast::Group(ref x)",
              "kind": {
                "Enum": 9
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:443:34:448:14"
          },
          "regex-syntax/src/hir/translate.rs:376:13:376:30": {
            "pat": {
              "pat_str": "Ast::Flags(ref x)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:376:34:388:14"
          },
          "regex-syntax/src/hir/translate.rs:399:13:399:34": {
            "pat": {
              "pat_str": "Ast::Assertion(ref x)",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:399:38:401:14"
          },
          "regex-syntax/src/hir/translate.rs:413:13:413:37": {
            "pat": {
              "pat_str": "Ast::ClassUnicode(ref x)",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:413:41:416:14"
          },
          "regex-syntax/src/hir/translate.rs:396:13:396:31": {
            "pat": {
              "pat_str": "Ast::Dot(ref span)",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:396:35:398:14"
          },
          "regex-syntax/src/hir/translate.rs:417:13:417:41": {
            "pat": {
              "pat_str": "Ast::ClassBracketed(ref ast)",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:417:45:437:14"
          },
          "regex-syntax/src/hir/translate.rs:438:13:438:35": {
            "pat": {
              "pat_str": "Ast::Repetition(ref x)",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:438:39:442:14"
          },
          "regex-syntax/src/hir/translate.rs:459:13:459:32": {
            "pat": {
              "pat_str": "Ast::Alternation(_)",
              "kind": {
                "Enum": 10
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:459:36:467:14"
          },
          "regex-syntax/src/hir/translate.rs:373:13:373:26": {
            "pat": {
              "pat_str": "Ast::Empty(_)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:373:30:375:14"
          },
          "regex-syntax/src/hir/translate.rs:402:13:402:34": {
            "pat": {
              "pat_str": "Ast::ClassPerl(ref x)",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:402:38:412:14"
          },
          "regex-syntax/src/hir/translate.rs:449:13:449:27": {
            "pat": {
              "pat_str": "Ast::Concat(_)",
              "kind": {
                "Enum": 11
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:449:31:458:14"
          },
          "regex-syntax/src/hir/translate.rs:389:13:389:32": {
            "pat": {
              "pat_str": "Ast::Literal(ref x)",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/hir/translate.rs:389:36:395:14"
          }
        }
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:404:31:404:62": [
    {
      "Try": "self.hir_perl_unicode_class(x)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:429:21:433:23": [
    {
      "Try": "self.bytes_fold_and_negate(\n                        &ast.span,\n                        ast.negated,\n                        &mut cls,\n                    )?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:403:20:403:42": [
    {
      "Bool": {
        "Other": "self.flags().unicode()"
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:461:23:461:59": [
    {
      "Bool": {
        "Other": "let Some(expr) = self.pop_alt_expr()"
      }
    }
  ],
  "regex-syntax/src/hir/translate.rs:397:42:397:63": [
    {
      "Try": "self.hir_dot(**span)?"
    }
  ],
  "regex-syntax/src/hir/translate.rs:418:20:418:42": [
    {
      "Bool": {
        "Other": "self.flags().unicode()"
      }
    }
  ]
}