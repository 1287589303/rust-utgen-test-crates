bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:9-1107:36)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:35)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:28)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:21)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:28)
      kind: _5 = ast::parse::ParserI::<'_, P>::char(move _6) -> [return: bb1, unwind: bb180]
  }
  preds []
  succs [bb1, bb180]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:27-1107:28)
  1: _4 = Eq(move _5, const '{')
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1107:17-1107:35)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:34-1107:35)
  1: _3 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:36-1107:36)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:35-1107:36)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:35-1107:36)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1108:13-1108:18)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1108:21-1108:25)
  6: _9 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1108:21-1108:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1108:21-1108:31)
      kind: _8 = ast::parse::ParserI::<'_, P>::pos(move _9) -> [return: bb4, unwind: bb180]
  }
  preds [bb1]
  succs [bb4, bb180]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:34-1107:35)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1107:9-1107:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1107:9-1107:36)
      kind: _7 = core::panicking::panic(const "assertion failed: self.char() == '{'") -> bb180
  }
  preds [bb1]
  succs [bb180]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1108:30-1108:31)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1108:13-1108:18)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:13-1109:16)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:36)
  5: _12 = &mut (_2.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
      kind: _11 = std::vec::Vec::<ast::Ast>::pop(move _12) -> [return: bb5, unwind: bb180]
  }
  preds [bb2]
  succs [bb5, bb180]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:41-1109:42)
  1: PlaceMention(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
  2: _13 = discriminant(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1109:19-1109:42)
      kind: switchInt(move _13) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1109:25-1109:42)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1110:13-1110:22)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:21-1113:79)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:21-1113:25)
  2: _17 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:21-1113:25)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:32-1113:43)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:32-1113:36)
  5: _19 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:32-1113:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1113:32-1113:43)
      kind: _18 = ast::parse::ParserI::<'_, P>::span(move _19) -> [return: bb11, unwind: bb179]
  }
  preds [bb5, bb7]
  succs [bb11, bb179]

bb9
  0: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1110:18-1110:21)
  1: _14 = move ((_11 as Some).0: ast::Ast)
    SourceInfo(regex-syntax/src/ast/parse.rs:1110:18-1110:21)
  2: _10 = move _14
    SourceInfo(regex-syntax/src/ast/parse.rs:1110:26-1110:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1110:28-1110:29)
      kind: drop(_14) -> [return: bb10, unwind: bb179]
  }
  preds [bb7]
  succs [bb10, bb179]

bb10
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1110:28-1110:29)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1109:13-1109:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1116:10-1116:11)
      kind: drop(_11) -> [return: bb14, unwind: bb178]
  }
  preds [bb9]
  succs [bb14, bb178]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:42-1113:43)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:45-1113:78)
  2: _20 = ast::ErrorKind::RepetitionMissing
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:45-1113:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1113:21-1113:79)
      kind: _16 = ast::parse::ParserI::<'_, P>::error(move _17, move _18, move _20) -> [return: bb12, unwind: bb179]
  }
  preds [bb8]
  succs [bb12, bb179]

bb12
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:78-1113:79)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:78-1113:79)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1113:78-1113:79)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1112:24-1114:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1114:17-1114:18)
      kind: drop(_16) -> [return: bb13, unwind: bb179]
  }
  preds [bb11]
  succs [bb13, bb179]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1114:17-1114:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1116:10-1116:11)
      kind: drop(_11) -> [return: bb151, unwind: bb180]
  }
  preds [bb12]
  succs [bb151, bb180]

bb14
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1116:10-1116:11)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1117:9-1124:10)
  2: PlaceMention(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1117:15-1117:18)
  3: _22 = discriminant(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1117:15-1117:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1117:9-1117:18)
      kind: switchInt(move _22) -> [0: bb16, 1: bb16, otherwise: bb15]
  }
  preds [bb10]
  succs [bb15, bb16, bb16]

bb15
  0: _21 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1123:18-1123:20)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1124:9-1124:10)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:9-1130:10)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:13-1125:39)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:13-1125:17)
  5: _31 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:13-1125:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1125:13-1125:39)
      kind: _30 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _31) -> [return: bb21, unwind: bb178]
  }
  preds [bb14, bb16]
  succs [bb21, bb178]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1118:13-1118:42)
      kind: falseEdge -> [real: bb17, imaginary: bb15]
  }
  preds [bb14, bb14]
  succs [bb15, bb17]

bb17
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:21-1120:79)
  1: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:21-1120:25)
  2: _25 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:21-1120:25)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:32-1120:43)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:32-1120:36)
  5: _27 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:32-1120:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1120:32-1120:43)
      kind: _26 = ast::parse::ParserI::<'_, P>::span(move _27) -> [return: bb18, unwind: bb178]
  }
  preds [bb16]
  succs [bb18, bb178]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:42-1120:43)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:45-1120:78)
  2: _28 = ast::ErrorKind::RepetitionMissing
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:45-1120:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1120:21-1120:79)
      kind: _24 = ast::parse::ParserI::<'_, P>::error(move _25, move _26, move _28) -> [return: bb19, unwind: bb178]
  }
  preds [bb17]
  succs [bb19, bb178]

bb19
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:78-1120:79)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:78-1120:79)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1120:78-1120:79)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1119:24-1121:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1121:17-1121:18)
      kind: drop(_24) -> [return: bb20, unwind: bb178]
  }
  preds [bb18]
  succs [bb20, bb178]

bb20
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1121:17-1121:18)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1124:9-1124:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb19]
  succs [bb150]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1125:13-1125:39)
      kind: switchInt(move _30) -> [0: bb23, otherwise: bb22]
  }
  preds [bb15]
  succs [bb22, bb23]

bb22
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:38-1125:39)
  1: _29 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1130:10-1130:10)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1130:9-1130:10)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1130:9-1130:10)
  4: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1131:13-1131:24)
  5: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1132:13-1132:33)
  6: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1132:13-1132:17)
  7: _42 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1132:13-1132:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1132:13-1132:33)
      kind: _41 = ast::parse::ParserI::<'_, P>::parse_decimal(move _42) -> [return: bb28, unwind: bb178]
  }
  preds [bb21]
  succs [bb28, bb178]

bb23
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1125:38-1125:39)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1126:24-1129:14)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1126:24-1126:28)
  3: _34 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1126:24-1126:28)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:17-1127:45)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:27-1127:32)
  6: _36 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:27-1127:32)
  7: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:34-1127:44)
  8: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:34-1127:38)
  9: _38 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:34-1127:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1127:34-1127:44)
      kind: _37 = ast::parse::ParserI::<'_, P>::pos(move _38) -> [return: bb24, unwind: bb178]
  }
  preds [bb21]
  succs [bb24, bb178]

bb24
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:43-1127:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1127:17-1127:45)
      kind: _35 = ast::Span::new(move _36, move _37) -> [return: bb25, unwind: bb178]
  }
  preds [bb23]
  succs [bb25, bb178]

bb25
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:44-1127:45)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1127:44-1127:45)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1128:17-1128:56)
  3: _39 = ast::ErrorKind::RepetitionCountUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:1128:17-1128:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1126:24-1129:14)
      kind: _33 = ast::parse::ParserI::<'_, P>::error(move _34, move _35, move _39) -> [return: bb26, unwind: bb178]
  }
  preds [bb24]
  succs [bb26, bb178]

bb26
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1129:13-1129:14)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1129:13-1129:14)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1129:13-1129:14)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1126:20-1129:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1129:14-1129:15)
      kind: drop(_33) -> [return: bb27, unwind: bb178]
  }
  preds [bb25]
  succs [bb27, bb178]

bb27
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1129:14-1129:15)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1130:9-1130:10)
  2: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1130:9-1130:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb26]
  succs [bb150]

bb28
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:1132:32-1132:33)
  1: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1133:13-1133:41)
  2: _43 = ast::ErrorKind::DecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1133:13-1133:41)
  3: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1134:13-1134:56)
  4: _44 = ast::ErrorKind::RepetitionCountDecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1134:13-1134:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1131:27-1135:10)
      kind: _40 = ast::parse::specialize_err::<u32>(move _41, move _43, move _44) -> [return: bb29, unwind: bb177]
  }
  preds [bb22]
  succs [bb29, bb177]

bb29
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1135:9-1135:10)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1135:9-1135:10)
  2: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1135:9-1135:10)
  3: FakeRead(ForLet(None), _40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1131:13-1131:24)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:9-1141:10)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:12-1136:25)
  6: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:12-1136:16)
  7: _47 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:12-1136:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1136:12-1136:25)
      kind: _46 = ast::parse::ParserI::<'_, P>::is_eof(move _47) -> [return: bb30, unwind: bb176]
  }
  preds [bb28]
  succs [bb30, bb176]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1136:12-1136:25)
      kind: switchInt(move _46) -> [0: bb36, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb36]

bb31
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:24-1136:25)
  1: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1137:24-1140:14)
  2: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1137:24-1137:28)
  3: _50 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1137:24-1137:28)
  4: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:17-1138:45)
  5: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:27-1138:32)
  6: _52 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:27-1138:32)
  7: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:34-1138:44)
  8: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:34-1138:38)
  9: _54 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:34-1138:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1138:34-1138:44)
      kind: _53 = ast::parse::ParserI::<'_, P>::pos(move _54) -> [return: bb32, unwind: bb176]
  }
  preds [bb30]
  succs [bb32, bb176]

bb32
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:43-1138:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1138:17-1138:45)
      kind: _51 = ast::Span::new(move _52, move _53) -> [return: bb33, unwind: bb176]
  }
  preds [bb31]
  succs [bb33, bb176]

bb33
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:44-1138:45)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1138:44-1138:45)
  2: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1139:17-1139:56)
  3: _55 = ast::ErrorKind::RepetitionCountUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:1139:17-1139:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1137:24-1140:14)
      kind: _49 = ast::parse::ParserI::<'_, P>::error(move _50, move _51, move _55) -> [return: bb34, unwind: bb176]
  }
  preds [bb32]
  succs [bb34, bb176]

bb34
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1140:13-1140:14)
  1: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1140:13-1140:14)
  2: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1140:13-1140:14)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1137:20-1140:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1140:14-1140:15)
      kind: drop(_49) -> [return: bb35, unwind: bb176]
  }
  preds [bb33]
  succs [bb35, bb176]

bb35
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1140:14-1140:15)
  1: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1141:9-1141:10)
  2: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1141:9-1141:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb148
  }
  preds [bb34]
  succs [bb148]

bb36
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1136:24-1136:25)
  1: _45 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1141:10-1141:10)
  2: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1141:9-1141:10)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1141:9-1141:10)
  4: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:13-1142:18)
  5: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:42)
  6: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:35)
  7: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:28)
  8: _59 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:35)
      kind: _58 = ast::parse::ParserI::<'_, P>::char(move _59) -> [return: bb37, unwind: bb176]
  }
  preds [bb30]
  succs [bb37, bb176]

bb37
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:34-1142:35)
  1: _57 = Eq(move _58, const ',')
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1142:24-1142:42)
      kind: switchInt(move _57) -> [0: bb88, otherwise: bb38]
  }
  preds [bb36]
  succs [bb38, bb88]

bb38
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:41-1142:42)
  1: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:13-1148:14)
  2: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:17-1143:43)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:17-1143:21)
  4: _62 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:17-1143:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1143:17-1143:43)
      kind: _61 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _62) -> [return: bb39, unwind: bb176]
  }
  preds [bb37]
  succs [bb39, bb176]

bb39
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1143:17-1143:43)
      kind: switchInt(move _61) -> [0: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41]

bb40
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:42-1143:43)
  1: _60 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1148:14-1148:14)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1148:13-1148:14)
  3: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1148:13-1148:14)
  4: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:34)
  5: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:27)
  6: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:20)
  7: _73 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:27)
      kind: _72 = ast::parse::ParserI::<'_, P>::char(move _73) -> [return: bb46, unwind: bb176]
  }
  preds [bb39]
  succs [bb46, bb176]

bb41
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1143:42-1143:43)
  1: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1144:28-1147:18)
  2: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1144:28-1144:32)
  3: _65 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1144:28-1144:32)
  4: StorageLive(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:21-1145:49)
  5: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:31-1145:36)
  6: _67 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:31-1145:36)
  7: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:38-1145:48)
  8: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:38-1145:42)
  9: _69 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:38-1145:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1145:38-1145:48)
      kind: _68 = ast::parse::ParserI::<'_, P>::pos(move _69) -> [return: bb42, unwind: bb176]
  }
  preds [bb39]
  succs [bb42, bb176]

bb42
  0: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:47-1145:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1145:21-1145:49)
      kind: _66 = ast::Span::new(move _67, move _68) -> [return: bb43, unwind: bb176]
  }
  preds [bb41]
  succs [bb43, bb176]

bb43
  0: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:48-1145:49)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1145:48-1145:49)
  2: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1146:21-1146:60)
  3: _70 = ast::ErrorKind::RepetitionCountUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:1146:21-1146:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1144:28-1147:18)
      kind: _64 = ast::parse::ParserI::<'_, P>::error(move _65, move _66, move _70) -> [return: bb44, unwind: bb176]
  }
  preds [bb42]
  succs [bb44, bb176]

bb44
  0: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1147:17-1147:18)
  1: StorageDead(_66)
    SourceInfo(regex-syntax/src/ast/parse.rs:1147:17-1147:18)
  2: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1147:17-1147:18)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1144:24-1147:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1147:18-1147:19)
      kind: drop(_64) -> [return: bb45, unwind: bb176]
  }
  preds [bb43]
  succs [bb45, bb176]

bb45
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1147:18-1147:19)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1148:13-1148:14)
  2: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1148:13-1148:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb44]
  succs [bb146]

bb46
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:26-1149:27)
  1: _71 = Ne(move _72, const '}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1149:16-1149:34)
      kind: switchInt(move _71) -> [0: bb79, otherwise: bb47]
  }
  preds [bb40]
  succs [bb47, bb79]

bb47
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:33-1149:34)
  1: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1150:21-1150:32)
  2: PlaceMention(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1150:41-1150:52)
  3: _76 = discriminant(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1150:41-1150:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1150:35-1150:52)
      kind: switchInt(move _76) -> [0: bb49, 1: bb50, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49, bb50]

bb48
  0: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:21-1162:24)
  1: _89 = move _40
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:21-1162:24)
  2: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  3: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:31)
  4: _91 = move _89
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
      kind: _90 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _91) -> [return: bb61, unwind: bb173]
  }
  preds [bb47, bb50, bb55, bb55]
  succs [bb61, bb173]

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1151:21-1151:26)
      kind: falseEdge -> [real: bb51, imaginary: bb50]
  }
  preds [bb47]
  succs [bb50, bb51]

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1152:21-1152:29)
      kind: falseEdge -> [real: bb52, imaginary: bb48]
  }
  preds [bb47, bb49]
  succs [bb48, bb52]

bb51
  0: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1151:24-1151:25)
  1: _77 = ((_40 as Ok).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1151:24-1151:25)
  2: _74 = _77
    SourceInfo(regex-syntax/src/ast/parse.rs:1151:30-1151:31)
  3: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1151:30-1151:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1151:30-1151:31)
      kind: goto -> bb69
  }
  preds [bb49]
  succs [bb69]

bb52
  0: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1152:25-1152:28)
  1: _79 = &((_40 as Err).0: ast::Error)
    SourceInfo(regex-syntax/src/ast/parse.rs:1152:25-1152:28)
  2: _75 = &fake shallow _40
    SourceInfo(regex-syntax/src/ast/parse.rs:1150:41-1150:52)
  3: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1154:75)
  4: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1153:36)
  5: _81 = &((*_79).0: ast::ErrorKind)
    SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1153:36)
  6: StorageLive(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:32-1154:75)
  7: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:32-1154:75)
  8: _83 = ast::ErrorKind::RepetitionCountDecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:32-1154:75)
  9: _82 = &_83
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:32-1154:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1154:75)
      kind: _80 = <ast::ErrorKind as core::cmp::PartialEq>::eq(move _81, move _82) -> [return: bb53, unwind: bb176]
  }
  preds [bb50]
  succs [bb53, bb176]

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1154:75)
      kind: switchInt(move _80) -> [0: bb55, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55]

bb54
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  2: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  3: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  4: FakeRead(ForMatchGuard, _75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  5: FakeRead(ForGuardBinding, _79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  6: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1152:25-1152:28)
  7: _78 = move ((_40 as Err).0: ast::Error)
    SourceInfo(regex-syntax/src/ast/parse.rs:1152:25-1152:28)
  8: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:57)
  9: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:41)
  10: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:32)
  11: _86 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:41)
      kind: _85 = ast::parse::ParserI::<'_, P>::parser(move _86) -> [return: bb56, unwind: bb175]
  }
  preds [bb53]
  succs [bb56, bb175]

bb55
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  1: StorageDead(_82)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  2: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  3: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1154:74-1154:75)
  4: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1153:28-1154:75)
      kind: falseEdge -> [real: bb48, imaginary: bb48]
  }
  preds [bb53]
  succs [bb48, bb48]

bb56
  0: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:40-1156:41)
  1: _84 = ((*_85).5: bool)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1156:28-1156:57)
      kind: switchInt(move _84) -> [0: bb58, otherwise: bb57]
  }
  preds [bb54]
  succs [bb57, bb58]

bb57
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:56-1156:57)
  1: _74 = const 0_u32
    SourceInfo(regex-syntax/src/ast/parse.rs:1157:29-1157:30)
  2: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1160:25-1160:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
      kind: drop(_78) -> [return: bb60, unwind: bb176]
  }
  preds [bb56]
  succs [bb60, bb176]

bb58
  0: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1156:56-1156:57)
  1: StorageLive(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1159:40-1159:43)
  2: _88 = move _78
    SourceInfo(regex-syntax/src/ast/parse.rs:1159:40-1159:43)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1159:36-1159:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1159:43-1159:44)
      kind: drop(_88) -> [return: bb59, unwind: bb175]
  }
  preds [bb56]
  succs [bb59, bb175]

bb59
  0: StorageDead(_88)
    SourceInfo(regex-syntax/src/ast/parse.rs:1159:43-1159:44)
  1: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1160:25-1160:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
      kind: drop(_78) -> [return: bb143, unwind: bb176]
  }
  preds [bb58]
  succs [bb143, bb176]

bb60
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
      kind: goto -> bb69
  }
  preds [bb57]
  succs [bb69]

bb61
  0: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  1: PlaceMention(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  2: _92 = discriminant(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
      kind: switchInt(move _92) -> [0: bb64, 1: bb63, otherwise: bb62]
  }
  preds [bb48]
  succs [bb62, bb63, bb64]

bb62
  0: FakeRead(ForMatchedPlace(None), _90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
      kind: unreachable
  }
  preds [bb61]
  succs []

bb63
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: falseEdge -> [real: bb65, imaginary: bb64]
  }
  preds [bb61]
  succs [bb64, bb65]

bb64
  0: StorageLive(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  1: _96 = ((_90 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  2: _74 = _96
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
  3: StorageDead(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_90) -> [return: bb67, unwind: bb174]
  }
  preds [bb61, bb63]
  succs [bb67, bb174]

bb65
  0: StorageLive(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  1: _93 = move ((_90 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  2: StorageLive(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  3: _95 = move _93
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:28-1162:32)
      kind: _0 = <core::result::Result<ast::Concat, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _95) -> [return: bb66, unwind: bb170]
  }
  preds [bb63]
  succs [bb66, bb170]

bb66
  0: StorageDead(_95)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_93) -> [return: bb140, unwind: bb172]
  }
  preds [bb65]
  succs [bb140, bb172]

bb67
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_89) -> [return: bb68, unwind: bb176]
  }
  preds [bb64]
  succs [bb68, bb176]

bb68
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: goto -> bb69
  }
  preds [bb67]
  succs [bb69]

bb69
  0: FakeRead(ForLet(None), _74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1150:21-1150:32)
  1: StorageLive(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:21-1164:30)
  2: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  3: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:18)
  4: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1165:21-1165:41)
  5: StorageLive(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1165:21-1165:25)
  6: _101 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1165:21-1165:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1165:21-1165:41)
      kind: _100 = ast::parse::ParserI::<'_, P>::parse_decimal(move _101) -> [return: bb70, unwind: bb176]
  }
  preds [bb51, bb60, bb68]
  succs [bb70, bb176]

bb70
  0: StorageDead(_101)
    SourceInfo(regex-syntax/src/ast/parse.rs:1165:40-1165:41)
  1: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1166:21-1166:49)
  2: _102 = ast::ErrorKind::DecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1166:21-1166:49)
  3: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1167:21-1167:64)
  4: _103 = ast::ErrorKind::RepetitionCountDecimalEmpty
    SourceInfo(regex-syntax/src/ast/parse.rs:1167:21-1167:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:18)
      kind: _99 = ast::parse::specialize_err::<u32>(move _100, move _102, move _103) -> [return: bb71, unwind: bb169]
  }
  preds [bb69]
  succs [bb71, bb169]

bb71
  0: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:17-1168:18)
  1: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:17-1168:18)
  2: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:17-1168:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
      kind: _98 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _99) -> [return: bb72, unwind: bb168]
  }
  preds [bb70]
  succs [bb72, bb168]

bb72
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  1: PlaceMention(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  2: _104 = discriminant(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
      kind: switchInt(move _104) -> [0: bb75, 1: bb74, otherwise: bb73]
  }
  preds [bb71]
  succs [bb73, bb74, bb75]

bb73
  0: FakeRead(ForMatchedPlace(None), _98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
      kind: unreachable
  }
  preds [bb72]
  succs []

bb74
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
      kind: falseEdge -> [real: bb76, imaginary: bb75]
  }
  preds [bb72]
  succs [bb75, bb76]

bb75
  0: StorageLive(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  1: _108 = ((_98 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  2: _97 = _108
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
  3: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  4: FakeRead(ForLet(None), _97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1164:21-1164:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:19-1168:20)
      kind: drop(_98) -> [return: bb78, unwind: bb176]
  }
  preds [bb72, bb74]
  succs [bb78, bb176]

bb76
  0: StorageLive(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  1: _105 = move ((_98 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  2: StorageLive(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  3: _107 = move _105
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1164:33-1168:19)
      kind: _0 = <core::result::Result<ast::Concat, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _107) -> [return: bb77, unwind: bb165]
  }
  preds [bb74]
  succs [bb77, bb165]

bb77
  0: StorageDead(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
      kind: drop(_105) -> [return: bb138, unwind: bb167]
  }
  preds [bb76]
  succs [bb138, bb167]

bb78
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:19-1168:20)
  1: StorageLive(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:47-1169:58)
  2: _109 = _74
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:47-1169:58)
  3: StorageLive(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:60-1169:69)
  4: _110 = _97
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:60-1169:69)
  5: _56 = ast::RepetitionRange::Bounded(move _109, move _110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:17-1169:70)
  6: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:69-1169:70)
  7: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1169:69-1169:70)
  8: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1170:13-1170:14)
  9: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1170:13-1170:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1149:13-1172:14)
      kind: goto -> bb87
  }
  preds [bb75]
  succs [bb87]

bb79
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1149:33-1149:34)
  1: StorageLive(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  2: StorageLive(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  3: StorageLive(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:58)
  4: _113 = move _40
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
      kind: _112 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _113) -> [return: bb80, unwind: bb164]
  }
  preds [bb46]
  succs [bb80, bb164]

bb80
  0: StorageDead(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  1: PlaceMention(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  2: _114 = discriminant(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
      kind: switchInt(move _114) -> [0: bb83, 1: bb82, otherwise: bb81]
  }
  preds [bb79]
  succs [bb81, bb82, bb83]

bb81
  0: FakeRead(ForMatchedPlace(None), _112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
      kind: unreachable
  }
  preds [bb80]
  succs []

bb82
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
      kind: falseEdge -> [real: bb84, imaginary: bb83]
  }
  preds [bb80]
  succs [bb83, bb84]

bb83
  0: StorageLive(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  1: _118 = ((_112 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  2: _111 = _118
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
  3: StorageDead(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  4: _56 = ast::RepetitionRange::AtLeast(move _111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:17-1171:60)
  5: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:59-1171:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
      kind: drop(_112) -> [return: bb86, unwind: bb176]
  }
  preds [bb80, bb82]
  succs [bb86, bb176]

bb84
  0: StorageLive(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  1: _115 = move ((_112 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  2: StorageLive(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  3: _117 = move _115
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:47-1171:59)
      kind: _0 = <core::result::Result<ast::Concat, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _117) -> [return: bb85, unwind: bb161]
  }
  preds [bb82]
  succs [bb85, bb161]

bb85
  0: StorageDead(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
      kind: drop(_115) -> [return: bb136, unwind: bb163]
  }
  preds [bb84]
  succs [bb136, bb163]

bb86
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1149:13-1172:14)
      kind: goto -> bb87
  }
  preds [bb83]
  succs [bb87]

bb87
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1142:21-1175:10)
      kind: goto -> bb96
  }
  preds [bb78, bb86]
  succs [bb96]

bb88
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:41-1142:42)
  1: StorageLive(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  2: StorageLive(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  3: StorageLive(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:54)
  4: _121 = move _40
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:54)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
      kind: _120 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _121) -> [return: bb89, unwind: bb160]
  }
  preds [bb37]
  succs [bb89, bb160]

bb89
  0: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  1: PlaceMention(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  2: _122 = discriminant(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
      kind: switchInt(move _122) -> [0: bb92, 1: bb91, otherwise: bb90]
  }
  preds [bb88]
  succs [bb90, bb91, bb92]

bb90
  0: FakeRead(ForMatchedPlace(None), _120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
      kind: unreachable
  }
  preds [bb89]
  succs []

bb91
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
      kind: falseEdge -> [real: bb93, imaginary: bb92]
  }
  preds [bb89]
  succs [bb92, bb93]

bb92
  0: StorageLive(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  1: _126 = ((_120 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  2: _119 = _126
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
  3: StorageDead(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  4: _56 = ast::RepetitionRange::Exactly(move _119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:13-1174:56)
  5: StorageDead(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:55-1174:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
      kind: drop(_120) -> [return: bb95, unwind: bb176]
  }
  preds [bb89, bb91]
  succs [bb95, bb176]

bb93
  0: StorageLive(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  1: _123 = move ((_120 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  2: StorageLive(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  3: _125 = move _123
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:43-1174:55)
      kind: _0 = <core::result::Result<ast::Concat, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _125) -> [return: bb94, unwind: bb157]
  }
  preds [bb91]
  succs [bb94, bb157]

bb94
  0: StorageDead(_125)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
      kind: drop(_123) -> [return: bb134, unwind: bb159]
  }
  preds [bb93]
  succs [bb134, bb159]

bb95
  0: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1142:21-1175:10)
      kind: goto -> bb96
  }
  preds [bb92]
  succs [bb96]

bb96
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
  1: FakeRead(ForLet(None), _56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1142:13-1142:18)
  2: StorageLive(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:9-1182:10)
  3: StorageLive(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:12-1177:25)
  4: StorageLive(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:12-1177:16)
  5: _129 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:12-1177:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:12-1177:25)
      kind: _128 = ast::parse::ParserI::<'_, P>::is_eof(move _129) -> [return: bb97, unwind: bb176]
  }
  preds [bb87, bb95]
  succs [bb97, bb176]

bb97
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:12-1177:25)
      kind: switchInt(move _128) -> [0: bb99, otherwise: bb98]
  }
  preds [bb96]
  succs [bb98, bb99]

bb98
  0: StorageDead(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:24-1177:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:48-1182:10)
      kind: goto -> bb102
  }
  preds [bb97]
  succs [bb102]

bb99
  0: StorageDead(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:24-1177:25)
  1: StorageLive(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:47)
  2: StorageLive(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:40)
  3: StorageLive(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:33)
  4: _132 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:40)
      kind: _131 = ast::parse::ParserI::<'_, P>::char(move _132) -> [return: bb100, unwind: bb176]
  }
  preds [bb97]
  succs [bb100, bb176]

bb100
  0: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:39-1177:40)
  1: _130 = Ne(move _131, const '}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:29-1177:47)
      kind: switchInt(move _130) -> [0: bb107, otherwise: bb101]
  }
  preds [bb99]
  succs [bb101, bb107]

bb101
  0: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:46-1177:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1177:48-1182:10)
      kind: goto -> bb102
  }
  preds [bb100]
  succs [bb102]

bb102
  0: StorageLive(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1178:24-1181:14)
  1: StorageLive(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1178:24-1178:28)
  2: _135 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1178:24-1178:28)
  3: StorageLive(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:17-1179:45)
  4: StorageLive(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:27-1179:32)
  5: _137 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:27-1179:32)
  6: StorageLive(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:34-1179:44)
  7: StorageLive(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:34-1179:38)
  8: _139 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:34-1179:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1179:34-1179:44)
      kind: _138 = ast::parse::ParserI::<'_, P>::pos(move _139) -> [return: bb103, unwind: bb176]
  }
  preds [bb98, bb101]
  succs [bb103, bb176]

bb103
  0: StorageDead(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:43-1179:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1179:17-1179:45)
      kind: _136 = ast::Span::new(move _137, move _138) -> [return: bb104, unwind: bb176]
  }
  preds [bb102]
  succs [bb104, bb176]

bb104
  0: StorageDead(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:44-1179:45)
  1: StorageDead(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1179:44-1179:45)
  2: StorageLive(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1180:17-1180:56)
  3: _140 = ast::ErrorKind::RepetitionCountUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:1180:17-1180:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1178:24-1181:14)
      kind: _134 = ast::parse::ParserI::<'_, P>::error(move _135, move _136, move _140) -> [return: bb105, unwind: bb176]
  }
  preds [bb103]
  succs [bb105, bb176]

bb105
  0: StorageDead(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1181:13-1181:14)
  1: StorageDead(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1181:13-1181:14)
  2: StorageDead(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1181:13-1181:14)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1178:20-1181:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1181:14-1181:15)
      kind: drop(_134) -> [return: bb106, unwind: bb176]
  }
  preds [bb104]
  succs [bb106, bb176]

bb106
  0: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1181:14-1181:15)
  1: StorageDead(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  2: StorageDead(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  3: StorageDead(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb105]
  succs [bb147]

bb107
  0: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1177:46-1177:47)
  1: _127 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:10-1182:10)
  2: StorageDead(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  3: StorageDead(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  4: StorageDead(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1182:9-1182:10)
  5: StorageLive(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1184:13-1184:23)
  6: _141 = const true
    SourceInfo(regex-syntax/src/ast/parse.rs:1184:26-1184:30)
  7: FakeRead(ForLet(None), _141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1184:13-1184:23)
  8: StorageLive(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:9-1188:10)
  9: StorageLive(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:12-1185:38)
  10: StorageLive(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:12-1185:16)
  11: _144 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:12-1185:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:12-1185:38)
      kind: _143 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _144) -> [return: bb108, unwind: bb176]
  }
  preds [bb100]
  succs [bb108, bb176]

bb108
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:12-1185:38)
      kind: switchInt(move _143) -> [0: bb114, otherwise: bb109]
  }
  preds [bb107]
  succs [bb109, bb114]

bb109
  0: StorageDead(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:37-1185:38)
  1: StorageLive(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:60)
  2: StorageLive(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:53)
  3: StorageLive(_147)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:46)
  4: _147 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:53)
      kind: _146 = ast::parse::ParserI::<'_, P>::char(move _147) -> [return: bb110, unwind: bb176]
  }
  preds [bb108]
  succs [bb110, bb176]

bb110
  0: StorageDead(_147)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:52-1185:53)
  1: _145 = Eq(move _146, const '?')
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:42-1185:60)
      kind: switchInt(move _145) -> [0: bb113, otherwise: bb111]
  }
  preds [bb109]
  succs [bb111, bb113]

bb111
  0: StorageDead(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:59-1185:60)
  1: _141 = const false
    SourceInfo(regex-syntax/src/ast/parse.rs:1186:13-1186:27)
  2: StorageLive(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1187:13-1187:24)
  3: StorageLive(_149)
    SourceInfo(regex-syntax/src/ast/parse.rs:1187:13-1187:17)
  4: _149 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1187:13-1187:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1187:13-1187:24)
      kind: _148 = ast::parse::ParserI::<'_, P>::bump(move _149) -> [return: bb112, unwind: bb176]
  }
  preds [bb110]
  succs [bb112, bb176]

bb112
  0: StorageDead(_149)
    SourceInfo(regex-syntax/src/ast/parse.rs:1187:23-1187:24)
  1: StorageDead(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1187:24-1187:25)
  2: _142 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:61-1188:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:9-1188:10)
      kind: goto -> bb116
  }
  preds [bb111]
  succs [bb116]

bb113
  0: StorageDead(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:59-1185:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb115
  }
  preds [bb110]
  succs [bb115]

bb114
  0: StorageDead(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1185:37-1185:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb115
  }
  preds [bb108]
  succs [bb115]

bb115
  0: _142 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1188:10-1188:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1185:9-1188:10)
      kind: goto -> bb116
  }
  preds [bb113, bb114]
  succs [bb116]

bb116
  0: StorageDead(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1188:9-1188:10)
  1: StorageDead(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1188:9-1188:10)
  2: StorageDead(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1188:9-1188:10)
  3: StorageLive(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:13-1190:20)
  4: StorageLive(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:33-1190:38)
  5: _151 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:33-1190:38)
  6: StorageLive(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:40-1190:50)
  7: StorageLive(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:40-1190:44)
  8: _153 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:40-1190:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1190:40-1190:50)
      kind: _152 = ast::parse::ParserI::<'_, P>::pos(move _153) -> [return: bb117, unwind: bb176]
  }
  preds [bb112, bb115]
  succs [bb117, bb176]

bb117
  0: StorageDead(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:49-1190:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1190:23-1190:51)
      kind: _150 = ast::Span::new(move _151, move _152) -> [return: bb118, unwind: bb176]
  }
  preds [bb116]
  succs [bb118, bb176]

bb118
  0: StorageDead(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:50-1190:51)
  1: StorageDead(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:50-1190:51)
  2: FakeRead(ForLet(None), _150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1190:13-1190:20)
  3: StorageLive(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:9-1195:10)
  4: StorageLive(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:13-1191:29)
  5: StorageLive(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:13-1191:18)
  6: _156 = &_56
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:13-1191:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1191:13-1191:29)
      kind: _155 = ast::RepetitionRange::is_valid(move _156) -> [return: bb119, unwind: bb176]
  }
  preds [bb117]
  succs [bb119, bb176]

bb119
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1191:13-1191:29)
      kind: switchInt(move _155) -> [0: bb121, otherwise: bb120]
  }
  preds [bb118]
  succs [bb120, bb121]

bb120
  0: StorageDead(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:28-1191:29)
  1: _154 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1195:10-1195:10)
  2: StorageDead(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1195:9-1195:10)
  3: StorageDead(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1195:9-1195:10)
  4: StorageLive(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:9-1204:12)
  5: StorageLive(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:9-1196:20)
  6: _163 = &mut (_2.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:9-1196:20)
  7: StorageLive(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:26-1204:11)
  8: StorageLive(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:42-1204:10)
  9: StorageLive(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:50)
  10: StorageLive(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:29)
  11: StorageLive(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:29)
  12: StorageLive(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:22)
  13: _169 = &_10
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:29)
      kind: _168 = ast::Ast::span(move _169) -> [return: bb124, unwind: bb176]
  }
  preds [bb119]
  succs [bb124, bb176]

bb121
  0: StorageDead(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1191:28-1191:29)
  1: StorageLive(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:17-1193:76)
  2: StorageLive(_159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:17-1193:21)
  3: _159 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:17-1193:21)
  4: StorageLive(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:28-1193:35)
  5: _160 = _150
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:28-1193:35)
  6: StorageLive(_161)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:37-1193:75)
  7: _161 = ast::ErrorKind::RepetitionCountInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:37-1193:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1193:17-1193:76)
      kind: _158 = ast::parse::ParserI::<'_, P>::error(move _159, move _160, move _161) -> [return: bb122, unwind: bb176]
  }
  preds [bb119]
  succs [bb122, bb176]

bb122
  0: StorageDead(_161)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:75-1193:76)
  1: StorageDead(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:75-1193:76)
  2: StorageDead(_159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1193:75-1193:76)
  3: _0 = core::result::Result::<ast::Concat, ast::Error>::Err(move _158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1192:20-1194:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1194:13-1194:14)
      kind: drop(_158) -> [return: bb123, unwind: bb176]
  }
  preds [bb121]
  succs [bb123, bb176]

bb123
  0: StorageDead(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1194:13-1194:14)
  1: StorageDead(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1195:9-1195:10)
  2: StorageDead(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1195:9-1195:10)
  3: StorageDead(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  4: StorageDead(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb122]
  succs [bb147]

bb124
  0: _167 = (*_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:29)
  1: StorageDead(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:28-1197:29)
  2: StorageLive(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:39-1197:49)
  3: StorageLive(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:39-1197:43)
  4: _171 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:39-1197:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1197:39-1197:49)
      kind: _170 = ast::parse::ParserI::<'_, P>::pos(move _171) -> [return: bb125, unwind: bb176]
  }
  preds [bb120]
  succs [bb125, bb176]

bb125
  0: StorageDead(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:48-1197:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1197:19-1197:50)
      kind: _166 = ast::Span::with_end(move _167, move _170) -> [return: bb126, unwind: bb176]
  }
  preds [bb124]
  succs [bb126, bb176]

bb126
  0: StorageDead(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:49-1197:50)
  1: StorageDead(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1197:49-1197:50)
  2: StorageLive(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1198:17-1201:14)
  3: StorageLive(_173)
    SourceInfo(regex-syntax/src/ast/parse.rs:1199:23-1199:30)
  4: _173 = _150
    SourceInfo(regex-syntax/src/ast/parse.rs:1199:23-1199:30)
  5: StorageLive(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1200:23-1200:56)
  6: StorageLive(_175)
    SourceInfo(regex-syntax/src/ast/parse.rs:1200:50-1200:55)
  7: _175 = move _56
    SourceInfo(regex-syntax/src/ast/parse.rs:1200:50-1200:55)
  8: _174 = ast::RepetitionKind::Range(move _175)
    SourceInfo(regex-syntax/src/ast/parse.rs:1200:23-1200:56)
  9: StorageDead(_175)
    SourceInfo(regex-syntax/src/ast/parse.rs:1200:55-1200:56)
  10: _172 = ast::RepetitionOp { span: move _173, kind: move _174 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1198:17-1201:14)
  11: StorageDead(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1201:13-1201:14)
  12: StorageDead(_173)
    SourceInfo(regex-syntax/src/ast/parse.rs:1201:13-1201:14)
  13: StorageLive(_176)
    SourceInfo(regex-syntax/src/ast/parse.rs:1202:13-1202:19)
  14: _176 = _141
    SourceInfo(regex-syntax/src/ast/parse.rs:1202:13-1202:19)
  15: StorageLive(_177)
    SourceInfo(regex-syntax/src/ast/parse.rs:1203:18-1203:31)
  16: StorageLive(_178)
    SourceInfo(regex-syntax/src/ast/parse.rs:1203:27-1203:30)
  17: _178 = move _10
    SourceInfo(regex-syntax/src/ast/parse.rs:1203:27-1203:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1203:18-1203:31)
      kind: _177 = std::boxed::Box::<ast::Ast>::new(move _178) -> [return: bb127, unwind: bb156]
  }
  preds [bb125]
  succs [bb127, bb156]

bb127
  0: StorageDead(_178)
    SourceInfo(regex-syntax/src/ast/parse.rs:1203:30-1203:31)
  1: _165 = ast::Repetition { span: move _166, op: move _172, greedy: move _176, ast: move _177 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1196:42-1204:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1204:9-1204:10)
      kind: drop(_177) -> [return: bb128, unwind: bb155]
  }
  preds [bb126]
  succs [bb128, bb155]

bb128
  0: StorageDead(_177)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:9-1204:10)
  1: StorageDead(_176)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:9-1204:10)
  2: StorageDead(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:9-1204:10)
  3: StorageDead(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:9-1204:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1196:26-1204:11)
      kind: _164 = ast::Ast::repetition(move _165) -> [return: bb129, unwind: bb155]
  }
  preds [bb127]
  succs [bb129, bb155]

bb129
  0: StorageDead(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:10-1204:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1196:9-1204:12)
      kind: _162 = std::vec::Vec::<ast::Ast>::push(move _163, move _164) -> [return: bb130, unwind: bb154]
  }
  preds [bb128]
  succs [bb130, bb154]

bb130
  0: StorageDead(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:11-1204:12)
  1: StorageDead(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:11-1204:12)
  2: StorageDead(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:12-1204:13)
  3: StorageDead(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1204:12-1204:13)
  4: StorageLive(_179)
    SourceInfo(regex-syntax/src/ast/parse.rs:1205:12-1205:18)
  5: _179 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1205:12-1205:18)
  6: _0 = core::result::Result::<ast::Concat, ast::Error>::Ok(move _179)
    SourceInfo(regex-syntax/src/ast/parse.rs:1205:9-1205:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1205:18-1205:19)
      kind: drop(_179) -> [return: bb131, unwind: bb176]
  }
  preds [bb129]
  succs [bb131, bb176]

bb131
  0: StorageDead(_179)
    SourceInfo(regex-syntax/src/ast/parse.rs:1205:18-1205:19)
  1: StorageDead(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  2: StorageDead(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  3: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_40) -> [return: bb132, unwind: bb178]
  }
  preds [bb130]
  succs [bb132, bb178]

bb132
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_10) -> [return: bb133, unwind: bb180]
  }
  preds [bb131]
  succs [bb133, bb180]

bb133
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_2) -> [return: bb153, unwind: bb181]
  }
  preds [bb132]
  succs [bb153, bb181]

bb134
  0: StorageDead(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
  1: StorageDead(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1174:55-1174:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
      kind: drop(_120) -> [return: bb135, unwind: bb176]
  }
  preds [bb94]
  succs [bb135, bb176]

bb135
  0: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb134]
  succs [bb146]

bb136
  0: StorageDead(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
  1: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1171:59-1171:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
      kind: drop(_112) -> [return: bb137, unwind: bb176]
  }
  preds [bb85]
  succs [bb137, bb176]

bb137
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb145
  }
  preds [bb136]
  succs [bb145]

bb138
  0: StorageDead(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:19-1168:20)
      kind: drop(_98) -> [return: bb139, unwind: bb176]
  }
  preds [bb77]
  succs [bb139, bb176]

bb139
  0: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1168:19-1168:20)
  1: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1170:13-1170:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb144
  }
  preds [bb138]
  succs [bb144]

bb140
  0: StorageDead(_93)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_90) -> [return: bb141, unwind: bb174]
  }
  preds [bb66]
  succs [bb141, bb174]

bb141
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_89) -> [return: bb142, unwind: bb176]
  }
  preds [bb140]
  succs [bb142, bb176]

bb142
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb144
  }
  preds [bb141]
  succs [bb144]

bb143
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
  1: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb144
  }
  preds [bb59]
  succs [bb144]

bb144
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1170:13-1170:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb145
  }
  preds [bb139, bb142, bb143]
  succs [bb145]

bb145
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb137, bb144]
  succs [bb146]

bb146
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb45, bb135, bb145]
  succs [bb147]

bb147
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb148
  }
  preds [bb106, bb123, bb146]
  succs [bb148]

bb148
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_40) -> [return: bb149, unwind: bb178]
  }
  preds [bb35, bb147]
  succs [bb149, bb178]

bb149
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb150
  }
  preds [bb148]
  succs [bb150]

bb150
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_10) -> [return: bb152, unwind: bb180]
  }
  preds [bb20, bb27, bb149]
  succs [bb152, bb180]

bb151
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1116:10-1116:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb152
  }
  preds [bb13]
  succs [bb152]

bb152
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_2) -> [return: bb153, unwind: bb181]
  }
  preds [bb150, bb151]
  succs [bb153, bb181]

bb153
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:6-1206:6)
      kind: return
  }
  preds [bb133, bb152]
  succs []

bb154
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1204:11-1204:12)
      kind: drop(_164) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb129]
  succs [bb176]

bb155
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1204:10-1204:11)
      kind: drop(_165) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb127, bb128]
  succs [bb176]

bb156
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1203:30-1203:31)
      kind: drop(_178) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb126]
  succs [bb176]

bb157
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
      kind: drop(_125) -> [return: bb158, unwind terminate(cleanup)]
  }
  preds [bb93]
  succs [bb158]

bb158
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
      kind: drop(_123) -> [return: bb159, unwind terminate(cleanup)]
  }
  preds [bb157]
  succs [bb159]

bb159
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1175:9-1175:10)
      kind: drop(_120) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb94, bb158]
  succs [bb176]

bb160
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1174:54-1174:55)
      kind: drop(_121) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb88]
  succs [bb176]

bb161
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
      kind: drop(_117) -> [return: bb162, unwind terminate(cleanup)]
  }
  preds [bb84]
  succs [bb162]

bb162
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
      kind: drop(_115) -> [return: bb163, unwind terminate(cleanup)]
  }
  preds [bb161]
  succs [bb163]

bb163
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1172:13-1172:14)
      kind: drop(_112) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb85, bb162]
  succs [bb176]

bb164
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1171:58-1171:59)
      kind: drop(_113) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb79]
  succs [bb176]

bb165
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
      kind: drop(_107) -> [return: bb166, unwind terminate(cleanup)]
  }
  preds [bb76]
  succs [bb166]

bb166
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
      kind: drop(_105) -> [return: bb167, unwind terminate(cleanup)]
  }
  preds [bb165]
  succs [bb167]

bb167
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:19-1168:20)
      kind: drop(_98) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb77, bb166]
  succs [bb176]

bb168
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:18-1168:19)
      kind: drop(_99) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb71]
  succs [bb176]

bb169
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1168:17-1168:18)
      kind: drop(_100) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb70]
  succs [bb176]

bb170
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_95) -> [return: bb171, unwind terminate(cleanup)]
  }
  preds [bb65]
  succs [bb171]

bb171
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_93) -> [return: bb172, unwind terminate(cleanup)]
  }
  preds [bb170]
  succs [bb172]

bb172
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_90) -> [return: bb174, unwind terminate(cleanup)]
  }
  preds [bb66, bb171]
  succs [bb174]

bb173
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_91) -> [return: bb174, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb174]

bb174
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1162:31-1162:32)
      kind: drop(_89) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb64, bb140, bb172, bb173]
  succs [bb176]

bb175
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1161:21-1161:22)
      kind: drop(_78) -> [return: bb176, unwind terminate(cleanup)]
  }
  preds [bb54, bb58]
  succs [bb176]

bb176
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_40) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb29, bb31, bb32, bb33, bb34, bb36, bb38, bb40, bb41, bb42, bb43, bb44, bb52, bb57, bb59, bb67, bb69, bb75, bb83, bb92, bb96, bb99, bb102, bb103, bb104, bb105, bb107, bb109, bb111, bb116, bb117, bb118, bb120, bb121, bb122, bb124, bb125, bb130, bb134, bb136, bb138, bb141, bb154, bb155, bb156, bb159, bb160, bb163, bb164, bb167, bb168, bb169, bb174, bb175]
  succs [bb178]

bb177
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1135:9-1135:10)
      kind: drop(_41) -> [return: bb178, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb178]

bb178
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_10) -> [return: bb180, unwind terminate(cleanup)]
  }
  preds [bb10, bb15, bb17, bb18, bb19, bb22, bb23, bb24, bb25, bb26, bb131, bb148, bb176, bb177]
  succs [bb180]

bb179
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1116:10-1116:11)
      kind: drop(_11) -> [return: bb180, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb11, bb12]
  succs [bb180]

bb180
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1206:5-1206:6)
      kind: drop(_2) -> [return: bb181, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb4, bb13, bb132, bb150, bb178, bb179]
  succs [bb181]

bb181
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1103:5-1206:6)
      kind: resume
  }
  preds [bb133, bb152, bb180]
  succs []

