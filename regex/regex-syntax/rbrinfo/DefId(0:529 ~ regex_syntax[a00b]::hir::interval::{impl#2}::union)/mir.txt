bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:9-136:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:12-134:35)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:12-134:24)
  3: _5 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:12-134:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:12-134:35)
      kind: _4 = std::vec::Vec::<I>::is_empty(move _5) -> [return: bb1, unwind: bb14]
  }
  preds []
  succs [bb1, bb14]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:12-134:35)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:34-134:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:67-136:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:34-134:35)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:39-134:66)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:39-134:50)
  3: _7 = &((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:39-134:50)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:54-134:66)
  5: _8 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:54-134:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:39-134:66)
      kind: _6 = <std::vec::Vec<I> as core::cmp::PartialEq>::eq(move _7, move _8) -> [return: bb4, unwind: bb14]
  }
  preds [bb1]
  succs [bb4, bb14]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:39-134:66)
      kind: switchInt(move _6) -> [0: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:65-134:66)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:65-134:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:134:67-136:10)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:135:13-135:19)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  2: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:141:6-141:6)
      kind: goto -> bb13
  }
  preds [bb2, bb5]
  succs [bb13]

bb7
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:65-134:66)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/interval.rs:134:65-134:66)
  2: _3 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:136:10-136:10)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  4: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  5: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:136:9-136:10)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:9-138:42)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:9-138:20)
  8: _11 = &mut ((*_1).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:9-138:20)
  9: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:28-138:41)
  10: _12 = &((*_2).0: std::vec::Vec<I>)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:28-138:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:138:9-138:42)
      kind: _10 = <std::vec::Vec<I> as core::iter::Extend<&I>>::extend::<&std::vec::Vec<I>>(move _11, move _12) -> [return: bb8, unwind: bb14]
  }
  preds [bb4]
  succs [bb8, bb14]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:41-138:42)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:41-138:42)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:138:42-138:43)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:139:9-139:28)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:139:9-139:13)
  5: _14 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:139:9-139:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:139:9-139:28)
      kind: _13 = hir::interval::IntervalSet::<I>::canonicalize(move _14) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:139:27-139:28)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:139:28-139:29)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:50)
  3: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:34)
  4: _16 = ((*_1).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:34)
      kind: switchInt(move _16) -> [0: bb11, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11]

bb10
  0: _15 = ((*_2).1: bool)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:38-140:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:50)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb11
  0: _15 = const false
    SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:140:23-140:50)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:49-140:50)
  1: ((*_1).1: bool) = move _15
    SourceInfo(regex-syntax/src/hir/interval.rs:140:9-140:50)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:140:49-140:50)
  3: _0 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:133:53-141:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:141:6-141:6)
      kind: goto -> bb13
  }
  preds [bb10, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:141:6-141:6)
      kind: return
  }
  preds [bb6, bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:133:5-141:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8]
  succs []

