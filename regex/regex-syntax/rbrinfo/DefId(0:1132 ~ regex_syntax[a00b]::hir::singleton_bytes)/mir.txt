bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:3002:9-3002:23)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _2 = std::vec::Vec::<u8>::new() -> [return: bb1, unwind: bb26]
  }
  preds []
  succs [bb1, bb26]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-syntax/src/hir/mod.rs:3002:9-3002:23)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:20)
  5: _6 = &(*_1)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
      kind: _5 = core::slice::<impl [hir::Hir]>::iter(move _6) -> [return: bb2, unwind: bb25]
  }
  preds [bb0]
  succs [bb2, bb25]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:26-3003:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
      kind: _4 = <core::slice::Iter<'_, hir::Hir> as core::iter::IntoIterator>::into_iter(move _5) -> [return: bb3, unwind: bb25]
  }
  preds [bb1]
  succs [bb3, bb25]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:26-3003:27)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  3: _7 = move _4
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
      kind: falseUnwind -> [real: bb5, unwind: bb25]
  }
  preds [bb3, bb19]
  succs [bb5, bb25]

bb5
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  4: _12 = &mut _7
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  5: _11 = &mut (*_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
      kind: _10 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::next(move _11) -> [return: bb6, unwind: bb25]
  }
  preds [bb4]
  succs [bb6, bb25]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:26-3003:27)
  1: PlaceMention(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  2: _13 = discriminant(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
      kind: switchInt(move _13) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:16-3003:27)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:9-3003:12)
  1: _15 = ((_10 as Some).0: &hir::Hir)
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:9-3003:12)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:13-3004:20)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:30-3004:40)
  4: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:30-3004:33)
  5: _18 = &(*_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:30-3004:33)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3004:30-3004:40)
      kind: _17 = hir::Hir::kind(move _18) -> [return: bb11, unwind: bb25]
  }
  preds [bb6, bb8]
  succs [bb11, bb25]

bb10
  0: _3 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  2: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  3: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  4: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  6: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  7: StorageLive(_33)
    SourceInfo(regex-syntax/src/hir/mod.rs:3013:10-3013:20)
  8: _33 = move _2
    SourceInfo(regex-syntax/src/hir/mod.rs:3013:10-3013:20)
  9: _0 = core::option::Option::<std::vec::Vec<u8>>::Some(move _33)
    SourceInfo(regex-syntax/src/hir/mod.rs:3013:5-3013:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3013:20-3013:21)
      kind: drop(_33) -> [return: bb20, unwind: bb25]
  }
  preds [bb8]
  succs [bb20, bb25]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:39-3004:40)
  1: PlaceMention((*_17))
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:29-3004:40)
  2: _19 = discriminant((*_17))
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:29-3004:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3004:23-3004:40)
      kind: switchInt(move _19) -> [1: bb13, otherwise: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: _0 = core::option::Option::<std::vec::Vec<u8>>::None
    SourceInfo(regex-syntax/src/hir/mod.rs:3006:25-3006:29)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:3007:10-3007:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb11, bb13]
  succs [bb22]

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3005:13-3005:49)
      kind: falseEdge -> [real: bb14, imaginary: bb12]
  }
  preds [bb11]
  succs [bb12, bb14]

bb14
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/mod.rs:3005:38-3005:47)
  1: _20 = &((((*_17) as Literal).0: hir::Literal).0: std::boxed::Box<[u8]>)
    SourceInfo(regex-syntax/src/hir/mod.rs:3005:38-3005:47)
  2: _16 = _20
    SourceInfo(regex-syntax/src/hir/mod.rs:3005:53-3005:58)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/mod.rs:3005:57-3005:58)
  4: FakeRead(ForLet(None), _16)
    SourceInfo(regex-syntax/src/hir/mod.rs:3004:13-3004:20)
  5: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:3007:10-3007:11)
  6: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:9-3010:10)
  7: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:30)
  8: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:25)
  9: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:19)
  10: _25 = &(*(*_16))
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:25)
      kind: _24 = core::slice::<impl [u8]>::len(move _25) -> [return: bb15, unwind: bb25]
  }
  preds [bb13]
  succs [bb15, bb25]

bb15
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:24-3008:25)
  1: _23 = Ne(move _24, const 1_usize)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3008:12-3008:30)
      kind: switchInt(move _23) -> [0: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:29-3008:30)
  1: _0 = core::option::Option::<std::vec::Vec<u8>>::None
    SourceInfo(regex-syntax/src/hir/mod.rs:3009:20-3009:24)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/mod.rs:3010:9-3010:10)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/mod.rs:3010:9-3010:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb15]
  succs [bb22]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/mod.rs:3008:29-3008:30)
  1: _22 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:3010:10-3010:10)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/mod.rs:3010:9-3010:10)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/mod.rs:3010:9-3010:10)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:9-3011:36)
  5: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:9-3011:19)
  6: _28 = &mut _2
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:9-3011:19)
  7: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:25-3011:35)
  8: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:33-3011:34)
  9: _30 = const 0_usize
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:33-3011:34)
  10: _31 = Len((*(*_16)))
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:25-3011:35)
  11: _32 = Lt(_30, _31)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:25-3011:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3011:25-3011:35)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _30) -> [success: bb18, unwind: bb25]
  }
  preds [bb15]
  succs [bb18, bb25]

bb18
  0: _29 = (*(*_16))[_30]
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:25-3011:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3011:9-3011:36)
      kind: _27 = std::vec::Vec::<u8>::push(move _28, move _29) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:35-3011:36)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:35-3011:36)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:36-3011:37)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/mod.rs:3011:36-3011:37)
  4: _9 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:28-3012:6)
  5: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  6: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  7: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  8: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  9: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  10: _8 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3003:5-3012:6)
      kind: goto -> bb4
  }
  preds [bb18]
  succs [bb4]

bb20
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/hir/mod.rs:3013:20-3013:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:1-3014:2)
      kind: drop(_2) -> [return: bb21, unwind: bb26]
  }
  preds [bb10]
  succs [bb21, bb26]

bb21
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:3014:1-3014:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:2-3014:2)
      kind: goto -> bb24
  }
  preds [bb20]
  succs [bb24]

bb22
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  2: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  4: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  5: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  6: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  7: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:3012:5-3012:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:1-3014:2)
      kind: drop(_2) -> [return: bb23, unwind: bb26]
  }
  preds [bb12, bb16]
  succs [bb23, bb26]

bb23
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:3014:1-3014:2)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:2-3014:2)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:2-3014:2)
      kind: return
  }
  preds [bb21, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3014:1-3014:2)
      kind: drop(_2) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb4, bb5, bb9, bb10, bb14, bb17, bb18]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:3001:1-3014:2)
      kind: resume
  }
  preds [bb0, bb20, bb22, bb25]
  succs []

