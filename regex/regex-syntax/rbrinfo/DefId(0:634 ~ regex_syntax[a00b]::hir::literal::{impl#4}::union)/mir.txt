bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1220:13-1220:18)
  1: PlaceMention(((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1220:27-1220:41)
  2: _4 = discriminant(((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1220:27-1220:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1220:21-1220:41)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1220:27-1220:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1220:27-1220:41)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1221:13-1221:17)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:18-1227:30)
  1: _8 = &mut ((((*_2).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:18-1227:30)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:35-1227:39)
  3: _9 = &mut (*_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:35-1227:39)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:46-1227:48)
  5: _10 = core::ops::RangeFull
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:46-1227:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1227:35-1227:49)
      kind: _3 = std::vec::Vec::<hir::literal::Literal>::drain::<core::ops::RangeFull>(move _9, move _10) -> [return: bb6, unwind: bb18]
  }
  preds [bb0, bb2]
  succs [bb6, bb18]

bb4
  0: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1224:17-1224:37)
  1: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1224:17-1224:21)
  2: _7 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1224:17-1224:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1224:17-1224:37)
      kind: _6 = hir::literal::Seq::make_infinite(move _7) -> [return: bb5, unwind: bb18]
  }
  preds [bb2]
  succs [bb5, bb18]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1224:36-1224:37)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1224:37-1224:38)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1225:17-1225:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1225:17-1225:23)
      kind: goto -> bb14
  }
  preds [bb4]
  succs [bb14]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:48-1227:49)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:48-1227:49)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1227:48-1227:49)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1220:13-1220:18)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1229:13-1229:18)
  5: PlaceMention(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1229:27-1229:40)
  6: _12 = discriminant(((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1229:27-1229:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1229:21-1229:40)
      kind: switchInt(move _12) -> [0: bb8, 1: bb9, otherwise: bb7]
  }
  preds [bb3]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>))
    SourceInfo(regex-syntax/src/hir/literal.rs:1229:27-1229:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1229:27-1229:40)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1230:13-1230:17)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1231:18-1231:30)
  1: _14 = &mut ((((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>) as Some).0: std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1231:18-1231:30)
  2: _11 = move _14
    SourceInfo(regex-syntax/src/hir/literal.rs:1231:35-1231:39)
  3: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1231:38-1231:39)
  4: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1229:13-1229:18)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:9-1233:28)
  6: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:9-1233:14)
  7: _16 = &mut (*_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:9-1233:14)
  8: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:22-1233:27)
  9: _17 = move _3
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:22-1233:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1233:9-1233:28)
      kind: _15 = <std::vec::Vec<hir::literal::Literal> as core::iter::Extend<hir::literal::Literal>>::extend::<std::vec::Drain<'_, hir::literal::Literal>>(move _16, move _17) -> [return: bb11, unwind: bb16]
  }
  preds [bb6, bb8]
  succs [bb11, bb16]

bb10
  0: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1230:21-1230:27)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
      kind: drop(_3) -> [return: bb14, unwind: bb18]
  }
  preds [bb8]
  succs [bb14, bb18]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:27-1233:28)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:27-1233:28)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1233:28-1233:29)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1234:9-1234:21)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1234:9-1234:13)
  5: _19 = &mut (*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:1234:9-1234:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1234:9-1234:21)
      kind: _18 = hir::literal::Seq::dedup(move _19) -> [return: bb12, unwind: bb17]
  }
  preds [bb9]
  succs [bb12, bb17]

bb12
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:1234:20-1234:21)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:1234:21-1234:22)
  2: _0 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:1219:46-1235:6)
  3: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
      kind: drop(_3) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:6-1235:6)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:6-1235:6)
      kind: goto -> bb15
  }
  preds [bb5, bb10]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:6-1235:6)
      kind: return
  }
  preds [bb13, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1233:27-1233:28)
      kind: drop(_17) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1235:5-1235:6)
      kind: drop(_3) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb11, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1219:5-1235:6)
      kind: resume
  }
  preds [bb3, bb4, bb10, bb12, bb17]
  succs []

