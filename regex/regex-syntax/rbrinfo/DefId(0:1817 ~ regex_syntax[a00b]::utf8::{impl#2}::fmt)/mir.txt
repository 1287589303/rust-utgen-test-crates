bb0
  0: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:205:15-205:20)
  1: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/utf8.rs:205:15-205:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:205:9-205:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/utf8.rs:205:15-205:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:205:15-205:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:206:13-206:23)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:13-207:23)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:13-208:25)
      kind: falseEdge -> [real: bb17, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb17]

bb5
  0: StorageLive(_64)
    SourceInfo(regex-syntax/src/utf8.rs:209:18-209:23)
  1: _64 = &(((*_1) as Four).0: [utf8::Utf8Range; 4])
    SourceInfo(regex-syntax/src/utf8.rs:209:18-209:23)
  2: StorageLive(_65)
    SourceInfo(regex-syntax/src/utf8.rs:210:24-210:25)
  3: _65 = &mut (*_2)
    SourceInfo(regex-syntax/src/utf8.rs:210:24-210:25)
  4: StorageLive(_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  5: StorageLive(_67)
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  6: StorageLive(_68)
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  7: StorageLive(_69)
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  8: _69 = [const "", const "", const "", const ""]
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  9: _68 = &_69
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  10: _67 = &(*_68)
    SourceInfo(regex-syntax/src/utf8.rs:210:27-210:45)
  11: StorageLive(_70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  12: StorageLive(_71)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  13: StorageLive(_72)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  14: StorageLive(_73)
    SourceInfo(regex-syntax/src/utf8.rs:210:28-210:32)
  15: StorageLive(_74)
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  16: StorageLive(_75)
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  17: StorageLive(_76)
    SourceInfo(regex-syntax/src/utf8.rs:210:49-210:50)
  18: _76 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:210:49-210:50)
  19: _77 = Len((*_64))
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  20: _78 = Lt(_76, _77)
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
      kind: assert(move _78, "index out of bounds: the length is {} but the index is {}", move _77, _76) -> [success: bb26, unwind: bb37]
  }
  preds [bb0, bb4]
  succs [bb26, bb37]

bb6
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/utf8.rs:206:17-206:22)
  1: _4 = &(((*_1) as One).0: utf8::Utf8Range)
    SourceInfo(regex-syntax/src/utf8.rs:206:17-206:22)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/utf8.rs:206:34-206:35)
  3: _5 = &mut (*_2)
    SourceInfo(regex-syntax/src/utf8.rs:206:34-206:35)
  4: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  8: _9 = [const ""]
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  9: _8 = &_9
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  10: _7 = &(*_8)
    SourceInfo(regex-syntax/src/utf8.rs:206:37-206:43)
  11: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  12: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  13: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  14: StorageLive(_13)
    SourceInfo(regex-syntax/src/utf8.rs:206:38-206:42)
  15: StorageLive(_14)
    SourceInfo(regex-syntax/src/utf8.rs:206:45-206:46)
  16: StorageLive(_15)
    SourceInfo(regex-syntax/src/utf8.rs:206:45-206:46)
  17: _15 = &_4
    SourceInfo(regex-syntax/src/utf8.rs:206:45-206:46)
  18: _14 = &(*_15)
    SourceInfo(regex-syntax/src/utf8.rs:206:45-206:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:206:38-206:42)
      kind: _13 = core::fmt::rt::Argument::<'_>::new_debug::<&utf8::Utf8Range>(move _14) -> [return: bb7, unwind: bb37]
  }
  preds [bb2]
  succs [bb7, bb37]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/utf8.rs:206:41-206:42)
  1: _12 = [move _13]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  2: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  3: _11 = &_12
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  4: _10 = &(*_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
      kind: _6 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _7, move _10) -> [return: bb8, unwind: bb37]
  }
  preds [bb6]
  succs [bb8, bb37]

bb8
  0: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  1: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _5, move _6) -> [return: bb9, unwind: bb37]
  }
  preds [bb7]
  succs [bb9, bb37]

bb9
  0: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  1: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  3: StorageDead(_12)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  4: StorageDead(_11)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  5: StorageDead(_9)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  7: StorageDead(_4)
    SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:206:46-206:47)
      kind: goto -> bb36
  }
  preds [bb8]
  succs [bb36]

bb10
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/utf8.rs:207:17-207:22)
  1: _16 = &(((*_1) as Two).0: [utf8::Utf8Range; 2])
    SourceInfo(regex-syntax/src/utf8.rs:207:17-207:22)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/utf8.rs:207:34-207:35)
  3: _17 = &mut (*_2)
    SourceInfo(regex-syntax/src/utf8.rs:207:34-207:35)
  4: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  5: StorageLive(_19)
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  6: StorageLive(_20)
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  7: StorageLive(_21)
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  8: _21 = [const "", const ""]
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  9: _20 = &_21
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  10: _19 = &(*_20)
    SourceInfo(regex-syntax/src/utf8.rs:207:37-207:47)
  11: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  12: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  13: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  14: StorageLive(_25)
    SourceInfo(regex-syntax/src/utf8.rs:207:38-207:42)
  15: StorageLive(_26)
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  16: StorageLive(_27)
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  17: StorageLive(_28)
    SourceInfo(regex-syntax/src/utf8.rs:207:51-207:52)
  18: _28 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:207:51-207:52)
  19: _29 = Len((*_16))
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  20: _30 = Lt(_28, _29)
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
      kind: assert(move _30, "index out of bounds: the length is {} but the index is {}", move _29, _28) -> [success: bb11, unwind: bb37]
  }
  preds [bb3]
  succs [bb11, bb37]

bb11
  0: _27 = &(*_16)[_28]
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  1: _26 = &(*_27)
    SourceInfo(regex-syntax/src/utf8.rs:207:49-207:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:38-207:42)
      kind: _25 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _26) -> [return: bb12, unwind: bb37]
  }
  preds [bb10]
  succs [bb12, bb37]

bb12
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/utf8.rs:207:41-207:42)
  1: StorageLive(_31)
    SourceInfo(regex-syntax/src/utf8.rs:207:42-207:46)
  2: StorageLive(_32)
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  3: StorageLive(_33)
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  4: StorageLive(_34)
    SourceInfo(regex-syntax/src/utf8.rs:207:57-207:58)
  5: _34 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:207:57-207:58)
  6: _35 = Len((*_16))
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  7: _36 = Lt(_34, _35)
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
      kind: assert(move _36, "index out of bounds: the length is {} but the index is {}", move _35, _34) -> [success: bb13, unwind: bb37]
  }
  preds [bb11]
  succs [bb13, bb37]

bb13
  0: _33 = &(*_16)[_34]
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  1: _32 = &(*_33)
    SourceInfo(regex-syntax/src/utf8.rs:207:55-207:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:42-207:46)
      kind: _31 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _32) -> [return: bb14, unwind: bb37]
  }
  preds [bb12]
  succs [bb14, bb37]

bb14
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/utf8.rs:207:45-207:46)
  1: _24 = [move _25, move _31]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  2: StorageDead(_31)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  3: StorageDead(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  4: _23 = &_24
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  5: _22 = &(*_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
      kind: _18 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _19, move _22) -> [return: bb15, unwind: bb37]
  }
  preds [bb13]
  succs [bb15, bb37]

bb15
  0: StorageDead(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  1: StorageDead(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _17, move _18) -> [return: bb16, unwind: bb37]
  }
  preds [bb14]
  succs [bb16, bb37]

bb16
  0: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  1: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  3: StorageDead(_33)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  5: StorageDead(_27)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  6: StorageDead(_24)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  7: StorageDead(_23)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  8: StorageDead(_21)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  9: StorageDead(_20)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  10: StorageDead(_16)
    SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:207:59-207:60)
      kind: goto -> bb36
  }
  preds [bb15]
  succs [bb36]

bb17
  0: StorageLive(_37)
    SourceInfo(regex-syntax/src/utf8.rs:208:19-208:24)
  1: _37 = &(((*_1) as Three).0: [utf8::Utf8Range; 3])
    SourceInfo(regex-syntax/src/utf8.rs:208:19-208:24)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/utf8.rs:208:36-208:37)
  3: _38 = &mut (*_2)
    SourceInfo(regex-syntax/src/utf8.rs:208:36-208:37)
  4: StorageLive(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  5: StorageLive(_40)
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  6: StorageLive(_41)
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  7: StorageLive(_42)
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  8: _42 = [const "", const "", const ""]
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  9: _41 = &_42
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  10: _40 = &(*_41)
    SourceInfo(regex-syntax/src/utf8.rs:208:39-208:53)
  11: StorageLive(_43)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  12: StorageLive(_44)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  13: StorageLive(_45)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  14: StorageLive(_46)
    SourceInfo(regex-syntax/src/utf8.rs:208:40-208:44)
  15: StorageLive(_47)
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  16: StorageLive(_48)
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  17: StorageLive(_49)
    SourceInfo(regex-syntax/src/utf8.rs:208:57-208:58)
  18: _49 = const 0_usize
    SourceInfo(regex-syntax/src/utf8.rs:208:57-208:58)
  19: _50 = Len((*_37))
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  20: _51 = Lt(_49, _50)
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
      kind: assert(move _51, "index out of bounds: the length is {} but the index is {}", move _50, _49) -> [success: bb18, unwind: bb37]
  }
  preds [bb4]
  succs [bb18, bb37]

bb18
  0: _48 = &(*_37)[_49]
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  1: _47 = &(*_48)
    SourceInfo(regex-syntax/src/utf8.rs:208:55-208:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:40-208:44)
      kind: _46 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _47) -> [return: bb19, unwind: bb37]
  }
  preds [bb17]
  succs [bb19, bb37]

bb19
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/utf8.rs:208:43-208:44)
  1: StorageLive(_52)
    SourceInfo(regex-syntax/src/utf8.rs:208:44-208:48)
  2: StorageLive(_53)
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  3: StorageLive(_54)
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  4: StorageLive(_55)
    SourceInfo(regex-syntax/src/utf8.rs:208:63-208:64)
  5: _55 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:208:63-208:64)
  6: _56 = Len((*_37))
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  7: _57 = Lt(_55, _56)
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
      kind: assert(move _57, "index out of bounds: the length is {} but the index is {}", move _56, _55) -> [success: bb20, unwind: bb37]
  }
  preds [bb18]
  succs [bb20, bb37]

bb20
  0: _54 = &(*_37)[_55]
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  1: _53 = &(*_54)
    SourceInfo(regex-syntax/src/utf8.rs:208:61-208:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:44-208:48)
      kind: _52 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _53) -> [return: bb21, unwind: bb37]
  }
  preds [bb19]
  succs [bb21, bb37]

bb21
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/utf8.rs:208:47-208:48)
  1: StorageLive(_58)
    SourceInfo(regex-syntax/src/utf8.rs:208:48-208:52)
  2: StorageLive(_59)
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  3: StorageLive(_60)
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  4: StorageLive(_61)
    SourceInfo(regex-syntax/src/utf8.rs:208:69-208:70)
  5: _61 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:208:69-208:70)
  6: _62 = Len((*_37))
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  7: _63 = Lt(_61, _62)
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
      kind: assert(move _63, "index out of bounds: the length is {} but the index is {}", move _62, _61) -> [success: bb22, unwind: bb37]
  }
  preds [bb20]
  succs [bb22, bb37]

bb22
  0: _60 = &(*_37)[_61]
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  1: _59 = &(*_60)
    SourceInfo(regex-syntax/src/utf8.rs:208:67-208:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:48-208:52)
      kind: _58 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _59) -> [return: bb23, unwind: bb37]
  }
  preds [bb21]
  succs [bb23, bb37]

bb23
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/utf8.rs:208:51-208:52)
  1: _45 = [move _46, move _52, move _58]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  2: StorageDead(_58)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  3: StorageDead(_52)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  4: StorageDead(_46)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  5: _44 = &_45
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  6: _43 = &(*_44)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
      kind: _39 = core::fmt::Arguments::<'_>::new_v1::<3, 3>(move _40, move _43) -> [return: bb24, unwind: bb37]
  }
  preds [bb22]
  succs [bb24, bb37]

bb24
  0: StorageDead(_43)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  1: StorageDead(_40)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _38, move _39) -> [return: bb25, unwind: bb37]
  }
  preds [bb23]
  succs [bb25, bb37]

bb25
  0: StorageDead(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  1: StorageDead(_38)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  3: StorageDead(_60)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  4: StorageDead(_55)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  5: StorageDead(_54)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  6: StorageDead(_49)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  7: StorageDead(_48)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  8: StorageDead(_45)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  9: StorageDead(_44)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  10: StorageDead(_42)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  11: StorageDead(_41)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  12: StorageDead(_37)
    SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:208:71-208:72)
      kind: goto -> bb36
  }
  preds [bb24]
  succs [bb36]

bb26
  0: _75 = &(*_64)[_76]
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  1: _74 = &(*_75)
    SourceInfo(regex-syntax/src/utf8.rs:210:47-210:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:28-210:32)
      kind: _73 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _74) -> [return: bb27, unwind: bb37]
  }
  preds [bb5]
  succs [bb27, bb37]

bb27
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/utf8.rs:210:31-210:32)
  1: StorageLive(_79)
    SourceInfo(regex-syntax/src/utf8.rs:210:32-210:36)
  2: StorageLive(_80)
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  3: StorageLive(_81)
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  4: StorageLive(_82)
    SourceInfo(regex-syntax/src/utf8.rs:210:55-210:56)
  5: _82 = const 1_usize
    SourceInfo(regex-syntax/src/utf8.rs:210:55-210:56)
  6: _83 = Len((*_64))
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  7: _84 = Lt(_82, _83)
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
      kind: assert(move _84, "index out of bounds: the length is {} but the index is {}", move _83, _82) -> [success: bb28, unwind: bb37]
  }
  preds [bb26]
  succs [bb28, bb37]

bb28
  0: _81 = &(*_64)[_82]
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  1: _80 = &(*_81)
    SourceInfo(regex-syntax/src/utf8.rs:210:53-210:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:32-210:36)
      kind: _79 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _80) -> [return: bb29, unwind: bb37]
  }
  preds [bb27]
  succs [bb29, bb37]

bb29
  0: StorageDead(_80)
    SourceInfo(regex-syntax/src/utf8.rs:210:35-210:36)
  1: StorageLive(_85)
    SourceInfo(regex-syntax/src/utf8.rs:210:36-210:40)
  2: StorageLive(_86)
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  3: StorageLive(_87)
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  4: StorageLive(_88)
    SourceInfo(regex-syntax/src/utf8.rs:210:61-210:62)
  5: _88 = const 2_usize
    SourceInfo(regex-syntax/src/utf8.rs:210:61-210:62)
  6: _89 = Len((*_64))
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  7: _90 = Lt(_88, _89)
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
      kind: assert(move _90, "index out of bounds: the length is {} but the index is {}", move _89, _88) -> [success: bb30, unwind: bb37]
  }
  preds [bb28]
  succs [bb30, bb37]

bb30
  0: _87 = &(*_64)[_88]
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  1: _86 = &(*_87)
    SourceInfo(regex-syntax/src/utf8.rs:210:59-210:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:36-210:40)
      kind: _85 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _86) -> [return: bb31, unwind: bb37]
  }
  preds [bb29]
  succs [bb31, bb37]

bb31
  0: StorageDead(_86)
    SourceInfo(regex-syntax/src/utf8.rs:210:39-210:40)
  1: StorageLive(_91)
    SourceInfo(regex-syntax/src/utf8.rs:210:40-210:44)
  2: StorageLive(_92)
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  3: StorageLive(_93)
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  4: StorageLive(_94)
    SourceInfo(regex-syntax/src/utf8.rs:210:67-210:68)
  5: _94 = const 3_usize
    SourceInfo(regex-syntax/src/utf8.rs:210:67-210:68)
  6: _95 = Len((*_64))
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  7: _96 = Lt(_94, _95)
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
      kind: assert(move _96, "index out of bounds: the length is {} but the index is {}", move _95, _94) -> [success: bb32, unwind: bb37]
  }
  preds [bb30]
  succs [bb32, bb37]

bb32
  0: _93 = &(*_64)[_94]
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  1: _92 = &(*_93)
    SourceInfo(regex-syntax/src/utf8.rs:210:65-210:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:210:40-210:44)
      kind: _91 = core::fmt::rt::Argument::<'_>::new_debug::<utf8::Utf8Range>(move _92) -> [return: bb33, unwind: bb37]
  }
  preds [bb31]
  succs [bb33, bb37]

bb33
  0: StorageDead(_92)
    SourceInfo(regex-syntax/src/utf8.rs:210:43-210:44)
  1: _72 = [move _73, move _79, move _85, move _91]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  2: StorageDead(_91)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  3: StorageDead(_85)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  4: StorageDead(_79)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  5: StorageDead(_73)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  6: _71 = &_72
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  7: _70 = &(*_71)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
      kind: _66 = core::fmt::Arguments::<'_>::new_v1::<4, 4>(move _67, move _70) -> [return: bb34, unwind: bb37]
  }
  preds [bb32]
  succs [bb34, bb37]

bb34
  0: StorageDead(_70)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  1: StorageDead(_67)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _65, move _66) -> [return: bb35, unwind: bb37]
  }
  preds [bb33]
  succs [bb35, bb37]

bb35
  0: StorageDead(_66)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  1: StorageDead(_65)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  2: StorageDead(_94)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  3: StorageDead(_93)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  4: StorageDead(_88)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  5: StorageDead(_87)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  6: StorageDead(_82)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  7: StorageDead(_81)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  8: StorageDead(_76)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  9: StorageDead(_75)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  10: StorageDead(_72)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  11: StorageDead(_71)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  12: StorageDead(_69)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  13: StorageDead(_68)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  14: StorageDead(_64)
    SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:211:13-211:14)
      kind: goto -> bb36
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:213:6-213:6)
      kind: return
  }
  preds [bb9, bb16, bb25, bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/utf8.rs:203:5-213:6)
      kind: resume
  }
  preds [bb5, bb6, bb7, bb8, bb10, bb11, bb12, bb13, bb14, bb15, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb26, bb27, bb28, bb29, bb30, bb31, bb32, bb33, bb34]
  succs []

