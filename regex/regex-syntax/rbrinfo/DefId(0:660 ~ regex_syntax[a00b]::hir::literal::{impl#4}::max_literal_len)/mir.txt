bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:56)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:39)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:39)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:31)
  8: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:22)
  9: _10 = &((*_1).0: core::option::Option<std::vec::Vec<hir::literal::Literal>>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:31)
      kind: _9 = core::option::Option::<std::vec::Vec<hir::literal::Literal>>::as_ref(move _10) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:30-1599:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
      kind: _8 = <core::option::Option<&std::vec::Vec<hir::literal::Literal>> as core::ops::Try>::branch(move _9) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  1: PlaceMention(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  2: _11 = discriminant(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
      kind: switchInt(move _11) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  1: _15 = ((_8 as Continue).0: &std::vec::Vec<hir::literal::Literal>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  2: _7 = _15
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  4: _6 = &(*_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:39)
      kind: _5 = <std::vec::Vec<hir::literal::Literal> as core::ops::Deref>::deref(move _6) -> [return: bb8, unwind: bb13]
  }
  preds [bb2, bb4]
  succs [bb8, bb13]

bb6
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  1: _12 = ((_8 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  3: _14 = _12
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
      kind: _0 = <core::option::Option<usize> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _14) -> [return: bb7, unwind: bb13]
  }
  preds [bb4]
  succs [bb7, bb13]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:38-1599:39)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:55-1599:56)
  5: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:61-1599:62)
  6: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  7: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  8: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1600:6-1600:6)
      kind: goto -> bb12
  }
  preds [bb6]
  succs [bb12]

bb8
  0: _4 = &(*_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:32)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:31-1599:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:39)
      kind: _3 = core::slice::<impl [hir::literal::Literal]>::iter(move _4) -> [return: bb9, unwind: bb13]
  }
  preds [bb5]
  succs [bb9, bb13]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:38-1599:39)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:44-1599:55)
  2: _16 = {closure@regex-syntax/src/hir/literal.rs:1599:44: 1599:47}
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:44-1599:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:56)
      kind: _2 = <core::slice::Iter<'_, hir::literal::Literal> as core::iter::Iterator>::map::<usize, {closure@regex-syntax/src/hir/literal.rs:1599:44: 1599:47}>(move _3, move _16) -> [return: bb10, unwind: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:55-1599:56)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:55-1599:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1599:9-1599:62)
      kind: _0 = <core::iter::Map<core::slice::Iter<'_, hir::literal::Literal>, {closure@regex-syntax/src/hir/literal.rs:1599:44: 1599:47}> as core::iter::Iterator>::max(move _2) -> [return: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:1599:61-1599:62)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  3: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:1600:5-1600:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1600:6-1600:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1600:6-1600:6)
      kind: return
  }
  preds [bb7, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:1598:5-1600:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb9, bb10]
  succs []

