bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:20-2280:23)
  1: _3 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:20-2280:23)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:25-2280:29)
  3: _4 = move _1
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:25-2280:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2280:9-2280:30)
      kind: _0 = ast::visitor::visit::<ast::parse::NestLimiter<'_, '_, P>>(move _3, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:29-2280:30)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2280:29-2280:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2281:6-2281:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2279:5-2281:6)
      kind: resume
  }
  preds [bb0]
  succs []

