bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1438:15-1438:26)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1438:15-1438:19)
  2: _3 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1438:15-1438:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1438:15-1438:26)
      kind: _2 = ast::parse::ParserI::<'_, P>::char(move _3) -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1438:25-1438:26)
  1: PlaceMention(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1438:15-1438:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1438:9-1438:26)
      kind: switchInt(_2) -> [92: bb3, 46: bb4, 94: bb5, 36: bb6, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6]

bb2
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1461:13-1461:14)
  1: _27 = _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1461:13-1461:14)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1462:21-1462:24)
  3: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1462:46-1466:18)
  4: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1463:27-1463:43)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1463:27-1463:31)
  6: _31 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1463:27-1463:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1463:27-1463:43)
      kind: _30 = ast::parse::ParserI::<'_, P>::span_char(move _31) -> [return: bb24, unwind: bb33]
  }
  preds [bb1, bb6]
  succs [bb24, bb33]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1439:13-1439:17)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb7]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1440:13-1440:16)
      kind: falseEdge -> [real: bb9, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb9]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1445:13-1445:16)
      kind: falseEdge -> [real: bb14, imaginary: bb6]
  }
  preds [bb1, bb4]
  succs [bb6, bb14]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1453:13-1453:16)
      kind: falseEdge -> [real: bb19, imaginary: bb2]
  }
  preds [bb1, bb5]
  succs [bb2, bb19]

bb7
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1439:21-1439:25)
  1: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1439:21-1439:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1439:21-1439:40)
      kind: _0 = ast::parse::ParserI::<'_, P>::parse_escape(move _4) -> [return: bb8, unwind: bb33]
  }
  preds [bb3]
  succs [bb8, bb33]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1439:39-1439:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1439:39-1439:40)
      kind: goto -> bb28
  }
  preds [bb7]
  succs [bb28]

bb9
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:21-1441:24)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:42-1441:58)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:42-1441:46)
  3: _7 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:42-1441:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1441:42-1441:58)
      kind: _6 = ast::parse::ParserI::<'_, P>::span_char(move _7) -> [return: bb10, unwind: bb33]
  }
  preds [bb4]
  succs [bb10, bb33]

bb10
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:57-1441:58)
  1: _5 = ast::parse::Primitive::Dot(move _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:27-1441:59)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:58-1441:59)
  3: FakeRead(ForLet(None), _5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1441:21-1441:24)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1442:17-1442:28)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1442:17-1442:21)
  6: _9 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1442:17-1442:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1442:17-1442:28)
      kind: _8 = ast::parse::ParserI::<'_, P>::bump(move _9) -> [return: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1442:27-1442:28)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1442:28-1442:29)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1443:20-1443:23)
  3: _10 = move _5
    SourceInfo(regex-syntax/src/ast/parse.rs:1443:20-1443:23)
  4: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1443:17-1443:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1443:23-1443:24)
      kind: drop(_10) -> [return: bb12, unwind: bb32]
  }
  preds [bb10]
  succs [bb12, bb32]

bb12
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1443:23-1443:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1444:13-1444:14)
      kind: drop(_5) -> [return: bb13, unwind: bb33]
  }
  preds [bb11]
  succs [bb13, bb33]

bb13
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1444:13-1444:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1444:13-1444:14)
      kind: goto -> bb28
  }
  preds [bb12]
  succs [bb28]

bb14
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1446:21-1446:24)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1446:48-1449:18)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1447:27-1447:43)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1447:27-1447:31)
  4: _14 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1447:27-1447:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1447:27-1447:43)
      kind: _13 = ast::parse::ParserI::<'_, P>::span_char(move _14) -> [return: bb15, unwind: bb33]
  }
  preds [bb5]
  succs [bb15, bb33]

bb15
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1447:42-1447:43)
  1: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1448:27-1448:56)
  2: _15 = ast::AssertionKind::StartLine
    SourceInfo(regex-syntax/src/ast/parse.rs:1448:27-1448:56)
  3: _12 = ast::Assertion { span: move _13, kind: move _15 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1446:48-1449:18)
  4: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1449:17-1449:18)
  5: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1449:17-1449:18)
  6: _11 = ast::parse::Primitive::Assertion(move _12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1446:27-1449:19)
  7: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1449:18-1449:19)
  8: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1446:21-1446:24)
  9: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1450:17-1450:28)
  10: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1450:17-1450:21)
  11: _17 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1450:17-1450:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1450:17-1450:28)
      kind: _16 = ast::parse::ParserI::<'_, P>::bump(move _17) -> [return: bb16, unwind: bb31]
  }
  preds [bb14]
  succs [bb16, bb31]

bb16
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1450:27-1450:28)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1450:28-1450:29)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1451:20-1451:23)
  3: _18 = move _11
    SourceInfo(regex-syntax/src/ast/parse.rs:1451:20-1451:23)
  4: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1451:17-1451:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1451:23-1451:24)
      kind: drop(_18) -> [return: bb17, unwind: bb31]
  }
  preds [bb15]
  succs [bb17, bb31]

bb17
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1451:23-1451:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1452:13-1452:14)
      kind: drop(_11) -> [return: bb18, unwind: bb33]
  }
  preds [bb16]
  succs [bb18, bb33]

bb18
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1452:13-1452:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1452:13-1452:14)
      kind: goto -> bb28
  }
  preds [bb17]
  succs [bb28]

bb19
  0: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1454:21-1454:24)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1454:48-1457:18)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1455:27-1455:43)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1455:27-1455:31)
  4: _22 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1455:27-1455:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1455:27-1455:43)
      kind: _21 = ast::parse::ParserI::<'_, P>::span_char(move _22) -> [return: bb20, unwind: bb33]
  }
  preds [bb6]
  succs [bb20, bb33]

bb20
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1455:42-1455:43)
  1: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1456:27-1456:54)
  2: _23 = ast::AssertionKind::EndLine
    SourceInfo(regex-syntax/src/ast/parse.rs:1456:27-1456:54)
  3: _20 = ast::Assertion { span: move _21, kind: move _23 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1454:48-1457:18)
  4: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1457:17-1457:18)
  5: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1457:17-1457:18)
  6: _19 = ast::parse::Primitive::Assertion(move _20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1454:27-1457:19)
  7: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1457:18-1457:19)
  8: FakeRead(ForLet(None), _19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1454:21-1454:24)
  9: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1458:17-1458:28)
  10: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1458:17-1458:21)
  11: _25 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1458:17-1458:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1458:17-1458:28)
      kind: _24 = ast::parse::ParserI::<'_, P>::bump(move _25) -> [return: bb21, unwind: bb30]
  }
  preds [bb19]
  succs [bb21, bb30]

bb21
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1458:27-1458:28)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1458:28-1458:29)
  2: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1459:20-1459:23)
  3: _26 = move _19
    SourceInfo(regex-syntax/src/ast/parse.rs:1459:20-1459:23)
  4: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1459:17-1459:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1459:23-1459:24)
      kind: drop(_26) -> [return: bb22, unwind: bb30]
  }
  preds [bb20]
  succs [bb22, bb30]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1459:23-1459:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1460:13-1460:14)
      kind: drop(_19) -> [return: bb23, unwind: bb33]
  }
  preds [bb21]
  succs [bb23, bb33]

bb23
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:1460:13-1460:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1460:13-1460:14)
      kind: goto -> bb28
  }
  preds [bb22]
  succs [bb28]

bb24
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1463:42-1463:43)
  1: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1464:27-1464:53)
  2: _32 = ast::LiteralKind::Verbatim
    SourceInfo(regex-syntax/src/ast/parse.rs:1464:27-1464:53)
  3: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1465:21-1465:22)
  4: _33 = _27
    SourceInfo(regex-syntax/src/ast/parse.rs:1465:21-1465:22)
  5: _29 = ast::Literal { span: move _30, kind: move _32, c: move _33 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1462:46-1466:18)
  6: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1466:17-1466:18)
  7: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1466:17-1466:18)
  8: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1466:17-1466:18)
  9: _28 = ast::parse::Primitive::Literal(move _29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1462:27-1466:19)
  10: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1466:18-1466:19)
  11: FakeRead(ForLet(None), _28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1462:21-1462:24)
  12: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1467:17-1467:28)
  13: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1467:17-1467:21)
  14: _35 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1467:17-1467:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1467:17-1467:28)
      kind: _34 = ast::parse::ParserI::<'_, P>::bump(move _35) -> [return: bb25, unwind: bb29]
  }
  preds [bb2]
  succs [bb25, bb29]

bb25
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1467:27-1467:28)
  1: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1467:28-1467:29)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1468:20-1468:23)
  3: _36 = move _28
    SourceInfo(regex-syntax/src/ast/parse.rs:1468:20-1468:23)
  4: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1468:17-1468:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1468:23-1468:24)
      kind: drop(_36) -> [return: bb26, unwind: bb29]
  }
  preds [bb24]
  succs [bb26, bb29]

bb26
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1468:23-1468:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1469:13-1469:14)
      kind: drop(_28) -> [return: bb27, unwind: bb33]
  }
  preds [bb25]
  succs [bb27, bb33]

bb27
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1469:13-1469:14)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1469:13-1469:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1469:13-1469:14)
      kind: goto -> bb28
  }
  preds [bb26]
  succs [bb28]

bb28
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1471:5-1471:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1471:6-1471:6)
      kind: return
  }
  preds [bb8, bb13, bb18, bb23, bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1469:13-1469:14)
      kind: drop(_28) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb24, bb25]
  succs [bb33]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1460:13-1460:14)
      kind: drop(_19) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb20, bb21]
  succs [bb33]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1452:13-1452:14)
      kind: drop(_11) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb15, bb16]
  succs [bb33]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1444:13-1444:14)
      kind: drop(_5) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb10, bb11]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1437:5-1471:6)
      kind: resume
  }
  preds [bb0, bb2, bb7, bb9, bb12, bb14, bb17, bb19, bb22, bb26, bb29, bb30, bb31, bb32]
  succs []

