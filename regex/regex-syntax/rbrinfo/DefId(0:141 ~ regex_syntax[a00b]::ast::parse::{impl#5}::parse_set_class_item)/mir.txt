bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:31)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:23)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:16)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:23)
      kind: _3 = ast::parse::ParserI::<'_, P>::char(move _4) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:22-1992:23)
  1: _2 = Eq(move _3, const '\\')
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1992:12-1992:31)
      kind: switchInt(move _2) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:30-1992:31)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1993:13-1993:17)
  2: _5 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1993:13-1993:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1993:13-1993:32)
      kind: _0 = ast::parse::ParserI::<'_, P>::parse_escape(move _5) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1993:31-1993:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1992:9-2002:10)
      kind: goto -> bb10
  }
  preds [bb2]
  succs [bb10]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1992:30-1992:31)
  1: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1995:17-1995:18)
  2: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1995:40-1999:14)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1996:23-1996:39)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1996:23-1996:27)
  5: _9 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1996:23-1996:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1996:23-1996:39)
      kind: _8 = ast::parse::ParserI::<'_, P>::span_char(move _9) -> [return: bb5, unwind: bb12]
  }
  preds [bb1]
  succs [bb5, bb12]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1996:38-1996:39)
  1: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1997:23-1997:49)
  2: _10 = ast::LiteralKind::Verbatim
    SourceInfo(regex-syntax/src/ast/parse.rs:1997:23-1997:49)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1998:20-1998:31)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1998:20-1998:24)
  5: _12 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1998:20-1998:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1998:20-1998:31)
      kind: _11 = ast::parse::ParserI::<'_, P>::char(move _12) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1998:30-1998:31)
  1: _7 = ast::Literal { span: move _8, kind: move _10, c: move _11 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1995:40-1999:14)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1999:13-1999:14)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1999:13-1999:14)
  4: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1999:13-1999:14)
  5: _6 = ast::parse::Primitive::Literal(move _7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1995:21-1999:15)
  6: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1999:14-1999:15)
  7: FakeRead(ForLet(None), _6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1995:17-1995:18)
  8: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2000:13-2000:24)
  9: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2000:13-2000:17)
  10: _14 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:2000:13-2000:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2000:13-2000:24)
      kind: _13 = ast::parse::ParserI::<'_, P>::bump(move _14) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2000:23-2000:24)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:2000:24-2000:25)
  2: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2001:16-2001:17)
  3: _15 = move _6
    SourceInfo(regex-syntax/src/ast/parse.rs:2001:16-2001:17)
  4: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2001:13-2001:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2001:17-2001:18)
      kind: drop(_15) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2001:17-2001:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2002:9-2002:10)
      kind: drop(_6) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2002:9-2002:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1992:9-2002:10)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:2002:9-2002:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2003:6-2003:6)
      kind: return
  }
  preds [bb3, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2002:9-2002:10)
      kind: drop(_6) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb6, bb7]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1991:5-2003:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5, bb8, bb11]
  succs []

