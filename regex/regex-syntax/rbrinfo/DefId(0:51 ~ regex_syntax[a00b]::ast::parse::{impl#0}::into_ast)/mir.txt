bb0
  0: PlaceMention(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:55:15-55:19)
  1: _2 = discriminant(_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:55:15-55:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:55:9-55:19)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(regex-syntax/src/ast/parse.rs:55:15-55:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:55:15-55:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:56:13-56:36)
      kind: falseEdge -> [real: bb7, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb7]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:57:13-57:41)
      kind: falseEdge -> [real: bb9, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb9]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:58:13-58:33)
      kind: falseEdge -> [real: bb11, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb11]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:59:13-59:33)
      kind: falseEdge -> [real: bb13, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb13]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:60:32-60:35)
  1: _11 = move ((_1 as Unicode).0: ast::ClassUnicode)
    SourceInfo(regex-syntax/src/ast/parse.rs:60:32-60:35)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:60:59-60:62)
  3: _12 = move _11
    SourceInfo(regex-syntax/src/ast/parse.rs:60:59-60:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:60:40-60:63)
      kind: _0 = ast::Ast::class_unicode(move _12) -> [return: bb15, unwind: bb19]
  }
  preds [bb0, bb5]
  succs [bb15, bb19]

bb7
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:56:32-56:35)
  1: _3 = move ((_1 as Literal).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/parse.rs:56:32-56:35)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:56:53-56:56)
  3: _4 = move _3
    SourceInfo(regex-syntax/src/ast/parse.rs:56:53-56:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:56:40-56:57)
      kind: _0 = ast::Ast::literal(move _4) -> [return: bb8, unwind: bb21]
  }
  preds [bb2]
  succs [bb8, bb21]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:56:56-56:57)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:56:56-56:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:56:56-56:57)
      kind: goto -> bb17
  }
  preds [bb7]
  succs [bb17]

bb9
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:57:34-57:40)
  1: _5 = move ((_1 as Assertion).0: ast::Assertion)
    SourceInfo(regex-syntax/src/ast/parse.rs:57:34-57:40)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:57:60-57:66)
  3: _6 = move _5
    SourceInfo(regex-syntax/src/ast/parse.rs:57:60-57:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:57:45-57:67)
      kind: _0 = ast::Ast::assertion(move _6) -> [return: bb10, unwind: bb21]
  }
  preds [bb3]
  succs [bb10, bb21]

bb10
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:57:66-57:67)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:57:66-57:67)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:57:66-57:67)
      kind: goto -> bb17
  }
  preds [bb9]
  succs [bb17]

bb11
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:58:28-58:32)
  1: _7 = ((_1 as Dot).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:58:28-58:32)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:58:46-58:50)
  3: _8 = _7
    SourceInfo(regex-syntax/src/ast/parse.rs:58:46-58:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:58:37-58:51)
      kind: _0 = ast::Ast::dot(move _8) -> [return: bb12, unwind: bb21]
  }
  preds [bb4]
  succs [bb12, bb21]

bb12
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:58:50-58:51)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:58:50-58:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:58:50-58:51)
      kind: goto -> bb17
  }
  preds [bb11]
  succs [bb17]

bb13
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:59:29-59:32)
  1: _9 = move ((_1 as Perl).0: ast::ClassPerl)
    SourceInfo(regex-syntax/src/ast/parse.rs:59:29-59:32)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:59:53-59:56)
  3: _10 = move _9
    SourceInfo(regex-syntax/src/ast/parse.rs:59:53-59:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:59:37-59:57)
      kind: _0 = ast::Ast::class_perl(move _10) -> [return: bb14, unwind: bb21]
  }
  preds [bb5]
  succs [bb14, bb21]

bb14
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:59:56-59:57)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:59:56-59:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:59:56-59:57)
      kind: goto -> bb17
  }
  preds [bb13]
  succs [bb17]

bb15
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
      kind: drop(_11) -> [return: bb16, unwind: bb21]
  }
  preds [bb6]
  succs [bb16, bb21]

bb16
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:62:5-62:6)
      kind: drop(_1) -> [return: bb18, unwind: bb22]
  }
  preds [bb8, bb10, bb12, bb14, bb16]
  succs [bb18, bb22]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:62:6-62:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
      kind: drop(_12) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:60:62-60:63)
      kind: drop(_11) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:62:5-62:6)
      kind: drop(_1) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb7, bb9, bb11, bb13, bb15, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:54:5-62:6)
      kind: resume
  }
  preds [bb17, bb21]
  succs []

