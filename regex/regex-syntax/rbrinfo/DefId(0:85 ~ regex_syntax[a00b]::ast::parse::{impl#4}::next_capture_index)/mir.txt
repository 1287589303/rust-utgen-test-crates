bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:13-442:20)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:50)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:36)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:27)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:36)
      kind: _5 = ast::parse::ParserI::<'_, P>::parser(move _6) -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:35-442:36)
  1: _4 = &((*_5).1: core::cell::Cell<u32>)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:442:23-442:56)
      kind: _3 = core::cell::Cell::<u32>::get(move _4) -> [return: bb2, unwind: bb21]
  }
  preds [bb0]
  succs [bb2, bb21]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:55-442:56)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:13-442:20)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:442:56-442:57)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:13-443:14)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:11)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-443:39)
  7: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-443:24)
  8: _11 = _3
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-443:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-443:39)
      kind: _10 = core::num::<impl u32>::checked_add(move _11, const 1_u32) -> [return: bb3, unwind: bb21]
  }
  preds [bb1]
  succs [bb3, bb21]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:38-443:39)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  3: _13 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  5: _14 = &_2
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  6: _12 = {closure@regex-syntax/src/ast/parse.rs:443:51: 443:53} { self: move _13, span: move _14 }
    SourceInfo(regex-syntax/src/ast/parse.rs:443:51-445:10)
  7: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:52-443:53)
  8: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:52-443:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:11)
      kind: _9 = core::option::Option::<u32>::ok_or_else::<ast::Error, {closure@regex-syntax/src/ast/parse.rs:443:51: 443:53}>(move _10, move _12) -> [return: bb4, unwind: bb21]
  }
  preds [bb2]
  succs [bb4, bb21]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:10-445:11)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:10-445:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
      kind: _8 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _9) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  1: PlaceMention(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  2: _15 = discriminant(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
      kind: switchInt(move _15) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _8)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  1: _19 = ((_8 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  2: _7 = _19
    SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(regex-syntax/src/ast/parse.rs:443:13-443:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:12-445:13)
      kind: drop(_8) -> [return: bb11, unwind: bb21]
  }
  preds [bb5, bb7]
  succs [bb11, bb21]

bb9
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  1: _16 = move ((_8 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  3: _18 = move _16
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:443:17-445:12)
      kind: _0 = <core::result::Result<u32, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _18) -> [return: bb10, unwind: bb17]
  }
  preds [bb7]
  succs [bb10, bb17]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
      kind: drop(_16) -> [return: bb14, unwind: bb19]
  }
  preds [bb9]
  succs [bb14, bb19]

bb11
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:12-445:13)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:43)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:36)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:22)
  4: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:13)
  5: _23 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:22)
      kind: _22 = ast::parse::ParserI::<'_, P>::parser(move _23) -> [return: bb12, unwind: bb21]
  }
  preds [bb8]
  succs [bb12, bb21]

bb12
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:21-446:22)
  1: _21 = &((*_22).1: core::cell::Cell<u32>)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:36)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:41-446:42)
  3: _24 = _7
    SourceInfo(regex-syntax/src/ast/parse.rs:446:41-446:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:446:9-446:43)
      kind: _20 = core::cell::Cell::<u32>::set(move _21, move _24) -> [return: bb13, unwind: bb21]
  }
  preds [bb11]
  succs [bb13, bb21]

bb13
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:42-446:43)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:42-446:43)
  2: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:43-446:44)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:446:43-446:44)
  4: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:447:12-447:13)
  5: _25 = _7
    SourceInfo(regex-syntax/src/ast/parse.rs:447:12-447:13)
  6: _0 = core::result::Result::<u32, ast::Error>::Ok(move _25)
    SourceInfo(regex-syntax/src/ast/parse.rs:447:9-447:14)
  7: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:447:13-447:14)
  8: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:448:5-448:6)
  9: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:448:5-448:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:448:6-448:6)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:12-445:13)
      kind: drop(_8) -> [return: bb15, unwind: bb21]
  }
  preds [bb10]
  succs [bb15, bb21]

bb15
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:445:12-445:13)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:448:5-448:6)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:448:5-448:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:448:6-448:6)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:448:6-448:6)
      kind: return
  }
  preds [bb13, bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
      kind: drop(_18) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
      kind: drop(_16) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:12-445:13)
      kind: drop(_8) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb10, bb18]
  succs [bb21]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:445:11-445:12)
      kind: drop(_9) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:441:5-448:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb8, bb11, bb12, bb14, bb19, bb20]
  succs []

