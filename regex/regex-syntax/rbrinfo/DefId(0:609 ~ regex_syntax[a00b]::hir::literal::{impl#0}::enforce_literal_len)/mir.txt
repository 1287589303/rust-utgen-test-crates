bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:621:13-621:16)
  1: _3 = ((*_1).3: usize)
    SourceInfo(regex-syntax/src/hir/literal.rs:621:19-621:41)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:621:13-621:16)
  3: PlaceMention(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:622:15-622:24)
  4: _4 = discriminant(((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:622:15-622:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:622:9-622:24)
      kind: switchInt(move _4) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), ((*_1).0: hir::literal::ExtractKind))
    SourceInfo(regex-syntax/src/hir/literal.rs:622:15-622:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:622:15-622:24)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:623:13-623:32)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:624:36-624:39)
  1: _7 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:624:36-624:39)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:624:56-624:59)
  3: _8 = _3
    SourceInfo(regex-syntax/src/hir/literal.rs:624:56-624:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:624:36-624:60)
      kind: _0 = hir::literal::Seq::keep_last_bytes(move _7, move _8) -> [return: bb6, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb6, bb8]

bb4
  0: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:623:36-623:39)
  1: _5 = &mut (*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:623:36-623:39)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:623:57-623:60)
  3: _6 = _3
    SourceInfo(regex-syntax/src/hir/literal.rs:623:57-623:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:623:36-623:61)
      kind: _0 = hir::literal::Seq::keep_first_bytes(move _5, move _6) -> [return: bb5, unwind: bb8]
  }
  preds [bb2]
  succs [bb5, bb8]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:623:60-623:61)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:623:60-623:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:623:60-623:61)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:624:59-624:60)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:624:59-624:60)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:624:59-624:60)
      kind: goto -> bb7
  }
  preds [bb3]
  succs [bb7]

bb7
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:626:5-626:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:626:6-626:6)
      kind: return
  }
  preds [bb5, bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:620:5-626:6)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

