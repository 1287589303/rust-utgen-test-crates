bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1147:9-1150:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1147:15-1147:20)
  2: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1147:15-1147:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1147:9-1147:20)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/ast/mod.rs:1147:15-1147:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1147:15-1147:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1148:13-1148:34)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:32-1149:37)
  1: _7 = &(((*_1) as BinaryOp).0: ast::ClassSetBinaryOp)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:32-1149:37)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:42-1149:49)
  3: _8 = &((*_7).0: ast::Span)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:42-1149:49)
  4: _2 = &(*_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:42-1149:49)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:48-1149:49)
  6: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/mod.rs:1149:48-1149:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1149:48-1149:49)
      kind: goto -> bb6
  }
  preds [bb0, bb2]
  succs [bb6]

bb4
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:28-1148:33)
  1: _4 = &(((*_1) as Item).0: ast::ClassSetItem)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:28-1148:33)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:38-1148:46)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:38-1148:39)
  4: _6 = &(*_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:38-1148:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1148:38-1148:46)
      kind: _5 = ast::ClassSetItem::span(move _6) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: _2 = &(*_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:38-1148:46)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:45-1148:46)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:45-1148:46)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1148:45-1148:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1148:45-1148:46)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1147:9-1150:10)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/mod.rs:1151:5-1151:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1151:6-1151:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1146:5-1151:6)
      kind: resume
  }
  preds [bb4]
  succs []

