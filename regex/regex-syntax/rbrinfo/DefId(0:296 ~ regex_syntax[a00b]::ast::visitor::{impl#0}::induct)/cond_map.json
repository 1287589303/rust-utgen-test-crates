{
  "regex-syntax/src/ast/visitor.rs:273:35:273:52": [
    {
      "Bool": {
        "Other": "x.asts.is_empty()"
      }
    }
  ],
  "regex-syntax/src/ast/visitor.rs:277:40:277:57": [
    {
      "Bool": {
        "Other": "x.asts.is_empty()"
      }
    }
  ],
  "regex-syntax/src/ast/visitor.rs:268:17:268:46": [
    {
      "Try": "self.visit_class(x, visitor)?"
    }
  ],
  "regex-syntax/src/ast/visitor.rs:266:18:266:22": [
    {
      "Match": {
        "match_source": "regex-syntax/src/ast/visitor.rs:266:18:266:22",
        "match_str": "*ast",
        "match_kind": {
          "Enum": [
            "Empty",
            "Flags",
            "Literal",
            "Dot",
            "Assertion",
            "ClassUnicode",
            "ClassPerl",
            "ClassBracketed",
            "Repetition",
            "Group",
            "Alternation",
            "Concat"
          ]
        },
        "arms": {
          "regex-syntax/src/ast/visitor.rs:267:13:267:39": {
            "pat": {
              "pat_str": "Ast::ClassBracketed(ref x)",
              "kind": {
                "Enum": 7
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:267:43:270:14"
          },
          "regex-syntax/src/ast/visitor.rs:272:13:272:30": {
            "pat": {
              "pat_str": "Ast::Group(ref x)",
              "kind": {
                "Enum": 9
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:272:34:272:55"
          },
          "regex-syntax/src/ast/visitor.rs:271:13:271:35": {
            "pat": {
              "pat_str": "Ast::Repetition(ref x)",
              "kind": {
                "Enum": 8
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:271:39:271:65"
          },
          "regex-syntax/src/ast/visitor.rs:274:13:274:31": {
            "pat": {
              "pat_str": "Ast::Concat(ref x)",
              "kind": {
                "Enum": 11
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:274:35:276:14"
          },
          "regex-syntax/src/ast/visitor.rs:273:13:273:31": {
            "pat": {
              "pat_str": "Ast::Concat(ref x)",
              "kind": {
                "Enum": 11
              }
            },
            "guard": {
              "regex-syntax/src/ast/visitor.rs:273:35:273:52": [
                {
                  "Bool": {
                    "Other": "x.asts.is_empty()"
                  }
                }
              ]
            },
            "body_source": "regex-syntax/src/ast/visitor.rs:273:56:273:60"
          },
          "regex-syntax/src/ast/visitor.rs:278:13:278:36": {
            "pat": {
              "pat_str": "Ast::Alternation(ref x)",
              "kind": {
                "Enum": 10
              }
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:278:40:281:15"
          },
          "regex-syntax/src/ast/visitor.rs:282:13:282:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-syntax/src/ast/visitor.rs:282:18:282:22"
          },
          "regex-syntax/src/ast/visitor.rs:277:13:277:36": {
            "pat": {
              "pat_str": "Ast::Alternation(ref x)",
              "kind": {
                "Enum": 10
              }
            },
            "guard": {
              "regex-syntax/src/ast/visitor.rs:277:40:277:57": [
                {
                  "Bool": {
                    "Other": "x.asts.is_empty()"
                  }
                }
              ]
            },
            "body_source": "regex-syntax/src/ast/visitor.rs:277:61:277:65"
          }
        }
      }
    }
  ]
}