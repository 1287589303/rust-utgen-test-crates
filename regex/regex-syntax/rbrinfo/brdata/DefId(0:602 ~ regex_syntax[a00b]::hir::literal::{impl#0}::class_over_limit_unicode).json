{
  "name": "regex_syntax::hir::literal::{impl#0}::class_over_limit_unicode",
  "mod_info": {
    "name": "hir::literal",
    "loc": "regex-syntax/src/hir/mod.rs:42:1:42:17"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/literal.rs:532:5:541:6",
  "doc": "/// Returns true if the given Unicode class exceeds the configured limits\n/// on this extractor.\n",
  "code": [
    "fn class_over_limit_unicode(&self, cls: &hir::ClassUnicode) -> bool {",
    "    let mut count = 0;",
    "    for r in cls.iter() {",
    "        if count > self.limit_class {",
    "            return true;",
    "        }",
    "        count += r.len();",
    "    }",
    "    count > self.limit_class",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "r in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 534,
          "bound": null
        },
        {
          "cond": "count > self.limit_class",
          "norm": null,
          "value": "true",
          "line": 535,
          "bound": null
        }
      ],
      "ret": "true",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        10,
        14
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "r in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 534,
          "bound": null
        },
        {
          "cond": "count > self.limit_class",
          "norm": null,
          "value": "false",
          "line": 535,
          "bound": "count == self.limit_class"
        },
        {
          "cond": "r in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 534,
          "bound": null
        }
      ],
      "ret": "count > self.limit_class",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        11,
        12,
        13,
        3,
        4,
        5,
        7,
        9,
        14
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "r in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 534,
          "bound": null
        }
      ],
      "ret": "count > self.limit_class",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        14
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}