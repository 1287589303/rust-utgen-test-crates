{
  "name": "regex_syntax::ast::parse::{impl#4}::bump_and_bump_space",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/parse.rs:541:5:547:6",
  "doc": "/// Bump the parser, and if the `x` flag is enabled, bump through any\n/// subsequent spaces. Return true if and only if the parser is not at\n/// EOF.\n",
  "code": [
    "fn bump_and_bump_space(&self) -> bool {",
    "    if !self.bump() {",
    "        return false;",
    "    }",
    "    self.bump_space();",
    "    !self.is_eof()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 542,
          "bound": null
        }
      ],
      "ret": "!self.is_eof()",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 542,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        3,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}