{
  "name": "regex_syntax::hir::singleton_chars",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/mod.rs:2978:1:2996:2",
  "doc": "/// Given a sequence of HIR values where each value corresponds to a literal\n/// that is a single `char`, return that sequence of `char`s. Otherwise return\n/// None. No deduplication is done.\n",
  "code": [
    "fn singleton_chars(hirs: &[Hir]) -> Option<Vec<char>> {",
    "    let mut singletons = vec![];",
    "    for hir in hirs.iter() {",
    "        let literal = match *hir.kind() {",
    "            HirKind::Literal(Literal(ref bytes)) => bytes,",
    "            _ => return None,",
    "        };",
    "        let ch = match crate::debug::utf8_decode(literal) {",
    "            None => return None,",
    "            Some(Err(_)) => return None,",
    "            Some(Ok(ch)) => ch,",
    "        };",
    "        if literal.len() != ch.len_utf8() {",
    "            return None;",
    "        }",
    "        singletons.push(ch);",
    "    }",
    "    Some(singletons)",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 1,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 2980,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches _",
          "norm": null,
          "value": "true",
          "line": 2983,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "false",
          "line": 2982,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        32,
        33,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 2980,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches Some(Ok(ch)) or Some(Err(_))",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches Some(Ok(ch)) or Some(Err(_))",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches Some(Err(_))",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        30,
        31,
        32,
        33,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 2980,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches Some(Ok(ch)) or Some(Err(_))",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches None",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "literal.len() != ch.len_utf8()",
          "norm": "ch.len_utf8() != literal.len()",
          "value": "true",
          "line": 2990,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        18,
        20,
        23,
        24,
        25,
        31,
        32,
        33,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 2980,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches Some(Ok(ch)) or Some(Err(_))",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches None",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "literal.len() != ch.len_utf8()",
          "norm": "ch.len_utf8() != literal.len()",
          "value": "false",
          "line": 2990,
          "bound": null
        },
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 2980,
          "bound": null
        }
      ],
      "ret": "Some(singletons)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        18,
        20,
        23,
        24,
        26,
        27,
        4,
        5,
        6,
        8,
        10,
        28,
        29,
        34
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 2980,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 2981,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches None",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        },
        {
          "cond": "crate::debug::utf8_decode(literal) matches None",
          "norm": null,
          "value": "true",
          "line": 2985,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        17,
        21,
        30,
        31,
        32,
        33,
        34
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 2980,
          "bound": null
        }
      ],
      "ret": "Some(singletons)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        28,
        29,
        34
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}