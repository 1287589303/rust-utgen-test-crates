{
  "name": "regex_syntax::hir::literal::{impl#4}::keep_last_bytes",
  "mod_info": {
    "name": "hir::literal",
    "loc": "regex-syntax/src/hir/mod.rs:42:1:42:17"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/literal.rs:1517:5:1523:6",
  "doc": "/// Trims all literals in this seq such that only the last `len` bytes\n/// remain. If a literal has less than or equal to `len` bytes, then it\n/// remains unchanged. Otherwise, it is trimmed and made inexact.\n///\n/// # Example\n///\n/// ```\n/// use regex_syntax::hir::literal::{Literal, Seq};\n///\n/// let mut seq = Seq::new(&[\"a\", \"foo\", \"quux\"]);\n/// seq.keep_last_bytes(2);\n///\n/// let expected = Seq::from_iter([\n///     Literal::exact(\"a\"),\n///     Literal::inexact(\"oo\"),\n///     Literal::inexact(\"ux\"),\n/// ]);\n/// assert_eq!(expected, seq);\n/// ```\n",
  "code": [
    "pub fn keep_last_bytes(&mut self, len: usize) {",
    "    if let Some(ref mut lits) = self.literals {",
    "        for m in lits.iter_mut() {",
    "            m.keep_last_bytes(len);",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "let Some(ref mut lits) = self.literals",
          "norm": null,
          "value": "true",
          "line": 1518,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        15
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "let Some(ref mut lits) = self.literals",
          "norm": null,
          "value": "true",
          "line": 1518,
          "bound": null
        },
        {
          "cond": "m in lits.iter_mut()",
          "norm": null,
          "value": "true",
          "line": 1519,
          "bound": null
        },
        {
          "cond": "m in lits.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1519,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        13,
        6,
        7,
        8,
        10,
        12,
        15
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "let Some(ref mut lits) = self.literals",
          "norm": null,
          "value": "true",
          "line": 1518,
          "bound": null
        },
        {
          "cond": "m in lits.iter_mut()",
          "norm": null,
          "value": "false",
          "line": 1519,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        12,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}