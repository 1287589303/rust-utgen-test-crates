{
  "name": "regex_syntax::ast::parse::{impl#0}::into_class_set_item",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/parse.rs:68:5:81:6",
  "doc": "/// Convert this primitive into an item in a character class.\n///\n/// If this primitive is not a legal item (i.e., an assertion or a dot),\n/// then return an error.\n",
  "code": [
    "fn into_class_set_item<P: Borrow<Parser>>(",
    "    self,",
    "    p: &ParserI<'_, P>,",
    ") -> Result<ast::ClassSetItem> {",
    "    use self::Primitive::*;",
    "    use crate::ast::ClassSetItem;",
    "",
    "    match self {",
    "        Literal(lit) => Ok(ClassSetItem::Literal(lit)),",
    "        Perl(cls) => Ok(ClassSetItem::Perl(cls)),",
    "        Unicode(cls) => Ok(ClassSetItem::Unicode(cls)),",
    "        x => Err(p.error(*x.span(), ast::ErrorKind::ClassEscapeInvalid)),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Perl(cls)",
          "norm": null,
          "value": "false",
          "line": 77,
          "bound": null
        },
        {
          "cond": "self matches Literal(lit)",
          "norm": null,
          "value": "false",
          "line": 76,
          "bound": null
        },
        {
          "cond": "self matches Unicode(cls)",
          "norm": null,
          "value": "false",
          "line": 78,
          "bound": null
        }
      ],
      "ret": "Err(p.error(*x.span(), ast::ErrorKind::ClassEscapeInvalid))",
      "path": [
        0,
        1,
        13,
        14,
        15,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Unicode(cls)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "self matches Unicode(cls)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        }
      ],
      "ret": "Ok(ClassSetItem::Unicode(cls))",
      "path": [
        0,
        4,
        9,
        10,
        11,
        12,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self matches Perl(cls)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "self matches Perl(cls)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        }
      ],
      "ret": "Ok(ClassSetItem::Perl(cls))",
      "path": [
        0,
        3,
        7,
        8,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self matches Literal(lit)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        },
        {
          "cond": "self matches Literal(lit)",
          "norm": null,
          "value": "true",
          "line": 75,
          "bound": null
        }
      ],
      "ret": "Ok(ClassSetItem::Literal(lit))",
      "path": [
        0,
        2,
        5,
        6,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}