{
  "name": "regex_syntax::ast::print::{impl#3}::visit_post",
  "mod_info": {
    "name": "ast::print",
    "loc": "regex-syntax/src/ast/mod.rs:12:1:12:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/print.rs:88:5:103:6",
  "doc": "",
  "code": [
    "fn visit_post(&mut self, ast: &Ast) -> fmt::Result {",
    "    match *ast {",
    "        Ast::Empty(_) => Ok(()),",
    "        Ast::Flags(ref x) => self.fmt_set_flags(x),",
    "        Ast::Literal(ref x) => self.fmt_literal(x),",
    "        Ast::Dot(_) => self.wtr.write_str(\".\"),",
    "        Ast::Assertion(ref x) => self.fmt_assertion(x),",
    "        Ast::ClassPerl(ref x) => self.fmt_class_perl(x),",
    "        Ast::ClassUnicode(ref x) => self.fmt_class_unicode(x),",
    "        Ast::ClassBracketed(ref x) => self.fmt_class_bracketed_post(x),",
    "        Ast::Repetition(ref x) => self.fmt_repetition(x),",
    "        Ast::Group(ref x) => self.fmt_group_post(x),",
    "        Ast::Alternation(_) => Ok(()),",
    "        Ast::Concat(_) => Ok(()),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 12,
    "contra": 0,
    "min_set": 12
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*ast matches Ast::Concat(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        13,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*ast matches Ast::Alternation(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Alternation(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        12,
        33,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        11,
        31,
        32,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*ast matches Ast::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        29,
        30,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassBracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassBracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        27,
        28,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassPerl(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassPerl(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        23,
        24,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassUnicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassUnicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        25,
        26,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*ast matches Ast::Assertion(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Assertion(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        21,
        22,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*ast matches Ast::Dot(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Dot(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        19,
        20,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*ast matches Ast::Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        17,
        18,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*ast matches Ast::Flags(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(ref x)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        15,
        16,
        34
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 89,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        14,
        34
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}