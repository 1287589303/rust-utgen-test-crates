{
  "name": "regex_syntax::unicode::canonical_value",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:575:1:582:2",
  "doc": "/// Find the canonical property value for the given normalized property\n/// value.\n///\n/// The given property values should correspond to the values for the property\n/// under question, which can be found using `property_values`.\n///\n/// If no such property value exists, then `None` is returned.\n///\n/// The normalized property value must have been normalized according to\n/// UAX44 LM3, which can be done using `symbolic_name_normalize`.\n",
  "code": [
    "fn canonical_value(",
    "    vals: PropertyValues,",
    "    normalized_value: &str,",
    ") -> Option<&'static str> {",
    "    vals.binary_search_by_key(&normalized_value, |&(n, _)| n)",
    "        .ok()",
    "        .map(|i| vals[i].1)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}