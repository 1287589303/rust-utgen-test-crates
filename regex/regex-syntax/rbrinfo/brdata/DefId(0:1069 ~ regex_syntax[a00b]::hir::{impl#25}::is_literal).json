{
  "name": "regex_syntax::hir::{impl#25}::is_literal",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/mod.rs:2216:5:2218:6",
  "doc": "/// Return true if and only if this HIR is a simple literal. This is\n/// only true when this HIR expression is either itself a `Literal` or a\n/// concatenation of only `Literal`s.\n///\n/// For example, `f` and `foo` are literals, but `f+`, `(foo)`, `foo()` and\n/// the empty string are not (even though they contain sub-expressions that\n/// are literals).\n",
  "code": [
    "pub fn is_literal(&self) -> bool {",
    "    self.0.literal",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.0.literal",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}