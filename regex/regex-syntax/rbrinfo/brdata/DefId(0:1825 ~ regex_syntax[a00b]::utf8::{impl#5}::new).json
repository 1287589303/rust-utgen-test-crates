{
  "name": "regex_syntax::utf8::{impl#5}::new",
  "mod_info": {
    "name": "utf8",
    "loc": "regex-syntax/src/lib.rs:195:1:195:14"
  },
  "visible": true,
  "loc": "regex-syntax/src/utf8.rs:304:5:308:6",
  "doc": "/// Create a new iterator over UTF-8 byte ranges for the scalar value range\n/// given.\n",
  "code": [
    "pub fn new(start: char, end: char) -> Self {",
    "    let range =",
    "        ScalarRange { start: u32::from(start), end: u32::from(end) };",
    "    Utf8Sequences { range_stack: vec![range] }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Utf8Sequences { range_stack: vec![range] }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}