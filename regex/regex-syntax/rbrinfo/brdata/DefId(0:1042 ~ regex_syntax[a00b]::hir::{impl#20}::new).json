{
  "name": "regex_syntax::hir::{impl#20}::new",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/mod.rs:1572:5:1574:6",
  "doc": "/// Create a new byte range for a character class.\n///\n/// The returned range is always in a canonical form. That is, the range\n/// returned always satisfies the invariant that `start <= end`.\n",
  "code": [
    "pub fn new(start: u8, end: u8) -> ClassBytesRange {",
    "    ClassBytesRange::create(start, end)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}