{
  "name": "regex_syntax::ast::parse::{impl#5}::parse_uncounted_repetition",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/parse.rs:1048:5:1088:6",
  "doc": "/// Parses an uncounted repetition operation. An uncounted repetition\n/// operator includes ?, * and +, but does not include the {m,n} syntax.\n/// The given `kind` should correspond to the operator observed by the\n/// caller.\n///\n/// This assumes that the parser is currently positioned at the repetition\n/// operator and advances the parser to the first character after the\n/// operator. (Note that the operator may include a single additional `?`,\n/// which makes the operator ungreedy.)\n///\n/// The caller should include the concatenation that is being built. The\n/// concatenation returned includes the repetition operator applied to the\n/// last expression in the given concatenation.\n",
  "code": [
    "fn parse_uncounted_repetition(",
    "    &self,",
    "    mut concat: ast::Concat,",
    "    kind: ast::RepetitionKind,",
    ") -> Result<ast::Concat> {",
    "    assert!(",
    "        self.char() == '?' || self.char() == '*' || self.char() == '+'",
    "    );",
    "    let op_start = self.pos();",
    "    let ast = match concat.asts.pop() {",
    "        Some(ast) => ast,",
    "        None => {",
    "            return Err(",
    "                self.error(self.span(), ast::ErrorKind::RepetitionMissing)",
    "            )",
    "        }",
    "    };",
    "    match ast {",
    "        Ast::Empty(_) | Ast::Flags(_) => {",
    "            return Err(",
    "                self.error(self.span(), ast::ErrorKind::RepetitionMissing)",
    "            )",
    "        }",
    "        _ => {}",
    "    }",
    "    let mut greedy = true;",
    "    if self.bump() && self.char() == '?' {",
    "        greedy = false;",
    "        self.bump();",
    "    }",
    "    concat.asts.push(Ast::repetition(ast::Repetition {",
    "        span: ast.span().with_end(self.pos()),",
    "        op: ast::RepetitionOp {",
    "            span: Span::new(op_start, self.pos()),",
    "            kind,",
    "        },",
    "        greedy,",
    "        ast: Box::new(ast),",
    "    }));",
    "    Ok(concat)",
    "}"
  ],
  "size": {
    "chain": 19,
    "contra": 0,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        31,
        32,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        33,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        15,
        18,
        19,
        20,
        48,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        31,
        32,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        33,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        15,
        18,
        19,
        20,
        48,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        31,
        32,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 1074,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        29,
        30,
        33,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches _",
          "norm": null,
          "value": "true",
          "line": 1071,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "false",
          "line": 1066,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 1074,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        22,
        28,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches Some(ast)",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        },
        {
          "cond": "ast matches Ast::Flags(_) or Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1065,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        14,
        16,
        17,
        21,
        23,
        24,
        25,
        26,
        27,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "false",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "concat.asts.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 1057,
          "bound": null
        }
      ],
      "ret": "Err(\n                    self.error(self.span(), ast::ErrorKind::RepetitionMissing)\n                )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        15,
        18,
        19,
        20,
        48,
        49,
        50
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '*'",
          "norm": "'*' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        },
        {
          "cond": "self.char() == '+'",
          "norm": "'+' == self.char()",
          "value": "true",
          "line": 1054,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        9,
        56,
        57
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}