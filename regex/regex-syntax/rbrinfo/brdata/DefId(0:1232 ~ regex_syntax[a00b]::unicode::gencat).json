{
  "name": "regex_syntax::unicode::gencat",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:699:1:726:2",
  "doc": "/// Returns the Unicode HIR class corresponding to the given general category.\n///\n/// Name canonicalization is assumed to be performed by the caller.\n///\n/// If the given general category could not be found, or if the general\n/// category data is not available, then an error is returned.\n",
  "code": [
    "fn gencat(canonical_name: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "    #[cfg(not(feature = \"unicode-gencat\"))]",
    "    fn imp(_: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        Err(Error::PropertyNotFound)",
    "    }",
    "",
    "    #[cfg(feature = \"unicode-gencat\")]",
    "    fn imp(name: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        use crate::unicode_tables::general_category::BY_NAME;",
    "        match name {",
    "            \"ASCII\" => Ok(hir_class(&[('\\0', '\\x7F')])),",
    "            \"Any\" => Ok(hir_class(&[('\\0', '\\u{10FFFF}')])),",
    "            \"Assigned\" => {",
    "                let mut cls = gencat(\"Unassigned\")?;",
    "                cls.negate();",
    "                Ok(cls)",
    "            }",
    "            name => property_set(BY_NAME, name)",
    "                .map(hir_class)",
    "                .ok_or(Error::PropertyValueNotFound),",
    "        }",
    "    }",
    "",
    "    match canonical_name {",
    "        \"Decimal_Number\" => perl_digit(),",
    "        name => imp(name),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "true",
          "line": 723,
          "bound": null
        },
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "true",
          "line": 722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "false",
          "line": 723,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        1,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}