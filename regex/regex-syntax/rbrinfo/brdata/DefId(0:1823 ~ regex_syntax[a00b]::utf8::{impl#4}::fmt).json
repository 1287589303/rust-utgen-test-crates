{
  "name": "regex_syntax::utf8::{impl#4}::fmt",
  "mod_info": {
    "name": "utf8",
    "loc": "regex-syntax/src/lib.rs:195:1:195:14"
  },
  "visible": true,
  "loc": "regex-syntax/src/utf8.rs:237:5:243:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {",
    "    if self.start == self.end {",
    "        write!(f, \"[{:X}]\", self.start)",
    "    } else {",
    "        write!(f, \"[{:X}-{:X}]\", self.start, self.end)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.start == self.end",
          "norm": "self.end == self.start",
          "value": "true",
          "line": 238,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.start == self.end",
          "norm": "self.end == self.start",
          "value": "false",
          "line": 238,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}