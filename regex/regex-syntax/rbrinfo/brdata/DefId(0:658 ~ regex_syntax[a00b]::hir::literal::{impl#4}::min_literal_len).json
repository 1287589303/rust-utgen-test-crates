{
  "name": "regex_syntax::hir::literal::{impl#4}::min_literal_len",
  "mod_info": {
    "name": "hir::literal",
    "loc": "regex-syntax/src/hir/mod.rs:42:1:42:17"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/literal.rs:1590:5:1592:6",
  "doc": "/// Returns the length of the shortest literal in this sequence.\n///\n/// If the sequence is infinite or empty, then this returns `None`.\n",
  "code": [
    "pub fn min_literal_len(&self) -> Option<usize> {",
    "    self.literals.as_ref()?.iter().map(|x| x.len()).min()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.literals.as_ref()?",
          "norm": null,
          "value": "Err/None",
          "line": 1591,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.literals.as_ref()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1591,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}