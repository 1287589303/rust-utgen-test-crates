{
  "name": "regex_syntax::hir::{impl#26}::capture",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/mod.rs:2557:5:2568:6",
  "doc": "/// Create a new set of HIR properties for a capture.\n",
  "code": [
    "fn capture(capture: &Capture) -> Properties {",
    "    let p = capture.sub.properties();",
    "    Properties(Box::new(PropertiesI {",
    "        explicit_captures_len: p.explicit_captures_len().saturating_add(1),",
    "        static_explicit_captures_len: p",
    "            .static_explicit_captures_len()",
    "            .map(|len| len.saturating_add(1)),",
    "        literal: false,",
    "        alternation_literal: false,",
    "        ..*p.0.clone()",
    "    }))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Properties(Box::new(PropertiesI {\n            explicit_captures_len: p.explicit_captures_len().saturating_add(1),\n            static_explicit_captures_len: p\n                .static_explicit_captures_len()\n                .map(|len| len.saturating_add(1)),\n            literal: false,\n            alternation_literal: false,\n            ..*p.0.clone()\n        }))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}