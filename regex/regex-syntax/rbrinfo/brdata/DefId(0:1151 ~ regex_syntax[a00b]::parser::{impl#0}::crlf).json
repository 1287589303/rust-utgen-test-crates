{
  "name": "regex_syntax::parser::{impl#0}::crlf",
  "mod_info": {
    "name": "parser",
    "loc": "regex-syntax/src/lib.rs:191:1:191:12"
  },
  "visible": true,
  "loc": "regex-syntax/src/parser.rs:163:5:166:6",
  "doc": "/// Enable or disable the CRLF mode flag by default.\n///\n/// By default this is disabled. It may alternatively be selectively\n/// enabled in the regular expression itself via the `R` flag.\n///\n/// When CRLF mode is enabled, the following happens:\n///\n/// * Unless `dot_matches_new_line` is enabled, `.` will match any character\n/// except for `\\r` and `\\n`.\n/// * When `multi_line` mode is enabled, `^` and `$` will treat `\\r\\n`,\n/// `\\r` and `\\n` as line terminators. And in particular, neither will\n/// match between a `\\r` and a `\\n`.\n",
  "code": [
    "pub fn crlf(&mut self, yes: bool) -> &mut ParserBuilder {",
    "    self.hir.crlf(yes);",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}