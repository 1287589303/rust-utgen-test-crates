{
  "name": "regex_syntax::ast::print::{impl#4}::fmt_flags",
  "mod_info": {
    "name": "ast::print",
    "loc": "regex-syntax/src/ast/mod.rs:12:1:12:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/print.rs:280:5:298:6",
  "doc": "",
  "code": [
    "fn fmt_flags(&mut self, ast: &ast::Flags) -> fmt::Result {",
    "    use crate::ast::{Flag, FlagsItemKind};",
    "",
    "    for item in &ast.items {",
    "        match item.kind {",
    "            FlagsItemKind::Negation => self.wtr.write_str(\"-\"),",
    "            FlagsItemKind::Flag(ref flag) => match *flag {",
    "                Flag::CaseInsensitive => self.wtr.write_str(\"i\"),",
    "                Flag::MultiLine => self.wtr.write_str(\"m\"),",
    "                Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),",
    "                Flag::SwapGreed => self.wtr.write_str(\"U\"),",
    "                Flag::Unicode => self.wtr.write_str(\"u\"),",
    "                Flag::CRLF => self.wtr.write_str(\"R\"),",
    "                Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),",
    "            },",
    "        }?;",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 17,
    "contra": 8,
    "min_set": 10
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::IgnoreWhitespace",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        21,
        34,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::IgnoreWhitespace",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        21,
        34,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CRLF",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CRLF",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        20,
        32,
        33,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CRLF",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CRLF",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        20,
        32,
        33,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::Unicode",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::Unicode",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        19,
        30,
        31,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::Unicode",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::Unicode",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        19,
        30,
        31,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::SwapGreed",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::SwapGreed",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        18,
        28,
        29,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::SwapGreed",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::SwapGreed",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        18,
        28,
        29,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::DotMatchesNewLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::DotMatchesNewLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        17,
        26,
        27,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::DotMatchesNewLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::DotMatchesNewLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        17,
        26,
        27,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::MultiLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::MultiLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        16,
        24,
        25,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::MultiLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::MultiLine",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        16,
        24,
        25,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CaseInsensitive",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CaseInsensitive",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        15,
        22,
        23,
        35,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Flag(ref flag)",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CaseInsensitive",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "*flag matches Flag::CaseInsensitive",
          "norm": null,
          "value": "true",
          "line": 286,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        11,
        15,
        22,
        23,
        35,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Err/None",
          "line": 284,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        10,
        12,
        13,
        36,
        37,
        39,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 283,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item.kind matches FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "match item.kind {\n                FlagsItemKind::Negation => self.wtr.write_str(\"-\"),\n                FlagsItemKind::Flag(ref flag) => match *flag {\n                    Flag::CaseInsensitive => self.wtr.write_str(\"i\"),\n                    Flag::MultiLine => self.wtr.write_str(\"m\"),\n                    Flag::DotMatchesNewLine => self.wtr.write_str(\"s\"),\n                    Flag::SwapGreed => self.wtr.write_str(\"U\"),\n                    Flag::Unicode => self.wtr.write_str(\"u\"),\n                    Flag::CRLF => self.wtr.write_str(\"R\"),\n                    Flag::IgnoreWhitespace => self.wtr.write_str(\"x\"),\n                },\n            }?",
          "norm": null,
          "value": "Ok/Some",
          "line": 284,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        7,
        10,
        12,
        13,
        36,
        37,
        40,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 283,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        8,
        43
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}