{
  "name": "regex_syntax::unicode::script",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:734:1:749:2",
  "doc": "/// Returns the Unicode HIR class corresponding to the given script.\n///\n/// Name canonicalization is assumed to be performed by the caller.\n///\n/// If the given script could not be found, or if the script data is not\n/// available, then an error is returned.\n",
  "code": [
    "fn script(canonical_name: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "    #[cfg(not(feature = \"unicode-script\"))]",
    "    fn imp(_: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        Err(Error::PropertyNotFound)",
    "    }",
    "",
    "    #[cfg(feature = \"unicode-script\")]",
    "    fn imp(name: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        use crate::unicode_tables::script::BY_NAME;",
    "        property_set(BY_NAME, name)",
    "            .map(hir_class)",
    "            .ok_or(Error::PropertyValueNotFound)",
    "    }",
    "",
    "    imp(canonical_name)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}