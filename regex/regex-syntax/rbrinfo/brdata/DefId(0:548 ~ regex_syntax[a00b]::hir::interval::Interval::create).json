{
  "name": "regex_syntax::hir::interval::Interval::create",
  "mod_info": {
    "name": "hir::interval",
    "loc": "regex-syntax/src/hir/mod.rs:41:1:41:14"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/interval.rs:411:5:421:6",
  "doc": "/// Create a new interval.\n",
  "code": [
    "fn create(lower: Self::Bound, upper: Self::Bound) -> Self {",
    "    let mut int = Self::default();",
    "    if lower <= upper {",
    "        int.set_lower(lower);",
    "        int.set_upper(upper);",
    "    } else {",
    "        int.set_lower(upper);",
    "        int.set_upper(lower);",
    "    }",
    "    int",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "lower <= upper",
          "norm": null,
          "value": "true",
          "line": 413,
          "bound": "lower == upper"
        }
      ],
      "ret": "int",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "lower <= upper",
          "norm": null,
          "value": "false",
          "line": 413,
          "bound": null
        }
      ],
      "ret": "int",
      "path": [
        0,
        1,
        2,
        6,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}