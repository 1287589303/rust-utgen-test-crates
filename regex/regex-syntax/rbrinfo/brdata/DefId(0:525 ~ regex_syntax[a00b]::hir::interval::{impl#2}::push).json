{
  "name": "regex_syntax::hir::interval::{impl#2}::push",
  "mod_info": {
    "name": "hir::interval",
    "loc": "regex-syntax/src/hir/mod.rs:41:1:41:14"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/interval.rs:83:5:92:6",
  "doc": "/// Add a new interval to this set.\n",
  "code": [
    "pub fn push(&mut self, interval: I) {",
    "    // TODO: This could be faster. e.g., Push the interval such that",
    "    // it preserves canonicalization.",
    "    self.ranges.push(interval);",
    "    self.canonicalize();",
    "    // We don't know whether the new interval added here is considered",
    "    // case folded, so we conservatively assume that the entire set is",
    "    // no longer case folded if it was previously.",
    "    self.folded = false;",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}