{
  "name": "regex_syntax::unicode::bool_property",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:783:1:804:2",
  "doc": "/// Returns the Unicode HIR class corresponding to the given Unicode boolean\n/// property.\n///\n/// Name canonicalization is assumed to be performed by the caller.\n///\n/// If the given boolean property could not be found, or if the boolean\n/// property data is not available, then an error is returned.\n",
  "code": [
    "fn bool_property(",
    "    canonical_name: &'static str,",
    ") -> Result<hir::ClassUnicode, Error> {",
    "    #[cfg(not(feature = \"unicode-bool\"))]",
    "    fn imp(_: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        Err(Error::PropertyNotFound)",
    "    }",
    "",
    "    #[cfg(feature = \"unicode-bool\")]",
    "    fn imp(name: &'static str) -> Result<hir::ClassUnicode, Error> {",
    "        use crate::unicode_tables::property_bool::BY_NAME;",
    "        property_set(BY_NAME, name)",
    "            .map(hir_class)",
    "            .ok_or(Error::PropertyNotFound)",
    "    }",
    "",
    "    match canonical_name {",
    "        \"Decimal_Number\" => perl_digit(),",
    "        \"White_Space\" => perl_space(),",
    "        name => imp(name),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "true",
          "line": 800,
          "bound": null
        },
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "true",
          "line": 799,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        2,
        7,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "false",
          "line": 800,
          "bound": null
        },
        {
          "cond": "canonical_name matches \"White_Space\"",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        },
        {
          "cond": "canonical_name matches \"White_Space\"",
          "norm": null,
          "value": "true",
          "line": 799,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        3,
        5,
        4,
        8,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "canonical_name matches \"Decimal_Number\"",
          "norm": null,
          "value": "false",
          "line": 800,
          "bound": null
        },
        {
          "cond": "canonical_name matches \"White_Space\"",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        3,
        5,
        1,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}