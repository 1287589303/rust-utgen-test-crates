{
  "name": "regex_syntax::ast::print::{impl#2}::print",
  "mod_info": {
    "name": "ast::print",
    "loc": "regex-syntax/src/ast/mod.rs:12:1:12:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/print.rs:62:5:64:6",
  "doc": "/// Print the given `Ast` to the given writer. The writer must implement\n/// `fmt::Write`. Typical implementations of `fmt::Write` that can be used\n/// here are a `fmt::Formatter` (which is available in `fmt::Display`\n/// implementations) or a `&mut String`.\n",
  "code": [
    "pub fn print<W: fmt::Write>(&mut self, ast: &Ast, wtr: W) -> fmt::Result {",
    "    visitor::visit(ast, Writer { wtr })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}