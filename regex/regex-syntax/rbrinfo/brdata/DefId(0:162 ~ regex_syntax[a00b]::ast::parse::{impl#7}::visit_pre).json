{
  "name": "regex_syntax::ast::parse::{impl#7}::visit_pre",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/parse.rs:2316:5:2335:6",
  "doc": "",
  "code": [
    "fn visit_pre(&mut self, ast: &Ast) -> Result<()> {",
    "    let span = match *ast {",
    "        Ast::Empty(_)",
    "        | Ast::Flags(_)",
    "        | Ast::Literal(_)",
    "        | Ast::Dot(_)",
    "        | Ast::Assertion(_)",
    "        | Ast::ClassUnicode(_)",
    "        | Ast::ClassPerl(_) => {",
    "            // These are all base cases, so we don't increment depth.",
    "            return Ok(());",
    "        }",
    "        Ast::ClassBracketed(ref x) => &x.span,",
    "        Ast::Repetition(ref x) => &x.span,",
    "        Ast::Group(ref x) => &x.span,",
    "        Ast::Alternation(ref x) => &x.span,",
    "        Ast::Concat(ref x) => &x.span,",
    "    };",
    "    self.increment_depth(span)",
    "}"
  ],
  "size": {
    "chain": 12,
    "contra": 0,
    "min_set": 12
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*ast matches Ast::Concat(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        11,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*ast matches Ast::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Repetition(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        10,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassBracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassBracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        9,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassPerl(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassUnicode(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*ast matches Ast::Assertion(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*ast matches Ast::Dot(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*ast matches Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*ast matches Ast::Flags(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*ast matches Ast::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Flags(_) or Ast::Empty(_) or Ast::ClassPerl(_) or Ast::Assertion(_) or Ast::Dot(_) or Ast::ClassUnicode(_) or Ast::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2317,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        7,
        8,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}