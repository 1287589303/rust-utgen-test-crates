{
  "name": "regex_syntax::hir::translate::{impl#6}::from_ast",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/translate.rs:1238:5:1268:6",
  "doc": "",
  "code": [
    "fn from_ast(ast: &ast::Flags) -> Flags {",
    "    let mut flags = Flags::default();",
    "    let mut enable = true;",
    "    for item in &ast.items {",
    "        match item.kind {",
    "            ast::FlagsItemKind::Negation => {",
    "                enable = false;",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) => {",
    "                flags.case_insensitive = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::MultiLine) => {",
    "                flags.multi_line = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) => {",
    "                flags.dot_matches_new_line = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) => {",
    "                flags.swap_greed = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::Unicode) => {",
    "                flags.unicode = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::CRLF) => {",
    "                flags.crlf = Some(enable);",
    "            }",
    "            ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace) => {}",
    "        }",
    "    }",
    "    flags",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 8,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1264,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        19,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CRLF)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        18,
        26,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::Unicode)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        17,
        25,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::SwapGreed)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        16,
        24,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        15,
        23,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::MultiLine)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        14,
        22,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive) or ast::FlagsItemKind::Flag(ast::Flag::DotMatchesNewLine) or ast::FlagsItemKind::Flag(ast::Flag::Unicode) or ast::FlagsItemKind::Flag(ast::Flag::SwapGreed) or ast::FlagsItemKind::Flag(ast::Flag::MultiLine) or ast::FlagsItemKind::Flag(ast::Flag::CRLF) or ast::FlagsItemKind::Flag(ast::Flag::IgnoreWhitespace)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Flag(ast::Flag::CaseInsensitive)",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        12,
        13,
        21,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "true",
          "line": 1241,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item.kind matches ast::FlagsItemKind::Negation",
          "norm": null,
          "value": "true",
          "line": 1242,
          "bound": null
        },
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        11,
        20,
        27,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "item in &ast.items",
          "norm": null,
          "value": "false",
          "line": 1241,
          "bound": null
        }
      ],
      "ret": "flags",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}