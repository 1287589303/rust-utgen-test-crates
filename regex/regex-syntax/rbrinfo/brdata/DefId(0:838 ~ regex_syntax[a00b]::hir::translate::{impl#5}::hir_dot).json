{
  "name": "regex_syntax::hir::translate::{impl#5}::hir_dot",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/translate.rs:888:5:921:6",
  "doc": "",
  "code": [
    "fn hir_dot(&self, span: Span) -> Result<Hir> {",
    "    let (utf8, lineterm, flags) =",
    "        (self.trans().utf8, self.trans().line_terminator, self.flags());",
    "    if utf8 && (!flags.unicode() || !lineterm.is_ascii()) {",
    "        return Err(self.error(span, ErrorKind::InvalidUtf8));",
    "    }",
    "    let dot = if flags.dot_matches_new_line() {",
    "        if flags.unicode() {",
    "            hir::Dot::AnyChar",
    "        } else {",
    "            hir::Dot::AnyByte",
    "        }",
    "    } else {",
    "        if flags.unicode() {",
    "            if flags.crlf() {",
    "                hir::Dot::AnyCharExceptCRLF",
    "            } else {",
    "                if !lineterm.is_ascii() {",
    "                    return Err(",
    "                        self.error(span, ErrorKind::InvalidLineTerminator)",
    "                    );",
    "                }",
    "                hir::Dot::AnyCharExcept(char::from(lineterm))",
    "            }",
    "        } else {",
    "            if flags.crlf() {",
    "                hir::Dot::AnyByteExceptCRLF",
    "            } else {",
    "                hir::Dot::AnyByteExcept(lineterm)",
    "            }",
    "        }",
    "    };",
    "    Ok(Hir::dot(dot))",
    "}"
  ],
  "size": {
    "chain": 16,
    "contra": 0,
    "min_set": 9
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "true",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        16,
        17,
        18,
        20,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "true",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 895,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        16,
        17,
        19,
        20,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "true",
          "line": 902,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        21,
        22,
        23,
        24,
        25,
        33,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 902,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 905,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        21,
        22,
        23,
        24,
        26,
        27,
        28,
        32,
        33,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 902,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "false",
          "line": 905,
          "bound": null
        }
      ],
      "ret": "Err(\n                            self.error(span, ErrorKind::InvalidLineTerminator)\n                        )",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        21,
        22,
        23,
        24,
        26,
        27,
        29,
        30,
        31,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "true",
          "line": 913,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        21,
        22,
        34,
        35,
        36,
        38,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 913,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        9,
        14,
        15,
        21,
        22,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        }
      ],
      "ret": "Err(self.error(span, ErrorKind::InvalidUtf8))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        11,
        12,
        13,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "true",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        }
      ],
      "ret": "Err(self.error(span, ErrorKind::InvalidUtf8))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        11,
        12,
        13,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "true",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 895,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        16,
        17,
        18,
        20,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "true",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 895,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        16,
        17,
        19,
        20,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "true",
          "line": 902,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        21,
        22,
        23,
        24,
        25,
        33,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 902,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "true",
          "line": 905,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        21,
        22,
        23,
        24,
        26,
        27,
        28,
        32,
        33,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "true",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 902,
          "bound": null
        },
        {
          "cond": "lineterm.is_ascii()",
          "norm": null,
          "value": "false",
          "line": 905,
          "bound": null
        }
      ],
      "ret": "Err(\n                            self.error(span, ErrorKind::InvalidLineTerminator)\n                        )",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        21,
        22,
        23,
        24,
        26,
        27,
        29,
        30,
        31,
        43,
        44
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "true",
          "line": 913,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        21,
        22,
        34,
        35,
        36,
        38,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "utf8",
          "norm": null,
          "value": "false",
          "line": 891,
          "bound": null
        },
        {
          "cond": "flags.dot_matches_new_line()",
          "norm": null,
          "value": "false",
          "line": 894,
          "bound": null
        },
        {
          "cond": "flags.unicode()",
          "norm": null,
          "value": "false",
          "line": 901,
          "bound": null
        },
        {
          "cond": "flags.crlf()",
          "norm": null,
          "value": "false",
          "line": 913,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::dot(dot))",
      "path": [
        0,
        1,
        2,
        3,
        14,
        15,
        21,
        22,
        34,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}