{
  "name": "regex_syntax::hir::print::{impl#3}::visit_pre",
  "mod_info": {
    "name": "hir::print",
    "loc": "regex-syntax/src/hir/mod.rs:43:1:43:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/print.rs:90:5:254:6",
  "doc": "",
  "code": [
    "fn visit_pre(&mut self, hir: &Hir) -> fmt::Result {",
    "    match *hir.kind() {",
    "        HirKind::Empty => {",
    "            // Technically an empty sub-expression could be \"printed\" by",
    "            // just ignoring it, but in practice, you could have a",
    "            // repetition operator attached to an empty expression, and you",
    "            // really need something in the concrete syntax to make that",
    "            // work as you'd expect.",
    "            self.wtr.write_str(r\"(?:)\")?;",
    "        }",
    "        // Repetition operators are strictly suffix oriented.",
    "        HirKind::Repetition(_) => {}",
    "        HirKind::Literal(hir::Literal(ref bytes)) => {",
    "            // See the comment on the 'Concat' and 'Alternation' case below",
    "            // for why we put parens here. Literals are, conceptually,",
    "            // a special case of concatenation where each element is a",
    "            // character. The HIR flattens this into a Box<[u8]>, but we",
    "            // still need to treat it like a concatenation for correct",
    "            // printing. As a special case, we don't write parens if there",
    "            // is only one character. One character means there is no",
    "            // concat so we don't need parens. Adding parens would still be",
    "            // correct, but we drop them here because it tends to create",
    "            // rather noisy regexes even in simple cases.",
    "            let result = core::str::from_utf8(bytes);",
    "            let len = result.map_or(bytes.len(), |s| s.chars().count());",
    "            if len > 1 {",
    "                self.wtr.write_str(r\"(?:\")?;",
    "            }",
    "            match result {",
    "                Ok(string) => {",
    "                    for c in string.chars() {",
    "                        self.write_literal_char(c)?;",
    "                    }",
    "                }",
    "                Err(_) => {",
    "                    for &b in bytes.iter() {",
    "                        self.write_literal_byte(b)?;",
    "                    }",
    "                }",
    "            }",
    "            if len > 1 {",
    "                self.wtr.write_str(r\")\")?;",
    "            }",
    "        }",
    "        HirKind::Class(hir::Class::Unicode(ref cls)) => {",
    "            if cls.ranges().is_empty() {",
    "                return self.wtr.write_str(\"[a&&b]\");",
    "            }",
    "            self.wtr.write_str(\"[\")?;",
    "            for range in cls.iter() {",
    "                if range.start() == range.end() {",
    "                    self.write_literal_char(range.start())?;",
    "                } else if u32::from(range.start()) + 1",
    "                    == u32::from(range.end())",
    "                {",
    "                    self.write_literal_char(range.start())?;",
    "                    self.write_literal_char(range.end())?;",
    "                } else {",
    "                    self.write_literal_char(range.start())?;",
    "                    self.wtr.write_str(\"-\")?;",
    "                    self.write_literal_char(range.end())?;",
    "                }",
    "            }",
    "            self.wtr.write_str(\"]\")?;",
    "        }",
    "        HirKind::Class(hir::Class::Bytes(ref cls)) => {",
    "            if cls.ranges().is_empty() {",
    "                return self.wtr.write_str(\"[a&&b]\");",
    "            }",
    "            self.wtr.write_str(\"(?-u:[\")?;",
    "            for range in cls.iter() {",
    "                if range.start() == range.end() {",
    "                    self.write_literal_class_byte(range.start())?;",
    "                } else if range.start() + 1 == range.end() {",
    "                    self.write_literal_class_byte(range.start())?;",
    "                    self.write_literal_class_byte(range.end())?;",
    "                } else {",
    "                    self.write_literal_class_byte(range.start())?;",
    "                    self.wtr.write_str(\"-\")?;",
    "                    self.write_literal_class_byte(range.end())?;",
    "                }",
    "            }",
    "            self.wtr.write_str(\"])\")?;",
    "        }",
    "        HirKind::Look(ref look) => match *look {",
    "            hir::Look::Start => {",
    "                self.wtr.write_str(r\"\\A\")?;",
    "            }",
    "            hir::Look::End => {",
    "                self.wtr.write_str(r\"\\z\")?;",
    "            }",
    "            hir::Look::StartLF => {",
    "                self.wtr.write_str(\"(?m:^)\")?;",
    "            }",
    "            hir::Look::EndLF => {",
    "                self.wtr.write_str(\"(?m:$)\")?;",
    "            }",
    "            hir::Look::StartCRLF => {",
    "                self.wtr.write_str(\"(?mR:^)\")?;",
    "            }",
    "            hir::Look::EndCRLF => {",
    "                self.wtr.write_str(\"(?mR:$)\")?;",
    "            }",
    "            hir::Look::WordAscii => {",
    "                self.wtr.write_str(r\"(?-u:\\b)\")?;",
    "            }",
    "            hir::Look::WordAsciiNegate => {",
    "                self.wtr.write_str(r\"(?-u:\\B)\")?;",
    "            }",
    "            hir::Look::WordUnicode => {",
    "                self.wtr.write_str(r\"\\b\")?;",
    "            }",
    "            hir::Look::WordUnicodeNegate => {",
    "                self.wtr.write_str(r\"\\B\")?;",
    "            }",
    "            hir::Look::WordStartAscii => {",
    "                self.wtr.write_str(r\"(?-u:\\b{start})\")?;",
    "            }",
    "            hir::Look::WordEndAscii => {",
    "                self.wtr.write_str(r\"(?-u:\\b{end})\")?;",
    "            }",
    "            hir::Look::WordStartUnicode => {",
    "                self.wtr.write_str(r\"\\b{start}\")?;",
    "            }",
    "            hir::Look::WordEndUnicode => {",
    "                self.wtr.write_str(r\"\\b{end}\")?;",
    "            }",
    "            hir::Look::WordStartHalfAscii => {",
    "                self.wtr.write_str(r\"(?-u:\\b{start-half})\")?;",
    "            }",
    "            hir::Look::WordEndHalfAscii => {",
    "                self.wtr.write_str(r\"(?-u:\\b{end-half})\")?;",
    "            }",
    "            hir::Look::WordStartHalfUnicode => {",
    "                self.wtr.write_str(r\"\\b{start-half}\")?;",
    "            }",
    "            hir::Look::WordEndHalfUnicode => {",
    "                self.wtr.write_str(r\"\\b{end-half}\")?;",
    "            }",
    "        },",
    "        HirKind::Capture(hir::Capture { ref name, .. }) => {",
    "            self.wtr.write_str(\"(\")?;",
    "            if let Some(ref name) = *name {",
    "                write!(self.wtr, \"?P<{}>\", name)?;",
    "            }",
    "        }",
    "        // Why do this? Wrapping concats and alts in non-capturing groups",
    "        // is not *always* necessary, but is sometimes necessary. For",
    "        // example, 'concat(a, alt(b, c))' should be written as 'a(?:b|c)'",
    "        // and not 'ab|c'. The former is clearly the intended meaning, but",
    "        // the latter is actually 'alt(concat(a, b), c)'.",
    "        //",
    "        // It would be possible to only group these things in cases where",
    "        // it's strictly necessary, but it requires knowing the parent",
    "        // expression. And since this technique is simpler and always",
    "        // correct, we take this route. More to the point, it is a non-goal",
    "        // of an HIR printer to show a nice easy-to-read regex. Indeed,",
    "        // its construction forbids it from doing so. Therefore, inserting",
    "        // extra groups where they aren't necessary is perfectly okay.",
    "        HirKind::Concat(_) | HirKind::Alternation(_) => {",
    "            self.wtr.write_str(r\"(?:\")?;",
    "        }",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 108,
    "contra": 24,
    "min_set": 78
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Alternation(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Err/None",
          "line": 250,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        11,
        443,
        444,
        446,
        448,
        449,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Alternation(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 250,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        11,
        443,
        444,
        447,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Concat(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Err/None",
          "line": 250,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        11,
        443,
        444,
        446,
        448,
        449,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Concat(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 250,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        11,
        443,
        444,
        447,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(\")?",
          "norm": null,
          "value": "Err/None",
          "line": 231,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        10,
        422,
        423,
        424,
        426,
        428,
        429,
        451,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 231,
          "bound": null
        },
        {
          "cond": "let Some(ref name) = *name",
          "norm": null,
          "value": "true",
          "line": 232,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        10,
        422,
        423,
        424,
        427,
        430,
        442,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 231,
          "bound": null
        },
        {
          "cond": "let Some(ref name) = *name",
          "norm": null,
          "value": "true",
          "line": 232,
          "bound": null
        },
        {
          "cond": "write!(self.wtr, \"?P<{}>\", name)?",
          "norm": null,
          "value": "Err/None",
          "line": 233,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        10,
        422,
        423,
        424,
        427,
        431,
        432,
        433,
        434,
        435,
        436,
        438,
        440,
        441,
        451,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Capture(hir::Capture { ref name, .. })",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 231,
          "bound": null
        },
        {
          "cond": "let Some(ref name) = *name",
          "norm": null,
          "value": "true",
          "line": 232,
          "bound": null
        },
        {
          "cond": "write!(self.wtr, \"?P<{}>\", name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 233,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        10,
        422,
        423,
        424,
        427,
        431,
        432,
        433,
        434,
        435,
        436,
        439,
        442,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        4,
        20,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{end-half}\")?",
          "norm": null,
          "value": "Err/None",
          "line": 227,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        277,
        414,
        415,
        417,
        419,
        420,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{end-half}\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 227,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        277,
        414,
        415,
        418,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{start-half}\")?",
          "norm": null,
          "value": "Err/None",
          "line": 224,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        276,
        406,
        407,
        408,
        410,
        412,
        413,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{start-half}\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 224,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        276,
        406,
        407,
        408,
        411,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{end-half})\")?",
          "norm": null,
          "value": "Err/None",
          "line": 221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        275,
        398,
        399,
        400,
        402,
        404,
        405,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{end-half})\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 221,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        275,
        398,
        399,
        400,
        403,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{start-half})\")?",
          "norm": null,
          "value": "Err/None",
          "line": 218,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        274,
        390,
        391,
        392,
        394,
        396,
        397,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartHalfAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{start-half})\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 218,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        274,
        390,
        391,
        392,
        395,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{end}\")?",
          "norm": null,
          "value": "Err/None",
          "line": 215,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        273,
        382,
        383,
        384,
        386,
        388,
        389,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{end}\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 215,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        273,
        382,
        383,
        384,
        387,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{start}\")?",
          "norm": null,
          "value": "Err/None",
          "line": 212,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        272,
        374,
        375,
        376,
        378,
        380,
        381,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b{start}\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 212,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        272,
        374,
        375,
        376,
        379,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{end})\")?",
          "norm": null,
          "value": "Err/None",
          "line": 209,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        271,
        366,
        367,
        368,
        370,
        372,
        373,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordEndAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{end})\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 209,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        271,
        366,
        367,
        368,
        371,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{start})\")?",
          "norm": null,
          "value": "Err/None",
          "line": 206,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        270,
        358,
        359,
        360,
        362,
        364,
        365,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordStartAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b{start})\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 206,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        270,
        358,
        359,
        360,
        363,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicodeNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicodeNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\B\")?",
          "norm": null,
          "value": "Err/None",
          "line": 203,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        269,
        350,
        351,
        352,
        354,
        356,
        357,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicodeNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicodeNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\B\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 203,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        269,
        350,
        351,
        352,
        355,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b\")?",
          "norm": null,
          "value": "Err/None",
          "line": 200,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        268,
        342,
        343,
        344,
        346,
        348,
        349,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordUnicode",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\b\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 200,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        268,
        342,
        343,
        344,
        347,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAsciiNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAsciiNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\B)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 197,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        267,
        334,
        335,
        336,
        338,
        340,
        341,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAsciiNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAsciiNegate",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\B)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 197,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        267,
        334,
        335,
        336,
        339,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 194,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        266,
        326,
        327,
        328,
        330,
        332,
        333,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::WordAscii",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?-u:\\b)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 194,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        266,
        326,
        327,
        328,
        331,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?mR:$)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 191,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        265,
        318,
        319,
        320,
        322,
        324,
        325,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?mR:$)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 191,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        265,
        318,
        319,
        320,
        323,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?mR:^)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 188,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        264,
        310,
        311,
        312,
        314,
        316,
        317,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartCRLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?mR:^)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 188,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        264,
        310,
        311,
        312,
        315,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?m:$)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 185,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        263,
        302,
        303,
        304,
        306,
        308,
        309,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::EndLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?m:$)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 185,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        263,
        302,
        303,
        304,
        307,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?m:^)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 182,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        262,
        294,
        295,
        296,
        298,
        300,
        301,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::StartLF",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?m:^)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 182,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        262,
        294,
        295,
        296,
        299,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::End",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::End",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\z\")?",
          "norm": null,
          "value": "Err/None",
          "line": 179,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        261,
        286,
        287,
        288,
        290,
        292,
        293,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::End",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::End",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\z\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 179,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        261,
        286,
        287,
        288,
        291,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::Start",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::Start",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\A\")?",
          "norm": null,
          "value": "Err/None",
          "line": 176,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        9,
        258,
        260,
        278,
        279,
        280,
        282,
        284,
        285,
        452,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Look(ref look)",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::Start",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "*look matches hir::Look::Start",
          "norm": null,
          "value": "true",
          "line": 174,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"\\A\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 176,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        258,
        260,
        278,
        279,
        280,
        283,
        421,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "true",
          "line": 156,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        174,
        175,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Err/None",
          "line": 159,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        180,
        182,
        183,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 161,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 162,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        195,
        196,
        197,
        198,
        200,
        202,
        203,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 161,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 162,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Err/None",
          "line": 172,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        195,
        196,
        197,
        198,
        201,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        254,
        256,
        257,
        455,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 161,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 162,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 172,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        195,
        196,
        197,
        198,
        201,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        255,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "true",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 164,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        213,
        215,
        216,
        453,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "true",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 164,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Err/None",
          "line": 165,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        214,
        217,
        218,
        219,
        221,
        223,
        224,
        453,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "true",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 164,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 165,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Err/None",
          "line": 172,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        214,
        217,
        218,
        219,
        222,
        249,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        254,
        256,
        257,
        455,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "true",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 164,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 165,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 172,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        208,
        209,
        210,
        211,
        214,
        217,
        218,
        219,
        222,
        249,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        255,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "false",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 167,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        225,
        226,
        227,
        228,
        230,
        232,
        233,
        453,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "false",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 167,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Err/None",
          "line": 168,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        225,
        226,
        227,
        228,
        231,
        234,
        235,
        237,
        239,
        240,
        453,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "false",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 167,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 168,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Err/None",
          "line": 169,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        225,
        226,
        227,
        228,
        231,
        234,
        235,
        238,
        241,
        242,
        243,
        245,
        247,
        248,
        453,
        454,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "false",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 167,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 168,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 169,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Err/None",
          "line": 172,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        225,
        226,
        227,
        228,
        231,
        234,
        235,
        238,
        241,
        242,
        243,
        246,
        249,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        254,
        256,
        257,
        455,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 160,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 161,
          "bound": null
        },
        {
          "cond": "range.start() + 1 == range.end()",
          "norm": "range.end() == range.start() + 1",
          "value": "false",
          "line": 163,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 167,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 168,
          "bound": null
        },
        {
          "cond": "self.write_literal_class_byte(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 169,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 172,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        191,
        193,
        194,
        204,
        205,
        206,
        207,
        225,
        226,
        227,
        228,
        231,
        234,
        235,
        238,
        241,
        242,
        243,
        246,
        249,
        250,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        255,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Err/None",
          "line": 172,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        254,
        256,
        257,
        455,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 156,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"(?-u:[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 159,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 160,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"])\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 172,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        8,
        171,
        172,
        173,
        176,
        177,
        178,
        181,
        184,
        185,
        186,
        187,
        188,
        190,
        192,
        251,
        252,
        255,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "true",
          "line": 135,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        85,
        86,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Err/None",
          "line": 138,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        91,
        93,
        94,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 141,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        106,
        107,
        108,
        109,
        111,
        113,
        114,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 141,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        167,
        169,
        170,
        458,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "true",
          "line": 140,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 141,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 153,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        106,
        107,
        108,
        109,
        112,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        168,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "true",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 145,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        126,
        128,
        129,
        456,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "true",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 145,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Err/None",
          "line": 146,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        127,
        130,
        131,
        132,
        134,
        136,
        137,
        456,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "true",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 145,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 146,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        127,
        130,
        131,
        132,
        135,
        162,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        167,
        169,
        170,
        458,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "true",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 145,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 146,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 153,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        121,
        122,
        123,
        124,
        127,
        130,
        131,
        132,
        135,
        162,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        168,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Err/None",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        138,
        139,
        140,
        141,
        143,
        145,
        146,
        456,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 148,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Err/None",
          "line": 149,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        138,
        139,
        140,
        141,
        144,
        147,
        148,
        150,
        152,
        153,
        456,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 148,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 149,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Err/None",
          "line": 150,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        138,
        139,
        140,
        141,
        144,
        147,
        148,
        151,
        154,
        155,
        156,
        158,
        160,
        161,
        456,
        457,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 148,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 149,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 150,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        138,
        139,
        140,
        141,
        144,
        147,
        148,
        151,
        154,
        155,
        156,
        159,
        162,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        167,
        169,
        170,
        458,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "true",
          "line": 139,
          "bound": null
        },
        {
          "cond": "range.start() == range.end()",
          "norm": "range.end() == range.start()",
          "value": "false",
          "line": 140,
          "bound": null
        },
        {
          "cond": "u32::from(range.start()) + 1\n                        == u32::from(range.end())",
          "norm": "u32::from(range.end()) == u32::from(range.start()) + 1",
          "value": "false",
          "line": 142,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.start())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 148,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 149,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(range.end())?",
          "norm": null,
          "value": "Ok/Some",
          "line": 150,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 153,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        102,
        104,
        105,
        115,
        116,
        117,
        118,
        119,
        120,
        138,
        139,
        140,
        141,
        144,
        147,
        148,
        151,
        154,
        155,
        156,
        159,
        162,
        163,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        168,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Err/None",
          "line": 153,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        167,
        169,
        170,
        458,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Bytes(ref cls)) or HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Class(hir::Class::Unicode(ref cls))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "cls.ranges().is_empty()",
          "norm": null,
          "value": "false",
          "line": 135,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"[\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 138,
          "bound": null
        },
        {
          "cond": "range in cls.iter()",
          "norm": null,
          "value": "false",
          "line": 139,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"]\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 153,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        7,
        82,
        83,
        84,
        87,
        88,
        89,
        92,
        95,
        96,
        97,
        98,
        99,
        101,
        103,
        164,
        165,
        168,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Err/None",
          "line": 116,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        29,
        31,
        32,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Err/None",
          "line": 126,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        67,
        69,
        70,
        459,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Err/None",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        51,
        53,
        54,
        459,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 115,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 116,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        30,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Err/None",
          "line": 126,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        67,
        69,
        70,
        459,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "true",
          "line": 125,
          "bound": null
        },
        {
          "cond": "self.write_literal_byte(b)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 126,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        62,
        64,
        65,
        68,
        57,
        58,
        59,
        61,
        63,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "&b in bytes.iter()",
          "norm": null,
          "value": "false",
          "line": 125,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        37,
        55,
        56,
        57,
        58,
        59,
        61,
        63,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Err/None",
          "line": 121,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        51,
        53,
        54,
        459,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 102,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 103,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "true",
          "line": 120,
          "bound": null
        },
        {
          "cond": "self.write_literal_char(c)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 121,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        48,
        49,
        52,
        41,
        42,
        43,
        45,
        47,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 104,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        76,
        78,
        79,
        460,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 105,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "true",
          "line": 130,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\")\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        72,
        73,
        74,
        77,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 106,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(hir::Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 115,
          "bound": "len == 1"
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "result matches Ok(string)",
          "norm": null,
          "value": "true",
          "line": 118,
          "bound": null
        },
        {
          "cond": "c in string.chars()",
          "norm": null,
          "value": "false",
          "line": 120,
          "bound": null
        },
        {
          "cond": "len > 1",
          "norm": "1 < len",
          "value": "false",
          "line": 130,
          "bound": "len == 1"
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        21,
        22,
        23,
        24,
        33,
        34,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        45,
        47,
        71,
        80,
        81,
        450,
        462
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 107,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:)\")?",
          "norm": null,
          "value": "Err/None",
          "line": 98,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        12,
        13,
        14,
        16,
        18,
        19,
        461,
        462
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 108,
      "conds": [
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 91,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(r\"(?:)\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 98,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        12,
        13,
        14,
        17,
        450,
        462
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}