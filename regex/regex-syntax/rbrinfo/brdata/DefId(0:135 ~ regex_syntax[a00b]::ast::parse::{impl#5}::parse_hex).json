{
  "name": "regex_syntax::ast::parse::{impl#5}::parse_hex",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/parse.rs:1713:5:1733:6",
  "doc": "/// Parse a hex representation of a Unicode codepoint. This handles both\n/// hex notations, i.e., `\\xFF` and `\\x{FFFF}`. This expects the parser to\n/// be positioned at the `x`, `u` or `U` prefix. The parser is advanced to\n/// the first character immediately following the hexadecimal literal.\n",
  "code": [
    "fn parse_hex(&self) -> Result<ast::Literal> {",
    "    assert!(",
    "        self.char() == 'x' || self.char() == 'u' || self.char() == 'U'",
    "    );",
    "",
    "    let hex_kind = match self.char() {",
    "        'x' => ast::HexLiteralKind::X,",
    "        'u' => ast::HexLiteralKind::UnicodeShort,",
    "        _ => ast::HexLiteralKind::UnicodeLong,",
    "    };",
    "    if !self.bump_and_bump_space() {",
    "        return Err(",
    "            self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)",
    "        );",
    "    }",
    "    if self.char() == '{' {",
    "        self.parse_hex_brace(hex_kind)",
    "    } else {",
    "        self.parse_hex_digits(hex_kind)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 28,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        12,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        14,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        2,
        10,
        11,
        13,
        15,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        12,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        14,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        5,
        10,
        11,
        13,
        15,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1721,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        12,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        14,
        16,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1720,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        14,
        16,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        25,
        26,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 1728,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        13,
        15,
        17,
        18,
        19,
        24,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "false",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1719,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 1718,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1723,
          "bound": null
        }
      ],
      "ret": "Err(\n                self.error(self.span(), ast::ErrorKind::EscapeUnexpectedEof)\n            )",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        10,
        11,
        13,
        15,
        17,
        18,
        20,
        21,
        22,
        23,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "self.char() == 'x'",
          "norm": "'x' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'u'",
          "norm": "'u' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        },
        {
          "cond": "self.char() == 'U'",
          "norm": "'U' == self.char()",
          "value": "true",
          "line": 1715,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        9,
        31
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}