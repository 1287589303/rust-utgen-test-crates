{
  "name": "regex_syntax::ast::print::{impl#4}::fmt_class_ascii",
  "mod_info": {
    "name": "ast::print",
    "loc": "regex-syntax/src/ast/mod.rs:12:1:12:15"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/print.rs:342:5:374:6",
  "doc": "",
  "code": [
    "fn fmt_class_ascii(&mut self, ast: &ast::ClassAscii) -> fmt::Result {",
    "    use crate::ast::ClassAsciiKind::*;",
    "    match ast.kind {",
    "        Alnum if ast.negated => self.wtr.write_str(\"[:^alnum:]\"),",
    "        Alnum => self.wtr.write_str(\"[:alnum:]\"),",
    "        Alpha if ast.negated => self.wtr.write_str(\"[:^alpha:]\"),",
    "        Alpha => self.wtr.write_str(\"[:alpha:]\"),",
    "        Ascii if ast.negated => self.wtr.write_str(\"[:^ascii:]\"),",
    "        Ascii => self.wtr.write_str(\"[:ascii:]\"),",
    "        Blank if ast.negated => self.wtr.write_str(\"[:^blank:]\"),",
    "        Blank => self.wtr.write_str(\"[:blank:]\"),",
    "        Cntrl if ast.negated => self.wtr.write_str(\"[:^cntrl:]\"),",
    "        Cntrl => self.wtr.write_str(\"[:cntrl:]\"),",
    "        Digit if ast.negated => self.wtr.write_str(\"[:^digit:]\"),",
    "        Digit => self.wtr.write_str(\"[:digit:]\"),",
    "        Graph if ast.negated => self.wtr.write_str(\"[:^graph:]\"),",
    "        Graph => self.wtr.write_str(\"[:graph:]\"),",
    "        Lower if ast.negated => self.wtr.write_str(\"[:^lower:]\"),",
    "        Lower => self.wtr.write_str(\"[:lower:]\"),",
    "        Print if ast.negated => self.wtr.write_str(\"[:^print:]\"),",
    "        Print => self.wtr.write_str(\"[:print:]\"),",
    "        Punct if ast.negated => self.wtr.write_str(\"[:^punct:]\"),",
    "        Punct => self.wtr.write_str(\"[:punct:]\"),",
    "        Space if ast.negated => self.wtr.write_str(\"[:^space:]\"),",
    "        Space => self.wtr.write_str(\"[:space:]\"),",
    "        Upper if ast.negated => self.wtr.write_str(\"[:^upper:]\"),",
    "        Upper => self.wtr.write_str(\"[:upper:]\"),",
    "        Word if ast.negated => self.wtr.write_str(\"[:^word:]\"),",
    "        Word => self.wtr.write_str(\"[:word:]\"),",
    "        Xdigit if ast.negated => self.wtr.write_str(\"[:^xdigit:]\"),",
    "        Xdigit => self.wtr.write_str(\"[:xdigit:]\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 28,
    "contra": 0,
    "min_set": 28
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "ast.kind matches Xdigit or Xdigit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Xdigit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        28,
        108,
        109,
        111,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "ast.kind matches Xdigit or Xdigit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Xdigit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        28,
        108,
        110,
        29,
        112,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "ast.kind matches Word or Word",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Word",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        26,
        102,
        103,
        105,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "ast.kind matches Word or Word",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Word",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "ast.kind matches Word",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        26,
        102,
        104,
        27,
        106,
        107,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "ast.kind matches Upper or Upper",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Upper",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 367,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        24,
        96,
        97,
        99,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "ast.kind matches Upper or Upper",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Upper",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 367,
          "bound": null
        },
        {
          "cond": "ast.kind matches Upper",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        24,
        96,
        98,
        25,
        100,
        101,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "ast.kind matches Space or Space",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Space",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 365,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        22,
        90,
        91,
        93,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "ast.kind matches Space or Space",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Space",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 365,
          "bound": null
        },
        {
          "cond": "ast.kind matches Space",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        22,
        90,
        92,
        23,
        94,
        95,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "ast.kind matches Punct or Punct",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Punct",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 363,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        20,
        84,
        85,
        87,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "ast.kind matches Punct or Punct",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Punct",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 363,
          "bound": null
        },
        {
          "cond": "ast.kind matches Punct",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        20,
        84,
        86,
        21,
        88,
        89,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "ast.kind matches Print or Print",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Print",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 361,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        18,
        78,
        79,
        81,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "ast.kind matches Print or Print",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Print",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 361,
          "bound": null
        },
        {
          "cond": "ast.kind matches Print",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        18,
        78,
        80,
        19,
        82,
        83,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "ast.kind matches Lower or Lower",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Lower",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 359,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        16,
        72,
        73,
        75,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "ast.kind matches Lower or Lower",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Lower",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 359,
          "bound": null
        },
        {
          "cond": "ast.kind matches Lower",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        16,
        72,
        74,
        17,
        76,
        77,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "ast.kind matches Graph or Graph",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Graph",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 357,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        66,
        67,
        69,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "ast.kind matches Graph or Graph",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Graph",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 357,
          "bound": null
        },
        {
          "cond": "ast.kind matches Graph",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        66,
        68,
        15,
        70,
        71,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "ast.kind matches Digit or Digit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Digit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 355,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        12,
        60,
        61,
        63,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "ast.kind matches Digit or Digit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Digit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 355,
          "bound": null
        },
        {
          "cond": "ast.kind matches Digit",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        12,
        60,
        62,
        13,
        64,
        65,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "ast.kind matches Cntrl or Cntrl",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Cntrl",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 353,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        54,
        55,
        57,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "ast.kind matches Cntrl or Cntrl",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Cntrl",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 353,
          "bound": null
        },
        {
          "cond": "ast.kind matches Cntrl",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        54,
        56,
        11,
        58,
        59,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "ast.kind matches Blank or Blank",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Blank",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        48,
        49,
        51,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "ast.kind matches Blank or Blank",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Blank",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 351,
          "bound": null
        },
        {
          "cond": "ast.kind matches Blank",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        48,
        50,
        9,
        52,
        53,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "ast.kind matches Ascii or Ascii",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Ascii",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 349,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        42,
        43,
        45,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "ast.kind matches Ascii or Ascii",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Ascii",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 349,
          "bound": null
        },
        {
          "cond": "ast.kind matches Ascii",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        42,
        44,
        7,
        46,
        47,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "ast.kind matches Alpha or Alpha",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alpha",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 347,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        36,
        37,
        39,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "ast.kind matches Alpha or Alpha",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alpha",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 347,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alpha",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        36,
        38,
        5,
        40,
        41,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "ast.kind matches Alnum or Alnum",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alnum",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "true",
          "line": 345,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        30,
        31,
        33,
        113
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "ast.kind matches Alnum or Alnum",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alnum",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        },
        {
          "cond": "ast.negated",
          "norm": null,
          "value": "false",
          "line": 345,
          "bound": null
        },
        {
          "cond": "ast.kind matches Alnum",
          "norm": null,
          "value": "true",
          "line": 344,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        30,
        32,
        3,
        34,
        35,
        113
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}