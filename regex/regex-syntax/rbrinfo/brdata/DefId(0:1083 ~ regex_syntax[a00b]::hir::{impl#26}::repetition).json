{
  "name": "regex_syntax::hir::{impl#26}::repetition",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/mod.rs:2503:5:2554:6",
  "doc": "/// Create a new set of HIR properties for a repetition.\n",
  "code": [
    "fn repetition(rep: &Repetition) -> Properties {",
    "    let p = rep.sub.properties();",
    "    let minimum_len = p.minimum_len().map(|child_min| {",
    "        let rep_min = usize::try_from(rep.min).unwrap_or(usize::MAX);",
    "        child_min.saturating_mul(rep_min)",
    "    });",
    "    let maximum_len = rep.max.and_then(|rep_max| {",
    "        let rep_max = usize::try_from(rep_max).ok()?;",
    "        let child_max = p.maximum_len()?;",
    "        child_max.checked_mul(rep_max)",
    "    });",
    "",
    "    let mut inner = PropertiesI {",
    "        minimum_len,",
    "        maximum_len,",
    "        look_set: p.look_set(),",
    "        look_set_prefix: LookSet::empty(),",
    "        look_set_suffix: LookSet::empty(),",
    "        look_set_prefix_any: p.look_set_prefix_any(),",
    "        look_set_suffix_any: p.look_set_suffix_any(),",
    "        utf8: p.is_utf8(),",
    "        explicit_captures_len: p.explicit_captures_len(),",
    "        static_explicit_captures_len: p.static_explicit_captures_len(),",
    "        literal: false,",
    "        alternation_literal: false,",
    "    };",
    "    // If the repetition operator can match the empty string, then its",
    "    // lookset prefix and suffixes themselves remain empty since they are",
    "    // no longer required to match.",
    "    if rep.min > 0 {",
    "        inner.look_set_prefix = p.look_set_prefix();",
    "        inner.look_set_suffix = p.look_set_suffix();",
    "    }",
    "    // If the static captures len of the sub-expression is not known or",
    "    // is greater than zero, then it automatically propagates to the",
    "    // repetition, regardless of the repetition. Otherwise, it might",
    "    // change, but only when the repetition can match 0 times.",
    "    if rep.min == 0",
    "        && inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
    "    {",
    "        // If we require a match 0 times, then our captures len is",
    "        // guaranteed to be zero. Otherwise, if we *can* match the empty",
    "        // string, then it's impossible to know how many captures will be",
    "        // in the resulting match.",
    "        if rep.max == Some(0) {",
    "            inner.static_explicit_captures_len = Some(0);",
    "        } else {",
    "            inner.static_explicit_captures_len = None;",
    "        }",
    "    }",
    "    Properties(Box::new(inner))",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "true",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "true",
          "line": 2541,
          "bound": null
        },
        {
          "cond": "rep.max == Some(0)",
          "norm": "Some(0) == rep.max",
          "value": "true",
          "line": 2547,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "true",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "true",
          "line": 2541,
          "bound": null
        },
        {
          "cond": "rep.max == Some(0)",
          "norm": "Some(0) == rep.max",
          "value": "false",
          "line": 2547,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        20,
        21,
        23,
        24,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "true",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "false",
          "line": 2541,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        18,
        19,
        25,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "true",
          "line": 2532,
          "bound": null
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "true",
          "line": 2540,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        26,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "false",
          "line": 2532,
          "bound": "rep.min == 0"
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "true",
          "line": 2541,
          "bound": null
        },
        {
          "cond": "rep.max == Some(0)",
          "norm": "Some(0) == rep.max",
          "value": "true",
          "line": 2547,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "false",
          "line": 2532,
          "bound": "rep.min == 0"
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "true",
          "line": 2541,
          "bound": null
        },
        {
          "cond": "rep.max == Some(0)",
          "norm": "Some(0) == rep.max",
          "value": "false",
          "line": 2547,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        16,
        17,
        18,
        19,
        20,
        21,
        23,
        24,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "false",
          "line": 2532,
          "bound": "rep.min == 0"
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "false",
          "line": 2540,
          "bound": null
        },
        {
          "cond": "inner.static_explicit_captures_len.map_or(false, |len| len > 0)",
          "norm": null,
          "value": "false",
          "line": 2541,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        16,
        17,
        18,
        19,
        25,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "rep.min > 0",
          "norm": "0 < rep.min",
          "value": "false",
          "line": 2532,
          "bound": "rep.min == 0"
        },
        {
          "cond": "rep.min == 0",
          "norm": "0 == rep.min",
          "value": "true",
          "line": 2540,
          "bound": null
        }
      ],
      "ret": "Properties(Box::new(inner))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        16,
        17,
        26,
        27,
        28,
        29,
        30
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}