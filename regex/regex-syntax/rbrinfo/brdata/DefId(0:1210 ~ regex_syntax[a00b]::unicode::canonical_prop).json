{
  "name": "regex_syntax::unicode::canonical_prop",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:530:1:563:2",
  "doc": "/// Find the canonical property name for the given normalized property name.\n///\n/// If no such property exists, then `None` is returned.\n///\n/// The normalized property name must have been normalized according to\n/// UAX44 LM3, which can be done using `symbolic_name_normalize`.\n///\n/// If the property names data is not available, then an error is returned.\n",
  "code": [
    "fn canonical_prop(",
    "    normalized_name: &str,",
    ") -> Result<Option<&'static str>, Error> {",
    "    #[cfg(not(any(",
    "        feature = \"unicode-age\",",
    "        feature = \"unicode-bool\",",
    "        feature = \"unicode-gencat\",",
    "        feature = \"unicode-perl\",",
    "        feature = \"unicode-script\",",
    "        feature = \"unicode-segment\",",
    "    )))]",
    "    fn imp(_: &str) -> Result<Option<&'static str>, Error> {",
    "        Err(Error::PropertyNotFound)",
    "    }",
    "",
    "    #[cfg(any(",
    "        feature = \"unicode-age\",",
    "        feature = \"unicode-bool\",",
    "        feature = \"unicode-gencat\",",
    "        feature = \"unicode-perl\",",
    "        feature = \"unicode-script\",",
    "        feature = \"unicode-segment\",",
    "    ))]",
    "    fn imp(name: &str) -> Result<Option<&'static str>, Error> {",
    "        use crate::unicode_tables::property_names::PROPERTY_NAMES;",
    "",
    "        Ok(PROPERTY_NAMES",
    "            .binary_search_by_key(&name, |&(n, _)| n)",
    "            .ok()",
    "            .map(|i| PROPERTY_NAMES[i].1))",
    "    }",
    "",
    "    imp(normalized_name)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}