{
  "name": "regex_syntax::hir::translate::{impl#2}::translate",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/translate.rs:173:5:175:6",
  "doc": "/// Translate the given abstract syntax tree (AST) into a high level\n/// intermediate representation (HIR).\n///\n/// If there was a problem doing the translation, then an HIR-specific\n/// error is returned.\n///\n/// The original pattern string used to produce the `Ast` *must* also be\n/// provided. The translator does not use the pattern string during any\n/// correct translation, but is used for error reporting.\n",
  "code": [
    "pub fn translate(&mut self, pattern: &str, ast: &Ast) -> Result<Hir> {",
    "    ast::visit(ast, TranslatorI::new(self, pattern))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}