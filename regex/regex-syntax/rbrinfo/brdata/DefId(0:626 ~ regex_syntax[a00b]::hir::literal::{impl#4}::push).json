{
  "name": "regex_syntax::hir::literal::{impl#4}::push",
  "mod_info": {
    "name": "hir::literal",
    "loc": "regex-syntax/src/hir/mod.rs:42:1:42:17"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/literal.rs:817:5:826:6",
  "doc": "/// Push a literal to the end of this sequence.\n///\n/// If this sequence is not finite, then this is a no-op.\n///\n/// Similarly, if the most recently added item of this sequence is\n/// equivalent to the literal given, then it is not added. This reflects\n/// a `Seq`'s \"set like\" behavior, and represents a practical trade off.\n/// Namely, there is never any need to have two adjacent and equivalent\n/// literals in the same sequence, _and_ it is easy to detect in some\n/// cases.\n",
  "code": [
    "pub fn push(&mut self, lit: Literal) {",
    "    let lits = match self.literals {",
    "        None => return,",
    "        Some(ref mut lits) => lits,",
    "    };",
    "    if lits.last().map_or(false, |m| m == &lit) {",
    "        return;",
    "    }",
    "    lits.push(lit);",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.literals matches Some(ref mut lits)",
          "norm": null,
          "value": "true",
          "line": 818,
          "bound": null
        },
        {
          "cond": "lits.last().map_or(false, |m| m == &lit)",
          "norm": null,
          "value": "true",
          "line": 822,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        5,
        6,
        7,
        8,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.literals matches Some(ref mut lits)",
          "norm": null,
          "value": "true",
          "line": 818,
          "bound": null
        },
        {
          "cond": "lits.last().map_or(false, |m| m == &lit)",
          "norm": null,
          "value": "false",
          "line": 822,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        5,
        6,
        7,
        9,
        10,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.literals matches None",
          "norm": null,
          "value": "true",
          "line": 818,
          "bound": null
        },
        {
          "cond": "self.literals matches None",
          "norm": null,
          "value": "true",
          "line": 818,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}