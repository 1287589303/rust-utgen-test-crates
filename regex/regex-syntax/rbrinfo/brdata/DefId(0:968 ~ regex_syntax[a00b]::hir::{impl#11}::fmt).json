{
  "name": "regex_syntax::hir::{impl#11}::fmt",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/mod.rs:1029:5:1046:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut core::fmt::Formatter) -> core::fmt::Result {",
    "    use crate::debug::Byte;",
    "",
    "    let mut fmter = f.debug_set();",
    "    match *self {",
    "        Class::Unicode(ref cls) => {",
    "            for r in cls.ranges().iter() {",
    "                fmter.entry(&(r.start..=r.end));",
    "            }",
    "        }",
    "        Class::Bytes(ref cls) => {",
    "            for r in cls.ranges().iter() {",
    "                fmter.entry(&(Byte(r.start)..=Byte(r.end)));",
    "            }",
    "        }",
    "    }",
    "    fmter.finish()",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 2,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches Class::Bytes(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "true",
          "line": 1040,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "false",
          "line": 1040,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        18,
        19,
        20,
        21,
        22,
        23,
        26,
        28,
        29,
        21,
        22,
        23,
        25,
        27,
        30,
        31
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches Class::Bytes(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "false",
          "line": 1040,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        18,
        19,
        20,
        21,
        22,
        23,
        25,
        27,
        30,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches Class::Unicode(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "*self matches Class::Unicode(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        14,
        16,
        17,
        9,
        10,
        11,
        13,
        15,
        30,
        31
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches Class::Unicode(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "*self matches Class::Unicode(ref cls)",
          "norm": null,
          "value": "true",
          "line": 1033,
          "bound": null
        },
        {
          "cond": "r in cls.ranges().iter()",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        13,
        15,
        30,
        31
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}