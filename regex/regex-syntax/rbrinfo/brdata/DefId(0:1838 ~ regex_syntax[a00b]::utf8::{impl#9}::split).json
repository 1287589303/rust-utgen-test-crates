{
  "name": "regex_syntax::utf8::{impl#9}::split",
  "mod_info": {
    "name": "utf8",
    "loc": "regex-syntax/src/lib.rs:195:1:195:14"
  },
  "visible": false,
  "loc": "regex-syntax/src/utf8.rs:396:5:405:6",
  "doc": "/// split splits this range if it overlaps with a surrogate codepoint.\n///\n/// Either or both ranges may be invalid.\n",
  "code": [
    "fn split(&self) -> Option<(ScalarRange, ScalarRange)> {",
    "    if self.start < 0xE000 && self.end > 0xD7FF {",
    "        Some((",
    "            ScalarRange { start: self.start, end: 0xD7FF },",
    "            ScalarRange { start: 0xE000, end: self.end },",
    "        ))",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.start < 0xE000",
          "norm": "0xE000 > self.start",
          "value": "true",
          "line": 397,
          "bound": null
        },
        {
          "cond": "self.end > 0xD7FF",
          "norm": "0xD7FF < self.end",
          "value": "true",
          "line": 397,
          "bound": null
        }
      ],
      "ret": "Some((\n                ScalarRange { start: self.start, end: 0xD7FF },\n                ScalarRange { start: 0xE000, end: self.end },\n            ))",
      "path": [
        0,
        1,
        2,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.start < 0xE000",
          "norm": "0xE000 > self.start",
          "value": "true",
          "line": 397,
          "bound": null
        },
        {
          "cond": "self.end > 0xD7FF",
          "norm": "0xD7FF < self.end",
          "value": "false",
          "line": 397,
          "bound": "self.end == 0xD7FF"
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.start < 0xE000",
          "norm": "0xE000 > self.start",
          "value": "false",
          "line": 397,
          "bound": "self.start == 0xE000"
        }
      ],
      "ret": "None",
      "path": [
        0,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}