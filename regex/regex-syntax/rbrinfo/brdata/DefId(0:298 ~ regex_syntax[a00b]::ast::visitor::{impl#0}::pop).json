{
  "name": "regex_syntax::ast::visitor::{impl#0}::pop",
  "mod_info": {
    "name": "ast::visitor",
    "loc": "regex-syntax/src/ast/mod.rs:13:1:13:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/visitor.rs:288:5:310:6",
  "doc": "/// Pops the given frame. If the frame has an additional inductive step,\n/// then return it, otherwise return `None`.\n",
  "code": [
    "fn pop(&self, induct: Frame<'a>) -> Option<Frame<'a>> {",
    "    match induct {",
    "        Frame::Repetition(_) => None,",
    "        Frame::Group(_) => None,",
    "        Frame::Concat { tail, .. } => {",
    "            if tail.is_empty() {",
    "                None",
    "            } else {",
    "                Some(Frame::Concat { head: &tail[0], tail: &tail[1..] })",
    "            }",
    "        }",
    "        Frame::Alternation { tail, .. } => {",
    "            if tail.is_empty() {",
    "                None",
    "            } else {",
    "                Some(Frame::Alternation {",
    "                    head: &tail[0],",
    "                    tail: &tail[1..],",
    "                })",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "induct matches Frame::Alternation { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "tail.is_empty()",
          "norm": null,
          "value": "true",
          "line": 300,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        5,
        15,
        16,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "induct matches Frame::Alternation { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "tail.is_empty()",
          "norm": null,
          "value": "false",
          "line": 300,
          "bound": null
        }
      ],
      "ret": "Some(Frame::Alternation {\n                        head: &tail[0],\n                        tail: &tail[1..],\n                    })",
      "path": [
        0,
        5,
        15,
        17,
        18,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "induct matches Frame::Concat { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "induct matches Frame::Concat { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "tail.is_empty()",
          "norm": null,
          "value": "true",
          "line": 293,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        4,
        8,
        9,
        10,
        14,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "induct matches Frame::Concat { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "induct matches Frame::Concat { tail, .. }",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "tail.is_empty()",
          "norm": null,
          "value": "false",
          "line": 293,
          "bound": null
        }
      ],
      "ret": "Some(Frame::Concat { head: &tail[0], tail: &tail[1..] })",
      "path": [
        0,
        4,
        8,
        9,
        11,
        12,
        13,
        14,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "induct matches Frame::Group(_)",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "induct matches Frame::Group(_)",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        3,
        7,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "induct matches Frame::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "induct matches Frame::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        2,
        6,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}