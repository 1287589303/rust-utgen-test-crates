{
  "name": "regex_syntax::ast::print::{impl#3}::visit_class_set_item_post",
  "mod_info": {
    "name": "ast::print",
    "loc": "regex-syntax/src/ast/mod.rs:12:1:12:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/print.rs:121:5:142:6",
  "doc": "",
  "code": [
    "fn visit_class_set_item_post(",
    "    &mut self,",
    "    ast: &ast::ClassSetItem,",
    ") -> Result<(), Self::Err> {",
    "    use crate::ast::ClassSetItem::*;",
    "",
    "    match *ast {",
    "        Empty(_) => Ok(()),",
    "        Literal(ref x) => self.fmt_literal(x),",
    "        Range(ref x) => {",
    "            self.fmt_literal(&x.start)?;",
    "            self.wtr.write_str(\"-\")?;",
    "            self.fmt_literal(&x.end)?;",
    "            Ok(())",
    "        }",
    "        Ascii(ref x) => self.fmt_class_ascii(x),",
    "        Unicode(ref x) => self.fmt_class_unicode(x),",
    "        Perl(ref x) => self.fmt_class_perl(x),",
    "        Bracketed(ref x) => self.fmt_class_bracketed_post(x),",
    "        Union(_) => Ok(()),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 11,
    "contra": 0,
    "min_set": 11
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*ast matches Union(_)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        9,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*ast matches Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        41,
        42,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*ast matches Perl(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Perl(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        39,
        40,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*ast matches Unicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Unicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        37,
        38,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*ast matches Ascii(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Ascii(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        35,
        36,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 131,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        13,
        14,
        15,
        17,
        19,
        20,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Err/None",
          "line": 132,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        13,
        14,
        15,
        18,
        21,
        22,
        24,
        26,
        27,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 132,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.end)?",
          "norm": null,
          "value": "Err/None",
          "line": 133,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        13,
        14,
        15,
        18,
        21,
        22,
        25,
        28,
        29,
        31,
        33,
        34,
        43,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 131,
          "bound": null
        },
        {
          "cond": "self.wtr.write_str(\"-\")?",
          "norm": null,
          "value": "Ok/Some",
          "line": 132,
          "bound": null
        },
        {
          "cond": "self.fmt_literal(&x.end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 133,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        4,
        13,
        14,
        15,
        18,
        21,
        22,
        25,
        28,
        29,
        32,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*ast matches Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        11,
        12,
        44
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*ast matches Empty(_)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        },
        {
          "cond": "*ast matches Empty(_)",
          "norm": null,
          "value": "true",
          "line": 127,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        10,
        44
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}