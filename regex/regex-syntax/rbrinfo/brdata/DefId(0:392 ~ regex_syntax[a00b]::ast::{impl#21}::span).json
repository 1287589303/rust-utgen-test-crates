{
  "name": "regex_syntax::ast::{impl#21}::span",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1146:5:1151:6",
  "doc": "/// Return the span of this character class set.\n",
  "code": [
    "pub fn span(&self) -> &Span {",
    "    match *self {",
    "        ClassSet::Item(ref x) => x.span(),",
    "        ClassSet::BinaryOp(ref x) => &x.span,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref x)",
          "norm": null,
          "value": "true",
          "line": 1147,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSet::Item(ref x) => x.span(),\n            ClassSet::BinaryOp(ref x) => &x.span,\n        }",
      "path": [
        0,
        3,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref x)",
          "norm": null,
          "value": "true",
          "line": 1147,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref x)",
          "norm": null,
          "value": "true",
          "line": 1147,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSet::Item(ref x) => x.span(),\n            ClassSet::BinaryOp(ref x) => &x.span,\n        }",
      "path": [
        0,
        2,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}