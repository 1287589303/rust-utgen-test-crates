{
  "name": "regex_syntax::hir::translate::{impl#5}::hir_ascii_unicode_class",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/translate.rs:1061:5:1071:6",
  "doc": "",
  "code": [
    "fn hir_ascii_unicode_class(",
    "    &self,",
    "    ast: &ast::ClassAscii,",
    ") -> Result<hir::ClassUnicode> {",
    "    let mut cls = hir::ClassUnicode::new(",
    "        ascii_class_as_chars(&ast.kind)",
    "            .map(|(s, e)| hir::ClassUnicodeRange::new(s, e)),",
    "    );",
    "    self.unicode_fold_and_negate(&ast.span, ast.negated, &mut cls)?;",
    "    Ok(cls)",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.unicode_fold_and_negate(&ast.span, ast.negated, &mut cls)?",
          "norm": null,
          "value": "Err/None",
          "line": 1069,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        9,
        10,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.unicode_fold_and_negate(&ast.span, ast.negated, &mut cls)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1069,
          "bound": null
        }
      ],
      "ret": "Ok(cls)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        8,
        11,
        12,
        13,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}