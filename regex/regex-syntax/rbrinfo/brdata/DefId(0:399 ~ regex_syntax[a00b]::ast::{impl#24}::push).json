{
  "name": "regex_syntax::ast::{impl#24}::push",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1250:5:1256:6",
  "doc": "/// Push a new item in this union.\n///\n/// The ending position of this union's span is updated to the ending\n/// position of the span of the item given. If the union is empty, then\n/// the starting position of this union is set to the starting position\n/// of this item.\n///\n/// In other words, if you only use this method to add items to a union\n/// and you set the spans on each item correctly, then you should never\n/// need to adjust the span of the union directly.\n",
  "code": [
    "pub fn push(&mut self, item: ClassSetItem) {",
    "    if self.items.is_empty() {",
    "        self.span.start = item.span().start;",
    "    }",
    "    self.span.end = item.span().end;",
    "    self.items.push(item);",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.items.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1251,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1251,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}