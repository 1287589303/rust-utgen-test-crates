{
  "name": "regex_syntax::hir::translate::{impl#4}::visit_pre",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/translate.rs:338:5:369:6",
  "doc": "",
  "code": [
    "fn visit_pre(&mut self, ast: &Ast) -> Result<()> {",
    "    match *ast {",
    "        Ast::ClassBracketed(_) => {",
    "            if self.flags().unicode() {",
    "                let cls = hir::ClassUnicode::empty();",
    "                self.push(HirFrame::ClassUnicode(cls));",
    "            } else {",
    "                let cls = hir::ClassBytes::empty();",
    "                self.push(HirFrame::ClassBytes(cls));",
    "            }",
    "        }",
    "        Ast::Repetition(_) => self.push(HirFrame::Repetition),",
    "        Ast::Group(ref x) => {",
    "            let old_flags = x",
    "                .flags()",
    "                .map(|ast| self.set_flags(ast))",
    "                .unwrap_or_else(|| self.flags());",
    "            self.push(HirFrame::Group { old_flags });",
    "        }",
    "        Ast::Concat(_) => {",
    "            self.push(HirFrame::Concat);",
    "        }",
    "        Ast::Alternation(ref x) => {",
    "            self.push(HirFrame::Alternation);",
    "            if !x.asts.is_empty() {",
    "                self.push(HirFrame::AlternationBranch);",
    "            }",
    "        }",
    "        _ => {}",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassBracketed(_)",
          "norm": null,
          "value": "false",
          "line": 340,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "false",
          "line": 360,
          "bound": null
        },
        {
          "cond": "*ast matches _",
          "norm": null,
          "value": "true",
          "line": 366,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Repetition(_)",
          "norm": null,
          "value": "false",
          "line": 349,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Concat(_)",
          "norm": null,
          "value": "false",
          "line": 357,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "false",
          "line": 350,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*ast matches Ast::Concat(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Concat(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        5,
        28,
        29,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "x.asts.is_empty()",
          "norm": null,
          "value": "true",
          "line": 362,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        6,
        30,
        31,
        32,
        33,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Alternation(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "x.asts.is_empty()",
          "norm": null,
          "value": "false",
          "line": 362,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        6,
        30,
        31,
        32,
        34,
        35,
        36,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Group(ref x)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        4,
        23,
        24,
        25,
        26,
        27,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*ast matches Ast::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::Repetition(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        3,
        21,
        22,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassBracketed(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassBracketed(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "self.flags().unicode()",
          "norm": null,
          "value": "true",
          "line": 341,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        20,
        37
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*ast matches Ast::ClassBracketed(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "*ast matches Ast::ClassBracketed(_)",
          "norm": null,
          "value": "true",
          "line": 339,
          "bound": null
        },
        {
          "cond": "self.flags().unicode()",
          "norm": null,
          "value": "false",
          "line": 341,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        7,
        8,
        9,
        15,
        16,
        17,
        18,
        19,
        20,
        37
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}