{
  "name": "regex_syntax::ast::{impl#27}::add_item",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1545:5:1553:6",
  "doc": "/// Add the given item to this sequence of flags.\n///\n/// If the item was added successfully, then `None` is returned. If the\n/// given item is a duplicate, then `Some(i)` is returned, where\n/// `items[i].kind == item.kind`.\n",
  "code": [
    "pub fn add_item(&mut self, item: FlagsItem) -> Option<usize> {",
    "    for (i, x) in self.items.iter().enumerate() {",
    "        if x.kind == item.kind {",
    "            return Some(i);",
    "        }",
    "    }",
    "    self.items.push(item);",
    "    None",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 1,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(i, x) in self.items.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1546,
          "bound": null
        },
        {
          "cond": "x.kind == item.kind",
          "norm": "item.kind == x.kind",
          "value": "true",
          "line": 1547,
          "bound": null
        }
      ],
      "ret": "Some(i)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        16
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(i, x) in self.items.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 1546,
          "bound": null
        },
        {
          "cond": "x.kind == item.kind",
          "norm": "item.kind == x.kind",
          "value": "false",
          "line": 1547,
          "bound": null
        },
        {
          "cond": "(i, x) in self.items.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1546,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        5,
        6,
        7,
        9,
        11,
        15,
        16
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(i, x) in self.items.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 1546,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        15,
        16
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}