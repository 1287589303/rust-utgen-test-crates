{
  "name": "regex_syntax::unicode::{impl#4}::get",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:198:5:200:6",
  "doc": "/// Returns the index at which `c` occurs in the simple case fold table. If\n/// `c` does not occur, then this returns an `i` such that `table[i-1].0 <\n/// c` and `table[i].0 > c`.\n",
  "code": [
    "fn get(&self, c: char) -> Result<usize, usize> {",
    "    self.table.binary_search_by_key(&c, |&(c1, _)| c1)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}