{
  "name": "regex_syntax::escape",
  "mod_info": {
    "name": "",
    "loc": "regex-syntax/src/lib.rs:1:1:431:2"
  },
  "visible": true,
  "loc": "regex-syntax/src/lib.rs:201:1:205:2",
  "doc": "/// Escapes all regular expression meta characters in `text`.\n///\n/// The string returned may be safely used as a literal in a regular\n/// expression.\n",
  "code": [
    "pub fn escape(text: &str) -> String {",
    "    let mut quoted = String::new();",
    "    escape_into(text, &mut quoted);",
    "    quoted",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "quoted",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}