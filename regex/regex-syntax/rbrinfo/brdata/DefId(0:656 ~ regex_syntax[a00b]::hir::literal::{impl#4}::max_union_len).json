{
  "name": "regex_syntax::hir::literal::{impl#4}::max_union_len",
  "mod_info": {
    "name": "hir::literal",
    "loc": "regex-syntax/src/hir/mod.rs:42:1:42:17"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/literal.rs:1570:5:1574:6",
  "doc": "/// Return the maximum length of the sequence that would result from\n/// unioning `self` with `other`. If either set is infinite, then this\n/// returns `None`.\n",
  "code": [
    "pub fn max_union_len(&self, other: &Seq) -> Option<usize> {",
    "    let len1 = self.len()?;",
    "    let len2 = other.len()?;",
    "    Some(len1.saturating_add(len2))",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.len()?",
          "norm": null,
          "value": "Err/None",
          "line": 1571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.len()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1571,
          "bound": null
        },
        {
          "cond": "other.len()?",
          "norm": null,
          "value": "Err/None",
          "line": 1572,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        11,
        13,
        14,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.len()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1571,
          "bound": null
        },
        {
          "cond": "other.len()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1572,
          "bound": null
        }
      ],
      "ret": "Some(len1.saturating_add(len2))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        12,
        15,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}