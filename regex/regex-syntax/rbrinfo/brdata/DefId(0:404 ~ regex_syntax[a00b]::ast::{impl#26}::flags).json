{
  "name": "regex_syntax::ast::{impl#26}::flags",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1429:5:1434:6",
  "doc": "/// If this group is non-capturing, then this returns the (possibly empty)\n/// set of flags. Otherwise, `None` is returned.\n",
  "code": [
    "pub fn flags(&self) -> Option<&Flags> {",
    "    match self.kind {",
    "        GroupKind::NonCapturing(ref flags) => Some(flags),",
    "        _ => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.kind matches GroupKind::NonCapturing(ref flags)",
          "norm": null,
          "value": "false",
          "line": 1431,
          "bound": null
        },
        {
          "cond": "self.kind matches _",
          "norm": null,
          "value": "true",
          "line": 1432,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.kind matches GroupKind::NonCapturing(ref flags)",
          "norm": null,
          "value": "true",
          "line": 1430,
          "bound": null
        },
        {
          "cond": "self.kind matches GroupKind::NonCapturing(ref flags)",
          "norm": null,
          "value": "true",
          "line": 1430,
          "bound": null
        }
      ],
      "ret": "Some(flags)",
      "path": [
        0,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}