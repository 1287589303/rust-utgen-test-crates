{
  "name": "regex_syntax::ast::{impl#30}::drop",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1690:5:1744:6",
  "doc": "",
  "code": [
    "fn drop(&mut self) {",
    "    use core::mem;",
    "",
    "    match *self {",
    "        ClassSet::Item(ref item) => match *item {",
    "            ClassSetItem::Empty(_)",
    "            | ClassSetItem::Literal(_)",
    "            | ClassSetItem::Range(_)",
    "            | ClassSetItem::Ascii(_)",
    "            | ClassSetItem::Unicode(_)",
    "            | ClassSetItem::Perl(_) => return,",
    "            ClassSetItem::Bracketed(ref x) => {",
    "                if x.kind.is_empty() {",
    "                    return;",
    "                }",
    "            }",
    "            ClassSetItem::Union(ref x) => {",
    "                if x.items.is_empty() {",
    "                    return;",
    "                }",
    "            }",
    "        },",
    "        ClassSet::BinaryOp(ref op) => {",
    "            if op.lhs.is_empty() && op.rhs.is_empty() {",
    "                return;",
    "            }",
    "        }",
    "    }",
    "",
    "    let empty_span = || Span::splat(Position::new(0, 0, 0));",
    "    let empty_set = || ClassSet::Item(ClassSetItem::Empty(empty_span()));",
    "    let mut stack = vec![mem::replace(self, empty_set())];",
    "    while let Some(mut set) = stack.pop() {",
    "        match set {",
    "            ClassSet::Item(ref mut item) => match *item {",
    "                ClassSetItem::Empty(_)",
    "                | ClassSetItem::Literal(_)",
    "                | ClassSetItem::Range(_)",
    "                | ClassSetItem::Ascii(_)",
    "                | ClassSetItem::Unicode(_)",
    "                | ClassSetItem::Perl(_) => {}",
    "                ClassSetItem::Bracketed(ref mut x) => {",
    "                    stack.push(mem::replace(&mut x.kind, empty_set()));",
    "                }",
    "                ClassSetItem::Union(ref mut x) => {",
    "                    stack.extend(x.items.drain(..).map(ClassSet::Item));",
    "                }",
    "            },",
    "            ClassSet::BinaryOp(ref mut op) => {",
    "                stack.push(mem::replace(&mut op.lhs, empty_set()));",
    "                stack.push(mem::replace(&mut op.rhs, empty_set()));",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 49,
    "contra": 0,
    "min_set": 18
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        21,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::BinaryOp(ref mut op)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        40,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        44,
        51,
        52,
        53,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        43,
        47,
        48,
        49,
        50,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "op.rhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        19,
        20,
        22,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::BinaryOp(ref mut op)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        40,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        44,
        51,
        52,
        53,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        43,
        47,
        48,
        49,
        50,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "*self matches ClassSet::BinaryOp(ref op)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "op.lhs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1713,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        18,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1707,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        15,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::BinaryOp(ref mut op)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        40,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        44,
        51,
        52,
        53,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        43,
        47,
        48,
        49,
        50,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.items.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1707,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        7,
        14,
        16,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1702,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        12,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::BinaryOp(ref mut op)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        40,
        55,
        56,
        57,
        58,
        59,
        60,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Union(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        44,
        51,
        52,
        53,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref mut x)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        43,
        47,
        48,
        49,
        50,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "x.kind.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1702,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "set matches ClassSet::Item(ref mut item)",
          "norm": null,
          "value": "true",
          "line": 1723,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Ascii(_) or ClassSetItem::Unicode(_) or ClassSetItem::Perl(_) or ClassSetItem::Empty(_) or ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1724,
          "bound": null
        },
        {
          "cond": "let Some(mut set) = stack.pop()",
          "norm": null,
          "value": "true",
          "line": 1722,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        6,
        10,
        11,
        13,
        17,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        41,
        45,
        46,
        54,
        61,
        63,
        64,
        33,
        34,
        35,
        62,
        65,
        66,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*self matches ClassSet::Item(ref item)",
          "norm": null,
          "value": "true",
          "line": 1693,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        },
        {
          "cond": "*item matches ClassSetItem::Literal(_) or ClassSetItem::Empty(_) or ClassSetItem::Perl(_) or ClassSetItem::Range(_) or ClassSetItem::Unicode(_) or ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 1694,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        8,
        9,
        67,
        68,
        69
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}