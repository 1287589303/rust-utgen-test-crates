{
  "name": "regex_syntax::ast::visitor::{impl#2}::child",
  "mod_info": {
    "name": "ast::visitor",
    "loc": "regex-syntax/src/ast/mod.rs:13:1:13:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/ast/visitor.rs:456:5:467:6",
  "doc": "/// Perform the next inductive step on this frame and return the next\n/// child class node to visit.\n",
  "code": [
    "fn child(&self) -> ClassInduct<'a> {",
    "    match *self {",
    "        ClassFrame::Union { head, .. } => ClassInduct::Item(head),",
    "        ClassFrame::Binary { op, .. } => ClassInduct::BinaryOp(op),",
    "        ClassFrame::BinaryLHS { ref lhs, .. } => {",
    "            ClassInduct::from_set(lhs)",
    "        }",
    "        ClassFrame::BinaryRHS { ref rhs, .. } => {",
    "            ClassInduct::from_set(rhs)",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches ClassFrame::BinaryRHS { ref rhs, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches ClassFrame::BinaryLHS { ref lhs, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "*self matches ClassFrame::BinaryLHS { ref lhs, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        8,
        9,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches ClassFrame::Binary { op, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "*self matches ClassFrame::Binary { op, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        }
      ],
      "ret": "ClassInduct::BinaryOp(op)",
      "path": [
        0,
        3,
        7,
        11
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches ClassFrame::Union { head, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        },
        {
          "cond": "*self matches ClassFrame::Union { head, .. }",
          "norm": null,
          "value": "true",
          "line": 457,
          "bound": null
        }
      ],
      "ret": "ClassInduct::Item(head)",
      "path": [
        0,
        2,
        6,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}