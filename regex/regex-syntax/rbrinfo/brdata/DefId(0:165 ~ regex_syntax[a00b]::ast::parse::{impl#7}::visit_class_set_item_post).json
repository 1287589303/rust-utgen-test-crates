{
  "name": "regex_syntax::ast::parse::{impl#7}::visit_class_set_item_post",
  "mod_info": {
    "name": "ast::parse",
    "loc": "regex-syntax/src/ast/mod.rs:11:1:11:15"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/parse.rs:2380:5:2399:6",
  "doc": "",
  "code": [
    "fn visit_class_set_item_post(",
    "    &mut self,",
    "    ast: &ast::ClassSetItem,",
    ") -> Result<()> {",
    "    match *ast {",
    "        ast::ClassSetItem::Empty(_)",
    "        | ast::ClassSetItem::Literal(_)",
    "        | ast::ClassSetItem::Range(_)",
    "        | ast::ClassSetItem::Ascii(_)",
    "        | ast::ClassSetItem::Unicode(_)",
    "        | ast::ClassSetItem::Perl(_) => {",
    "            // These are all base cases, so we don't decrement depth.",
    "            Ok(())",
    "        }",
    "        ast::ClassSetItem::Bracketed(_) | ast::ClassSetItem::Union(_) => {",
    "            self.decrement_depth();",
    "            Ok(())",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Union(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Bracketed(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        3,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Ascii(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Range(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Literal(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*ast matches ast::ClassSetItem::Empty(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        },
        {
          "cond": "*ast matches ast::ClassSetItem::Unicode(_) or ast::ClassSetItem::Literal(_) or ast::ClassSetItem::Ascii(_) or ast::ClassSetItem::Empty(_) or ast::ClassSetItem::Range(_) or ast::ClassSetItem::Perl(_)",
          "norm": null,
          "value": "true",
          "line": 2384,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        4,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}