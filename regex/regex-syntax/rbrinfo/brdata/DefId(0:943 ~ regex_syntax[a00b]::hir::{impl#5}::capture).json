{
  "name": "regex_syntax::hir::{impl#5}::capture",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/mod.rs:407:5:410:6",
  "doc": "/// Creates a capture HIR expression.\n///\n/// Note that there is no explicit HIR value for a non-capturing group.\n/// Since a non-capturing group only exists to override precedence in the\n/// concrete syntax and since an HIR already does its own grouping based on\n/// what is parsed, there is no need to explicitly represent non-capturing\n/// groups in the HIR.\n",
  "code": [
    "pub fn capture(capture: Capture) -> Hir {",
    "    let props = Properties::capture(&capture);",
    "    Hir { kind: HirKind::Capture(capture), props }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Hir { kind: HirKind::Capture(capture), props }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}