{
  "name": "regex_syntax::ast::{impl#22}::span",
  "mod_info": {
    "name": "ast",
    "loc": "regex-syntax/src/lib.rs:186:1:186:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/ast/mod.rs:1192:5:1203:6",
  "doc": "/// Return the span of this character class set item.\n",
  "code": [
    "pub fn span(&self) -> &Span {",
    "    match *self {",
    "        ClassSetItem::Empty(ref span) => span,",
    "        ClassSetItem::Literal(ref x) => &x.span,",
    "        ClassSetItem::Range(ref x) => &x.span,",
    "        ClassSetItem::Ascii(ref x) => &x.span,",
    "        ClassSetItem::Perl(ref x) => &x.span,",
    "        ClassSetItem::Unicode(ref x) => &x.span,",
    "        ClassSetItem::Bracketed(ref x) => &x.span,",
    "        ClassSetItem::Union(ref x) => &x.span,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Union(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        9,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Bracketed(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        8,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Perl(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Perl(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        6,
        14,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Unicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Unicode(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        7,
        15,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Ascii(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Ascii(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        5,
        13,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Range(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        4,
        12,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Literal(ref x)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        3,
        11,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*self matches ClassSetItem::Empty(ref span)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        },
        {
          "cond": "*self matches ClassSetItem::Empty(ref span)",
          "norm": null,
          "value": "true",
          "line": 1193,
          "bound": null
        }
      ],
      "ret": "match *self {\n            ClassSetItem::Empty(ref span) => span,\n            ClassSetItem::Literal(ref x) => &x.span,\n            ClassSetItem::Range(ref x) => &x.span,\n            ClassSetItem::Ascii(ref x) => &x.span,\n            ClassSetItem::Perl(ref x) => &x.span,\n            ClassSetItem::Unicode(ref x) => &x.span,\n            ClassSetItem::Bracketed(ref x) => &x.span,\n            ClassSetItem::Union(ref x) => &x.span,\n        }",
      "path": [
        0,
        2,
        10,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}