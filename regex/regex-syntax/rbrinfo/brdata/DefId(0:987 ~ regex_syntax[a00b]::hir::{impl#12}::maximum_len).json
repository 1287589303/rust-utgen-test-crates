{
  "name": "regex_syntax::hir::{impl#12}::maximum_len",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/hir/mod.rs:1185:5:1189:6",
  "doc": "/// Returns the length, in bytes, of the longest string matched by this\n/// character class.\n///\n/// Returns `None` when the class is empty.\n",
  "code": [
    "pub fn maximum_len(&self) -> Option<usize> {",
    "    let last = self.ranges().last()?;",
    "    // Correct because c1 < c2 implies c1.len_utf8() < c2.len_utf8().",
    "    Some(last.end.len_utf8())",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.ranges().last()?",
          "norm": null,
          "value": "Err/None",
          "line": 1186,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.ranges().last()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1186,
          "bound": null
        }
      ],
      "ret": "Some(last.end.len_utf8())",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}