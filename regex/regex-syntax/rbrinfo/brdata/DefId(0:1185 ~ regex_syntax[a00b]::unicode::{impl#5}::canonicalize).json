{
  "name": "regex_syntax::unicode::{impl#5}::canonicalize",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/unicode.rs:238:5:285:6",
  "doc": "",
  "code": [
    "fn canonicalize(&self) -> Result<CanonicalClassQuery, Error> {",
    "    match *self {",
    "        ClassQuery::OneLetter(c) => self.canonical_binary(&c.to_string()),",
    "        ClassQuery::Binary(name) => self.canonical_binary(name),",
    "        ClassQuery::ByValue { property_name, property_value } => {",
    "            let property_name = symbolic_name_normalize(property_name);",
    "            let property_value = symbolic_name_normalize(property_value);",
    "",
    "            let canon_name = match canonical_prop(&property_name)? {",
    "                None => return Err(Error::PropertyNotFound),",
    "                Some(canon_name) => canon_name,",
    "            };",
    "            Ok(match canon_name {",
    "                \"General_Category\" => {",
    "                    let canon = match canonical_gencat(&property_value)? {",
    "                        None => return Err(Error::PropertyValueNotFound),",
    "                        Some(canon) => canon,",
    "                    };",
    "                    CanonicalClassQuery::GeneralCategory(canon)",
    "                }",
    "                \"Script\" => {",
    "                    let canon = match canonical_script(&property_value)? {",
    "                        None => return Err(Error::PropertyValueNotFound),",
    "                        Some(canon) => canon,",
    "                    };",
    "                    CanonicalClassQuery::Script(canon)",
    "                }",
    "                _ => {",
    "                    let vals = match property_values(canon_name)? {",
    "                        None => return Err(Error::PropertyValueNotFound),",
    "                        Some(vals) => vals,",
    "                    };",
    "                    let canon_val =",
    "                        match canonical_value(vals, &property_value) {",
    "                            None => {",
    "                                return Err(Error::PropertyValueNotFound)",
    "                            }",
    "                            Some(canon_val) => canon_val,",
    "                        };",
    "                    CanonicalClassQuery::ByValue {",
    "                        property_name: canon_name,",
    "                        property_value: canon_val,",
    "                    }",
    "                }",
    "            })",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 14,
    "contra": 10,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        21,
        83,
        84,
        85,
        86,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches Some(canon)",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        27,
        32,
        33,
        34,
        35,
        37,
        39,
        40,
        81,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches Some(canon)",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Ok(match canon_name {\n                    \"General_Category\" => {\n                        let canon = match canonical_gencat(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::GeneralCategory(canon)\n                    }\n                    \"Script\" => {\n                        let canon = match canonical_script(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::Script(canon)\n                    }\n                    _ => {\n                        let vals = match property_values(canon_name)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(vals) => vals,\n                        };\n                        let canon_val =\n                            match canonical_value(vals, &property_value) {\n                                None => {\n                                    return Err(Error::PropertyValueNotFound)\n                                }\n                                Some(canon_val) => canon_val,\n                            };\n                        CanonicalClassQuery::ByValue {\n                            property_name: canon_name,\n                            property_value: canon_val,\n                        }\n                    }\n                })",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        27,
        32,
        33,
        34,
        35,
        38,
        43,
        75,
        76,
        77,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        },
        {
          "cond": "canonical_gencat(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 252,
          "bound": null
        }
      ],
      "ret": "Err(Error::PropertyValueNotFound)",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        27,
        32,
        33,
        34,
        35,
        38,
        42,
        44,
        81,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 258,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches Some(canon)",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        29,
        45,
        46,
        47,
        48,
        50,
        52,
        53,
        80,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 258,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches Some(canon)",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": "Ok(match canon_name {\n                    \"General_Category\" => {\n                        let canon = match canonical_gencat(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::GeneralCategory(canon)\n                    }\n                    \"Script\" => {\n                        let canon = match canonical_script(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::Script(canon)\n                    }\n                    _ => {\n                        let vals = match property_values(canon_name)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(vals) => vals,\n                        };\n                        let canon_val =\n                            match canonical_value(vals, &property_value) {\n                                None => {\n                                    return Err(Error::PropertyValueNotFound)\n                                }\n                                Some(canon_val) => canon_val,\n                            };\n                        CanonicalClassQuery::ByValue {\n                            property_name: canon_name,\n                            property_value: canon_val,\n                        }\n                    }\n                })",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        29,
        45,
        46,
        47,
        48,
        51,
        56,
        75,
        76,
        77,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 258,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "true",
          "line": 250,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        },
        {
          "cond": "canonical_script(&property_value)? matches None",
          "norm": null,
          "value": "true",
          "line": 259,
          "bound": null
        }
      ],
      "ret": "Err(Error::PropertyValueNotFound)",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        29,
        45,
        46,
        47,
        48,
        51,
        55,
        57,
        80,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "false",
          "line": 258,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches Some(vals)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        26,
        58,
        59,
        61,
        63,
        64,
        78,
        79,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "false",
          "line": 258,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches Some(vals)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "canonical_value(vals, &property_value) matches Some(canon_val)",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        }
      ],
      "ret": "Ok(match canon_name {\n                    \"General_Category\" => {\n                        let canon = match canonical_gencat(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::GeneralCategory(canon)\n                    }\n                    \"Script\" => {\n                        let canon = match canonical_script(&property_value)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(canon) => canon,\n                        };\n                        CanonicalClassQuery::Script(canon)\n                    }\n                    _ => {\n                        let vals = match property_values(canon_name)? {\n                            None => return Err(Error::PropertyValueNotFound),\n                            Some(vals) => vals,\n                        };\n                        let canon_val =\n                            match canonical_value(vals, &property_value) {\n                                None => {\n                                    return Err(Error::PropertyValueNotFound)\n                                }\n                                Some(canon_val) => canon_val,\n                            };\n                        CanonicalClassQuery::ByValue {\n                            property_name: canon_name,\n                            property_value: canon_val,\n                        }\n                    }\n                })",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        26,
        58,
        59,
        62,
        67,
        69,
        70,
        73,
        75,
        76,
        77,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "false",
          "line": 258,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches Some(vals)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "canonical_value(vals, &property_value) matches None",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        },
        {
          "cond": "canonical_value(vals, &property_value) matches None",
          "norm": null,
          "value": "true",
          "line": 271,
          "bound": null
        }
      ],
      "ret": "Err(Error::PropertyValueNotFound)",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        26,
        58,
        59,
        62,
        67,
        69,
        70,
        72,
        74,
        79,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Err/None",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canon_name matches \"General_Category\"",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "canon_name matches \"Script\"",
          "norm": null,
          "value": "false",
          "line": 258,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "property_values(canon_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": "Err(Error::PropertyValueNotFound)",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        24,
        31,
        28,
        30,
        26,
        58,
        59,
        62,
        66,
        68,
        78,
        79,
        82,
        84,
        85,
        86,
        87
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "*self matches ClassQuery::ByValue { property_name, property_value }",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 246,
          "bound": null
        },
        {
          "cond": "canonical_prop(&property_name)? matches None",
          "norm": null,
          "value": "true",
          "line": 246,
          "bound": null
        }
      ],
      "ret": "Err(Error::PropertyNotFound)",
      "path": [
        0,
        4,
        12,
        13,
        14,
        15,
        16,
        19,
        23,
        25,
        83,
        84,
        85,
        86,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "*self matches ClassQuery::Binary(name)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "*self matches ClassQuery::Binary(name)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        10,
        11,
        87
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "*self matches ClassQuery::OneLetter(c)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "*self matches ClassQuery::OneLetter(c)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        5,
        6,
        7,
        8,
        9,
        87
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}