{
  "name": "regex_syntax::hir::translate::{impl#5}::convert_unicode_class_error",
  "mod_info": {
    "name": "hir::translate",
    "loc": "regex-syntax/src/hir/mod.rs:44:1:44:19"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/translate.rs:1137:5:1156:6",
  "doc": "/// Converts the given Unicode specific error to an HIR translation error.\n///\n/// The span given should approximate the position at which an error would\n/// occur.\n",
  "code": [
    "fn convert_unicode_class_error(",
    "    &self,",
    "    span: &Span,",
    "    result: core::result::Result<hir::ClassUnicode, unicode::Error>,",
    ") -> Result<hir::ClassUnicode> {",
    "    result.map_err(|err| {",
    "        let sp = span.clone();",
    "        match err {",
    "            unicode::Error::PropertyNotFound => {",
    "                self.error(sp, ErrorKind::UnicodePropertyNotFound)",
    "            }",
    "            unicode::Error::PropertyValueNotFound => {",
    "                self.error(sp, ErrorKind::UnicodePropertyValueNotFound)",
    "            }",
    "            unicode::Error::PerlClassNotFound => {",
    "                self.error(sp, ErrorKind::UnicodePerlClassNotFound)",
    "            }",
    "        }",
    "    })",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}