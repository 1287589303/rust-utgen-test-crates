{
  "name": "regex_syntax::hir::singleton_bytes",
  "mod_info": {
    "name": "hir",
    "loc": "regex-syntax/src/lib.rs:190:1:190:13"
  },
  "visible": false,
  "loc": "regex-syntax/src/hir/mod.rs:3001:1:3014:2",
  "doc": "/// Given a sequence of HIR values where each value corresponds to a literal\n/// that is a single byte, return that sequence of bytes. Otherwise return\n/// None. No deduplication is done.\n",
  "code": [
    "fn singleton_bytes(hirs: &[Hir]) -> Option<Vec<u8>> {",
    "    let mut singletons = vec![];",
    "    for hir in hirs.iter() {",
    "        let literal = match *hir.kind() {",
    "            HirKind::Literal(Literal(ref bytes)) => bytes,",
    "            _ => return None,",
    "        };",
    "        if literal.len() != 1 {",
    "            return None;",
    "        }",
    "        singletons.push(literal[0]);",
    "    }",
    "    Some(singletons)",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 1,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 3003,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "false",
          "line": 3005,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches _",
          "norm": null,
          "value": "true",
          "line": 3006,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        12,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 3003,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 3004,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 3004,
          "bound": null
        },
        {
          "cond": "literal.len() != 1",
          "norm": "1 != literal.len()",
          "value": "true",
          "line": 3008,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        16,
        22,
        23,
        24
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "true",
          "line": 3003,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 3004,
          "bound": null
        },
        {
          "cond": "*hir.kind() matches HirKind::Literal(Literal(ref bytes))",
          "norm": null,
          "value": "true",
          "line": 3004,
          "bound": null
        },
        {
          "cond": "literal.len() != 1",
          "norm": "1 != literal.len()",
          "value": "false",
          "line": 3008,
          "bound": null
        },
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 3003,
          "bound": null
        }
      ],
      "ret": "Some(singletons)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        9,
        11,
        13,
        14,
        15,
        17,
        18,
        19,
        4,
        5,
        6,
        8,
        10,
        20,
        21,
        24
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "hir in hirs.iter()",
          "norm": null,
          "value": "false",
          "line": 3003,
          "bound": null
        }
      ],
      "ret": "Some(singletons)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8,
        10,
        20,
        21,
        24
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}