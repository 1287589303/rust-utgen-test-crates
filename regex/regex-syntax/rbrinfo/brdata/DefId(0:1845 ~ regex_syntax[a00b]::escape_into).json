{
  "name": "regex_syntax::escape_into",
  "mod_info": {
    "name": "",
    "loc": "regex-syntax/src/lib.rs:1:1:431:2"
  },
  "visible": true,
  "loc": "regex-syntax/src/lib.rs:211:1:219:2",
  "doc": "/// Escapes all meta characters in `text` and writes the result into `buf`.\n///\n/// This will append escape characters into the given buffer. The characters\n/// that are appended are safe to use as a literal in a regular expression.\n",
  "code": [
    "pub fn escape_into(text: &str, buf: &mut String) {",
    "    buf.reserve(text.len());",
    "    for c in text.chars() {",
    "        if is_meta_character(c) {",
    "            buf.push('\\\\');",
    "        }",
    "        buf.push(c);",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 2,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "c in text.chars()",
          "norm": null,
          "value": "true",
          "line": 213,
          "bound": null
        },
        {
          "cond": "is_meta_character(c)",
          "norm": null,
          "value": "true",
          "line": 214,
          "bound": null
        },
        {
          "cond": "c in text.chars()",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        14,
        16,
        17,
        5,
        6,
        7,
        9,
        11
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "c in text.chars()",
          "norm": null,
          "value": "true",
          "line": 213,
          "bound": null
        },
        {
          "cond": "is_meta_character(c)",
          "norm": null,
          "value": "false",
          "line": 214,
          "bound": null
        },
        {
          "cond": "c in text.chars()",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        15,
        16,
        17,
        5,
        6,
        7,
        9,
        11
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "c in text.chars()",
          "norm": null,
          "value": "false",
          "line": 213,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}