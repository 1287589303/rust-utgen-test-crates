bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:315:9-315:17)
  1: _3 = &mut ((*_1).0: W)
    SourceInfo(regex-syntax/src/ast/print.rs:315:9-315:17)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:315:28-315:31)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:315:28-315:31)
  4: _5 = const "]"
    SourceInfo(regex-syntax/src/ast/print.rs:315:28-315:31)
  5: _4 = &(*_5)
    SourceInfo(regex-syntax/src/ast/print.rs:315:28-315:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:315:9-315:32)
      kind: _0 = <W as core::fmt::Write>::write_str(move _3, move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/print.rs:315:31-315:32)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/print.rs:315:31-315:32)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/print.rs:316:5-316:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:316:6-316:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/print.rs:311:5-316:6)
      kind: resume
  }
  preds [bb0]
  succs []

