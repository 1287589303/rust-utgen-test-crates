bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:9-503:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:12-501:46)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:12-501:16)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:12-501:16)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:42-501:45)
  5: _6 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:42-501:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:501:12-501:46)
      kind: _4 = hir::literal::Extractor::class_over_limit_unicode(move _5, move _6) -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:501:12-501:46)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:45-501:46)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:45-501:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:502:20-502:35)
      kind: _0 = hir::literal::Seq::infinite() -> [return: bb29, unwind: bb33]
  }
  preds [bb1]
  succs [bb29, bb33]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:45-501:46)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:501:45-501:46)
  2: _3 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:503:10-503:10)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:503:9-503:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:503:9-503:10)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:504:13-504:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:504:23-504:35)
      kind: _8 = hir::literal::Seq::empty() -> [return: bb4, unwind: bb33]
  }
  preds [bb1]
  succs [bb4, bb33]

bb4
  0: FakeRead(ForLet(None), _8)
    SourceInfo(regex-syntax/src/hir/literal.rs:504:13-504:20)
  1: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:21)
  5: _12 = &(*_2)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
      kind: _11 = hir::ClassUnicode::iter(move _12) -> [return: bb5, unwind: bb32]
  }
  preds [bb3]
  succs [bb5, bb32]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:27-505:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
      kind: _10 = <hir::ClassUnicodeIter<'_> as core::iter::IntoIterator>::into_iter(move _11) -> [return: bb6, unwind: bb32]
  }
  preds [bb4]
  succs [bb6, bb32]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:27-505:28)
  1: PlaceMention(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  3: _13 = move _10
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
      kind: goto -> bb7
  }
  preds [bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
      kind: falseUnwind -> [real: bb8, unwind: bb32]
  }
  preds [bb6, bb24]
  succs [bb8, bb32]

bb8
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  4: _18 = &mut _13
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  5: _17 = &mut (*_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
      kind: _16 = <hir::ClassUnicodeIter<'_> as core::iter::Iterator>::next(move _17) -> [return: bb9, unwind: bb32]
  }
  preds [bb7]
  succs [bb9, bb32]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:27-505:28)
  1: PlaceMention(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  2: _19 = discriminant(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
      kind: switchInt(move _19) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:18-505:28)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:13-505:14)
  1: _21 = ((_16 as Some).0: &hir::ClassUnicodeRange)
    SourceInfo(regex-syntax/src/hir/literal.rs:505:13-505:14)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  3: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  4: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:32)
  5: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:24)
  6: _25 = &(*_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:32)
      kind: _24 = hir::ClassUnicodeRange::start(move _25) -> [return: bb14, unwind: bb32]
  }
  preds [bb9, bb11]
  succs [bb14, bb32]

bb13
  0: _9 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  4: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  5: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  7: StorageLive(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:9-510:43)
  8: StorageLive(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:9-510:13)
  9: _41 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:9-510:13)
  10: StorageLive(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:34-510:42)
  11: StorageLive(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:34-510:42)
  12: _43 = &mut _8
    SourceInfo(regex-syntax/src/hir/literal.rs:510:34-510:42)
  13: _42 = &mut (*_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:34-510:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:510:9-510:43)
      kind: _40 = hir::literal::Extractor::enforce_literal_len(move _41, move _42) -> [return: bb27, unwind: bb32]
  }
  preds [bb11]
  succs [bb27, bb32]

bb14
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:31-506:32)
  1: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:35-506:42)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:35-506:36)
  3: _27 = &(*_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:35-506:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:35-506:42)
      kind: _26 = hir::ClassUnicodeRange::end(move _27) -> [return: bb15, unwind: bb32]
  }
  preds [bb12]
  succs [bb15, bb32]

bb15
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:41-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
      kind: _23 = core::ops::RangeInclusive::<char>::new(move _24, move _26) -> [return: bb16, unwind: bb32]
  }
  preds [bb14]
  succs [bb16, bb32]

bb16
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:41-506:42)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:41-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
      kind: _22 = <core::ops::RangeInclusive<char> as core::iter::IntoIterator>::into_iter(move _23) -> [return: bb17, unwind: bb32]
  }
  preds [bb15]
  succs [bb17, bb32]

bb17
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:41-506:42)
  1: PlaceMention(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  2: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  3: _28 = move _22
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
      kind: falseUnwind -> [real: bb19, unwind: bb32]
  }
  preds [bb17, bb26]
  succs [bb19, bb32]

bb19
  0: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  1: StorageLive(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  3: StorageLive(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  4: _32 = &mut _28
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  5: _31 = &mut (*_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
      kind: _30 = <core::ops::RangeInclusive<char> as core::iter::Iterator>::next(move _31) -> [return: bb20, unwind: bb32]
  }
  preds [bb18]
  succs [bb20, bb32]

bb20
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:41-506:42)
  1: PlaceMention(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  2: _33 = discriminant(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
      kind: switchInt(move _33) -> [0: bb22, 1: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:23-506:42)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:17-506:19)
  1: _35 = ((_30 as Some).0: char)
    SourceInfo(regex-syntax/src/hir/literal.rs:506:17-506:19)
  2: StorageLive(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:17-507:44)
  3: StorageLive(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:17-507:20)
  4: _37 = &mut _8
    SourceInfo(regex-syntax/src/hir/literal.rs:507:17-507:20)
  5: StorageLive(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:26-507:43)
  6: StorageLive(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:40-507:42)
  7: _39 = _35
    SourceInfo(regex-syntax/src/hir/literal.rs:507:40-507:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:507:26-507:43)
      kind: _38 = <hir::literal::Literal as core::convert::From<char>>::from(move _39) -> [return: bb25, unwind: bb32]
  }
  preds [bb20, bb22]
  succs [bb25, bb32]

bb24
  0: _15 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  3: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  4: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  5: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  6: StorageDead(_21)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  7: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  8: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  9: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/literal.rs:509:9-509:10)
  10: _14 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:505:9-509:10)
      kind: goto -> bb7
  }
  preds [bb22]
  succs [bb7]

bb25
  0: StorageDead(_39)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:42-507:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:507:17-507:44)
      kind: _36 = hir::literal::Seq::push(move _37, move _38) -> [return: bb26, unwind: bb31]
  }
  preds [bb23]
  succs [bb26, bb31]

bb26
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:43-507:44)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:43-507:44)
  2: StorageDead(_36)
    SourceInfo(regex-syntax/src/hir/literal.rs:507:44-507:45)
  3: _29 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:506:43-508:14)
  4: StorageDead(_35)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  5: StorageDead(_32)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  6: StorageDead(_30)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  7: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:508:13-508:14)
  8: _14 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:506:13-508:14)
      kind: goto -> bb18
  }
  preds [bb25]
  succs [bb18]

bb27
  0: StorageDead(_42)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:42-510:43)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:42-510:43)
  2: StorageDead(_43)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:43-510:44)
  3: StorageDead(_40)
    SourceInfo(regex-syntax/src/hir/literal.rs:510:43-510:44)
  4: _0 = move _8
    SourceInfo(regex-syntax/src/hir/literal.rs:511:9-511:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:512:5-512:6)
      kind: drop(_8) -> [return: bb28, unwind: bb33]
  }
  preds [bb13]
  succs [bb28, bb33]

bb28
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:512:5-512:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:512:6-512:6)
      kind: goto -> bb30
  }
  preds [bb27]
  succs [bb30]

bb29
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:503:9-503:10)
  1: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:503:9-503:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:512:6-512:6)
      kind: goto -> bb30
  }
  preds [bb2]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:512:6-512:6)
      kind: return
  }
  preds [bb28, bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:507:43-507:44)
      kind: drop(_38) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:512:5-512:6)
      kind: drop(_8) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb7, bb8, bb12, bb13, bb14, bb15, bb16, bb18, bb19, bb23, bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:500:5-512:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb27, bb32]
  succs []

