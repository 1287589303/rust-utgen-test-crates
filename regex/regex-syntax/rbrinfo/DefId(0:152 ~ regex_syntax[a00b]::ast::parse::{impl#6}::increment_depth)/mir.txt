bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:13-2284:16)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:11)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2284:44)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2284:29)
  5: _7 = ((*_1).1: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2284:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2284:44)
      kind: _6 = core::num::<impl u32>::checked_add(move _7, const 1_u32) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:43-2284:44)
  1: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  3: _9 = &(*((*_1).0: &ast::parse::ParserI<'_, P>))
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  5: _10 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  6: _8 = {closure@regex-syntax/src/ast/parse.rs:2284:56: 2284:58} { self: move _9, span: move _10 }
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:56-2289:10)
  7: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:57-2284:58)
  8: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:57-2284:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:11)
      kind: _5 = core::option::Option::<u32>::ok_or_else::<ast::Error, {closure@regex-syntax/src/ast/parse.rs:2284:56: 2284:58}>(move _6, move _8) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:10-2289:11)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:10-2289:11)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
      kind: _4 = <core::result::Result<u32, ast::Error> as core::ops::Try>::branch(move _5) -> [return: bb3, unwind: bb23]
  }
  preds [bb1]
  succs [bb3, bb23]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  2: _11 = discriminant(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
      kind: switchInt(move _11) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  1: _15 = ((_4 as Continue).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  2: _3 = _15
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2284:13-2284:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:12-2289:13)
      kind: drop(_4) -> [return: bb9, unwind: bb24]
  }
  preds [bb3, bb5]
  succs [bb9, bb24]

bb7
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  1: _12 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  3: _14 = move _12
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2284:19-2289:12)
      kind: _0 = <core::result::Result<(), ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _14) -> [return: bb8, unwind: bb20]
  }
  preds [bb5]
  succs [bb8, bb20]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
      kind: drop(_12) -> [return: bb16, unwind: bb22]
  }
  preds [bb7]
  succs [bb16, bb22]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:12-2289:13)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:13-2290:18)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:21-2290:36)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:21-2290:27)
  4: _18 = &(*((*_1).0: &ast::parse::ParserI<'_, P>))
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:21-2290:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2290:21-2290:36)
      kind: _17 = ast::parse::ParserI::<'_, P>::parser(move _18) -> [return: bb10, unwind: bb24]
  }
  preds [bb6]
  succs [bb10, bb24]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:35-2290:36)
  1: _16 = ((*_17).2: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:21-2290:47)
  2: FakeRead(ForLet(None), _16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:13-2290:18)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:2290:47-2290:48)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:9-2296:10)
  5: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:12-2291:23)
  6: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:12-2291:15)
  7: _21 = _3
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:12-2291:15)
  8: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:18-2291:23)
  9: _22 = _16
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:18-2291:23)
  10: _20 = Gt(move _21, move _22)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:12-2291:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2291:12-2291:23)
      kind: switchInt(move _20) -> [0: bb15, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb15]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:22-2291:23)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:22-2291:23)
  2: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:2292:24-2295:14)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:2292:24-2292:30)
  4: _25 = &(*((*_1).0: &ast::parse::ParserI<'_, P>))
    SourceInfo(regex-syntax/src/ast/parse.rs:2292:24-2292:30)
  5: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:2293:17-2293:29)
  6: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:2293:17-2293:21)
  7: _27 = &(*_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:2293:17-2293:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2293:17-2293:29)
      kind: _26 = <ast::Span as core::clone::Clone>::clone(move _27) -> [return: bb12, unwind: bb24]
  }
  preds [bb10]
  succs [bb12, bb24]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:2293:28-2293:29)
  1: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:2294:17-2294:57)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:2294:51-2294:56)
  3: _29 = _16
    SourceInfo(regex-syntax/src/ast/parse.rs:2294:51-2294:56)
  4: _28 = ast::ErrorKind::NestLimitExceeded(move _29)
    SourceInfo(regex-syntax/src/ast/parse.rs:2294:17-2294:57)
  5: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:2294:56-2294:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2292:24-2295:14)
      kind: _24 = ast::parse::ParserI::<'_, P>::error(move _25, move _26, move _28) -> [return: bb13, unwind: bb24]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:2295:13-2295:14)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:2295:13-2295:14)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:2295:13-2295:14)
  3: _0 = core::result::Result::<(), ast::Error>::Err(move _24)
    SourceInfo(regex-syntax/src/ast/parse.rs:2292:20-2295:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2295:14-2295:15)
      kind: drop(_24) -> [return: bb14, unwind: bb24]
  }
  preds [bb12]
  succs [bb14, bb24]

bb14
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:2295:14-2295:15)
  1: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:2296:9-2296:10)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:2296:9-2296:10)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2299:5-2299:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb13]
  succs [bb18]

bb15
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:22-2291:23)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:2291:22-2291:23)
  2: _19 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:2296:10-2296:10)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:2296:9-2296:10)
  4: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:2296:9-2296:10)
  5: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:2297:22-2297:25)
  6: _30 = _3
    SourceInfo(regex-syntax/src/ast/parse.rs:2297:22-2297:25)
  7: ((*_1).1: u32) = move _30
    SourceInfo(regex-syntax/src/ast/parse.rs:2297:9-2297:25)
  8: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:2297:24-2297:25)
  9: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:2298:12-2298:14)
  10: _31 = ()
    SourceInfo(regex-syntax/src/ast/parse.rs:2298:12-2298:14)
  11: _0 = core::result::Result::<(), ast::Error>::Ok(move _31)
    SourceInfo(regex-syntax/src/ast/parse.rs:2298:9-2298:15)
  12: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:2298:14-2298:15)
  13: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:2299:5-2299:6)
  14: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2299:5-2299:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2299:6-2299:6)
      kind: goto -> bb19
  }
  preds [bb10]
  succs [bb19]

bb16
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:12-2289:13)
      kind: drop(_4) -> [return: bb17, unwind: bb24]
  }
  preds [bb8]
  succs [bb17, bb24]

bb17
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:2289:12-2289:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb18
  }
  preds [bb16]
  succs [bb18]

bb18
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:2299:5-2299:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2299:6-2299:6)
      kind: goto -> bb19
  }
  preds [bb14, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2299:6-2299:6)
      kind: return
  }
  preds [bb15, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
      kind: drop(_14) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
      kind: drop(_12) -> [return: bb22, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:12-2289:13)
      kind: drop(_4) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb8, bb21]
  succs [bb24]

bb23
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2289:11-2289:12)
      kind: drop(_5) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:2283:5-2299:6)
      kind: resume
  }
  preds [bb0, bb1, bb6, bb9, bb11, bb12, bb13, bb16, bb22, bb23]
  succs []

