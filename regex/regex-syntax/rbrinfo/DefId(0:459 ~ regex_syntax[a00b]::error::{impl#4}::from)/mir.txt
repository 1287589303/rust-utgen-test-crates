bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/error.rs:70:22-70:35)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:70:22-70:35)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:70:22-70:25)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:70:22-70:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:70:22-70:35)
      kind: _3 = ast::Error::pattern(move _4) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _2 = &(*_3)
    SourceInfo(regex-syntax/src/error.rs:70:22-70:35)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:70:34-70:35)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:71:18-71:28)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:71:18-71:28)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/error.rs:71:18-71:21)
  5: _7 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:71:18-71:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:71:18-71:28)
      kind: _6 = ast::Error::kind(move _7) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _5 = &(*_6)
    SourceInfo(regex-syntax/src/error.rs:71:18-71:28)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:71:27-71:28)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/error.rs:72:19-72:29)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/error.rs:72:19-72:29)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/error.rs:72:19-72:22)
  5: _10 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:72:19-72:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:72:19-72:29)
      kind: _9 = ast::Error::span(move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _8 = &(*_9)
    SourceInfo(regex-syntax/src/error.rs:72:19-72:29)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:72:28-72:29)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:73:23-73:43)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:73:23-73:26)
  4: _12 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:73:23-73:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:73:23-73:43)
      kind: _11 = ast::Error::auxiliary_span(move _12) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:73:42-73:43)
  1: _0 = error::Formatter::<'_, ast::ErrorKind> { pattern: move _2, err: move _5, span: move _8, aux_span: move _11 }
    SourceInfo(regex-syntax/src/error.rs:69:9-74:10)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:74:9-74:10)
  3: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:74:9-74:10)
  4: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:74:9-74:10)
  5: StorageDead(_2)
    SourceInfo(regex-syntax/src/error.rs:74:9-74:10)
  6: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:75:5-75:6)
  7: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:75:5-75:6)
  8: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:75:5-75:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:75:6-75:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:68:5-75:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

