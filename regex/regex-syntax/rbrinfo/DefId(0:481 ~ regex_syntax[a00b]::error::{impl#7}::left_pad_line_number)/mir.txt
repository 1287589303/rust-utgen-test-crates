bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:247:13-247:14)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:247:17-247:18)
  2: _4 = &_2
    SourceInfo(regex-syntax/src/error.rs:247:17-247:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:247:17-247:30)
      kind: _3 = <usize as std::string::ToString>::to_string(move _4) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:247:29-247:30)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/error.rs:247:13-247:14)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:248:13-248:16)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:248:19-248:62)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/error.rs:248:19-248:41)
  5: _7 = ((*_1).1: usize)
    SourceInfo(regex-syntax/src/error.rs:248:19-248:41)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/error.rs:248:54-248:61)
  7: StorageLive(_9)
    SourceInfo(regex-syntax/src/error.rs:248:54-248:55)
  8: _9 = &_3
    SourceInfo(regex-syntax/src/error.rs:248:54-248:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:248:54-248:61)
      kind: _8 = std::string::String::len(move _9) -> [return: bb2, unwind: bb11]
  }
  preds [bb0]
  succs [bb2, bb11]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:248:60-248:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:248:19-248:62)
      kind: _6 = core::num::<impl usize>::checked_sub(move _7, move _8) -> [return: bb3, unwind: bb11]
  }
  preds [bb1]
  succs [bb3, bb11]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:248:61-248:62)
  1: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:248:61-248:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:248:19-248:71)
      kind: _5 = core::option::Option::<usize>::unwrap(move _6) -> [return: bb4, unwind: bb11]
  }
  preds [bb2]
  succs [bb4, bb11]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:248:70-248:71)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-syntax/src/error.rs:248:13-248:16)
  2: StorageLive(_10)
    SourceInfo(regex-syntax/src/error.rs:249:13-249:23)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:249:43-249:46)
  4: _11 = _5
    SourceInfo(regex-syntax/src/error.rs:249:43-249:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:249:26-249:47)
      kind: _10 = error::repeat_char(const ' ', move _11) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:249:46-249:47)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-syntax/src/error.rs:249:13-249:23)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:250:9-250:28)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/error.rs:250:9-250:15)
  4: _13 = &mut _10
    SourceInfo(regex-syntax/src/error.rs:250:9-250:15)
  5: StorageLive(_14)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  6: StorageLive(_15)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  7: StorageLive(_16)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  8: StorageLive(_17)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  9: _17 = &_3
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  10: _16 = &(*_17)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
      kind: _15 = <std::string::String as core::ops::Deref>::deref(move _16) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: _14 = &(*_15)
    SourceInfo(regex-syntax/src/error.rs:250:25-250:27)
  1: StorageDead(_16)
    SourceInfo(regex-syntax/src/error.rs:250:26-250:27)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:250:9-250:28)
      kind: _12 = std::string::String::push_str(move _13, move _14) -> [return: bb7, unwind: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/error.rs:250:27-250:28)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:250:27-250:28)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/error.rs:250:28-250:29)
  3: StorageDead(_15)
    SourceInfo(regex-syntax/src/error.rs:250:28-250:29)
  4: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:250:28-250:29)
  5: _0 = move _10
    SourceInfo(regex-syntax/src/error.rs:251:9-251:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
      kind: drop(_10) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
      kind: drop(_3) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:252:6-252:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
      kind: drop(_10) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:252:5-252:6)
      kind: drop(_3) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb4, bb7, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:246:5-252:6)
      kind: resume
  }
  preds [bb0, bb8, bb11]
  succs []

