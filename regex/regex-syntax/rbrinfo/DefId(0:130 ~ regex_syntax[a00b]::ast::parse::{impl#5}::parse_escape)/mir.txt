bb0
  0: StorageLive(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:20-1480:31)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:20-1480:24)
  5: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:20-1480:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1480:20-1480:31)
      kind: _5 = ast::parse::ParserI::<'_, P>::char(move _6) -> [return: bb1, unwind: bb165]
  }
  preds []
  succs [bb1, bb165]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:30-1480:31)
  1: _4 = &_5
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:33-1480:37)
  4: _8 = const '\\'
    SourceInfo(regex-syntax/src/ast/parse.rs:1480:33-1480:37)
  5: _7 = &_8
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  6: _3 = (move _4, move _7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  7: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  9: PlaceMention(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  10: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  11: _9 = (_3.0: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  12: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  13: _10 = (_3.1: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  14: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  15: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  16: _12 = (*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  17: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  18: _13 = (*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  19: _11 = Eq(move _12, move _13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _11) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _2 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1481:13-1481:18)
  11: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1481:21-1481:25)
  12: _24 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1481:21-1481:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1481:21-1481:31)
      kind: _23 = ast::parse::ParserI::<'_, P>::pos(move _24) -> [return: bb4, unwind: bb165]
  }
  preds [bb1]
  succs [bb4, bb165]

bb3
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _15 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _17 = move _15
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _19 = &(*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _18 = &(*_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _21 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _20 = &(*_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _22 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _16 = core::panicking::assert_failed::<char, char>(move _17, move _18, move _20, move _22) -> bb165
  }
  preds [bb1]
  succs [bb165]

bb4
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:1481:30-1481:31)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1481:13-1481:18)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:9-1487:10)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:13-1482:24)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:13-1482:17)
  5: _27 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:13-1482:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1482:13-1482:24)
      kind: _26 = ast::parse::ParserI::<'_, P>::bump(move _27) -> [return: bb5, unwind: bb165]
  }
  preds [bb2]
  succs [bb5, bb165]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1482:13-1482:24)
      kind: switchInt(move _26) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:23-1482:24)
  1: _25 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1487:10-1487:10)
  2: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1487:9-1487:10)
  3: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1487:9-1487:10)
  4: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1488:13-1488:14)
  5: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1488:17-1488:21)
  6: _37 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1488:17-1488:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1488:17-1488:28)
      kind: _36 = ast::parse::ParserI::<'_, P>::char(move _37) -> [return: bb12, unwind: bb165]
  }
  preds [bb5]
  succs [bb12, bb165]

bb7
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1482:23-1482:24)
  1: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1483:24-1486:14)
  2: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1483:24-1483:28)
  3: _30 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1483:24-1483:28)
  4: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:17-1484:45)
  5: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:27-1484:32)
  6: _32 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:27-1484:32)
  7: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:34-1484:44)
  8: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:34-1484:38)
  9: _34 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:34-1484:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1484:34-1484:44)
      kind: _33 = ast::parse::ParserI::<'_, P>::pos(move _34) -> [return: bb8, unwind: bb165]
  }
  preds [bb5]
  succs [bb8, bb165]

bb8
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:43-1484:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1484:17-1484:45)
      kind: _31 = ast::Span::new(move _32, move _33) -> [return: bb9, unwind: bb165]
  }
  preds [bb7]
  succs [bb9, bb165]

bb9
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:44-1484:45)
  1: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1484:44-1484:45)
  2: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1485:17-1485:52)
  3: _35 = ast::ErrorKind::EscapeUnexpectedEof
    SourceInfo(regex-syntax/src/ast/parse.rs:1485:17-1485:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1483:24-1486:14)
      kind: _29 = ast::parse::ParserI::<'_, P>::error(move _30, move _31, move _35) -> [return: bb10, unwind: bb165]
  }
  preds [bb8]
  succs [bb10, bb165]

bb10
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1486:13-1486:14)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1486:13-1486:14)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1486:13-1486:14)
  3: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Err(move _29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1483:20-1486:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1486:14-1486:15)
      kind: drop(_29) -> [return: bb11, unwind: bb165]
  }
  preds [bb9]
  succs [bb11, bb165]

bb11
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1486:14-1486:15)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1487:9-1487:10)
  2: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:1487:9-1487:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb149
  }
  preds [bb10]
  succs [bb149]

bb12
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1488:27-1488:28)
  1: FakeRead(ForLet(None), _36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1488:13-1488:14)
  2: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1490:9-1524:10)
  3: PlaceMention(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1490:15-1490:16)
  4: _42 = Le(const '0', _36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1491:13-1491:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1491:13-1491:22)
      kind: switchInt(move _42) -> [0: bb15, otherwise: bb19]
  }
  preds [bb6]
  succs [bb15, bb19]

bb13
  0: _38 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1523:18-1523:20)
  1: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1524:9-1524:10)
  2: StorageLive(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1527:9-1527:20)
  3: StorageLive(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1527:9-1527:13)
  4: _108 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1527:9-1527:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1527:9-1527:20)
      kind: _107 = ast::parse::ParserI::<'_, P>::bump(move _108) -> [return: bb66, unwind: bb165]
  }
  preds [bb17, bb22, bb35]
  succs [bb66, bb165]

bb14
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1491:13-1491:22)
      kind: falseEdge -> [real: bb23, imaginary: bb15]
  }
  preds [bb19]
  succs [bb15, bb23]

bb15
  0: _40 = Le(const '8', _36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:13-1502:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:13-1502:22)
      kind: switchInt(move _40) -> [0: bb17, otherwise: bb18]
  }
  preds [bb12, bb14, bb19]
  succs [bb17, bb18]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:13-1502:22)
      kind: falseEdge -> [real: bb33, imaginary: bb17]
  }
  preds [bb18]
  succs [bb17, bb33]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1490:9-1490:16)
      kind: switchInt(_36) -> [120: bb20, 117: bb20, 85: bb20, 112: bb21, 80: bb21, 100: bb22, 115: bb22, 119: bb22, 68: bb22, 83: bb22, 87: bb22, otherwise: bb13]
  }
  preds [bb15, bb16, bb18, bb35]
  succs [bb13, bb20, bb20, bb20, bb21, bb21, bb22, bb22, bb22, bb22, bb22, bb22]

bb18
  0: _41 = Le(_36, const '9')
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:13-1502:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:13-1502:22)
      kind: switchInt(move _41) -> [0: bb17, otherwise: bb16]
  }
  preds [bb15]
  succs [bb16, bb17]

bb19
  0: _43 = Le(_36, const '7')
    SourceInfo(regex-syntax/src/ast/parse.rs:1491:13-1491:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1491:13-1491:22)
      kind: switchInt(move _43) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb20
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1508:13-1508:28)
      kind: falseEdge -> [real: bb41, imaginary: bb21]
  }
  preds [bb17, bb17, bb17]
  succs [bb21, bb41]

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1513:13-1513:22)
      kind: falseEdge -> [real: bb51, imaginary: bb22]
  }
  preds [bb17, bb17, bb20]
  succs [bb22, bb51]

bb22
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1518:13-1518:46)
      kind: falseEdge -> [real: bb63, imaginary: bb13]
  }
  preds [bb17, bb17, bb17, bb17, bb17, bb17, bb21]
  succs [bb13, bb63]

bb23
  0: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:17-1497:18)
  1: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:40)
  2: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:34)
  3: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:25)
  4: _48 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:34)
      kind: _47 = ast::parse::ParserI::<'_, P>::parser(move _48) -> [return: bb24, unwind: bb165]
  }
  preds [bb14]
  succs [bb24, bb165]

bb24
  0: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:33-1492:34)
  1: _46 = ((*_47).3: bool)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1492:21-1492:40)
      kind: switchInt(move _46) -> [0: bb25, otherwise: bb30]
  }
  preds [bb23]
  succs [bb25, bb30]

bb25
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:39-1492:40)
  1: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1493:32-1496:22)
  2: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1493:32-1493:36)
  3: _51 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1493:32-1493:36)
  4: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:25-1494:63)
  5: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:35-1494:40)
  6: _53 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:35-1494:40)
  7: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:62)
  8: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:58)
  9: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:46)
  10: _56 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:58)
      kind: _55 = ast::parse::ParserI::<'_, P>::span_char(move _56) -> [return: bb26, unwind: bb165]
  }
  preds [bb24]
  succs [bb26, bb165]

bb26
  0: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:57-1494:58)
  1: _54 = (_55.1: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:42-1494:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1494:25-1494:63)
      kind: _52 = ast::Span::new(move _53, move _54) -> [return: bb27, unwind: bb165]
  }
  preds [bb25]
  succs [bb27, bb165]

bb27
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:62-1494:63)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1494:62-1494:63)
  2: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1495:25-1495:65)
  3: _57 = ast::ErrorKind::UnsupportedBackreference
    SourceInfo(regex-syntax/src/ast/parse.rs:1495:25-1495:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1493:32-1496:22)
      kind: _50 = ast::parse::ParserI::<'_, P>::error(move _51, move _52, move _57) -> [return: bb28, unwind: bb165]
  }
  preds [bb26]
  succs [bb28, bb165]

bb28
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1496:21-1496:22)
  1: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1496:21-1496:22)
  2: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1496:21-1496:22)
  3: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Err(move _50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1493:28-1496:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1496:22-1496:23)
      kind: drop(_50) -> [return: bb29, unwind: bb165]
  }
  preds [bb27]
  succs [bb29, bb165]

bb29
  0: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1496:22-1496:23)
  1: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1496:23-1496:24)
  2: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1497:17-1497:18)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1497:17-1497:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb28]
  succs [bb147]

bb30
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1492:39-1492:40)
  1: _45 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1497:18-1497:18)
  2: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1497:17-1497:18)
  3: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1497:17-1497:18)
  4: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1498:21-1498:28)
  5: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1498:31-1498:35)
  6: _59 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1498:31-1498:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1498:31-1498:49)
      kind: _58 = ast::parse::ParserI::<'_, P>::parse_octal(move _59) -> [return: bb31, unwind: bb165]
  }
  preds [bb24]
  succs [bb31, bb165]

bb31
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1498:48-1498:49)
  1: FakeRead(ForLet(None), _58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1498:21-1498:28)
  2: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1499:34-1499:39)
  3: _60 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1499:34-1499:39)
  4: ((_58.0: ast::Span).0: ast::Position) = move _60
    SourceInfo(regex-syntax/src/ast/parse.rs:1499:17-1499:39)
  5: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1499:38-1499:39)
  6: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:27-1500:50)
  7: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:46-1500:49)
  8: _62 = move _58
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:46-1500:49)
  9: _61 = ast::parse::Primitive::Literal(move _62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:27-1500:50)
  10: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:49-1500:50)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:24-1500:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1500:50-1500:51)
      kind: drop(_61) -> [return: bb32, unwind: bb165]
  }
  preds [bb30]
  succs [bb32, bb165]

bb32
  0: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1500:50-1500:51)
  1: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1501:13-1501:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb31]
  succs [bb147]

bb33
  0: _39 = &fake shallow _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1490:15-1490:16)
  1: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:46)
  2: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:40)
  3: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:31)
  4: _65 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:40)
      kind: _64 = ast::parse::ParserI::<'_, P>::parser(move _65) -> [return: bb34, unwind: bb165]
  }
  preds [bb16]
  succs [bb34, bb165]

bb34
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:39-1502:40)
  1: _63 = ((*_64).3: bool)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:27-1502:46)
      kind: switchInt(move _63) -> [0: bb36, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36]

bb35
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:45-1502:46)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:45-1502:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1502:26-1502:46)
      kind: falseEdge -> [real: bb13, imaginary: bb17]
  }
  preds [bb34]
  succs [bb13, bb17]

bb36
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:45-1502:46)
  1: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:45-1502:46)
  2: FakeRead(ForMatchGuard, _39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1502:45-1502:46)
  3: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1503:28-1506:18)
  4: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1503:28-1503:32)
  5: _68 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1503:28-1503:32)
  6: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:21-1504:59)
  7: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:31-1504:36)
  8: _70 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:31-1504:36)
  9: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:58)
  10: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:54)
  11: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:42)
  12: _73 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:54)
      kind: _72 = ast::parse::ParserI::<'_, P>::span_char(move _73) -> [return: bb37, unwind: bb165]
  }
  preds [bb34]
  succs [bb37, bb165]

bb37
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:53-1504:54)
  1: _71 = (_72.1: ast::Position)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:38-1504:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1504:21-1504:59)
      kind: _69 = ast::Span::new(move _70, move _71) -> [return: bb38, unwind: bb165]
  }
  preds [bb36]
  succs [bb38, bb165]

bb38
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:58-1504:59)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1504:58-1504:59)
  2: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1505:21-1505:61)
  3: _74 = ast::ErrorKind::UnsupportedBackreference
    SourceInfo(regex-syntax/src/ast/parse.rs:1505:21-1505:61)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1503:28-1506:18)
      kind: _67 = ast::parse::ParserI::<'_, P>::error(move _68, move _69, move _74) -> [return: bb39, unwind: bb165]
  }
  preds [bb37]
  succs [bb39, bb165]

bb39
  0: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1506:17-1506:18)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1506:17-1506:18)
  2: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1506:17-1506:18)
  3: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Err(move _67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1503:24-1506:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1506:18-1506:19)
      kind: drop(_67) -> [return: bb40, unwind: bb165]
  }
  preds [bb38]
  succs [bb40, bb165]

bb40
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1506:18-1506:19)
  1: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1506:19-1506:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb39]
  succs [bb147]

bb41
  0: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:21-1509:28)
  1: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  2: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:47)
  3: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:35)
  4: _79 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:47)
      kind: _78 = ast::parse::ParserI::<'_, P>::parse_hex(move _79) -> [return: bb42, unwind: bb165]
  }
  preds [bb20]
  succs [bb42, bb165]

bb42
  0: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:46-1509:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
      kind: _77 = <core::result::Result<ast::Literal, ast::Error> as core::ops::Try>::branch(move _78) -> [return: bb43, unwind: bb164]
  }
  preds [bb41]
  succs [bb43, bb164]

bb43
  0: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  1: PlaceMention(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  2: _80 = discriminant(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
      kind: switchInt(move _80) -> [0: bb46, 1: bb45, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb45, bb46]

bb44
  0: FakeRead(ForMatchedPlace(None), _77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
      kind: unreachable
  }
  preds [bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
      kind: falseEdge -> [real: bb47, imaginary: bb46]
  }
  preds [bb43]
  succs [bb46, bb47]

bb46
  0: StorageLive(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  1: _84 = move ((_77 as Continue).0: ast::Literal)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  2: _76 = move _84
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
  3: StorageDead(_84)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  4: FakeRead(ForLet(None), _76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:21-1509:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:48-1509:49)
      kind: drop(_77) -> [return: bb49, unwind: bb165]
  }
  preds [bb43, bb45]
  succs [bb49, bb165]

bb47
  0: StorageLive(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  1: _81 = move ((_77 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  2: StorageLive(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  3: _83 = move _81
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:31-1509:48)
      kind: _0 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _83) -> [return: bb48, unwind: bb161]
  }
  preds [bb45]
  succs [bb48, bb161]

bb48
  0: StorageDead(_83)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
      kind: drop(_81) -> [return: bb144, unwind: bb163]
  }
  preds [bb47]
  succs [bb144, bb163]

bb49
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:48-1509:49)
  1: StorageLive(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1510:34-1510:39)
  2: _85 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1510:34-1510:39)
  3: ((_76.0: ast::Span).0: ast::Position) = move _85
    SourceInfo(regex-syntax/src/ast/parse.rs:1510:17-1510:39)
  4: StorageDead(_85)
    SourceInfo(regex-syntax/src/ast/parse.rs:1510:38-1510:39)
  5: StorageLive(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:27-1511:50)
  6: StorageLive(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:46-1511:49)
  7: _87 = move _76
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:46-1511:49)
  8: _86 = ast::parse::Primitive::Literal(move _87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:27-1511:50)
  9: StorageDead(_87)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:49-1511:50)
  10: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:24-1511:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1511:50-1511:51)
      kind: drop(_86) -> [return: bb50, unwind: bb165]
  }
  preds [bb46]
  succs [bb50, bb165]

bb50
  0: StorageDead(_86)
    SourceInfo(regex-syntax/src/ast/parse.rs:1511:50-1511:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1511:17-1511:51)
      kind: goto -> bb146
  }
  preds [bb49]
  succs [bb146]

bb51
  0: StorageLive(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:21-1514:28)
  1: StorageLive(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  2: StorageLive(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:57)
  3: StorageLive(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:35)
  4: _92 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:57)
      kind: _91 = ast::parse::ParserI::<'_, P>::parse_unicode_class(move _92) -> [return: bb52, unwind: bb165]
  }
  preds [bb21]
  succs [bb52, bb165]

bb52
  0: StorageDead(_92)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:56-1514:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
      kind: _90 = <core::result::Result<ast::ClassUnicode, ast::Error> as core::ops::Try>::branch(move _91) -> [return: bb53, unwind: bb160]
  }
  preds [bb51]
  succs [bb53, bb160]

bb53
  0: StorageDead(_91)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  1: PlaceMention(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  2: _93 = discriminant(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
      kind: switchInt(move _93) -> [0: bb56, 1: bb55, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55, bb56]

bb54
  0: FakeRead(ForMatchedPlace(None), _90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
      kind: unreachable
  }
  preds [bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: falseEdge -> [real: bb57, imaginary: bb56]
  }
  preds [bb53]
  succs [bb56, bb57]

bb56
  0: StorageLive(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  1: _97 = move ((_90 as Continue).0: ast::ClassUnicode)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  2: _89 = move _97
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: drop(_97) -> [return: bb59, unwind: bb159]
  }
  preds [bb53, bb55]
  succs [bb59, bb159]

bb57
  0: StorageLive(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  1: _94 = move ((_90 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  2: StorageLive(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  3: _96 = move _94
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:31-1514:58)
      kind: _0 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _96) -> [return: bb58, unwind: bb157]
  }
  preds [bb55]
  succs [bb58, bb157]

bb58
  0: StorageDead(_96)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: drop(_94) -> [return: bb141, unwind: bb159]
  }
  preds [bb57]
  succs [bb141, bb159]

bb59
  0: StorageDead(_97)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  1: FakeRead(ForLet(None), _89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:21-1514:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:58-1514:59)
      kind: drop(_90) -> [return: bb60, unwind: bb156]
  }
  preds [bb56]
  succs [bb60, bb156]

bb60
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:58-1514:59)
  1: StorageLive(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1515:34-1515:39)
  2: _98 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1515:34-1515:39)
  3: ((_89.0: ast::Span).0: ast::Position) = move _98
    SourceInfo(regex-syntax/src/ast/parse.rs:1515:17-1515:39)
  4: StorageDead(_98)
    SourceInfo(regex-syntax/src/ast/parse.rs:1515:38-1515:39)
  5: StorageLive(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:27-1516:50)
  6: StorageLive(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:46-1516:49)
  7: _100 = move _89
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:46-1516:49)
  8: _99 = ast::parse::Primitive::Unicode(move _100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:27-1516:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1516:49-1516:50)
      kind: drop(_100) -> [return: bb61, unwind: bb155]
  }
  preds [bb59]
  succs [bb61, bb155]

bb61
  0: StorageDead(_100)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:49-1516:50)
  1: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:24-1516:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1516:50-1516:51)
      kind: drop(_99) -> [return: bb62, unwind: bb156]
  }
  preds [bb60]
  succs [bb62, bb156]

bb62
  0: StorageDead(_99)
    SourceInfo(regex-syntax/src/ast/parse.rs:1516:50-1516:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1517:13-1517:14)
      kind: drop(_89) -> [return: bb143, unwind: bb165]
  }
  preds [bb61]
  succs [bb143, bb165]

bb63
  0: StorageLive(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1519:21-1519:28)
  1: StorageLive(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1519:31-1519:35)
  2: _103 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1519:31-1519:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1519:31-1519:54)
      kind: _102 = ast::parse::ParserI::<'_, P>::parse_perl_class(move _103) -> [return: bb64, unwind: bb165]
  }
  preds [bb22]
  succs [bb64, bb165]

bb64
  0: StorageDead(_103)
    SourceInfo(regex-syntax/src/ast/parse.rs:1519:53-1519:54)
  1: FakeRead(ForLet(None), _102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1519:21-1519:28)
  2: StorageLive(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1520:34-1520:39)
  3: _104 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1520:34-1520:39)
  4: ((_102.0: ast::Span).0: ast::Position) = move _104
    SourceInfo(regex-syntax/src/ast/parse.rs:1520:17-1520:39)
  5: StorageDead(_104)
    SourceInfo(regex-syntax/src/ast/parse.rs:1520:38-1520:39)
  6: StorageLive(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:27-1521:47)
  7: StorageLive(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:43-1521:46)
  8: _106 = move _102
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:43-1521:46)
  9: _105 = ast::parse::Primitive::Perl(move _106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:27-1521:47)
  10: StorageDead(_106)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:46-1521:47)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:24-1521:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1521:47-1521:48)
      kind: drop(_105) -> [return: bb65, unwind: bb165]
  }
  preds [bb63]
  succs [bb65, bb165]

bb65
  0: StorageDead(_105)
    SourceInfo(regex-syntax/src/ast/parse.rs:1521:47-1521:48)
  1: StorageDead(_102)
    SourceInfo(regex-syntax/src/ast/parse.rs:1522:13-1522:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb64]
  succs [bb147]

bb66
  0: StorageDead(_108)
    SourceInfo(regex-syntax/src/ast/parse.rs:1527:19-1527:20)
  1: StorageDead(_107)
    SourceInfo(regex-syntax/src/ast/parse.rs:1527:20-1527:21)
  2: StorageLive(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:13-1528:17)
  3: StorageLive(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:30-1528:35)
  4: _110 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:30-1528:35)
  5: StorageLive(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:37-1528:47)
  6: StorageLive(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:37-1528:41)
  7: _112 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:37-1528:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1528:37-1528:47)
      kind: _111 = ast::parse::ParserI::<'_, P>::pos(move _112) -> [return: bb67, unwind: bb165]
  }
  preds [bb13]
  succs [bb67, bb165]

bb67
  0: StorageDead(_112)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:46-1528:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1528:20-1528:48)
      kind: _109 = ast::Span::new(move _110, move _111) -> [return: bb68, unwind: bb165]
  }
  preds [bb66]
  succs [bb68, bb165]

bb68
  0: StorageDead(_111)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:47-1528:48)
  1: StorageDead(_110)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:47-1528:48)
  2: FakeRead(ForLet(None), _109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1528:13-1528:17)
  3: StorageLive(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:9-1535:10)
  4: StorageLive(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:12-1529:32)
  5: StorageLive(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:30-1529:31)
  6: _115 = _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:30-1529:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1529:12-1529:32)
      kind: _114 = is_meta_character(move _115) -> [return: bb69, unwind: bb165]
  }
  preds [bb67]
  succs [bb69, bb165]

bb69
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1529:12-1529:32)
      kind: switchInt(move _114) -> [0: bb72, otherwise: bb70]
  }
  preds [bb68]
  succs [bb70, bb72]

bb70
  0: StorageDead(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:31-1529:32)
  1: StorageLive(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1530:23-1534:15)
  2: StorageLive(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1530:42-1534:14)
  3: StorageLive(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1531:17-1531:21)
  4: _119 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1531:17-1531:21)
  5: StorageLive(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1532:23-1532:45)
  6: _120 = ast::LiteralKind::Meta
    SourceInfo(regex-syntax/src/ast/parse.rs:1532:23-1532:45)
  7: StorageLive(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1533:17-1533:18)
  8: _121 = _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1533:17-1533:18)
  9: _118 = ast::Literal { span: move _119, kind: move _120, c: move _121 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1530:42-1534:14)
  10: StorageDead(_121)
    SourceInfo(regex-syntax/src/ast/parse.rs:1534:13-1534:14)
  11: StorageDead(_120)
    SourceInfo(regex-syntax/src/ast/parse.rs:1534:13-1534:14)
  12: StorageDead(_119)
    SourceInfo(regex-syntax/src/ast/parse.rs:1534:13-1534:14)
  13: _117 = ast::parse::Primitive::Literal(move _118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1530:23-1534:15)
  14: StorageDead(_118)
    SourceInfo(regex-syntax/src/ast/parse.rs:1534:14-1534:15)
  15: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1530:20-1534:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1534:15-1534:16)
      kind: drop(_117) -> [return: bb71, unwind: bb165]
  }
  preds [bb69]
  succs [bb71, bb165]

bb71
  0: StorageDead(_117)
    SourceInfo(regex-syntax/src/ast/parse.rs:1534:15-1534:16)
  1: StorageDead(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1535:9-1535:10)
  2: StorageDead(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1535:9-1535:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb140
  }
  preds [bb70]
  succs [bb140]

bb72
  0: StorageDead(_115)
    SourceInfo(regex-syntax/src/ast/parse.rs:1529:31-1529:32)
  1: _113 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1535:10-1535:10)
  2: StorageDead(_114)
    SourceInfo(regex-syntax/src/ast/parse.rs:1535:9-1535:10)
  3: StorageDead(_113)
    SourceInfo(regex-syntax/src/ast/parse.rs:1535:9-1535:10)
  4: StorageLive(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:9-1542:10)
  5: StorageLive(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:12-1536:38)
  6: StorageLive(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:36-1536:37)
  7: _124 = _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:36-1536:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1536:12-1536:38)
      kind: _123 = is_escapeable_character(move _124) -> [return: bb73, unwind: bb165]
  }
  preds [bb69]
  succs [bb73, bb165]

bb73
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1536:12-1536:38)
      kind: switchInt(move _123) -> [0: bb76, otherwise: bb74]
  }
  preds [bb72]
  succs [bb74, bb76]

bb74
  0: StorageDead(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:37-1536:38)
  1: StorageLive(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1537:23-1541:15)
  2: StorageLive(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1537:42-1541:14)
  3: StorageLive(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1538:17-1538:21)
  4: _128 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1538:17-1538:21)
  5: StorageLive(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1539:23-1539:52)
  6: _129 = ast::LiteralKind::Superfluous
    SourceInfo(regex-syntax/src/ast/parse.rs:1539:23-1539:52)
  7: StorageLive(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1540:17-1540:18)
  8: _130 = _36
    SourceInfo(regex-syntax/src/ast/parse.rs:1540:17-1540:18)
  9: _127 = ast::Literal { span: move _128, kind: move _129, c: move _130 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1537:42-1541:14)
  10: StorageDead(_130)
    SourceInfo(regex-syntax/src/ast/parse.rs:1541:13-1541:14)
  11: StorageDead(_129)
    SourceInfo(regex-syntax/src/ast/parse.rs:1541:13-1541:14)
  12: StorageDead(_128)
    SourceInfo(regex-syntax/src/ast/parse.rs:1541:13-1541:14)
  13: _126 = ast::parse::Primitive::Literal(move _127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1537:23-1541:15)
  14: StorageDead(_127)
    SourceInfo(regex-syntax/src/ast/parse.rs:1541:14-1541:15)
  15: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1537:20-1541:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1541:15-1541:16)
      kind: drop(_126) -> [return: bb75, unwind: bb165]
  }
  preds [bb73]
  succs [bb75, bb165]

bb75
  0: StorageDead(_126)
    SourceInfo(regex-syntax/src/ast/parse.rs:1541:15-1541:16)
  1: StorageDead(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1542:9-1542:10)
  2: StorageDead(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1542:9-1542:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb140
  }
  preds [bb74]
  succs [bb140]

bb76
  0: StorageDead(_124)
    SourceInfo(regex-syntax/src/ast/parse.rs:1536:37-1536:38)
  1: _122 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1542:10-1542:10)
  2: StorageDead(_123)
    SourceInfo(regex-syntax/src/ast/parse.rs:1542:9-1542:10)
  3: StorageDead(_122)
    SourceInfo(regex-syntax/src/ast/parse.rs:1542:9-1542:10)
  4: StorageLive(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:13-1543:20)
  5: StorageLive(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:23-1549:10)
  6: _132 = &_109
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:23-1549:10)
  7: _131 = {closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} { span: move _132 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:23-1549:10)
  8: StorageDead(_132)
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:31-1543:32)
  9: FakeRead(ForLet(None), _131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1543:13-1543:20)
  10: PlaceMention(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1550:15-1550:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1550:9-1550:16)
      kind: switchInt(_36) -> [97: bb78, 102: bb79, 116: bb80, 110: bb81, 114: bb82, 118: bb83, 65: bb84, 122: bb85, 98: bb86, 66: bb87, 60: bb88, 62: bb89, otherwise: bb77]
  }
  preds [bb73]
  succs [bb77, bb78, bb79, bb80, bb81, bb82, bb83, bb84, bb85, bb86, bb87, bb88, bb89]

bb77
  0: StorageLive(_197)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:22-1594:74)
  1: StorageLive(_198)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:22-1594:26)
  2: _198 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:22-1594:26)
  3: StorageLive(_199)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:33-1594:37)
  4: _199 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:33-1594:37)
  5: StorageLive(_200)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:39-1594:73)
  6: _200 = ast::ErrorKind::EscapeUnrecognized
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:39-1594:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1594:22-1594:74)
      kind: _197 = ast::parse::ParserI::<'_, P>::error(move _198, move _199, move _200) -> [return: bb135, unwind: bb165]
  }
  preds [bb76, bb89]
  succs [bb135, bb165]

bb78
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1551:13-1551:16)
      kind: falseEdge -> [real: bb90, imaginary: bb79]
  }
  preds [bb76]
  succs [bb79, bb90]

bb79
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1552:13-1552:16)
      kind: falseEdge -> [real: bb92, imaginary: bb80]
  }
  preds [bb76, bb78]
  succs [bb80, bb92]

bb80
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1553:13-1553:16)
      kind: falseEdge -> [real: bb94, imaginary: bb81]
  }
  preds [bb76, bb79]
  succs [bb81, bb94]

bb81
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1554:13-1554:16)
      kind: falseEdge -> [real: bb96, imaginary: bb82]
  }
  preds [bb76, bb80]
  succs [bb82, bb96]

bb82
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1555:13-1555:16)
      kind: falseEdge -> [real: bb98, imaginary: bb83]
  }
  preds [bb76, bb81]
  succs [bb83, bb98]

bb83
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1556:13-1556:16)
      kind: falseEdge -> [real: bb100, imaginary: bb84]
  }
  preds [bb76, bb82]
  succs [bb84, bb100]

bb84
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1557:13-1557:16)
      kind: falseEdge -> [real: bb102, imaginary: bb85]
  }
  preds [bb76, bb83]
  succs [bb85, bb102]

bb85
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1561:13-1561:16)
      kind: falseEdge -> [real: bb104, imaginary: bb86]
  }
  preds [bb76, bb84]
  succs [bb86, bb104]

bb86
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1565:13-1565:16)
      kind: falseEdge -> [real: bb106, imaginary: bb87]
  }
  preds [bb76, bb85]
  succs [bb87, bb106]

bb87
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1582:13-1582:16)
      kind: falseEdge -> [real: bb129, imaginary: bb88]
  }
  preds [bb76, bb86]
  succs [bb88, bb129]

bb88
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1586:13-1586:16)
      kind: falseEdge -> [real: bb131, imaginary: bb89]
  }
  preds [bb76, bb87]
  succs [bb89, bb131]

bb89
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1590:13-1590:16)
      kind: falseEdge -> [real: bb133, imaginary: bb77]
  }
  preds [bb76, bb88]
  succs [bb77, bb133]

bb90
  0: StorageLive(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:20-1551:27)
  1: _133 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:20-1551:27)
  2: StorageLive(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:20-1551:66)
  3: StorageLive(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:28-1551:57)
  4: _135 = ast::SpecialLiteralKind::Bell
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:28-1551:57)
  5: _134 = (move _135, const '\u{7}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:20-1551:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1551:20-1551:66)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _133, move _134) -> [return: bb91, unwind: bb165]
  }
  preds [bb78]
  succs [bb91, bb165]

bb91
  0: StorageDead(_135)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:65-1551:66)
  1: StorageDead(_134)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:65-1551:66)
  2: StorageDead(_133)
    SourceInfo(regex-syntax/src/ast/parse.rs:1551:65-1551:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1551:65-1551:66)
      kind: goto -> bb137
  }
  preds [bb90]
  succs [bb137]

bb92
  0: StorageLive(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:20-1552:27)
  1: _136 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:20-1552:27)
  2: StorageLive(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:20-1552:70)
  3: StorageLive(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:28-1552:61)
  4: _138 = ast::SpecialLiteralKind::FormFeed
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:28-1552:61)
  5: _137 = (move _138, const '\u{c}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:20-1552:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1552:20-1552:70)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _136, move _137) -> [return: bb93, unwind: bb165]
  }
  preds [bb79]
  succs [bb93, bb165]

bb93
  0: StorageDead(_138)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:69-1552:70)
  1: StorageDead(_137)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:69-1552:70)
  2: StorageDead(_136)
    SourceInfo(regex-syntax/src/ast/parse.rs:1552:69-1552:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1552:69-1552:70)
      kind: goto -> bb137
  }
  preds [bb92]
  succs [bb137]

bb94
  0: StorageLive(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:20-1553:27)
  1: _139 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:20-1553:27)
  2: StorageLive(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:20-1553:63)
  3: StorageLive(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:28-1553:56)
  4: _141 = ast::SpecialLiteralKind::Tab
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:28-1553:56)
  5: _140 = (move _141, const '\t')
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:20-1553:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1553:20-1553:63)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _139, move _140) -> [return: bb95, unwind: bb165]
  }
  preds [bb80]
  succs [bb95, bb165]

bb95
  0: StorageDead(_141)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:62-1553:63)
  1: StorageDead(_140)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:62-1553:63)
  2: StorageDead(_139)
    SourceInfo(regex-syntax/src/ast/parse.rs:1553:62-1553:63)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1553:62-1553:63)
      kind: goto -> bb137
  }
  preds [bb94]
  succs [bb137]

bb96
  0: StorageLive(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:20-1554:27)
  1: _142 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:20-1554:27)
  2: StorageLive(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:20-1554:68)
  3: StorageLive(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:28-1554:61)
  4: _144 = ast::SpecialLiteralKind::LineFeed
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:28-1554:61)
  5: _143 = (move _144, const '\n')
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:20-1554:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1554:20-1554:68)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _142, move _143) -> [return: bb97, unwind: bb165]
  }
  preds [bb81]
  succs [bb97, bb165]

bb97
  0: StorageDead(_144)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:67-1554:68)
  1: StorageDead(_143)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:67-1554:68)
  2: StorageDead(_142)
    SourceInfo(regex-syntax/src/ast/parse.rs:1554:67-1554:68)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1554:67-1554:68)
      kind: goto -> bb137
  }
  preds [bb96]
  succs [bb137]

bb98
  0: StorageLive(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:20-1555:27)
  1: _145 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:20-1555:27)
  2: StorageLive(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:20-1555:74)
  3: StorageLive(_147)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:28-1555:67)
  4: _147 = ast::SpecialLiteralKind::CarriageReturn
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:28-1555:67)
  5: _146 = (move _147, const '\r')
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:20-1555:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1555:20-1555:74)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _145, move _146) -> [return: bb99, unwind: bb165]
  }
  preds [bb82]
  succs [bb99, bb165]

bb99
  0: StorageDead(_147)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:73-1555:74)
  1: StorageDead(_146)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:73-1555:74)
  2: StorageDead(_145)
    SourceInfo(regex-syntax/src/ast/parse.rs:1555:73-1555:74)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1555:73-1555:74)
      kind: goto -> bb137
  }
  preds [bb98]
  succs [bb137]

bb100
  0: StorageLive(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:20-1556:27)
  1: _148 = &_131
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:20-1556:27)
  2: StorageLive(_149)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:20-1556:73)
  3: StorageLive(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:28-1556:64)
  4: _150 = ast::SpecialLiteralKind::VerticalTab
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:28-1556:64)
  5: _149 = (move _150, const '\u{b}')
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:20-1556:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1556:20-1556:73)
      kind: _0 = <{closure@regex-syntax/src/ast/parse.rs:1543:23: 1543:32} as core::ops::Fn<(ast::SpecialLiteralKind, char)>>::call(move _148, move _149) -> [return: bb101, unwind: bb165]
  }
  preds [bb83]
  succs [bb101, bb165]

bb101
  0: StorageDead(_150)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:72-1556:73)
  1: StorageDead(_149)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:72-1556:73)
  2: StorageDead(_148)
    SourceInfo(regex-syntax/src/ast/parse.rs:1556:72-1556:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1556:72-1556:73)
      kind: goto -> bb137
  }
  preds [bb100]
  succs [bb137]

bb102
  0: StorageLive(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1557:23-1560:15)
  1: StorageLive(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1557:44-1560:14)
  2: StorageLive(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1558:17-1558:21)
  3: _153 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1558:17-1558:21)
  4: StorageLive(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1559:23-1559:52)
  5: _154 = ast::AssertionKind::StartText
    SourceInfo(regex-syntax/src/ast/parse.rs:1559:23-1559:52)
  6: _152 = ast::Assertion { span: move _153, kind: move _154 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1557:44-1560:14)
  7: StorageDead(_154)
    SourceInfo(regex-syntax/src/ast/parse.rs:1560:13-1560:14)
  8: StorageDead(_153)
    SourceInfo(regex-syntax/src/ast/parse.rs:1560:13-1560:14)
  9: _151 = ast::parse::Primitive::Assertion(move _152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1557:23-1560:15)
  10: StorageDead(_152)
    SourceInfo(regex-syntax/src/ast/parse.rs:1560:14-1560:15)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1557:20-1560:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1560:15-1560:16)
      kind: drop(_151) -> [return: bb103, unwind: bb165]
  }
  preds [bb84]
  succs [bb103, bb165]

bb103
  0: StorageDead(_151)
    SourceInfo(regex-syntax/src/ast/parse.rs:1560:15-1560:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1560:15-1560:16)
      kind: goto -> bb137
  }
  preds [bb102]
  succs [bb137]

bb104
  0: StorageLive(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1561:23-1564:15)
  1: StorageLive(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1561:44-1564:14)
  2: StorageLive(_157)
    SourceInfo(regex-syntax/src/ast/parse.rs:1562:17-1562:21)
  3: _157 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1562:17-1562:21)
  4: StorageLive(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1563:23-1563:50)
  5: _158 = ast::AssertionKind::EndText
    SourceInfo(regex-syntax/src/ast/parse.rs:1563:23-1563:50)
  6: _156 = ast::Assertion { span: move _157, kind: move _158 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1561:44-1564:14)
  7: StorageDead(_158)
    SourceInfo(regex-syntax/src/ast/parse.rs:1564:13-1564:14)
  8: StorageDead(_157)
    SourceInfo(regex-syntax/src/ast/parse.rs:1564:13-1564:14)
  9: _155 = ast::parse::Primitive::Assertion(move _156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1561:23-1564:15)
  10: StorageDead(_156)
    SourceInfo(regex-syntax/src/ast/parse.rs:1564:14-1564:15)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1561:20-1564:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1564:15-1564:16)
      kind: drop(_155) -> [return: bb105, unwind: bb165]
  }
  preds [bb85]
  succs [bb105, bb165]

bb105
  0: StorageDead(_155)
    SourceInfo(regex-syntax/src/ast/parse.rs:1564:15-1564:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1564:15-1564:16)
      kind: goto -> bb137
  }
  preds [bb104]
  succs [bb137]

bb106
  0: StorageLive(_159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1566:21-1566:27)
  1: StorageLive(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1567:21-1567:25)
  2: _160 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1567:21-1567:25)
  3: StorageLive(_161)
    SourceInfo(regex-syntax/src/ast/parse.rs:1568:27-1568:59)
  4: _161 = ast::AssertionKind::WordBoundary
    SourceInfo(regex-syntax/src/ast/parse.rs:1568:27-1568:59)
  5: _159 = ast::Assertion { span: move _160, kind: move _161 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1566:30-1569:18)
  6: StorageDead(_161)
    SourceInfo(regex-syntax/src/ast/parse.rs:1569:17-1569:18)
  7: StorageDead(_160)
    SourceInfo(regex-syntax/src/ast/parse.rs:1569:17-1569:18)
  8: FakeRead(ForLet(None), _159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1566:21-1566:27)
  9: StorageLive(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:17-1579:18)
  10: StorageLive(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:21-1572:34)
  11: StorageLive(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:21-1572:25)
  12: _164 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:21-1572:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:21-1572:34)
      kind: _163 = ast::parse::ParserI::<'_, P>::is_eof(move _164) -> [return: bb107, unwind: bb165]
  }
  preds [bb86]
  succs [bb107, bb165]

bb107
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:21-1572:34)
      kind: switchInt(move _163) -> [0: bb109, otherwise: bb108]
  }
  preds [bb106]
  succs [bb108, bb109]

bb108
  0: StorageDead(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:33-1572:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:57-1579:18)
      kind: goto -> bb126
  }
  preds [bb107]
  succs [bb126]

bb109
  0: StorageDead(_164)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:33-1572:34)
  1: StorageLive(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:56)
  2: StorageLive(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:49)
  3: StorageLive(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:42)
  4: _167 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:49)
      kind: _166 = ast::parse::ParserI::<'_, P>::char(move _167) -> [return: bb110, unwind: bb165]
  }
  preds [bb107]
  succs [bb110, bb165]

bb110
  0: StorageDead(_167)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:48-1572:49)
  1: _165 = Eq(move _166, const '{')
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:38-1572:56)
      kind: switchInt(move _165) -> [0: bb125, otherwise: bb111]
  }
  preds [bb109]
  succs [bb111, bb125]

bb111
  0: StorageDead(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:55-1572:56)
  1: StorageLive(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  2: StorageLive(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  3: StorageLive(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:70)
  4: StorageLive(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:29)
  5: _171 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:29)
  6: StorageLive(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:64-1574:69)
  7: _172 = _23
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:64-1574:69)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:70)
      kind: _170 = ast::parse::ParserI::<'_, P>::maybe_parse_special_word_boundary(move _171, move _172) -> [return: bb112, unwind: bb165]
  }
  preds [bb110]
  succs [bb112, bb165]

bb112
  0: StorageDead(_172)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:69-1574:70)
  1: StorageDead(_171)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:69-1574:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
      kind: _169 = <core::result::Result<core::option::Option<ast::AssertionKind>, ast::Error> as core::ops::Try>::branch(move _170) -> [return: bb113, unwind: bb154]
  }
  preds [bb111]
  succs [bb113, bb154]

bb113
  0: StorageDead(_170)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  1: PlaceMention(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  2: _173 = discriminant(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
      kind: switchInt(move _173) -> [0: bb116, 1: bb115, otherwise: bb114]
  }
  preds [bb112]
  succs [bb114, bb115, bb116]

bb114
  0: FakeRead(ForMatchedPlace(None), _169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
      kind: unreachable
  }
  preds [bb113]
  succs []

bb115
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
      kind: falseEdge -> [real: bb117, imaginary: bb116]
  }
  preds [bb113]
  succs [bb116, bb117]

bb116
  0: StorageLive(_177)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  1: _177 = move ((_169 as Continue).0: core::option::Option<ast::AssertionKind>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  2: _168 = move _177
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  3: StorageDead(_177)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  4: PlaceMention(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  5: _178 = discriminant(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1573:28-1573:38)
      kind: switchInt(move _178) -> [1: bb120, otherwise: bb119]
  }
  preds [bb113, bb115]
  succs [bb119, bb120]

bb117
  0: StorageLive(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  1: _174 = move ((_169 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  2: StorageLive(_176)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  3: _176 = move _174
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:25-1574:71)
      kind: _0 = <core::result::Result<ast::parse::Primitive, ast::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _176) -> [return: bb118, unwind: bb151]
  }
  preds [bb115]
  succs [bb118, bb151]

bb118
  0: StorageDead(_176)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
      kind: drop(_174) -> [return: bb138, unwind: bb153]
  }
  preds [bb117]
  succs [bb138, bb153]

bb119
  0: _162 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1578:22-1578:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1573:21-1578:22)
      kind: goto -> bb123
  }
  preds [bb116, bb120]
  succs [bb123]

bb120
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1573:28-1573:38)
      kind: falseEdge -> [real: bb121, imaginary: bb119]
  }
  preds [bb116]
  succs [bb119, bb121]

bb121
  0: StorageLive(_179)
    SourceInfo(regex-syntax/src/ast/parse.rs:1573:33-1573:37)
  1: _179 = move ((_168 as Some).0: ast::AssertionKind)
    SourceInfo(regex-syntax/src/ast/parse.rs:1573:33-1573:37)
  2: StorageLive(_180)
    SourceInfo(regex-syntax/src/ast/parse.rs:1576:35-1576:39)
  3: _180 = move _179
    SourceInfo(regex-syntax/src/ast/parse.rs:1576:35-1576:39)
  4: (_159.1: ast::AssertionKind) = move _180
    SourceInfo(regex-syntax/src/ast/parse.rs:1576:25-1576:39)
  5: StorageDead(_180)
    SourceInfo(regex-syntax/src/ast/parse.rs:1576:38-1576:39)
  6: StorageLive(_181)
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:39-1577:49)
  7: StorageLive(_182)
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:39-1577:43)
  8: _182 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:39-1577:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1577:39-1577:49)
      kind: _181 = ast::parse::ParserI::<'_, P>::pos(move _182) -> [return: bb122, unwind: bb153]
  }
  preds [bb120]
  succs [bb122, bb153]

bb122
  0: StorageDead(_182)
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:48-1577:49)
  1: ((_159.0: ast::Span).1: ast::Position) = move _181
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:25-1577:49)
  2: StorageDead(_181)
    SourceInfo(regex-syntax/src/ast/parse.rs:1577:48-1577:49)
  3: _162 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1575:21-1578:22)
  4: StorageDead(_179)
    SourceInfo(regex-syntax/src/ast/parse.rs:1578:21-1578:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1573:21-1578:22)
      kind: goto -> bb123
  }
  preds [bb121]
  succs [bb123]

bb123
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
      kind: drop(_169) -> [return: bb124, unwind: bb165]
  }
  preds [bb119, bb122]
  succs [bb124, bb165]

bb124
  0: StorageDead(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  1: StorageDead(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:17-1579:18)
      kind: goto -> bb127
  }
  preds [bb123]
  succs [bb127]

bb125
  0: StorageDead(_166)
    SourceInfo(regex-syntax/src/ast/parse.rs:1572:55-1572:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb126
  }
  preds [bb110]
  succs [bb126]

bb126
  0: _162 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:18-1579:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1572:17-1579:18)
      kind: goto -> bb127
  }
  preds [bb108, bb125]
  succs [bb127]

bb127
  0: StorageDead(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  1: StorageDead(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  2: StorageDead(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  3: StorageLive(_183)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:20-1580:44)
  4: StorageLive(_184)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:41-1580:43)
  5: _184 = move _159
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:41-1580:43)
  6: _183 = ast::parse::Primitive::Assertion(move _184)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:20-1580:44)
  7: StorageDead(_184)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:43-1580:44)
  8: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _183)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:17-1580:45)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1580:44-1580:45)
      kind: drop(_183) -> [return: bb128, unwind: bb165]
  }
  preds [bb124, bb126]
  succs [bb128, bb165]

bb128
  0: StorageDead(_183)
    SourceInfo(regex-syntax/src/ast/parse.rs:1580:44-1580:45)
  1: StorageDead(_159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1581:13-1581:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1581:13-1581:14)
      kind: goto -> bb137
  }
  preds [bb127]
  succs [bb137]

bb129
  0: StorageLive(_185)
    SourceInfo(regex-syntax/src/ast/parse.rs:1582:23-1585:15)
  1: StorageLive(_186)
    SourceInfo(regex-syntax/src/ast/parse.rs:1582:44-1585:14)
  2: StorageLive(_187)
    SourceInfo(regex-syntax/src/ast/parse.rs:1583:17-1583:21)
  3: _187 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1583:17-1583:21)
  4: StorageLive(_188)
    SourceInfo(regex-syntax/src/ast/parse.rs:1584:23-1584:58)
  5: _188 = ast::AssertionKind::NotWordBoundary
    SourceInfo(regex-syntax/src/ast/parse.rs:1584:23-1584:58)
  6: _186 = ast::Assertion { span: move _187, kind: move _188 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1582:44-1585:14)
  7: StorageDead(_188)
    SourceInfo(regex-syntax/src/ast/parse.rs:1585:13-1585:14)
  8: StorageDead(_187)
    SourceInfo(regex-syntax/src/ast/parse.rs:1585:13-1585:14)
  9: _185 = ast::parse::Primitive::Assertion(move _186)
    SourceInfo(regex-syntax/src/ast/parse.rs:1582:23-1585:15)
  10: StorageDead(_186)
    SourceInfo(regex-syntax/src/ast/parse.rs:1585:14-1585:15)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _185)
    SourceInfo(regex-syntax/src/ast/parse.rs:1582:20-1585:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1585:15-1585:16)
      kind: drop(_185) -> [return: bb130, unwind: bb165]
  }
  preds [bb87]
  succs [bb130, bb165]

bb130
  0: StorageDead(_185)
    SourceInfo(regex-syntax/src/ast/parse.rs:1585:15-1585:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1585:15-1585:16)
      kind: goto -> bb137
  }
  preds [bb129]
  succs [bb137]

bb131
  0: StorageLive(_189)
    SourceInfo(regex-syntax/src/ast/parse.rs:1586:23-1589:15)
  1: StorageLive(_190)
    SourceInfo(regex-syntax/src/ast/parse.rs:1586:44-1589:14)
  2: StorageLive(_191)
    SourceInfo(regex-syntax/src/ast/parse.rs:1587:17-1587:21)
  3: _191 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1587:17-1587:21)
  4: StorageLive(_192)
    SourceInfo(regex-syntax/src/ast/parse.rs:1588:23-1588:65)
  5: _192 = ast::AssertionKind::WordBoundaryStartAngle
    SourceInfo(regex-syntax/src/ast/parse.rs:1588:23-1588:65)
  6: _190 = ast::Assertion { span: move _191, kind: move _192 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1586:44-1589:14)
  7: StorageDead(_192)
    SourceInfo(regex-syntax/src/ast/parse.rs:1589:13-1589:14)
  8: StorageDead(_191)
    SourceInfo(regex-syntax/src/ast/parse.rs:1589:13-1589:14)
  9: _189 = ast::parse::Primitive::Assertion(move _190)
    SourceInfo(regex-syntax/src/ast/parse.rs:1586:23-1589:15)
  10: StorageDead(_190)
    SourceInfo(regex-syntax/src/ast/parse.rs:1589:14-1589:15)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _189)
    SourceInfo(regex-syntax/src/ast/parse.rs:1586:20-1589:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1589:15-1589:16)
      kind: drop(_189) -> [return: bb132, unwind: bb165]
  }
  preds [bb88]
  succs [bb132, bb165]

bb132
  0: StorageDead(_189)
    SourceInfo(regex-syntax/src/ast/parse.rs:1589:15-1589:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1589:15-1589:16)
      kind: goto -> bb137
  }
  preds [bb131]
  succs [bb137]

bb133
  0: StorageLive(_193)
    SourceInfo(regex-syntax/src/ast/parse.rs:1590:23-1593:15)
  1: StorageLive(_194)
    SourceInfo(regex-syntax/src/ast/parse.rs:1590:44-1593:14)
  2: StorageLive(_195)
    SourceInfo(regex-syntax/src/ast/parse.rs:1591:17-1591:21)
  3: _195 = _109
    SourceInfo(regex-syntax/src/ast/parse.rs:1591:17-1591:21)
  4: StorageLive(_196)
    SourceInfo(regex-syntax/src/ast/parse.rs:1592:23-1592:63)
  5: _196 = ast::AssertionKind::WordBoundaryEndAngle
    SourceInfo(regex-syntax/src/ast/parse.rs:1592:23-1592:63)
  6: _194 = ast::Assertion { span: move _195, kind: move _196 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1590:44-1593:14)
  7: StorageDead(_196)
    SourceInfo(regex-syntax/src/ast/parse.rs:1593:13-1593:14)
  8: StorageDead(_195)
    SourceInfo(regex-syntax/src/ast/parse.rs:1593:13-1593:14)
  9: _193 = ast::parse::Primitive::Assertion(move _194)
    SourceInfo(regex-syntax/src/ast/parse.rs:1590:23-1593:15)
  10: StorageDead(_194)
    SourceInfo(regex-syntax/src/ast/parse.rs:1593:14-1593:15)
  11: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Ok(move _193)
    SourceInfo(regex-syntax/src/ast/parse.rs:1590:20-1593:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1593:15-1593:16)
      kind: drop(_193) -> [return: bb134, unwind: bb165]
  }
  preds [bb89]
  succs [bb134, bb165]

bb134
  0: StorageDead(_193)
    SourceInfo(regex-syntax/src/ast/parse.rs:1593:15-1593:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1593:15-1593:16)
      kind: goto -> bb137
  }
  preds [bb133]
  succs [bb137]

bb135
  0: StorageDead(_200)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:73-1594:74)
  1: StorageDead(_199)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:73-1594:74)
  2: StorageDead(_198)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:73-1594:74)
  3: _0 = core::result::Result::<ast::parse::Primitive, ast::Error>::Err(move _197)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:18-1594:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1594:74-1594:75)
      kind: drop(_197) -> [return: bb136, unwind: bb165]
  }
  preds [bb77]
  succs [bb136, bb165]

bb136
  0: StorageDead(_197)
    SourceInfo(regex-syntax/src/ast/parse.rs:1594:74-1594:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1594:74-1594:75)
      kind: goto -> bb137
  }
  preds [bb135]
  succs [bb137]

bb137
  0: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  1: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  2: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  3: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1596:6-1596:6)
      kind: goto -> bb150
  }
  preds [bb91, bb93, bb95, bb97, bb99, bb101, bb103, bb105, bb128, bb130, bb132, bb134, bb136]
  succs [bb150]

bb138
  0: StorageDead(_174)
    SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
      kind: drop(_169) -> [return: bb139, unwind: bb165]
  }
  preds [bb118]
  succs [bb139, bb165]

bb139
  0: StorageDead(_169)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  1: StorageDead(_168)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  2: StorageDead(_165)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  3: StorageDead(_163)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  4: StorageDead(_162)
    SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
  5: StorageDead(_159)
    SourceInfo(regex-syntax/src/ast/parse.rs:1581:13-1581:14)
  6: StorageDead(_131)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb140
  }
  preds [bb138]
  succs [bb140]

bb140
  0: StorageDead(_109)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb148
  }
  preds [bb71, bb75, bb139]
  succs [bb148]

bb141
  0: StorageDead(_94)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:58-1514:59)
      kind: drop(_90) -> [return: bb142, unwind: bb165]
  }
  preds [bb58]
  succs [bb142, bb165]

bb142
  0: StorageDead(_90)
    SourceInfo(regex-syntax/src/ast/parse.rs:1514:58-1514:59)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb143
  }
  preds [bb141]
  succs [bb143]

bb143
  0: StorageDead(_89)
    SourceInfo(regex-syntax/src/ast/parse.rs:1517:13-1517:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb62, bb142]
  succs [bb147]

bb144
  0: StorageDead(_81)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:48-1509:49)
      kind: drop(_77) -> [return: bb145, unwind: bb165]
  }
  preds [bb48]
  succs [bb145, bb165]

bb145
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1509:48-1509:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb146
  }
  preds [bb144]
  succs [bb146]

bb146
  0: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1512:13-1512:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb147
  }
  preds [bb50, bb145]
  succs [bb147]

bb147
  0: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1524:9-1524:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb148
  }
  preds [bb29, bb32, bb40, bb65, bb143, bb146]
  succs [bb148]

bb148
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb149
  }
  preds [bb140, bb147]
  succs [bb149]

bb149
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1596:5-1596:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1596:6-1596:6)
      kind: goto -> bb150
  }
  preds [bb11, bb148]
  succs [bb150]

bb150
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1596:6-1596:6)
      kind: return
  }
  preds [bb137, bb149]
  succs []

bb151
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
      kind: drop(_176) -> [return: bb152, unwind terminate(cleanup)]
  }
  preds [bb117]
  succs [bb152]

bb152
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
      kind: drop(_174) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb151]
  succs [bb153]

bb153
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1579:17-1579:18)
      kind: drop(_169) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb118, bb121, bb152]
  succs [bb165]

bb154
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1574:70-1574:71)
      kind: drop(_170) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb112]
  succs [bb165]

bb155
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1516:50-1516:51)
      kind: drop(_99) -> [return: bb156, unwind terminate(cleanup)]
  }
  preds [bb60]
  succs [bb156]

bb156
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1517:13-1517:14)
      kind: drop(_89) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb59, bb61, bb155]
  succs [bb165]

bb157
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: drop(_96) -> [return: bb158, unwind terminate(cleanup)]
  }
  preds [bb57]
  succs [bb158]

bb158
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: drop(_94) -> [return: bb159, unwind terminate(cleanup)]
  }
  preds [bb157]
  succs [bb159]

bb159
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:58-1514:59)
      kind: drop(_90) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb56, bb58, bb158]
  succs [bb165]

bb160
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1514:57-1514:58)
      kind: drop(_91) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb165]

bb161
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
      kind: drop(_83) -> [return: bb162, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb162]

bb162
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
      kind: drop(_81) -> [return: bb163, unwind terminate(cleanup)]
  }
  preds [bb161]
  succs [bb163]

bb163
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:48-1509:49)
      kind: drop(_77) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb48, bb162]
  succs [bb165]

bb164
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1509:47-1509:48)
      kind: drop(_78) -> [return: bb165, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb165]

bb165
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1479:5-1596:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb4, bb6, bb7, bb8, bb9, bb10, bb13, bb23, bb25, bb26, bb27, bb28, bb30, bb31, bb33, bb36, bb37, bb38, bb39, bb41, bb46, bb49, bb51, bb62, bb63, bb64, bb66, bb67, bb68, bb70, bb72, bb74, bb77, bb90, bb92, bb94, bb96, bb98, bb100, bb102, bb104, bb106, bb109, bb111, bb123, bb127, bb129, bb131, bb133, bb135, bb138, bb141, bb144, bb153, bb154, bb156, bb159, bb160, bb163, bb164]
  succs []

