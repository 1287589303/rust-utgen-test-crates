bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:13-1747:24)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:48)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:40)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:31)
  4: _6 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:40)
      kind: _5 = ast::parse::ParserI::<'_, P>::parser(move _6) -> [return: bb1, unwind: bb55]
  }
  preds []
  succs [bb1, bb55]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:39-1747:40)
  1: _4 = &((*_5).11: core::cell::RefCell<std::string::String>)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1747:27-1747:61)
      kind: _3 = core::cell::RefCell::<std::string::String>::borrow_mut(move _4) -> [return: bb2, unwind: bb55]
  }
  preds [bb0]
  succs [bb2, bb55]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:60-1747:61)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:13-1747:24)
  2: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:1747:61-1747:62)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:24)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:16)
  5: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:24)
  6: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:16)
  7: _10 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:24)
      kind: _9 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _10) -> [return: bb3, unwind: bb54]
  }
  preds [bb1]
  succs [bb3, bb54]

bb3
  0: _8 = &mut (*_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:16)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:15-1748:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1748:9-1748:24)
      kind: _7 = std::string::String::clear(move _8) -> [return: bb4, unwind: bb54]
  }
  preds [bb2]
  succs [bb4, bb54]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:23-1748:24)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:24-1748:25)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:1748:24-1748:25)
  3: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1750:13-1750:18)
  4: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1750:21-1750:25)
  5: _12 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1750:21-1750:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1750:21-1750:31)
      kind: _11 = ast::parse::ParserI::<'_, P>::pos(move _12) -> [return: bb5, unwind: bb54]
  }
  preds [bb3]
  succs [bb5, bb54]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:1750:30-1750:31)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1750:13-1750:18)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  4: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  5: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:21-1751:34)
  6: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:21-1751:25)
  7: _17 = &_2
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:21-1751:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:21-1751:34)
      kind: _16 = ast::HexLiteralKind::digits(move _17) -> [return: bb6, unwind: bb54]
  }
  preds [bb4]
  succs [bb6, bb54]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:33-1751:34)
  1: _15 = core::ops::Range::<u32> { start: const 0_u32, end: move _16 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:33-1751:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
      kind: _14 = <core::ops::Range<u32> as core::iter::IntoIterator>::into_iter(move _15) -> [return: bb7, unwind: bb54]
  }
  preds [bb5]
  succs [bb7, bb54]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:33-1751:34)
  1: PlaceMention(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  3: _18 = move _14
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
      kind: falseUnwind -> [real: bb9, unwind: bb54]
  }
  preds [bb7, bb33]
  succs [bb9, bb54]

bb9
  0: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  1: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  2: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  3: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  4: _23 = &mut _18
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  5: _22 = &mut (*_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
      kind: _21 = <core::ops::Range<u32> as core::iter::Iterator>::next(move _22) -> [return: bb10, unwind: bb54]
  }
  preds [bb8]
  succs [bb10, bb54]

bb10
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:33-1751:34)
  1: PlaceMention(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  2: _24 = discriminant(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
      kind: switchInt(move _24) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:18-1751:34)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:13-1751:14)
  1: _26 = ((_21 as Some).0: u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:13-1751:14)
  2: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:13-1755:14)
  3: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:16-1752:21)
  4: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:16-1752:17)
  5: _29 = _26
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:16-1752:17)
  6: _28 = Gt(move _29, const 0_u32)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:16-1752:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1752:16-1752:21)
      kind: switchInt(move _28) -> [0: bb22, otherwise: bb15]
  }
  preds [bb10, bb12]
  succs [bb15, bb22]

bb14
  0: _13 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  4: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  7: StorageLive(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1766:9-1766:35)
  8: StorageLive(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1766:9-1766:13)
  9: _55 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1766:9-1766:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1766:9-1766:35)
      kind: _54 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _55) -> [return: bb34, unwind: bb54]
  }
  preds [bb12]
  succs [bb34, bb54]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:20-1752:21)
  1: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:26-1752:52)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:26-1752:30)
  3: _31 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:26-1752:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1752:26-1752:52)
      kind: _30 = ast::parse::ParserI::<'_, P>::bump_and_bump_space(move _31) -> [return: bb16, unwind: bb54]
  }
  preds [bb13]
  succs [bb16, bb54]

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1752:26-1752:52)
      kind: switchInt(move _30) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:51-1752:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1752:53-1755:14)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb18
  0: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:51-1752:52)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1753:28-1754:77)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1753:28-1753:32)
  3: _34 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1753:28-1753:32)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:28-1754:39)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:28-1754:32)
  6: _36 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:28-1754:32)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1754:28-1754:39)
      kind: _35 = ast::parse::ParserI::<'_, P>::span(move _36) -> [return: bb19, unwind: bb54]
  }
  preds [bb16]
  succs [bb19, bb54]

bb19
  0: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:38-1754:39)
  1: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:41-1754:76)
  2: _37 = ast::ErrorKind::EscapeUnexpectedEof
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:41-1754:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1753:28-1754:77)
      kind: _33 = ast::parse::ParserI::<'_, P>::error(move _34, move _35, move _37) -> [return: bb20, unwind: bb54]
  }
  preds [bb18]
  succs [bb20, bb54]

bb20
  0: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:76-1754:77)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:76-1754:77)
  2: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:76-1754:77)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1753:24-1754:78)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1754:77-1754:78)
      kind: drop(_33) -> [return: bb21, unwind: bb54]
  }
  preds [bb19]
  succs [bb21, bb54]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:1754:77-1754:78)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  2: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb20]
  succs [bb51]

bb22
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:1752:20-1752:21)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb13]
  succs [bb23]

bb23
  0: _27 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:14-1755:14)
  1: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  2: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  3: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:1755:13-1755:14)
  4: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:13-1761:14)
  5: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:17-1756:36)
  6: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:24-1756:35)
  7: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:24-1756:28)
  8: _41 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:24-1756:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1756:24-1756:35)
      kind: _40 = ast::parse::ParserI::<'_, P>::char(move _41) -> [return: bb24, unwind: bb54]
  }
  preds [bb17, bb22]
  succs [bb24, bb54]

bb24
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:34-1756:35)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1756:17-1756:36)
      kind: _39 = ast::parse::is_hex(move _40) -> [return: bb25, unwind: bb54]
  }
  preds [bb23]
  succs [bb25, bb54]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1756:17-1756:36)
      kind: switchInt(move _39) -> [0: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27]

bb26
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:35-1756:36)
  1: _38 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1761:14-1761:14)
  2: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1761:13-1761:14)
  3: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1761:13-1761:14)
  4: StorageLive(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:38)
  5: StorageLive(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:20)
  6: StorageLive(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:38)
  7: StorageLive(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:20)
  8: _51 = &mut _3
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:38)
      kind: _50 = <core::cell::RefMut<'_, std::string::String> as core::ops::DerefMut>::deref_mut(move _51) -> [return: bb31, unwind: bb54]
  }
  preds [bb25]
  succs [bb31, bb54]

bb27
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:1756:35-1756:36)
  1: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1757:28-1760:18)
  2: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1757:28-1757:32)
  3: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1757:28-1757:32)
  4: StorageLive(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1758:21-1758:37)
  5: StorageLive(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1758:21-1758:25)
  6: _46 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1758:21-1758:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1758:21-1758:37)
      kind: _45 = ast::parse::ParserI::<'_, P>::span_char(move _46) -> [return: bb28, unwind: bb54]
  }
  preds [bb25]
  succs [bb28, bb54]

bb28
  0: StorageDead(_46)
    SourceInfo(regex-syntax/src/ast/parse.rs:1758:36-1758:37)
  1: StorageLive(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1759:21-1759:58)
  2: _47 = ast::ErrorKind::EscapeHexInvalidDigit
    SourceInfo(regex-syntax/src/ast/parse.rs:1759:21-1759:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1757:28-1760:18)
      kind: _43 = ast::parse::ParserI::<'_, P>::error(move _44, move _45, move _47) -> [return: bb29, unwind: bb54]
  }
  preds [bb27]
  succs [bb29, bb54]

bb29
  0: StorageDead(_47)
    SourceInfo(regex-syntax/src/ast/parse.rs:1760:17-1760:18)
  1: StorageDead(_45)
    SourceInfo(regex-syntax/src/ast/parse.rs:1760:17-1760:18)
  2: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:1760:17-1760:18)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1757:24-1760:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1760:18-1760:19)
      kind: drop(_43) -> [return: bb30, unwind: bb54]
  }
  preds [bb28]
  succs [bb30, bb54]

bb30
  0: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:1760:18-1760:19)
  1: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:1761:13-1761:14)
  2: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:1761:13-1761:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb29]
  succs [bb51]

bb31
  0: _49 = &mut (*_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:20)
  1: StorageDead(_51)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:19-1762:20)
  2: StorageLive(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:26-1762:37)
  3: StorageLive(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:26-1762:30)
  4: _53 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:26-1762:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1762:26-1762:37)
      kind: _52 = ast::parse::ParserI::<'_, P>::char(move _53) -> [return: bb32, unwind: bb54]
  }
  preds [bb26]
  succs [bb32, bb54]

bb32
  0: StorageDead(_53)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:36-1762:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1762:13-1762:38)
      kind: _48 = std::string::String::push(move _49, move _52) -> [return: bb33, unwind: bb54]
  }
  preds [bb31]
  succs [bb33, bb54]

bb33
  0: StorageDead(_52)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:37-1762:38)
  1: StorageDead(_49)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:37-1762:38)
  2: StorageDead(_50)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:38-1762:39)
  3: StorageDead(_48)
    SourceInfo(regex-syntax/src/ast/parse.rs:1762:38-1762:39)
  4: _20 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:35-1763:10)
  5: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  6: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  7: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  8: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  9: _19 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1751:9-1763:10)
      kind: goto -> bb8
  }
  preds [bb32]
  succs [bb8]

bb34
  0: StorageDead(_55)
    SourceInfo(regex-syntax/src/ast/parse.rs:1766:34-1766:35)
  1: StorageDead(_54)
    SourceInfo(regex-syntax/src/ast/parse.rs:1766:35-1766:36)
  2: StorageLive(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1767:13-1767:16)
  3: StorageLive(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1767:19-1767:23)
  4: _57 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1767:19-1767:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1767:19-1767:29)
      kind: _56 = ast::parse::ParserI::<'_, P>::pos(move _57) -> [return: bb35, unwind: bb54]
  }
  preds [bb14]
  succs [bb35, bb54]

bb35
  0: StorageDead(_57)
    SourceInfo(regex-syntax/src/ast/parse.rs:1767:28-1767:29)
  1: FakeRead(ForLet(None), _56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1767:13-1767:16)
  2: StorageLive(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:13-1768:16)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:26)
  4: StorageLive(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:35)
  5: StorageLive(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:26)
  6: _61 = &_3
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:35)
      kind: _60 = <core::cell::RefMut<'_, std::string::String> as core::ops::Deref>::deref(move _61) -> [return: bb36, unwind: bb54]
  }
  preds [bb34]
  succs [bb36, bb54]

bb36
  0: _59 = &(*_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:26)
  1: StorageDead(_61)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:25-1768:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1768:19-1768:35)
      kind: _58 = std::string::String::as_str(move _59) -> [return: bb37, unwind: bb54]
  }
  preds [bb35]
  succs [bb37, bb54]

bb37
  0: StorageDead(_59)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:34-1768:35)
  1: FakeRead(ForLet(None), _58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:13-1768:16)
  2: StorageDead(_60)
    SourceInfo(regex-syntax/src/ast/parse.rs:1768:35-1768:36)
  3: StorageLive(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
  4: StorageLive(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:48)
  5: StorageLive(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:43)
  6: StorageLive(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:35-1769:38)
  7: _65 = &(*_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:35-1769:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:43)
      kind: _64 = core::num::<impl u32>::from_str_radix(move _65, const 16_u32) -> [return: bb38, unwind: bb54]
  }
  preds [bb36]
  succs [bb38, bb54]

bb38
  0: StorageDead(_65)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:42-1769:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:48)
      kind: _63 = core::result::Result::<u32, core::num::ParseIntError>::ok(move _64) -> [return: bb39, unwind: bb54]
  }
  preds [bb37]
  succs [bb39, bb54]

bb39
  0: StorageDead(_64)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:47-1769:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
      kind: _62 = core::option::Option::<u32>::and_then::<char, fn(u32) -> core::option::Option<char> {core::char::methods::<impl char>::from_u32}>(move _63, core::char::methods::<impl char>::from_u32) -> [return: bb40, unwind: bb54]
  }
  preds [bb38]
  succs [bb40, bb54]

bb40
  0: StorageDead(_63)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:72-1769:73)
  1: PlaceMention(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
  2: _66 = discriminant(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1769:9-1769:73)
      kind: switchInt(move _66) -> [0: bb42, 1: bb43, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42, bb43]

bb41
  0: FakeRead(ForMatchedPlace(None), _62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1769:15-1769:73)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1770:13-1770:17)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb40]
  succs [bb43, bb44]

bb43
  0: StorageLive(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1774:18-1774:19)
  1: _73 = ((_62 as Some).0: char)
    SourceInfo(regex-syntax/src/ast/parse.rs:1774:18-1774:19)
  2: StorageLive(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1774:27-1778:14)
  3: StorageLive(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:23-1775:44)
  4: StorageLive(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:33-1775:38)
  5: _76 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:33-1775:38)
  6: StorageLive(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:40-1775:43)
  7: _77 = _56
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:40-1775:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1775:23-1775:44)
      kind: _75 = ast::Span::new(move _76, move _77) -> [return: bb48, unwind: bb54]
  }
  preds [bb40, bb42]
  succs [bb48, bb54]

bb44
  0: StorageLive(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1770:25-1773:14)
  1: StorageLive(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1770:25-1770:29)
  2: _68 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:1770:25-1770:29)
  3: StorageLive(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:17-1771:38)
  4: StorageLive(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:27-1771:32)
  5: _70 = _11
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:27-1771:32)
  6: StorageLive(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:34-1771:37)
  7: _71 = _56
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:34-1771:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1771:17-1771:38)
      kind: _69 = ast::Span::new(move _70, move _71) -> [return: bb45, unwind: bb54]
  }
  preds [bb42]
  succs [bb45, bb54]

bb45
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:37-1771:38)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/ast/parse.rs:1771:37-1771:38)
  2: StorageLive(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1772:17-1772:49)
  3: _72 = ast::ErrorKind::EscapeHexInvalid
    SourceInfo(regex-syntax/src/ast/parse.rs:1772:17-1772:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1770:25-1773:14)
      kind: _67 = ast::parse::ParserI::<'_, P>::error(move _68, move _69, move _72) -> [return: bb46, unwind: bb54]
  }
  preds [bb44]
  succs [bb46, bb54]

bb46
  0: StorageDead(_72)
    SourceInfo(regex-syntax/src/ast/parse.rs:1773:13-1773:14)
  1: StorageDead(_69)
    SourceInfo(regex-syntax/src/ast/parse.rs:1773:13-1773:14)
  2: StorageDead(_68)
    SourceInfo(regex-syntax/src/ast/parse.rs:1773:13-1773:14)
  3: _0 = core::result::Result::<ast::Literal, ast::Error>::Err(move _67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1770:21-1773:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1773:14-1773:15)
      kind: drop(_67) -> [return: bb47, unwind: bb54]
  }
  preds [bb45]
  succs [bb47, bb54]

bb47
  0: StorageDead(_67)
    SourceInfo(regex-syntax/src/ast/parse.rs:1773:14-1773:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1773:14-1773:15)
      kind: goto -> bb49
  }
  preds [bb46]
  succs [bb49]

bb48
  0: StorageDead(_77)
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:43-1775:44)
  1: StorageDead(_76)
    SourceInfo(regex-syntax/src/ast/parse.rs:1775:43-1775:44)
  2: StorageLive(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1776:23-1776:55)
  3: StorageLive(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1776:50-1776:54)
  4: _79 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:1776:50-1776:54)
  5: _78 = ast::LiteralKind::HexFixed(move _79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1776:23-1776:55)
  6: StorageDead(_79)
    SourceInfo(regex-syntax/src/ast/parse.rs:1776:54-1776:55)
  7: StorageLive(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1777:17-1777:18)
  8: _80 = _73
    SourceInfo(regex-syntax/src/ast/parse.rs:1777:17-1777:18)
  9: _74 = ast::Literal { span: move _75, kind: move _78, c: move _80 }
    SourceInfo(regex-syntax/src/ast/parse.rs:1774:27-1778:14)
  10: StorageDead(_80)
    SourceInfo(regex-syntax/src/ast/parse.rs:1778:13-1778:14)
  11: StorageDead(_78)
    SourceInfo(regex-syntax/src/ast/parse.rs:1778:13-1778:14)
  12: StorageDead(_75)
    SourceInfo(regex-syntax/src/ast/parse.rs:1778:13-1778:14)
  13: _0 = core::result::Result::<ast::Literal, ast::Error>::Ok(move _74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1774:24-1778:15)
  14: StorageDead(_74)
    SourceInfo(regex-syntax/src/ast/parse.rs:1778:14-1778:15)
  15: StorageDead(_73)
    SourceInfo(regex-syntax/src/ast/parse.rs:1778:14-1778:15)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1778:14-1778:15)
      kind: goto -> bb49
  }
  preds [bb43]
  succs [bb49]

bb49
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  1: StorageDead(_56)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
      kind: drop(_3) -> [return: bb50, unwind: bb55]
  }
  preds [bb47, bb48]
  succs [bb50, bb55]

bb50
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  1: StorageDead(_62)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:6-1780:6)
      kind: goto -> bb53
  }
  preds [bb49]
  succs [bb53]

bb51
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  1: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  3: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  4: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  5: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  6: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:1763:9-1763:10)
  7: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
      kind: drop(_3) -> [return: bb52, unwind: bb55]
  }
  preds [bb21, bb30]
  succs [bb52, bb55]

bb52
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:6-1780:6)
      kind: goto -> bb53
  }
  preds [bb51]
  succs [bb53]

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:6-1780:6)
      kind: return
  }
  preds [bb50, bb52]
  succs []

bb54
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1780:5-1780:6)
      kind: drop(_3) -> [return: bb55, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb14, bb15, bb18, bb19, bb20, bb23, bb24, bb26, bb27, bb28, bb29, bb31, bb32, bb34, bb35, bb36, bb37, bb38, bb39, bb43, bb44, bb45, bb46]
  succs [bb55]

bb55
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:1743:5-1780:6)
      kind: resume
  }
  preds [bb0, bb1, bb49, bb51, bb54]
  succs []

