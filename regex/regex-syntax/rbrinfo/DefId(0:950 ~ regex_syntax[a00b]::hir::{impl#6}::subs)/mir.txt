bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
  1: PlaceMention((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:759:15-759:20)
  2: _3 = discriminant((*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:759:15-759:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:759:9-759:20)
      kind: switchInt(move _3) -> [0: bb6, 1: bb6, 2: bb6, 3: bb6, 4: bb2, 5: bb3, 6: bb4, 7: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb6, bb6, bb6]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(regex-syntax/src/hir/mod.rs:759:15-759:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:759:15-759:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:764:13-764:60)
      kind: falseEdge -> [real: bb8, imaginary: bb3]
  }
  preds [bb0, bb6]
  succs [bb3, bb8]

bb3
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:765:13-765:54)
      kind: falseEdge -> [real: bb10, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb10]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:766:13-766:38)
      kind: falseEdge -> [real: bb12, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb12]

bb5
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:34-767:42)
  1: _16 = &(((*_1) as Alternation).0: std::vec::Vec<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:34-767:42)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:47-767:51)
  4: _18 = &(*_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:47-767:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
      kind: _17 = <std::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _18) -> [return: bb14, unwind: bb16]
  }
  preds [bb0, bb4]
  succs [bb14, bb16]

bb6
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:760:13-763:31)
      kind: falseEdge -> [real: bb7, imaginary: bb2]
  }
  preds [bb0, bb0, bb0, bb0]
  succs [bb2, bb7]

bb7
  0: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:35-763:38)
  1: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:35-763:38)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:36-763:38)
  3: _6 = []
    SourceInfo(regex-syntax/src/hir/mod.rs:763:36-763:38)
  4: _5 = &_6
    SourceInfo(regex-syntax/src/hir/mod.rs:763:35-763:38)
  5: _4 = &(*_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:35-763:38)
  6: _2 = move _4 as &[hir::Hir] (PointerCoercion(Unsize))
    SourceInfo(regex-syntax/src/hir/mod.rs:763:35-763:38)
  7: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:37-763:38)
  8: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:37-763:38)
  9: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:763:37-763:38)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:763:37-763:38)
      kind: goto -> bb15
  }
  preds [bb6]
  succs [bb15]

bb8
  0: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:46-764:53)
  1: _7 = &((((*_1) as Repetition).0: hir::Repetition).3: std::boxed::Box<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:46-764:53)
  2: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:64-764:77)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:73-764:76)
  4: _9 = &(*(*_7))
    SourceInfo(regex-syntax/src/hir/mod.rs:764:73-764:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:764:64-764:77)
      kind: _8 = core::slice::from_ref::<hir::Hir>(move _9) -> [return: bb9, unwind: bb16]
  }
  preds [bb2]
  succs [bb9, bb16]

bb9
  0: _2 = &(*_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:64-764:77)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:76-764:77)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:76-764:77)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/mod.rs:764:76-764:77)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:764:76-764:77)
      kind: goto -> bb15
  }
  preds [bb8]
  succs [bb15]

bb10
  0: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:40-765:47)
  1: _10 = &((((*_1) as Capture).0: hir::Capture).2: std::boxed::Box<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:40-765:47)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:58-765:71)
  3: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:67-765:70)
  4: _12 = &(*(*_10))
    SourceInfo(regex-syntax/src/hir/mod.rs:765:67-765:70)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:765:58-765:71)
      kind: _11 = core::slice::from_ref::<hir::Hir>(move _12) -> [return: bb11, unwind: bb16]
  }
  preds [bb3]
  succs [bb11, bb16]

bb11
  0: _2 = &(*_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:58-765:71)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:70-765:71)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:70-765:71)
  3: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/mod.rs:765:70-765:71)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:765:70-765:71)
      kind: goto -> bb15
  }
  preds [bb10]
  succs [bb15]

bb12
  0: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:29-766:37)
  1: _13 = &(((*_1) as Concat).0: std::vec::Vec<hir::Hir>)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:29-766:37)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:42-766:46)
  4: _15 = &(*_13)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:42-766:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
      kind: _14 = <std::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _15) -> [return: bb13, unwind: bb16]
  }
  preds [bb4]
  succs [bb13, bb16]

bb13
  0: _2 = &(*_14)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:42-766:46)
  1: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:45-766:46)
  2: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:45-766:46)
  3: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/mod.rs:766:45-766:46)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:766:45-766:46)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: _2 = &(*_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:47-767:51)
  1: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:50-767:51)
  2: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:50-767:51)
  3: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/mod.rs:767:50-767:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:767:50-767:51)
      kind: goto -> bb15
  }
  preds [bb5]
  succs [bb15]

bb15
  0: _0 = &(*_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:759:9-768:10)
  1: StorageDead(_2)
    SourceInfo(regex-syntax/src/hir/mod.rs:769:5-769:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:769:6-769:6)
      kind: return
  }
  preds [bb7, bb9, bb11, bb13, bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:756:5-769:6)
      kind: resume
  }
  preds [bb5, bb8, bb10, bb12]
  succs []

