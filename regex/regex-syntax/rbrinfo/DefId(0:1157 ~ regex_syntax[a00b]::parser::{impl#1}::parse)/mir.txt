bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/parser.rs:250:13-250:16)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:42)
  3: StorageLive(_6)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:27)
  4: _6 = &mut ((*_1).0: ast::parse::Parser)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:27)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/parser.rs:250:34-250:41)
  6: _7 = &(*_2)
    SourceInfo(regex-syntax/src/parser.rs:250:34-250:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:19-250:42)
      kind: _5 = ast::parse::Parser::parse(move _6, move _7) -> [return: bb1, unwind: bb38]
  }
  preds []
  succs [bb1, bb38]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/parser.rs:250:41-250:42)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/parser.rs:250:41-250:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
      kind: _4 = <core::result::Result<ast::Ast, ast::Error> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb37]
  }
  preds [bb0]
  succs [bb2, bb37]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  1: PlaceMention(_4)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  2: _8 = discriminant(_4)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
      kind: switchInt(move _8) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  1: _12 = move ((_4 as Continue).0: ast::Ast)
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  2: _3 = move _12
    SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: drop(_12) -> [return: bb8, unwind: bb36]
  }
  preds [bb2, bb4]
  succs [bb8, bb36]

bb6
  0: StorageLive(_9)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  1: _9 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, ast::Error>)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  2: StorageLive(_11)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  3: _11 = move _9
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:19-250:43)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, ast::Error>>>::from_residual(move _11) -> [return: bb7, unwind: bb34]
  }
  preds [bb4]
  succs [bb7, bb34]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: drop(_9) -> [return: bb24, unwind: bb36]
  }
  preds [bb6]
  succs [bb24, bb36]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/parser.rs:250:13-250:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:43-250:44)
      kind: drop(_4) -> [return: bb9, unwind: bb33]
  }
  preds [bb5]
  succs [bb9, bb33]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/parser.rs:250:43-250:44)
  1: StorageLive(_13)
    SourceInfo(regex-syntax/src/parser.rs:251:13-251:16)
  2: StorageLive(_14)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  3: StorageLive(_15)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:52)
  4: StorageLive(_16)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:27)
  5: _16 = &mut ((*_1).1: hir::translate::Translator)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:27)
  6: StorageLive(_17)
    SourceInfo(regex-syntax/src/parser.rs:251:38-251:45)
  7: _17 = &(*_2)
    SourceInfo(regex-syntax/src/parser.rs:251:38-251:45)
  8: StorageLive(_18)
    SourceInfo(regex-syntax/src/parser.rs:251:47-251:51)
  9: StorageLive(_19)
    SourceInfo(regex-syntax/src/parser.rs:251:47-251:51)
  10: _19 = &_3
    SourceInfo(regex-syntax/src/parser.rs:251:47-251:51)
  11: _18 = &(*_19)
    SourceInfo(regex-syntax/src/parser.rs:251:47-251:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:19-251:52)
      kind: _15 = hir::translate::Translator::translate(move _16, move _17, move _18) -> [return: bb10, unwind: bb33]
  }
  preds [bb8]
  succs [bb10, bb33]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/parser.rs:251:51-251:52)
  1: StorageDead(_17)
    SourceInfo(regex-syntax/src/parser.rs:251:51-251:52)
  2: StorageDead(_16)
    SourceInfo(regex-syntax/src/parser.rs:251:51-251:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
      kind: _14 = <core::result::Result<hir::Hir, hir::Error> as core::ops::Try>::branch(move _15) -> [return: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  1: PlaceMention(_14)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  2: _20 = discriminant(_14)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
      kind: switchInt(move _20) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_24)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  1: _24 = move ((_14 as Continue).0: hir::Hir)
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  2: _13 = move _24
    SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: drop(_24) -> [return: bb17, unwind: bb31]
  }
  preds [bb11, bb13]
  succs [bb17, bb31]

bb15
  0: StorageLive(_21)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  1: _21 = move ((_14 as Break).0: core::result::Result<core::convert::Infallible, hir::Error>)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  2: StorageLive(_23)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  3: _23 = move _21
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:19-251:53)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, hir::Error>>>::from_residual(move _23) -> [return: bb16, unwind: bb29]
  }
  preds [bb13]
  succs [bb16, bb29]

bb16
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: drop(_21) -> [return: bb22, unwind: bb31]
  }
  preds [bb15]
  succs [bb22, bb31]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  1: FakeRead(ForLet(None), _13)
    SourceInfo(regex-syntax/src/parser.rs:251:13-251:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
      kind: drop(_14) -> [return: bb18, unwind: bb28]
  }
  preds [bb14]
  succs [bb18, bb28]

bb18
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/parser.rs:252:12-252:15)
  3: _25 = move _13
    SourceInfo(regex-syntax/src/parser.rs:252:12-252:15)
  4: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _25)
    SourceInfo(regex-syntax/src/parser.rs:252:9-252:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:252:15-252:16)
      kind: drop(_25) -> [return: bb19, unwind: bb28]
  }
  preds [bb17]
  succs [bb19, bb28]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/parser.rs:252:15-252:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
      kind: drop(_13) -> [return: bb20, unwind: bb33]
  }
  preds [bb18]
  succs [bb20, bb33]

bb20
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
      kind: drop(_3) -> [return: bb21, unwind: bb38]
  }
  preds [bb19]
  succs [bb21, bb38]

bb21
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:6-253:6)
      kind: goto -> bb27
  }
  preds [bb20]
  succs [bb27]

bb22
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
      kind: drop(_14) -> [return: bb23, unwind: bb33]
  }
  preds [bb16]
  succs [bb23, bb33]

bb23
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
  2: StorageDead(_13)
    SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
      kind: drop(_3) -> [return: bb26, unwind: bb38]
  }
  preds [bb22]
  succs [bb26, bb38]

bb24
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:43-250:44)
      kind: drop(_4) -> [return: bb25, unwind: bb38]
  }
  preds [bb7]
  succs [bb25, bb38]

bb25
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/parser.rs:250:43-250:44)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:6-253:6)
      kind: goto -> bb27
  }
  preds [bb23, bb25]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:6-253:6)
      kind: return
  }
  preds [bb21, bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
      kind: drop(_13) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb17, bb18]
  succs [bb33]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: drop(_23) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: drop(_21) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:53-251:54)
      kind: drop(_14) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb14, bb16, bb30]
  succs [bb33]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:251:52-251:53)
      kind: drop(_15) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:253:5-253:6)
      kind: drop(_3) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb19, bb22, bb28, bb31, bb32]
  succs [bb38]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: drop(_11) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: drop(_9) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:43-250:44)
      kind: drop(_4) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb35]
  succs [bb38]

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:250:42-250:43)
      kind: drop(_5) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-syntax/src/parser.rs:249:5-253:6)
      kind: resume
  }
  preds [bb0, bb20, bb23, bb24, bb33, bb36, bb37]
  succs []

