bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:9-429:10)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:13-427:38)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:13-427:17)
  3: _5 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:13-427:17)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:32-427:37)
  5: _6 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:32-427:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:427:13-427:38)
      kind: _4 = <Self as hir::interval::Interval>::is_contiguous(move _5, move _6) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:427:13-427:38)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:37-427:38)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:37-427:38)
  2: _3 = const ()
    SourceInfo(regex-syntax/src/hir/interval.rs:429:10-429:10)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:429:9-429:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:429:9-429:10)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:13-430:18)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:30-430:42)
  7: StorageLive(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:30-430:34)
  8: _10 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:30-430:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:430:30-430:42)
      kind: _9 = <Self as hir::interval::Interval>::lower(move _10) -> [return: bb4, unwind: bb12]
  }
  preds [bb1]
  succs [bb4, bb12]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:37-427:38)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/interval.rs:427:37-427:38)
  2: _0 = core::option::Option::<Self>::None
    SourceInfo(regex-syntax/src/hir/interval.rs:428:20-428:24)
  3: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/interval.rs:429:9-429:10)
  4: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/interval.rs:429:9-429:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:433:6-433:6)
      kind: goto -> bb11
  }
  preds [bb1]
  succs [bb11]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:41-430:42)
  1: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:44-430:57)
  2: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:44-430:49)
  3: _12 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:44-430:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:430:44-430:57)
      kind: _11 = <Self as hir::interval::Interval>::lower(move _12) -> [return: bb5, unwind: bb12]
  }
  preds [bb2]
  succs [bb5, bb12]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:56-430:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:430:21-430:58)
      kind: _8 = core::cmp::min::<<Self as hir::interval::Interval>::Bound>(move _9, move _11) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:57-430:58)
  1: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:57-430:58)
  2: FakeRead(ForLet(None), _8)
    SourceInfo(regex-syntax/src/hir/interval.rs:430:13-430:18)
  3: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:13-431:18)
  4: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:30-431:42)
  5: StorageLive(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:30-431:34)
  6: _15 = &(*_1)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:30-431:34)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:431:30-431:42)
      kind: _14 = <Self as hir::interval::Interval>::upper(move _15) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:41-431:42)
  1: StorageLive(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:44-431:57)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:44-431:49)
  3: _17 = &(*_2)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:44-431:49)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:431:44-431:57)
      kind: _16 = <Self as hir::interval::Interval>::upper(move _17) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:56-431:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:431:21-431:58)
      kind: _13 = core::cmp::max::<<Self as hir::interval::Interval>::Bound>(move _14, move _16) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:57-431:58)
  1: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:57-431:58)
  2: FakeRead(ForLet(None), _13)
    SourceInfo(regex-syntax/src/hir/interval.rs:431:13-431:18)
  3: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:14-432:40)
  4: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:27-432:32)
  5: _19 = _8
    SourceInfo(regex-syntax/src/hir/interval.rs:432:27-432:32)
  6: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:34-432:39)
  7: _20 = _13
    SourceInfo(regex-syntax/src/hir/interval.rs:432:34-432:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:432:14-432:40)
      kind: _18 = <Self as hir::interval::Interval>::create(move _19, move _20) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:39-432:40)
  1: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:39-432:40)
  2: _0 = core::option::Option::<Self>::Some(move _18)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:9-432:41)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/interval.rs:432:40-432:41)
  4: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/interval.rs:433:5-433:6)
  5: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/interval.rs:433:5-433:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:433:6-433:6)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:433:6-433:6)
      kind: return
  }
  preds [bb3, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/interval.rs:426:5-433:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5, bb6, bb7, bb8, bb9]
  succs []

