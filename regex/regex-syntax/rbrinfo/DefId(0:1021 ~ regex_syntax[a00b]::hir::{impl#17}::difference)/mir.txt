bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:9-1423:40)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:9-1423:17)
  2: _4 = &mut ((*_1).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:9-1423:17)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:29-1423:39)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:29-1423:39)
  5: _6 = &((*_2).0: hir::interval::IntervalSet<hir::ClassBytesRange>)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:29-1423:39)
  6: _5 = &(*_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:29-1423:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1423:9-1423:40)
      kind: _3 = hir::interval::IntervalSet::<hir::ClassBytesRange>::difference(move _4, move _5) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:39-1423:40)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:39-1423:40)
  2: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:40-1423:41)
  3: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/mod.rs:1423:40-1423:41)
  4: _0 = const ()
    SourceInfo(regex-syntax/src/hir/mod.rs:1422:54-1424:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1424:6-1424:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/mod.rs:1422:5-1424:6)
      kind: resume
  }
  preds [bb0]
  succs []

