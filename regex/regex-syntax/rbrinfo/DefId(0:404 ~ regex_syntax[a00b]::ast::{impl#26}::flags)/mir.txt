bb0
  0: PlaceMention(((*_1).1: ast::GroupKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:1430:15-1430:24)
  1: _2 = discriminant(((*_1).1: ast::GroupKind))
    SourceInfo(regex-syntax/src/ast/mod.rs:1430:15-1430:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1430:9-1430:24)
      kind: switchInt(move _2) -> [2: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = core::option::Option::<&ast::Flags>::None
    SourceInfo(regex-syntax/src/ast/mod.rs:1432:18-1432:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1432:18-1432:22)
      kind: goto -> bb4
  }
  preds [bb0, bb2]
  succs [bb4]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1431:13-1431:47)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:37-1431:46)
  1: _3 = &((((*_1).1: ast::GroupKind) as NonCapturing).0: ast::Flags)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:37-1431:46)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:56-1431:61)
  3: _4 = &(*_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:56-1431:61)
  4: _0 = core::option::Option::<&ast::Flags>::Some(move _4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:51-1431:62)
  5: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:61-1431:62)
  6: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/mod.rs:1431:61-1431:62)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1431:61-1431:62)
      kind: goto -> bb4
  }
  preds [bb2]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/mod.rs:1434:6-1434:6)
      kind: return
  }
  preds [bb1, bb3]
  succs []

