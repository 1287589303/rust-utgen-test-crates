bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:797:27-797:37)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:797:27-797:31)
  2: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:797:27-797:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:797:27-797:37)
      kind: _3 = ast::parse::ParserI::<'_, P>::pos(move _4) -> [return: bb1, unwind: bb58]
  }
  preds []
  succs [bb1, bb58]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:797:36-797:37)
  1: ((_2.0: ast::Span).1: ast::Position) = move _3
    SourceInfo(regex-syntax/src/ast/parse.rs:797:9-797:37)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:797:36-797:37)
  3: StorageLive(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:13-798:22)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:50)
  5: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:38)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:29)
  7: _8 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:29)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:38)
      kind: _7 = ast::parse::ParserI::<'_, P>::parser(move _8) -> [return: bb2, unwind: bb58]
  }
  preds [bb0]
  succs [bb2, bb58]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:37-798:38)
  1: _6 = &((*_7).8: core::cell::RefCell<std::vec::Vec<ast::parse::GroupState>>)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:798:25-798:63)
      kind: _5 = core::cell::RefCell::<std::vec::Vec<ast::parse::GroupState>>::borrow_mut(move _6) -> [return: bb3, unwind: bb58]
  }
  preds [bb1]
  succs [bb3, bb58]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:62-798:63)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:13-798:22)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:798:63-798:64)
  3: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:13-799:16)
  4: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  5: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:30)
  6: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  7: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:30)
  8: _13 = &mut _5
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
      kind: _12 = <core::cell::RefMut<'_, std::vec::Vec<ast::parse::GroupState>> as core::ops::DerefMut>::deref_mut(move _13) -> [return: bb4, unwind: bb57]
  }
  preds [bb2]
  succs [bb4, bb57]

bb4
  0: _11 = &mut (*_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:30)
  1: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:29-799:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
      kind: _10 = std::vec::Vec::<ast::parse::GroupState>::pop(move _11) -> [return: bb5, unwind: bb57]
  }
  preds [bb3]
  succs [bb5, bb57]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:35-799:36)
  1: PlaceMention(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  2: _15 = discriminant(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:799:19-799:36)
      kind: switchInt(move _15) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
      kind: unreachable
  }
  preds [bb5, bb8]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:800:13-800:17)
      kind: falseEdge -> [real: bb11, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb11]

bb8
  0: _14 = discriminant(((_10 as Some).0: ast::parse::GroupState))
    SourceInfo(regex-syntax/src/ast/parse.rs:799:25-799:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:799:19-799:36)
      kind: switchInt(move _14) -> [0: bb10, 1: bb9, otherwise: bb6]
  }
  preds [bb5, bb7]
  succs [bb6, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:801:13-801:51)
      kind: falseEdge -> [real: bb14, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  0: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:806:38-806:43)
  1: _27 = move ((((_10 as Some).0: ast::parse::GroupState) as Group).1: ast::Group)
    SourceInfo(regex-syntax/src/ast/parse.rs:806:38-806:43)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:21-808:74)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:21-808:25)
  4: _30 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:21-808:25)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:32-808:42)
  6: _31 = (_27.0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:32-808:42)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:44-808:73)
  8: _32 = ast::ErrorKind::GroupUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:808:44-808:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:808:21-808:74)
      kind: _29 = ast::parse::ParserI::<'_, P>::error(move _30, move _31, move _32) -> [return: bb21, unwind: bb50]
  }
  preds [bb8, bb9]
  succs [bb21, bb50]

bb11
  0: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:800:24-800:41)
  1: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:800:24-800:30)
  2: _17 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:800:24-800:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:800:24-800:41)
      kind: _16 = ast::Concat::into_ast(move _17) -> [return: bb12, unwind: bb55]
  }
  preds [bb7]
  succs [bb12, bb55]

bb12
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:800:40-800:41)
  1: _9 = core::result::Result::<ast::Ast, ast::Error>::Ok(move _16)
    SourceInfo(regex-syntax/src/ast/parse.rs:800:21-800:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:800:41-800:42)
      kind: drop(_16) -> [return: bb13, unwind: bb56]
  }
  preds [bb11]
  succs [bb13, bb56]

bb13
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:800:41-800:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:800:41-800:42)
      kind: goto -> bb23
  }
  preds [bb12]
  succs [bb23]

bb14
  0: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:801:42-801:49)
  1: _18 = move ((((_10 as Some).0: ast::parse::GroupState) as Alternation).0: ast::Alternation)
    SourceInfo(regex-syntax/src/ast/parse.rs:801:42-801:49)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:802:32-802:42)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:802:32-802:36)
  4: _20 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:802:32-802:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:802:32-802:42)
      kind: _19 = ast::parse::ParserI::<'_, P>::pos(move _20) -> [return: bb15, unwind: bb54]
  }
  preds [bb9]
  succs [bb15, bb54]

bb15
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:802:41-802:42)
  1: ((_18.0: ast::Span).1: ast::Position) = move _19
    SourceInfo(regex-syntax/src/ast/parse.rs:802:17-802:42)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:802:41-802:42)
  3: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:17-803:49)
  4: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:17-803:25)
  5: _22 = &mut (_18.1: std::vec::Vec<ast::Ast>)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:17-803:25)
  6: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:31-803:48)
  7: StorageLive(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:31-803:37)
  8: _24 = move _2
    SourceInfo(regex-syntax/src/ast/parse.rs:803:31-803:37)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:803:31-803:48)
      kind: _23 = ast::Concat::into_ast(move _24) -> [return: bb16, unwind: bb53]
  }
  preds [bb14]
  succs [bb16, bb53]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:47-803:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:803:17-803:49)
      kind: _21 = std::vec::Vec::<ast::Ast>::push(move _22, move _23) -> [return: bb17, unwind: bb52]
  }
  preds [bb15]
  succs [bb17, bb52]

bb17
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:48-803:49)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:48-803:49)
  2: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:803:49-803:50)
  3: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:804:20-804:41)
  4: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:804:37-804:40)
  5: _26 = move _18
    SourceInfo(regex-syntax/src/ast/parse.rs:804:37-804:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:804:20-804:41)
      kind: _25 = ast::Ast::alternation(move _26) -> [return: bb18, unwind: bb51]
  }
  preds [bb16]
  succs [bb18, bb51]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:804:40-804:41)
  1: _9 = core::result::Result::<ast::Ast, ast::Error>::Ok(move _25)
    SourceInfo(regex-syntax/src/ast/parse.rs:804:17-804:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:804:41-804:42)
      kind: drop(_25) -> [return: bb19, unwind: bb54]
  }
  preds [bb17]
  succs [bb19, bb54]

bb19
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:804:41-804:42)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:805:13-805:14)
      kind: drop(_18) -> [return: bb20, unwind: bb56]
  }
  preds [bb18]
  succs [bb20, bb56]

bb20
  0: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:805:13-805:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:805:13-805:14)
      kind: goto -> bb23
  }
  preds [bb19]
  succs [bb23]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:73-808:74)
  1: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:73-808:74)
  2: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:808:73-808:74)
  3: _0 = core::result::Result::<ast::Ast, ast::Error>::Err(move _29)
    SourceInfo(regex-syntax/src/ast/parse.rs:807:24-809:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:809:17-809:18)
      kind: drop(_29) -> [return: bb22, unwind: bb50]
  }
  preds [bb10]
  succs [bb22, bb50]

bb22
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:809:17-809:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:810:13-810:14)
      kind: drop(_27) -> [return: bb41, unwind: bb56]
  }
  preds [bb21]
  succs [bb41, bb56]

bb23
  0: FakeRead(ForLet(None), _9)
    SourceInfo(regex-syntax/src/ast/parse.rs:799:13-799:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
      kind: drop(_10) -> [return: bb24, unwind: bb49]
  }
  preds [bb13, bb20]
  succs [bb24, bb49]

bb24
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
  2: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  3: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:20)
  4: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  5: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:20)
  6: _36 = &mut _5
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
      kind: _35 = <core::cell::RefMut<'_, std::vec::Vec<ast::parse::GroupState>> as core::ops::DerefMut>::deref_mut(move _36) -> [return: bb25, unwind: bb49]
  }
  preds [bb23]
  succs [bb25, bb49]

bb25
  0: _34 = &mut (*_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:20)
  1: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:19-813:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
      kind: _33 = std::vec::Vec::<ast::parse::GroupState>::pop(move _34) -> [return: bb26, unwind: bb49]
  }
  preds [bb24]
  succs [bb26, bb49]

bb26
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:25-813:26)
  1: PlaceMention(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  2: _38 = discriminant(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:813:9-813:26)
      kind: switchInt(move _38) -> [0: bb28, 1: bb29, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
      kind: unreachable
  }
  preds [bb26, bb29]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:814:13-814:17)
      kind: falseEdge -> [real: bb32, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb32]

bb29
  0: _37 = discriminant(((_33 as Some).0: ast::parse::GroupState))
    SourceInfo(regex-syntax/src/ast/parse.rs:813:15-813:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:813:9-813:26)
      kind: switchInt(move _37) -> [0: bb31, 1: bb30, otherwise: bb27]
  }
  preds [bb26, bb28]
  succs [bb27, bb30, bb31]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:815:13-815:45)
      kind: falseEdge -> [real: bb33, imaginary: bb31]
  }
  preds [bb29]
  succs [bb31, bb33]

bb31
  0: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:824:38-824:43)
  1: _40 = move ((((_33 as Some).0: ast::parse::GroupState) as Group).1: ast::Group)
    SourceInfo(regex-syntax/src/ast/parse.rs:824:38-824:43)
  2: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:21-825:74)
  3: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:21-825:25)
  4: _42 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:21-825:25)
  5: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:32-825:42)
  6: _43 = (_40.0: ast::Span)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:32-825:42)
  7: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:44-825:73)
  8: _44 = ast::ErrorKind::GroupUnclosed
    SourceInfo(regex-syntax/src/ast/parse.rs:825:44-825:73)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:825:21-825:74)
      kind: _41 = ast::parse::ParserI::<'_, P>::error(move _42, move _43, move _44) -> [return: bb34, unwind: bb45]
  }
  preds [bb29, bb30]
  succs [bb34, bb45]

bb32
  0: _0 = move _9
    SourceInfo(regex-syntax/src/ast/parse.rs:814:21-814:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:814:21-814:24)
      kind: goto -> bb37
  }
  preds [bb28]
  succs [bb37]

bb33
  0: StorageLive(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _39 = core::panicking::panic(const "internal error: entered unreachable code") -> bb46
  }
  preds [bb30]
  succs [bb46]

bb34
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:73-825:74)
  1: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:73-825:74)
  2: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:73-825:74)
  3: _0 = core::result::Result::<ast::Ast, ast::Error>::Err(move _41)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:17-825:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:825:74-825:75)
      kind: drop(_41) -> [return: bb35, unwind: bb45]
  }
  preds [bb31]
  succs [bb35, bb45]

bb35
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:825:74-825:75)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:826:13-826:14)
      kind: drop(_40) -> [return: bb36, unwind: bb46]
  }
  preds [bb34]
  succs [bb36, bb46]

bb36
  0: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:826:13-826:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:826:13-826:14)
      kind: goto -> bb37
  }
  preds [bb35]
  succs [bb37]

bb37
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_9) -> [return: bb38, unwind: bb47]
  }
  preds [bb32, bb36]
  succs [bb38, bb47]

bb38
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_5) -> [return: bb39, unwind: bb48]
  }
  preds [bb37]
  succs [bb39, bb48]

bb39
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_33) -> [return: bb40, unwind: bb58]
  }
  preds [bb38]
  succs [bb40, bb58]

bb40
  0: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  1: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_2) -> [return: bb44, unwind: bb59]
  }
  preds [bb39]
  succs [bb44, bb59]

bb41
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:810:13-810:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
      kind: drop(_10) -> [return: bb42, unwind: bb57]
  }
  preds [bb22]
  succs [bb42, bb57]

bb42
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
  1: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
  2: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_5) -> [return: bb43, unwind: bb58]
  }
  preds [bb41]
  succs [bb43, bb58]

bb43
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_2) -> [return: bb44, unwind: bb59]
  }
  preds [bb42]
  succs [bb44, bb59]

bb44
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:6-828:6)
      kind: return
  }
  preds [bb40, bb43]
  succs []

bb45
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:826:13-826:14)
      kind: drop(_40) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb31, bb34]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_9) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb33, bb35, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_5) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb37, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_33) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb38, bb47]
  succs [bb58]

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_9) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb23, bb24, bb25]
  succs [bb57]

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:810:13-810:14)
      kind: drop(_27) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb10, bb21]
  succs [bb56]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:804:40-804:41)
      kind: drop(_26) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb54]

bb52
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:803:48-803:49)
      kind: drop(_23) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:803:47-803:48)
      kind: drop(_24) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:805:13-805:14)
      kind: drop(_18) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb14, bb18, bb51, bb52, bb53]
  succs [bb56]

bb55
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:800:40-800:41)
      kind: drop(_17) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:811:10-811:11)
      kind: drop(_10) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb12, bb19, bb22, bb50, bb54, bb55]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_5) -> [return: bb58, unwind terminate(cleanup)]
  }
  preds [bb3, bb4, bb41, bb49, bb56]
  succs [bb58]

bb58
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:828:5-828:6)
      kind: drop(_2) -> [return: bb59, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb39, bb42, bb48, bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:796:5-828:6)
      kind: resume
  }
  preds [bb40, bb43, bb58]
  succs []

