bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:396:13-396:20)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:396:38-396:66)
  2: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _5 = std::vec::Vec::<u8>::new() -> [return: bb1, unwind: bb35]
  }
  preds []
  succs [bb1, bb35]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:396:38-396:66)
      kind: _4 = hir::literal::Literal::exact::<std::vec::Vec<u8>>(move _5) -> [return: bb2, unwind: bb34]
  }
  preds [bb0]
  succs [bb2, bb34]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-syntax/src/hir/literal.rs:396:65-396:66)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:396:23-396:67)
      kind: _3 = hir::literal::Seq::singleton(move _4) -> [return: bb3, unwind: bb33]
  }
  preds [bb1]
  succs [bb3, bb33]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/hir/literal.rs:396:66-396:67)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/hir/literal.rs:396:13-396:20)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
  3: StorageLive(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  4: StorageLive(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  5: _8 = move _2
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
      kind: _7 = <I as core::iter::IntoIterator>::into_iter(move _8) -> [return: bb4, unwind: bb31]
  }
  preds [bb2]
  succs [bb4, bb31]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:21-397:22)
  1: PlaceMention(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  2: StorageLive(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  3: _9 = move _7
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
      kind: falseUnwind -> [real: bb6, unwind: bb29]
  }
  preds [bb4, bb20]
  succs [bb6, bb29]

bb6
  0: StorageLive(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  4: _14 = &mut _9
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  5: _13 = &mut (*_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
      kind: _12 = <I as core::iter::Iterator>::next(move _13) -> [return: bb7, unwind: bb29]
  }
  preds [bb5]
  succs [bb7, bb29]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:21-397:22)
  1: PlaceMention(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  2: _15 = discriminant(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
      kind: switchInt(move _15) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:20-397:22)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:13-397:16)
  1: _17 = ((_12 as Some).0: &hir::Hir)
    SourceInfo(regex-syntax/src/hir/literal.rs:397:13-397:16)
  2: StorageLive(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:402:13-404:14)
  3: StorageLive(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:402:16-402:32)
  4: StorageLive(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:402:16-402:19)
  5: _20 = &_3
    SourceInfo(regex-syntax/src/hir/literal.rs:402:16-402:19)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:402:16-402:32)
      kind: _19 = hir::literal::Seq::is_inexact(move _20) -> [return: bb12, unwind: bb29]
  }
  preds [bb7, bb9]
  succs [bb12, bb29]

bb11
  0: _6 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
      kind: goto -> bb21
  }
  preds [bb9]
  succs [bb21]

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:402:16-402:32)
      kind: switchInt(move _19) -> [0: bb14, otherwise: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:402:31-402:32)
  1: _6 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:403:17-403:22)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:404:13-404:14)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:404:13-404:14)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/lib.rs:1:1-1:1)
      kind: goto -> bb21
  }
  preds [bb12]
  succs [bb21]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/hir/literal.rs:402:31-402:32)
  1: _18 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:404:14-404:14)
  2: StorageDead(_19)
    SourceInfo(regex-syntax/src/hir/literal.rs:404:13-404:14)
  3: StorageDead(_18)
    SourceInfo(regex-syntax/src/hir/literal.rs:404:13-404:14)
  4: StorageLive(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:19-407:58)
  5: StorageLive(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:19-407:23)
  6: _23 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:19-407:23)
  7: StorageLive(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:30-407:33)
  8: _24 = move _3
    SourceInfo(regex-syntax/src/hir/literal.rs:407:30-407:33)
  9: StorageLive(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:35-407:57)
  10: StorageLive(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:35-407:57)
  11: StorageLive(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:40-407:57)
  12: StorageLive(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:40-407:44)
  13: _28 = &(*_1)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:40-407:44)
  14: StorageLive(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:53-407:56)
  15: _29 = &(*_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:53-407:56)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:40-407:57)
      kind: _27 = hir::literal::Extractor::extract(move _28, move _29) -> [return: bb15, unwind: bb28]
  }
  preds [bb12]
  succs [bb15, bb28]

bb15
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:56-407:57)
  1: StorageDead(_28)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:56-407:57)
  2: _26 = &mut _27
    SourceInfo(regex-syntax/src/hir/literal.rs:407:35-407:57)
  3: _25 = &mut (*_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:35-407:57)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:19-407:58)
      kind: _22 = hir::literal::Extractor::cross(move _23, move _24, move _25) -> [return: bb16, unwind: bb26]
  }
  preds [bb14]
  succs [bb16, bb26]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
  1: StorageDead(_24)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
  2: StorageDead(_23)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:13-407:16)
      kind: drop(_3) -> [return: bb17, unwind: bb18]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: _3 = move _22
    SourceInfo(regex-syntax/src/hir/literal.rs:407:13-407:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
      kind: drop(_22) -> [return: bb19, unwind: bb27]
  }
  preds [bb16]
  succs [bb19, bb27]

bb18
  0: _3 = move _22
    SourceInfo(regex-syntax/src/hir/literal.rs:407:13-407:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
      kind: drop(_22) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb27]

bb19
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:58-407:59)
      kind: drop(_27) -> [return: bb20, unwind: bb29]
  }
  preds [bb17]
  succs [bb20, bb29]

bb20
  0: StorageDead(_27)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:58-407:59)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/hir/literal.rs:407:58-407:59)
  2: _11 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:397:23-408:10)
  3: StorageDead(_17)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  4: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  5: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  6: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  7: _10 = const ()
    SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:9-408:10)
      kind: goto -> bb5
  }
  preds [bb19]
  succs [bb5]

bb21
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  1: StorageDead(_12)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  2: StorageDead(_11)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
      kind: drop(_9) -> [return: bb22, unwind: bb30]
  }
  preds [bb11, bb13]
  succs [bb22, bb30]

bb22
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
      kind: drop(_7) -> [return: bb23, unwind: bb32]
  }
  preds [bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_7)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  1: StorageDead(_6)
    SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
  2: _0 = move _3
    SourceInfo(regex-syntax/src/hir/literal.rs:409:9-409:12)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:410:5-410:6)
      kind: drop(_3) -> [return: bb24, unwind: bb35]
  }
  preds [bb22]
  succs [bb24, bb35]

bb24
  0: StorageDead(_3)
    SourceInfo(regex-syntax/src/hir/literal.rs:410:5-410:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:410:5-410:6)
      kind: drop(_2) -> [return: bb25, unwind: bb36]
  }
  preds [bb23]
  succs [bb25, bb36]

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:410:6-410:6)
      kind: return
  }
  preds [bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
      kind: drop(_24) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:58-407:59)
      kind: drop(_27) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb17, bb18, bb26]
  succs [bb29]

bb28
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:407:57-407:58)
      kind: drop(_24) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
      kind: drop(_9) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb10, bb19, bb27, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:408:9-408:10)
      kind: drop(_7) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb21, bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:397:21-397:22)
      kind: drop(_8) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:410:5-410:6)
      kind: drop(_3) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb22, bb30, bb31]
  succs [bb35]

bb33
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:396:66-396:67)
      kind: drop(_4) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb35]

bb34
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:396:65-396:66)
      kind: drop(_5) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:410:5-410:6)
      kind: drop(_2) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb0, bb23, bb32, bb33, bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-syntax/src/hir/literal.rs:395:5-410:6)
      kind: resume
  }
  preds [bb24, bb35]
  succs []

