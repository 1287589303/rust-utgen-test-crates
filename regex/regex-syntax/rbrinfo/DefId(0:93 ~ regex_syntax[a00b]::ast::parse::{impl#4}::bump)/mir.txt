bb0
  0: StorageLive(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:9-496:10)
  1: StorageLive(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:12-494:25)
  2: StorageLive(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:12-494:16)
  3: _4 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:12-494:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:494:12-494:25)
      kind: _3 = ast::parse::ParserI::<'_, P>::is_eof(move _4) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:494:12-494:25)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:24-494:25)
  1: _0 = const false
    SourceInfo(regex-syntax/src/ast/parse.rs:495:20-495:25)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:496:9-496:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:496:9-496:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:507:6-507:6)
      kind: goto -> bb24
  }
  preds [bb1]
  succs [bb24]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-syntax/src/ast/parse.rs:494:24-494:25)
  1: _2 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:496:10-496:10)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/ast/parse.rs:496:9-496:10)
  3: StorageDead(_2)
    SourceInfo(regex-syntax/src/ast/parse.rs:496:9-496:10)
  4: StorageLive(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:61-497:71)
  5: StorageLive(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:61-497:65)
  6: _10 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:61-497:65)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:497:61-497:71)
      kind: _9 = ast::parse::ParserI::<'_, P>::pos(move _10) -> [return: bb4, unwind: bb25]
  }
  preds [bb1]
  succs [bb4, bb25]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:70-497:71)
  1: PlaceMention(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:61-497:71)
  2: StorageLive(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:24-497:34)
  3: _6 = (_9.0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:24-497:34)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:36-497:44)
  5: _7 = (_9.1: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:36-497:44)
  6: StorageLive(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:46-497:56)
  7: _8 = (_9.2: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:46-497:56)
  8: StorageDead(_9)
    SourceInfo(regex-syntax/src/ast/parse.rs:497:71-497:72)
  9: StorageLive(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:9-503:10)
  10: StorageLive(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:31)
  11: StorageLive(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:23)
  12: StorageLive(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:16)
  13: _14 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:16)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:23)
      kind: _13 = ast::parse::ParserI::<'_, P>::char(move _14) -> [return: bb5, unwind: bb25]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:22-498:23)
  1: _12 = Eq(move _13, const '\n')
    SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:31)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:498:12-498:31)
      kind: switchInt(move _12) -> [0: bb9, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:30-498:31)
  1: StorageLive(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:48)
  2: StorageLive(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:39)
  3: StorageLive(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:24)
  4: _17 = _7
    SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:24)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:39)
      kind: _16 = core::num::<impl usize>::checked_add(move _17, const 1_usize) -> [return: bb7, unwind: bb25]
  }
  preds [bb5]
  succs [bb7, bb25]

bb7
  0: StorageDead(_17)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:38-499:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:499:20-499:48)
      kind: _15 = core::option::Option::<usize>::unwrap(move _16) -> [return: bb8, unwind: bb25]
  }
  preds [bb6]
  succs [bb8, bb25]

bb8
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:47-499:48)
  1: _7 = move _15
    SourceInfo(regex-syntax/src/ast/parse.rs:499:13-499:48)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/ast/parse.rs:499:47-499:48)
  3: _8 = const 1_usize
    SourceInfo(regex-syntax/src/ast/parse.rs:500:13-500:23)
  4: _11 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:498:32-501:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:498:9-503:10)
      kind: goto -> bb12
  }
  preds [bb7]
  succs [bb12]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-syntax/src/ast/parse.rs:498:30-498:31)
  1: StorageLive(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:52)
  2: StorageLive(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:43)
  3: StorageLive(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:28)
  4: _20 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:43)
      kind: _19 = core::num::<impl usize>::checked_add(move _20, const 1_usize) -> [return: bb10, unwind: bb25]
  }
  preds [bb5]
  succs [bb10, bb25]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:42-502:43)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:502:22-502:52)
      kind: _18 = core::option::Option::<usize>::unwrap(move _19) -> [return: bb11, unwind: bb25]
  }
  preds [bb9]
  succs [bb11, bb25]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:51-502:52)
  1: _8 = move _18
    SourceInfo(regex-syntax/src/ast/parse.rs:502:13-502:52)
  2: StorageDead(_18)
    SourceInfo(regex-syntax/src/ast/parse.rs:502:51-502:52)
  3: _11 = const ()
    SourceInfo(regex-syntax/src/ast/parse.rs:501:16-503:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:498:9-503:10)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_12)
    SourceInfo(regex-syntax/src/ast/parse.rs:503:9-503:10)
  1: StorageDead(_11)
    SourceInfo(regex-syntax/src/ast/parse.rs:503:9-503:10)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:41)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:30)
  4: StorageLive(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:23)
  5: _23 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:23)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:30)
      kind: _22 = ast::parse::ParserI::<'_, P>::char(move _23) -> [return: bb13, unwind: bb25]
  }
  preds [bb8, bb11]
  succs [bb13, bb25]

bb13
  0: StorageDead(_23)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:29-504:30)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:504:19-504:41)
      kind: _21 = core::char::methods::<impl char>::len_utf8(move _22) -> [return: bb14, unwind: bb25]
  }
  preds [bb12]
  succs [bb14, bb25]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:40-504:41)
  1: _24 = AddWithOverflow(_6, _21)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:9-504:41)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:504:9-504:41)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} + {}`, which would overflow", _6, move _21) -> [success: bb15, unwind: bb25]
  }
  preds [bb13]
  succs [bb15, bb25]

bb15
  0: _6 = move (_24.0: usize)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:9-504:41)
  1: StorageDead(_21)
    SourceInfo(regex-syntax/src/ast/parse.rs:504:40-504:41)
  2: StorageLive(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:65)
  3: StorageLive(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:26)
  4: StorageLive(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:22)
  5: StorageLive(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:13)
  6: _28 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:22)
      kind: _27 = ast::parse::ParserI::<'_, P>::parser(move _28) -> [return: bb16, unwind: bb25]
  }
  preds [bb14]
  succs [bb16, bb25]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:21-505:22)
  1: _26 = &((*_27).0: core::cell::Cell<ast::Position>)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:26)
  2: StorageLive(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:31-505:64)
  3: StorageLive(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:42-505:48)
  4: _30 = _6
    SourceInfo(regex-syntax/src/ast/parse.rs:505:42-505:48)
  5: StorageLive(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:50-505:54)
  6: _31 = _7
    SourceInfo(regex-syntax/src/ast/parse.rs:505:50-505:54)
  7: StorageLive(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:56-505:62)
  8: _32 = _8
    SourceInfo(regex-syntax/src/ast/parse.rs:505:56-505:62)
  9: _29 = ast::Position { offset: move _30, line: move _31, column: move _32 }
    SourceInfo(regex-syntax/src/ast/parse.rs:505:31-505:64)
  10: StorageDead(_32)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:63-505:64)
  11: StorageDead(_31)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:63-505:64)
  12: StorageDead(_30)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:63-505:64)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:505:9-505:65)
      kind: _25 = core::cell::Cell::<ast::Position>::set(move _26, move _29) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: StorageDead(_29)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:64-505:65)
  1: StorageDead(_26)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:64-505:65)
  2: StorageDead(_27)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:65-505:66)
  3: StorageDead(_25)
    SourceInfo(regex-syntax/src/ast/parse.rs:505:65-505:66)
  4: StorageLive(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:55)
  5: StorageLive(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:55)
  6: StorageLive(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:48)
  7: StorageLive(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:48)
  8: StorageLive(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:40)
  9: StorageLive(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:23-506:40)
  10: StorageLive(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:23)
  11: StorageLive(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:23)
  12: StorageLive(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:13)
  13: _41 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:13)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:23)
      kind: _40 = ast::parse::ParserI::<'_, P>::pattern(move _41) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  0: _39 = &(*_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:23)
  1: StorageDead(_41)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:22-506:23)
  2: StorageLive(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:39)
  3: StorageLive(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:37)
  4: StorageLive(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:28)
  5: _44 = &(*_1)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:28)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:37)
      kind: _43 = ast::parse::ParserI::<'_, P>::offset(move _44) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: StorageDead(_44)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:36-506:37)
  1: _42 = core::ops::RangeFrom::<usize> { start: move _43 }
    SourceInfo(regex-syntax/src/ast/parse.rs:506:24-506:39)
  2: StorageDead(_43)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:38-506:39)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:23-506:40)
      kind: _38 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _39, move _42) -> [return: bb20, unwind: bb25]
  }
  preds [bb18]
  succs [bb20, bb25]

bb20
  0: _37 = &(*_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:40)
  1: StorageDead(_42)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:39-506:40)
  2: StorageDead(_39)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:39-506:40)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:48)
      kind: _36 = core::str::<impl str>::chars(move _37) -> [return: bb21, unwind: bb25]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: _35 = &mut _36
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:48)
  1: StorageDead(_37)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:47-506:48)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:55)
      kind: _34 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _35) -> [return: bb22, unwind: bb25]
  }
  preds [bb20]
  succs [bb22, bb25]

bb22
  0: _33 = &_34
    SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:55)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:54-506:55)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:506:9-506:65)
      kind: _0 = core::option::Option::<char>::is_some(move _33) -> [return: bb23, unwind: bb25]
  }
  preds [bb21]
  succs [bb23, bb25]

bb23
  0: StorageDead(_33)
    SourceInfo(regex-syntax/src/ast/parse.rs:506:64-506:65)
  1: StorageDead(_8)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  2: StorageDead(_7)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  3: StorageDead(_6)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  4: StorageDead(_40)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  5: StorageDead(_38)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  6: StorageDead(_36)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  7: StorageDead(_34)
    SourceInfo(regex-syntax/src/ast/parse.rs:507:5-507:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:507:6-507:6)
      kind: goto -> bb24
  }
  preds [bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:507:6-507:6)
      kind: return
  }
  preds [bb2, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-syntax/src/ast/parse.rs:493:5-507:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb7, bb9, bb10, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22]
  succs []

