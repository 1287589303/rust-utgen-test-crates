bb0
  0: StorageLive(_3)
    SourceInfo(regex-syntax/src/error.rs:221:13-221:18)
  1: StorageLive(_4)
    SourceInfo(regex-syntax/src/error.rs:221:34-221:37)
  2: StorageLive(_5)
    SourceInfo(regex-syntax/src/error.rs:221:22-221:34)
  3: _5 = &((*_1).2: std::vec::Vec<std::vec::Vec<ast::Span>>)
    SourceInfo(regex-syntax/src/error.rs:221:22-221:34)
  4: StorageLive(_6)
    SourceInfo(regex-syntax/src/error.rs:221:35-221:36)
  5: _6 = _2
    SourceInfo(regex-syntax/src/error.rs:221:35-221:36)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:221:34-221:37)
      kind: _4 = <std::vec::Vec<std::vec::Vec<ast::Span>> as core::ops::Index<usize>>::index(move _5, move _6) -> [return: bb1, unwind: bb51]
  }
  preds []
  succs [bb1, bb51]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-syntax/src/error.rs:221:36-221:37)
  1: StorageDead(_5)
    SourceInfo(regex-syntax/src/error.rs:221:36-221:37)
  2: _3 = &(*_4)
    SourceInfo(regex-syntax/src/error.rs:221:21-221:37)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(regex-syntax/src/error.rs:221:13-221:18)
  4: StorageLive(_7)
    SourceInfo(regex-syntax/src/error.rs:222:9-224:10)
  5: StorageLive(_8)
    SourceInfo(regex-syntax/src/error.rs:222:12-222:28)
  6: StorageLive(_9)
    SourceInfo(regex-syntax/src/error.rs:222:12-222:17)
  7: _9 = &(*_3)
    SourceInfo(regex-syntax/src/error.rs:222:12-222:17)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:222:12-222:28)
      kind: _8 = std::vec::Vec::<ast::Span>::is_empty(move _9) -> [return: bb2, unwind: bb51]
  }
  preds [bb0]
  succs [bb2, bb51]

bb2
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:222:12-222:28)
      kind: switchInt(move _8) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:222:27-222:28)
  1: _0 = core::option::Option::<std::string::String>::None
    SourceInfo(regex-syntax/src/error.rs:223:20-223:24)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:224:9-224:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:224:9-224:10)
  4: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  5: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:242:6-242:6)
      kind: goto -> bb49
  }
  preds [bb2]
  succs [bb49]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-syntax/src/error.rs:222:27-222:28)
  1: _7 = const ()
    SourceInfo(regex-syntax/src/error.rs:224:10-224:10)
  2: StorageDead(_8)
    SourceInfo(regex-syntax/src/error.rs:224:9-224:10)
  3: StorageDead(_7)
    SourceInfo(regex-syntax/src/error.rs:224:9-224:10)
  4: StorageLive(_11)
    SourceInfo(regex-syntax/src/error.rs:225:13-225:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:225:25-225:38)
      kind: _11 = std::string::String::new() -> [return: bb5, unwind: bb51]
  }
  preds [bb2]
  succs [bb5, bb51]

bb5
  0: FakeRead(ForLet(None), _11)
    SourceInfo(regex-syntax/src/error.rs:225:13-225:22)
  1: StorageLive(_12)
    SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
  2: StorageLive(_13)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  3: StorageLive(_14)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  4: StorageLive(_15)
    SourceInfo(regex-syntax/src/error.rs:226:21-226:47)
  5: StorageLive(_16)
    SourceInfo(regex-syntax/src/error.rs:226:21-226:25)
  6: _16 = &(*_1)
    SourceInfo(regex-syntax/src/error.rs:226:21-226:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:21-226:47)
      kind: _15 = error::Spans::<'_>::line_number_padding(move _16) -> [return: bb6, unwind: bb50]
  }
  preds [bb4]
  succs [bb6, bb50]

bb6
  0: StorageDead(_16)
    SourceInfo(regex-syntax/src/error.rs:226:46-226:47)
  1: _14 = core::ops::Range::<usize> { start: const 0_usize, end: move _15 }
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  2: StorageDead(_15)
    SourceInfo(regex-syntax/src/error.rs:226:46-226:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
      kind: _13 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _14) -> [return: bb7, unwind: bb50]
  }
  preds [bb5]
  succs [bb7, bb50]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-syntax/src/error.rs:226:46-226:47)
  1: PlaceMention(_13)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  2: StorageLive(_17)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  3: _17 = move _13
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
      kind: falseUnwind -> [real: bb9, unwind: bb50]
  }
  preds [bb7, bb15]
  succs [bb9, bb50]

bb9
  0: StorageLive(_19)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  1: StorageLive(_20)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  2: StorageLive(_21)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  3: StorageLive(_22)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  4: _22 = &mut _17
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  5: _21 = &mut (*_22)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
      kind: _20 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _21) -> [return: bb10, unwind: bb50]
  }
  preds [bb8]
  succs [bb10, bb50]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-syntax/src/error.rs:226:46-226:47)
  1: PlaceMention(_20)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  2: _23 = discriminant(_20)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
      kind: switchInt(move _23) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _20)
    SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:18-226:47)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_25)
    SourceInfo(regex-syntax/src/error.rs:227:13-227:28)
  1: StorageLive(_26)
    SourceInfo(regex-syntax/src/error.rs:227:13-227:18)
  2: _26 = &mut _11
    SourceInfo(regex-syntax/src/error.rs:227:13-227:18)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:227:13-227:28)
      kind: _25 = std::string::String::push(move _26, const ' ') -> [return: bb15, unwind: bb50]
  }
  preds [bb10, bb12]
  succs [bb15, bb50]

bb14
  0: _12 = const ()
    SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
  1: StorageDead(_22)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  2: StorageDead(_20)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  3: StorageDead(_19)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  4: StorageDead(_17)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  5: StorageDead(_13)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  6: StorageDead(_12)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  7: StorageLive(_27)
    SourceInfo(regex-syntax/src/error.rs:229:13-229:20)
  8: _27 = const 0_usize
    SourceInfo(regex-syntax/src/error.rs:229:23-229:24)
  9: FakeRead(ForLet(None), _27)
    SourceInfo(regex-syntax/src/error.rs:229:13-229:20)
  10: StorageLive(_28)
    SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
  11: StorageLive(_29)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  12: StorageLive(_30)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  13: _30 = _3
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
      kind: _29 = <&std::vec::Vec<ast::Span> as core::iter::IntoIterator>::into_iter(move _30) -> [return: bb16, unwind: bb50]
  }
  preds [bb12]
  succs [bb16, bb50]

bb15
  0: StorageDead(_26)
    SourceInfo(regex-syntax/src/error.rs:227:27-227:28)
  1: StorageDead(_25)
    SourceInfo(regex-syntax/src/error.rs:227:28-227:29)
  2: _19 = const ()
    SourceInfo(regex-syntax/src/error.rs:226:48-228:10)
  3: StorageDead(_22)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  4: StorageDead(_20)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  5: StorageDead(_19)
    SourceInfo(regex-syntax/src/error.rs:228:9-228:10)
  6: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:226:9-228:10)
      kind: goto -> bb8
  }
  preds [bb13]
  succs [bb8]

bb16
  0: StorageDead(_30)
    SourceInfo(regex-syntax/src/error.rs:230:25-230:26)
  1: PlaceMention(_29)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  2: StorageLive(_31)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  3: _31 = move _29
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
      kind: goto -> bb17
  }
  preds [bb14]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
      kind: falseUnwind -> [real: bb18, unwind: bb50]
  }
  preds [bb16, bb44]
  succs [bb18, bb50]

bb18
  0: StorageLive(_32)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  1: StorageLive(_33)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  2: StorageLive(_34)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  3: StorageLive(_35)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  4: _35 = &mut _31
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  5: _34 = &mut (*_35)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
      kind: _33 = <core::slice::Iter<'_, ast::Span> as core::iter::Iterator>::next(move _34) -> [return: bb19, unwind: bb50]
  }
  preds [bb17]
  succs [bb19, bb50]

bb19
  0: StorageDead(_34)
    SourceInfo(regex-syntax/src/error.rs:230:25-230:26)
  1: PlaceMention(_33)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  2: _36 = discriminant(_33)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
      kind: switchInt(move _36) -> [0: bb21, 1: bb22, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:21-230:26)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_38)
    SourceInfo(regex-syntax/src/error.rs:230:13-230:17)
  1: _38 = ((_33 as Some).0: &ast::Span)
    SourceInfo(regex-syntax/src/error.rs:230:13-230:17)
  2: StorageLive(_39)
    SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
  3: StorageLive(_40)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  4: StorageLive(_41)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  5: StorageLive(_42)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:25)
  6: _42 = _27
    SourceInfo(regex-syntax/src/error.rs:231:22-231:25)
  7: StorageLive(_43)
    SourceInfo(regex-syntax/src/error.rs:231:27-231:50)
  8: StorageLive(_44)
    SourceInfo(regex-syntax/src/error.rs:231:28-231:45)
  9: _44 = (((*_38).0: ast::Position).2: usize)
    SourceInfo(regex-syntax/src/error.rs:231:28-231:45)
  10: _45 = SubWithOverflow(_44, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:231:27-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:27-231:50)
      kind: assert(!move (_45.1: bool), "attempt to compute `{} - {}`, which would overflow", move _44, const 1_usize) -> [success: bb24, unwind: bb50]
  }
  preds [bb19, bb21]
  succs [bb24, bb50]

bb23
  0: _28 = const ()
    SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
  1: StorageDead(_35)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  2: StorageDead(_33)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  3: StorageDead(_32)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  4: StorageDead(_31)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  5: StorageDead(_29)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  6: StorageDead(_28)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  7: StorageLive(_73)
    SourceInfo(regex-syntax/src/error.rs:241:14-241:19)
  8: _73 = move _11
    SourceInfo(regex-syntax/src/error.rs:241:14-241:19)
  9: _0 = core::option::Option::<std::string::String>::Some(move _73)
    SourceInfo(regex-syntax/src/error.rs:241:9-241:20)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:241:19-241:20)
      kind: drop(_73) -> [return: bb47, unwind: bb50]
  }
  preds [bb21]
  succs [bb47, bb50]

bb24
  0: _43 = move (_45.0: usize)
    SourceInfo(regex-syntax/src/error.rs:231:27-231:50)
  1: StorageDead(_44)
    SourceInfo(regex-syntax/src/error.rs:231:49-231:50)
  2: _41 = core::ops::Range::<usize> { start: move _42, end: move _43 }
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  3: StorageDead(_43)
    SourceInfo(regex-syntax/src/error.rs:231:49-231:50)
  4: StorageDead(_42)
    SourceInfo(regex-syntax/src/error.rs:231:49-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
      kind: _40 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _41) -> [return: bb25, unwind: bb50]
  }
  preds [bb22]
  succs [bb25, bb50]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-syntax/src/error.rs:231:49-231:50)
  1: PlaceMention(_40)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  2: StorageLive(_46)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  3: _46 = move _40
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
      kind: goto -> bb26
  }
  preds [bb24]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
      kind: falseUnwind -> [real: bb27, unwind: bb50]
  }
  preds [bb25, bb34]
  succs [bb27, bb50]

bb27
  0: StorageLive(_47)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  1: StorageLive(_48)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  2: StorageLive(_49)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  3: StorageLive(_50)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  4: _50 = &mut _46
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  5: _49 = &mut (*_50)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
      kind: _48 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _49) -> [return: bb28, unwind: bb50]
  }
  preds [bb26]
  succs [bb28, bb50]

bb28
  0: StorageDead(_49)
    SourceInfo(regex-syntax/src/error.rs:231:49-231:50)
  1: PlaceMention(_48)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  2: _51 = discriminant(_48)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
      kind: switchInt(move _51) -> [0: bb30, 1: bb31, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _48)
    SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:22-231:50)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_53)
    SourceInfo(regex-syntax/src/error.rs:232:17-232:32)
  1: StorageLive(_54)
    SourceInfo(regex-syntax/src/error.rs:232:17-232:22)
  2: _54 = &mut _11
    SourceInfo(regex-syntax/src/error.rs:232:17-232:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:232:17-232:32)
      kind: _53 = std::string::String::push(move _54, const ' ') -> [return: bb33, unwind: bb50]
  }
  preds [bb28, bb30]
  succs [bb33, bb50]

bb32
  0: _39 = const ()
    SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
  1: StorageDead(_50)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  2: StorageDead(_48)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  3: StorageDead(_47)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  4: StorageDead(_46)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  5: StorageDead(_40)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  6: StorageDead(_39)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  7: StorageLive(_56)
    SourceInfo(regex-syntax/src/error.rs:235:17-235:25)
  8: StorageLive(_57)
    SourceInfo(regex-syntax/src/error.rs:235:28-235:43)
  9: _57 = (((*_38).1: ast::Position).2: usize)
    SourceInfo(regex-syntax/src/error.rs:235:28-235:43)
  10: StorageLive(_58)
    SourceInfo(regex-syntax/src/error.rs:235:59-235:76)
  11: _58 = (((*_38).0: ast::Position).2: usize)
    SourceInfo(regex-syntax/src/error.rs:235:59-235:76)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:235:28-235:77)
      kind: _56 = core::num::<impl usize>::saturating_sub(move _57, move _58) -> [return: bb35, unwind: bb50]
  }
  preds [bb30]
  succs [bb35, bb50]

bb33
  0: StorageDead(_54)
    SourceInfo(regex-syntax/src/error.rs:232:31-232:32)
  1: StorageDead(_53)
    SourceInfo(regex-syntax/src/error.rs:232:32-232:33)
  2: _55 = AddWithOverflow(_27, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:233:17-233:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:233:17-233:25)
      kind: assert(!move (_55.1: bool), "attempt to compute `{} + {}`, which would overflow", _27, const 1_usize) -> [success: bb34, unwind: bb50]
  }
  preds [bb31]
  succs [bb34, bb50]

bb34
  0: _27 = move (_55.0: usize)
    SourceInfo(regex-syntax/src/error.rs:233:17-233:25)
  1: _47 = const ()
    SourceInfo(regex-syntax/src/error.rs:231:51-234:14)
  2: StorageDead(_50)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  3: StorageDead(_48)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  4: StorageDead(_47)
    SourceInfo(regex-syntax/src/error.rs:234:13-234:14)
  5: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:231:13-234:14)
      kind: goto -> bb26
  }
  preds [bb33]
  succs [bb26]

bb35
  0: StorageDead(_58)
    SourceInfo(regex-syntax/src/error.rs:235:76-235:77)
  1: StorageDead(_57)
    SourceInfo(regex-syntax/src/error.rs:235:76-235:77)
  2: FakeRead(ForLet(None), _56)
    SourceInfo(regex-syntax/src/error.rs:235:17-235:25)
  3: StorageLive(_59)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  4: StorageLive(_60)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  5: StorageLive(_61)
    SourceInfo(regex-syntax/src/error.rs:236:25-236:52)
  6: StorageLive(_62)
    SourceInfo(regex-syntax/src/error.rs:236:43-236:51)
  7: _62 = _56
    SourceInfo(regex-syntax/src/error.rs:236:43-236:51)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:25-236:52)
      kind: _61 = core::cmp::max::<usize>(const 1_usize, move _62) -> [return: bb36, unwind: bb50]
  }
  preds [bb32]
  succs [bb36, bb50]

bb36
  0: StorageDead(_62)
    SourceInfo(regex-syntax/src/error.rs:236:51-236:52)
  1: _60 = core::ops::Range::<usize> { start: const 0_usize, end: move _61 }
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  2: StorageDead(_61)
    SourceInfo(regex-syntax/src/error.rs:236:51-236:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
      kind: _59 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _60) -> [return: bb37, unwind: bb50]
  }
  preds [bb35]
  succs [bb37, bb50]

bb37
  0: StorageDead(_60)
    SourceInfo(regex-syntax/src/error.rs:236:51-236:52)
  1: PlaceMention(_59)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  2: StorageLive(_63)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  3: _63 = move _59
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
      kind: goto -> bb38
  }
  preds [bb36]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
      kind: falseUnwind -> [real: bb39, unwind: bb50]
  }
  preds [bb37, bb46]
  succs [bb39, bb50]

bb39
  0: StorageLive(_64)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  1: StorageLive(_65)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  2: StorageLive(_66)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  3: StorageLive(_67)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  4: _67 = &mut _63
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  5: _66 = &mut (*_67)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
      kind: _65 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _66) -> [return: bb40, unwind: bb50]
  }
  preds [bb38]
  succs [bb40, bb50]

bb40
  0: StorageDead(_66)
    SourceInfo(regex-syntax/src/error.rs:236:51-236:52)
  1: PlaceMention(_65)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  2: _68 = discriminant(_65)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
      kind: switchInt(move _68) -> [0: bb42, 1: bb43, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb42, bb43]

bb41
  0: FakeRead(ForMatchedPlace(None), _65)
    SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:22-236:52)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb40]
  succs [bb43, bb44]

bb43
  0: StorageLive(_70)
    SourceInfo(regex-syntax/src/error.rs:237:17-237:32)
  1: StorageLive(_71)
    SourceInfo(regex-syntax/src/error.rs:237:17-237:22)
  2: _71 = &mut _11
    SourceInfo(regex-syntax/src/error.rs:237:17-237:22)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:237:17-237:32)
      kind: _70 = std::string::String::push(move _71, const '^') -> [return: bb45, unwind: bb50]
  }
  preds [bb40, bb42]
  succs [bb45, bb50]

bb44
  0: _32 = const ()
    SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
  1: StorageDead(_67)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  2: StorageDead(_65)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  3: StorageDead(_64)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  4: StorageDead(_63)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  5: StorageDead(_59)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  6: StorageDead(_56)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  7: StorageDead(_38)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  8: StorageDead(_35)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  9: StorageDead(_33)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  10: StorageDead(_32)
    SourceInfo(regex-syntax/src/error.rs:240:9-240:10)
  11: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:230:9-240:10)
      kind: goto -> bb17
  }
  preds [bb42]
  succs [bb17]

bb45
  0: StorageDead(_71)
    SourceInfo(regex-syntax/src/error.rs:237:31-237:32)
  1: StorageDead(_70)
    SourceInfo(regex-syntax/src/error.rs:237:32-237:33)
  2: _72 = AddWithOverflow(_27, const 1_usize)
    SourceInfo(regex-syntax/src/error.rs:238:17-238:25)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:238:17-238:25)
      kind: assert(!move (_72.1: bool), "attempt to compute `{} + {}`, which would overflow", _27, const 1_usize) -> [success: bb46, unwind: bb50]
  }
  preds [bb43]
  succs [bb46, bb50]

bb46
  0: _27 = move (_72.0: usize)
    SourceInfo(regex-syntax/src/error.rs:238:17-238:25)
  1: _64 = const ()
    SourceInfo(regex-syntax/src/error.rs:236:53-239:14)
  2: StorageDead(_67)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  3: StorageDead(_65)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  4: StorageDead(_64)
    SourceInfo(regex-syntax/src/error.rs:239:13-239:14)
  5: _18 = const ()
    SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:236:13-239:14)
      kind: goto -> bb38
  }
  preds [bb45]
  succs [bb38]

bb47
  0: StorageDead(_73)
    SourceInfo(regex-syntax/src/error.rs:241:19-241:20)
  1: StorageDead(_27)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
      kind: drop(_11) -> [return: bb48, unwind: bb51]
  }
  preds [bb23]
  succs [bb48, bb51]

bb48
  0: StorageDead(_11)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  1: StorageDead(_4)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  2: StorageDead(_3)
    SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:242:6-242:6)
      kind: goto -> bb49
  }
  preds [bb47]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:242:6-242:6)
      kind: return
  }
  preds [bb3, bb48]
  succs []

bb50
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:242:5-242:6)
      kind: drop(_11) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb8, bb9, bb13, bb14, bb17, bb18, bb22, bb23, bb24, bb26, bb27, bb31, bb32, bb33, bb35, bb36, bb38, bb39, bb43, bb45]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(regex-syntax/src/error.rs:220:5-242:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb47, bb50]
  succs []

