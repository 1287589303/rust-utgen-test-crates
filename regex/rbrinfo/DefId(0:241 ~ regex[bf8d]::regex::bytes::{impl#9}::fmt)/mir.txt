bb0
  0: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:1560:13-1560:20)
  1: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:1560:23-1560:24)
  2: _4 = &mut (*_2)
    SourceInfo(src/regex/bytes.rs:1560:23-1560:24)
  3: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:1560:38-1560:45)
  4: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:1560:38-1560:45)
  5: _6 = const "Match"
    SourceInfo(src/regex/bytes.rs:1560:38-1560:45)
  6: _5 = &(*_6)
    SourceInfo(src/regex/bytes.rs:1560:38-1560:45)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1560:23-1560:46)
      kind: _3 = core::fmt::Formatter::<'_>::debug_struct(move _4, move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:1560:45-1560:46)
  1: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:1560:45-1560:46)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/regex/bytes.rs:1560:13-1560:20)
  3: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:1560:46-1560:47)
  4: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:1561:9-1563:62)
  5: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:1561:9-1562:37)
  6: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:1561:9-1562:37)
  7: StorageLive(_10)
    SourceInfo(src/regex/bytes.rs:1561:9-1561:40)
  8: StorageLive(_11)
    SourceInfo(src/regex/bytes.rs:1561:9-1561:40)
  9: StorageLive(_12)
    SourceInfo(src/regex/bytes.rs:1561:9-1561:12)
  10: _12 = &mut _3
    SourceInfo(src/regex/bytes.rs:1561:9-1561:12)
  11: StorageLive(_13)
    SourceInfo(src/regex/bytes.rs:1561:19-1561:26)
  12: StorageLive(_14)
    SourceInfo(src/regex/bytes.rs:1561:19-1561:26)
  13: _14 = const "start"
    SourceInfo(src/regex/bytes.rs:1561:19-1561:26)
  14: _13 = &(*_14)
    SourceInfo(src/regex/bytes.rs:1561:19-1561:26)
  15: StorageLive(_15)
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  16: StorageLive(_16)
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  17: StorageLive(_17)
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  18: _17 = &((*_1).1: usize)
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  19: _16 = &(*_17)
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  20: _15 = move _16 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/regex/bytes.rs:1561:28-1561:39)
  21: StorageDead(_16)
    SourceInfo(src/regex/bytes.rs:1561:38-1561:39)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1561:9-1561:40)
      kind: _11 = core::fmt::DebugStruct::<'_, '_>::field(move _12, move _13, move _15) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: _10 = &mut (*_11)
    SourceInfo(src/regex/bytes.rs:1561:9-1561:40)
  1: StorageDead(_15)
    SourceInfo(src/regex/bytes.rs:1561:39-1561:40)
  2: StorageDead(_13)
    SourceInfo(src/regex/bytes.rs:1561:39-1561:40)
  3: StorageDead(_12)
    SourceInfo(src/regex/bytes.rs:1561:39-1561:40)
  4: StorageLive(_18)
    SourceInfo(src/regex/bytes.rs:1562:20-1562:25)
  5: StorageLive(_19)
    SourceInfo(src/regex/bytes.rs:1562:20-1562:25)
  6: _19 = const "end"
    SourceInfo(src/regex/bytes.rs:1562:20-1562:25)
  7: _18 = &(*_19)
    SourceInfo(src/regex/bytes.rs:1562:20-1562:25)
  8: StorageLive(_20)
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  9: StorageLive(_21)
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  10: StorageLive(_22)
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  11: _22 = &((*_1).2: usize)
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  12: _21 = &(*_22)
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  13: _20 = move _21 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/regex/bytes.rs:1562:27-1562:36)
  14: StorageDead(_21)
    SourceInfo(src/regex/bytes.rs:1562:35-1562:36)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1561:9-1562:37)
      kind: _9 = core::fmt::DebugStruct::<'_, '_>::field(move _10, move _18, move _20) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _8 = &mut (*_9)
    SourceInfo(src/regex/bytes.rs:1561:9-1562:37)
  1: StorageDead(_20)
    SourceInfo(src/regex/bytes.rs:1562:36-1562:37)
  2: StorageDead(_18)
    SourceInfo(src/regex/bytes.rs:1562:36-1562:37)
  3: StorageDead(_10)
    SourceInfo(src/regex/bytes.rs:1562:36-1562:37)
  4: StorageLive(_23)
    SourceInfo(src/regex/bytes.rs:1563:20-1563:27)
  5: StorageLive(_24)
    SourceInfo(src/regex/bytes.rs:1563:20-1563:27)
  6: _24 = const "bytes"
    SourceInfo(src/regex/bytes.rs:1563:20-1563:27)
  7: _23 = &(*_24)
    SourceInfo(src/regex/bytes.rs:1563:20-1563:27)
  8: StorageLive(_25)
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  9: StorageLive(_26)
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  10: StorageLive(_27)
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  11: StorageLive(_28)
    SourceInfo(src/regex/bytes.rs:1563:30-1563:61)
  12: StorageLive(_29)
    SourceInfo(src/regex/bytes.rs:1563:44-1563:60)
  13: StorageLive(_30)
    SourceInfo(src/regex/bytes.rs:1563:44-1563:60)
  14: StorageLive(_31)
    SourceInfo(src/regex/bytes.rs:1563:45-1563:60)
  15: StorageLive(_32)
    SourceInfo(src/regex/bytes.rs:1563:45-1563:49)
  16: _32 = &(*_1)
    SourceInfo(src/regex/bytes.rs:1563:45-1563:49)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1563:45-1563:60)
      kind: _31 = regex::bytes::Match::<'_>::as_bytes(move _32) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_32)
    SourceInfo(src/regex/bytes.rs:1563:59-1563:60)
  1: _30 = &_31
    SourceInfo(src/regex/bytes.rs:1563:44-1563:60)
  2: _29 = &(*(*_30))
    SourceInfo(src/regex/bytes.rs:1563:44-1563:60)
  3: _28 = regex_automata::util::escape::DebugHaystack::<'_>(move _29)
    SourceInfo(src/regex/bytes.rs:1563:30-1563:61)
  4: StorageDead(_29)
    SourceInfo(src/regex/bytes.rs:1563:60-1563:61)
  5: _27 = &_28
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  6: _26 = &(*_27)
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  7: _25 = move _26 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(src/regex/bytes.rs:1563:29-1563:61)
  8: StorageDead(_26)
    SourceInfo(src/regex/bytes.rs:1563:60-1563:61)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1561:9-1563:62)
      kind: _7 = core::fmt::DebugStruct::<'_, '_>::field(move _8, move _23, move _25) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_25)
    SourceInfo(src/regex/bytes.rs:1563:61-1563:62)
  1: StorageDead(_23)
    SourceInfo(src/regex/bytes.rs:1563:61-1563:62)
  2: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:1563:61-1563:62)
  3: StorageDead(_31)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  4: StorageDead(_30)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  5: StorageDead(_28)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  6: StorageDead(_27)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  7: StorageDead(_24)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  8: StorageDead(_22)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  9: StorageDead(_19)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  10: StorageDead(_17)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  11: StorageDead(_14)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  12: StorageDead(_11)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  13: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  14: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:1563:62-1563:63)
  15: StorageLive(_33)
    SourceInfo(src/regex/bytes.rs:1565:9-1565:12)
  16: _33 = &mut _3
    SourceInfo(src/regex/bytes.rs:1565:9-1565:12)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1565:9-1565:21)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _33) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_33)
    SourceInfo(src/regex/bytes.rs:1565:20-1565:21)
  1: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:1566:5-1566:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1566:6-1566:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1557:5-1566:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

