bb0
  0: StorageLive(_2)
    SourceInfo(src/regexset/string.rs:676:9-681:10)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:676:9-681:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:676:9-681:10)
      kind: falseUnwind -> [real: bb2, unwind: bb15]
  }
  preds [bb0, bb13]
  succs [bb2, bb15]

bb2
  0: StorageLive(_4)
    SourceInfo(src/regexset/string.rs:677:17-677:19)
  1: StorageLive(_5)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  2: StorageLive(_6)
    SourceInfo(src/regexset/string.rs:677:22-677:41)
  3: StorageLive(_7)
    SourceInfo(src/regexset/string.rs:677:22-677:29)
  4: _7 = &mut ((*_1).1: core::ops::Range<usize>)
    SourceInfo(src/regexset/string.rs:677:22-677:29)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:22-677:41)
      kind: _6 = <core::ops::Range<usize> as core::iter::DoubleEndedIterator>::next_back(move _7) -> [return: bb3, unwind: bb15]
  }
  preds [bb1]
  succs [bb3, bb15]

bb3
  0: StorageDead(_7)
    SourceInfo(src/regexset/string.rs:677:40-677:41)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:22-677:42)
      kind: _5 = <core::option::Option<usize> as core::ops::Try>::branch(move _6) -> [return: bb4, unwind: bb15]
  }
  preds [bb2]
  succs [bb4, bb15]

bb4
  0: StorageDead(_6)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  1: PlaceMention(_5)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  2: _8 = discriminant(_5)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:22-677:42)
      kind: switchInt(move _8) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:22-677:42)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:41-677:42)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_12)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  1: _12 = ((_5 as Continue).0: usize)
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  2: _4 = _12
    SourceInfo(src/regexset/string.rs:677:22-677:42)
  3: StorageDead(_12)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(src/regexset/string.rs:677:17-677:19)
  5: StorageDead(_5)
    SourceInfo(src/regexset/string.rs:677:42-677:43)
  6: StorageLive(_13)
    SourceInfo(src/regexset/string.rs:678:16-678:66)
  7: StorageLive(_14)
    SourceInfo(src/regexset/string.rs:678:16-678:27)
  8: _14 = &((*_1).0: regex_automata::PatternSet)
    SourceInfo(src/regexset/string.rs:678:16-678:27)
  9: StorageLive(_15)
    SourceInfo(src/regexset/string.rs:678:37-678:65)
  10: StorageLive(_16)
    SourceInfo(src/regexset/string.rs:678:62-678:64)
  11: _16 = _4
    SourceInfo(src/regexset/string.rs:678:62-678:64)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:678:37-678:65)
      kind: _15 = regex_automata::PatternID::new_unchecked(move _16) -> [return: bb10, unwind: bb15]
  }
  preds [bb4, bb6]
  succs [bb10, bb15]

bb8
  0: StorageLive(_9)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  1: _9 = ((_5 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  2: StorageLive(_11)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  3: _11 = _9
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:677:22-677:42)
      kind: _0 = <core::option::Option<usize> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _11) -> [return: bb9, unwind: bb15]
  }
  preds [bb6]
  succs [bb9, bb15]

bb9
  0: StorageDead(_11)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  1: StorageDead(_9)
    SourceInfo(src/regexset/string.rs:677:41-677:42)
  2: StorageDead(_5)
    SourceInfo(src/regexset/string.rs:677:42-677:43)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb14
  }
  preds [bb8]
  succs [bb14]

bb10
  0: StorageDead(_16)
    SourceInfo(src/regexset/string.rs:678:64-678:65)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:678:16-678:66)
      kind: _13 = regex_automata::PatternSet::contains(move _14, move _15) -> [return: bb11, unwind: bb15]
  }
  preds [bb7]
  succs [bb11, bb15]

bb11
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:678:16-678:66)
      kind: switchInt(move _13) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_15)
    SourceInfo(src/regexset/string.rs:678:65-678:66)
  1: StorageDead(_14)
    SourceInfo(src/regexset/string.rs:678:65-678:66)
  2: StorageLive(_18)
    SourceInfo(src/regexset/string.rs:679:29-679:31)
  3: _18 = _4
    SourceInfo(src/regexset/string.rs:679:29-679:31)
  4: _0 = core::option::Option::<usize>::Some(move _18)
    SourceInfo(src/regexset/string.rs:679:24-679:32)
  5: StorageDead(_18)
    SourceInfo(src/regexset/string.rs:679:31-679:32)
  6: StorageDead(_13)
    SourceInfo(src/regexset/string.rs:680:13-680:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: StorageDead(_15)
    SourceInfo(src/regexset/string.rs:678:65-678:66)
  1: StorageDead(_14)
    SourceInfo(src/regexset/string.rs:678:65-678:66)
  2: _3 = const ()
    SourceInfo(src/regexset/string.rs:680:14-680:14)
  3: StorageDead(_13)
    SourceInfo(src/regexset/string.rs:680:13-680:14)
  4: StorageDead(_4)
    SourceInfo(src/regexset/string.rs:681:9-681:10)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:676:9-681:10)
      kind: goto -> bb1
  }
  preds [bb11]
  succs [bb1]

bb14
  0: StorageDead(_4)
    SourceInfo(src/regexset/string.rs:681:9-681:10)
  1: StorageDead(_2)
    SourceInfo(src/regexset/string.rs:681:9-681:10)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:682:6-682:6)
      kind: return
  }
  preds [bb9, bb12]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:675:5-682:6)
      kind: resume
  }
  preds [bb1, bb2, bb3, bb7, bb8, bb10]
  succs []

