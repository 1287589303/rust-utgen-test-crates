bb0
  0: StorageLive(_3)
    SourceInfo(src/builders.rs:140:9-140:13)
  1: StorageLive(_4)
    SourceInfo(src/builders.rs:139:24-139:58)
  2: StorageLive(_5)
    SourceInfo(src/builders.rs:139:24-139:36)
  3: _5 = ((*_1).2: regex_automata::util::syntax::Config)
    SourceInfo(src/builders.rs:139:24-139:36)
  4: StorageLive(_6)
    SourceInfo(src/builders.rs:139:54-139:57)
  5: _6 = _2
    SourceInfo(src/builders.rs:139:54-139:57)
  Terminator {
      source_info: SourceInfo(src/builders.rs:139:24-139:58)
      kind: _4 = regex_automata::util::syntax::Config::case_insensitive(move _5, move _6) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(src/builders.rs:139:57-139:58)
  1: StorageDead(_5)
    SourceInfo(src/builders.rs:139:57-139:58)
  2: ((*_1).2: regex_automata::util::syntax::Config) = move _4
    SourceInfo(src/builders.rs:139:9-139:58)
  3: StorageDead(_4)
    SourceInfo(src/builders.rs:139:57-139:58)
  4: _3 = &mut (*_1)
    SourceInfo(src/builders.rs:140:9-140:13)
  5: _0 = &mut (*_3)
    SourceInfo(src/builders.rs:140:9-140:13)
  6: StorageDead(_3)
    SourceInfo(src/builders.rs:141:5-141:6)
  Terminator {
      source_info: SourceInfo(src/builders.rs:141:6-141:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/builders.rs:138:5-141:6)
      kind: resume
  }
  preds [bb0]
  succs []

