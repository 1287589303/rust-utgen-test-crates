bb0
  0: StorageLive(_1)
    SourceInfo(src/regexset/bytes.rs:184:13-184:18)
  1: _1 = []
    SourceInfo(src/regexset/bytes.rs:184:32-184:34)
  2: FakeRead(ForLet(None), _1)
    SourceInfo(src/regexset/bytes.rs:184:13-184:18)
  3: AscribeUserType(_1, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/regexset/bytes.rs:184:20-184:29)
  4: StorageLive(_2)
    SourceInfo(src/regexset/bytes.rs:185:9-185:44)
  5: StorageLive(_3)
    SourceInfo(src/regexset/bytes.rs:185:9-185:36)
  6: StorageLive(_4)
    SourceInfo(src/regexset/bytes.rs:185:9-185:36)
  7: StorageLive(_5)
    SourceInfo(src/regexset/bytes.rs:185:30-185:35)
  8: _5 = _1
    SourceInfo(src/regexset/bytes.rs:185:30-185:35)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:185:9-185:36)
      kind: _4 = builders::bytes::RegexSetBuilder::new::<[&str; 0], &str>(move _5) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _3 = &_4
    SourceInfo(src/regexset/bytes.rs:185:9-185:36)
  1: StorageDead(_5)
    SourceInfo(src/regexset/bytes.rs:185:35-185:36)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:185:9-185:44)
      kind: _2 = builders::bytes::RegexSetBuilder::build(move _3) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_3)
    SourceInfo(src/regexset/bytes.rs:185:43-185:44)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:185:9-185:53)
      kind: _0 = core::result::Result::<regexset::bytes::RegexSet, error::Error>::unwrap(move _2) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_2)
    SourceInfo(src/regexset/bytes.rs:185:52-185:53)
  1: StorageDead(_1)
    SourceInfo(src/regexset/bytes.rs:186:5-186:6)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:186:5-186:6)
      kind: drop(_4) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_4)
    SourceInfo(src/regexset/bytes.rs:186:5-186:6)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:186:6-186:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:185:52-185:53)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:186:5-186:6)
      kind: drop(_4) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1, bb5]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:183:5-186:6)
      kind: resume
  }
  preds [bb0, bb3, bb6]
  succs []

