Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).1),
            pat: Pat {
                hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).2),
                    self#0,
                    None,
                ),
                span: src/error.rs:60:20: 60:25 (#0),
                default_binding_modes: true,
            },
            ty_span: src/error.rs:60:20: 60:25 (#0),
            span: src/error.rs:60:20: 60:25 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).21),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).3),
                        kind: Match(
                            Expr {
                                hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).4),
                                kind: Unary(
                                    Deref,
                                    Expr {
                                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).5),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/error.rs:61:16: 61:20 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).2),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: self#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).6),
                                                            res: Local(
                                                                HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).2),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: src/error.rs:61:16: 61:20 (#0),
                                    },
                                ),
                                span: src/error.rs:61:15: 61:20 (#0),
                            },
                            [
                                Arm {
                                    hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).11),
                                    span: src/error.rs:62:13: 62:42 (#0),
                                    pat: Pat {
                                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).10),
                                        kind: TupleStruct(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/error.rs:62:13: 62:26 (#0),
                                                    res: Def(
                                                        Ctor(
                                                            Variant,
                                                            Fn,
                                                        ),
                                                        DefId(0:852 ~ regex[bf8d]::error::Error::Syntax::{constructor#0}),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: Error#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).7),
                                                            res: Def(
                                                                Enum,
                                                                DefId(0:850 ~ regex[bf8d]::error::Error),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                        PathSegment {
                                                            ident: Syntax#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).8),
                                                            res: Def(
                                                                Ctor(
                                                                    Variant,
                                                                    Fn,
                                                                ),
                                                                DefId(0:852 ~ regex[bf8d]::error::Error::Syntax::{constructor#0}),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                            [
                                                Pat {
                                                    hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).9),
                                                    kind: Binding(
                                                        BindingMode(
                                                            Yes(
                                                                Not,
                                                            ),
                                                            Not,
                                                        ),
                                                        HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).9),
                                                        err#0,
                                                        None,
                                                    ),
                                                    span: src/error.rs:62:27: 62:34 (#0),
                                                    default_binding_modes: true,
                                                },
                                            ],
                                            None,
                                        ),
                                        span: src/error.rs:62:13: 62:35 (#0),
                                        default_binding_modes: true,
                                    },
                                    guard: None,
                                    body: Expr {
                                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).12),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/error.rs:62:39: 62:42 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).9),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: err#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).13),
                                                            res: Local(
                                                                HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).9),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: src/error.rs:62:39: 62:42 (#0),
                                    },
                                },
                                Arm {
                                    hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).18),
                                    span: src/error.rs:63:13: 63:67 (#0),
                                    pat: Pat {
                                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).17),
                                        kind: TupleStruct(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: src/error.rs:63:13: 63:34 (#0),
                                                    res: Def(
                                                        Ctor(
                                                            Variant,
                                                            Fn,
                                                        ),
                                                        DefId(0:855 ~ regex[bf8d]::error::Error::CompiledTooBig::{constructor#0}),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: Error#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).14),
                                                            res: Def(
                                                                Enum,
                                                                DefId(0:850 ~ regex[bf8d]::error::Error),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                        PathSegment {
                                                            ident: CompiledTooBig#0,
                                                            hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).15),
                                                            res: Def(
                                                                Ctor(
                                                                    Variant,
                                                                    Fn,
                                                                ),
                                                                DefId(0:855 ~ regex[bf8d]::error::Error::CompiledTooBig::{constructor#0}),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                            [
                                                Pat {
                                                    hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).16),
                                                    kind: Wild,
                                                    span: src/error.rs:63:35: 63:36 (#0),
                                                    default_binding_modes: true,
                                                },
                                            ],
                                            None,
                                        ),
                                        span: src/error.rs:63:13: 63:37 (#0),
                                        default_binding_modes: true,
                                    },
                                    guard: None,
                                    body: Expr {
                                        hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).19),
                                        kind: Lit(
                                            Spanned {
                                                node: Str(
                                                    "compiled program too big",
                                                    Cooked,
                                                ),
                                                span: src/error.rs:63:41: 63:67 (#0),
                                            },
                                        ),
                                        span: src/error.rs:63:41: 63:67 (#0),
                                    },
                                },
                            ],
                            Normal,
                        ),
                        span: src/error.rs:61:9: 64:10 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:142 ~ regex[bf8d]::error::{impl#1}::description).20),
                rules: DefaultBlock,
                span: src/error.rs:60:35: 65:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/error.rs:60:35: 65:6 (#0),
    },
}