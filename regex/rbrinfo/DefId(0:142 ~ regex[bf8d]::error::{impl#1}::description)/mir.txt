bb0
  0: PlaceMention((*_1))
    SourceInfo(src/error.rs:61:15-61:20)
  1: _2 = discriminant((*_1))
    SourceInfo(src/error.rs:61:15-61:20)
  Terminator {
      source_info: SourceInfo(src/error.rs:61:9-61:20)
      kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: FakeRead(ForMatchedPlace(None), (*_1))
    SourceInfo(src/error.rs:61:15-61:20)
  Terminator {
      source_info: SourceInfo(src/error.rs:61:15-61:20)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/error.rs:62:13-62:35)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  0: StorageLive(_6)
    SourceInfo(src/error.rs:63:41-63:67)
  1: _6 = const "compiled program too big"
    SourceInfo(src/error.rs:63:41-63:67)
  2: _0 = &(*_6)
    SourceInfo(src/error.rs:63:41-63:67)
  3: StorageDead(_6)
    SourceInfo(src/error.rs:63:66-63:67)
  Terminator {
      source_info: SourceInfo(src/error.rs:63:66-63:67)
      kind: goto -> bb6
  }
  preds [bb0, bb2]
  succs [bb6]

bb4
  0: StorageLive(_3)
    SourceInfo(src/error.rs:62:27-62:34)
  1: _3 = &(((*_1) as Syntax).0: alloc::string::String)
    SourceInfo(src/error.rs:62:27-62:34)
  2: StorageLive(_4)
    SourceInfo(src/error.rs:62:39-62:42)
  3: StorageLive(_5)
    SourceInfo(src/error.rs:62:39-62:42)
  4: _5 = &(*_3)
    SourceInfo(src/error.rs:62:39-62:42)
  Terminator {
      source_info: SourceInfo(src/error.rs:62:39-62:42)
      kind: _4 = <alloc::string::String as core::ops::Deref>::deref(move _5) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: _0 = &(*_4)
    SourceInfo(src/error.rs:62:39-62:42)
  1: StorageDead(_5)
    SourceInfo(src/error.rs:62:41-62:42)
  2: StorageDead(_4)
    SourceInfo(src/error.rs:62:41-62:42)
  3: StorageDead(_3)
    SourceInfo(src/error.rs:62:41-62:42)
  Terminator {
      source_info: SourceInfo(src/error.rs:62:41-62:42)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/error.rs:65:6-65:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/error.rs:60:5-65:6)
      kind: resume
  }
  preds [bb4]
  succs []

