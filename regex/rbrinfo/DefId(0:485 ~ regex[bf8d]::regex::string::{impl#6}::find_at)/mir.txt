bb0
  0: StorageLive(_4)
    SourceInfo(src/regex/string.rs:1110:13-1110:18)
  1: StorageLive(_5)
    SourceInfo(src/regex/string.rs:1110:21-1110:41)
  2: StorageLive(_6)
    SourceInfo(src/regex/string.rs:1110:32-1110:40)
  3: _6 = &(*_2)
    SourceInfo(src/regex/string.rs:1110:32-1110:40)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1110:21-1110:41)
      kind: _5 = regex_automata::Input::<'_>::new::<str>(move _6) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_6)
    SourceInfo(src/regex/string.rs:1110:40-1110:41)
  1: StorageLive(_7)
    SourceInfo(src/regex/string.rs:1110:47-1110:68)
  2: StorageLive(_8)
    SourceInfo(src/regex/string.rs:1110:47-1110:52)
  3: _8 = _3
    SourceInfo(src/regex/string.rs:1110:47-1110:52)
  4: StorageLive(_9)
    SourceInfo(src/regex/string.rs:1110:54-1110:68)
  5: StorageLive(_10)
    SourceInfo(src/regex/string.rs:1110:54-1110:62)
  6: _10 = &(*_2)
    SourceInfo(src/regex/string.rs:1110:54-1110:62)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1110:54-1110:68)
      kind: _9 = core::str::<impl str>::len(move _10) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_10)
    SourceInfo(src/regex/string.rs:1110:67-1110:68)
  1: _7 = core::ops::Range::<usize> { start: move _8, end: move _9 }
    SourceInfo(src/regex/string.rs:1110:47-1110:68)
  2: StorageDead(_9)
    SourceInfo(src/regex/string.rs:1110:67-1110:68)
  3: StorageDead(_8)
    SourceInfo(src/regex/string.rs:1110:67-1110:68)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1110:21-1110:69)
      kind: _4 = regex_automata::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _7) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_7)
    SourceInfo(src/regex/string.rs:1110:68-1110:69)
  1: StorageDead(_5)
    SourceInfo(src/regex/string.rs:1110:68-1110:69)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/regex/string.rs:1110:13-1110:18)
  3: StorageLive(_11)
    SourceInfo(src/regex/string.rs:1111:9-1112:28)
  4: StorageLive(_12)
    SourceInfo(src/regex/string.rs:1111:9-1111:18)
  5: _12 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/string.rs:1111:9-1111:18)
  6: StorageLive(_13)
    SourceInfo(src/regex/string.rs:1112:21-1112:27)
  7: StorageLive(_14)
    SourceInfo(src/regex/string.rs:1112:21-1112:27)
  8: _14 = &_4
    SourceInfo(src/regex/string.rs:1112:21-1112:27)
  9: _13 = &(*_14)
    SourceInfo(src/regex/string.rs:1112:21-1112:27)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1111:9-1112:28)
      kind: _11 = regex_automata::meta::Regex::search(move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(src/regex/string.rs:1112:27-1112:28)
  1: StorageDead(_12)
    SourceInfo(src/regex/string.rs:1112:27-1112:28)
  2: StorageLive(_15)
    SourceInfo(src/regex/string.rs:1113:18-1113:62)
  3: StorageLive(_16)
    SourceInfo(src/regex/string.rs:1113:18-1113:62)
  4: _16 = &(*_2)
    SourceInfo(src/regex/string.rs:1113:18-1113:62)
  5: _15 = {closure@src/regex/string.rs:1113:18: 1113:21} { haystack: move _16 }
    SourceInfo(src/regex/string.rs:1113:18-1113:62)
  6: StorageDead(_16)
    SourceInfo(src/regex/string.rs:1113:20-1113:21)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1111:9-1113:63)
      kind: _0 = core::option::Option::<regex_automata::Match>::map::<regex::string::Match<'_>, {closure@src/regex/string.rs:1113:18: 1113:21}>(move _11, move _15) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_15)
    SourceInfo(src/regex/string.rs:1113:62-1113:63)
  1: StorageDead(_11)
    SourceInfo(src/regex/string.rs:1113:62-1113:63)
  2: StorageDead(_4)
    SourceInfo(src/regex/string.rs:1114:5-1114:6)
  3: StorageDead(_14)
    SourceInfo(src/regex/string.rs:1114:5-1114:6)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1114:6-1114:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1105:5-1114:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

