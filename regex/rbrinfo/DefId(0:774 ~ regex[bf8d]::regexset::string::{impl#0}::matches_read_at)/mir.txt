bb0
  0: StorageLive(_5)
    SourceInfo(src/regexset/string.rs:359:13-359:23)
  1: StorageLive(_6)
    SourceInfo(src/regexset/string.rs:359:42-359:65)
  2: StorageLive(_7)
    SourceInfo(src/regexset/string.rs:359:42-359:51)
  3: _7 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regexset/string.rs:359:42-359:51)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:359:42-359:65)
      kind: _6 = regex_automata::meta::Regex::pattern_len(move _7) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_7)
    SourceInfo(src/regexset/string.rs:359:64-359:65)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:359:26-359:66)
      kind: _5 = regex_automata::PatternSet::new(move _6) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_6)
    SourceInfo(src/regexset/string.rs:359:65-359:66)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/regexset/string.rs:359:13-359:23)
  2: StorageLive(_8)
    SourceInfo(src/regexset/string.rs:360:13-360:22)
  3: StorageLive(_9)
    SourceInfo(src/regexset/string.rs:360:36-360:44)
  4: _9 = &(*_3)
    SourceInfo(src/regexset/string.rs:360:36-360:44)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:360:25-360:45)
      kind: _8 = regex_automata::Input::<'_>::new::<str>(move _9) -> [return: bb3, unwind: bb18]
  }
  preds [bb1]
  succs [bb3, bb18]

bb3
  0: StorageDead(_9)
    SourceInfo(src/regexset/string.rs:360:44-360:45)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(src/regexset/string.rs:360:13-360:22)
  2: StorageLive(_10)
    SourceInfo(src/regexset/string.rs:361:9-361:31)
  3: StorageLive(_11)
    SourceInfo(src/regexset/string.rs:361:9-361:14)
  4: _11 = &mut _8
    SourceInfo(src/regexset/string.rs:361:9-361:14)
  5: StorageLive(_12)
    SourceInfo(src/regexset/string.rs:361:25-361:30)
  6: _12 = _4
    SourceInfo(src/regexset/string.rs:361:25-361:30)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:361:9-361:31)
      kind: _10 = regex_automata::Input::<'_>::set_start(move _11, move _12) -> [return: bb4, unwind: bb18]
  }
  preds [bb2]
  succs [bb4, bb18]

bb4
  0: StorageDead(_12)
    SourceInfo(src/regexset/string.rs:361:30-361:31)
  1: StorageDead(_11)
    SourceInfo(src/regexset/string.rs:361:30-361:31)
  2: StorageDead(_10)
    SourceInfo(src/regexset/string.rs:361:31-361:32)
  3: StorageLive(_13)
    SourceInfo(src/regexset/string.rs:362:9-362:65)
  4: StorageLive(_14)
    SourceInfo(src/regexset/string.rs:362:9-362:18)
  5: _14 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regexset/string.rs:362:9-362:18)
  6: StorageLive(_15)
    SourceInfo(src/regexset/string.rs:362:45-362:51)
  7: StorageLive(_16)
    SourceInfo(src/regexset/string.rs:362:45-362:51)
  8: _16 = &_8
    SourceInfo(src/regexset/string.rs:362:45-362:51)
  9: _15 = &(*_16)
    SourceInfo(src/regexset/string.rs:362:45-362:51)
  10: StorageLive(_17)
    SourceInfo(src/regexset/string.rs:362:53-362:64)
  11: StorageLive(_18)
    SourceInfo(src/regexset/string.rs:362:53-362:64)
  12: _18 = &mut _5
    SourceInfo(src/regexset/string.rs:362:53-362:64)
  13: _17 = &mut (*_18)
    SourceInfo(src/regexset/string.rs:362:53-362:64)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:362:9-362:65)
      kind: _13 = regex_automata::meta::Regex::which_overlapping_matches(move _14, move _15, move _17) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: StorageDead(_17)
    SourceInfo(src/regexset/string.rs:362:64-362:65)
  1: StorageDead(_15)
    SourceInfo(src/regexset/string.rs:362:64-362:65)
  2: StorageDead(_14)
    SourceInfo(src/regexset/string.rs:362:64-362:65)
  3: StorageDead(_18)
    SourceInfo(src/regexset/string.rs:362:65-362:66)
  4: StorageDead(_16)
    SourceInfo(src/regexset/string.rs:362:65-362:66)
  5: StorageDead(_13)
    SourceInfo(src/regexset/string.rs:362:65-362:66)
  6: StorageLive(_19)
    SourceInfo(src/regexset/string.rs:363:9-365:10)
  7: StorageLive(_20)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  8: StorageLive(_21)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  9: StorageLive(_22)
    SourceInfo(src/regexset/string.rs:363:20-363:26)
  10: _22 = &_5
    SourceInfo(src/regexset/string.rs:363:20-363:26)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:20-363:33)
      kind: _21 = regex_automata::PatternSet::iter(move _22) -> [return: bb6, unwind: bb18]
  }
  preds [bb4]
  succs [bb6, bb18]

bb6
  0: StorageDead(_22)
    SourceInfo(src/regexset/string.rs:363:32-363:33)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:20-363:33)
      kind: _20 = <regex_automata::PatternSetIter<'_> as core::iter::IntoIterator>::into_iter(move _21) -> [return: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: StorageDead(_21)
    SourceInfo(src/regexset/string.rs:363:32-363:33)
  1: PlaceMention(_20)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  2: StorageLive(_23)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  3: _23 = move _20
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:9-365:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:9-365:10)
      kind: falseUnwind -> [real: bb9, unwind: bb18]
  }
  preds [bb7, bb15]
  succs [bb9, bb18]

bb9
  0: StorageLive(_25)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  1: StorageLive(_26)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  2: StorageLive(_27)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  3: StorageLive(_28)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  4: _28 = &mut _23
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  5: _27 = &mut (*_28)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:20-363:33)
      kind: _26 = <regex_automata::PatternSetIter<'_> as core::iter::Iterator>::next(move _27) -> [return: bb10, unwind: bb18]
  }
  preds [bb8]
  succs [bb10, bb18]

bb10
  0: StorageDead(_27)
    SourceInfo(src/regexset/string.rs:363:32-363:33)
  1: PlaceMention(_26)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  2: _29 = discriminant(_26)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:20-363:33)
      kind: switchInt(move _29) -> [0: bb12, 1: bb13, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13]

bb11
  0: FakeRead(ForMatchedPlace(None), _26)
    SourceInfo(src/regexset/string.rs:363:20-363:33)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:20-363:33)
      kind: unreachable
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:9-365:10)
      kind: falseEdge -> [real: bb14, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageLive(_31)
    SourceInfo(src/regexset/string.rs:363:13-363:16)
  1: _31 = ((_26 as Some).0: regex_automata::PatternID)
    SourceInfo(src/regexset/string.rs:363:13-363:16)
  2: StorageLive(_32)
    SourceInfo(src/regexset/string.rs:364:20-364:25)
  3: StorageLive(_33)
    SourceInfo(src/regexset/string.rs:364:13-364:20)
  4: _33 = &mut (*_2)
    SourceInfo(src/regexset/string.rs:364:13-364:20)
  5: StorageLive(_34)
    SourceInfo(src/regexset/string.rs:364:21-364:24)
  6: _34 = _31
    SourceInfo(src/regexset/string.rs:364:21-364:24)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:364:20-364:25)
      kind: _32 = <[bool] as core::ops::IndexMut<regex_automata::PatternID>>::index_mut(move _33, move _34) -> [return: bb15, unwind: bb18]
  }
  preds [bb10, bb12]
  succs [bb15, bb18]

bb14
  0: _19 = const ()
    SourceInfo(src/regexset/string.rs:363:9-365:10)
  1: StorageDead(_28)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  2: StorageDead(_26)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  3: StorageDead(_25)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  4: StorageDead(_23)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  5: StorageDead(_20)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  6: StorageDead(_19)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  7: StorageLive(_35)
    SourceInfo(src/regexset/string.rs:366:10-366:27)
  8: StorageLive(_36)
    SourceInfo(src/regexset/string.rs:366:10-366:16)
  9: _36 = &_5
    SourceInfo(src/regexset/string.rs:366:10-366:16)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:366:10-366:27)
      kind: _35 = regex_automata::PatternSet::is_empty(move _36) -> [return: bb16, unwind: bb18]
  }
  preds [bb12]
  succs [bb16, bb18]

bb15
  0: StorageDead(_34)
    SourceInfo(src/regexset/string.rs:364:24-364:25)
  1: StorageDead(_33)
    SourceInfo(src/regexset/string.rs:364:24-364:25)
  2: (*_32) = const true
    SourceInfo(src/regexset/string.rs:364:13-364:32)
  3: StorageDead(_32)
    SourceInfo(src/regexset/string.rs:364:32-364:33)
  4: _25 = const ()
    SourceInfo(src/regexset/string.rs:363:34-365:10)
  5: StorageDead(_31)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  6: StorageDead(_28)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  7: StorageDead(_26)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  8: StorageDead(_25)
    SourceInfo(src/regexset/string.rs:365:9-365:10)
  9: _24 = const ()
    SourceInfo(src/regexset/string.rs:363:9-365:10)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:363:9-365:10)
      kind: goto -> bb8
  }
  preds [bb13]
  succs [bb8]

bb16
  0: StorageDead(_36)
    SourceInfo(src/regexset/string.rs:366:26-366:27)
  1: _0 = Not(move _35)
    SourceInfo(src/regexset/string.rs:366:9-366:27)
  2: StorageDead(_35)
    SourceInfo(src/regexset/string.rs:366:26-366:27)
  3: StorageDead(_8)
    SourceInfo(src/regexset/string.rs:367:5-367:6)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:367:5-367:6)
      kind: drop(_5) -> [return: bb17, unwind: bb19]
  }
  preds [bb14]
  succs [bb17, bb19]

bb17
  0: StorageDead(_5)
    SourceInfo(src/regexset/string.rs:367:5-367:6)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:367:6-367:6)
      kind: return
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:367:5-367:6)
      kind: drop(_5) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb4, bb5, bb6, bb8, bb9, bb13, bb14]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:346:5-367:6)
      kind: resume
  }
  preds [bb0, bb1, bb16, bb18]
  succs []

