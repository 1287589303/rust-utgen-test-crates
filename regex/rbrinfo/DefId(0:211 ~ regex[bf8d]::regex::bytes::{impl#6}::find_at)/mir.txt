bb0
  0: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:1121:13-1121:18)
  1: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:1121:21-1121:41)
  2: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:1121:32-1121:40)
  3: _6 = &(*_2)
    SourceInfo(src/regex/bytes.rs:1121:32-1121:40)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1121:21-1121:41)
      kind: _5 = regex_automata::Input::<'_>::new::<[u8]>(move _6) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:1121:40-1121:41)
  1: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:1121:47-1121:68)
  2: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:1121:47-1121:52)
  3: _8 = _3
    SourceInfo(src/regex/bytes.rs:1121:47-1121:52)
  4: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:1121:54-1121:68)
  5: StorageLive(_10)
    SourceInfo(src/regex/bytes.rs:1121:54-1121:62)
  6: _10 = &(*_2)
    SourceInfo(src/regex/bytes.rs:1121:54-1121:62)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1121:54-1121:68)
      kind: _9 = core::slice::<impl [u8]>::len(move _10) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_10)
    SourceInfo(src/regex/bytes.rs:1121:67-1121:68)
  1: _7 = core::ops::Range::<usize> { start: move _8, end: move _9 }
    SourceInfo(src/regex/bytes.rs:1121:47-1121:68)
  2: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:1121:67-1121:68)
  3: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:1121:67-1121:68)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1121:21-1121:69)
      kind: _4 = regex_automata::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _7) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:1121:68-1121:69)
  1: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:1121:68-1121:69)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/regex/bytes.rs:1121:13-1121:18)
  3: StorageLive(_11)
    SourceInfo(src/regex/bytes.rs:1122:9-1122:30)
  4: StorageLive(_12)
    SourceInfo(src/regex/bytes.rs:1122:9-1122:18)
  5: _12 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/bytes.rs:1122:9-1122:18)
  6: StorageLive(_13)
    SourceInfo(src/regex/bytes.rs:1122:24-1122:29)
  7: _13 = move _4
    SourceInfo(src/regex/bytes.rs:1122:24-1122:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1122:9-1122:30)
      kind: _11 = regex_automata::meta::Regex::find::<'_, regex_automata::Input<'_>>(move _12, move _13) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_13)
    SourceInfo(src/regex/bytes.rs:1122:29-1122:30)
  1: StorageDead(_12)
    SourceInfo(src/regex/bytes.rs:1122:29-1122:30)
  2: StorageLive(_14)
    SourceInfo(src/regex/bytes.rs:1122:35-1122:79)
  3: StorageLive(_15)
    SourceInfo(src/regex/bytes.rs:1122:35-1122:79)
  4: _15 = &(*_2)
    SourceInfo(src/regex/bytes.rs:1122:35-1122:79)
  5: _14 = {closure@src/regex/bytes.rs:1122:35: 1122:38} { haystack: move _15 }
    SourceInfo(src/regex/bytes.rs:1122:35-1122:79)
  6: StorageDead(_15)
    SourceInfo(src/regex/bytes.rs:1122:37-1122:38)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1122:9-1122:80)
      kind: _0 = core::option::Option::<regex_automata::Match>::map::<regex::bytes::Match<'_>, {closure@src/regex/bytes.rs:1122:35: 1122:38}>(move _11, move _14) -> [return: bb5, unwind: bb6]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_14)
    SourceInfo(src/regex/bytes.rs:1122:79-1122:80)
  1: StorageDead(_11)
    SourceInfo(src/regex/bytes.rs:1122:79-1122:80)
  2: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:1123:5-1123:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1123:6-1123:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1116:5-1123:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4]
  succs []

