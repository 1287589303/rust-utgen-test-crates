bb0
  0: StorageLive(_2)
    SourceInfo(src/regexset/string.rs:610:13-610:15)
  1: StorageLive(_3)
    SourceInfo(src/regexset/string.rs:610:21-610:38)
  2: StorageLive(_4)
    SourceInfo(src/regexset/string.rs:610:21-610:27)
  3: _4 = &(_1.0: regex_automata::PatternSet)
    SourceInfo(src/regexset/string.rs:610:21-610:27)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:610:21-610:38)
      kind: _3 = regex_automata::PatternSet::capacity(move _4) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(src/regexset/string.rs:610:37-610:38)
  1: _2 = core::ops::Range::<usize> { start: const 0_usize, end: move _3 }
    SourceInfo(src/regexset/string.rs:610:18-610:38)
  2: StorageDead(_3)
    SourceInfo(src/regexset/string.rs:610:37-610:38)
  3: FakeRead(ForLet(None), _2)
    SourceInfo(src/regexset/string.rs:610:13-610:15)
  4: StorageLive(_5)
    SourceInfo(src/regexset/string.rs:611:38-611:44)
  5: _5 = move (_1.0: regex_automata::PatternSet)
    SourceInfo(src/regexset/string.rs:611:38-611:44)
  6: StorageLive(_6)
    SourceInfo(src/regexset/string.rs:611:46-611:48)
  7: _6 = move _2
    SourceInfo(src/regexset/string.rs:611:46-611:48)
  8: _0 = regexset::string::SetMatchesIntoIter { patset: move _5, it: move _6 }
    SourceInfo(src/regexset/string.rs:611:9-611:50)
  9: StorageDead(_6)
    SourceInfo(src/regexset/string.rs:611:49-611:50)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:611:49-611:50)
      kind: drop(_5) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_5)
    SourceInfo(src/regexset/string.rs:611:49-611:50)
  1: StorageDead(_2)
    SourceInfo(src/regexset/string.rs:612:5-612:6)
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:612:5-612:6)
      kind: drop(_1) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:612:6-612:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:612:5-612:6)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/regexset/string.rs:609:5-612:6)
      kind: resume
  }
  preds [bb2, bb4]
  succs []

