bb0
  0: StorageLive(_2)
    SourceInfo(src/builders.rs:105:13-105:18)
  1: StorageLive(_3)
    SourceInfo(src/builders.rs:105:21-109:30)
  2: StorageLive(_4)
    SourceInfo(src/builders.rs:105:21-108:40)
  3: StorageLive(_5)
    SourceInfo(src/builders.rs:105:21-107:21)
  4: StorageLive(_6)
    SourceInfo(src/builders.rs:105:21-106:19)
  5: _6 = &((*_1).1: regex_automata::meta::Config)
    SourceInfo(src/builders.rs:105:21-106:19)
  Terminator {
      source_info: SourceInfo(src/builders.rs:105:21-107:21)
      kind: _5 = <regex_automata::meta::Config as core::clone::Clone>::clone(move _6) -> [return: bb1, unwind: bb31]
  }
  preds []
  succs [bb1, bb31]

bb1
  0: StorageDead(_6)
    SourceInfo(src/builders.rs:107:20-107:21)
  1: StorageLive(_7)
    SourceInfo(src/builders.rs:108:25-108:39)
  2: _7 = regex_automata::MatchKind::All
    SourceInfo(src/builders.rs:108:25-108:39)
  Terminator {
      source_info: SourceInfo(src/builders.rs:105:21-108:40)
      kind: _4 = regex_automata::meta::Config::match_kind(move _5, move _7) -> [return: bb2, unwind: bb30]
  }
  preds [bb0]
  succs [bb2, bb30]

bb2
  0: StorageDead(_7)
    SourceInfo(src/builders.rs:108:39-108:40)
  1: StorageDead(_5)
    SourceInfo(src/builders.rs:108:39-108:40)
  Terminator {
      source_info: SourceInfo(src/builders.rs:105:21-109:30)
      kind: _3 = regex_automata::meta::Config::utf8_empty(move _4, const true) -> [return: bb3, unwind: bb29]
  }
  preds [bb1]
  succs [bb3, bb29]

bb3
  0: StorageDead(_4)
    SourceInfo(src/builders.rs:109:29-109:30)
  1: StorageLive(_8)
    SourceInfo(src/builders.rs:110:29-110:48)
  2: _8 = regex_automata::nfa::thompson::WhichCaptures::None
    SourceInfo(src/builders.rs:110:29-110:48)
  Terminator {
      source_info: SourceInfo(src/builders.rs:105:21-110:49)
      kind: _2 = regex_automata::meta::Config::which_captures(move _3, move _8) -> [return: bb4, unwind: bb28]
  }
  preds [bb2]
  succs [bb4, bb28]

bb4
  0: StorageDead(_8)
    SourceInfo(src/builders.rs:110:48-110:49)
  1: StorageDead(_3)
    SourceInfo(src/builders.rs:110:48-110:49)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/builders.rs:105:13-105:18)
  3: StorageLive(_9)
    SourceInfo(src/builders.rs:111:13-111:20)
  4: StorageLive(_10)
    SourceInfo(src/builders.rs:111:23-111:43)
  5: StorageLive(_11)
    SourceInfo(src/builders.rs:111:23-111:35)
  6: _11 = &((*_1).2: regex_automata::util::syntax::Config)
    SourceInfo(src/builders.rs:111:23-111:35)
  Terminator {
      source_info: SourceInfo(src/builders.rs:111:23-111:43)
      kind: _10 = <regex_automata::util::syntax::Config as core::clone::Clone>::clone(move _11) -> [return: bb5, unwind: bb27]
  }
  preds [bb3]
  succs [bb5, bb27]

bb5
  0: StorageDead(_11)
    SourceInfo(src/builders.rs:111:42-111:43)
  Terminator {
      source_info: SourceInfo(src/builders.rs:111:23-111:54)
      kind: _9 = regex_automata::util::syntax::Config::utf8(move _10, const true) -> [return: bb6, unwind: bb27]
  }
  preds [bb4]
  succs [bb6, bb27]

bb6
  0: StorageDead(_10)
    SourceInfo(src/builders.rs:111:53-111:54)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(src/builders.rs:111:13-111:20)
  2: StorageLive(_12)
    SourceInfo(src/builders.rs:112:13-112:21)
  3: StorageLive(_13)
    SourceInfo(src/builders.rs:112:34-112:54)
  4: StorageLive(_14)
    SourceInfo(src/builders.rs:112:34-112:43)
  5: _14 = &((*_1).0: alloc::vec::Vec<alloc::string::String>)
    SourceInfo(src/builders.rs:112:34-112:43)
  Terminator {
      source_info: SourceInfo(src/builders.rs:112:34-112:54)
      kind: _13 = alloc::vec::Vec::<alloc::string::String>::as_slice(move _14) -> [return: bb7, unwind: bb27]
  }
  preds [bb5]
  succs [bb7, bb27]

bb7
  0: StorageDead(_14)
    SourceInfo(src/builders.rs:112:53-112:54)
  Terminator {
      source_info: SourceInfo(src/builders.rs:112:24-112:55)
      kind: _12 = <alloc::sync::Arc<[alloc::string::String]> as core::convert::From<&[alloc::string::String]>>::from(move _13) -> [return: bb8, unwind: bb27]
  }
  preds [bb6]
  succs [bb8, bb27]

bb8
  0: StorageDead(_13)
    SourceInfo(src/builders.rs:112:54-112:55)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(src/builders.rs:112:13-112:21)
  2: StorageLive(_15)
    SourceInfo(src/builders.rs:113:9-117:60)
  3: StorageLive(_16)
    SourceInfo(src/builders.rs:113:9-116:35)
  4: StorageLive(_17)
    SourceInfo(src/builders.rs:113:9-115:29)
  5: StorageLive(_18)
    SourceInfo(src/builders.rs:113:9-115:29)
  6: StorageLive(_19)
    SourceInfo(src/builders.rs:113:9-114:30)
  7: StorageLive(_20)
    SourceInfo(src/builders.rs:113:9-114:30)
  8: StorageLive(_21)
    SourceInfo(src/builders.rs:113:9-113:29)
  9: StorageLive(_22)
    SourceInfo(src/builders.rs:113:9-113:29)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-113:29)
      kind: _22 = regex_automata::meta::Builder::new() -> [return: bb9, unwind: bb26]
  }
  preds [bb7]
  succs [bb9, bb26]

bb9
  0: _21 = &mut _22
    SourceInfo(src/builders.rs:113:9-113:29)
  1: StorageLive(_23)
    SourceInfo(src/builders.rs:114:24-114:29)
  2: _23 = move _2
    SourceInfo(src/builders.rs:114:24-114:29)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-114:30)
      kind: _20 = regex_automata::meta::Builder::configure(move _21, move _23) -> [return: bb10, unwind: bb22]
  }
  preds [bb8]
  succs [bb10, bb22]

bb10
  0: _19 = &mut (*_20)
    SourceInfo(src/builders.rs:113:9-114:30)
  1: StorageDead(_23)
    SourceInfo(src/builders.rs:114:29-114:30)
  2: StorageDead(_21)
    SourceInfo(src/builders.rs:114:29-114:30)
  3: StorageLive(_24)
    SourceInfo(src/builders.rs:115:21-115:28)
  4: _24 = _9
    SourceInfo(src/builders.rs:115:21-115:28)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-115:29)
      kind: _18 = regex_automata::meta::Builder::syntax(move _19, move _24) -> [return: bb11, unwind: bb23]
  }
  preds [bb9]
  succs [bb11, bb23]

bb11
  0: _17 = &(*_18)
    SourceInfo(src/builders.rs:113:9-115:29)
  1: StorageDead(_24)
    SourceInfo(src/builders.rs:115:28-115:29)
  2: StorageDead(_19)
    SourceInfo(src/builders.rs:115:28-115:29)
  3: StorageLive(_25)
    SourceInfo(src/builders.rs:116:25-116:34)
  4: StorageLive(_26)
    SourceInfo(src/builders.rs:116:25-116:34)
  5: StorageLive(_27)
    SourceInfo(src/builders.rs:116:25-116:34)
  6: StorageLive(_28)
    SourceInfo(src/builders.rs:116:25-116:34)
  7: _28 = &_12
    SourceInfo(src/builders.rs:116:25-116:34)
  8: _27 = &(*_28)
    SourceInfo(src/builders.rs:116:25-116:34)
  Terminator {
      source_info: SourceInfo(src/builders.rs:116:25-116:34)
      kind: _26 = <alloc::sync::Arc<[alloc::string::String]> as core::ops::Deref>::deref(move _27) -> [return: bb12, unwind: bb23]
  }
  preds [bb10]
  succs [bb12, bb23]

bb12
  0: _25 = &(*_26)
    SourceInfo(src/builders.rs:116:25-116:34)
  1: StorageDead(_27)
    SourceInfo(src/builders.rs:116:33-116:34)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-116:35)
      kind: _16 = regex_automata::meta::Builder::build_many::<alloc::string::String>(move _17, move _25) -> [return: bb13, unwind: bb23]
  }
  preds [bb11]
  succs [bb13, bb23]

bb13
  0: StorageDead(_25)
    SourceInfo(src/builders.rs:116:34-116:35)
  1: StorageDead(_17)
    SourceInfo(src/builders.rs:116:34-116:35)
  2: StorageLive(_29)
    SourceInfo(src/builders.rs:117:18-117:59)
  3: _29 = {closure@src/builders.rs:117:18: 117:24} { patterns: move _12 }
    SourceInfo(src/builders.rs:117:18-117:59)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-117:60)
      kind: _15 = core::result::Result::<regex_automata::meta::Regex, regex_automata::meta::BuildError>::map::<regexset::string::RegexSet, {closure@src/builders.rs:117:18: 117:24}>(move _16, move _29) -> [return: bb14, unwind: bb20]
  }
  preds [bb12]
  succs [bb14, bb20]

bb14
  0: StorageDead(_29)
    SourceInfo(src/builders.rs:117:59-117:60)
  1: StorageDead(_16)
    SourceInfo(src/builders.rs:117:59-117:60)
  Terminator {
      source_info: SourceInfo(src/builders.rs:113:9-118:51)
      kind: _0 = core::result::Result::<regexset::string::RegexSet, regex_automata::meta::BuildError>::map_err::<error::Error, fn(regex_automata::meta::BuildError) -> error::Error {error::Error::from_meta_build_error}>(move _15, error::Error::from_meta_build_error) -> [return: bb15, unwind: bb19]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: StorageDead(_15)
    SourceInfo(src/builders.rs:118:50-118:51)
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_12) -> [return: bb16, unwind: bb24]
  }
  preds [bb14]
  succs [bb16, bb24]

bb16
  0: StorageDead(_12)
    SourceInfo(src/builders.rs:119:5-119:6)
  1: StorageDead(_9)
    SourceInfo(src/builders.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_2) -> [return: bb17, unwind: bb25]
  }
  preds [bb15]
  succs [bb17, bb25]

bb17
  0: StorageDead(_2)
    SourceInfo(src/builders.rs:119:5-119:6)
  1: StorageDead(_28)
    SourceInfo(src/builders.rs:119:5-119:6)
  2: StorageDead(_26)
    SourceInfo(src/builders.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_22) -> [return: bb18, unwind: bb31]
  }
  preds [bb16]
  succs [bb18, bb31]

bb18
  0: StorageDead(_22)
    SourceInfo(src/builders.rs:119:5-119:6)
  1: StorageDead(_20)
    SourceInfo(src/builders.rs:119:5-119:6)
  2: StorageDead(_18)
    SourceInfo(src/builders.rs:119:5-119:6)
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:6-119:6)
      kind: return
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(src/builders.rs:118:50-118:51)
      kind: drop(_15) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb23]

bb20
  Terminator {
      source_info: SourceInfo(src/builders.rs:117:59-117:60)
      kind: drop(_29) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/builders.rs:117:59-117:60)
      kind: drop(_16) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb23]

bb22
  Terminator {
      source_info: SourceInfo(src/builders.rs:114:29-114:30)
      kind: drop(_23) -> [return: bb23, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_12) -> [return: bb24, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb12, bb19, bb21, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_2) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb15, bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_22) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb16, bb24]
  succs [bb31]

bb26
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_12) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(src/builders.rs:119:5-119:6)
      kind: drop(_2) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb6, bb7, bb26]
  succs [bb31]

bb28
  Terminator {
      source_info: SourceInfo(src/builders.rs:110:48-110:49)
      kind: drop(_3) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb31]

bb29
  Terminator {
      source_info: SourceInfo(src/builders.rs:109:29-109:30)
      kind: drop(_4) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb31]

bb30
  Terminator {
      source_info: SourceInfo(src/builders.rs:108:39-108:40)
      kind: drop(_5) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/builders.rs:104:5-119:6)
      kind: resume
  }
  preds [bb0, bb17, bb25, bb27, bb28, bb29, bb30]
  succs []

