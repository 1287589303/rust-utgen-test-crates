bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/bytes.rs:2218:13-2218:32)
  1: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:2218:35-2218:50)
  2: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:2218:35-2218:50)
  3: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:2218:35-2218:42)
  4: _5 = &((*_1).1: regex_automata::meta::CapturesMatches<'_, '_>)
    SourceInfo(src/regex/bytes.rs:2218:35-2218:42)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2218:35-2218:50)
      kind: _4 = regex_automata::meta::CapturesMatches::<'_, '_>::regex(move _5) -> [return: bb1, unwind: bb6]
  }
  preds []
  succs [bb1, bb6]

bb1
  0: _3 = &(*_4)
    SourceInfo(src/regex/bytes.rs:2218:35-2218:50)
  1: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:2218:49-2218:50)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2218:35-2218:72)
      kind: _2 = regex_automata::meta::Regex::static_captures_len(move _3) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:2218:71-2218:72)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/regex/bytes.rs:2218:13-2218:32)
  2: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:2218:72-2218:73)
  3: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:2219:9-2219:23)
  4: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:2219:9-2219:16)
  5: _7 = &mut ((*_1).1: regex_automata::meta::CapturesMatches<'_, '_>)
    SourceInfo(src/regex/bytes.rs:2219:9-2219:16)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2219:9-2219:23)
      kind: _6 = <regex_automata::meta::CapturesMatches<'_, '_> as core::iter::Iterator>::next(move _7) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:2219:22-2219:23)
  1: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  2: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  3: _9 = &(*((*_1).0: &[u8]))
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  4: StorageLive(_10)
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  5: _10 = &_2
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  6: _8 = {closure@src/regex/bytes.rs:2219:28: 2219:34} { self: move _9, static_captures_len: move _10 }
    SourceInfo(src/regex/bytes.rs:2219:28-2223:10)
  7: StorageDead(_10)
    SourceInfo(src/regex/bytes.rs:2219:33-2219:34)
  8: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:2219:33-2219:34)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2219:9-2223:11)
      kind: _0 = core::option::Option::<regex_automata::util::captures::Captures>::map::<regex::bytes::Captures<'_>, {closure@src/regex/bytes.rs:2219:28: 2219:34}>(move _6, move _8) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:2223:10-2223:11)
  1: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:2223:10-2223:11)
  2: StorageDead(_2)
    SourceInfo(src/regex/bytes.rs:2224:5-2224:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2224:6-2224:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2223:10-2223:11)
      kind: drop(_6) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2217:5-2224:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5]
  succs []

