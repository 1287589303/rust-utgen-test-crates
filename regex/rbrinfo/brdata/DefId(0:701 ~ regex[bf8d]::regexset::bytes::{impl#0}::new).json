{
  "name": "regex::regexset::bytes::{impl#0}::new",
  "mod_info": {
    "name": "regexset::bytes",
    "loc": "src/regexset/mod.rs:1:1:1:22"
  },
  "visible": true,
  "loc": "src/regexset/bytes.rs:158:5:164:6",
  "doc": "/// Create a new regex set with the given regular expressions.\n///\n/// This takes an iterator of `S`, where `S` is something that can produce\n/// a `&str`. If any of the strings in the iterator are not valid regular\n/// expressions, then an error is returned.\n///\n/// # Example\n///\n/// Create a new regex set from an iterator of strings:\n///\n/// ```\n/// use regex::bytes::RegexSet;\n///\n/// let set = RegexSet::new([r\"\\w+\", r\"\\d+\"]).unwrap();\n/// assert!(set.is_match(b\"foo\"));\n/// ```\n",
  "code": [
    "pub fn new<I, S>(exprs: I) -> Result<RegexSet, Error>",
    "where",
    "    S: AsRef<str>,",
    "    I: IntoIterator<Item = S>,",
    "{",
    "    RegexSetBuilder::new(exprs).build()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}