{
  "name": "regex::builders::bytes::{impl#0}::swap_greed",
  "mod_info": {
    "name": "builders::bytes",
    "loc": "src/builders.rs:1357:1:2539:2"
  },
  "visible": true,
  "loc": "src/builders.rs:1721:9:1724:10",
  "doc": "/// This configures swap-greed mode for the entire pattern.\n///\n/// When swap-greed mode is enabled, patterns like `a+` will become\n/// non-greedy and patterns like `a+?` will become greedy. In other\n/// words, the meanings of `a+` and `a+?` are switched.\n///\n/// This setting can also be configured using the inline flag `U` in\n/// the pattern.\n///\n/// The default for this is `false`.\n///\n/// # Example\n///\n/// ```\n/// use regex::bytes::RegexBuilder;\n///\n/// let re = RegexBuilder::new(r\"a+\")\n///     .swap_greed(true)\n///     .build()\n///     .unwrap();\n/// assert_eq!(Some(&b\"a\"[..]), re.find(b\"aaa\").map(|m| m.as_bytes()));\n/// ```\n",
  "code": [
    "pub fn swap_greed(&mut self, yes: bool) -> &mut RegexBuilder {",
    "    self.builder.swap_greed(yes);",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}