{
  "name": "regex::builders::bytes::{impl#1}::case_insensitive",
  "mod_info": {
    "name": "builders::bytes",
    "loc": "src/builders.rs:1357:1:2539:2"
  },
  "visible": true,
  "loc": "src/builders.rs:2092:9:2095:10",
  "doc": "/// This configures whether to enable case insensitive matching for all\n/// of the patterns.\n///\n/// This setting can also be configured using the inline flag `i`\n/// in the pattern. For example, `(?i:foo)` matches `foo` case\n/// insensitively while `(?-i:foo)` matches `foo` case sensitively.\n///\n/// The default for this is `false`.\n///\n/// # Example\n///\n/// ```\n/// use regex::bytes::RegexSetBuilder;\n///\n/// let re = RegexSetBuilder::new([r\"foo(?-i:bar)quux\"])\n///     .case_insensitive(true)\n///     .build()\n///     .unwrap();\n/// assert!(re.is_match(b\"FoObarQuUx\"));\n/// // Even though case insensitive matching is enabled in the builder,\n/// // it can be locally disabled within the pattern. In this case,\n/// // `bar` is matched case sensitively.\n/// assert!(!re.is_match(b\"fooBARquux\"));\n/// ```\n",
  "code": [
    "pub fn case_insensitive(&mut self, yes: bool) -> &mut RegexSetBuilder {",
    "    self.builder.case_insensitive(yes);",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}