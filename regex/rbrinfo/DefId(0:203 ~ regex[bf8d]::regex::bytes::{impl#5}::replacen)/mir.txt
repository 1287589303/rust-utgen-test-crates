bb0
  0: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:935:9-952:10)
  1: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:935:28-935:46)
  2: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:935:28-935:31)
  3: _7 = &mut _4
    SourceInfo(src/regex/bytes.rs:935:28-935:31)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:935:28-935:46)
      kind: _6 = <R as regex::bytes::Replacer>::no_expansion(move _7) -> [return: bb1, unwind: bb109]
  }
  preds []
  succs [bb1, bb109]

bb1
  0: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:935:45-935:46)
  1: PlaceMention(_6)
    SourceInfo(src/regex/bytes.rs:935:28-935:46)
  2: _8 = discriminant(_6)
    SourceInfo(src/regex/bytes.rs:935:28-935:46)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:935:16-935:25)
      kind: switchInt(move _8) -> [1: bb2, otherwise: bb39]
  }
  preds [bb0]
  succs [bb2, bb39]

bb2
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:935:16-935:25)
      kind: falseEdge -> [real: bb3, imaginary: bb39]
  }
  preds [bb1]
  succs [bb3, bb39]

bb3
  0: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:935:21-935:24)
  1: _9 = move ((_6 as Some).0: alloc::borrow::Cow<'_, [u8]>)
    SourceInfo(src/regex/bytes.rs:935:21-935:24)
  2: StorageLive(_11)
    SourceInfo(src/regex/bytes.rs:936:17-936:23)
  3: StorageLive(_12)
    SourceInfo(src/regex/bytes.rs:936:26-936:62)
  4: StorageLive(_13)
    SourceInfo(src/regex/bytes.rs:936:26-936:50)
  5: StorageLive(_14)
    SourceInfo(src/regex/bytes.rs:936:26-936:30)
  6: _14 = &(*_1)
    SourceInfo(src/regex/bytes.rs:936:26-936:30)
  7: StorageLive(_15)
    SourceInfo(src/regex/bytes.rs:936:41-936:49)
  8: _15 = &(*_2)
    SourceInfo(src/regex/bytes.rs:936:41-936:49)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:936:26-936:50)
      kind: _13 = regex::bytes::Regex::find_iter(move _14, move _15) -> [return: bb4, unwind: bb107]
  }
  preds [bb2]
  succs [bb4, bb107]

bb4
  0: StorageDead(_15)
    SourceInfo(src/regex/bytes.rs:936:49-936:50)
  1: StorageDead(_14)
    SourceInfo(src/regex/bytes.rs:936:49-936:50)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:936:26-936:62)
      kind: _12 = <regex::bytes::Matches<'_, '_> as core::iter::Iterator>::enumerate(move _13) -> [return: bb5, unwind: bb106]
  }
  preds [bb3]
  succs [bb5, bb106]

bb5
  0: StorageDead(_13)
    SourceInfo(src/regex/bytes.rs:936:61-936:62)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:936:26-936:73)
      kind: _11 = <core::iter::Enumerate<regex::bytes::Matches<'_, '_>> as core::iter::Iterator>::peekable(move _12) -> [return: bb6, unwind: bb105]
  }
  preds [bb4]
  succs [bb6, bb105]

bb6
  0: StorageDead(_12)
    SourceInfo(src/regex/bytes.rs:936:72-936:73)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(src/regex/bytes.rs:936:17-936:23)
  2: StorageLive(_16)
    SourceInfo(src/regex/bytes.rs:937:13-939:14)
  3: StorageLive(_17)
    SourceInfo(src/regex/bytes.rs:937:16-937:35)
  4: StorageLive(_18)
    SourceInfo(src/regex/bytes.rs:937:16-937:25)
  5: StorageLive(_19)
    SourceInfo(src/regex/bytes.rs:937:16-937:25)
  6: StorageLive(_20)
    SourceInfo(src/regex/bytes.rs:937:16-937:18)
  7: _20 = &mut _11
    SourceInfo(src/regex/bytes.rs:937:16-937:18)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:937:16-937:25)
      kind: _19 = core::iter::Peekable::<core::iter::Enumerate<regex::bytes::Matches<'_, '_>>>::peek(move _20) -> [return: bb7, unwind: bb104]
  }
  preds [bb5]
  succs [bb7, bb104]

bb7
  0: _18 = &_19
    SourceInfo(src/regex/bytes.rs:937:16-937:25)
  1: StorageDead(_20)
    SourceInfo(src/regex/bytes.rs:937:24-937:25)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:937:16-937:35)
      kind: _17 = core::option::Option::<&(usize, regex::bytes::Match<'_>)>::is_none(move _18) -> [return: bb8, unwind: bb104]
  }
  preds [bb6]
  succs [bb8, bb104]

bb8
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:937:16-937:35)
      kind: switchInt(move _17) -> [0: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_19)
    SourceInfo(src/regex/bytes.rs:937:34-937:35)
  1: StorageDead(_18)
    SourceInfo(src/regex/bytes.rs:937:34-937:35)
  2: StorageLive(_22)
    SourceInfo(src/regex/bytes.rs:938:38-938:46)
  3: _22 = &(*_2)
    SourceInfo(src/regex/bytes.rs:938:38-938:46)
  4: _0 = alloc::borrow::Cow::<'_, [u8]>::Borrowed(move _22)
    SourceInfo(src/regex/bytes.rs:938:24-938:47)
  5: StorageDead(_22)
    SourceInfo(src/regex/bytes.rs:938:46-938:47)
  6: StorageDead(_17)
    SourceInfo(src/regex/bytes.rs:939:13-939:14)
  7: StorageDead(_16)
    SourceInfo(src/regex/bytes.rs:939:13-939:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb8]
  succs [bb85]

bb10
  0: StorageDead(_19)
    SourceInfo(src/regex/bytes.rs:937:34-937:35)
  1: StorageDead(_18)
    SourceInfo(src/regex/bytes.rs:937:34-937:35)
  2: _16 = const ()
    SourceInfo(src/regex/bytes.rs:939:14-939:14)
  3: StorageDead(_17)
    SourceInfo(src/regex/bytes.rs:939:13-939:14)
  4: StorageDead(_16)
    SourceInfo(src/regex/bytes.rs:939:13-939:14)
  5: StorageLive(_23)
    SourceInfo(src/regex/bytes.rs:940:17-940:24)
  6: StorageLive(_24)
    SourceInfo(src/regex/bytes.rs:940:46-940:60)
  7: StorageLive(_25)
    SourceInfo(src/regex/bytes.rs:940:46-940:54)
  8: _25 = &(*_2)
    SourceInfo(src/regex/bytes.rs:940:46-940:54)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:940:46-940:60)
      kind: _24 = core::slice::<impl [u8]>::len(move _25) -> [return: bb11, unwind: bb104]
  }
  preds [bb8]
  succs [bb11, bb104]

bb11
  0: StorageDead(_25)
    SourceInfo(src/regex/bytes.rs:940:59-940:60)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:940:27-940:61)
      kind: _23 = alloc::vec::Vec::<u8>::with_capacity(move _24) -> [return: bb12, unwind: bb104]
  }
  preds [bb10]
  succs [bb12, bb104]

bb12
  0: StorageDead(_24)
    SourceInfo(src/regex/bytes.rs:940:60-940:61)
  1: FakeRead(ForLet(None), _23)
    SourceInfo(src/regex/bytes.rs:940:17-940:24)
  2: StorageLive(_26)
    SourceInfo(src/regex/bytes.rs:941:17-941:31)
  3: _26 = const 0_usize
    SourceInfo(src/regex/bytes.rs:941:34-941:35)
  4: FakeRead(ForLet(None), _26)
    SourceInfo(src/regex/bytes.rs:941:17-941:31)
  5: StorageLive(_27)
    SourceInfo(src/regex/bytes.rs:942:13-949:14)
  6: StorageLive(_28)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  7: StorageLive(_29)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  8: _29 = move _11
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:27-942:29)
      kind: _28 = <core::iter::Peekable<core::iter::Enumerate<regex::bytes::Matches<'_, '_>>> as core::iter::IntoIterator>::into_iter(move _29) -> [return: bb13, unwind: bb102]
  }
  preds [bb11]
  succs [bb13, bb102]

bb13
  0: StorageDead(_29)
    SourceInfo(src/regex/bytes.rs:942:28-942:29)
  1: PlaceMention(_28)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  2: StorageLive(_30)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  3: _30 = move _28
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:13-949:14)
      kind: goto -> bb14
  }
  preds [bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:13-949:14)
      kind: falseUnwind -> [real: bb15, unwind: bb100]
  }
  preds [bb13, bb32]
  succs [bb15, bb100]

bb15
  0: StorageLive(_32)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  1: StorageLive(_33)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  2: StorageLive(_34)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  3: StorageLive(_35)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  4: _35 = &mut _30
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  5: _34 = &mut (*_35)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:27-942:29)
      kind: _33 = <core::iter::Peekable<core::iter::Enumerate<regex::bytes::Matches<'_, '_>>> as core::iter::Iterator>::next(move _34) -> [return: bb16, unwind: bb100]
  }
  preds [bb14]
  succs [bb16, bb100]

bb16
  0: StorageDead(_34)
    SourceInfo(src/regex/bytes.rs:942:28-942:29)
  1: PlaceMention(_33)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  2: _36 = discriminant(_33)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:27-942:29)
      kind: switchInt(move _36) -> [0: bb18, 1: bb19, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19]

bb17
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(src/regex/bytes.rs:942:27-942:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:27-942:29)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:13-949:14)
      kind: falseEdge -> [real: bb20, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageLive(_38)
    SourceInfo(src/regex/bytes.rs:942:18-942:19)
  1: _38 = (((_33 as Some).0: (usize, regex::bytes::Match<'_>)).0: usize)
    SourceInfo(src/regex/bytes.rs:942:18-942:19)
  2: StorageLive(_39)
    SourceInfo(src/regex/bytes.rs:942:21-942:22)
  3: _39 = (((_33 as Some).0: (usize, regex::bytes::Match<'_>)).1: regex::bytes::Match<'_>)
    SourceInfo(src/regex/bytes.rs:942:21-942:22)
  4: StorageLive(_40)
    SourceInfo(src/regex/bytes.rs:943:17-943:72)
  5: StorageLive(_41)
    SourceInfo(src/regex/bytes.rs:943:17-943:20)
  6: _41 = &mut _23
    SourceInfo(src/regex/bytes.rs:943:17-943:20)
  7: StorageLive(_42)
    SourceInfo(src/regex/bytes.rs:943:39-943:71)
  8: StorageLive(_43)
    SourceInfo(src/regex/bytes.rs:943:39-943:71)
  9: StorageLive(_44)
    SourceInfo(src/regex/bytes.rs:943:48-943:71)
  10: StorageLive(_45)
    SourceInfo(src/regex/bytes.rs:943:40-943:48)
  11: _45 = &(*_2)
    SourceInfo(src/regex/bytes.rs:943:40-943:48)
  12: StorageLive(_46)
    SourceInfo(src/regex/bytes.rs:943:49-943:70)
  13: StorageLive(_47)
    SourceInfo(src/regex/bytes.rs:943:49-943:59)
  14: _47 = _26
    SourceInfo(src/regex/bytes.rs:943:49-943:59)
  15: StorageLive(_48)
    SourceInfo(src/regex/bytes.rs:943:61-943:70)
  16: StorageLive(_49)
    SourceInfo(src/regex/bytes.rs:943:61-943:62)
  17: _49 = &_39
    SourceInfo(src/regex/bytes.rs:943:61-943:62)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:943:61-943:70)
      kind: _48 = regex::bytes::Match::<'_>::start(move _49) -> [return: bb21, unwind: bb100]
  }
  preds [bb16, bb18]
  succs [bb21, bb100]

bb20
  0: _27 = const ()
    SourceInfo(src/regex/bytes.rs:942:13-949:14)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:13-949:14)
      kind: goto -> bb33
  }
  preds [bb18]
  succs [bb33]

bb21
  0: StorageDead(_49)
    SourceInfo(src/regex/bytes.rs:943:69-943:70)
  1: _46 = core::ops::Range::<usize> { start: move _47, end: move _48 }
    SourceInfo(src/regex/bytes.rs:943:49-943:70)
  2: StorageDead(_48)
    SourceInfo(src/regex/bytes.rs:943:69-943:70)
  3: StorageDead(_47)
    SourceInfo(src/regex/bytes.rs:943:69-943:70)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:943:48-943:71)
      kind: _44 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _45, move _46) -> [return: bb22, unwind: bb100]
  }
  preds [bb19]
  succs [bb22, bb100]

bb22
  0: StorageDead(_46)
    SourceInfo(src/regex/bytes.rs:943:70-943:71)
  1: StorageDead(_45)
    SourceInfo(src/regex/bytes.rs:943:70-943:71)
  2: _43 = &(*_44)
    SourceInfo(src/regex/bytes.rs:943:39-943:71)
  3: _42 = &(*_43)
    SourceInfo(src/regex/bytes.rs:943:39-943:71)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:943:17-943:72)
      kind: _40 = alloc::vec::Vec::<u8>::extend_from_slice(move _41, move _42) -> [return: bb23, unwind: bb100]
  }
  preds [bb21]
  succs [bb23, bb100]

bb23
  0: StorageDead(_42)
    SourceInfo(src/regex/bytes.rs:943:71-943:72)
  1: StorageDead(_41)
    SourceInfo(src/regex/bytes.rs:943:71-943:72)
  2: StorageDead(_44)
    SourceInfo(src/regex/bytes.rs:943:72-943:73)
  3: StorageDead(_43)
    SourceInfo(src/regex/bytes.rs:943:72-943:73)
  4: StorageDead(_40)
    SourceInfo(src/regex/bytes.rs:943:72-943:73)
  5: StorageLive(_50)
    SourceInfo(src/regex/bytes.rs:944:17-944:44)
  6: StorageLive(_51)
    SourceInfo(src/regex/bytes.rs:944:17-944:20)
  7: _51 = &mut _23
    SourceInfo(src/regex/bytes.rs:944:17-944:20)
  8: StorageLive(_52)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  9: StorageLive(_53)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  10: StorageLive(_54)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  11: StorageLive(_55)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  12: _55 = &_9
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  13: _54 = &(*_55)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:944:39-944:43)
      kind: _53 = <alloc::borrow::Cow<'_, [u8]> as core::ops::Deref>::deref(move _54) -> [return: bb24, unwind: bb100]
  }
  preds [bb22]
  succs [bb24, bb100]

bb24
  0: _52 = &(*_53)
    SourceInfo(src/regex/bytes.rs:944:39-944:43)
  1: StorageDead(_54)
    SourceInfo(src/regex/bytes.rs:944:42-944:43)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:944:17-944:44)
      kind: _50 = alloc::vec::Vec::<u8>::extend_from_slice(move _51, move _52) -> [return: bb25, unwind: bb100]
  }
  preds [bb23]
  succs [bb25, bb100]

bb25
  0: StorageDead(_52)
    SourceInfo(src/regex/bytes.rs:944:43-944:44)
  1: StorageDead(_51)
    SourceInfo(src/regex/bytes.rs:944:43-944:44)
  2: StorageDead(_55)
    SourceInfo(src/regex/bytes.rs:944:44-944:45)
  3: StorageDead(_53)
    SourceInfo(src/regex/bytes.rs:944:44-944:45)
  4: StorageDead(_50)
    SourceInfo(src/regex/bytes.rs:944:44-944:45)
  5: StorageLive(_56)
    SourceInfo(src/regex/bytes.rs:945:30-945:37)
  6: StorageLive(_57)
    SourceInfo(src/regex/bytes.rs:945:30-945:31)
  7: _57 = &_39
    SourceInfo(src/regex/bytes.rs:945:30-945:31)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:945:30-945:37)
      kind: _56 = regex::bytes::Match::<'_>::end(move _57) -> [return: bb26, unwind: bb100]
  }
  preds [bb24]
  succs [bb26, bb100]

bb26
  0: StorageDead(_57)
    SourceInfo(src/regex/bytes.rs:945:36-945:37)
  1: _26 = move _56
    SourceInfo(src/regex/bytes.rs:945:17-945:37)
  2: StorageDead(_56)
    SourceInfo(src/regex/bytes.rs:945:36-945:37)
  3: StorageLive(_58)
    SourceInfo(src/regex/bytes.rs:946:20-946:29)
  4: StorageLive(_59)
    SourceInfo(src/regex/bytes.rs:946:20-946:25)
  5: _59 = _3
    SourceInfo(src/regex/bytes.rs:946:20-946:25)
  6: _58 = Gt(move _59, const 0_usize)
    SourceInfo(src/regex/bytes.rs:946:20-946:29)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:946:20-946:29)
      kind: switchInt(move _58) -> [0: bb31, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb31]

bb27
  0: StorageDead(_59)
    SourceInfo(src/regex/bytes.rs:946:28-946:29)
  1: StorageLive(_60)
    SourceInfo(src/regex/bytes.rs:946:33-946:47)
  2: StorageLive(_61)
    SourceInfo(src/regex/bytes.rs:946:33-946:34)
  3: _61 = _38
    SourceInfo(src/regex/bytes.rs:946:33-946:34)
  4: StorageLive(_62)
    SourceInfo(src/regex/bytes.rs:946:38-946:47)
  5: StorageLive(_63)
    SourceInfo(src/regex/bytes.rs:946:38-946:43)
  6: _63 = _3
    SourceInfo(src/regex/bytes.rs:946:38-946:43)
  7: _64 = SubWithOverflow(_63, const 1_usize)
    SourceInfo(src/regex/bytes.rs:946:38-946:47)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:946:38-946:47)
      kind: assert(!move (_64.1: bool), "attempt to compute `{} - {}`, which would overflow", move _63, const 1_usize) -> [success: bb28, unwind: bb100]
  }
  preds [bb26]
  succs [bb28, bb100]

bb28
  0: _62 = move (_64.0: usize)
    SourceInfo(src/regex/bytes.rs:946:38-946:47)
  1: StorageDead(_63)
    SourceInfo(src/regex/bytes.rs:946:46-946:47)
  2: _60 = Ge(move _61, move _62)
    SourceInfo(src/regex/bytes.rs:946:33-946:47)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:946:33-946:47)
      kind: switchInt(move _60) -> [0: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30]

bb29
  0: StorageDead(_62)
    SourceInfo(src/regex/bytes.rs:946:46-946:47)
  1: StorageDead(_61)
    SourceInfo(src/regex/bytes.rs:946:46-946:47)
  2: _27 = const ()
    SourceInfo(src/regex/bytes.rs:947:21-947:26)
  3: StorageDead(_60)
    SourceInfo(src/regex/bytes.rs:948:17-948:18)
  4: StorageDead(_58)
    SourceInfo(src/regex/bytes.rs:948:17-948:18)
  5: StorageDead(_39)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  6: StorageDead(_38)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb28]
  succs [bb33]

bb30
  0: StorageDead(_62)
    SourceInfo(src/regex/bytes.rs:946:46-946:47)
  1: StorageDead(_61)
    SourceInfo(src/regex/bytes.rs:946:46-946:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb28]
  succs [bb32]

bb31
  0: StorageDead(_59)
    SourceInfo(src/regex/bytes.rs:946:28-946:29)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb26]
  succs [bb32]

bb32
  0: _32 = const ()
    SourceInfo(src/regex/bytes.rs:948:18-948:18)
  1: StorageDead(_60)
    SourceInfo(src/regex/bytes.rs:948:17-948:18)
  2: StorageDead(_58)
    SourceInfo(src/regex/bytes.rs:948:17-948:18)
  3: StorageDead(_39)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  4: StorageDead(_38)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  5: StorageDead(_35)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  6: StorageDead(_33)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  7: StorageDead(_32)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  8: _31 = const ()
    SourceInfo(src/regex/bytes.rs:942:13-949:14)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:13-949:14)
      kind: goto -> bb14
  }
  preds [bb30, bb31]
  succs [bb14]

bb33
  0: StorageDead(_35)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  1: StorageDead(_33)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  2: StorageDead(_32)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:949:13-949:14)
      kind: drop(_30) -> [return: bb34, unwind: bb101]
  }
  preds [bb20, bb29]
  succs [bb34, bb101]

bb34
  0: StorageDead(_30)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:949:13-949:14)
      kind: drop(_28) -> [return: bb35, unwind: bb103]
  }
  preds [bb33]
  succs [bb35, bb103]

bb35
  0: StorageDead(_28)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  1: StorageDead(_27)
    SourceInfo(src/regex/bytes.rs:949:13-949:14)
  2: StorageLive(_66)
    SourceInfo(src/regex/bytes.rs:950:13-950:59)
  3: StorageLive(_67)
    SourceInfo(src/regex/bytes.rs:950:13-950:16)
  4: _67 = &mut _23
    SourceInfo(src/regex/bytes.rs:950:13-950:16)
  5: StorageLive(_68)
    SourceInfo(src/regex/bytes.rs:950:35-950:58)
  6: StorageLive(_69)
    SourceInfo(src/regex/bytes.rs:950:35-950:58)
  7: StorageLive(_70)
    SourceInfo(src/regex/bytes.rs:950:44-950:58)
  8: StorageLive(_71)
    SourceInfo(src/regex/bytes.rs:950:36-950:44)
  9: _71 = &(*_2)
    SourceInfo(src/regex/bytes.rs:950:36-950:44)
  10: StorageLive(_72)
    SourceInfo(src/regex/bytes.rs:950:45-950:57)
  11: StorageLive(_73)
    SourceInfo(src/regex/bytes.rs:950:45-950:55)
  12: _73 = _26
    SourceInfo(src/regex/bytes.rs:950:45-950:55)
  13: _72 = core::ops::RangeFrom::<usize> { start: move _73 }
    SourceInfo(src/regex/bytes.rs:950:45-950:57)
  14: StorageDead(_73)
    SourceInfo(src/regex/bytes.rs:950:56-950:57)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:950:44-950:58)
      kind: _70 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _71, move _72) -> [return: bb36, unwind: bb103]
  }
  preds [bb34]
  succs [bb36, bb103]

bb36
  0: StorageDead(_72)
    SourceInfo(src/regex/bytes.rs:950:57-950:58)
  1: StorageDead(_71)
    SourceInfo(src/regex/bytes.rs:950:57-950:58)
  2: _69 = &(*_70)
    SourceInfo(src/regex/bytes.rs:950:35-950:58)
  3: _68 = &(*_69)
    SourceInfo(src/regex/bytes.rs:950:35-950:58)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:950:13-950:59)
      kind: _66 = alloc::vec::Vec::<u8>::extend_from_slice(move _67, move _68) -> [return: bb37, unwind: bb103]
  }
  preds [bb35]
  succs [bb37, bb103]

bb37
  0: StorageDead(_68)
    SourceInfo(src/regex/bytes.rs:950:58-950:59)
  1: StorageDead(_67)
    SourceInfo(src/regex/bytes.rs:950:58-950:59)
  2: StorageDead(_70)
    SourceInfo(src/regex/bytes.rs:950:59-950:60)
  3: StorageDead(_69)
    SourceInfo(src/regex/bytes.rs:950:59-950:60)
  4: StorageDead(_66)
    SourceInfo(src/regex/bytes.rs:950:59-950:60)
  5: StorageLive(_74)
    SourceInfo(src/regex/bytes.rs:951:31-951:34)
  6: _74 = move _23
    SourceInfo(src/regex/bytes.rs:951:31-951:34)
  7: _0 = alloc::borrow::Cow::<'_, [u8]>::Owned(move _74)
    SourceInfo(src/regex/bytes.rs:951:20-951:35)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:951:34-951:35)
      kind: drop(_74) -> [return: bb38, unwind: bb103]
  }
  preds [bb36]
  succs [bb38, bb103]

bb38
  0: StorageDead(_74)
    SourceInfo(src/regex/bytes.rs:951:34-951:35)
  1: StorageDead(_26)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_23) -> [return: bb84, unwind: bb104]
  }
  preds [bb37]
  succs [bb84, bb104]

bb39
  0: _5 = const ()
    SourceInfo(src/regex/bytes.rs:952:10-952:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_6) -> [return: bb40, unwind: bb109]
  }
  preds [bb1, bb2]
  succs [bb40, bb109]

bb40
  0: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  1: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  2: StorageLive(_75)
    SourceInfo(src/regex/bytes.rs:956:13-956:19)
  3: StorageLive(_76)
    SourceInfo(src/regex/bytes.rs:956:22-956:62)
  4: StorageLive(_77)
    SourceInfo(src/regex/bytes.rs:956:22-956:50)
  5: StorageLive(_78)
    SourceInfo(src/regex/bytes.rs:956:22-956:26)
  6: _78 = &(*_1)
    SourceInfo(src/regex/bytes.rs:956:22-956:26)
  7: StorageLive(_79)
    SourceInfo(src/regex/bytes.rs:956:41-956:49)
  8: _79 = &(*_2)
    SourceInfo(src/regex/bytes.rs:956:41-956:49)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:956:22-956:50)
      kind: _77 = regex::bytes::Regex::captures_iter(move _78, move _79) -> [return: bb41, unwind: bb109]
  }
  preds [bb39]
  succs [bb41, bb109]

bb41
  0: StorageDead(_79)
    SourceInfo(src/regex/bytes.rs:956:49-956:50)
  1: StorageDead(_78)
    SourceInfo(src/regex/bytes.rs:956:49-956:50)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:956:22-956:62)
      kind: _76 = <regex::bytes::CaptureMatches<'_, '_> as core::iter::Iterator>::enumerate(move _77) -> [return: bb42, unwind: bb99]
  }
  preds [bb40]
  succs [bb42, bb99]

bb42
  0: StorageDead(_77)
    SourceInfo(src/regex/bytes.rs:956:61-956:62)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:956:22-956:73)
      kind: _75 = <core::iter::Enumerate<regex::bytes::CaptureMatches<'_, '_>> as core::iter::Iterator>::peekable(move _76) -> [return: bb43, unwind: bb98]
  }
  preds [bb41]
  succs [bb43, bb98]

bb43
  0: StorageDead(_76)
    SourceInfo(src/regex/bytes.rs:956:72-956:73)
  1: FakeRead(ForLet(None), _75)
    SourceInfo(src/regex/bytes.rs:956:13-956:19)
  2: StorageLive(_80)
    SourceInfo(src/regex/bytes.rs:957:9-959:10)
  3: StorageLive(_81)
    SourceInfo(src/regex/bytes.rs:957:12-957:31)
  4: StorageLive(_82)
    SourceInfo(src/regex/bytes.rs:957:12-957:21)
  5: StorageLive(_83)
    SourceInfo(src/regex/bytes.rs:957:12-957:21)
  6: StorageLive(_84)
    SourceInfo(src/regex/bytes.rs:957:12-957:14)
  7: _84 = &mut _75
    SourceInfo(src/regex/bytes.rs:957:12-957:14)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:957:12-957:21)
      kind: _83 = core::iter::Peekable::<core::iter::Enumerate<regex::bytes::CaptureMatches<'_, '_>>>::peek(move _84) -> [return: bb44, unwind: bb97]
  }
  preds [bb42]
  succs [bb44, bb97]

bb44
  0: _82 = &_83
    SourceInfo(src/regex/bytes.rs:957:12-957:21)
  1: StorageDead(_84)
    SourceInfo(src/regex/bytes.rs:957:20-957:21)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:957:12-957:31)
      kind: _81 = core::option::Option::<&(usize, regex::bytes::Captures<'_>)>::is_none(move _82) -> [return: bb45, unwind: bb97]
  }
  preds [bb43]
  succs [bb45, bb97]

bb45
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:957:12-957:31)
      kind: switchInt(move _81) -> [0: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47]

bb46
  0: StorageDead(_83)
    SourceInfo(src/regex/bytes.rs:957:30-957:31)
  1: StorageDead(_82)
    SourceInfo(src/regex/bytes.rs:957:30-957:31)
  2: StorageLive(_86)
    SourceInfo(src/regex/bytes.rs:958:34-958:42)
  3: _86 = &(*_2)
    SourceInfo(src/regex/bytes.rs:958:34-958:42)
  4: _0 = alloc::borrow::Cow::<'_, [u8]>::Borrowed(move _86)
    SourceInfo(src/regex/bytes.rs:958:20-958:43)
  5: StorageDead(_86)
    SourceInfo(src/regex/bytes.rs:958:42-958:43)
  6: StorageDead(_81)
    SourceInfo(src/regex/bytes.rs:959:9-959:10)
  7: StorageDead(_80)
    SourceInfo(src/regex/bytes.rs:959:9-959:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_75) -> [return: bb83, unwind: bb109]
  }
  preds [bb45]
  succs [bb83, bb109]

bb47
  0: StorageDead(_83)
    SourceInfo(src/regex/bytes.rs:957:30-957:31)
  1: StorageDead(_82)
    SourceInfo(src/regex/bytes.rs:957:30-957:31)
  2: _80 = const ()
    SourceInfo(src/regex/bytes.rs:959:10-959:10)
  3: StorageDead(_81)
    SourceInfo(src/regex/bytes.rs:959:9-959:10)
  4: StorageDead(_80)
    SourceInfo(src/regex/bytes.rs:959:9-959:10)
  5: StorageLive(_87)
    SourceInfo(src/regex/bytes.rs:960:13-960:20)
  6: StorageLive(_88)
    SourceInfo(src/regex/bytes.rs:960:42-960:56)
  7: StorageLive(_89)
    SourceInfo(src/regex/bytes.rs:960:42-960:50)
  8: _89 = &(*_2)
    SourceInfo(src/regex/bytes.rs:960:42-960:50)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:960:42-960:56)
      kind: _88 = core::slice::<impl [u8]>::len(move _89) -> [return: bb48, unwind: bb97]
  }
  preds [bb45]
  succs [bb48, bb97]

bb48
  0: StorageDead(_89)
    SourceInfo(src/regex/bytes.rs:960:55-960:56)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:960:23-960:57)
      kind: _87 = alloc::vec::Vec::<u8>::with_capacity(move _88) -> [return: bb49, unwind: bb97]
  }
  preds [bb47]
  succs [bb49, bb97]

bb49
  0: StorageDead(_88)
    SourceInfo(src/regex/bytes.rs:960:56-960:57)
  1: FakeRead(ForLet(None), _87)
    SourceInfo(src/regex/bytes.rs:960:13-960:20)
  2: StorageLive(_90)
    SourceInfo(src/regex/bytes.rs:961:13-961:27)
  3: _90 = const 0_usize
    SourceInfo(src/regex/bytes.rs:961:30-961:31)
  4: FakeRead(ForLet(None), _90)
    SourceInfo(src/regex/bytes.rs:961:13-961:27)
  5: StorageLive(_91)
    SourceInfo(src/regex/bytes.rs:962:9-971:10)
  6: StorageLive(_92)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  7: StorageLive(_93)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  8: _93 = move _75
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:25-962:27)
      kind: _92 = <core::iter::Peekable<core::iter::Enumerate<regex::bytes::CaptureMatches<'_, '_>>> as core::iter::IntoIterator>::into_iter(move _93) -> [return: bb50, unwind: bb95]
  }
  preds [bb48]
  succs [bb50, bb95]

bb50
  0: StorageDead(_93)
    SourceInfo(src/regex/bytes.rs:962:26-962:27)
  1: PlaceMention(_92)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  2: StorageLive(_94)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  3: _94 = move _92
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:9-971:10)
      kind: goto -> bb51
  }
  preds [bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:9-971:10)
      kind: falseUnwind -> [real: bb52, unwind: bb93]
  }
  preds [bb50, bb72]
  succs [bb52, bb93]

bb52
  0: StorageLive(_95)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  1: StorageLive(_96)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  2: StorageLive(_97)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  3: StorageLive(_98)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  4: _98 = &mut _94
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  5: _97 = &mut (*_98)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:25-962:27)
      kind: _96 = <core::iter::Peekable<core::iter::Enumerate<regex::bytes::CaptureMatches<'_, '_>>> as core::iter::Iterator>::next(move _97) -> [return: bb53, unwind: bb93]
  }
  preds [bb51]
  succs [bb53, bb93]

bb53
  0: StorageDead(_97)
    SourceInfo(src/regex/bytes.rs:962:26-962:27)
  1: PlaceMention(_96)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  2: _99 = discriminant(_96)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:25-962:27)
      kind: switchInt(move _99) -> [0: bb55, 1: bb56, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55, bb56]

bb54
  0: FakeRead(ForMatchedPlace(None), _96)
    SourceInfo(src/regex/bytes.rs:962:25-962:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:25-962:27)
      kind: unreachable
  }
  preds [bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:9-971:10)
      kind: falseEdge -> [real: bb57, imaginary: bb56]
  }
  preds [bb53]
  succs [bb56, bb57]

bb56
  0: StorageLive(_101)
    SourceInfo(src/regex/bytes.rs:962:14-962:15)
  1: _101 = (((_96 as Some).0: (usize, regex::bytes::Captures<'_>)).0: usize)
    SourceInfo(src/regex/bytes.rs:962:14-962:15)
  2: StorageLive(_102)
    SourceInfo(src/regex/bytes.rs:962:17-962:20)
  3: _102 = move (((_96 as Some).0: (usize, regex::bytes::Captures<'_>)).1: regex::bytes::Captures<'_>)
    SourceInfo(src/regex/bytes.rs:962:17-962:20)
  4: StorageLive(_103)
    SourceInfo(src/regex/bytes.rs:964:17-964:18)
  5: StorageLive(_104)
    SourceInfo(src/regex/bytes.rs:964:21-964:31)
  6: StorageLive(_105)
    SourceInfo(src/regex/bytes.rs:964:21-964:24)
  7: _105 = &_102
    SourceInfo(src/regex/bytes.rs:964:21-964:24)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:964:21-964:31)
      kind: _104 = regex::bytes::Captures::<'_>::get(move _105, const 0_usize) -> [return: bb58, unwind: bb91]
  }
  preds [bb53, bb55]
  succs [bb58, bb91]

bb57
  0: _91 = const ()
    SourceInfo(src/regex/bytes.rs:962:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:9-971:10)
      kind: goto -> bb74
  }
  preds [bb55]
  succs [bb74]

bb58
  0: StorageDead(_105)
    SourceInfo(src/regex/bytes.rs:964:30-964:31)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:964:21-964:40)
      kind: _103 = core::option::Option::<regex::bytes::Match<'_>>::unwrap(move _104) -> [return: bb59, unwind: bb91]
  }
  preds [bb56]
  succs [bb59, bb91]

bb59
  0: StorageDead(_104)
    SourceInfo(src/regex/bytes.rs:964:39-964:40)
  1: FakeRead(ForLet(None), _103)
    SourceInfo(src/regex/bytes.rs:964:17-964:18)
  2: StorageLive(_106)
    SourceInfo(src/regex/bytes.rs:965:13-965:68)
  3: StorageLive(_107)
    SourceInfo(src/regex/bytes.rs:965:13-965:16)
  4: _107 = &mut _87
    SourceInfo(src/regex/bytes.rs:965:13-965:16)
  5: StorageLive(_108)
    SourceInfo(src/regex/bytes.rs:965:35-965:67)
  6: StorageLive(_109)
    SourceInfo(src/regex/bytes.rs:965:35-965:67)
  7: StorageLive(_110)
    SourceInfo(src/regex/bytes.rs:965:44-965:67)
  8: StorageLive(_111)
    SourceInfo(src/regex/bytes.rs:965:36-965:44)
  9: _111 = &(*_2)
    SourceInfo(src/regex/bytes.rs:965:36-965:44)
  10: StorageLive(_112)
    SourceInfo(src/regex/bytes.rs:965:45-965:66)
  11: StorageLive(_113)
    SourceInfo(src/regex/bytes.rs:965:45-965:55)
  12: _113 = _90
    SourceInfo(src/regex/bytes.rs:965:45-965:55)
  13: StorageLive(_114)
    SourceInfo(src/regex/bytes.rs:965:57-965:66)
  14: StorageLive(_115)
    SourceInfo(src/regex/bytes.rs:965:57-965:58)
  15: _115 = &_103
    SourceInfo(src/regex/bytes.rs:965:57-965:58)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:965:57-965:66)
      kind: _114 = regex::bytes::Match::<'_>::start(move _115) -> [return: bb60, unwind: bb91]
  }
  preds [bb58]
  succs [bb60, bb91]

bb60
  0: StorageDead(_115)
    SourceInfo(src/regex/bytes.rs:965:65-965:66)
  1: _112 = core::ops::Range::<usize> { start: move _113, end: move _114 }
    SourceInfo(src/regex/bytes.rs:965:45-965:66)
  2: StorageDead(_114)
    SourceInfo(src/regex/bytes.rs:965:65-965:66)
  3: StorageDead(_113)
    SourceInfo(src/regex/bytes.rs:965:65-965:66)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:965:44-965:67)
      kind: _110 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _111, move _112) -> [return: bb61, unwind: bb91]
  }
  preds [bb59]
  succs [bb61, bb91]

bb61
  0: StorageDead(_112)
    SourceInfo(src/regex/bytes.rs:965:66-965:67)
  1: StorageDead(_111)
    SourceInfo(src/regex/bytes.rs:965:66-965:67)
  2: _109 = &(*_110)
    SourceInfo(src/regex/bytes.rs:965:35-965:67)
  3: _108 = &(*_109)
    SourceInfo(src/regex/bytes.rs:965:35-965:67)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:965:13-965:68)
      kind: _106 = alloc::vec::Vec::<u8>::extend_from_slice(move _107, move _108) -> [return: bb62, unwind: bb91]
  }
  preds [bb60]
  succs [bb62, bb91]

bb62
  0: StorageDead(_108)
    SourceInfo(src/regex/bytes.rs:965:67-965:68)
  1: StorageDead(_107)
    SourceInfo(src/regex/bytes.rs:965:67-965:68)
  2: StorageDead(_110)
    SourceInfo(src/regex/bytes.rs:965:68-965:69)
  3: StorageDead(_109)
    SourceInfo(src/regex/bytes.rs:965:68-965:69)
  4: StorageDead(_106)
    SourceInfo(src/regex/bytes.rs:965:68-965:69)
  5: StorageLive(_116)
    SourceInfo(src/regex/bytes.rs:966:13-966:47)
  6: StorageLive(_117)
    SourceInfo(src/regex/bytes.rs:966:13-966:16)
  7: _117 = &mut _4
    SourceInfo(src/regex/bytes.rs:966:13-966:16)
  8: StorageLive(_118)
    SourceInfo(src/regex/bytes.rs:966:32-966:36)
  9: StorageLive(_119)
    SourceInfo(src/regex/bytes.rs:966:32-966:36)
  10: _119 = &_102
    SourceInfo(src/regex/bytes.rs:966:32-966:36)
  11: _118 = &(*_119)
    SourceInfo(src/regex/bytes.rs:966:32-966:36)
  12: StorageLive(_120)
    SourceInfo(src/regex/bytes.rs:966:38-966:46)
  13: StorageLive(_121)
    SourceInfo(src/regex/bytes.rs:966:38-966:46)
  14: _121 = &mut _87
    SourceInfo(src/regex/bytes.rs:966:38-966:46)
  15: _120 = &mut (*_121)
    SourceInfo(src/regex/bytes.rs:966:38-966:46)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:966:13-966:47)
      kind: _116 = <R as regex::bytes::Replacer>::replace_append(move _117, move _118, move _120) -> [return: bb63, unwind: bb91]
  }
  preds [bb61]
  succs [bb63, bb91]

bb63
  0: StorageDead(_120)
    SourceInfo(src/regex/bytes.rs:966:46-966:47)
  1: StorageDead(_118)
    SourceInfo(src/regex/bytes.rs:966:46-966:47)
  2: StorageDead(_117)
    SourceInfo(src/regex/bytes.rs:966:46-966:47)
  3: StorageDead(_121)
    SourceInfo(src/regex/bytes.rs:966:47-966:48)
  4: StorageDead(_119)
    SourceInfo(src/regex/bytes.rs:966:47-966:48)
  5: StorageDead(_116)
    SourceInfo(src/regex/bytes.rs:966:47-966:48)
  6: StorageLive(_122)
    SourceInfo(src/regex/bytes.rs:967:26-967:33)
  7: StorageLive(_123)
    SourceInfo(src/regex/bytes.rs:967:26-967:27)
  8: _123 = &_103
    SourceInfo(src/regex/bytes.rs:967:26-967:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:967:26-967:33)
      kind: _122 = regex::bytes::Match::<'_>::end(move _123) -> [return: bb64, unwind: bb91]
  }
  preds [bb62]
  succs [bb64, bb91]

bb64
  0: StorageDead(_123)
    SourceInfo(src/regex/bytes.rs:967:32-967:33)
  1: _90 = move _122
    SourceInfo(src/regex/bytes.rs:967:13-967:33)
  2: StorageDead(_122)
    SourceInfo(src/regex/bytes.rs:967:32-967:33)
  3: StorageLive(_124)
    SourceInfo(src/regex/bytes.rs:968:16-968:25)
  4: StorageLive(_125)
    SourceInfo(src/regex/bytes.rs:968:16-968:21)
  5: _125 = _3
    SourceInfo(src/regex/bytes.rs:968:16-968:21)
  6: _124 = Gt(move _125, const 0_usize)
    SourceInfo(src/regex/bytes.rs:968:16-968:25)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:968:16-968:25)
      kind: switchInt(move _124) -> [0: bb69, otherwise: bb65]
  }
  preds [bb63]
  succs [bb65, bb69]

bb65
  0: StorageDead(_125)
    SourceInfo(src/regex/bytes.rs:968:24-968:25)
  1: StorageLive(_126)
    SourceInfo(src/regex/bytes.rs:968:29-968:43)
  2: StorageLive(_127)
    SourceInfo(src/regex/bytes.rs:968:29-968:30)
  3: _127 = _101
    SourceInfo(src/regex/bytes.rs:968:29-968:30)
  4: StorageLive(_128)
    SourceInfo(src/regex/bytes.rs:968:34-968:43)
  5: StorageLive(_129)
    SourceInfo(src/regex/bytes.rs:968:34-968:39)
  6: _129 = _3
    SourceInfo(src/regex/bytes.rs:968:34-968:39)
  7: _130 = SubWithOverflow(_129, const 1_usize)
    SourceInfo(src/regex/bytes.rs:968:34-968:43)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:968:34-968:43)
      kind: assert(!move (_130.1: bool), "attempt to compute `{} - {}`, which would overflow", move _129, const 1_usize) -> [success: bb66, unwind: bb91]
  }
  preds [bb64]
  succs [bb66, bb91]

bb66
  0: _128 = move (_130.0: usize)
    SourceInfo(src/regex/bytes.rs:968:34-968:43)
  1: StorageDead(_129)
    SourceInfo(src/regex/bytes.rs:968:42-968:43)
  2: _126 = Ge(move _127, move _128)
    SourceInfo(src/regex/bytes.rs:968:29-968:43)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:968:29-968:43)
      kind: switchInt(move _126) -> [0: bb68, otherwise: bb67]
  }
  preds [bb65]
  succs [bb67, bb68]

bb67
  0: StorageDead(_128)
    SourceInfo(src/regex/bytes.rs:968:42-968:43)
  1: StorageDead(_127)
    SourceInfo(src/regex/bytes.rs:968:42-968:43)
  2: _91 = const ()
    SourceInfo(src/regex/bytes.rs:969:17-969:22)
  3: StorageDead(_126)
    SourceInfo(src/regex/bytes.rs:970:13-970:14)
  4: StorageDead(_124)
    SourceInfo(src/regex/bytes.rs:970:13-970:14)
  5: StorageDead(_103)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_102) -> [return: bb73, unwind: bb92]
  }
  preds [bb66]
  succs [bb73, bb92]

bb68
  0: StorageDead(_128)
    SourceInfo(src/regex/bytes.rs:968:42-968:43)
  1: StorageDead(_127)
    SourceInfo(src/regex/bytes.rs:968:42-968:43)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb66]
  succs [bb70]

bb69
  0: StorageDead(_125)
    SourceInfo(src/regex/bytes.rs:968:24-968:25)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb64]
  succs [bb70]

bb70
  0: _95 = const ()
    SourceInfo(src/regex/bytes.rs:970:14-970:14)
  1: StorageDead(_126)
    SourceInfo(src/regex/bytes.rs:970:13-970:14)
  2: StorageDead(_124)
    SourceInfo(src/regex/bytes.rs:970:13-970:14)
  3: StorageDead(_103)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_102) -> [return: bb71, unwind: bb92]
  }
  preds [bb68, bb69]
  succs [bb71, bb92]

bb71
  0: StorageDead(_102)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  1: StorageDead(_101)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_96) -> [return: bb72, unwind: bb93]
  }
  preds [bb70]
  succs [bb72, bb93]

bb72
  0: StorageDead(_98)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  1: StorageDead(_96)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  2: StorageDead(_95)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  3: _31 = const ()
    SourceInfo(src/regex/bytes.rs:962:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:9-971:10)
      kind: goto -> bb51
  }
  preds [bb71]
  succs [bb51]

bb73
  0: StorageDead(_102)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  1: StorageDead(_101)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb74
  }
  preds [bb67]
  succs [bb74]

bb74
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_96) -> [return: bb75, unwind: bb93]
  }
  preds [bb57, bb73]
  succs [bb75, bb93]

bb75
  0: StorageDead(_98)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  1: StorageDead(_96)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  2: StorageDead(_95)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_94) -> [return: bb76, unwind: bb94]
  }
  preds [bb74]
  succs [bb76, bb94]

bb76
  0: StorageDead(_94)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_92) -> [return: bb77, unwind: bb96]
  }
  preds [bb75]
  succs [bb77, bb96]

bb77
  0: StorageDead(_92)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  1: StorageDead(_91)
    SourceInfo(src/regex/bytes.rs:971:9-971:10)
  2: StorageLive(_132)
    SourceInfo(src/regex/bytes.rs:972:9-972:55)
  3: StorageLive(_133)
    SourceInfo(src/regex/bytes.rs:972:9-972:12)
  4: _133 = &mut _87
    SourceInfo(src/regex/bytes.rs:972:9-972:12)
  5: StorageLive(_134)
    SourceInfo(src/regex/bytes.rs:972:31-972:54)
  6: StorageLive(_135)
    SourceInfo(src/regex/bytes.rs:972:31-972:54)
  7: StorageLive(_136)
    SourceInfo(src/regex/bytes.rs:972:40-972:54)
  8: StorageLive(_137)
    SourceInfo(src/regex/bytes.rs:972:32-972:40)
  9: _137 = &(*_2)
    SourceInfo(src/regex/bytes.rs:972:32-972:40)
  10: StorageLive(_138)
    SourceInfo(src/regex/bytes.rs:972:41-972:53)
  11: StorageLive(_139)
    SourceInfo(src/regex/bytes.rs:972:41-972:51)
  12: _139 = _90
    SourceInfo(src/regex/bytes.rs:972:41-972:51)
  13: _138 = core::ops::RangeFrom::<usize> { start: move _139 }
    SourceInfo(src/regex/bytes.rs:972:41-972:53)
  14: StorageDead(_139)
    SourceInfo(src/regex/bytes.rs:972:52-972:53)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:972:40-972:54)
      kind: _136 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _137, move _138) -> [return: bb78, unwind: bb96]
  }
  preds [bb76]
  succs [bb78, bb96]

bb78
  0: StorageDead(_138)
    SourceInfo(src/regex/bytes.rs:972:53-972:54)
  1: StorageDead(_137)
    SourceInfo(src/regex/bytes.rs:972:53-972:54)
  2: _135 = &(*_136)
    SourceInfo(src/regex/bytes.rs:972:31-972:54)
  3: _134 = &(*_135)
    SourceInfo(src/regex/bytes.rs:972:31-972:54)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:972:9-972:55)
      kind: _132 = alloc::vec::Vec::<u8>::extend_from_slice(move _133, move _134) -> [return: bb79, unwind: bb96]
  }
  preds [bb77]
  succs [bb79, bb96]

bb79
  0: StorageDead(_134)
    SourceInfo(src/regex/bytes.rs:972:54-972:55)
  1: StorageDead(_133)
    SourceInfo(src/regex/bytes.rs:972:54-972:55)
  2: StorageDead(_136)
    SourceInfo(src/regex/bytes.rs:972:55-972:56)
  3: StorageDead(_135)
    SourceInfo(src/regex/bytes.rs:972:55-972:56)
  4: StorageDead(_132)
    SourceInfo(src/regex/bytes.rs:972:55-972:56)
  5: StorageLive(_140)
    SourceInfo(src/regex/bytes.rs:973:20-973:23)
  6: _140 = move _87
    SourceInfo(src/regex/bytes.rs:973:20-973:23)
  7: _0 = alloc::borrow::Cow::<'_, [u8]>::Owned(move _140)
    SourceInfo(src/regex/bytes.rs:973:9-973:24)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:973:23-973:24)
      kind: drop(_140) -> [return: bb80, unwind: bb96]
  }
  preds [bb78]
  succs [bb80, bb96]

bb80
  0: StorageDead(_140)
    SourceInfo(src/regex/bytes.rs:973:23-973:24)
  1: StorageDead(_90)
    SourceInfo(src/regex/bytes.rs:974:5-974:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_87) -> [return: bb81, unwind: bb97]
  }
  preds [bb79]
  succs [bb81, bb97]

bb81
  0: StorageDead(_87)
    SourceInfo(src/regex/bytes.rs:974:5-974:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_75) -> [return: bb82, unwind: bb109]
  }
  preds [bb80]
  succs [bb82, bb109]

bb82
  0: StorageDead(_75)
    SourceInfo(src/regex/bytes.rs:974:5-974:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_4) -> [return: bb90, unwind: bb110]
  }
  preds [bb81]
  succs [bb90, bb110]

bb83
  0: StorageDead(_75)
    SourceInfo(src/regex/bytes.rs:974:5-974:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb89
  }
  preds [bb46]
  succs [bb89]

bb84
  0: StorageDead(_23)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb85
  }
  preds [bb38]
  succs [bb85]

bb85
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_11) -> [return: bb86, unwind: bb107]
  }
  preds [bb9, bb84]
  succs [bb86, bb107]

bb86
  0: StorageDead(_11)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_9) -> [return: bb87, unwind: bb108]
  }
  preds [bb85]
  succs [bb87, bb108]

bb87
  0: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_6) -> [return: bb88, unwind: bb109]
  }
  preds [bb86]
  succs [bb88, bb109]

bb88
  0: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  1: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:952:9-952:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb89
  }
  preds [bb87]
  succs [bb89]

bb89
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_4) -> [return: bb90, unwind: bb110]
  }
  preds [bb83, bb88]
  succs [bb90, bb110]

bb90
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:6-974:6)
      kind: return
  }
  preds [bb82, bb89]
  succs []

bb91
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_102) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb56, bb58, bb59, bb60, bb61, bb62, bb63, bb65]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_96) -> [return: bb93, unwind terminate(cleanup)]
  }
  preds [bb67, bb70, bb91]
  succs [bb93]

bb93
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_94) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb51, bb52, bb71, bb74, bb92]
  succs [bb94]

bb94
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:971:9-971:10)
      kind: drop(_92) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb75, bb93]
  succs [bb96]

bb95
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:962:26-962:27)
      kind: drop(_93) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb49]
  succs [bb96]

bb96
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_87) -> [return: bb97, unwind terminate(cleanup)]
  }
  preds [bb76, bb77, bb78, bb79, bb94, bb95]
  succs [bb97]

bb97
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_75) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb43, bb44, bb47, bb48, bb80, bb96]
  succs [bb109]

bb98
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:956:72-956:73)
      kind: drop(_76) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb109]

bb99
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:956:61-956:62)
      kind: drop(_77) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb41]
  succs [bb109]

bb100
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:949:13-949:14)
      kind: drop(_30) -> [return: bb101, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb19, bb21, bb22, bb23, bb24, bb25, bb27]
  succs [bb101]

bb101
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:949:13-949:14)
      kind: drop(_28) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb33, bb100]
  succs [bb103]

bb102
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:942:28-942:29)
      kind: drop(_29) -> [return: bb103, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb103]

bb103
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_23) -> [return: bb104, unwind terminate(cleanup)]
  }
  preds [bb34, bb35, bb36, bb37, bb101, bb102]
  succs [bb104]

bb104
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_11) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb10, bb11, bb38, bb103]
  succs [bb107]

bb105
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:936:72-936:73)
      kind: drop(_12) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb107]

bb106
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:936:61-936:62)
      kind: drop(_13) -> [return: bb107, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb107]

bb107
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_9) -> [return: bb108, unwind terminate(cleanup)]
  }
  preds [bb3, bb85, bb104, bb105, bb106]
  succs [bb108]

bb108
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:952:9-952:10)
      kind: drop(_6) -> [return: bb109, unwind terminate(cleanup)]
  }
  preds [bb86, bb107]
  succs [bb109]

bb109
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:974:5-974:6)
      kind: drop(_4) -> [return: bb110, unwind terminate(cleanup)]
  }
  preds [bb0, bb39, bb40, bb46, bb81, bb87, bb97, bb98, bb99, bb108]
  succs [bb110]

bb110
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:920:5-974:6)
      kind: resume
  }
  preds [bb82, bb89, bb109]
  succs []

