bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/bytes.rs:2174:9-2175:20)
  1: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:2174:9-2174:16)
  2: _3 = &mut ((*_1).1: regex_automata::meta::FindMatches<'_, '_>)
    SourceInfo(src/regex/bytes.rs:2174:9-2174:16)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2174:9-2175:20)
      kind: _2 = <regex_automata::meta::FindMatches<'_, '_> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:2175:19-2175:20)
  1: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:2176:18-2176:70)
  2: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:2176:18-2176:70)
  3: _5 = &(*((*_1).0: &[u8]))
    SourceInfo(src/regex/bytes.rs:2176:18-2176:70)
  4: _4 = {closure@src/regex/bytes.rs:2176:18: 2176:22} { self: move _5 }
    SourceInfo(src/regex/bytes.rs:2176:18-2176:70)
  5: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:2176:21-2176:22)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2174:9-2176:71)
      kind: _0 = core::option::Option::<regex_automata::Match>::map::<regex::bytes::Match<'_>, {closure@src/regex/bytes.rs:2176:18: 2176:22}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:2176:70-2176:71)
  1: StorageDead(_2)
    SourceInfo(src/regex/bytes.rs:2176:70-2176:71)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2177:6-2177:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2173:5-2177:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

