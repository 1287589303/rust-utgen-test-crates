Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).1),
            pat: Pat {
                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).2),
                    self#0,
                    None,
                ),
                span: src/regex/bytes.rs:2173:13: 2173:22 (#0),
                default_binding_modes: true,
            },
            ty_span: src/regex/bytes.rs:2173:13: 2173:22 (#0),
            span: src/regex/bytes.rs:2173:13: 2173:22 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).32),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).3),
                        kind: MethodCall(
                            PathSegment {
                                ident: map#0,
                                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).4),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).5),
                                kind: MethodCall(
                                    PathSegment {
                                        ident: next#0,
                                        hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).6),
                                        res: Err,
                                        args: None,
                                        infer_args: true,
                                    },
                                    Expr {
                                        hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).7),
                                        kind: Field(
                                            Expr {
                                                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).8),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: src/regex/bytes.rs:2174:9: 2174:13 (#0),
                                                            res: Local(
                                                                HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).2),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: self#0,
                                                                    hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).9),
                                                                    res: Local(
                                                                        HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).2),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: src/regex/bytes.rs:2174:9: 2174:13 (#0),
                                            },
                                            it#0,
                                        ),
                                        span: src/regex/bytes.rs:2174:9: 2174:16 (#0),
                                    },
                                    [],
                                    src/regex/bytes.rs:2175:14: 2175:20 (#0),
                                ),
                                span: src/regex/bytes.rs:2174:9: 2175:20 (#0),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).10),
                                    kind: Closure(
                                        Closure {
                                            def_id: DefId(0:317 ~ regex[bf8d]::regex::bytes::{impl#17}::next::{closure#0}),
                                            binder: Default,
                                            constness: NotConst,
                                            capture_clause: Ref,
                                            bound_generic_params: [],
                                            fn_decl: FnDecl {
                                                inputs: [
                                                    Ty {
                                                        hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).30),
                                                        kind: Infer,
                                                        span: src/regex/bytes.rs:2176:19: 2176:21 (#0),
                                                    },
                                                ],
                                                output: DefaultReturn(
                                                    src/regex/bytes.rs:2176:22: 2176:22 (#0),
                                                ),
                                                c_variadic: false,
                                                implicit_self: None,
                                                lifetime_elision_allowed: false,
                                            },
                                            body: BodyId {
                                                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).13),
                                            },
                                            fn_decl_span: src/regex/bytes.rs:2176:18: 2176:22 (#0),
                                            fn_arg_span: Some(
                                                src/regex/bytes.rs:2176:18: 2176:22 (#0),
                                            ),
                                            kind: Closure,
                                        },
                                    ),
                                    span: src/regex/bytes.rs:2176:18: 2176:70 (#0),
                                },
                            ],
                            src/regex/bytes.rs:2176:14: 2176:71 (#0),
                        ),
                        span: src/regex/bytes.rs:2174:9: 2176:71 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:316 ~ regex[bf8d]::regex::bytes::{impl#17}::next).31),
                rules: DefaultBlock,
                span: src/regex/bytes.rs:2173:45: 2177:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/regex/bytes.rs:2173:45: 2177:6 (#0),
    },
}