bb0
  0: StorageLive(_4)
    SourceInfo(src/regex/string.rs:1038:13-1038:18)
  1: StorageLive(_5)
    SourceInfo(src/regex/string.rs:1039:13-1039:48)
  2: StorageLive(_6)
    SourceInfo(src/regex/string.rs:1039:13-1039:33)
  3: StorageLive(_7)
    SourceInfo(src/regex/string.rs:1039:24-1039:32)
  4: _7 = &(*_2)
    SourceInfo(src/regex/string.rs:1039:24-1039:32)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1039:13-1039:33)
      kind: _6 = regex_automata::Input::<'_>::new::<str>(move _7) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_7)
    SourceInfo(src/regex/string.rs:1039:32-1039:33)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1039:13-1039:48)
      kind: _5 = regex_automata::Input::<'_>::earliest(move _6, const true) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_6)
    SourceInfo(src/regex/string.rs:1039:47-1039:48)
  1: StorageLive(_8)
    SourceInfo(src/regex/string.rs:1039:54-1039:75)
  2: StorageLive(_9)
    SourceInfo(src/regex/string.rs:1039:54-1039:59)
  3: _9 = _3
    SourceInfo(src/regex/string.rs:1039:54-1039:59)
  4: StorageLive(_10)
    SourceInfo(src/regex/string.rs:1039:61-1039:75)
  5: StorageLive(_11)
    SourceInfo(src/regex/string.rs:1039:61-1039:69)
  6: _11 = &(*_2)
    SourceInfo(src/regex/string.rs:1039:61-1039:69)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1039:61-1039:75)
      kind: _10 = core::str::<impl str>::len(move _11) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_11)
    SourceInfo(src/regex/string.rs:1039:74-1039:75)
  1: _8 = core::ops::Range::<usize> { start: move _9, end: move _10 }
    SourceInfo(src/regex/string.rs:1039:54-1039:75)
  2: StorageDead(_10)
    SourceInfo(src/regex/string.rs:1039:74-1039:75)
  3: StorageDead(_9)
    SourceInfo(src/regex/string.rs:1039:74-1039:75)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1039:13-1039:76)
      kind: _4 = regex_automata::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _8) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_8)
    SourceInfo(src/regex/string.rs:1039:75-1039:76)
  1: StorageDead(_5)
    SourceInfo(src/regex/string.rs:1039:75-1039:76)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/regex/string.rs:1038:13-1038:18)
  3: StorageLive(_12)
    SourceInfo(src/regex/string.rs:1040:9-1040:38)
  4: StorageLive(_13)
    SourceInfo(src/regex/string.rs:1040:9-1040:18)
  5: _13 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/string.rs:1040:9-1040:18)
  6: StorageLive(_14)
    SourceInfo(src/regex/string.rs:1040:31-1040:37)
  7: StorageLive(_15)
    SourceInfo(src/regex/string.rs:1040:31-1040:37)
  8: _15 = &_4
    SourceInfo(src/regex/string.rs:1040:31-1040:37)
  9: _14 = &(*_15)
    SourceInfo(src/regex/string.rs:1040:31-1040:37)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1040:9-1040:38)
      kind: _12 = regex_automata::meta::Regex::search_half(move _13, move _14) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_14)
    SourceInfo(src/regex/string.rs:1040:37-1040:38)
  1: StorageDead(_13)
    SourceInfo(src/regex/string.rs:1040:37-1040:38)
  2: StorageLive(_16)
    SourceInfo(src/regex/string.rs:1040:43-1040:59)
  3: _16 = {closure@src/regex/string.rs:1040:43: 1040:47}
    SourceInfo(src/regex/string.rs:1040:43-1040:59)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1040:9-1040:60)
      kind: _0 = core::option::Option::<regex_automata::HalfMatch>::map::<usize, {closure@src/regex/string.rs:1040:43: 1040:47}>(move _12, move _16) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_16)
    SourceInfo(src/regex/string.rs:1040:59-1040:60)
  1: StorageDead(_12)
    SourceInfo(src/regex/string.rs:1040:59-1040:60)
  2: StorageDead(_4)
    SourceInfo(src/regex/string.rs:1041:5-1041:6)
  3: StorageDead(_15)
    SourceInfo(src/regex/string.rs:1041:5-1041:6)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1041:6-1041:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1033:5-1041:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

