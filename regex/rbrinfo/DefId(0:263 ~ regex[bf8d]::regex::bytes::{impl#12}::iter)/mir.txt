bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/bytes.rs:1884:39-1884:52)
  1: _2 = &(*((*_1).0: &[u8]))
    SourceInfo(src/regex/bytes.rs:1884:39-1884:52)
  2: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:1884:58-1884:74)
  3: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:1884:58-1884:67)
  4: _4 = &((*_1).1: regex_automata::util::captures::Captures)
    SourceInfo(src/regex/bytes.rs:1884:58-1884:67)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1884:58-1884:74)
      kind: _3 = regex_automata::util::captures::Captures::iter(move _4) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:1884:73-1884:74)
  1: _0 = regex::bytes::SubCaptureMatches::<'_, '_> { haystack: move _2, it: move _3 }
    SourceInfo(src/regex/bytes.rs:1884:9-1884:76)
  2: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:1884:75-1884:76)
  3: StorageDead(_2)
    SourceInfo(src/regex/bytes.rs:1884:75-1884:76)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1885:6-1885:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1883:5-1885:6)
      kind: resume
  }
  preds [bb0]
  succs []

