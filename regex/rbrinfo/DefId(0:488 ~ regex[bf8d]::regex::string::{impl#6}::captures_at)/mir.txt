bb0
  0: StorageLive(_4)
    SourceInfo(src/regex/string.rs:1149:13-1149:18)
  1: StorageLive(_5)
    SourceInfo(src/regex/string.rs:1149:21-1149:41)
  2: StorageLive(_6)
    SourceInfo(src/regex/string.rs:1149:32-1149:40)
  3: _6 = &(*_2)
    SourceInfo(src/regex/string.rs:1149:32-1149:40)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1149:21-1149:41)
      kind: _5 = regex_automata::Input::<'_>::new::<str>(move _6) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_6)
    SourceInfo(src/regex/string.rs:1149:40-1149:41)
  1: StorageLive(_7)
    SourceInfo(src/regex/string.rs:1149:47-1149:68)
  2: StorageLive(_8)
    SourceInfo(src/regex/string.rs:1149:47-1149:52)
  3: _8 = _3
    SourceInfo(src/regex/string.rs:1149:47-1149:52)
  4: StorageLive(_9)
    SourceInfo(src/regex/string.rs:1149:54-1149:68)
  5: StorageLive(_10)
    SourceInfo(src/regex/string.rs:1149:54-1149:62)
  6: _10 = &(*_2)
    SourceInfo(src/regex/string.rs:1149:54-1149:62)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1149:54-1149:68)
      kind: _9 = core::str::<impl str>::len(move _10) -> [return: bb2, unwind: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  0: StorageDead(_10)
    SourceInfo(src/regex/string.rs:1149:67-1149:68)
  1: _7 = core::ops::Range::<usize> { start: move _8, end: move _9 }
    SourceInfo(src/regex/string.rs:1149:47-1149:68)
  2: StorageDead(_9)
    SourceInfo(src/regex/string.rs:1149:67-1149:68)
  3: StorageDead(_8)
    SourceInfo(src/regex/string.rs:1149:67-1149:68)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1149:21-1149:69)
      kind: _4 = regex_automata::Input::<'_>::span::<core::ops::Range<usize>>(move _5, move _7) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageDead(_7)
    SourceInfo(src/regex/string.rs:1149:68-1149:69)
  1: StorageDead(_5)
    SourceInfo(src/regex/string.rs:1149:68-1149:69)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(src/regex/string.rs:1149:13-1149:18)
  3: StorageLive(_11)
    SourceInfo(src/regex/string.rs:1150:13-1150:21)
  4: StorageLive(_12)
    SourceInfo(src/regex/string.rs:1150:24-1150:33)
  5: _12 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/string.rs:1150:24-1150:33)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1150:24-1150:51)
      kind: _11 = regex_automata::meta::Regex::create_captures(move _12) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_12)
    SourceInfo(src/regex/string.rs:1150:50-1150:51)
  1: FakeRead(ForLet(None), _11)
    SourceInfo(src/regex/string.rs:1150:13-1150:21)
  2: StorageLive(_13)
    SourceInfo(src/regex/string.rs:1151:9-1151:53)
  3: StorageLive(_14)
    SourceInfo(src/regex/string.rs:1151:9-1151:18)
  4: _14 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/string.rs:1151:9-1151:18)
  5: StorageLive(_15)
    SourceInfo(src/regex/string.rs:1151:35-1151:41)
  6: StorageLive(_16)
    SourceInfo(src/regex/string.rs:1151:35-1151:41)
  7: _16 = &_4
    SourceInfo(src/regex/string.rs:1151:35-1151:41)
  8: _15 = &(*_16)
    SourceInfo(src/regex/string.rs:1151:35-1151:41)
  9: StorageLive(_17)
    SourceInfo(src/regex/string.rs:1151:43-1151:52)
  10: StorageLive(_18)
    SourceInfo(src/regex/string.rs:1151:43-1151:52)
  11: _18 = &mut _11
    SourceInfo(src/regex/string.rs:1151:43-1151:52)
  12: _17 = &mut (*_18)
    SourceInfo(src/regex/string.rs:1151:43-1151:52)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1151:9-1151:53)
      kind: _13 = regex_automata::meta::Regex::search_captures(move _14, move _15, move _17) -> [return: bb5, unwind: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  0: StorageDead(_17)
    SourceInfo(src/regex/string.rs:1151:52-1151:53)
  1: StorageDead(_15)
    SourceInfo(src/regex/string.rs:1151:52-1151:53)
  2: StorageDead(_14)
    SourceInfo(src/regex/string.rs:1151:52-1151:53)
  3: StorageDead(_18)
    SourceInfo(src/regex/string.rs:1151:53-1151:54)
  4: StorageDead(_16)
    SourceInfo(src/regex/string.rs:1151:53-1151:54)
  5: StorageDead(_13)
    SourceInfo(src/regex/string.rs:1151:53-1151:54)
  6: StorageLive(_19)
    SourceInfo(src/regex/string.rs:1152:12-1152:27)
  7: StorageLive(_20)
    SourceInfo(src/regex/string.rs:1152:12-1152:16)
  8: _20 = &_11
    SourceInfo(src/regex/string.rs:1152:12-1152:16)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1152:12-1152:27)
      kind: _19 = regex_automata::util::captures::Captures::is_match(move _20) -> [return: bb6, unwind: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1152:12-1152:27)
      kind: switchInt(move _19) -> [0: bb11, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_20)
    SourceInfo(src/regex/string.rs:1152:26-1152:27)
  1: StorageLive(_21)
    SourceInfo(src/regex/string.rs:1153:17-1153:36)
  2: StorageLive(_22)
    SourceInfo(src/regex/string.rs:1153:39-1153:43)
  3: _22 = &(*_1)
    SourceInfo(src/regex/string.rs:1153:39-1153:43)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1153:39-1153:65)
      kind: _21 = regex::string::Regex::static_captures_len(move _22) -> [return: bb8, unwind: bb15]
  }
  preds [bb6]
  succs [bb8, bb15]

bb8
  0: StorageDead(_22)
    SourceInfo(src/regex/string.rs:1153:64-1153:65)
  1: FakeRead(ForLet(None), _21)
    SourceInfo(src/regex/string.rs:1153:17-1153:36)
  2: StorageLive(_23)
    SourceInfo(src/regex/string.rs:1154:18-1154:66)
  3: StorageLive(_24)
    SourceInfo(src/regex/string.rs:1154:29-1154:37)
  4: _24 = &(*_2)
    SourceInfo(src/regex/string.rs:1154:29-1154:37)
  5: StorageLive(_25)
    SourceInfo(src/regex/string.rs:1154:39-1154:43)
  6: _25 = move _11
    SourceInfo(src/regex/string.rs:1154:39-1154:43)
  7: StorageLive(_26)
    SourceInfo(src/regex/string.rs:1154:45-1154:64)
  8: _26 = _21
    SourceInfo(src/regex/string.rs:1154:45-1154:64)
  9: _23 = regex::string::Captures::<'_> { haystack: move _24, caps: move _25, static_captures_len: move _26 }
    SourceInfo(src/regex/string.rs:1154:18-1154:66)
  10: StorageDead(_26)
    SourceInfo(src/regex/string.rs:1154:65-1154:66)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1154:65-1154:66)
      kind: drop(_25) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  0: StorageDead(_25)
    SourceInfo(src/regex/string.rs:1154:65-1154:66)
  1: StorageDead(_24)
    SourceInfo(src/regex/string.rs:1154:65-1154:66)
  2: _0 = core::option::Option::<regex::string::Captures<'_>>::Some(move _23)
    SourceInfo(src/regex/string.rs:1154:13-1154:67)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1154:66-1154:67)
      kind: drop(_23) -> [return: bb10, unwind: bb15]
  }
  preds [bb8]
  succs [bb10, bb15]

bb10
  0: StorageDead(_23)
    SourceInfo(src/regex/string.rs:1154:66-1154:67)
  1: StorageDead(_21)
    SourceInfo(src/regex/string.rs:1155:9-1155:10)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1152:9-1157:10)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb11
  0: StorageDead(_20)
    SourceInfo(src/regex/string.rs:1152:26-1152:27)
  1: _0 = core::option::Option::<regex::string::Captures<'_>>::None
    SourceInfo(src/regex/string.rs:1156:13-1156:17)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1152:9-1157:10)
      kind: goto -> bb12
  }
  preds [bb6]
  succs [bb12]

bb12
  0: StorageDead(_19)
    SourceInfo(src/regex/string.rs:1157:9-1157:10)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1158:5-1158:6)
      kind: drop(_11) -> [return: bb13, unwind: bb16]
  }
  preds [bb10, bb11]
  succs [bb13, bb16]

bb13
  0: StorageDead(_11)
    SourceInfo(src/regex/string.rs:1158:5-1158:6)
  1: StorageDead(_4)
    SourceInfo(src/regex/string.rs:1158:5-1158:6)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1158:6-1158:6)
      kind: return
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1154:66-1154:67)
      kind: drop(_23) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1158:5-1158:6)
      kind: drop(_11) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb4, bb5, bb7, bb9, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:1144:5-1158:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb12, bb15]
  succs []

