bb0
  0: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:1241:13-1241:18)
  1: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:1241:21-1241:41)
  2: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:1241:32-1241:40)
  3: _7 = &(*_3)
    SourceInfo(src/regex/bytes.rs:1241:32-1241:40)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1241:21-1241:41)
      kind: _6 = regex_automata::Input::<'_>::new::<[u8]>(move _7) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:1241:40-1241:41)
  1: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:1241:47-1241:68)
  2: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:1241:47-1241:52)
  3: _9 = _4
    SourceInfo(src/regex/bytes.rs:1241:47-1241:52)
  4: StorageLive(_10)
    SourceInfo(src/regex/bytes.rs:1241:54-1241:68)
  5: StorageLive(_11)
    SourceInfo(src/regex/bytes.rs:1241:54-1241:62)
  6: _11 = &(*_3)
    SourceInfo(src/regex/bytes.rs:1241:54-1241:62)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1241:54-1241:68)
      kind: _10 = core::slice::<impl [u8]>::len(move _11) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_11)
    SourceInfo(src/regex/bytes.rs:1241:67-1241:68)
  1: _8 = core::ops::Range::<usize> { start: move _9, end: move _10 }
    SourceInfo(src/regex/bytes.rs:1241:47-1241:68)
  2: StorageDead(_10)
    SourceInfo(src/regex/bytes.rs:1241:67-1241:68)
  3: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:1241:67-1241:68)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1241:21-1241:69)
      kind: _5 = regex_automata::Input::<'_>::span::<core::ops::Range<usize>>(move _6, move _8) -> [return: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:1241:68-1241:69)
  1: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:1241:68-1241:69)
  2: FakeRead(ForLet(None), _5)
    SourceInfo(src/regex/bytes.rs:1241:13-1241:18)
  3: StorageLive(_12)
    SourceInfo(src/regex/bytes.rs:1242:9-1242:55)
  4: StorageLive(_13)
    SourceInfo(src/regex/bytes.rs:1242:9-1242:18)
  5: _13 = &((*_1).0: regex_automata::meta::Regex)
    SourceInfo(src/regex/bytes.rs:1242:9-1242:18)
  6: StorageLive(_14)
    SourceInfo(src/regex/bytes.rs:1242:35-1242:41)
  7: StorageLive(_15)
    SourceInfo(src/regex/bytes.rs:1242:35-1242:41)
  8: _15 = &_5
    SourceInfo(src/regex/bytes.rs:1242:35-1242:41)
  9: _14 = &(*_15)
    SourceInfo(src/regex/bytes.rs:1242:35-1242:41)
  10: StorageLive(_16)
    SourceInfo(src/regex/bytes.rs:1242:43-1242:54)
  11: StorageLive(_17)
    SourceInfo(src/regex/bytes.rs:1242:43-1242:54)
  12: _17 = &mut ((*_2).0: regex_automata::util::captures::Captures)
    SourceInfo(src/regex/bytes.rs:1242:43-1242:54)
  13: _16 = &mut (*_17)
    SourceInfo(src/regex/bytes.rs:1242:43-1242:54)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1242:9-1242:55)
      kind: _12 = regex_automata::meta::Regex::search_captures(move _13, move _14, move _16) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_16)
    SourceInfo(src/regex/bytes.rs:1242:54-1242:55)
  1: StorageDead(_14)
    SourceInfo(src/regex/bytes.rs:1242:54-1242:55)
  2: StorageDead(_13)
    SourceInfo(src/regex/bytes.rs:1242:54-1242:55)
  3: StorageDead(_17)
    SourceInfo(src/regex/bytes.rs:1242:55-1242:56)
  4: StorageDead(_15)
    SourceInfo(src/regex/bytes.rs:1242:55-1242:56)
  5: StorageDead(_12)
    SourceInfo(src/regex/bytes.rs:1242:55-1242:56)
  6: StorageLive(_18)
    SourceInfo(src/regex/bytes.rs:1243:9-1243:27)
  7: StorageLive(_19)
    SourceInfo(src/regex/bytes.rs:1243:9-1243:15)
  8: _19 = &((*_2).0: regex_automata::util::captures::Captures)
    SourceInfo(src/regex/bytes.rs:1243:9-1243:15)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1243:9-1243:27)
      kind: _18 = regex_automata::util::captures::Captures::get_match(move _19) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_19)
    SourceInfo(src/regex/bytes.rs:1243:26-1243:27)
  1: StorageLive(_20)
    SourceInfo(src/regex/bytes.rs:1243:32-1243:76)
  2: StorageLive(_21)
    SourceInfo(src/regex/bytes.rs:1243:32-1243:76)
  3: _21 = &(*_3)
    SourceInfo(src/regex/bytes.rs:1243:32-1243:76)
  4: _20 = {closure@src/regex/bytes.rs:1243:32: 1243:35} { haystack: move _21 }
    SourceInfo(src/regex/bytes.rs:1243:32-1243:76)
  5: StorageDead(_21)
    SourceInfo(src/regex/bytes.rs:1243:34-1243:35)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1243:9-1243:77)
      kind: _0 = core::option::Option::<regex_automata::Match>::map::<regex::bytes::Match<'_>, {closure@src/regex/bytes.rs:1243:32: 1243:35}>(move _18, move _20) -> [return: bb6, unwind: bb7]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_20)
    SourceInfo(src/regex/bytes.rs:1243:76-1243:77)
  1: StorageDead(_18)
    SourceInfo(src/regex/bytes.rs:1243:76-1243:77)
  2: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:1244:5-1244:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1244:6-1244:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1235:5-1244:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5]
  succs []

