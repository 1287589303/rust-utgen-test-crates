bb0
  0: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:1259:9-1259:13)
  1: _5 = &(*_1)
    SourceInfo(src/regex/bytes.rs:1259:9-1259:13)
  2: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:1259:31-1259:35)
  3: _6 = &mut (*_2)
    SourceInfo(src/regex/bytes.rs:1259:31-1259:35)
  4: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:1259:37-1259:45)
  5: _7 = &(*_3)
    SourceInfo(src/regex/bytes.rs:1259:37-1259:45)
  6: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:1259:47-1259:52)
  7: _8 = _4
    SourceInfo(src/regex/bytes.rs:1259:47-1259:52)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1259:9-1259:53)
      kind: _0 = regex::bytes::Regex::captures_read_at(move _5, move _6, move _7, move _8) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:1259:52-1259:53)
  1: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:1259:52-1259:53)
  2: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:1259:52-1259:53)
  3: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:1259:52-1259:53)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1260:6-1260:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1253:5-1260:6)
      kind: resume
  }
  preds [bb0]
  succs []

