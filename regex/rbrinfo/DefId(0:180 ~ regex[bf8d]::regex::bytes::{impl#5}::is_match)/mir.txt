bb0
  0: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:203:9-203:13)
  1: _3 = &(*_1)
    SourceInfo(src/regex/bytes.rs:203:9-203:13)
  2: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:203:26-203:34)
  3: _4 = &(*_2)
    SourceInfo(src/regex/bytes.rs:203:26-203:34)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:203:9-203:38)
      kind: _0 = regex::bytes::Regex::is_match_at(move _3, move _4, const 0_usize) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:203:37-203:38)
  1: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:203:37-203:38)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:204:6-204:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:202:5-204:6)
      kind: resume
  }
  preds [bb0]
  succs []

