bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/string.rs:2599:9-2599:20)
  1: StorageLive(_3)
    SourceInfo(src/regex/string.rs:2599:23-2599:34)
  2: _3 = &(*_1)
    SourceInfo(src/regex/string.rs:2599:23-2599:34)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2599:23-2599:43)
      kind: _2 = <T as core::convert::AsRef<str>>::as_ref(move _3) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_3)
    SourceInfo(src/regex/string.rs:2599:42-2599:43)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/regex/string.rs:2599:9-2599:20)
  2: StorageLive(_4)
    SourceInfo(src/regex/string.rs:2600:11-2600:68)
  3: StorageLive(_5)
    SourceInfo(src/regex/string.rs:2600:45-2600:67)
  4: StorageLive(_6)
    SourceInfo(src/regex/string.rs:2600:45-2600:67)
  5: StorageLive(_7)
    SourceInfo(src/regex/string.rs:2600:45-2600:56)
  6: _7 = &(*_2)
    SourceInfo(src/regex/string.rs:2600:45-2600:56)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2600:45-2600:67)
      kind: _6 = core::str::<impl str>::as_bytes(move _7) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: _5 = &(*_6)
    SourceInfo(src/regex/string.rs:2600:45-2600:67)
  1: StorageDead(_7)
    SourceInfo(src/regex/string.rs:2600:66-2600:67)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2600:11-2600:68)
      kind: _4 = find_byte::find_byte(const 36_u8, move _5) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_5)
    SourceInfo(src/regex/string.rs:2600:67-2600:68)
  1: PlaceMention(_4)
    SourceInfo(src/regex/string.rs:2600:11-2600:68)
  2: _8 = discriminant(_4)
    SourceInfo(src/regex/string.rs:2600:11-2600:68)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2600:5-2600:68)
      kind: switchInt(move _8) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/regex/string.rs:2600:11-2600:68)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2600:11-2600:68)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2601:9-2601:16)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_9)
    SourceInfo(src/regex/string.rs:2602:22-2602:48)
  1: StorageLive(_10)
    SourceInfo(src/regex/string.rs:2602:36-2602:47)
  2: _10 = &(*_2)
    SourceInfo(src/regex/string.rs:2602:36-2602:47)
  3: _9 = alloc::borrow::Cow::<'_, str>::Borrowed(move _10)
    SourceInfo(src/regex/string.rs:2602:22-2602:48)
  4: StorageDead(_10)
    SourceInfo(src/regex/string.rs:2602:47-2602:48)
  5: _0 = core::option::Option::<alloc::borrow::Cow<'_, str>>::Some(move _9)
    SourceInfo(src/regex/string.rs:2602:17-2602:49)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2602:48-2602:49)
      kind: drop(_9) -> [return: bb8, unwind: bb10]
  }
  preds [bb3, bb5]
  succs [bb8, bb10]

bb7
  0: _0 = core::option::Option::<alloc::borrow::Cow<'_, str>>::None
    SourceInfo(src/regex/string.rs:2601:20-2601:24)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2601:20-2601:24)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb8
  0: StorageDead(_9)
    SourceInfo(src/regex/string.rs:2602:48-2602:49)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2602:48-2602:49)
      kind: goto -> bb9
  }
  preds [bb6]
  succs [bb9]

bb9
  0: StorageDead(_2)
    SourceInfo(src/regex/string.rs:2604:1-2604:2)
  1: StorageDead(_6)
    SourceInfo(src/regex/string.rs:2604:1-2604:2)
  2: StorageDead(_4)
    SourceInfo(src/regex/string.rs:2604:1-2604:2)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2604:2-2604:2)
      kind: return
  }
  preds [bb7, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2598:1-2604:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb6]
  succs []

