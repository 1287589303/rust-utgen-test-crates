Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).1),
            pat: Pat {
                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).2),
                    self#0,
                    None,
                ),
                span: src/regex/bytes.rs:2018:18: 2018:26 (#0),
                default_binding_modes: true,
            },
            ty_span: src/regex/bytes.rs:2018:18: 2018:26 (#0),
            span: src/regex/bytes.rs:2018:18: 2018:26 (#0),
        },
        Param {
            hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).3),
            pat: Pat {
                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).4),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).4),
                    name#0,
                    None,
                ),
                span: src/regex/bytes.rs:2018:28: 2018:32 (#0),
                default_binding_modes: true,
            },
            ty_span: src/regex/bytes.rs:2018:34: 2018:41 (#0),
            span: src/regex/bytes.rs:2018:28: 2018:41 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).52),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).5),
                        kind: MethodCall(
                            PathSegment {
                                ident: unwrap_or_else#0,
                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).6),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).7),
                                kind: MethodCall(
                                    PathSegment {
                                        ident: map#0,
                                        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).8),
                                        res: Err,
                                        args: None,
                                        infer_args: true,
                                    },
                                    Expr {
                                        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).9),
                                        kind: MethodCall(
                                            PathSegment {
                                                ident: name#0,
                                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).10),
                                                res: Err,
                                                args: None,
                                                infer_args: true,
                                            },
                                            Expr {
                                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).11),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: src/regex/bytes.rs:2019:9: 2019:13 (#0),
                                                            res: Local(
                                                                HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).2),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: self#0,
                                                                    hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).12),
                                                                    res: Local(
                                                                        HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).2),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: src/regex/bytes.rs:2019:9: 2019:13 (#0),
                                            },
                                            [
                                                Expr {
                                                    hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).13),
                                                    kind: Path(
                                                        Resolved(
                                                            None,
                                                            Path {
                                                                span: src/regex/bytes.rs:2019:19: 2019:23 (#0),
                                                                res: Local(
                                                                    HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).4),
                                                                ),
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: name#0,
                                                                        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).14),
                                                                        res: Local(
                                                                            HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).4),
                                                                        ),
                                                                        args: None,
                                                                        infer_args: true,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    span: src/regex/bytes.rs:2019:19: 2019:23 (#0),
                                                },
                                            ],
                                            src/regex/bytes.rs:2019:14: 2019:24 (#0),
                                        ),
                                        span: src/regex/bytes.rs:2019:9: 2019:24 (#0),
                                    },
                                    [
                                        Expr {
                                            hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).15),
                                            kind: Closure(
                                                Closure {
                                                    def_id: DefId(0:304 ~ regex[bf8d]::regex::bytes::{impl#15}::index::{closure#0}),
                                                    binder: Default,
                                                    constness: NotConst,
                                                    capture_clause: Ref,
                                                    bound_generic_params: [],
                                                    fn_decl: FnDecl {
                                                        inputs: [
                                                            Ty {
                                                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).22),
                                                                kind: Infer,
                                                                span: src/regex/bytes.rs:2020:19: 2020:20 (#0),
                                                            },
                                                        ],
                                                        output: DefaultReturn(
                                                            src/regex/bytes.rs:2020:21: 2020:21 (#0),
                                                        ),
                                                        c_variadic: false,
                                                        implicit_self: None,
                                                        lifetime_elision_allowed: false,
                                                    },
                                                    body: BodyId {
                                                        hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).18),
                                                    },
                                                    fn_decl_span: src/regex/bytes.rs:2020:18: 2020:21 (#0),
                                                    fn_arg_span: Some(
                                                        src/regex/bytes.rs:2020:18: 2020:21 (#0),
                                                    ),
                                                    kind: Closure,
                                                },
                                            ),
                                            span: src/regex/bytes.rs:2020:18: 2020:34 (#0),
                                        },
                                    ],
                                    src/regex/bytes.rs:2020:14: 2020:35 (#0),
                                ),
                                span: src/regex/bytes.rs:2019:9: 2020:35 (#0),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).23),
                                    kind: Closure(
                                        Closure {
                                            def_id: DefId(0:305 ~ regex[bf8d]::regex::bytes::{impl#15}::index::{closure#1}),
                                            binder: Default,
                                            constness: NotConst,
                                            capture_clause: Ref,
                                            bound_generic_params: [],
                                            fn_decl: FnDecl {
                                                inputs: [],
                                                output: DefaultReturn(
                                                    src/regex/bytes.rs:2021:31: 2021:31 (#0),
                                                ),
                                                c_variadic: false,
                                                implicit_self: None,
                                                lifetime_elision_allowed: false,
                                            },
                                            body: BodyId {
                                                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).24),
                                            },
                                            fn_decl_span: src/regex/bytes.rs:2021:29: 2021:31 (#0),
                                            fn_arg_span: Some(
                                                src/regex/bytes.rs:2021:29: 2021:31 (#0),
                                            ),
                                            kind: Closure,
                                        },
                                    ),
                                    span: src/regex/bytes.rs:2021:29: 2021:67 (#0),
                                },
                            ],
                            src/regex/bytes.rs:2021:14: 2021:68 (#0),
                        ),
                        span: src/regex/bytes.rs:2019:9: 2021:68 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:302 ~ regex[bf8d]::regex::bytes::{impl#15}::index).51),
                rules: DefaultBlock,
                span: src/regex/bytes.rs:2018:55: 2022:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: src/regex/bytes.rs:2018:55: 2022:6 (#0),
    },
}