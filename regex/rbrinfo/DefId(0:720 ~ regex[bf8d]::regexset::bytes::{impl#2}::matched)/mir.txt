bb0
  0: StorageLive(_3)
    SourceInfo(src/regexset/bytes.rs:529:9-529:15)
  1: _3 = &((*_1).0: regex_automata::PatternSet)
    SourceInfo(src/regexset/bytes.rs:529:9-529:15)
  2: StorageLive(_4)
    SourceInfo(src/regexset/bytes.rs:529:25-529:56)
  3: StorageLive(_5)
    SourceInfo(src/regexset/bytes.rs:529:50-529:55)
  4: _5 = _2
    SourceInfo(src/regexset/bytes.rs:529:50-529:55)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:529:25-529:56)
      kind: _4 = regex_automata::PatternID::new_unchecked(move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/regexset/bytes.rs:529:55-529:56)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:529:9-529:57)
      kind: _0 = regex_automata::PatternSet::contains(move _3, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/regexset/bytes.rs:529:56-529:57)
  1: StorageDead(_3)
    SourceInfo(src/regexset/bytes.rs:529:56-529:57)
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:530:6-530:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regexset/bytes.rs:528:5-530:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

