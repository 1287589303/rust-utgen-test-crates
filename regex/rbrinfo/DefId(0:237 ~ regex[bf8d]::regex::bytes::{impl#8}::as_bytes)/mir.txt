bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/bytes.rs:1546:9-1546:37)
  1: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:1546:23-1546:37)
  2: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:1546:10-1546:23)
  3: _4 = &(*((*_1).0: &[u8]))
    SourceInfo(src/regex/bytes.rs:1546:10-1546:23)
  4: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:1546:24-1546:36)
  5: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:1546:24-1546:28)
  6: _6 = &(*_1)
    SourceInfo(src/regex/bytes.rs:1546:24-1546:28)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1546:24-1546:36)
      kind: _5 = regex::bytes::Match::<'_>::range(move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:1546:35-1546:36)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1546:23-1546:37)
      kind: _3 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _4, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:1546:36-1546:37)
  1: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:1546:36-1546:37)
  2: _2 = &(*_3)
    SourceInfo(src/regex/bytes.rs:1546:9-1546:37)
  3: _0 = &(*_2)
    SourceInfo(src/regex/bytes.rs:1546:9-1546:37)
  4: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:1547:5-1547:6)
  5: StorageDead(_2)
    SourceInfo(src/regex/bytes.rs:1547:5-1547:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1547:6-1547:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:1545:5-1547:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

