bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/string.rs:2305:9-2305:23)
  1: StorageLive(_3)
    SourceInfo(src/regex/string.rs:2305:9-2305:16)
  2: _3 = &mut ((*_1).1: regex_automata::meta::SplitN<'_, '_>)
    SourceInfo(src/regex/string.rs:2305:9-2305:16)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2305:9-2305:23)
      kind: _2 = <regex_automata::meta::SplitN<'_, '_> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(src/regex/string.rs:2305:22-2305:23)
  1: StorageLive(_4)
    SourceInfo(src/regex/string.rs:2305:28-2305:55)
  2: StorageLive(_5)
    SourceInfo(src/regex/string.rs:2305:28-2305:55)
  3: _5 = &(*((*_1).0: &str))
    SourceInfo(src/regex/string.rs:2305:28-2305:55)
  4: _4 = {closure@src/regex/string.rs:2305:28: 2305:34} { self: move _5 }
    SourceInfo(src/regex/string.rs:2305:28-2305:55)
  5: StorageDead(_5)
    SourceInfo(src/regex/string.rs:2305:33-2305:34)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2305:9-2305:56)
      kind: _0 = core::option::Option::<regex_automata::Span>::map::<&str, {closure@src/regex/string.rs:2305:28: 2305:34}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/regex/string.rs:2305:55-2305:56)
  1: StorageDead(_2)
    SourceInfo(src/regex/string.rs:2305:55-2305:56)
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2306:6-2306:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regex/string.rs:2304:5-2306:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

