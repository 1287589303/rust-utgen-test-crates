bb0
  0: StorageLive(_2)
    SourceInfo(src/regex/bytes.rs:2612:9-2612:20)
  1: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:2612:23-2612:34)
  2: _3 = &(*_1)
    SourceInfo(src/regex/bytes.rs:2612:23-2612:34)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2612:23-2612:43)
      kind: _2 = <T as core::convert::AsRef<[u8]>>::as_ref(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:2612:42-2612:43)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/regex/bytes.rs:2612:9-2612:20)
  2: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
  3: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:2613:45-2613:56)
  4: _5 = &(*_2)
    SourceInfo(src/regex/bytes.rs:2613:45-2613:56)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
      kind: _4 = find_byte::find_byte(const 36_u8, move _5) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:2613:56-2613:57)
  1: PlaceMention(_4)
    SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
  2: _6 = discriminant(_4)
    SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2613:5-2613:57)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2613:11-2613:57)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2614:9-2614:16)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:2615:22-2615:48)
  1: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:2615:36-2615:47)
  2: _8 = &(*_2)
    SourceInfo(src/regex/bytes.rs:2615:36-2615:47)
  3: _7 = alloc::borrow::Cow::<'_, [u8]>::Borrowed(move _8)
    SourceInfo(src/regex/bytes.rs:2615:22-2615:48)
  4: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:2615:47-2615:48)
  5: _0 = core::option::Option::<alloc::borrow::Cow<'_, [u8]>>::Some(move _7)
    SourceInfo(src/regex/bytes.rs:2615:17-2615:49)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2615:48-2615:49)
      kind: drop(_7) -> [return: bb7, unwind: bb9]
  }
  preds [bb2, bb4]
  succs [bb7, bb9]

bb6
  0: _0 = core::option::Option::<alloc::borrow::Cow<'_, [u8]>>::None
    SourceInfo(src/regex/bytes.rs:2614:20-2614:24)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2614:20-2614:24)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb7
  0: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:2615:48-2615:49)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2615:48-2615:49)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb8
  0: StorageDead(_2)
    SourceInfo(src/regex/bytes.rs:2617:1-2617:2)
  1: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:2617:1-2617:2)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2617:2-2617:2)
      kind: return
  }
  preds [bb6, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2611:1-2617:2)
      kind: resume
  }
  preds [bb0, bb1, bb5]
  succs []

