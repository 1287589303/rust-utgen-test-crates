bb0
  0: StorageLive(_2)
    SourceInfo(src/error.rs:36:35-36:51)
  1: StorageLive(_3)
    SourceInfo(src/error.rs:36:35-36:38)
  2: _3 = &_1
    SourceInfo(src/error.rs:36:35-36:38)
  Terminator {
      source_info: SourceInfo(src/error.rs:36:35-36:51)
      kind: _2 = regex_automata::meta::BuildError::size_limit(move _3) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_3)
    SourceInfo(src/error.rs:36:50-36:51)
  1: PlaceMention(_2)
    SourceInfo(src/error.rs:36:35-36:51)
  2: _4 = discriminant(_2)
    SourceInfo(src/error.rs:36:35-36:51)
  Terminator {
      source_info: SourceInfo(src/error.rs:36:16-36:32)
      kind: switchInt(move _4) -> [1: bb2, otherwise: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  Terminator {
      source_info: SourceInfo(src/error.rs:36:16-36:32)
      kind: falseEdge -> [real: bb3, imaginary: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageLive(_5)
    SourceInfo(src/error.rs:36:21-36:31)
  1: _5 = ((_2 as Some).0: usize)
    SourceInfo(src/error.rs:36:21-36:31)
  2: StorageLive(_6)
    SourceInfo(src/error.rs:37:35-37:45)
  3: _6 = _5
    SourceInfo(src/error.rs:37:35-37:45)
  4: _0 = error::Error::CompiledTooBig(move _6)
    SourceInfo(src/error.rs:37:13-37:46)
  5: StorageDead(_6)
    SourceInfo(src/error.rs:37:45-37:46)
  6: StorageDead(_5)
    SourceInfo(src/error.rs:38:9-38:10)
  Terminator {
      source_info: SourceInfo(src/error.rs:36:9-52:10)
      kind: goto -> bb14
  }
  preds [bb2]
  succs [bb14]

bb4
  0: StorageLive(_7)
    SourceInfo(src/error.rs:38:39-38:57)
  1: StorageLive(_8)
    SourceInfo(src/error.rs:38:39-38:42)
  2: _8 = &_1
    SourceInfo(src/error.rs:38:39-38:42)
  Terminator {
      source_info: SourceInfo(src/error.rs:38:39-38:57)
      kind: _7 = regex_automata::meta::BuildError::syntax_error(move _8) -> [return: bb5, unwind: bb16]
  }
  preds [bb1, bb2]
  succs [bb5, bb16]

bb5
  0: StorageDead(_8)
    SourceInfo(src/error.rs:38:56-38:57)
  1: PlaceMention(_7)
    SourceInfo(src/error.rs:38:39-38:57)
  2: _9 = discriminant(_7)
    SourceInfo(src/error.rs:38:39-38:57)
  Terminator {
      source_info: SourceInfo(src/error.rs:38:23-38:36)
      kind: switchInt(move _9) -> [1: bb6, otherwise: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  Terminator {
      source_info: SourceInfo(src/error.rs:38:23-38:36)
      kind: falseEdge -> [real: bb7, imaginary: bb10]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: StorageLive(_10)
    SourceInfo(src/error.rs:38:28-38:35)
  1: _10 = &((_7 as Some).0: &regex_syntax::Error)
    SourceInfo(src/error.rs:38:28-38:35)
  2: StorageLive(_11)
    SourceInfo(src/error.rs:39:27-39:42)
  3: StorageLive(_12)
    SourceInfo(src/error.rs:39:27-39:30)
  4: _12 = &(*_10)
    SourceInfo(src/error.rs:39:27-39:30)
  Terminator {
      source_info: SourceInfo(src/error.rs:39:27-39:42)
      kind: _11 = <&regex_syntax::Error as alloc::string::ToString>::to_string(move _12) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_12)
    SourceInfo(src/error.rs:39:41-39:42)
  1: _0 = error::Error::Syntax(move _11)
    SourceInfo(src/error.rs:39:13-39:43)
  Terminator {
      source_info: SourceInfo(src/error.rs:39:42-39:43)
      kind: drop(_11) -> [return: bb9, unwind: bb16]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: StorageDead(_11)
    SourceInfo(src/error.rs:39:42-39:43)
  1: StorageDead(_10)
    SourceInfo(src/error.rs:40:9-40:10)
  Terminator {
      source_info: SourceInfo(src/error.rs:38:16-52:10)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageLive(_13)
    SourceInfo(src/error.rs:51:27-51:42)
  1: StorageLive(_14)
    SourceInfo(src/error.rs:51:27-51:30)
  2: _14 = &_1
    SourceInfo(src/error.rs:51:27-51:30)
  Terminator {
      source_info: SourceInfo(src/error.rs:51:27-51:42)
      kind: _13 = <regex_automata::meta::BuildError as alloc::string::ToString>::to_string(move _14) -> [return: bb11, unwind: bb16]
  }
  preds [bb5, bb6]
  succs [bb11, bb16]

bb11
  0: StorageDead(_14)
    SourceInfo(src/error.rs:51:41-51:42)
  1: _0 = error::Error::Syntax(move _13)
    SourceInfo(src/error.rs:51:13-51:43)
  Terminator {
      source_info: SourceInfo(src/error.rs:51:42-51:43)
      kind: drop(_13) -> [return: bb12, unwind: bb16]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: StorageDead(_13)
    SourceInfo(src/error.rs:51:42-51:43)
  Terminator {
      source_info: SourceInfo(src/error.rs:38:16-52:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_7)
    SourceInfo(src/error.rs:52:9-52:10)
  Terminator {
      source_info: SourceInfo(src/error.rs:36:9-52:10)
      kind: goto -> bb14
  }
  preds [bb9, bb12]
  succs [bb14]

bb14
  0: StorageDead(_2)
    SourceInfo(src/error.rs:53:5-53:6)
  Terminator {
      source_info: SourceInfo(src/error.rs:53:5-53:6)
      kind: drop(_1) -> [return: bb15, unwind: bb17]
  }
  preds [bb3, bb13]
  succs [bb15, bb17]

bb15
  Terminator {
      source_info: SourceInfo(src/error.rs:53:6-53:6)
      kind: return
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/error.rs:53:5-53:6)
      kind: drop(_1) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb7, bb8, bb10, bb11]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(src/error.rs:35:5-53:6)
      kind: resume
  }
  preds [bb14, bb16]
  succs []

