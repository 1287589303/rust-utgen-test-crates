bb0
  0: StorageLive(_3)
    SourceInfo(src/regex/bytes.rs:2093:9-2093:28)
  1: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:2093:9-2093:15)
  2: _4 = &((*_1).0: regex_automata::util::captures::Captures)
    SourceInfo(src/regex/bytes.rs:2093:9-2093:15)
  3: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:2093:26-2093:27)
  4: _5 = _2
    SourceInfo(src/regex/bytes.rs:2093:26-2093:27)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2093:9-2093:28)
      kind: _3 = regex_automata::util::captures::Captures::get_group(move _4, move _5) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:2093:27-2093:28)
  1: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:2093:27-2093:28)
  2: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:2093:33-2093:56)
  3: _6 = {closure@src/regex/bytes.rs:2093:33: 2093:37}
    SourceInfo(src/regex/bytes.rs:2093:33-2093:56)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2093:9-2093:57)
      kind: _0 = core::option::Option::<regex_automata::Span>::map::<(usize, usize), {closure@src/regex/bytes.rs:2093:33: 2093:37}>(move _3, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:2093:56-2093:57)
  1: StorageDead(_3)
    SourceInfo(src/regex/bytes.rs:2093:56-2093:57)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2094:6-2094:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2092:5-2094:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

