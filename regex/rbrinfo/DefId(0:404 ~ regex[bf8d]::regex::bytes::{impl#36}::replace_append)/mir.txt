bb0
  0: StorageLive(_4)
    SourceInfo(src/regex/bytes.rs:2524:9-2524:40)
  1: StorageLive(_5)
    SourceInfo(src/regex/bytes.rs:2524:9-2524:13)
  2: _5 = &(*_2)
    SourceInfo(src/regex/bytes.rs:2524:9-2524:13)
  3: StorageLive(_6)
    SourceInfo(src/regex/bytes.rs:2524:21-2524:34)
  4: StorageLive(_7)
    SourceInfo(src/regex/bytes.rs:2524:21-2524:34)
  5: StorageLive(_8)
    SourceInfo(src/regex/bytes.rs:2524:21-2524:25)
  6: _8 = &_1
    SourceInfo(src/regex/bytes.rs:2524:21-2524:25)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2524:21-2524:34)
      kind: _7 = <&mut alloc::borrow::Cow<'_, [u8]> as core::convert::AsRef<[u8]>>::as_ref(move _8) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _6 = &(*_7)
    SourceInfo(src/regex/bytes.rs:2524:21-2524:34)
  1: StorageDead(_8)
    SourceInfo(src/regex/bytes.rs:2524:33-2524:34)
  2: StorageLive(_9)
    SourceInfo(src/regex/bytes.rs:2524:36-2524:39)
  3: _9 = &mut (*_3)
    SourceInfo(src/regex/bytes.rs:2524:36-2524:39)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2524:9-2524:40)
      kind: _4 = regex::bytes::Captures::<'_>::expand(move _5, move _6, move _9) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_9)
    SourceInfo(src/regex/bytes.rs:2524:39-2524:40)
  1: StorageDead(_6)
    SourceInfo(src/regex/bytes.rs:2524:39-2524:40)
  2: StorageDead(_5)
    SourceInfo(src/regex/bytes.rs:2524:39-2524:40)
  3: StorageDead(_7)
    SourceInfo(src/regex/bytes.rs:2524:40-2524:41)
  4: StorageDead(_4)
    SourceInfo(src/regex/bytes.rs:2524:40-2524:41)
  5: _0 = const ()
    SourceInfo(src/regex/bytes.rs:2523:74-2525:6)
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2525:6-2525:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/regex/bytes.rs:2523:5-2525:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

