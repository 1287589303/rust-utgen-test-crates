{
  "name": "regex_syntax::is_meta_character",
  "mod_info": {
    "name": "",
    "loc": "regex-syntax/src/lib.rs:1:1:431:2"
  },
  "visible": true,
  "loc": "regex-syntax/src/lib.rs:260:1:266:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: c matches '*' at line 262 is true\n",
        "precondition: c matches '#' at line 263 is true\n",
        "precondition: c matches '[' at line 262 is true\n",
        "precondition: c matches '}' at line 263 is true\n",
        "precondition: c matches '&' at line 263 is true\n",
        "precondition: c matches '$' at line 263 is true\n",
        "precondition: c matches '+' at line 262 is true\n",
        "precondition: c matches ']' at line 262 is true\n",
        "precondition: c matches '~' at line 263 is true\n",
        "precondition: c matches '{' at line 262 is true\n",
        "precondition: c matches '^' at line 263 is true\n",
        "precondition: c matches '?' at line 262 is true\n",
        "precondition: c matches '-' at line 263 is true\n",
        "precondition: c matches '|' at line 262 is true\n",
        "precondition: c matches '\\\\' at line 262 is true\n",
        "precondition: c matches ')' at line 262 is true\n",
        "precondition: c matches '.' at line 262 is true\n",
        "precondition: c matches '(' at line 262 is true\n",
        "precondition: c matches _ at line 264 is true\n",
        "expected return value/type: false\n"
      ],
      "input_infer": "c = '%' or c = '/' or c = '!' or c = '\"' or c = 'e'\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('%');",
                "}"
              ],
              "oracle": [
                "    assert!(!is_meta_character('%'));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('%');",
                "    assert!(!is_meta_character('%'));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('/');",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('%'), false);",
                "    assert_eq!(is_meta_character('/'), false);",
                "    assert_eq!(is_meta_character('!'), false);",
                "    assert_eq!(is_meta_character('\"'), false);",
                "    assert_eq!(is_meta_character('e'), false);"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('/');",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('%'), false);",
                "    assert_eq!(is_meta_character('/'), false);",
                "    assert_eq!(is_meta_character('!'), false);",
                "    assert_eq!(is_meta_character('\"'), false);",
                "    assert_eq!(is_meta_character('e'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('!');",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('!'), false);",
                "    assert_eq!(is_meta_character('e'), false);",
                "    assert_eq!(is_meta_character('/'), false);",
                "    assert_eq!(is_meta_character('%'), false);",
                "    assert_eq!(is_meta_character('\"'), false);"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('!');",
                "    assert_eq!(is_meta_character('!'), false);",
                "    assert_eq!(is_meta_character('e'), false);",
                "    assert_eq!(is_meta_character('/'), false);",
                "    assert_eq!(is_meta_character('%'), false);",
                "    assert_eq!(is_meta_character('\"'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('\"');",
                "}"
              ],
              "oracle": [
                "    assert!(!is_meta_character('\"'));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('\"');",
                "    assert!(!is_meta_character('\"'));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('e');",
                "}"
              ],
              "oracle": [
                "    assert!(!is_meta_character('*'));",
                "    assert!(!is_meta_character('#'));",
                "    assert!(!is_meta_character('['));",
                "    assert!(!is_meta_character('}'));",
                "    assert!(!is_meta_character('&'));",
                "    assert!(!is_meta_character('$'));",
                "    assert!(!is_meta_character('+'));",
                "    assert!(!is_meta_character(']'));",
                "    assert!(!is_meta_character('~'));",
                "    assert!(!is_meta_character('{'));",
                "    assert!(!is_meta_character('^'));",
                "    assert!(!is_meta_character('?'));",
                "    assert!(!is_meta_character('-'));",
                "    assert!(!is_meta_character('|'));",
                "    assert!(!is_meta_character('\\\\'));",
                "    assert!(!is_meta_character(')'));",
                "    assert!(!is_meta_character('.'));",
                "    assert!(!is_meta_character('('));",
                "    assert!(!is_meta_character('%'));",
                "    assert!(!is_meta_character('/'));",
                "    assert!(!is_meta_character('!'));",
                "    assert!(!is_meta_character('\"'));",
                "    assert!(!is_meta_character('e'));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('e');",
                "    assert!(!is_meta_character('*'));",
                "    assert!(!is_meta_character('#'));",
                "    assert!(!is_meta_character('['));",
                "    assert!(!is_meta_character('}'));",
                "    assert!(!is_meta_character('&'));",
                "    assert!(!is_meta_character('$'));",
                "    assert!(!is_meta_character('+'));",
                "    assert!(!is_meta_character(']'));",
                "    assert!(!is_meta_character('~'));",
                "    assert!(!is_meta_character('{'));",
                "    assert!(!is_meta_character('^'));",
                "    assert!(!is_meta_character('?'));",
                "    assert!(!is_meta_character('-'));",
                "    assert!(!is_meta_character('|'));",
                "    assert!(!is_meta_character('\\\\'));",
                "    assert!(!is_meta_character(')'));",
                "    assert!(!is_meta_character('.'));",
                "    assert!(!is_meta_character('('));",
                "    assert!(!is_meta_character('%'));",
                "    assert!(!is_meta_character('/'));",
                "    assert!(!is_meta_character('!'));",
                "    assert!(!is_meta_character('\"'));",
                "    assert!(!is_meta_character('e'));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 19,
      "prompt_conds": [
        "precondition: c matches '\\\\' at line 262 is true\n",
        "precondition: c matches '*' or '#' or '[' or '}' or '&' or '$' or '+' or ']' or '~' or '{' or '^' or '?' or '-' or '|' or '\\\\' or ')' or '.' or '(' at line 261 is true\n",
        "expected return value/type: true\n"
      ],
      "input_infer": "Test input conditions or ranges: input characters must include any of the following: '\\\\', '.', '+', '*', '?', '(', ')', '|', '[', ']', '{', '}', '^', '$', '#', '&', '-', '~' to return true.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('\\\\');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('\\\\');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('.');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('.');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('+');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('+');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('*');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('*');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('?');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('?');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('(');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('(');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character(')');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character(')');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('|');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('|');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('[');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('[');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character(']');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character(']');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('{');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('{');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('}');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('~') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('(') == true);"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('}');",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('~') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('(') == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('^');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('^');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('$');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('$');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('#');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('#');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('&');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('&');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('-');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('-');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = is_meta_character('~');",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));"
              ],
              "code": [
                "{",
                "    let result = is_meta_character('~');",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('~'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('('));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}