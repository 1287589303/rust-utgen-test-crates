{
  "name": "regex_automata::util::wire::{impl#3}::version_mismatch",
  "mod_info": {
    "name": "util::wire",
    "loc": "regex-automata/src/util/mod.rs:46:1:46:14"
  },
  "visible": false,
  "loc": "regex-automata/src/util/wire.rs:167:5:172:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: DeserializeError(DeserializeErrorKind::VersionMismatch {\n            expected,\n            found,\n        })\n"
      ],
      "input_infer": "0 <= expected <= 4294967295, 0 <= found <= 4294967295\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 0;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    let expected = 0;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 1;",
                "    let found = 2;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = u32::MAX;",
                "    let found = u32::MAX;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 42;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 0;",
                "    let found = 42;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });"
              ],
              "code": [
                "{",
                "    let expected = 0;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    let expected = 0;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 1;",
                "    let found = 2;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = u32::MAX;",
                "    let found = u32::MAX;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 42;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "    ",
                "    let expected = 0;",
                "    let found = 42;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 0;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    let expected = 0;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected: 0, found: 4294967295 }));"
              ],
              "code": [
                "{",
                "    let expected = 0;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    let expected = 0;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected: 0, found: 4294967295 }));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 4294967295;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });"
              ],
              "code": [
                "{",
                "    let expected = 4294967295;",
                "    let found = 0;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected, found });",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 4294967295;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected: 4294967295, found: 4294967295 });"
              ],
              "code": [
                "{",
                "    let expected = 4294967295;",
                "    let found = 4294967295;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected: 4294967295, found: 4294967295 });",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 2147483648;",
                "    let found = 2147483648;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected: 2147483648, found: 2147483648 }));"
              ],
              "code": [
                "{",
                "    let expected = 2147483648;",
                "    let found = 2147483648;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected: 2147483648, found: 2147483648 }));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 1;",
                "    let found = 1;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected: 1, found: 1 });"
              ],
              "code": [
                "{",
                "    let expected = 1;",
                "    let found = 1;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    assert_eq!(error.0, DeserializeErrorKind::VersionMismatch { expected: 1, found: 1 });",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let expected = 4294967294;",
                "    let found = 4294967294;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "}"
              ],
              "oracle": [
                "    error = DeserializeError::version_mismatch(4294967294, 4294967294);",
                "    assert!(matches!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected, found }) if expected == 4294967294 && found == 4294967294));"
              ],
              "code": [
                "{",
                "    let expected = 4294967294;",
                "    let found = 4294967294;",
                "    let error = DeserializeError::version_mismatch(expected, found);",
                "    error = DeserializeError::version_mismatch(4294967294, 4294967294);",
                "    assert!(matches!(error, DeserializeError(DeserializeErrorKind::VersionMismatch { expected, found }) if expected == 4294967294 && found == 4294967294));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}