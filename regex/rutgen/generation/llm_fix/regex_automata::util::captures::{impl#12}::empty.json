{
  "name": "regex_automata::util::captures::{impl#12}::empty",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": false,
  "loc": "regex-automata/src/util/captures.rs:2482:5:2484:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: GroupInfoPatternNames { it: [].iter() }\n"
      ],
      "input_infer": "test input conditions: no input parameters; expected return is an empty GroupInfoPatternNames instance with an empty iterator over an empty slice\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = GroupInfoPatternNames::empty();",
                "    let iter_empty: core::slice::Iter<'static, Option<Arc<str>>> = [].iter();",
                "    assert_eq!(result.it.as_slice(), iter_empty.as_slice());",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result.it.len(), 0);",
                "    assert!(result.it.is_empty());",
                "    assert_eq!(result.it.next(), None);",
                "    assert_eq!(result.it.as_slice(), &[]);",
                "    assert!(result.it.size_hint() == (0, Some(0)));"
              ],
              "code": [
                "{",
                "    let result = GroupInfoPatternNames::empty();",
                "    let iter_empty: core::slice::Iter<'static, Option<Arc<str>>> = [].iter();",
                "    assert_eq!(result.it.as_slice(), iter_empty.as_slice());",
                "    assert_eq!(result.it.len(), 0);",
                "    assert!(result.it.is_empty());",
                "    assert_eq!(result.it.next(), None);",
                "    assert_eq!(result.it.as_slice(), &[]);",
                "    assert!(result.it.size_hint() == (0, Some(0)));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}