{
  "name": "regex::builders::bytes::{impl#0}::dfa_size_limit",
  "mod_info": {
    "name": "builders::bytes",
    "loc": "src/builders.rs:1357:1:2539:2"
  },
  "visible": true,
  "loc": "src/builders.rs:1912:9:1915:10",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: self\n"
      ],
      "input_infer": "dfa_size_limit(bytes: 0 to usize::MAX), including boundary values 0, 1, usize::MAX\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(0);",
                "}"
              ],
              "oracle": [
                "    regex_builder.dfa_size_limit(0);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, 0);",
                "    regex_builder.dfa_size_limit(usize::MAX);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, usize::MAX);",
                "    regex_builder.dfa_size_limit(1024);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, 1024);"
              ],
              "code": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(0);",
                "    regex_builder.dfa_size_limit(0);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, 0);",
                "    regex_builder.dfa_size_limit(usize::MAX);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, usize::MAX);",
                "    regex_builder.dfa_size_limit(1024);",
                "    assert_eq!(regex_builder.builder.metac.hybrid_cache_capacity, 1024);",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(1);",
                "}"
              ],
              "oracle": [
                "    let regex_builder = RegexBuilder::new(\".*\");",
                "    let result = regex_builder.dfa_size_limit(1);",
                "    assert_eq!(result, &mut regex_builder);"
              ],
              "code": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(1);",
                "    let regex_builder = RegexBuilder::new(\".*\");",
                "    let result = regex_builder.dfa_size_limit(1);",
                "    assert_eq!(result, &mut regex_builder);",
                "}"
              ],
              "can_compile": false,
              "repaired": true
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(usize::MAX);",
                "}"
              ],
              "oracle": [
                "    regex_builder.dfa_size_limit(0);",
                "    regex_builder.dfa_size_limit(1);",
                "    regex_builder.dfa_size_limit(1024);",
                "    regex_builder.dfa_size_limit(usize::MAX - 1);",
                "    regex_builder.dfa_size_limit(usize::MAX);"
              ],
              "code": [
                "{",
                "    let mut regex_builder = RegexBuilder::new(\".*\");",
                "    regex_builder.dfa_size_limit(usize::MAX);",
                "    regex_builder.dfa_size_limit(0);",
                "    regex_builder.dfa_size_limit(1);",
                "    regex_builder.dfa_size_limit(1024);",
                "    regex_builder.dfa_size_limit(usize::MAX - 1);",
                "    regex_builder.dfa_size_limit(usize::MAX);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}