{
  "name": "regex_automata::meta::regex::{impl#21}::new",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/regex.rs:3331:5:3337:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Builder {\n            config: Config::default(),\n            ast: ast::parse::ParserBuilder::new(),\n            hir: hir::translate::TranslatorBuilder::new(),\n        }\n"
      ],
      "input_infer": "Instantiate Builder without inputs, expecting default Config, new ParserBuilder, and new TranslatorBuilder instances.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let builder = Builder::new();",
                "    // The builder is created with default configuration.",
                "}"
              ],
              "oracle": [
                "    assert_eq!(builder.config, Config::default());",
                "    assert!(builder.ast.is_initialized());",
                "    assert!(builder.hir.is_initialized());"
              ],
              "code": [
                "{",
                "    let builder = Builder::new();",
                "    // The builder is created with default configuration.",
                "    assert_eq!(builder.config, Config::default());",
                "    assert!(builder.ast.is_initialized());",
                "    assert!(builder.hir.is_initialized());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let builder = Builder::new();",
                "    // The builder's config should be default.",
                "}"
              ],
              "oracle": [
                "    assert_eq!(builder.config, Config::default());",
                "    assert_eq!(builder.ast, ast::parse::ParserBuilder::new());",
                "    assert_eq!(builder.hir, hir::translate::TranslatorBuilder::new());"
              ],
              "code": [
                "{",
                "    let builder = Builder::new();",
                "    // The builder's config should be default.",
                "    assert_eq!(builder.config, Config::default());",
                "    assert_eq!(builder.ast, ast::parse::ParserBuilder::new());",
                "    assert_eq!(builder.hir, hir::translate::TranslatorBuilder::new());",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}