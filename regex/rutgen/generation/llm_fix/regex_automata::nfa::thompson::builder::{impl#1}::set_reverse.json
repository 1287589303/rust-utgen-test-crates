{
  "name": "regex_automata::nfa::thompson::builder::{impl#1}::set_reverse",
  "mod_info": {
    "name": "nfa::thompson::builder",
    "loc": "regex-automata/src/nfa/thompson/mod.rs:58:1:58:13"
  },
  "visible": true,
  "loc": "regex-automata/src/nfa/thompson/builder.rs:1239:5:1241:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "boolean input values for 'yes' which test both setting reverse to true and false\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let mut builder = Builder::new();",
                "    builder.set_reverse(true);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(builder.get_reverse(), true);",
                "    builder.set_reverse(false);",
                "    assert_eq!(builder.get_reverse(), false);",
                "    builder.set_reverse(true);",
                "    assert!(builder.reverse);",
                "    builder.set_reverse(false);",
                "    assert!(!builder.reverse);",
                "    assert!(builder.get_reverse() == false);"
              ],
              "code": [
                "{",
                "    let mut builder = Builder::new();",
                "    builder.set_reverse(true);",
                "    assert_eq!(builder.get_reverse(), true);",
                "    builder.set_reverse(false);",
                "    assert_eq!(builder.get_reverse(), false);",
                "    builder.set_reverse(true);",
                "    assert!(builder.reverse);",
                "    builder.set_reverse(false);",
                "    assert!(!builder.reverse);",
                "    assert!(builder.get_reverse() == false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let mut builder = Builder::new();",
                "    builder.set_reverse(false);",
                "}"
              ],
              "oracle": [
                "    assert!(!builder.get_reverse());",
                "    builder.set_reverse(true);",
                "    assert!(builder.get_reverse());",
                "    builder.set_reverse(false);",
                "    assert!(!builder.get_reverse());"
              ],
              "code": [
                "{",
                "    let mut builder = Builder::new();",
                "    builder.set_reverse(false);",
                "    assert!(!builder.get_reverse());",
                "    builder.set_reverse(true);",
                "    assert!(builder.get_reverse());",
                "    builder.set_reverse(false);",
                "    assert!(!builder.get_reverse());",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}