{
  "name": "regex_automata::hybrid::error::{impl#0}::unsupported_dfa_word_boundary_unicode",
  "mod_info": {
    "name": "hybrid::error",
    "loc": "regex-automata/src/hybrid/mod.rs:141:1:141:11"
  },
  "visible": true,
  "loc": "regex-automata/src/hybrid/error.rs:57:5:63:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: BuildError { kind: BuildErrorKind::Unsupported(msg) }\n"
      ],
      "input_infer": "call unsupported_dfa_word_boundary_unicode to validate the creation of BuildError with kind as BuildErrorKind::Unsupported and msg as \"cannot build lazy DFAs for regexes with Unicode word boundaries; switch to ASCII word boundaries, or heuristically enable Unicode word boundaries or use a different regex engine\"\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = BuildError::unsupported_dfa_word_boundary_unicode();",
                "    // Function call takes place here",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result.kind, BuildErrorKind::Unsupported(\"cannot build lazy DFAs for regexes with Unicode word boundaries; switch to ASCII word boundaries, or heuristically enable Unicode word boundaries or use a different regex engine\"));"
              ],
              "code": [
                "{",
                "    let result = BuildError::unsupported_dfa_word_boundary_unicode();",
                "    // Function call takes place here",
                "    assert_eq!(result.kind, BuildErrorKind::Unsupported(\"cannot build lazy DFAs for regexes with Unicode word boundaries; switch to ASCII word boundaries, or heuristically enable Unicode word boundaries or use a different regex engine\"));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}