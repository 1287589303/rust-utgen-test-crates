{
  "name": "regex_automata::meta::regex::{impl#20}::get_hybrid_cache_capacity",
  "mod_info": {
    "name": "meta::regex",
    "loc": "regex-automata/src/meta/mod.rs:57:1:57:11"
  },
  "visible": true,
  "loc": "regex-automata/src/meta/regex.rs:3093:5:3095:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "hybrid_cache_capacity set to valid usize values including 0, maximum usize, and unset (None) cases; test with default and edge case limits\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(0);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(config.get_hybrid_cache_capacity(), 0);",
                "    let config = Config::new().hybrid_cache_capacity(1048576);",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 1048576);",
                "    let config = Config::new();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2097152);"
              ],
              "code": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(0);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 0);",
                "    let config = Config::new().hybrid_cache_capacity(1048576);",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 1048576);",
                "    let config = Config::new();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2097152);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(1);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(config.get_hybrid_cache_capacity(), 1);",
                "    let config_default = Config::new();",
                "    assert_eq!(config_default.get_hybrid_cache_capacity(), 2097152);"
              ],
              "code": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(1);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 1);",
                "    let config_default = Config::new();",
                "    assert_eq!(config_default.get_hybrid_cache_capacity(), 2097152);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(usize::MAX);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(config.get_hybrid_cache_capacity(), usize::MAX);",
                "    ",
                "    let config = Config::new();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2 * (1 << 20));"
              ],
              "code": [
                "{",
                "    let config = Config::new().hybrid_cache_capacity(usize::MAX);",
                "    let _ = config.get_hybrid_cache_capacity();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), usize::MAX);",
                "    ",
                "    let config = Config::new();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2 * (1 << 20));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let config = Config::new(); // hybrid_cache_capacity is not set",
                "    let _ = config.get_hybrid_cache_capacity();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2 * (1 << 20));"
              ],
              "code": [
                "{",
                "    let config = Config::new(); // hybrid_cache_capacity is not set",
                "    let _ = config.get_hybrid_cache_capacity();",
                "    assert_eq!(config.get_hybrid_cache_capacity(), 2 * (1 << 20));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}