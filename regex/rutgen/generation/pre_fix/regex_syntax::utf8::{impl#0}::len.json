{
  "name": "regex_syntax::utf8::{impl#0}::len",
  "mod_info": {
    "name": "utf8",
    "loc": "regex-syntax/src/lib.rs:195:1:195:14"
  },
  "visible": true,
  "loc": "regex-syntax/src/utf8.rs:149:5:151:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "1 <= len <= 4\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let sequence = Utf8Sequence::One(Utf8Range { start: 0, end: 127 });",
                "    let result = sequence.len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, 1);",
                "    let sequence = Utf8Sequence::Two([Utf8Range { start: 128, end: 191 }, Utf8Range { start: 192, end: 223 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 2);",
                "    let sequence = Utf8Sequence::Three([Utf8Range { start: 224, end: 239 }, Utf8Range { start: 240, end: 247 }, Utf8Range { start: 248, end: 255 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 3);",
                "    let sequence = Utf8Sequence::Four([Utf8Range { start: 0, end: 127 }, Utf8Range { start: 128, end: 191 }, Utf8Range { start: 192, end: 223 }, Utf8Range { start: 224, end: 239 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 4);"
              ],
              "code": [
                "{",
                "    let sequence = Utf8Sequence::One(Utf8Range { start: 0, end: 127 });",
                "    let result = sequence.len();",
                "    assert_eq!(result, 1);",
                "    let sequence = Utf8Sequence::Two([Utf8Range { start: 128, end: 191 }, Utf8Range { start: 192, end: 223 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 2);",
                "    let sequence = Utf8Sequence::Three([Utf8Range { start: 224, end: 239 }, Utf8Range { start: 240, end: 247 }, Utf8Range { start: 248, end: 255 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 3);",
                "    let sequence = Utf8Sequence::Four([Utf8Range { start: 0, end: 127 }, Utf8Range { start: 128, end: 191 }, Utf8Range { start: 192, end: 223 }, Utf8Range { start: 224, end: 239 }]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 4);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let sequence = Utf8Sequence::Two([",
                "        Utf8Range { start: 128, end: 191 },",
                "        Utf8Range { start: 192, end: 223 },",
                "    ]);",
                "    let result = sequence.len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, 2);"
              ],
              "code": [
                "{",
                "    let sequence = Utf8Sequence::Two([",
                "        Utf8Range { start: 128, end: 191 },",
                "        Utf8Range { start: 192, end: 223 },",
                "    ]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 2);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let sequence = Utf8Sequence::Three([",
                "        Utf8Range { start: 224, end: 239 },",
                "        Utf8Range { start: 240, end: 247 },",
                "        Utf8Range { start: 248, end: 255 },",
                "    ]);",
                "    let result = sequence.len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, 3);"
              ],
              "code": [
                "{",
                "    let sequence = Utf8Sequence::Three([",
                "        Utf8Range { start: 224, end: 239 },",
                "        Utf8Range { start: 240, end: 247 },",
                "        Utf8Range { start: 248, end: 255 },",
                "    ]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 3);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let sequence = Utf8Sequence::Four([",
                "        Utf8Range { start: 0, end: 0 },",
                "        Utf8Range { start: 1, end: 1 },",
                "        Utf8Range { start: 2, end: 2 },",
                "        Utf8Range { start: 3, end: 3 },",
                "    ]);",
                "    let result = sequence.len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, 4);"
              ],
              "code": [
                "{",
                "    let sequence = Utf8Sequence::Four([",
                "        Utf8Range { start: 0, end: 0 },",
                "        Utf8Range { start: 1, end: 1 },",
                "        Utf8Range { start: 2, end: 2 },",
                "        Utf8Range { start: 3, end: 3 },",
                "    ]);",
                "    let result = sequence.len();",
                "    assert_eq!(result, 4);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}