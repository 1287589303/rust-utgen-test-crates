{
  "name": "regex_lite::hir::is_meta_character",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:45:1:51:2",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: c matches '.' at line 47 is true\n",
        "precondition: c matches '[' at line 47 is true\n",
        "precondition: c matches '*' at line 47 is true\n",
        "precondition: c matches '~' at line 48 is true\n",
        "precondition: c matches '{' at line 47 is true\n",
        "precondition: c matches ']' at line 47 is true\n",
        "precondition: c matches '-' at line 48 is true\n",
        "precondition: c matches '^' at line 48 is true\n",
        "precondition: c matches '#' at line 48 is true\n",
        "precondition: c matches '}' at line 48 is true\n",
        "precondition: c matches '|' at line 47 is true\n",
        "precondition: c matches ')' at line 47 is true\n",
        "precondition: c matches '?' at line 47 is true\n",
        "precondition: c matches '\\\\' at line 47 is true\n",
        "precondition: c matches '(' at line 47 is true\n",
        "precondition: c matches '&' at line 48 is true\n",
        "precondition: c matches '+' at line 47 is true\n",
        "precondition: c matches '$' at line 48 is true\n",
        "precondition: c matches _ at line 49 is true\n",
        "expected return value/type: false\n"
      ],
      "input_infer": "c is any character not in the set ['\\\\', '.', '+', '*', '?', '(', ')', '|', '[', ']', '{', '}', '^', '$', '#', '&', '-', '~']\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = 'a';",
                "    let _ = is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('a'), false);"
              ],
              "code": [
                "{",
                "    let input = 'a';",
                "    let _ = is_meta_character(input);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('a'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '5';",
                "    let _ = is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('5'), false);"
              ],
              "code": [
                "{",
                "    let input = '5';",
                "    let _ = is_meta_character(input);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('5'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = ' ';",
                "    let _ = is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character(' '), false);"
              ],
              "code": [
                "{",
                "    let input = ' ';",
                "    let _ = is_meta_character(input);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character(' '), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '%';",
                "    let _ = is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('%'), false);"
              ],
              "code": [
                "{",
                "    let input = '%';",
                "    let _ = is_meta_character(input);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('%'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '\\n';",
                "    let _ = is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('\\n'), false);"
              ],
              "code": [
                "{",
                "    let input = '\\n';",
                "    let _ = is_meta_character(input);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('\\n'), false);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 19,
      "prompt_conds": [
        "precondition: c matches '\\\\' at line 47 is true\n",
        "precondition: c matches '.' or '[' or '*' or '~' or '{' or ']' or '-' or '^' or '#' or '}' or '|' or ')' or '?' or '\\\\' or '(' or '&' or '+' or '$' at line 46 is true\n",
        "expected return value/type: true\n"
      ],
      "input_infer": "Test input conditions or ranges: any character from the set {'\\\\', '.', '+', '*', '?', '(', ')', '|', '[', ']', '{', '}', '^', '$', '#', '&', '-', '~'}\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '\\\\';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('('));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('~'));"
              ],
              "code": [
                "{",
                "    let input = '\\\\';",
                "    is_meta_character(input);",
                "    assert!(is_meta_character('\\\\'));",
                "    assert!(is_meta_character('.'));",
                "    assert!(is_meta_character('+'));",
                "    assert!(is_meta_character('*'));",
                "    assert!(is_meta_character('?'));",
                "    assert!(is_meta_character('('));",
                "    assert!(is_meta_character(')'));",
                "    assert!(is_meta_character('|'));",
                "    assert!(is_meta_character('['));",
                "    assert!(is_meta_character(']'));",
                "    assert!(is_meta_character('{'));",
                "    assert!(is_meta_character('}'));",
                "    assert!(is_meta_character('^'));",
                "    assert!(is_meta_character('$'));",
                "    assert!(is_meta_character('#'));",
                "    assert!(is_meta_character('&'));",
                "    assert!(is_meta_character('-'));",
                "    assert!(is_meta_character('~'));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '.';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '.';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '+';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '+';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '*';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '*';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '?';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '?';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '(';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '(';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = ')';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    is_meta_character('\\\\') == true",
                "    is_meta_character('.') == true",
                "    is_meta_character('+') == true",
                "    is_meta_character('*') == true",
                "    is_meta_character('?') == true",
                "    is_meta_character('(') == true",
                "    is_meta_character(')') == true",
                "    is_meta_character('|') == true",
                "    is_meta_character('[') == true",
                "    is_meta_character(']') == true",
                "    is_meta_character('{') == true",
                "    is_meta_character('}') == true",
                "    is_meta_character('^') == true",
                "    is_meta_character('$') == true",
                "    is_meta_character('#') == true",
                "    is_meta_character('&') == true",
                "    is_meta_character('-') == true",
                "    is_meta_character('~') == true"
              ],
              "code": [
                "{",
                "    let input = ')';",
                "    is_meta_character(input);",
                "    is_meta_character('\\\\') == true",
                "    is_meta_character('.') == true",
                "    is_meta_character('+') == true",
                "    is_meta_character('*') == true",
                "    is_meta_character('?') == true",
                "    is_meta_character('(') == true",
                "    is_meta_character(')') == true",
                "    is_meta_character('|') == true",
                "    is_meta_character('[') == true",
                "    is_meta_character(']') == true",
                "    is_meta_character('{') == true",
                "    is_meta_character('}') == true",
                "    is_meta_character('^') == true",
                "    is_meta_character('$') == true",
                "    is_meta_character('#') == true",
                "    is_meta_character('&') == true",
                "    is_meta_character('-') == true",
                "    is_meta_character('~') == true",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '|';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);"
              ],
              "code": [
                "{",
                "    let input = '|';",
                "    is_meta_character(input);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '[';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('~') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('$') == true);"
              ],
              "code": [
                "{",
                "    let input = '[';",
                "    is_meta_character(input);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('~') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('$') == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = ']';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);"
              ],
              "code": [
                "{",
                "    let input = ']';",
                "    is_meta_character(input);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '{';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '{';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '}';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);"
              ],
              "code": [
                "{",
                "    let input = '}';",
                "    is_meta_character(input);",
                "    assert!(is_meta_character('\\\\') == true);",
                "    assert!(is_meta_character('.') == true);",
                "    assert!(is_meta_character('+') == true);",
                "    assert!(is_meta_character('*') == true);",
                "    assert!(is_meta_character('?') == true);",
                "    assert!(is_meta_character('(') == true);",
                "    assert!(is_meta_character(')') == true);",
                "    assert!(is_meta_character('|') == true);",
                "    assert!(is_meta_character('[') == true);",
                "    assert!(is_meta_character(']') == true);",
                "    assert!(is_meta_character('{') == true);",
                "    assert!(is_meta_character('}') == true);",
                "    assert!(is_meta_character('^') == true);",
                "    assert!(is_meta_character('$') == true);",
                "    assert!(is_meta_character('#') == true);",
                "    assert!(is_meta_character('&') == true);",
                "    assert!(is_meta_character('-') == true);",
                "    assert!(is_meta_character('~') == true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '^';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '^';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '$';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '$';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '#';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '#';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '&';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '&';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '-';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);"
              ],
              "code": [
                "{",
                "    let input = '-';",
                "    is_meta_character(input);",
                "    assert_eq!(is_meta_character('\\\\'), true);",
                "    assert_eq!(is_meta_character('.'), true);",
                "    assert_eq!(is_meta_character('+'), true);",
                "    assert_eq!(is_meta_character('*'), true);",
                "    assert_eq!(is_meta_character('?'), true);",
                "    assert_eq!(is_meta_character('('), true);",
                "    assert_eq!(is_meta_character(')'), true);",
                "    assert_eq!(is_meta_character('|'), true);",
                "    assert_eq!(is_meta_character('['), true);",
                "    assert_eq!(is_meta_character(']'), true);",
                "    assert_eq!(is_meta_character('{'), true);",
                "    assert_eq!(is_meta_character('}'), true);",
                "    assert_eq!(is_meta_character('^'), true);",
                "    assert_eq!(is_meta_character('$'), true);",
                "    assert_eq!(is_meta_character('#'), true);",
                "    assert_eq!(is_meta_character('&'), true);",
                "    assert_eq!(is_meta_character('-'), true);",
                "    assert_eq!(is_meta_character('~'), true);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let input = '~';",
                "    is_meta_character(input);",
                "}"
              ],
              "oracle": [
                "    is_meta_character('~') == true",
                "    is_meta_character('\\\\') == true",
                "    is_meta_character('.') == true",
                "    is_meta_character('[') == true",
                "    is_meta_character('*') == true",
                "    is_meta_character('{') == true",
                "    is_meta_character(']') == true",
                "    is_meta_character('-') == true",
                "    is_meta_character('^') == true",
                "    is_meta_character('#') == true",
                "    is_meta_character('}') == true",
                "    is_meta_character('|') == true",
                "    is_meta_character(')') == true",
                "    is_meta_character('?') == true",
                "    is_meta_character('(') == true",
                "    is_meta_character('&') == true",
                "    is_meta_character('+') == true",
                "    is_meta_character('$') == true"
              ],
              "code": [
                "{",
                "    let input = '~';",
                "    is_meta_character(input);",
                "    is_meta_character('~') == true",
                "    is_meta_character('\\\\') == true",
                "    is_meta_character('.') == true",
                "    is_meta_character('[') == true",
                "    is_meta_character('*') == true",
                "    is_meta_character('{') == true",
                "    is_meta_character(']') == true",
                "    is_meta_character('-') == true",
                "    is_meta_character('^') == true",
                "    is_meta_character('#') == true",
                "    is_meta_character('}') == true",
                "    is_meta_character('|') == true",
                "    is_meta_character(')') == true",
                "    is_meta_character('?') == true",
                "    is_meta_character('(') == true",
                "    is_meta_character('&') == true",
                "    is_meta_character('+') == true",
                "    is_meta_character('$') == true",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}