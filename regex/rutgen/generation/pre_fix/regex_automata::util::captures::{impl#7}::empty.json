{
  "name": "regex_automata::util::captures::{impl#7}::empty",
  "mod_info": {
    "name": "util::captures",
    "loc": "regex-automata/src/util/mod.rs:32:1:32:18"
  },
  "visible": true,
  "loc": "regex-automata/src/util/captures.rs:1633:5:1636:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [],
      "input_infer": "Test input conditions or ranges: pattern_groups as an empty iterator yielding no elements, with expected return values for pattern_len(), all_group_len(), and slot_len() as 0.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let info = GroupInfo::empty();",
                "    let pattern_len = info.pattern_len();",
                "    let all_group_len = info.all_group_len();",
                "    let slot_len = info.slot_len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(0, pattern_len);",
                "    assert_eq!(0, all_group_len);",
                "    assert_eq!(0, slot_len);"
              ],
              "code": [
                "{",
                "    let info = GroupInfo::empty();",
                "    let pattern_len = info.pattern_len();",
                "    let all_group_len = info.all_group_len();",
                "    let slot_len = info.slot_len();",
                "    assert_eq!(0, pattern_len);",
                "    assert_eq!(0, all_group_len);",
                "    assert_eq!(0, slot_len);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let empty_iterator = core::iter::empty::<[Option<&str>; 0]>();",
                "    let info = GroupInfo::new(empty_iterator).expect(\"should not fail on empty iterator\");",
                "    let pattern_len = info.pattern_len();",
                "    let all_group_len = info.all_group_len();",
                "    let slot_len = info.slot_len();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(0, pattern_len);",
                "    assert_eq!(0, all_group_len);",
                "    assert_eq!(0, slot_len);"
              ],
              "code": [
                "{",
                "    let empty_iterator = core::iter::empty::<[Option<&str>; 0]>();",
                "    let info = GroupInfo::new(empty_iterator).expect(\"should not fail on empty iterator\");",
                "    let pattern_len = info.pattern_len();",
                "    let all_group_len = info.all_group_len();",
                "    let slot_len = info.slot_len();",
                "    assert_eq!(0, pattern_len);",
                "    assert_eq!(0, all_group_len);",
                "    assert_eq!(0, slot_len);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}