{
  "name": "regex_syntax::unicode::{impl#4}::new",
  "mod_info": {
    "name": "unicode",
    "loc": "regex-syntax/src/lib.rs:193:1:193:13"
  },
  "visible": true,
  "loc": "regex-syntax/src/unicode.rs:98:5:111:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Ok(SimpleCaseFolder {\n                table: crate::unicode_tables::case_folding_simple::CASE_FOLDING_SIMPLE,\n                last: None,\n                next: 0,\n            })\n"
      ],
      "input_infer": "The input conditions must either enable the \"unicode-case\" feature to be active or inactive to verify proper functionality and error handling: feature enabled (to receive Ok) and feature disabled (to receive Err).\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let result = SimpleCaseFolder::new();",
                "    // Call the function",
                "}"
              ],
              "oracle": [
                "    assert!(result.is_ok());",
                "    let folder = result.unwrap();",
                "    assert_eq!(folder.last, None);",
                "    assert_eq!(folder.next, 0);",
                "    assert_eq!(folder.table, crate::unicode_tables::case_folding_simple::CASE_FOLDING_SIMPLE);"
              ],
              "code": [
                "{",
                "    let result = SimpleCaseFolder::new();",
                "    // Call the function",
                "    assert!(result.is_ok());",
                "    let folder = result.unwrap();",
                "    assert_eq!(folder.last, None);",
                "    assert_eq!(folder.next, 0);",
                "    assert_eq!(folder.table, crate::unicode_tables::case_folding_simple::CASE_FOLDING_SIMPLE);",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            },
            {
              "attrs": [
                "#[cfg(not(feature = \"unicode-case\"))]"
              ],
              "prefix": [
                "{",
                "    let result = SimpleCaseFolder::new();",
                "    // Call the function",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Err(CaseFoldError(())));"
              ],
              "code": [
                "{",
                "    let result = SimpleCaseFolder::new();",
                "    // Call the function",
                "    assert_eq!(result, Err(CaseFoldError(())));",
                "}"
              ],
              "can_compile": true,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}