{
  "name": "regex::builders::bytes::{impl#1}::octal",
  "mod_info": {
    "name": "builders::bytes",
    "loc": "src/builders.rs:1357:1:2539:2"
  },
  "visible": true,
  "loc": "src/builders.rs:2403:9:2406:10",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: self\n"
      ],
      "input_infer": "valid boolean value for yes (true or false)\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let _ = regex_set_builder.octal(true);",
                "}"
              ],
              "oracle": [
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let result = regex_set_builder.octal(true);",
                "    assert_eq!(result as *const _, regex_set_builder as *const _);"
              ],
              "code": [
                "{",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let _ = regex_set_builder.octal(true);",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let result = regex_set_builder.octal(true);",
                "    assert_eq!(result as *const _, regex_set_builder as *const _);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let _ = regex_set_builder.octal(false);",
                "}"
              ],
              "oracle": [
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let result = regex_set_builder.octal(false);",
                "    assert_eq!(result, &regex_set_builder);"
              ],
              "code": [
                "{",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let _ = regex_set_builder.octal(false);",
                "    let patterns = vec![r\"\\141\"];",
                "    let regex_set_builder = RegexSetBuilder::new(patterns);",
                "    let result = regex_set_builder.octal(false);",
                "    assert_eq!(result, &regex_set_builder);",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}