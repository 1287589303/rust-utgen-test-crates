{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-syntax/src/lib.rs\n// crate name is regex_syntax\npub use crate::{\n    error::Error, parser::{parse, Parser, ParserBuilder},\n    unicode::UnicodeWordError,\n};\nuse alloc::string::String;\n#[derive(Debug)]\npub struct UnicodeWordError(());\npub fn is_word_character(c: char) -> bool {\n    try_is_word_character(c).expect(\"unicode-perl feature must be enabled\")\n}\npub fn try_is_word_character(c: char) -> core::result::Result<bool, UnicodeWordError> {\n    unicode::is_word_character(c)\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Returns true if and only if the given character is a Unicode word\n/// character.\n///\n/// A Unicode word character is defined by\n/// [UTS#18 Annex C](https://unicode.org/reports/tr18/#Compatibility_Properties).\n/// In particular, a character\n/// is considered a word character if it is in either of the `Alphabetic` or\n/// `Join_Control` properties, or is in one of the `Decimal_Number`, `Mark`\n/// or `Connector_Punctuation` general categories.\n///\n/// # Panics\n///\n/// If the `unicode-perl` feature is not enabled, then this function\n/// panics. For this reason, it is recommended that callers use\n/// [`try_is_word_character`] instead.\n348 pub fn is_word_character(c: char) -> bool {\n349     try_is_word_character(c).expect(\"unicode-perl feature must be enabled\")\n350 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}