{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-automata/src/util/wire.rs\n// crate name is regex_automata\n#[cfg(target_endian = \"little\")]\npub(crate) type NE = LE;\n#[cfg(target_endian = \"big\")]\npub(crate) type NE = BE;\nuse core::{cmp, mem::size_of};\n#[cfg(feature = \"alloc\")]\nuse alloc::{vec, vec::Vec};\nuse crate::util::{\n    int::Pointer, primitives::{PatternID, PatternIDError, StateID, StateIDError},\n};\n#[derive(Clone, Copy, Default, Eq, Hash, PartialEq, PartialOrd, Ord)]\n#[repr(transparent)]\npub struct StateID(SmallIndex);\npub(crate) fn read_state_id_unchecked(slice: &[u8]) -> (StateID, usize) {\n    let sid = StateID::from_ne_bytes_unchecked(\n        slice[..StateID::SIZE].try_into().unwrap(),\n    );\n    (sid, StateID::SIZE)\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Reads a state ID from the given slice. If the slice has insufficient\n/// length, then this panics. Otherwise, the deserialized integer is assumed\n/// to be a valid state ID.\n///\n/// This also returns the number of bytes read.\n652 pub(crate) fn read_state_id_unchecked(slice: &[u8]) -> (StateID, usize) {\n653     let sid = StateID::from_ne_bytes_unchecked(\n654         slice[..StateID::SIZE].try_into().unwrap(),\n655     );\n656     (sid, StateID::SIZE)\n657 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}