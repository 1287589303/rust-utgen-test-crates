{
  "system_pt": "As a software testing expert, infer the test input conditions or ranges based on the provided information. Follow these guidelines:\n1. Provide test input conditions or ranges in one line in plain text only, without additional explanations or Markdown formatting\n2. Analyze the function under test, context, preconditions, and expected return values or types to determine appropriate test input conditions or ranges\n3. The inferred test input conditions or ranges should comprehensively satisfy all provided preconditions simultaneously.\n4. Ensure the test input conditions or ranges cover boundary cases and edge scenarios\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-automata/src/util/wire.rs\n// crate name is regex_automata\n#[cfg(target_endian = \"little\")]\npub(crate) type NE = LE;\n#[cfg(target_endian = \"big\")]\npub(crate) type NE = BE;\nuse core::{cmp, mem::size_of};\n#[cfg(feature = \"alloc\")]\nuse alloc::{vec, vec::Vec};\nuse crate::util::{\n    int::Pointer, primitives::{PatternID, PatternIDError, StateID, StateIDError},\n};\npub(crate) fn skip_initial_padding(slice: &[u8]) -> usize {\n    let mut nread = 0;\n    while nread < 7 && nread < slice.len() && slice[nread] == 0 {\n        nread += 1;\n    }\n    nread\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Reads a possibly empty amount of padding, up to 7 bytes, from the beginning\n/// of the given slice. All padding bytes must be NUL bytes.\n///\n/// This is useful because it can be theoretically necessary to pad the\n/// beginning of a serialized object with NUL bytes to ensure that it starts\n/// at a correctly aligned address. These padding bytes should come immediately\n/// before the label.\n///\n/// This returns the number of bytes read from the given slice.\n340 pub(crate) fn skip_initial_padding(slice: &[u8]) -> usize {\n341     let mut nread = 0;\n342     while nread < 7 && nread < slice.len() && slice[nread] == 0 {\n343         nread += 1;\n344     }\n345     nread\n346 }\n\nWhen inferring test input conditions or ranges, consider the following preconditions and expected return values or types:\n"
}