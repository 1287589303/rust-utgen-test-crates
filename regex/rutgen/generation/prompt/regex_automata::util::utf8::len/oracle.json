{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-automata/src/util/utf8.rs\n// crate name is regex_automata\n#[cfg_attr(feature = \"perf-inline\", inline(always))]\nfn len(byte: u8) -> Option<usize> {\n    if byte <= 0x7F {\n        return Some(1);\n    } else if byte & 0b1100_0000 == 0b1000_0000 {\n        return None;\n    } else if byte <= 0b1101_1111 {\n        Some(2)\n    } else if byte <= 0b1110_1111 {\n        Some(3)\n    } else if byte <= 0b1111_0111 {\n        Some(4)\n    } else {\n        None\n    }\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Given a UTF-8 leading byte, this returns the total number of code units\n/// in the following encoded codepoint.\n///\n/// If the given byte is not a valid UTF-8 leading byte, then this returns\n/// `None`.\n101 fn len(byte: u8) -> Option<usize> {\n102     if byte <= 0x7F {\n103         return Some(1);\n104     } else if byte & 0b1100_0000 == 0b1000_0000 {\n105         return None;\n106     } else if byte <= 0b1101_1111 {\n107         Some(2)\n108     } else if byte <= 0b1110_1111 {\n109         Some(3)\n110     } else if byte <= 0b1111_0111 {\n111         Some(4)\n112     } else {\n113         None\n114     }\n115 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}