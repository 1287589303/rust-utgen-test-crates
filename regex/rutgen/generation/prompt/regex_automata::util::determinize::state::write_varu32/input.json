{
  "system_pt": "As a software testing expert, infer the test input conditions or ranges based on the provided information. Follow these guidelines:\n1. Provide test input conditions or ranges in one line in plain text only, without additional explanations or Markdown formatting\n2. Analyze the function under test, context, preconditions, and expected return values or types to determine appropriate test input conditions or ranges\n3. The inferred test input conditions or ranges should comprehensively satisfy all provided preconditions simultaneously.\n4. Ensure the test input conditions or ranges cover boundary cases and edge scenarios\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-automata/src/util/determinize/state.rs\n// crate name is regex_automata\nuse core::mem;\nuse alloc::{sync::Arc, vec::Vec};\nuse crate::util::{\n    int::{I32, U32},\n    look::LookSet, primitives::{PatternID, StateID},\n    wire::{self, Endian},\n};\npub(crate) trait U32 {\n    fn as_usize(self) -> usize;\n    fn low_u8(self) -> u8;\n    fn low_u16(self) -> u16;\n    fn high_u16(self) -> u16;\n}\nfn write_varu32(data: &mut Vec<u8>, mut n: u32) {\n    while n >= 0b1000_0000 {\n        data.push(n.low_u8() | 0b1000_0000);\n        n >>= 7;\n    }\n    data.push(n.low_u8());\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Write an unsigned 32-bit integer as a varint. In essence, `n` is written\n/// as a sequence of bytes where all bytes except for the last one have the\n/// most significant bit set. The least significant 7 bits correspond to the\n/// actual bits of `n`. So in the worst case, a varint uses 5 bytes, but in\n/// very common cases, it uses fewer than 4.\n///\n/// https://developers.google.com/protocol-buffers/docs/encoding#varints\n763 fn write_varu32(data: &mut Vec<u8>, mut n: u32) {\n764     while n >= 0b1000_0000 {\n765         data.push(n.low_u8() | 0b1000_0000);\n766         n >>= 7;\n767     }\n768     data.push(n.low_u8());\n769 }\n\nWhen inferring test input conditions or ranges, consider the following preconditions and expected return values or types:\n"
}