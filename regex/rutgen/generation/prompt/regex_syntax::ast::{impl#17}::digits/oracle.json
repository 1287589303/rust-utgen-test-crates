{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// regex-syntax/src/ast/mod.rs\n// crate name is regex_syntax\nuse core::cmp::Ordering;\nuse alloc::{boxed::Box, string::String, vec, vec::Vec};\npub use crate::ast::visitor::{visit, Visitor};\n#[derive(Clone, Debug, Eq, PartialEq)]\n#[cfg_attr(feature = \"arbitrary\", derive(arbitrary::Arbitrary))]\npub enum HexLiteralKind {\n    /// A `\\x` prefix. When used without brackets, this form is limited to\n    /// two digits.\n    X,\n    /// A `\\u` prefix. When used without brackets, this form is limited to\n    /// four digits.\n    UnicodeShort,\n    /// A `\\U` prefix. When used without brackets, this form is limited to\n    /// eight digits.\n    UnicodeLong,\n}\nimpl HexLiteralKind {\n    pub fn digits(&self) -> u32 {\n        match *self {\n            HexLiteralKind::X => 2,\n            HexLiteralKind::UnicodeShort => 4,\n            HexLiteralKind::UnicodeLong => 8,\n        }\n    }\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// The number of digits that must be used with this literal form when\n/// used without brackets. When used with brackets, there is no\n/// restriction on the number of digits.\n773 pub fn digits(&self) -> u32 {\n774     match *self {\n775         HexLiteralKind::X => 2,\n776         HexLiteralKind::UnicodeShort => 4,\n777         HexLiteralKind::UnicodeLong => 8,\n778     }\n779 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}