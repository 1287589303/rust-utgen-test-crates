[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let pattern = PatternID(0);",
          "    let span = Span { start: 5, end: 4 };",
          "    Match::new(pattern, span);",
          "}"
        ],
        "oracle": [
          "    assert!(std::panic::catch_unwind(|| {",
          "    let pattern = PatternID(0);",
          "    let span = Span { start: 5, end: 4 };",
          "    Match::new(pattern, span);",
          "    }).is_err());"
        ],
        "code": [
          "{",
          "    let pattern = PatternID(0);",
          "    let span = Span { start: 5, end: 4 };",
          "    Match::new(pattern, span);",
          "    assert!(std::panic::catch_unwind(|| {",
          "    let pattern = PatternID(0);",
          "    let span = Span { start: 5, end: 4 };",
          "    Match::new(pattern, span);",
          "    }).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let pattern = PatternID(1);",
          "    let span = Span { start: 3, end: 2 };",
          "    Match::new(pattern, span);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Match::new(PatternID(1), Span { start: 3, end: 2 }), Err(\"invalid match span\"));"
        ],
        "code": [
          "{",
          "    let pattern = PatternID(1);",
          "    let span = Span { start: 3, end: 2 };",
          "    Match::new(pattern, span);",
          "    assert_eq!(Match::new(PatternID(1), Span { start: 3, end: 2 }), Err(\"invalid match span\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let pattern = PatternID(2);",
          "    let span = Span { start: 6, end: 6 };",
          "    Match::new(pattern, span);",
          "}"
        ],
        "oracle": [
          "    assert_panics(|| Match::new(PatternID(2), Span { start: 6, end: 6 }));"
        ],
        "code": [
          "{",
          "    let pattern = PatternID(2);",
          "    let span = Span { start: 6, end: 6 };",
          "    Match::new(pattern, span);",
          "    assert_panics(|| Match::new(PatternID(2), Span { start: 6, end: 6 }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]