[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut parser_builder = ParserBuilder::new();",
          "    parser_builder.swap_greed(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parser_builder.hir.flags.swap_greed, Some(true));",
          "    parser_builder.swap_greed(false);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, None);",
          "    parser_builder.swap_greed(true);",
          "    assert!(parser_builder.hir.flags.swap_greed.is_some());",
          "    parser_builder.swap_greed(false);",
          "    assert!(parser_builder.hir.flags.swap_greed.is_none());"
        ],
        "code": [
          "{",
          "    let mut parser_builder = ParserBuilder::new();",
          "    parser_builder.swap_greed(true);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, Some(true));",
          "    parser_builder.swap_greed(false);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, None);",
          "    parser_builder.swap_greed(true);",
          "    assert!(parser_builder.hir.flags.swap_greed.is_some());",
          "    parser_builder.swap_greed(false);",
          "    assert!(parser_builder.hir.flags.swap_greed.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut parser_builder = ParserBuilder::new();",
          "    parser_builder.swap_greed(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(parser_builder.hir.flags.swap_greed, None);",
          "    assert!(parser_builder.swap_greed(false).is(&parser_builder));",
          "    parser_builder.swap_greed(true);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, Some(true));",
          "    assert!(parser_builder.swap_greed(true).is(&parser_builder));"
        ],
        "code": [
          "{",
          "    let mut parser_builder = ParserBuilder::new();",
          "    parser_builder.swap_greed(false);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, None);",
          "    assert!(parser_builder.swap_greed(false).is(&parser_builder));",
          "    parser_builder.swap_greed(true);",
          "    assert_eq!(parser_builder.hir.flags.swap_greed, Some(true));",
          "    assert!(parser_builder.swap_greed(true).is(&parser_builder));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]