[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '%';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), true);"
        ],
        "code": [
          "{",
          "    let c = '%';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '^';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('`'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);"
        ],
        "code": [
          "{",
          "    let c = '^';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('`'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '&';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('&'), true);"
        ],
        "code": [
          "{",
          "    let c = '&';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '-';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('-') == true);"
        ],
        "code": [
          "{",
          "    let c = '-';",
          "    let result = is_escapeable_character(c);",
          "    assert!(is_escapeable_character('-') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '~';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);"
        ],
        "code": [
          "{",
          "    let c = '~';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]