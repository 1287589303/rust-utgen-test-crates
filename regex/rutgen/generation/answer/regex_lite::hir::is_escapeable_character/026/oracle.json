[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('!');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('!');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('#');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('3'), false);",
          "    assert_eq!(is_escapeable_character('G'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('D'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('I'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('#');",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('3'), false);",
          "    assert_eq!(is_escapeable_character('G'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('D'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('I'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('$');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('Y'));",
          "    assert!(!is_escapeable_character('m'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('g'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('$');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('Y'));",
          "    assert!(!is_escapeable_character('m'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('g'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('%');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('%');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('&');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('&'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('$'), true);",
          "    assert_eq!(is_escapeable_character('`'), true);",
          "    assert_eq!(is_escapeable_character('['), true);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('&');",
          "    assert_eq!(is_escapeable_character('&'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('$'), true);",
          "    assert_eq!(is_escapeable_character('`'), true);",
          "    assert_eq!(is_escapeable_character('['), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('*');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('*');",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('+');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('+');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(',');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character(','), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(',');",
          "    assert_eq!(is_escapeable_character(','), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('-');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('5'), false);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character(' '), true);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('-');",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('5'), false);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character(' '), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('.');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('.');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('/');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('/');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(':');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(':');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(';');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character(';'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character('$'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('_'), true);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(';');",
          "    assert_eq!(is_escapeable_character(';'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character('$'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('_'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('<');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('<');",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('=');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('=');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('>');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('R'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('>');",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('R'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('?');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('?');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('@');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('@'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('@');",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('[');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('$'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);",
          "    assert_eq!(is_escapeable_character('|'), true);",
          "    assert_eq!(is_escapeable_character('['), true);",
          "    assert_eq!(is_escapeable_character(']'), true);",
          "    assert_eq!(is_escapeable_character('.'), true);",
          "    assert_eq!(is_escapeable_character('+'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('?'), true);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('[');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('$'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);",
          "    assert_eq!(is_escapeable_character('|'), true);",
          "    assert_eq!(is_escapeable_character('['), true);",
          "    assert_eq!(is_escapeable_character(']'), true);",
          "    assert_eq!(is_escapeable_character('.'), true);",
          "    assert_eq!(is_escapeable_character('+'), true);",
          "    assert_eq!(is_escapeable_character('*'), true);",
          "    assert_eq!(is_escapeable_character('?'), true);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('\\\\');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character(';'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('['), true);",
          "    assert_eq!(is_escapeable_character(']'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('\\\\');",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character(';'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('['), true);",
          "    assert_eq!(is_escapeable_character(']'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(']');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character(']'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(']');",
          "    assert_eq!(is_escapeable_character(']'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('^');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('Y'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('n'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('^');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('Y'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('n'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('_');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('_');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('`');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('`');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('{');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('{');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('|');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('2'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('x'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('|');",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('2'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('x'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('}');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('}'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('}');",
          "    assert_eq!(is_escapeable_character('}'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('~');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('~'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('~');",
          "    assert_eq!(is_escapeable_character('~'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]