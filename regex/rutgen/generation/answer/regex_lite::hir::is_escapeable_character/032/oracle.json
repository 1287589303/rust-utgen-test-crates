[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '<';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '<';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '>';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '>';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '!';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '!';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '@';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('@'), false);"
        ],
        "code": [
          "{",
          "    let c = '@';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '#';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '#';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '$';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '$';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '%';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '%';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '^';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character(':',), true);"
        ],
        "code": [
          "{",
          "    let c = '^';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character(':',), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '&';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '&';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '*';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);"
        ],
        "code": [
          "{",
          "    let c = '*';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('@'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '(';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '(';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = ')';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    let c = '<'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '>'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '1'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = 'a'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = 'Z'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '%'; assert_eq!(is_escapeable_character(c), true);"
        ],
        "code": [
          "{",
          "    let c = ')';",
          "    let result = is_escapeable_character(c);",
          "    let c = '<'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '>'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '1'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = 'a'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = 'Z'; assert_eq!(is_escapeable_character(c), false);",
          "    let c = '%'; assert_eq!(is_escapeable_character(c), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '_';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '_';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '+';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);"
        ],
        "code": [
          "{",
          "    let c = '+';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '=';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '=';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '{';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '{';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '}';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    let c = '<';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = '>';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = '2';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = 'Z';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = 'b';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '}';",
          "    let result = is_escapeable_character(c);",
          "    let c = '<';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = '>';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = '2';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = 'Z';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "    ",
          "    let c = 'b';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '|';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('|'), false);"
        ],
        "code": [
          "{",
          "    let c = '|';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('|'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = ':';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = ':';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '\"';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '\"';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = ';';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = ';';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '\\'';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '\\'';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = ',';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = ',';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '.';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character(','); true);"
        ],
        "code": [
          "{",
          "    let c = '.';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character('~'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character(','); true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '?';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);"
        ],
        "code": [
          "{",
          "    let c = '?';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('^'), true);",
          "    assert_eq!(is_escapeable_character(';'), true);",
          "    assert_eq!(is_escapeable_character('('), true);",
          "    assert_eq!(is_escapeable_character(')'), true);",
          "    assert_eq!(is_escapeable_character('{'), true);",
          "    assert_eq!(is_escapeable_character('}'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '/';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('/'), false);"
        ],
        "code": [
          "{",
          "    let c = '/';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(is_escapeable_character('/'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '`';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '`';",
          "    let result = is_escapeable_character(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '~';",
          "    let result = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    let c = '~'; assert_eq!(is_escapeable_character(c), false);"
        ],
        "code": [
          "{",
          "    let c = '~';",
          "    let result = is_escapeable_character(c);",
          "    let c = '~'; assert_eq!(is_escapeable_character(c), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]