[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('0');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('9');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('a');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('A');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('5');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('0');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('9');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('a');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('A');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('5');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('5');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('5');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('9');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('9');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('a');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('5');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('<');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('>');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('a');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('5');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('<');",
          "    assert_eq!(result, false);",
          "    let result = is_escapeable_character('>');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('Z');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('Z');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('b');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('b');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('@');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);",
          "    assert_eq!(is_escapeable_character('2'), false);",
          "    assert_eq!(is_escapeable_character('3'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);",
          "    assert_eq!(is_escapeable_character('5'), false);",
          "    assert_eq!(is_escapeable_character('6'), false);",
          "    assert_eq!(is_escapeable_character('7'), false);",
          "    assert_eq!(is_escapeable_character('8'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('C'), false);",
          "    assert_eq!(is_escapeable_character('D'), false);",
          "    assert_eq!(is_escapeable_character('E'), false);",
          "    assert_eq!(is_escapeable_character('F'), false);",
          "    assert_eq!(is_escapeable_character('G'), false);",
          "    assert_eq!(is_escapeable_character('H'), false);",
          "    assert_eq!(is_escapeable_character('I'), false);",
          "    assert_eq!(is_escapeable_character('J'), false);",
          "    assert_eq!(is_escapeable_character('K'), false);",
          "    assert_eq!(is_escapeable_character('L'), false);",
          "    assert_eq!(is_escapeable_character('M'), false);",
          "    assert_eq!(is_escapeable_character('N'), false);",
          "    assert_eq!(is_escapeable_character('O'), false);",
          "    assert_eq!(is_escapeable_character('P'), false);",
          "    assert_eq!(is_escapeable_character('Q'), false);",
          "    assert_eq!(is_escapeable_character('R'), false);",
          "    assert_eq!(is_escapeable_character('S'), false);",
          "    assert_eq!(is_escapeable_character('T'), false);",
          "    assert_eq!(is_escapeable_character('U'), false);",
          "    assert_eq!(is_escapeable_character('V'), false);",
          "    assert_eq!(is_escapeable_character('W'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('Y'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('d'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('f'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('h'), false);",
          "    assert_eq!(is_escapeable_character('i'), false);",
          "    assert_eq!(is_escapeable_character('j'), false);",
          "    assert_eq!(is_escapeable_character('k'), false);",
          "    assert_eq!(is_escapeable_character('l'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('n'), false);",
          "    assert_eq!(is_escapeable_character('o'), false);",
          "    assert_eq!(is_escapeable_character('p'), false);",
          "    assert_eq!(is_escapeable_character('q'), false);",
          "    assert_eq!(is_escapeable_character('r'), false);",
          "    assert_eq!(is_escapeable_character('s'), false);",
          "    assert_eq!(is_escapeable_character('t'), false);",
          "    assert_eq!(is_escapeable_character('u'), false);",
          "    assert_eq!(is_escapeable_character('v'), false);",
          "    assert_eq!(is_escapeable_character('w'), false);",
          "    assert_eq!(is_escapeable_character('x'), false);",
          "    assert_eq!(is_escapeable_character('y'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('@');",
          "    assert_eq!(is_escapeable_character('0'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);",
          "    assert_eq!(is_escapeable_character('2'), false);",
          "    assert_eq!(is_escapeable_character('3'), false);",
          "    assert_eq!(is_escapeable_character('4'), false);",
          "    assert_eq!(is_escapeable_character('5'), false);",
          "    assert_eq!(is_escapeable_character('6'), false);",
          "    assert_eq!(is_escapeable_character('7'), false);",
          "    assert_eq!(is_escapeable_character('8'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "    assert_eq!(is_escapeable_character('A'), false);",
          "    assert_eq!(is_escapeable_character('B'), false);",
          "    assert_eq!(is_escapeable_character('C'), false);",
          "    assert_eq!(is_escapeable_character('D'), false);",
          "    assert_eq!(is_escapeable_character('E'), false);",
          "    assert_eq!(is_escapeable_character('F'), false);",
          "    assert_eq!(is_escapeable_character('G'), false);",
          "    assert_eq!(is_escapeable_character('H'), false);",
          "    assert_eq!(is_escapeable_character('I'), false);",
          "    assert_eq!(is_escapeable_character('J'), false);",
          "    assert_eq!(is_escapeable_character('K'), false);",
          "    assert_eq!(is_escapeable_character('L'), false);",
          "    assert_eq!(is_escapeable_character('M'), false);",
          "    assert_eq!(is_escapeable_character('N'), false);",
          "    assert_eq!(is_escapeable_character('O'), false);",
          "    assert_eq!(is_escapeable_character('P'), false);",
          "    assert_eq!(is_escapeable_character('Q'), false);",
          "    assert_eq!(is_escapeable_character('R'), false);",
          "    assert_eq!(is_escapeable_character('S'), false);",
          "    assert_eq!(is_escapeable_character('T'), false);",
          "    assert_eq!(is_escapeable_character('U'), false);",
          "    assert_eq!(is_escapeable_character('V'), false);",
          "    assert_eq!(is_escapeable_character('W'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('Y'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('d'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('f'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('h'), false);",
          "    assert_eq!(is_escapeable_character('i'), false);",
          "    assert_eq!(is_escapeable_character('j'), false);",
          "    assert_eq!(is_escapeable_character('k'), false);",
          "    assert_eq!(is_escapeable_character('l'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('n'), false);",
          "    assert_eq!(is_escapeable_character('o'), false);",
          "    assert_eq!(is_escapeable_character('p'), false);",
          "    assert_eq!(is_escapeable_character('q'), false);",
          "    assert_eq!(is_escapeable_character('r'), false);",
          "    assert_eq!(is_escapeable_character('s'), false);",
          "    assert_eq!(is_escapeable_character('t'), false);",
          "    assert_eq!(is_escapeable_character('u'), false);",
          "    assert_eq!(is_escapeable_character('v'), false);",
          "    assert_eq!(is_escapeable_character('w'), false);",
          "    assert_eq!(is_escapeable_character('x'), false);",
          "    assert_eq!(is_escapeable_character('y'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]