[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config { nest_limit: 0, flags: Flags::default() };",
          "    let pattern = \"test\";",
          "    let parser = Parser::new(config, pattern);",
          "    parser.depth.set(1);",
          "    let _ = parser.increment_depth();",
          "}"
        ],
        "oracle": [
          "    parser.depth.set(1);",
          "    let result = parser.increment_depth();",
          "    assert_eq!(result, Err(Error::new(ERR_TOO_MUCH_NESTING)));"
        ],
        "code": [
          "{",
          "    let config = Config { nest_limit: 0, flags: Flags::default() };",
          "    let pattern = \"test\";",
          "    let parser = Parser::new(config, pattern);",
          "    parser.depth.set(1);",
          "    let _ = parser.increment_depth();",
          "    parser.depth.set(1);",
          "    let result = parser.increment_depth();",
          "    assert_eq!(result, Err(Error::new(ERR_TOO_MUCH_NESTING)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config { nest_limit: u32::MAX, flags: Flags::default() };",
          "    let pattern = \"test\";",
          "    let parser = Parser::new(config, pattern);",
          "    parser.depth.set(u32::MAX);",
          "    let _ = parser.increment_depth();",
          "}"
        ],
        "oracle": [
          "    Err(Error::new(ERR_TOO_MUCH_NESTING))"
        ],
        "code": [
          "{",
          "    let config = Config { nest_limit: u32::MAX, flags: Flags::default() };",
          "    let pattern = \"test\";",
          "    let parser = Parser::new(config, pattern);",
          "    parser.depth.set(u32::MAX);",
          "    let _ = parser.increment_depth();",
          "    Err(Error::new(ERR_TOO_MUCH_NESTING))",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]