[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = LazyStateIDError { attempted: 0 };",
          "    let _ = error.attempted();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(error.attempted(), 0);",
          "    let error = LazyStateIDError { attempted: 5 };",
          "    assert_eq!(error.attempted(), 5);",
          "    let error = LazyStateIDError { attempted: u64::MAX };",
          "    assert_eq!(error.attempted(), u64::MAX);"
        ],
        "code": [
          "{",
          "    let error = LazyStateIDError { attempted: 0 };",
          "    let _ = error.attempted();",
          "    assert_eq!(error.attempted(), 0);",
          "    let error = LazyStateIDError { attempted: 5 };",
          "    assert_eq!(error.attempted(), 5);",
          "    let error = LazyStateIDError { attempted: u64::MAX };",
          "    assert_eq!(error.attempted(), u64::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = LazyStateIDError { attempted: 1 };",
          "    let _ = error.attempted();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(error.attempted(), 1);"
        ],
        "code": [
          "{",
          "    let error = LazyStateIDError { attempted: 1 };",
          "    let _ = error.attempted();",
          "    assert_eq!(error.attempted(), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = LazyStateIDError { attempted: 2u64.pow(63) - 1 };",
          "    let _ = error.attempted();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(error.attempted(), 2u64.pow(63) - 1);"
        ],
        "code": [
          "{",
          "    let error = LazyStateIDError { attempted: 2u64.pow(63) - 1 };",
          "    let _ = error.attempted();",
          "    assert_eq!(error.attempted(), 2u64.pow(63) - 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = LazyStateIDError { attempted: u64::MAX };",
          "    let _ = error.attempted();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(error.attempted(), u64::MAX);"
        ],
        "code": [
          "{",
          "    let error = LazyStateIDError { attempted: u64::MAX };",
          "    let _ = error.attempted();",
          "    assert_eq!(error.attempted(), u64::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]