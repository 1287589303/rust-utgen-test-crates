[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(255);",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(255));"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(255);",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "    assert_eq!(result, Some(255));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(254);",
          "    byte_set.add(255);",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(255));"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(254);",
          "    byte_set.add(255);",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "    assert_eq!(result, Some(255));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "}"
        ],
        "oracle": [
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(255);",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "    assert_eq!(result, Some(255));"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::default();",
          "    ",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "    let mut byte_set = ByteSet::default();",
          "    byte_set.add(255);",
          "    let mut iter = ByteSetIter { set: &byte_set, b: 255 };",
          "    let result = iter.next();",
          "    assert_eq!(result, Some(255));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]