state.id = None; input.haystack = [<any byte array>]; input.span = Span { start: 0, end: <any positive usize> }; pre = Some(&<valid prefilter>); state.at = <any usize less than input.end()>; dfa.is_special_state(sid) = true; dfa.is_start_state(sid) = true; pre.find(input.haystack(), input.span) = Some(Span { start: <any usize greater than state.at>, end: input.end }); universal_start = false; prefilter_restart(dfa, &input, state.at) = Ok(state_id); state.mat = None; result = Ok(())
