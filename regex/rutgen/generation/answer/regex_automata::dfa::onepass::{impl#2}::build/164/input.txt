self.nfa.look_set_any().available().map_err(BuildError::word)? is Ok/Some; look in self.nfa.look_set_any().iter() is false; self.nfa.pattern_len().as_u64() == PatternEpsilons::PATTERN_ID_LIMIT; self.nfa.group_info().explicit_slot_len() == Slots::LIMIT; self.add_empty_state()? is Ok/Some; self.add_start_state(None, self.nfa.start_anchored())? is Ok/Some; self.config.get_starts_for_each_pattern() is false; self.uncompiled_nfa_ids is non-empty; self.stack_push(nfa_id, Epsilons::empty())? is Ok/Some; stack is not empty; *self.nfa.state(id) is thompson::State::Dense; dense.iter() is empty; expected return is Ok(self.dfa)
