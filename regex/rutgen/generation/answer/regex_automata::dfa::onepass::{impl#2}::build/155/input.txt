self.nfa.look_set_any().available() == Ok && self.nfa.look_set_any().iter().is_empty() && self.nfa.pattern_len().as_u64() <= PatternEpsilons::PATTERN_ID_LIMIT && self.nfa.group_info().explicit_slot_len() <= Slots::LIMIT && self.add_empty_state().is_ok() && left_val == right_val && self.add_start_state(None, self.nfa.start_anchored()).is_ok() && !self.config.get_starts_for_each_pattern() && self.uncompiled_nfa_ids.pop().is_some() && self.stack_push(nfa_id, Epsilons::empty()).is_ok() && self.stack.pop().is_some() && self.nfa.state(id).is_binary_union() && self.stack_push(alt2, epsilons).is_ok() && self.stack_push(alt1, epsilons).is_err()
