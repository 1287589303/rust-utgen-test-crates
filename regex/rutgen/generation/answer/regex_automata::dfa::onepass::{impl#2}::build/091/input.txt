self.nfa.look_set_any().available() == Ok && self.nfa.look_set_any().iter().count() == 0 && self.nfa.pattern_len().as_u64() <= PatternEpsilons::PATTERN_ID_LIMIT && self.nfa.group_info().explicit_slot_len() <= Slots::LIMIT && self.add_empty_state()? == Ok && self.add_start_state(None, self.nfa.start_anchored())? == Ok && self.config.get_starts_for_each_pattern() == true && self.nfa.patterns().len() > 0 && self.add_start_state(Some(pid), self.nfa.start_pattern(pid).unwrap())? == Err
