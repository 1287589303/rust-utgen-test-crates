self.nfa.look_set_any().available() is Ok/Some; self.nfa.look_set_any().iter() is empty; self.nfa.pattern_len().as_u64() equals PatternEpsilons::PATTERN_ID_LIMIT; self.nfa.group_info().explicit_slot_len() equals Slots::LIMIT; self.add_empty_state() is Ok/Some; (*left_val == *right_val) is true; self.add_start_state(None, self.nfa.start_anchored()) is Ok/Some; self.config.get_starts_for_each_pattern() is false; !self.uncompiled_nfa_ids is empty; self.stack_push(nfa_id, Epsilons::empty()) is Err/None.
