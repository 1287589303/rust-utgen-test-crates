[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let regex_set = RegexSet::default();",
          "}"
        ],
        "oracle": [
          "    assert!(regex_set.is_empty());",
          "    assert_eq!(regex_set.len(), 0);",
          "    assert_eq!(regex_set.patterns().len(), 0);"
        ],
        "code": [
          "{",
          "    let regex_set = RegexSet::default();",
          "    assert!(regex_set.is_empty());",
          "    assert_eq!(regex_set.len(), 0);",
          "    assert_eq!(regex_set.patterns().len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let regex_set = RegexSet::empty();",
          "}"
        ],
        "oracle": [
          "    assert!(regex_set.is_empty() == true);",
          "    assert_eq!(regex_set.len(), 0);",
          "    assert_eq!(regex_set.patterns().len(), 0);"
        ],
        "code": [
          "{",
          "    let regex_set = RegexSet::empty();",
          "    assert!(regex_set.is_empty() == true);",
          "    assert_eq!(regex_set.len(), 0);",
          "    assert_eq!(regex_set.patterns().len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]