[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"usize_value\" });",
          "    let result = core::fmt::format(format_args!(\"{}\", error));",
          "}"
        ],
        "oracle": [
          "    write!(f, \"{} is too big to fit in a usize\", \"usize_value\") == result",
          "    assert_eq!(result, \"usize_value is too big to fit in a usize\")"
        ],
        "code": [
          "{",
          "    let error = DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"usize_value\" });",
          "    let result = core::fmt::format(format_args!(\"{}\", error));",
          "    write!(f, \"{} is too big to fit in a usize\", \"usize_value\") == result",
          "    assert_eq!(result, \"usize_value is too big to fit in a usize\")",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"large_value\" });",
          "    let result = core::fmt::format(format_args!(\"{}\", error));",
          "}"
        ],
        "oracle": [
          "    write!(f, \"large_value is too big to fit in a usize\") == result;"
        ],
        "code": [
          "{",
          "    let error = DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"large_value\" });",
          "    let result = core::fmt::format(format_args!(\"{}\", error));",
          "    write!(f, \"large_value is too big to fit in a usize\") == result;",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]