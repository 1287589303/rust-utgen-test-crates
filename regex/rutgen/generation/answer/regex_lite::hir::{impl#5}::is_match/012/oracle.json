[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let look = Look::WordEnd;",
          "    let haystack: &[u8] = b\"word\";",
          "    let at = 0;",
          "    look.is_match(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert!(look.is_match(haystack, at) == false);",
          "    assert!(look.is_match(haystack, at) == (at == 0));",
          "    assert!(look.is_match(haystack, at) == (utf8::is_word_byte(haystack[at - 1]) && !utf8::is_word_byte(haystack[at])));",
          "    assert_eq!(look.is_match(haystack, at), false);"
        ],
        "code": [
          "{",
          "    let look = Look::WordEnd;",
          "    let haystack: &[u8] = b\"word\";",
          "    let at = 0;",
          "    look.is_match(haystack, at);",
          "    assert!(look.is_match(haystack, at) == false);",
          "    assert!(look.is_match(haystack, at) == (at == 0));",
          "    assert!(look.is_match(haystack, at) == (utf8::is_word_byte(haystack[at - 1]) && !utf8::is_word_byte(haystack[at])));",
          "    assert_eq!(look.is_match(haystack, at), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let look = Look::WordEnd;",
          "    let haystack: &[u8] = b\"word\";",
          "    let at = 4; // haystack.len()",
          "    look.is_match(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(look.is_match(haystack, at), false);"
        ],
        "code": [
          "{",
          "    let look = Look::WordEnd;",
          "    let haystack: &[u8] = b\"word\";",
          "    let at = 4; // haystack.len()",
          "    look.is_match(haystack, at);",
          "    assert_eq!(look.is_match(haystack, at), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]