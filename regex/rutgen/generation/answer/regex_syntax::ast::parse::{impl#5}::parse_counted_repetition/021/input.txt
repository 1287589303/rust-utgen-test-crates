self.char() != '{', concat.asts.pop() == Some(ast), ast is neither Ast::Empty nor Ast::Flags, self.bump_and_bump_space() == true, self.is_eof() == false, self.char() != ',' , self.bump_and_bump_space() == true, self.char() == '}' , count_start == Err(err), err.kind == ast::ErrorKind::RepetitionCountDecimalEmpty, self.parser().empty_min_range == false
