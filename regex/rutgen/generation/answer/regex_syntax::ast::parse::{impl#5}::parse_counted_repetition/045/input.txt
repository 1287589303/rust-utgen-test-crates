self.char() == '{' must be false; concat.asts.pop() must be Some(ast); ast must not be Ast::Empty(_) or Ast::Flags(_); self.bump_and_bump_space() must be true; self.is_eof() must be false; self.char() == ',' must be false; self.bump_and_bump_space() must be true; self.char() must be '}' for this test case; count_start must yield Ok/Some; self.is_eof() must be false; self.char() must be '}' for this case; self.bump_and_bump_space() must be true; self.char() == '?' must be false; range.is_valid() must be false.
