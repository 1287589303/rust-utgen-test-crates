self.char() == '{' is false; concat.asts.pop() is Some(ast); ast is neither Ast::Empty nor Ast::Flags; self.bump_and_bump_space() is true; self.is_eof() is false; self.char() == ',' is false; self.bump_and_bump_space() is true; self.char() != '}' is true; count_start is Ok(c); count_start is Ok(c); specialize_err(self.parse_decimal(), ast::ErrorKind::DecimalEmpty, ast::ErrorKind::RepetitionCountDecimalEmpty) is Err/None
