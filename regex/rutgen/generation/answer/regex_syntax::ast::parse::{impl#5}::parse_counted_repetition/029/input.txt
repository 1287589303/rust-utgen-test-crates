self.char() == '{' is false, concat.asts.pop() returns Some(ast), ast is neither Ast::Empty nor Ast::Flags, self.bump_and_bump_space() is true, self.is_eof() is false, self.char() == ',' is false, self.bump_and_bump_space() is true, self.char() != '}' is true, count_start is Err(err), err.kind is not ast::ErrorKind::RepetitionCountDecimalEmpty, err? is Ok/Some, specialize_err(self.parse_decimal(), ast::ErrorKind::DecimalEmpty, ast::ErrorKind::RepetitionCountDecimalEmpty) is Ok/Some, self.is_eof() is false, self.char() != '}' is false, self.bump_and_bump_space() is true, self.char() == '?' is true, range.is_valid() is false
