[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassUnicodeRange { start: 'a', end: 'z' };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 'a');"
        ],
        "code": [
          "{",
          "    let range = ClassUnicodeRange { start: 'a', end: 'z' };",
          "    let result = range.lower();",
          "    assert_eq!(result, 'a');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassUnicodeRange { start: '\\0', end: '\\u{10FFFF}' };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, '\\0');"
        ],
        "code": [
          "{",
          "    let range = ClassUnicodeRange { start: '\\0', end: '\\u{10FFFF}' };",
          "    let result = range.lower();",
          "    assert_eq!(result, '\\0');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassUnicodeRange { start: 'x', end: 'x' };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 'x');"
        ],
        "code": [
          "{",
          "    let range = ClassUnicodeRange { start: 'x', end: 'x' };",
          "    let result = range.lower();",
          "    assert_eq!(result, 'x');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassUnicodeRange { start: 'A', end: 'Z' };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 'A');"
        ],
        "code": [
          "{",
          "    let range = ClassUnicodeRange { start: 'A', end: 'Z' };",
          "    let result = range.lower();",
          "    assert_eq!(result, 'A');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassUnicodeRange { start: '#', end: '*' };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, '#');"
        ],
        "code": [
          "{",
          "    let range = ClassUnicodeRange { start: '#', end: '*' };",
          "    let result = range.lower();",
          "    assert_eq!(result, '#');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]