[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '0';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), false);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex('@'), false);",
          "    assert_eq!(is_hex('.'), false);"
        ],
        "code": [
          "{",
          "    let c = '0';",
          "    let result = is_hex(c);",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), false);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex('@'), false);",
          "    assert_eq!(is_hex('.'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '9';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), false);",
          "    assert_eq!(is_hex('G'), false);"
        ],
        "code": [
          "{",
          "    let c = '9';",
          "    let result = is_hex(c);",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), false);",
          "    assert_eq!(is_hex('G'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = 'a';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert!(result == true);",
          "    let c = '0';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = '9';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'f';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'A';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'G';",
          "    let result = is_hex(c);",
          "    assert!(result == false);",
          "    let c = ' ';",
          "    let result = is_hex(c);",
          "    assert!(result == false);",
          "    let c = '#';",
          "    let result = is_hex(c);",
          "    assert!(result == false);"
        ],
        "code": [
          "{",
          "    let c = 'a';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = '0';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = '9';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'f';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'A';",
          "    let result = is_hex(c);",
          "    assert!(result == true);",
          "    let c = 'G';",
          "    let result = is_hex(c);",
          "    assert!(result == false);",
          "    let c = ' ';",
          "    let result = is_hex(c);",
          "    assert!(result == false);",
          "    let c = '#';",
          "    let result = is_hex(c);",
          "    assert!(result == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = 'f';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('1'), true);",
          "    assert_eq!(is_hex('2'), true);",
          "    assert_eq!(is_hex('3'), true);",
          "    assert_eq!(is_hex('4'), true);",
          "    assert_eq!(is_hex('5'), true);",
          "    assert_eq!(is_hex('6'), true);",
          "    assert_eq!(is_hex('7'), true);",
          "    assert_eq!(is_hex('8'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('b'), true);",
          "    assert_eq!(is_hex('c'), true);",
          "    assert_eq!(is_hex('d'), true);",
          "    assert_eq!(is_hex('e'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('B'), true);",
          "    assert_eq!(is_hex('C'), true);",
          "    assert_eq!(is_hex('D'), true);",
          "    assert_eq!(is_hex('E'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('Z'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let c = 'f';",
          "    let result = is_hex(c);",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('1'), true);",
          "    assert_eq!(is_hex('2'), true);",
          "    assert_eq!(is_hex('3'), true);",
          "    assert_eq!(is_hex('4'), true);",
          "    assert_eq!(is_hex('5'), true);",
          "    assert_eq!(is_hex('6'), true);",
          "    assert_eq!(is_hex('7'), true);",
          "    assert_eq!(is_hex('8'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('b'), true);",
          "    assert_eq!(is_hex('c'), true);",
          "    assert_eq!(is_hex('d'), true);",
          "    assert_eq!(is_hex('e'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('B'), true);",
          "    assert_eq!(is_hex('C'), true);",
          "    assert_eq!(is_hex('D'), true);",
          "    assert_eq!(is_hex('E'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('Z'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = 'A';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let c = 'A';",
          "    let result = is_hex(c);",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = 'F';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert!(result);"
        ],
        "code": [
          "{",
          "    let c = 'F';",
          "    let result = is_hex(c);",
          "    assert!(result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = 'g';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex('$'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let c = 'g';",
          "    let result = is_hex(c);",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex('$'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '@';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let c = '@';",
          "    let result = is_hex(c);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '*';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('*'), false);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex('z'), false);",
          "    assert_eq!(is_hex('='), false);"
        ],
        "code": [
          "{",
          "    let c = '*';",
          "    let result = is_hex(c);",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('*'), false);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex('z'), false);",
          "    assert_eq!(is_hex('='), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '1';",
          "    let result = is_hex(c);",
          "}"
        ],
        "oracle": [
          "    assert!(is_hex('0'));",
          "    assert!(is_hex('1'));",
          "    assert!(is_hex('2'));",
          "    assert!(is_hex('3'));",
          "    assert!(is_hex('4'));",
          "    assert!(is_hex('5'));",
          "    assert!(is_hex('6'));",
          "    assert!(is_hex('7'));",
          "    assert!(is_hex('8'));",
          "    assert!(is_hex('9'));",
          "    assert!(is_hex('a'));",
          "    assert!(is_hex('b'));",
          "    assert!(is_hex('c'));",
          "    assert!(is_hex('d'));",
          "    assert!(is_hex('e'));",
          "    assert!(is_hex('f'));",
          "    assert!(is_hex('A'));",
          "    assert!(is_hex('B'));",
          "    assert!(is_hex('C'));",
          "    assert!(is_hex('D'));",
          "    assert!(is_hex('E'));",
          "    assert!(is_hex('F'));",
          "    assert!(!is_hex('g'));",
          "    assert!(!is_hex('H'));",
          "    assert!(!is_hex('!'));",
          "    assert!(!is_hex(' '));",
          "    assert!(!is_hex(''));"
        ],
        "code": [
          "{",
          "    let c = '1';",
          "    let result = is_hex(c);",
          "    assert!(is_hex('0'));",
          "    assert!(is_hex('1'));",
          "    assert!(is_hex('2'));",
          "    assert!(is_hex('3'));",
          "    assert!(is_hex('4'));",
          "    assert!(is_hex('5'));",
          "    assert!(is_hex('6'));",
          "    assert!(is_hex('7'));",
          "    assert!(is_hex('8'));",
          "    assert!(is_hex('9'));",
          "    assert!(is_hex('a'));",
          "    assert!(is_hex('b'));",
          "    assert!(is_hex('c'));",
          "    assert!(is_hex('d'));",
          "    assert!(is_hex('e'));",
          "    assert!(is_hex('f'));",
          "    assert!(is_hex('A'));",
          "    assert!(is_hex('B'));",
          "    assert!(is_hex('C'));",
          "    assert!(is_hex('D'));",
          "    assert!(is_hex('E'));",
          "    assert!(is_hex('F'));",
          "    assert!(!is_hex('g'));",
          "    assert!(!is_hex('H'));",
          "    assert!(!is_hex('!'));",
          "    assert!(!is_hex(' '));",
          "    assert!(!is_hex(''));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]