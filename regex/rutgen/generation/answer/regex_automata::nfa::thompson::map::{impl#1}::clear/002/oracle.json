[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 1,",
          "        capacity: 5,",
          "        map: vec![Utf8SuffixEntry {",
          "            version: 1,",
          "            key: Utf8SuffixKey {},",
          "            val: StateID::new(1),",
          "        }],",
          "    };",
          "    map.clear();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 2);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));",
          "    assert_eq!(map.map.capacity(), 5);"
        ],
        "code": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 1,",
          "        capacity: 5,",
          "        map: vec![Utf8SuffixEntry {",
          "            version: 1,",
          "            key: Utf8SuffixKey {},",
          "            val: StateID::new(1),",
          "        }],",
          "    };",
          "    map.clear();",
          "    assert_eq!(map.version, 2);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));",
          "    assert_eq!(map.map.capacity(), 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 10,",
          "        capacity: 5,",
          "        map: vec![Utf8SuffixEntry {",
          "            version: 10,",
          "            key: Utf8SuffixKey {},",
          "            val: StateID::new(2),",
          "        }],",
          "    };",
          "    map.clear();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 11);",
          "    assert_eq!(map.map.len(), 5);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));"
        ],
        "code": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 10,",
          "        capacity: 5,",
          "        map: vec![Utf8SuffixEntry {",
          "            version: 10,",
          "            key: Utf8SuffixKey {},",
          "            val: StateID::new(2),",
          "        }],",
          "    };",
          "    map.clear();",
          "    assert_eq!(map.version, 11);",
          "    assert_eq!(map.map.len(), 5);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 5,",
          "        capacity: 3,",
          "        map: vec![",
          "            Utf8SuffixEntry {",
          "                version: 5,",
          "                key: Utf8SuffixKey {},",
          "                val: StateID::new(3),",
          "            },",
          "            Utf8SuffixEntry {",
          "                version: 5,",
          "                key: Utf8SuffixKey {},",
          "                val: StateID::new(4),",
          "            },",
          "        ],",
          "    };",
          "    map.clear();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 6);",
          "    assert_eq!(map.map.len(), 3);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));",
          "    assert_ne!(map.version, 0);"
        ],
        "code": [
          "{",
          "    let mut map = Utf8SuffixMap {",
          "        version: 5,",
          "        capacity: 3,",
          "        map: vec![",
          "            Utf8SuffixEntry {",
          "                version: 5,",
          "                key: Utf8SuffixKey {},",
          "                val: StateID::new(3),",
          "            },",
          "            Utf8SuffixEntry {",
          "                version: 5,",
          "                key: Utf8SuffixKey {},",
          "                val: StateID::new(4),",
          "            },",
          "        ],",
          "    };",
          "    map.clear();",
          "    assert_eq!(map.version, 6);",
          "    assert_eq!(map.map.len(), 3);",
          "    assert!(map.map.iter().all(|entry| entry == &Utf8SuffixEntry::default()));",
          "    assert_ne!(map.version, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]