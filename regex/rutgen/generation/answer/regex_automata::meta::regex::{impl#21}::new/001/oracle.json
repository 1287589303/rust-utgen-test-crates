[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = Builder::new();",
          "    // The builder is created with default configuration.",
          "}"
        ],
        "oracle": [
          "    assert_eq!(builder.config, Config::default());",
          "    assert!(builder.ast.is_initialized());",
          "    assert!(builder.hir.is_initialized());"
        ],
        "code": [
          "{",
          "    let builder = Builder::new();",
          "    // The builder is created with default configuration.",
          "    assert_eq!(builder.config, Config::default());",
          "    assert!(builder.ast.is_initialized());",
          "    assert!(builder.hir.is_initialized());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = Builder::new();",
          "    // The builder's config should be default.",
          "}"
        ],
        "oracle": [
          "    assert_eq!(builder.config, Config::default());",
          "    assert_eq!(builder.ast, ast::parse::ParserBuilder::new());",
          "    assert_eq!(builder.hir, hir::translate::TranslatorBuilder::new());"
        ],
        "code": [
          "{",
          "    let builder = Builder::new();",
          "    // The builder's config should be default.",
          "    assert_eq!(builder.config, Config::default());",
          "    assert_eq!(builder.ast, ast::parse::ParserBuilder::new());",
          "    assert_eq!(builder.hir, hir::translate::TranslatorBuilder::new());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]