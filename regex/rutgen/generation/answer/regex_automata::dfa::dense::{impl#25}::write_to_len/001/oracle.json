[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { has_empty: false, is_utf8: false, is_always_start_anchored: false };",
          "    let result = flags.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let flags = Flags { has_empty: false, is_utf8: false, is_always_start_anchored: false };",
          "    let result = flags.write_to_len();",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { has_empty: false, is_utf8: true, is_always_start_anchored: false };",
          "    let result = flags.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, size_of::<u32>());"
        ],
        "code": [
          "{",
          "    let flags = Flags { has_empty: false, is_utf8: true, is_always_start_anchored: false };",
          "    let result = flags.write_to_len();",
          "    assert_eq!(result, size_of::<u32>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { has_empty: true, is_utf8: false, is_always_start_anchored: true };",
          "    let result = flags.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let flags = Flags { has_empty: true, is_utf8: false, is_always_start_anchored: true };",
          "    let result = flags.write_to_len();",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { has_empty: true, is_utf8: true, is_always_start_anchored: true };",
          "    let result = flags.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, size_of::<u32>());"
        ],
        "code": [
          "{",
          "    let flags = Flags { has_empty: true, is_utf8: true, is_always_start_anchored: true };",
          "    let result = flags.write_to_len();",
          "    assert_eq!(result, size_of::<u32>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]