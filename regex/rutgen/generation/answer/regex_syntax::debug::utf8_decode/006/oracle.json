[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let bytes = [0b1000_0000];",
          "    let result = utf8_decode(&bytes);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Err(0b1000_0000)));"
        ],
        "code": [
          "{",
          "    let bytes = [0b1000_0000];",
          "    let result = utf8_decode(&bytes);",
          "    assert_eq!(result, Some(Err(0b1000_0000)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let bytes = [0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "}"
        ],
        "oracle": [
          "    let bytes = [0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "    assert_eq!(result, Some(Err(0b1111_1111)));"
        ],
        "code": [
          "{",
          "    let bytes = [0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "    let bytes = [0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "    assert_eq!(result, Some(Err(0b1111_1111)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let bytes = [0b1101_1111, 0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "}"
        ],
        "oracle": [
          "    let bytes = [0b1101_1111, 0b1111_1111];",
          "    let expected = Some(Err(0b1101_1111));",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let bytes = [0b1101_1111, 0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "    let bytes = [0b1101_1111, 0b1111_1111];",
          "    let expected = Some(Err(0b1101_1111));",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let bytes = [0b1110_1111, 0b1111_1111, 0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Err(0b1110_1111)));"
        ],
        "code": [
          "{",
          "    let bytes = [0b1110_1111, 0b1111_1111, 0b1111_1111];",
          "    let result = utf8_decode(&bytes);",
          "    assert_eq!(result, Some(Err(0b1110_1111)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]