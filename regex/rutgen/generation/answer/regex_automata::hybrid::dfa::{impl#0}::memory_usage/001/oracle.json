[
  {
    "uses": [
      "use crate::hybrid::dfa::DFA;"
    ],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    use crate::hybrid::dfa::DFA;",
          "    ",
          "    let dfa = DFA {",
          "        config: Default::default(),",
          "        nfa: crate::nfa::thompson::NFA::default(),",
          "        stride2: 0,",
          "        start_map: crate::util::start::StartByteMap { map: [Default::default(); 256] },",
          "        classes: crate::util::alphabet::ByteClasses([0; 256]),",
          "        quitset: crate::util::primitives::ByteSet([false; 256]),",
          "        cache_capacity: 0,",
          "    };",
          "    dfa.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(dfa.memory_usage(), 0);"
        ],
        "code": [
          "{",
          "    use crate::hybrid::dfa::DFA;",
          "    ",
          "    let dfa = DFA {",
          "        config: Default::default(),",
          "        nfa: crate::nfa::thompson::NFA::default(),",
          "        stride2: 0,",
          "        start_map: crate::util::start::StartByteMap { map: [Default::default(); 256] },",
          "        classes: crate::util::alphabet::ByteClasses([0; 256]),",
          "        quitset: crate::util::primitives::ByteSet([false; 256]),",
          "        cache_capacity: 0,",
          "    };",
          "    dfa.memory_usage();",
          "    assert_eq!(dfa.memory_usage(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    use crate::hybrid::dfa::DFA;",
          "",
          "    let dfa = DFA {",
          "        config: Default::default(),",
          "        nfa: crate::nfa::thompson::NFA::default(),",
          "        stride2: 0,",
          "        start_map: crate::util::start::StartByteMap { map: [Default::default(); 256] },",
          "        classes: crate::util::alphabet::ByteClasses([0; 256]),",
          "        quitset: crate::util::primitives::ByteSet([false; 256]),",
          "        cache_capacity: 0,",
          "    };",
          "    dfa.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(dfa.memory_usage(), 0);"
        ],
        "code": [
          "{",
          "    use crate::hybrid::dfa::DFA;",
          "",
          "    let dfa = DFA {",
          "        config: Default::default(),",
          "        nfa: crate::nfa::thompson::NFA::default(),",
          "        stride2: 0,",
          "        start_map: crate::util::start::StartByteMap { map: [Default::default(); 256] },",
          "        classes: crate::util::alphabet::ByteClasses([0; 256]),",
          "        quitset: crate::util::primitives::ByteSet([false; 256]),",
          "        cache_capacity: 0,",
          "    };",
          "    dfa.memory_usage();",
          "    assert_eq!(dfa.memory_usage(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]