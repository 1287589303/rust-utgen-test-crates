[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    let _result = builder.unicode(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(builder.builder.syntaxc.unicode, true);",
          "    let mut builder2 = RegexBuilder::new(r\"\\w\");",
          "    let _result2 = builder2.unicode(false);",
          "    assert_eq!(builder2.builder.syntaxc.unicode, false);",
          "    let mut builder3 = RegexBuilder::new(r\".\");",
          "    let _result3 = builder3.unicode(true);",
          "    assert_eq!(builder3.builder.syntaxc.unicode, true);"
        ],
        "code": [
          "{",
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    let _result = builder.unicode(true);",
          "    assert_eq!(builder.builder.syntaxc.unicode, true);",
          "    let mut builder2 = RegexBuilder::new(r\"\\w\");",
          "    let _result2 = builder2.unicode(false);",
          "    assert_eq!(builder2.builder.syntaxc.unicode, false);",
          "    let mut builder3 = RegexBuilder::new(r\".\");",
          "    let _result3 = builder3.unicode(true);",
          "    assert_eq!(builder3.builder.syntaxc.unicode, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    let _result = builder.unicode(false);",
          "}"
        ],
        "oracle": [
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    assert_eq!(builder.unicode(false), &mut builder);"
        ],
        "code": [
          "{",
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    let _result = builder.unicode(false);",
          "    let mut builder = RegexBuilder::new(r\"\\w\");",
          "    assert_eq!(builder.unicode(false), &mut builder);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]