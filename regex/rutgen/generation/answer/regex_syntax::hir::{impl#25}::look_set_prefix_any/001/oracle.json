[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "}"
        ],
        "oracle": [
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 0 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0 });",
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 1 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 1 });",
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 2 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 2 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 0 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0 });",
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 1 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 1 });",
          "    let properties = Properties(Box::new(PropertiesI { look_set_prefix_any: LookSet { bits: 2 }, ..Default::default() }));",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 2 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_prefix: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_suffix: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_prefix_any: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_suffix_any: LookSet { bits: 0xFFFFFFFF },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_prefix_any().bits, 0xFFFFFFFF);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_prefix: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_suffix: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_prefix_any: LookSet { bits: 0xFFFFFFFF },",
          "        look_set_suffix_any: LookSet { bits: 0xFFFFFFFF },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "    assert_eq!(properties.look_set_prefix_any().bits, 0xFFFFFFFF);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_prefix: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_suffix: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_prefix_any: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_suffix_any: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0b00000000000000000000000000001111 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_prefix: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_suffix: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_prefix_any: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        look_set_suffix_any: LookSet { bits: 0b00000000000000000000000000001111 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0b00000000000000000000000000001111 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_prefix: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_suffix: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_prefix_any: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_suffix_any: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0b00000000000000000000000000000001 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_prefix: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_suffix: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_prefix_any: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        look_set_suffix_any: LookSet { bits: 0b00000000000000000000000000000001 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0b00000000000000000000000000000001 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_prefix_any();",
          "    assert_eq!(properties.look_set_prefix_any(), LookSet { bits: 0 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]