[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"Hello $1!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 1 {",
          "            dst.push_str(\"World\");",
          "        }",
          "    };",
          "    let name_to_index = |_: &str| None; // No named captures in this test",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "}"
        ],
        "oracle": [
          "    dst == \"Hello World!\"",
          "    dst.len() == 13",
          "    dst.contains(\"Hello\") == true",
          "    dst.contains(\"World\") == true",
          "    dst.contains(\"!\") == true"
        ],
        "code": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"Hello $1!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 1 {",
          "            dst.push_str(\"World\");",
          "        }",
          "    };",
          "    let name_to_index = |_: &str| None; // No named captures in this test",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "    dst == \"Hello World!\"",
          "    dst.len() == 13",
          "    dst.contains(\"Hello\") == true",
          "    dst.contains(\"World\") == true",
          "    dst.contains(\"!\") == true",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"Hello ${name}!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 0 {",
          "            dst.push_str(\"Universe\");",
          "        }",
          "    };",
          "    let name_to_index = |name: &str| {",
          "        if name == \"name\" {",
          "            Some(0)",
          "        } else {",
          "            None",
          "        }",
          "    };",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(dst, \"Hello Universe!\");",
          "    assert!(dst.contains(\"Universe\"));",
          "    assert!(!dst.contains(\"${name}\"));",
          "    assert_eq!(dst.len(), 18);",
          "    assert!(dst.ends_with(\"!\"));"
        ],
        "code": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"Hello ${name}!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 0 {",
          "            dst.push_str(\"Universe\");",
          "        }",
          "    };",
          "    let name_to_index = |name: &str| {",
          "        if name == \"name\" {",
          "            Some(0)",
          "        } else {",
          "            None",
          "        }",
          "    };",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "    assert_eq!(dst, \"Hello Universe!\");",
          "    assert!(dst.contains(\"Universe\"));",
          "    assert!(!dst.contains(\"${name}\"));",
          "    assert_eq!(dst.len(), 18);",
          "    assert!(dst.ends_with(\"!\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"$1 says hello to ${friend}!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 1 {",
          "            dst.push_str(\"Alice\");",
          "        } else if i == 0 {",
          "            dst.push_str(\"Bob\");",
          "        }",
          "    };",
          "    let name_to_index = |name: &str| {",
          "        if name == \"friend\" {",
          "            Some(0)",
          "        } else {",
          "            None",
          "        }",
          "    };",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "}"
        ],
        "oracle": [
          "    dst.assert_eq(\"Alice says hello to Bob!\");"
        ],
        "code": [
          "{",
          "    let mut dst = String::new();",
          "    let replacement = \"$1 says hello to ${friend}!\";",
          "    let mut append = |i: usize, dst: &mut String| {",
          "        if i == 1 {",
          "            dst.push_str(\"Alice\");",
          "        } else if i == 0 {",
          "            dst.push_str(\"Bob\");",
          "        }",
          "    };",
          "    let name_to_index = |name: &str| {",
          "        if name == \"friend\" {",
          "            Some(0)",
          "        } else {",
          "            None",
          "        }",
          "    };",
          "",
          "    string(replacement, append, name_to_index, &mut dst);",
          "    dst.assert_eq(\"Alice says hello to Bob!\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]