[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    for byte in 0..=255 {",
          "        byte_set.add(byte);",
          "    }",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_classes.0[0], 0);",
          "    assert_eq!(_classes.0[1], 1);",
          "    assert_eq!(_classes.0[2], 2);",
          "    assert_eq!(_classes.0[3], 3);",
          "    assert_eq!(_classes.0[4], 4);",
          "    assert_eq!(_classes.0[5], 5);",
          "    assert_eq!(_classes.0[6], 6);",
          "    assert_eq!(_classes.0[7], 7);",
          "    assert_eq!(_classes.0[8], 8);",
          "    assert_eq!(_classes.0[9], 9);",
          "    assert_eq!(_classes.0[10], 10);",
          "    assert_eq!(_classes.0[11], 11);",
          "    assert_eq!(_classes.0[12], 12);",
          "    assert_eq!(_classes.0[13], 13);",
          "    assert_eq!(_classes.0[14], 14);",
          "    assert_eq!(_classes.0[15], 15);",
          "    assert_eq!(_classes.0[16], 16);",
          "    assert_eq!(_classes.0[17], 17);",
          "    assert_eq!(_classes.0[18], 18);",
          "    assert_eq!(_classes.0[19], 19);",
          "    assert_eq!(_classes.0[20], 20);",
          "    assert_eq!(_classes.0[21], 21);",
          "    assert_eq!(_classes.0[22], 22);",
          "    assert_eq!(_classes.0[23], 23);",
          "    assert_eq!(_classes.0[24], 24);",
          "    assert_eq!(_classes.0[25], 25);",
          "    assert_eq!(_classes.0[26], 26);",
          "    assert_eq!(_classes.0[27], 27);",
          "    assert_eq!(_classes.0[28], 28);",
          "    assert_eq!(_classes.0[29], 29);",
          "    assert_eq!(_classes.0[30], 30);",
          "    assert_eq!(_classes.0[31], 31);",
          "    assert_eq!(_classes.0[32], 32);",
          "    assert_eq!(_classes.0[33], 33);",
          "    assert_eq!(_classes.0[34], 34);",
          "    assert_eq!(_classes.0[35], 35);",
          "    assert_eq!(_classes.0[36], 36);",
          "    assert_eq!(_classes.0[37], 37);",
          "    assert_eq!(_classes.0[38], 38);",
          "    assert_eq!(_classes.0[39], 39);",
          "    assert_eq!(_classes.0[40], 40);",
          "    assert_eq!(_classes.0[41], 41);",
          "    assert_eq!(_classes.0[42], 42);",
          "    assert_eq!(_classes.0[43], 43);",
          "    assert_eq!(_classes.0[44], 44);",
          "    assert_eq!(_classes.0[45], 45);",
          "    assert_eq!(_classes.0[46], 46);",
          "    assert_eq!(_classes.0[47], 47);",
          "    assert_eq!(_classes.0[48], 48);",
          "    assert_eq!(_classes.0[49], 49);",
          "    assert_eq!(_classes.0[50], 50);",
          "    assert_eq!(_classes.0[51], 51);",
          "    assert_eq!(_classes.0[52], 52);",
          "    assert_eq!(_classes.0[53], 53);",
          "    assert_eq!(_classes.0[54], 54);",
          "    assert_eq!(_classes.0[55], 55);",
          "    assert_eq!(_classes.0[56], 56);",
          "    assert_eq!(_classes.0[57], 57);",
          "    assert_eq!(_classes.0[58], 58);",
          "    assert_eq!(_classes.0[59], 59);",
          "    assert_eq!(_classes.0[60], 60);",
          "    assert_eq!(_classes.0[61], 61);",
          "    assert_eq!(_classes.0[62], 62);",
          "    assert_eq!(_classes.0[63], 63);",
          "    assert_eq!(_classes.0[64], 64);",
          "    assert_eq!(_classes.0[65], 65);",
          "    assert_eq!(_classes.0[66], 66);",
          "    assert_eq!(_classes.0[67], 67);",
          "    assert_eq!(_classes.0[68], 68);",
          "    assert_eq!(_classes.0[69], 69);",
          "    assert_eq!(_classes.0[70], 70);",
          "    assert_eq!(_classes.0[71], 71);",
          "    assert_eq!(_classes.0[72], 72);",
          "    assert_eq!(_classes.0[73], 73);",
          "    assert_eq!(_classes.0[74], 74);",
          "    assert_eq!(_classes.0[75], 75);",
          "    assert_eq!(_classes.0[76], 76);",
          "    assert_eq!(_classes.0[77], 77);",
          "    assert_eq!(_classes.0[78], 78);",
          "    assert_eq!(_classes.0[79], 79);",
          "    assert_eq!(_classes.0[80], 80);",
          "    assert_eq!(_classes.0[81], 81);",
          "    assert_eq!(_classes.0[82], 82);",
          "    assert_eq!(_classes.0[83], 83);",
          "    assert_eq!(_classes.0[84], 84);",
          "    assert_eq!(_classes.0[85], 85);",
          "    assert_eq!(_classes.0[86], 86);",
          "    assert_eq!(_classes.0[87], 87);",
          "    assert_eq!(_classes.0[88], 88);",
          "    assert_eq!(_classes.0[89], 89);",
          "    assert_eq!(_classes.0[90], 90);",
          "    assert_eq!(_classes.0[91], 91);",
          "    assert_eq!(_classes.0[92], 92);",
          "    assert_eq!(_classes.0[93], 93);",
          "    assert_eq!(_classes.0[94], 94);",
          "    assert_eq!(_classes.0[95], 95);",
          "    assert_eq!(_classes.0[96], 96);",
          "    assert_eq!(_classes.0[97], 97);",
          "    assert_eq!(_classes.0[98], 98);",
          "    assert_eq!(_classes.0[99], 99);",
          "    assert_eq!(_classes.0[100], 100);",
          "    assert_eq!(_classes.0[101], 101);",
          "    assert_eq!(_classes.0[102], 102);",
          "    assert_eq!(_classes.0[103], 103);",
          "    assert_eq!(_classes.0[104], 104);",
          "    assert_eq!(_classes.0[105], 105);",
          "    assert_eq!(_classes.0[106], 106);",
          "    assert_eq!(_classes.0[107], 107);",
          "    assert_eq!(_classes.0[108], 108);",
          "    assert_eq!(_classes.0[109], 109);",
          "    assert_eq!(_classes.0[110], 110);",
          "    assert_eq!(_classes.0[111], 111);",
          "    assert_eq!(_classes.0[112], 112);",
          "    assert_eq!(_classes.0[113], 113);",
          "    assert_eq!(_classes.0[114], 114);",
          "    assert_eq!(_classes.0[115], 115);",
          "    assert_eq!(_classes.0[116], 116);",
          "    assert_eq!(_classes.0[117], 117);",
          "    assert_eq!(_classes.0[118], 118);",
          "    assert_eq!(_classes.0[119], 119);",
          "    assert_eq!(_classes.0[120], 120);",
          "    assert_eq!(_classes.0[121], 121);",
          "    assert_eq!(_classes.0[122], 122);",
          "    assert_eq!(_classes.0[123], 123);",
          "    assert_eq!(_classes.0[124], 124);",
          "    assert_eq!(_classes.0[125], 125);",
          "    assert_eq!(_classes.0[126], 126);",
          "    assert_eq!(_classes.0[127], 127);",
          "    assert_eq!(_classes.0[128], 128);",
          "    assert_eq!(_classes.0[129], 129);",
          "    assert_eq!(_classes.0[130], 130);",
          "    assert_eq!(_classes.0[131], 131);",
          "    assert_eq!(_classes.0[132], 132);",
          "    assert_eq!(_classes.0[133], 133);",
          "    assert_eq!(_classes.0[134], 134);",
          "    assert_eq!(_classes.0[135], 135);",
          "    assert_eq!(_classes.0[136], 136);",
          "    assert_eq!(_classes.0[137], 137);",
          "    assert_eq!(_classes.0[138], 138);",
          "    assert_eq!(_classes.0[139], 139);",
          "    assert_eq!(_classes.0[140], 140);",
          "    assert_eq!(_classes.0[141], 141);",
          "    assert_eq!(_classes.0[142], 142);",
          "    assert_eq!(_classes.0[143], 143);",
          "    assert_eq!(_classes.0[144], 144);",
          "    assert_eq!(_classes.0[145], 145);",
          "    assert_eq!(_classes.0[146], 146);",
          "    assert_eq!(_classes.0[147], 147);",
          "    assert_eq!(_classes.0[148], 148);",
          "    assert_eq!(_classes.0[149], 149);",
          "    assert_eq!(_classes.0[150], 150);",
          "    assert_eq!(_classes.0[151], 151);",
          "    assert_eq!(_classes.0[152], 152);",
          "    assert_eq!(_classes.0[153], 153);",
          "    assert_eq!(_classes.0[154], 154);",
          "    assert_eq!(_classes.0[155], 155);",
          "    assert_eq!(_classes.0[156], 156);",
          "    assert_eq!(_classes.0[157], 157);",
          "    assert_eq!(_classes.0[158], 158);",
          "    assert_eq!(_classes.0[159], 159);",
          "    assert_eq!(_classes.0[160], 160);",
          "    assert_eq!(_classes.0[161], 161);",
          "    assert_eq!(_classes.0[162], 162);",
          "    assert_eq!(_classes.0[163], 163);",
          "    assert_eq!(_classes.0[164], 164);",
          "    assert_eq!(_classes.0[165], 165);",
          "    assert_eq!(_classes.0[166], 166);",
          "    assert_eq!(_classes.0[167], 167);",
          "    assert_eq!(_classes.0[168], 168);",
          "    assert_eq!(_classes.0[169], 169);",
          "    assert_eq!(_classes.0[170], 170);",
          "    assert_eq!(_classes.0[171], 171);",
          "    assert_eq!(_classes.0[172], 172);",
          "    assert_eq!(_classes.0[173], 173);",
          "    assert_eq!(_classes.0[174], 174);",
          "    assert_eq!(_classes.0[175], 175);",
          "    assert_eq!(_classes.0[176], 176);",
          "    assert_eq!(_classes.0[177], 177);",
          "    assert_eq!(_classes.0[178], 178);",
          "    assert_eq!(_classes.0[179], 179);",
          "    assert_eq!(_classes.0[180], 180);",
          "    assert_eq!(_classes.0[181], 181);",
          "    assert_eq!(_classes.0[182], 182);",
          "    assert_eq!(_classes.0[183], 183);",
          "    assert_eq!(_classes.0[184], 184);",
          "    assert_eq!(_classes.0[185], 185);",
          "    assert_eq!(_classes.0[186], 186);",
          "    assert_eq!(_classes.0[187], 187);",
          "    assert_eq!(_classes.0[188], 188);",
          "    assert_eq!(_classes.0[189], 189);",
          "    assert_eq!(_classes.0[190], 190);",
          "    assert_eq!(_classes.0[191], 191);",
          "    assert_eq!(_classes.0[192], 192);",
          "    assert_eq!(_classes.0[193], 193);",
          "    assert_eq!(_classes.0[194], 194);",
          "    assert_eq!(_classes.0[195], 195);",
          "    assert_eq!(_classes.0[196], 196);",
          "    assert_eq!(_classes.0[197], 197);",
          "    assert_eq!(_classes.0[198], 198);",
          "    assert_eq!(_classes.0[199], 199);",
          "    assert_eq!(_classes.0[200], 200);",
          "    assert_eq!(_classes.0[201], 201);",
          "    assert_eq!(_classes.0[202], 202);",
          "    assert_eq!(_classes.0[203], 203);",
          "    assert_eq!(_classes.0[204], 204);",
          "    assert_eq!(_classes.0[205], 205);",
          "    assert_eq!(_classes.0[206], 206);",
          "    assert_eq!(_classes.0[207], 207);",
          "    assert_eq!(_classes.0[208], 208);",
          "    assert_eq!(_classes.0[209], 209);",
          "    assert_eq!(_classes.0[210], 210);",
          "    assert_eq!(_classes.0[211], 211);",
          "    assert_eq!(_classes.0[212], 212);",
          "    assert_eq!(_classes.0[213], 213);",
          "    assert_eq!(_classes.0[214], 214);",
          "    assert_eq!(_classes.0[215], 215);",
          "    assert_eq!(_classes.0[216], 216);",
          "    assert_eq!(_classes.0[217], 217);",
          "    assert_eq!(_classes.0[218], 218);",
          "    assert_eq!(_classes.0[219], 219);",
          "    assert_eq!(_classes.0[220], 220);",
          "    assert_eq!(_classes.0[221], 221);",
          "    assert_eq!(_classes.0[222], 222);",
          "    assert_eq!(_classes.0[223], 223);",
          "    assert_eq!(_classes.0[224], 224);",
          "    assert_eq!(_classes.0[225], 225);",
          "    assert_eq!(_classes.0[226], 226);",
          "    assert_eq!(_classes.0[227], 227);",
          "    assert_eq!(_classes.0[228], 228);",
          "    assert_eq!(_classes.0[229], 229);",
          "    assert_eq!(_classes.0[230], 230);",
          "    assert_eq!(_classes.0[231], 231);",
          "    assert_eq!(_classes.0[232], 232);",
          "    assert_eq!(_classes.0[233], 233);",
          "    assert_eq!(_classes.0[234], 234);",
          "    assert_eq!(_classes.0[235], 235);",
          "    assert_eq!(_classes.0[236], 236);",
          "    assert_eq!(_classes.0[237], 237);",
          "    assert_eq!(_classes.0[238], 238);",
          "    assert_eq!(_classes.0[239], 239);",
          "    assert_eq!(_classes.0[240], 240);",
          "    assert_eq!(_classes.0[241], 241);",
          "    assert_eq!(_classes.0[242], 242);",
          "    assert_eq!(_classes.0[243], 243);",
          "    assert_eq!(_classes.0[244], 244);",
          "    assert_eq!(_classes.0[245], 245);",
          "    assert_eq!(_classes.0[246], 246);",
          "    assert_eq!(_classes.0[247], 247);",
          "    assert_eq!(_classes.0[248], 248);",
          "    assert_eq!(_classes.0[249], 249);",
          "    assert_eq!(_classes.0[250], 250);",
          "    assert_eq!(_classes.0[251], 251);",
          "    assert_eq!(_classes.0[252], 252);",
          "    assert_eq!(_classes.0[253], 253);",
          "    assert_eq!(_classes.0[254], 254);",
          "    assert_eq!(_classes.0[255], 255);"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    for byte in 0..=255 {",
          "        byte_set.add(byte);",
          "    }",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "    assert_eq!(_classes.0[0], 0);",
          "    assert_eq!(_classes.0[1], 1);",
          "    assert_eq!(_classes.0[2], 2);",
          "    assert_eq!(_classes.0[3], 3);",
          "    assert_eq!(_classes.0[4], 4);",
          "    assert_eq!(_classes.0[5], 5);",
          "    assert_eq!(_classes.0[6], 6);",
          "    assert_eq!(_classes.0[7], 7);",
          "    assert_eq!(_classes.0[8], 8);",
          "    assert_eq!(_classes.0[9], 9);",
          "    assert_eq!(_classes.0[10], 10);",
          "    assert_eq!(_classes.0[11], 11);",
          "    assert_eq!(_classes.0[12], 12);",
          "    assert_eq!(_classes.0[13], 13);",
          "    assert_eq!(_classes.0[14], 14);",
          "    assert_eq!(_classes.0[15], 15);",
          "    assert_eq!(_classes.0[16], 16);",
          "    assert_eq!(_classes.0[17], 17);",
          "    assert_eq!(_classes.0[18], 18);",
          "    assert_eq!(_classes.0[19], 19);",
          "    assert_eq!(_classes.0[20], 20);",
          "    assert_eq!(_classes.0[21], 21);",
          "    assert_eq!(_classes.0[22], 22);",
          "    assert_eq!(_classes.0[23], 23);",
          "    assert_eq!(_classes.0[24], 24);",
          "    assert_eq!(_classes.0[25], 25);",
          "    assert_eq!(_classes.0[26], 26);",
          "    assert_eq!(_classes.0[27], 27);",
          "    assert_eq!(_classes.0[28], 28);",
          "    assert_eq!(_classes.0[29], 29);",
          "    assert_eq!(_classes.0[30], 30);",
          "    assert_eq!(_classes.0[31], 31);",
          "    assert_eq!(_classes.0[32], 32);",
          "    assert_eq!(_classes.0[33], 33);",
          "    assert_eq!(_classes.0[34], 34);",
          "    assert_eq!(_classes.0[35], 35);",
          "    assert_eq!(_classes.0[36], 36);",
          "    assert_eq!(_classes.0[37], 37);",
          "    assert_eq!(_classes.0[38], 38);",
          "    assert_eq!(_classes.0[39], 39);",
          "    assert_eq!(_classes.0[40], 40);",
          "    assert_eq!(_classes.0[41], 41);",
          "    assert_eq!(_classes.0[42], 42);",
          "    assert_eq!(_classes.0[43], 43);",
          "    assert_eq!(_classes.0[44], 44);",
          "    assert_eq!(_classes.0[45], 45);",
          "    assert_eq!(_classes.0[46], 46);",
          "    assert_eq!(_classes.0[47], 47);",
          "    assert_eq!(_classes.0[48], 48);",
          "    assert_eq!(_classes.0[49], 49);",
          "    assert_eq!(_classes.0[50], 50);",
          "    assert_eq!(_classes.0[51], 51);",
          "    assert_eq!(_classes.0[52], 52);",
          "    assert_eq!(_classes.0[53], 53);",
          "    assert_eq!(_classes.0[54], 54);",
          "    assert_eq!(_classes.0[55], 55);",
          "    assert_eq!(_classes.0[56], 56);",
          "    assert_eq!(_classes.0[57], 57);",
          "    assert_eq!(_classes.0[58], 58);",
          "    assert_eq!(_classes.0[59], 59);",
          "    assert_eq!(_classes.0[60], 60);",
          "    assert_eq!(_classes.0[61], 61);",
          "    assert_eq!(_classes.0[62], 62);",
          "    assert_eq!(_classes.0[63], 63);",
          "    assert_eq!(_classes.0[64], 64);",
          "    assert_eq!(_classes.0[65], 65);",
          "    assert_eq!(_classes.0[66], 66);",
          "    assert_eq!(_classes.0[67], 67);",
          "    assert_eq!(_classes.0[68], 68);",
          "    assert_eq!(_classes.0[69], 69);",
          "    assert_eq!(_classes.0[70], 70);",
          "    assert_eq!(_classes.0[71], 71);",
          "    assert_eq!(_classes.0[72], 72);",
          "    assert_eq!(_classes.0[73], 73);",
          "    assert_eq!(_classes.0[74], 74);",
          "    assert_eq!(_classes.0[75], 75);",
          "    assert_eq!(_classes.0[76], 76);",
          "    assert_eq!(_classes.0[77], 77);",
          "    assert_eq!(_classes.0[78], 78);",
          "    assert_eq!(_classes.0[79], 79);",
          "    assert_eq!(_classes.0[80], 80);",
          "    assert_eq!(_classes.0[81], 81);",
          "    assert_eq!(_classes.0[82], 82);",
          "    assert_eq!(_classes.0[83], 83);",
          "    assert_eq!(_classes.0[84], 84);",
          "    assert_eq!(_classes.0[85], 85);",
          "    assert_eq!(_classes.0[86], 86);",
          "    assert_eq!(_classes.0[87], 87);",
          "    assert_eq!(_classes.0[88], 88);",
          "    assert_eq!(_classes.0[89], 89);",
          "    assert_eq!(_classes.0[90], 90);",
          "    assert_eq!(_classes.0[91], 91);",
          "    assert_eq!(_classes.0[92], 92);",
          "    assert_eq!(_classes.0[93], 93);",
          "    assert_eq!(_classes.0[94], 94);",
          "    assert_eq!(_classes.0[95], 95);",
          "    assert_eq!(_classes.0[96], 96);",
          "    assert_eq!(_classes.0[97], 97);",
          "    assert_eq!(_classes.0[98], 98);",
          "    assert_eq!(_classes.0[99], 99);",
          "    assert_eq!(_classes.0[100], 100);",
          "    assert_eq!(_classes.0[101], 101);",
          "    assert_eq!(_classes.0[102], 102);",
          "    assert_eq!(_classes.0[103], 103);",
          "    assert_eq!(_classes.0[104], 104);",
          "    assert_eq!(_classes.0[105], 105);",
          "    assert_eq!(_classes.0[106], 106);",
          "    assert_eq!(_classes.0[107], 107);",
          "    assert_eq!(_classes.0[108], 108);",
          "    assert_eq!(_classes.0[109], 109);",
          "    assert_eq!(_classes.0[110], 110);",
          "    assert_eq!(_classes.0[111], 111);",
          "    assert_eq!(_classes.0[112], 112);",
          "    assert_eq!(_classes.0[113], 113);",
          "    assert_eq!(_classes.0[114], 114);",
          "    assert_eq!(_classes.0[115], 115);",
          "    assert_eq!(_classes.0[116], 116);",
          "    assert_eq!(_classes.0[117], 117);",
          "    assert_eq!(_classes.0[118], 118);",
          "    assert_eq!(_classes.0[119], 119);",
          "    assert_eq!(_classes.0[120], 120);",
          "    assert_eq!(_classes.0[121], 121);",
          "    assert_eq!(_classes.0[122], 122);",
          "    assert_eq!(_classes.0[123], 123);",
          "    assert_eq!(_classes.0[124], 124);",
          "    assert_eq!(_classes.0[125], 125);",
          "    assert_eq!(_classes.0[126], 126);",
          "    assert_eq!(_classes.0[127], 127);",
          "    assert_eq!(_classes.0[128], 128);",
          "    assert_eq!(_classes.0[129], 129);",
          "    assert_eq!(_classes.0[130], 130);",
          "    assert_eq!(_classes.0[131], 131);",
          "    assert_eq!(_classes.0[132], 132);",
          "    assert_eq!(_classes.0[133], 133);",
          "    assert_eq!(_classes.0[134], 134);",
          "    assert_eq!(_classes.0[135], 135);",
          "    assert_eq!(_classes.0[136], 136);",
          "    assert_eq!(_classes.0[137], 137);",
          "    assert_eq!(_classes.0[138], 138);",
          "    assert_eq!(_classes.0[139], 139);",
          "    assert_eq!(_classes.0[140], 140);",
          "    assert_eq!(_classes.0[141], 141);",
          "    assert_eq!(_classes.0[142], 142);",
          "    assert_eq!(_classes.0[143], 143);",
          "    assert_eq!(_classes.0[144], 144);",
          "    assert_eq!(_classes.0[145], 145);",
          "    assert_eq!(_classes.0[146], 146);",
          "    assert_eq!(_classes.0[147], 147);",
          "    assert_eq!(_classes.0[148], 148);",
          "    assert_eq!(_classes.0[149], 149);",
          "    assert_eq!(_classes.0[150], 150);",
          "    assert_eq!(_classes.0[151], 151);",
          "    assert_eq!(_classes.0[152], 152);",
          "    assert_eq!(_classes.0[153], 153);",
          "    assert_eq!(_classes.0[154], 154);",
          "    assert_eq!(_classes.0[155], 155);",
          "    assert_eq!(_classes.0[156], 156);",
          "    assert_eq!(_classes.0[157], 157);",
          "    assert_eq!(_classes.0[158], 158);",
          "    assert_eq!(_classes.0[159], 159);",
          "    assert_eq!(_classes.0[160], 160);",
          "    assert_eq!(_classes.0[161], 161);",
          "    assert_eq!(_classes.0[162], 162);",
          "    assert_eq!(_classes.0[163], 163);",
          "    assert_eq!(_classes.0[164], 164);",
          "    assert_eq!(_classes.0[165], 165);",
          "    assert_eq!(_classes.0[166], 166);",
          "    assert_eq!(_classes.0[167], 167);",
          "    assert_eq!(_classes.0[168], 168);",
          "    assert_eq!(_classes.0[169], 169);",
          "    assert_eq!(_classes.0[170], 170);",
          "    assert_eq!(_classes.0[171], 171);",
          "    assert_eq!(_classes.0[172], 172);",
          "    assert_eq!(_classes.0[173], 173);",
          "    assert_eq!(_classes.0[174], 174);",
          "    assert_eq!(_classes.0[175], 175);",
          "    assert_eq!(_classes.0[176], 176);",
          "    assert_eq!(_classes.0[177], 177);",
          "    assert_eq!(_classes.0[178], 178);",
          "    assert_eq!(_classes.0[179], 179);",
          "    assert_eq!(_classes.0[180], 180);",
          "    assert_eq!(_classes.0[181], 181);",
          "    assert_eq!(_classes.0[182], 182);",
          "    assert_eq!(_classes.0[183], 183);",
          "    assert_eq!(_classes.0[184], 184);",
          "    assert_eq!(_classes.0[185], 185);",
          "    assert_eq!(_classes.0[186], 186);",
          "    assert_eq!(_classes.0[187], 187);",
          "    assert_eq!(_classes.0[188], 188);",
          "    assert_eq!(_classes.0[189], 189);",
          "    assert_eq!(_classes.0[190], 190);",
          "    assert_eq!(_classes.0[191], 191);",
          "    assert_eq!(_classes.0[192], 192);",
          "    assert_eq!(_classes.0[193], 193);",
          "    assert_eq!(_classes.0[194], 194);",
          "    assert_eq!(_classes.0[195], 195);",
          "    assert_eq!(_classes.0[196], 196);",
          "    assert_eq!(_classes.0[197], 197);",
          "    assert_eq!(_classes.0[198], 198);",
          "    assert_eq!(_classes.0[199], 199);",
          "    assert_eq!(_classes.0[200], 200);",
          "    assert_eq!(_classes.0[201], 201);",
          "    assert_eq!(_classes.0[202], 202);",
          "    assert_eq!(_classes.0[203], 203);",
          "    assert_eq!(_classes.0[204], 204);",
          "    assert_eq!(_classes.0[205], 205);",
          "    assert_eq!(_classes.0[206], 206);",
          "    assert_eq!(_classes.0[207], 207);",
          "    assert_eq!(_classes.0[208], 208);",
          "    assert_eq!(_classes.0[209], 209);",
          "    assert_eq!(_classes.0[210], 210);",
          "    assert_eq!(_classes.0[211], 211);",
          "    assert_eq!(_classes.0[212], 212);",
          "    assert_eq!(_classes.0[213], 213);",
          "    assert_eq!(_classes.0[214], 214);",
          "    assert_eq!(_classes.0[215], 215);",
          "    assert_eq!(_classes.0[216], 216);",
          "    assert_eq!(_classes.0[217], 217);",
          "    assert_eq!(_classes.0[218], 218);",
          "    assert_eq!(_classes.0[219], 219);",
          "    assert_eq!(_classes.0[220], 220);",
          "    assert_eq!(_classes.0[221], 221);",
          "    assert_eq!(_classes.0[222], 222);",
          "    assert_eq!(_classes.0[223], 223);",
          "    assert_eq!(_classes.0[224], 224);",
          "    assert_eq!(_classes.0[225], 225);",
          "    assert_eq!(_classes.0[226], 226);",
          "    assert_eq!(_classes.0[227], 227);",
          "    assert_eq!(_classes.0[228], 228);",
          "    assert_eq!(_classes.0[229], 229);",
          "    assert_eq!(_classes.0[230], 230);",
          "    assert_eq!(_classes.0[231], 231);",
          "    assert_eq!(_classes.0[232], 232);",
          "    assert_eq!(_classes.0[233], 233);",
          "    assert_eq!(_classes.0[234], 234);",
          "    assert_eq!(_classes.0[235], 235);",
          "    assert_eq!(_classes.0[236], 236);",
          "    assert_eq!(_classes.0[237], 237);",
          "    assert_eq!(_classes.0[238], 238);",
          "    assert_eq!(_classes.0[239], 239);",
          "    assert_eq!(_classes.0[240], 240);",
          "    assert_eq!(_classes.0[241], 241);",
          "    assert_eq!(_classes.0[242], 242);",
          "    assert_eq!(_classes.0[243], 243);",
          "    assert_eq!(_classes.0[244], 244);",
          "    assert_eq!(_classes.0[245], 245);",
          "    assert_eq!(_classes.0[246], 246);",
          "    assert_eq!(_classes.0[247], 247);",
          "    assert_eq!(_classes.0[248], 248);",
          "    assert_eq!(_classes.0[249], 249);",
          "    assert_eq!(_classes.0[250], 250);",
          "    assert_eq!(_classes.0[251], 251);",
          "    assert_eq!(_classes.0[252], 252);",
          "    assert_eq!(_classes.0[253], 253);",
          "    assert_eq!(_classes.0[254], 254);",
          "    assert_eq!(_classes.0[255], 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    for byte in 10..=100 {",
          "        byte_set.add(byte);",
          "    }",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "}"
        ],
        "oracle": [
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes.get(255), 0);",
          "    byte_set.add(0);",
          "    let classes_with_zero = byte_class_set.byte_classes();",
          "    assert_eq!(classes_with_zero.get(0), 1);",
          "    assert!(classes_with_zero.get(255) < 256);",
          "    byte_set.add(200);",
          "    let classes_with_200 = byte_class_set.byte_classes();",
          "    assert!(classes_with_200.get(200) > 0);",
          "    assert_ne!(classes.get(200), classes_with_200.get(200));"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    for byte in 10..=100 {",
          "        byte_set.add(byte);",
          "    }",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes.get(255), 0);",
          "    byte_set.add(0);",
          "    let classes_with_zero = byte_class_set.byte_classes();",
          "    assert_eq!(classes_with_zero.get(0), 1);",
          "    assert!(classes_with_zero.get(255) < 256);",
          "    byte_set.add(200);",
          "    let classes_with_200 = byte_class_set.byte_classes();",
          "    assert!(classes_with_200.get(200) > 0);",
          "    assert_ne!(classes.get(200), classes_with_200.get(200));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_set = ByteSet::empty();",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "}"
        ],
        "oracle": [
          "    let byte_set = ByteSet::empty();",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes, ByteClasses::empty());",
          "    byte_class_set.set_range(0, 255);",
          "    let classes_after_range = byte_class_set.byte_classes();",
          "    assert!(classes_after_range.iter().all(|&class| class == 0));",
          "    let byte_set_with_contents = ByteSet::from_bytes(&[0, 128, 255]).unwrap().0;",
          "    let byte_class_set_with_contents = ByteClassSet(byte_set_with_contents);",
          "    let classes_with_contents = byte_class_set_with_contents.byte_classes();",
          "    assert!(classes_with_contents.get(0) > 0);",
          "    assert!(classes_with_contents.get(128) > 0);",
          "    assert!(classes_with_contents.get(255) > 0);"
        ],
        "code": [
          "{",
          "    let byte_set = ByteSet::empty();",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "    let byte_set = ByteSet::empty();",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes, ByteClasses::empty());",
          "    byte_class_set.set_range(0, 255);",
          "    let classes_after_range = byte_class_set.byte_classes();",
          "    assert!(classes_after_range.iter().all(|&class| class == 0));",
          "    let byte_set_with_contents = ByteSet::from_bytes(&[0, 128, 255]).unwrap().0;",
          "    let byte_class_set_with_contents = ByteClassSet(byte_set_with_contents);",
          "    let classes_with_contents = byte_class_set_with_contents.byte_classes();",
          "    assert!(classes_with_contents.get(0) > 0);",
          "    assert!(classes_with_contents.get(128) > 0);",
          "    assert!(classes_with_contents.get(255) > 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(0);",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "}"
        ],
        "oracle": [
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(0);",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes.get(0), 0);",
          "    assert_eq!(classes.get(255), 1);",
          "    assert_eq!(classes.get(1), 0);",
          "    assert_eq!(classes.get(2), 0);",
          "    assert_eq!(classes.get(254), 0);"
        ],
        "code": [
          "{",
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(0);",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let _classes = byte_class_set.byte_classes();",
          "    let mut byte_set = ByteSet::empty();",
          "    byte_set.add(0);",
          "    byte_set.add(255);",
          "    let byte_class_set = ByteClassSet(byte_set);",
          "    let classes = byte_class_set.byte_classes();",
          "    assert_eq!(classes.get(0), 0);",
          "    assert_eq!(classes.get(255), 1);",
          "    assert_eq!(classes.get(1), 0);",
          "    assert_eq!(classes.get(2), 0);",
          "    assert_eq!(classes.get(254), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]