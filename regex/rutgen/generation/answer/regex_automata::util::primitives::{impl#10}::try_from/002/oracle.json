[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = SmallIndex::try_from(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(SmallIndex::new_unchecked(0)));",
          "    let max_index = SmallIndex::MAX.as_u64();",
          "    let result = SmallIndex::try_from(max_index);",
          "    assert_eq!(result, Ok(SmallIndex::new_unchecked(max_index as usize)));"
        ],
        "code": [
          "{",
          "    let result = SmallIndex::try_from(0);",
          "    assert_eq!(result, Ok(SmallIndex::new_unchecked(0)));",
          "    let max_index = SmallIndex::MAX.as_u64();",
          "    let result = SmallIndex::try_from(max_index);",
          "    assert_eq!(result, Ok(SmallIndex::new_unchecked(max_index as usize)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = SmallIndex::try_from(SmallIndex::MAX.as_u64());",
          "}"
        ],
        "oracle": [
          "    let expected_result = Ok(SmallIndex::new_unchecked(SmallIndex::MAX.as_usize()));",
          "    assert_eq!(result, expected_result);"
        ],
        "code": [
          "{",
          "    let result = SmallIndex::try_from(SmallIndex::MAX.as_u64());",
          "    let expected_result = Ok(SmallIndex::new_unchecked(SmallIndex::MAX.as_usize()));",
          "    assert_eq!(result, expected_result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]