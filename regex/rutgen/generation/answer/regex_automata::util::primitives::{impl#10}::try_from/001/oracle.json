[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let index: u64 = SmallIndex::MAX.as_u64() + 1;",
          "    let result = SmallIndex::try_from(index);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(SmallIndexError { attempted: index }));"
        ],
        "code": [
          "{",
          "    let index: u64 = SmallIndex::MAX.as_u64() + 1;",
          "    let result = SmallIndex::try_from(index);",
          "    assert_eq!(result, Err(SmallIndexError { attempted: index }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let index: u64 = SmallIndex::MAX.as_u64() + 1000;",
          "    let result = SmallIndex::try_from(index);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    if let Err(e) = result {",
          "    assert_eq!(e.attempted, index);",
          "    }"
        ],
        "code": [
          "{",
          "    let index: u64 = SmallIndex::MAX.as_u64() + 1000;",
          "    let result = SmallIndex::try_from(index);",
          "    assert!(result.is_err());",
          "    if let Err(e) = result {",
          "    assert_eq!(e.attempted, index);",
          "    }",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let index: u64 = u64::MAX;",
          "    let result = SmallIndex::try_from(index);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.err().unwrap().attempted, index);"
        ],
        "code": [
          "{",
          "    let index: u64 = u64::MAX;",
          "    let result = SmallIndex::try_from(index);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.err().unwrap().attempted, index);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]