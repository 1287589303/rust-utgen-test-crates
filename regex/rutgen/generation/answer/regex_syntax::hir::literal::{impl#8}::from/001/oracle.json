[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 0;",
          "    let _literal = Literal::from(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_literal.bytes, vec![0]);",
          "    assert!(_literal.exact);"
        ],
        "code": [
          "{",
          "    let byte: u8 = 0;",
          "    let _literal = Literal::from(byte);",
          "    assert_eq!(_literal.bytes, vec![0]);",
          "    assert!(_literal.exact);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 1;",
          "    let _literal = Literal::from(byte);",
          "}"
        ],
        "oracle": [
          "    _literal.bytes == vec![1]",
          "    _literal.exact == true"
        ],
        "code": [
          "{",
          "    let byte: u8 = 1;",
          "    let _literal = Literal::from(byte);",
          "    _literal.bytes == vec![1]",
          "    _literal.exact == true",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 255;",
          "    let _literal = Literal::from(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_literal.bytes, vec![255]);",
          "    assert!(_literal.exact);"
        ],
        "code": [
          "{",
          "    let byte: u8 = 255;",
          "    let _literal = Literal::from(byte);",
          "    assert_eq!(_literal.bytes, vec![255]);",
          "    assert!(_literal.exact);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte: u8 = 128;",
          "    let _literal = Literal::from(byte);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_literal.bytes, vec![128]);",
          "    assert!(_literal.exact);"
        ],
        "code": [
          "{",
          "    let byte: u8 = 128;",
          "    let _literal = Literal::from(byte);",
          "    assert_eq!(_literal.bytes, vec![128]);",
          "    assert!(_literal.exact);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]