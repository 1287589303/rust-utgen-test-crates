[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Look::WordEndUnicode;",
          "    let _output = input.reversed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(input.reversed(), Look::WordStartUnicode);"
        ],
        "code": [
          "{",
          "    let input = Look::WordEndUnicode;",
          "    let _output = input.reversed();",
          "    assert_eq!(input.reversed(), Look::WordStartUnicode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Look::WordStartUnicode;",
          "    let _output = input.reversed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(input.reversed(), Look::WordEndUnicode);"
        ],
        "code": [
          "{",
          "    let input = Look::WordStartUnicode;",
          "    let _output = input.reversed();",
          "    assert_eq!(input.reversed(), Look::WordEndUnicode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Look::WordAscii;",
          "    let _output = input.reversed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Look::WordEndUnicode.reversed(), Look::WordStartUnicode);"
        ],
        "code": [
          "{",
          "    let input = Look::WordAscii;",
          "    let _output = input.reversed();",
          "    assert_eq!(Look::WordEndUnicode.reversed(), Look::WordStartUnicode);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = Look::WordAsciiNegate;",
          "    let _output = input.reversed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Look::WordEndUnicode.reversed(), Look::WordStartUnicode);",
          "    assert_eq!(Look::WordStartUnicode.reversed(), Look::WordEndUnicode);",
          "    assert_ne!(Look::WordEndUnicode.reversed(), Look::WordAsciiNegate);",
          "    assert_eq!(Look::WordUnicode.reversed(), Look::WordUnicode);",
          "    assert_eq!(Look::WordAscii.reversed(), Look::WordAscii);"
        ],
        "code": [
          "{",
          "    let input = Look::WordAsciiNegate;",
          "    let _output = input.reversed();",
          "    assert_eq!(Look::WordEndUnicode.reversed(), Look::WordStartUnicode);",
          "    assert_eq!(Look::WordStartUnicode.reversed(), Look::WordEndUnicode);",
          "    assert_ne!(Look::WordEndUnicode.reversed(), Look::WordAsciiNegate);",
          "    assert_eq!(Look::WordUnicode.reversed(), Look::WordUnicode);",
          "    assert_eq!(Look::WordAscii.reversed(), Look::WordAscii);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]