[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(true);",
          "}"
        ],
        "oracle": [
          "    assert!(builder.flags.multi_line.is_some() && builder.flags.multi_line == Some(true));"
        ],
        "code": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(true);",
          "    assert!(builder.flags.multi_line.is_some() && builder.flags.multi_line == Some(true));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(false);",
          "}"
        ],
        "oracle": [
          "    builder.flags.multi_line == None;",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(true);",
          "    builder.flags.multi_line == Some(true);",
          "    builder.multi_line(false);",
          "    builder.flags.multi_line == None;"
        ],
        "code": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(false);",
          "    builder.flags.multi_line == None;",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.multi_line(true);",
          "    builder.flags.multi_line == Some(true);",
          "    builder.multi_line(false);",
          "    builder.flags.multi_line == None;",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]