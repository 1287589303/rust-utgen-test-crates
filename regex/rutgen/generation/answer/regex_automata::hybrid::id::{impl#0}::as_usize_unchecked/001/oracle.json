[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let id_0 = LazyStateID::new_unchecked(0);",
          "    let id_max = LazyStateID::new_unchecked(LazyStateID::MAX as usize);",
          "    ",
          "    let _val_0 = id_0.as_usize_unchecked();",
          "    let _val_max = id_max.as_usize_unchecked();",
          "}"
        ],
        "oracle": [
          "    _val_0 == 0",
          "    _val_max == LazyStateID::MAX as usize"
        ],
        "code": [
          "{",
          "    let id_0 = LazyStateID::new_unchecked(0);",
          "    let id_max = LazyStateID::new_unchecked(LazyStateID::MAX as usize);",
          "    ",
          "    let _val_0 = id_0.as_usize_unchecked();",
          "    let _val_max = id_max.as_usize_unchecked();",
          "    _val_0 == 0",
          "    _val_max == LazyStateID::MAX as usize",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let id_above_max = LazyStateID::new_unchecked(LazyStateID::MAX as usize + 1);",
          "    ",
          "    let _val_above_max = id_above_max.as_usize_unchecked();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(id_above_max.as_usize_unchecked(), LazyStateID::MAX as usize + 1);"
        ],
        "code": [
          "{",
          "    let id_above_max = LazyStateID::new_unchecked(LazyStateID::MAX as usize + 1);",
          "    ",
          "    let _val_above_max = id_above_max.as_usize_unchecked();",
          "    assert_eq!(id_above_max.as_usize_unchecked(), LazyStateID::MAX as usize + 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]