[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '\\\\';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('('));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('~'));"
        ],
        "code": [
          "{",
          "    let input = '\\\\';",
          "    is_meta_character(input);",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('('));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('~'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '.';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '.';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '+';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '+';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '*';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '*';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '?';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '?';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '(';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '(';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = ')';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    is_meta_character('\\\\') == true",
          "    is_meta_character('.') == true",
          "    is_meta_character('+') == true",
          "    is_meta_character('*') == true",
          "    is_meta_character('?') == true",
          "    is_meta_character('(') == true",
          "    is_meta_character(')') == true",
          "    is_meta_character('|') == true",
          "    is_meta_character('[') == true",
          "    is_meta_character(']') == true",
          "    is_meta_character('{') == true",
          "    is_meta_character('}') == true",
          "    is_meta_character('^') == true",
          "    is_meta_character('$') == true",
          "    is_meta_character('#') == true",
          "    is_meta_character('&') == true",
          "    is_meta_character('-') == true",
          "    is_meta_character('~') == true"
        ],
        "code": [
          "{",
          "    let input = ')';",
          "    is_meta_character(input);",
          "    is_meta_character('\\\\') == true",
          "    is_meta_character('.') == true",
          "    is_meta_character('+') == true",
          "    is_meta_character('*') == true",
          "    is_meta_character('?') == true",
          "    is_meta_character('(') == true",
          "    is_meta_character(')') == true",
          "    is_meta_character('|') == true",
          "    is_meta_character('[') == true",
          "    is_meta_character(']') == true",
          "    is_meta_character('{') == true",
          "    is_meta_character('}') == true",
          "    is_meta_character('^') == true",
          "    is_meta_character('$') == true",
          "    is_meta_character('#') == true",
          "    is_meta_character('&') == true",
          "    is_meta_character('-') == true",
          "    is_meta_character('~') == true",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '|';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);"
        ],
        "code": [
          "{",
          "    let input = '|';",
          "    is_meta_character(input);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '[';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('~') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('$') == true);"
        ],
        "code": [
          "{",
          "    let input = '[';",
          "    is_meta_character(input);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('~') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('$') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = ']';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);"
        ],
        "code": [
          "{",
          "    let input = ']';",
          "    is_meta_character(input);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '{';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '{';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '}';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);"
        ],
        "code": [
          "{",
          "    let input = '}';",
          "    is_meta_character(input);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('(') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('~') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '^';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '^';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '$';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '$';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '#';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '#';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '&';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '&';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '-';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);"
        ],
        "code": [
          "{",
          "    let input = '-';",
          "    is_meta_character(input);",
          "    assert_eq!(is_meta_character('\\\\'), true);",
          "    assert_eq!(is_meta_character('.'), true);",
          "    assert_eq!(is_meta_character('+'), true);",
          "    assert_eq!(is_meta_character('*'), true);",
          "    assert_eq!(is_meta_character('?'), true);",
          "    assert_eq!(is_meta_character('('), true);",
          "    assert_eq!(is_meta_character(')'), true);",
          "    assert_eq!(is_meta_character('|'), true);",
          "    assert_eq!(is_meta_character('['), true);",
          "    assert_eq!(is_meta_character(']'), true);",
          "    assert_eq!(is_meta_character('{'), true);",
          "    assert_eq!(is_meta_character('}'), true);",
          "    assert_eq!(is_meta_character('^'), true);",
          "    assert_eq!(is_meta_character('$'), true);",
          "    assert_eq!(is_meta_character('#'), true);",
          "    assert_eq!(is_meta_character('&'), true);",
          "    assert_eq!(is_meta_character('-'), true);",
          "    assert_eq!(is_meta_character('~'), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = '~';",
          "    is_meta_character(input);",
          "}"
        ],
        "oracle": [
          "    is_meta_character('~') == true",
          "    is_meta_character('\\\\') == true",
          "    is_meta_character('.') == true",
          "    is_meta_character('[') == true",
          "    is_meta_character('*') == true",
          "    is_meta_character('{') == true",
          "    is_meta_character(']') == true",
          "    is_meta_character('-') == true",
          "    is_meta_character('^') == true",
          "    is_meta_character('#') == true",
          "    is_meta_character('}') == true",
          "    is_meta_character('|') == true",
          "    is_meta_character(')') == true",
          "    is_meta_character('?') == true",
          "    is_meta_character('(') == true",
          "    is_meta_character('&') == true",
          "    is_meta_character('+') == true",
          "    is_meta_character('$') == true"
        ],
        "code": [
          "{",
          "    let input = '~';",
          "    is_meta_character(input);",
          "    is_meta_character('~') == true",
          "    is_meta_character('\\\\') == true",
          "    is_meta_character('.') == true",
          "    is_meta_character('[') == true",
          "    is_meta_character('*') == true",
          "    is_meta_character('{') == true",
          "    is_meta_character(']') == true",
          "    is_meta_character('-') == true",
          "    is_meta_character('^') == true",
          "    is_meta_character('#') == true",
          "    is_meta_character('}') == true",
          "    is_meta_character('|') == true",
          "    is_meta_character(')') == true",
          "    is_meta_character('?') == true",
          "    is_meta_character('(') == true",
          "    is_meta_character('&') == true",
          "    is_meta_character('+') == true",
          "    is_meta_character('$') == true",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]