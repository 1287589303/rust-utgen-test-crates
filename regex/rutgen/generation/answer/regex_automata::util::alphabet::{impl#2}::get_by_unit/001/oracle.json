[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(0));",
          "    byte_classes.get_by_unit(unit);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(0))), 0);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(1))), 1);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(255))), 255);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(128))), 128);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(127))), 127);"
        ],
        "code": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(0));",
          "    byte_classes.get_by_unit(unit);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(0))), 0);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(1))), 1);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(255))), 255);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(128))), 128);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(127))), 127);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(1));",
          "    byte_classes.get_by_unit(unit);",
          "}"
        ],
        "oracle": [
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(1));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 1);",
          "    let unit = Unit(UnitKind::EOI(0));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 0);",
          "    let unit = Unit(UnitKind::EOI(255));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 255);",
          "    byte_classes.set(1, 5);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(1))), 5);"
        ],
        "code": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(1));",
          "    byte_classes.get_by_unit(unit);",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(1));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 1);",
          "    let unit = Unit(UnitKind::EOI(0));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 0);",
          "    let unit = Unit(UnitKind::EOI(255));",
          "    assert_eq!(byte_classes.get_by_unit(unit), 255);",
          "    byte_classes.set(1, 5);",
          "    assert_eq!(byte_classes.get_by_unit(Unit(UnitKind::EOI(1))), 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(255));",
          "    byte_classes.get_by_unit(unit);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_classes.get_by_unit(unit), 255);"
        ],
        "code": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(255));",
          "    byte_classes.get_by_unit(unit);",
          "    assert_eq!(byte_classes.get_by_unit(unit), 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(128));",
          "    byte_classes.get_by_unit(unit);",
          "}"
        ],
        "oracle": [
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(128));",
          "    let result = byte_classes.get_by_unit(unit);",
          "    assert_eq!(result, 128);"
        ],
        "code": [
          "{",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(128));",
          "    byte_classes.get_by_unit(unit);",
          "    let mut byte_classes = ByteClasses::empty();",
          "    let unit = Unit(UnitKind::EOI(128));",
          "    let result = byte_classes.get_by_unit(unit);",
          "    assert_eq!(result, 128);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]