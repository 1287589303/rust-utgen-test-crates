[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}', b'o', b't', b'h', b'e', b'r', b' ', b'd', b'a', b't', b'a'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());",
          "    let rep: &[u8] = &[b'{', b'a', b'b', b'c'];",
          "    let i: usize = 3;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}', b'}'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());"
        ],
        "code": [
          "{",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}', b'o', b't', b'h', b'e', b'r', b' ', b'd', b'a', b't', b'a'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert_eq!(result, None);",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());",
          "    let rep: &[u8] = &[b'{', b'a', b'b', b'c'];",
          "    let i: usize = 3;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());",
          "    let rep: &[u8] = &[b'{', b'f', b'o', b'o', b'1', b'}', b'}'];",
          "    let i: usize = 5;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert!(result.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let rep: &[u8] = &[b'{', b'\\xff', b'\\xfe', b'\\xfd', b'}'];",
          "    let i: usize = 4;",
          "    let result = find_cap_ref_braced(rep, i);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let rep: &[u8] = &[b'{', b'\\xff', b'\\xfe', b'\\xfd', b'}'];",
          "    let i: usize = 4;",
          "    let result = find_cap_ref_braced(rep, i);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]