[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer = builder.build();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(printer, Printer { _priv: () });"
        ],
        "code": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer = builder.build();",
          "    assert_eq!(printer, Printer { _priv: () });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer1 = builder.build();",
          "    let printer2 = builder.build();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(printer1, Printer { _priv: () });",
          "    assert_eq!(printer2, Printer { _priv: () });"
        ],
        "code": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer1 = builder.build();",
          "    let printer2 = builder.build();",
          "    assert_eq!(printer1, Printer { _priv: () });",
          "    assert_eq!(printer2, Printer { _priv: () });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer1 = builder.build();",
          "    let printer2 = builder.build();",
          "    let printer3 = builder.build();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(printer1, Printer { _priv: () });",
          "    assert_eq!(printer2, Printer { _priv: () });",
          "    assert_eq!(printer3, Printer { _priv: () });"
        ],
        "code": [
          "{",
          "    let builder = PrinterBuilder::new();",
          "    let printer1 = builder.build();",
          "    let printer2 = builder.build();",
          "    let printer3 = builder.build();",
          "    assert_eq!(printer1, Printer { _priv: () });",
          "    assert_eq!(printer2, Printer { _priv: () });",
          "    assert_eq!(printer3, Printer { _priv: () });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]