[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let kind = HexLiteralKind::X;",
          "    let _result = kind.digits();",
          "}"
        ],
        "oracle": [
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let result = kind.digits();",
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let kind = HexLiteralKind::X;",
          "    let _result = kind.digits();",
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let result = kind.digits();",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let _result = kind.digits();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(kind.digits(), 4);"
        ],
        "code": [
          "{",
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let _result = kind.digits();",
          "    assert_eq!(kind.digits(), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let kind = HexLiteralKind::UnicodeLong;",
          "    let _result = kind.digits();",
          "}"
        ],
        "oracle": [
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let result = kind.digits();",
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let kind = HexLiteralKind::UnicodeLong;",
          "    let _result = kind.digits();",
          "    let kind = HexLiteralKind::UnicodeShort;",
          "    let result = kind.digits();",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]