[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::empty(group_info);",
          "    captures.get_match();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(captures.get_match(), None);"
        ],
        "code": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::empty(group_info);",
          "    captures.get_match();",
          "    assert_eq!(captures.get_match(), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::all(group_info);",
          "    captures.get_match();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(captures.get_match(), None);"
        ],
        "code": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::all(group_info);",
          "    captures.get_match();",
          "    assert_eq!(captures.get_match(), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::matches(group_info);",
          "    captures.get_match();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(captures.get_match(), None);",
          "    assert!(!captures.is_match());",
          "    assert_eq!(captures.pattern(), None);",
          "    assert_eq!(captures.group_len(), 0);"
        ],
        "code": [
          "{",
          "    let group_info = GroupInfo::default();",
          "    let captures = Captures::matches(group_info);",
          "    captures.get_match();",
          "    assert_eq!(captures.get_match(), None);",
          "    assert!(!captures.is_match());",
          "    assert_eq!(captures.pattern(), None);",
          "    assert_eq!(captures.group_len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]