self.preinner.find(input.haystack(), span) returns Some(span) with haystack length > 0, span.start == min_pre_start, span.end > span.start, min_match_start < span.start, input.haystack.len() >= 1, litmatch.start == min_pre_start, and valid values for hm_start and hm_end such that Ok(Some(Match::new(hm_start.pattern(), hm_start.offset()..hm_end.offset()))) is returned
