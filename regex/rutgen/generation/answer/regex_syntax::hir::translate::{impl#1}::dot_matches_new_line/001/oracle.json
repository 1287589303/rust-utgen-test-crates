[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.dot_matches_new_line(true);",
          "}"
        ],
        "oracle": [
          "    assert!(builder.flags.dot_matches_new_line.is_some());",
          "    assert_eq!(builder.flags.dot_matches_new_line, Some(true));"
        ],
        "code": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.dot_matches_new_line(true);",
          "    assert!(builder.flags.dot_matches_new_line.is_some());",
          "    assert_eq!(builder.flags.dot_matches_new_line, Some(true));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.dot_matches_new_line(true).dot_matches_new_line(true);",
          "}"
        ],
        "oracle": [
          "    builder.dot_matches_new_line(true).flags.dot_matches_new_line.assert_eq(Some(true));",
          "    builder.dot_matches_new_line(false).flags.dot_matches_new_line.assert_eq(None);"
        ],
        "code": [
          "{",
          "    let mut builder = TranslatorBuilder::new();",
          "    builder.dot_matches_new_line(true).dot_matches_new_line(true);",
          "    builder.dot_matches_new_line(true).flags.dot_matches_new_line.assert_eq(Some(true));",
          "    builder.dot_matches_new_line(false).flags.dot_matches_new_line.assert_eq(None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]