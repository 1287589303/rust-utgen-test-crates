[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let builder = Builder::new();",
          "    let result = builder.get_reverse();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    builder.set_reverse(true);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, true);",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let builder = Builder::new();",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "    builder.set_reverse(true);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, true);",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = Builder::new();",
          "    builder.set_reverse(true);",
          "    let result = builder.get_reverse();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "    builder.set_reverse(true);",
          "    builder.clear();",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let mut builder = Builder::new();",
          "    builder.set_reverse(true);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, true);",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "    builder.set_reverse(true);",
          "    builder.clear();",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = Builder::new();",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let mut builder = Builder::new();",
          "    builder.set_reverse(false);",
          "    let result = builder.get_reverse();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]