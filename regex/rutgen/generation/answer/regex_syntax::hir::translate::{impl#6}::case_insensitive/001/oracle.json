[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags {",
          "        case_insensitive: Some(true),",
          "        ..Flags::default()",
          "    };",
          "    flags.case_insensitive();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.case_insensitive(), true);",
          "    ",
          "    let flags = Flags {",
          "    case_insensitive: Some(false),",
          "    ..Flags::default()",
          "    };",
          "    assert_eq!(flags.case_insensitive(), false);",
          "    ",
          "    let flags = Flags {",
          "    case_insensitive: None,",
          "    ..Flags::default()",
          "    };",
          "    assert_eq!(flags.case_insensitive(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags {",
          "        case_insensitive: Some(true),",
          "        ..Flags::default()",
          "    };",
          "    flags.case_insensitive();",
          "    assert_eq!(flags.case_insensitive(), true);",
          "    ",
          "    let flags = Flags {",
          "    case_insensitive: Some(false),",
          "    ..Flags::default()",
          "    };",
          "    assert_eq!(flags.case_insensitive(), false);",
          "    ",
          "    let flags = Flags {",
          "    case_insensitive: None,",
          "    ..Flags::default()",
          "    };",
          "    assert_eq!(flags.case_insensitive(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags {",
          "        case_insensitive: Some(false),",
          "        ..Flags::default()",
          "    };",
          "    flags.case_insensitive();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.case_insensitive(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags {",
          "        case_insensitive: Some(false),",
          "        ..Flags::default()",
          "    };",
          "    flags.case_insensitive();",
          "    assert_eq!(flags.case_insensitive(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags::default();",
          "    flags.case_insensitive();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.case_insensitive(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags::default();",
          "    flags.case_insensitive();",
          "    assert_eq!(flags.case_insensitive(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]