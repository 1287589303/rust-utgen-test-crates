info.config().get_match_kind() is MatchKind::LeftmostFirst; prefixes.is_exact() == true; info.pattern_len() == 1; info.props()[0].explicit_captures_len() == 0; info.props()[0].look_set().is_empty() == true; prefilter::Choice::new(MatchKind::LeftmostFirst, prefixes) is Some(choice); choice is prefilter::Choice::Memchr(pre);
