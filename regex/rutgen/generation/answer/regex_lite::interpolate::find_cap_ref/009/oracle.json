[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let replacement: &[u8] = b\"${123}\";",
          "    let result = find_cap_ref(replacement);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_some());",
          "    assert_eq!(result.unwrap().cap, Ref::Number(123));",
          "    assert_eq!(result.unwrap().end, 5);"
        ],
        "code": [
          "{",
          "    let replacement: &[u8] = b\"${123}\";",
          "    let result = find_cap_ref(replacement);",
          "    assert!(result.is_some());",
          "    assert_eq!(result.unwrap().cap, Ref::Number(123));",
          "    assert_eq!(result.unwrap().end, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let replacement: &[u8] = b\"${4567}\";",
          "    let result = find_cap_ref(replacement);",
          "}"
        ],
        "oracle": [
          "    let replacement: &[u8] = b\"${4567}\";",
          "    let expected = Some(CaptureRef { cap: Ref::Number(4567), end: 6 });",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let replacement: &[u8] = b\"${4567}\";",
          "    let result = find_cap_ref(replacement);",
          "    let replacement: &[u8] = b\"${4567}\";",
          "    let expected = Some(CaptureRef { cap: Ref::Number(4567), end: 6 });",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let replacement: &[u8] = b\"${0}\";",
          "    let result = find_cap_ref(replacement);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_some());",
          "    assert_eq!(result, Some(CaptureRef {",
          "    cap: Ref::Number(0),",
          "    end: 4,",
          "    }));"
        ],
        "code": [
          "{",
          "    let replacement: &[u8] = b\"${0}\";",
          "    let result = find_cap_ref(replacement);",
          "    assert!(result.is_some());",
          "    assert_eq!(result, Some(CaptureRef {",
          "    cap: Ref::Number(0),",
          "    end: 4,",
          "    }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let replacement: &[u8] = b\"${9}\";",
          "    let result = find_cap_ref(replacement);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.is_some(), true);",
          "    assert_eq!(result.unwrap().cap, Ref::Number(9));",
          "    assert_eq!(result.unwrap().end, 4);"
        ],
        "code": [
          "{",
          "    let replacement: &[u8] = b\"${9}\";",
          "    let result = find_cap_ref(replacement);",
          "    assert_eq!(result.is_some(), true);",
          "    assert_eq!(result.unwrap().cap, Ref::Number(9));",
          "    assert_eq!(result.unwrap().end, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let replacement: &[u8] = b\"${42}\";",
          "    let result = find_cap_ref(replacement);",
          "}"
        ],
        "oracle": [
          "    let expected = Some(CaptureRef { cap: Ref::Number(42), end: 5 });",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let replacement: &[u8] = b\"${42}\";",
          "    let result = find_cap_ref(replacement);",
          "    let expected = Some(CaptureRef { cap: Ref::Number(42), end: 5 });",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]