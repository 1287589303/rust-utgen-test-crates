f: &mut fmt::Formatter<'_> = any valid formatter; self: &DFA<T> where T is either Vec<u32> or &[u32]; for state in self.states(): state.id() valid StateID; self.ms.len() > 0 to test multiple match states; self.state_len() > 0 to ensure states are present; self.pattern_len() > 0 to ensure patterns are present if involved; valid Anchored types tested in starts() method; desired output to be valid formatted string representation.
