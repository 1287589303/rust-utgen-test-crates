[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let name = String::from(\"duplicate_name\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"duplicate capture group name 'duplicate_name' found for pattern {}\", pattern_id.as_usize())"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let name = String::from(\"duplicate_name\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "    write!(f, \"duplicate capture group name 'duplicate_name' found for pattern {}\", pattern_id.as_usize())",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(1).unwrap());",
          "    let name = String::from(\"another_duplicate\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"duplicate capture group name '{}' found for pattern {}\", name, pattern.as_usize()) == core::fmt::Result::Ok"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(1).unwrap());",
          "    let name = String::from(\"another_duplicate\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "    write!(f, \"duplicate capture group name '{}' found for pattern {}\", name, pattern.as_usize()) == core::fmt::Result::Ok",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(255).unwrap());",
          "    let name = String::from(\"test_duplicate_pattern\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"duplicate capture group name 'test_duplicate_pattern' found for pattern 255\")"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(255).unwrap());",
          "    let name = String::from(\"test_duplicate_pattern\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "    write!(f, \"duplicate capture group name 'test_duplicate_pattern' found for pattern 255\")",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(127).unwrap());",
          "    let name = String::from(\"valid_name\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"duplicate capture group name '{}' found for pattern {}\", \"valid_name\", 127)"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(127).unwrap());",
          "    let name = String::from(\"valid_name\");",
          "    let kind = GroupInfoErrorKind::Duplicate { pattern: pattern_id, name };",
          "    let error = GroupInfoError { kind };",
          "    let _ = core::fmt::write(&mut String::new(), &error);",
          "    write!(f, \"duplicate capture group name '{}' found for pattern {}\", \"valid_name\", 127)",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]