[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestGroupInfo;",
          "",
          "    let group_info = GroupInfo(Arc::new(TestGroupInfo));",
          "    let captures = Captures {",
          "        group_info,",
          "        pid: Some(PatternID(SmallIndex(0))),",
          "        slots: vec![None; 10],",
          "    };",
          "    ",
          "    let _ = captures.is_match();",
          "}"
        ],
        "oracle": [],
        "code": [],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct TestGroupInfo;",
          "",
          "    let group_info = GroupInfo(Arc::new(TestGroupInfo));",
          "    let captures = Captures {",
          "        group_info,",
          "        pid: None,",
          "        slots: vec![None; 10],",
          "    };",
          "",
          "    let _ = captures.is_match();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(captures.is_match(), false);",
          "    assert!(!captures.is_match());",
          "    captured_slots = vec![None; 10];",
          "    assert!(captures.slots.is_empty());",
          "    assert!(captures.group_info().0.is_empty());"
        ],
        "code": [
          "{",
          "    struct TestGroupInfo;",
          "",
          "    let group_info = GroupInfo(Arc::new(TestGroupInfo));",
          "    let captures = Captures {",
          "        group_info,",
          "        pid: None,",
          "        slots: vec![None; 10],",
          "    };",
          "",
          "    let _ = captures.is_match();",
          "    assert_eq!(captures.is_match(), false);",
          "    assert!(!captures.is_match());",
          "    captured_slots = vec![None; 10];",
          "    assert!(captures.slots.is_empty());",
          "    assert!(captures.group_info().0.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]