[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('0');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('9');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('a');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('a');",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('f');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('H'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('f');",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('H'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('A');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('5'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex('@'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "    assert_eq!(is_hex('-'), false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('A');",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('5'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('G'), false);",
          "    assert_eq!(is_hex('@'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "    assert_eq!(is_hex('-'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('F');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('G');",
          "    assert_eq!(result, false);",
          "    let result = is_hex(' ');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('#');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('z');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('F');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('G');",
          "    assert_eq!(result, false);",
          "    let result = is_hex(' ');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('#');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('z');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('g');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('g');",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('-'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('Z');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('F');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('!');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('F');",
          "    assert_eq!(result, true);",
          "    let result = is_hex('Z');",
          "    assert_eq!(result, false);",
          "    let result = is_hex('!');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex(' ');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('1'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);"
        ],
        "code": [
          "{",
          "    let result = is_hex(' ');",
          "    assert_eq!(is_hex('0'), true);",
          "    assert_eq!(is_hex('1'), true);",
          "    assert_eq!(is_hex('9'), true);",
          "    assert_eq!(is_hex('a'), true);",
          "    assert_eq!(is_hex('f'), true);",
          "    assert_eq!(is_hex('A'), true);",
          "    assert_eq!(is_hex('F'), true);",
          "    assert_eq!(is_hex('g'), false);",
          "    assert_eq!(is_hex('!'), false);",
          "    assert_eq!(is_hex(' '), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_hex('@');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);",
          "    ",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('F');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('g');",
          "    assert_eq!(result, false);",
          "    ",
          "    let result = is_hex(' ');",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_hex('@');",
          "    assert_eq!(result, false);",
          "    ",
          "    let result = is_hex('0');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('9');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('a');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('f');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('A');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('F');",
          "    assert_eq!(result, true);",
          "    ",
          "    let result = is_hex('g');",
          "    assert_eq!(result, false);",
          "    ",
          "    let result = is_hex(' ');",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]