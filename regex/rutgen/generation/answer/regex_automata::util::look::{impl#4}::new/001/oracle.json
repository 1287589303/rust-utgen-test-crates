[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let matcher = LookMatcher::new();",
          "}"
        ],
        "oracle": [
          "    let matcher = LookMatcher::new();",
          "    assert_eq!(matcher.lineterm, DebugByte(b'\\n'));"
        ],
        "code": [
          "{",
          "    let matcher = LookMatcher::new();",
          "    let matcher = LookMatcher::new();",
          "    assert_eq!(matcher.lineterm, DebugByte(b'\\n'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let matcher = LookMatcher::new();",
          "    let line_terminator = matcher.lineterm.0;",
          "}"
        ],
        "oracle": [
          "    assert_eq!(matcher.lineterm.0, b'\\n');",
          "    assert!(std::mem::size_of_val(&matcher) > 0);",
          "    assert!(matcher.lineterm.0.is_ascii());",
          "    assert!(matcher.lineterm.0 != b'\\r');"
        ],
        "code": [
          "{",
          "    let matcher = LookMatcher::new();",
          "    let line_terminator = matcher.lineterm.0;",
          "    assert_eq!(matcher.lineterm.0, b'\\n');",
          "    assert!(std::mem::size_of_val(&matcher) > 0);",
          "    assert!(matcher.lineterm.0.is_ascii());",
          "    assert!(matcher.lineterm.0 != b'\\r');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]