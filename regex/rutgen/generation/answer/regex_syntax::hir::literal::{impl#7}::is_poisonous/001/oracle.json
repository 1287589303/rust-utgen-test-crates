[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let literal = Literal::exact(vec![]);",
          "    let _ = literal.is_poisonous();",
          "}"
        ],
        "oracle": [
          "    assert!(literal.is_empty());",
          "    assert_eq!(literal.is_poisonous(), true);",
          "    assert_eq!(literal.len(), 0);",
          "    assert_eq!(literal.as_bytes().len(), 0);",
          "    assert_eq!(literal.is_exact(), true);"
        ],
        "code": [
          "{",
          "    let literal = Literal::exact(vec![]);",
          "    let _ = literal.is_poisonous();",
          "    assert!(literal.is_empty());",
          "    assert_eq!(literal.is_poisonous(), true);",
          "    assert_eq!(literal.len(), 0);",
          "    assert_eq!(literal.as_bytes().len(), 0);",
          "    assert_eq!(literal.is_exact(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let literal = Literal::exact(vec![250]);",
          "    let _ = literal.is_poisonous();",
          "}"
        ],
        "oracle": [
          "    let literal_empty = Literal::exact(vec![]);",
          "    assert!(literal_empty.is_poisonous());",
          "    ",
          "    let literal_single_high_rank = Literal::exact(vec![250]);",
          "    assert!(literal_single_high_rank.is_poisonous());",
          "    ",
          "    let literal_single_low_rank = Literal::exact(vec![249]);",
          "    assert!(!literal_single_low_rank.is_poisonous());"
        ],
        "code": [
          "{",
          "    let literal = Literal::exact(vec![250]);",
          "    let _ = literal.is_poisonous();",
          "    let literal_empty = Literal::exact(vec![]);",
          "    assert!(literal_empty.is_poisonous());",
          "    ",
          "    let literal_single_high_rank = Literal::exact(vec![250]);",
          "    assert!(literal_single_high_rank.is_poisonous());",
          "    ",
          "    let literal_single_low_rank = Literal::exact(vec![249]);",
          "    assert!(!literal_single_low_rank.is_poisonous());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let literal = Literal::exact(vec![255]);",
          "    let _ = literal.is_poisonous();",
          "}"
        ],
        "oracle": [
          "    let literal = Literal::exact(vec![]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![0]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![250]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![251]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![252]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![253]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![254]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![255]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![100]); assert!(!literal.is_poisonous());",
          "    let literal = Literal::exact(vec![200, 100]); assert!(!literal.is_poisonous());",
          "    let literal = Literal::exact(vec![0, 250]); assert!(literal.is_poisonous());"
        ],
        "code": [
          "{",
          "    let literal = Literal::exact(vec![255]);",
          "    let _ = literal.is_poisonous();",
          "    let literal = Literal::exact(vec![]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![0]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![250]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![251]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![252]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![253]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![254]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![255]); assert!(literal.is_poisonous());",
          "    let literal = Literal::exact(vec![100]); assert!(!literal.is_poisonous());",
          "    let literal = Literal::exact(vec![200, 100]); assert!(!literal.is_poisonous());",
          "    let literal = Literal::exact(vec![0, 250]); assert!(literal.is_poisonous());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]