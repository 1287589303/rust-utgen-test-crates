[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 15 };",
          "    let result = Split::new(o, n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Split::parts3(SplitRange::Old(UTF8_RANGE { start: 5, end: 5 }), SplitRange::Both(UTF8_RANGE { start: 10, end: 10 }), SplitRange::Old(UTF8_RANGE { start: 11, end: 15 })));"
        ],
        "code": [
          "{",
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 15 };",
          "    let result = Split::new(o, n);",
          "    assert_eq!(result, Some(Split::parts3(SplitRange::Old(UTF8_RANGE { start: 5, end: 5 }), SplitRange::Both(UTF8_RANGE { start: 10, end: 10 }), SplitRange::Old(UTF8_RANGE { start: 11, end: 15 })));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 10 };",
          "    let result = Split::new(o, n);",
          "}"
        ],
        "oracle": [
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 10 };",
          "    assert_eq!(result, Some(Split::parts3(SplitRange::Old(5..=5), SplitRange::Both(10..=10), SplitRange::Old(11..=10)));"
        ],
        "code": [
          "{",
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 10 };",
          "    let result = Split::new(o, n);",
          "    let o = Utf8Range { start: 5, end: 5 };",
          "    let n = Utf8Range { start: 10, end: 10 };",
          "    assert_eq!(result, Some(Split::parts3(SplitRange::Old(5..=5), SplitRange::Both(10..=10), SplitRange::Old(11..=10)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]