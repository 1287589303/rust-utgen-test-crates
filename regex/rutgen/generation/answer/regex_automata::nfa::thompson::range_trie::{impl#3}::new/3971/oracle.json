[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 16, end: 20 };",
          "    Split::new(o, n);",
          "}"
        ],
        "oracle": [
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 16, end: 20 };",
          "    assert_eq!(Split::new(o, n), Some(Split::parts3(SplitRange::New(10..=15), SplitRange::Both(10..=15), SplitRange::New(16..=20)));"
        ],
        "code": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 16, end: 20 };",
          "    Split::new(o, n);",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 16, end: 20 };",
          "    assert_eq!(Split::new(o, n), Some(Split::parts3(SplitRange::New(10..=15), SplitRange::Both(10..=15), SplitRange::New(16..=20)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 15, end: 20 };",
          "    Split::new(o, n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Split::new(Utf8Range { start: 10, end: 15 }, Utf8Range { start: 15, end: 20 }), Some(Split::parts3(SplitRange::New(10..=14), SplitRange::Both(15..=15), SplitRange::New(16..=20)));"
        ],
        "code": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 15, end: 20 };",
          "    Split::new(o, n);",
          "    assert_eq!(Split::new(Utf8Range { start: 10, end: 15 }, Utf8Range { start: 15, end: 20 }), Some(Split::parts3(SplitRange::New(10..=14), SplitRange::Both(15..=15), SplitRange::New(16..=20)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 14, end: 20 };",
          "    Split::new(o, n);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Split::new(Utf8Range { start: 10, end: 15 }, Utf8Range { start: 14, end: 20 }), Some(Split::parts3(SplitRange::New(10..=10), SplitRange::Both(14..=15), SplitRange::New(16..=20)));"
        ],
        "code": [
          "{",
          "    let o = Utf8Range { start: 10, end: 15 };",
          "    let n = Utf8Range { start: 14, end: 20 };",
          "    Split::new(o, n);",
          "    assert_eq!(Split::new(Utf8Range { start: 10, end: 15 }, Utf8Range { start: 14, end: 20 }), Some(Split::parts3(SplitRange::New(10..=10), SplitRange::Both(14..=15), SplitRange::New(16..=20)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]