[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().nest_limit(0);",
          "    let _ = config.get_nest_limit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_nest_limit(), 0);",
          "    let config = Config::new().nest_limit(10);",
          "    assert_eq!(config.get_nest_limit(), 10);",
          "    let config = Config::new().nest_limit(100);",
          "    assert_eq!(config.get_nest_limit(), 100);",
          "    let config = Config::new().nest_limit(u32::MAX);",
          "    assert_eq!(config.get_nest_limit(), u32::MAX);"
        ],
        "code": [
          "{",
          "    let config = Config::new().nest_limit(0);",
          "    let _ = config.get_nest_limit();",
          "    assert_eq!(config.get_nest_limit(), 0);",
          "    let config = Config::new().nest_limit(10);",
          "    assert_eq!(config.get_nest_limit(), 10);",
          "    let config = Config::new().nest_limit(100);",
          "    assert_eq!(config.get_nest_limit(), 100);",
          "    let config = Config::new().nest_limit(u32::MAX);",
          "    assert_eq!(config.get_nest_limit(), u32::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().nest_limit(1);",
          "    let _ = config.get_nest_limit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_nest_limit(), 1);"
        ],
        "code": [
          "{",
          "    let config = Config::new().nest_limit(1);",
          "    let _ = config.get_nest_limit();",
          "    assert_eq!(config.get_nest_limit(), 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().nest_limit(u32::MAX);",
          "    let _ = config.get_nest_limit();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_nest_limit(), u32::MAX);"
        ],
        "code": [
          "{",
          "    let config = Config::new().nest_limit(u32::MAX);",
          "    let _ = config.get_nest_limit();",
          "    assert_eq!(config.get_nest_limit(), u32::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]