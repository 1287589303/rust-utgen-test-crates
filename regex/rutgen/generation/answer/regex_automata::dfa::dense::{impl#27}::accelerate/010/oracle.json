[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let state = State {",
          "        id: StateID(0),",
          "        stride2: 0,",
          "        transitions: &[],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "}"
        ],
        "oracle": [
          "    let state = State { id: StateID(0), stride2: 0, transitions: &[] };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let state = State {",
          "        id: StateID(0),",
          "        stride2: 0,",
          "        transitions: &[],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "    let state = State { id: StateID(0), stride2: 0, transitions: &[] };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let state = State {",
          "        id: StateID(1),",
          "        stride2: 0,",
          "        transitions: &[],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let state = State {",
          "        id: StateID(1),",
          "        stride2: 0,",
          "        transitions: &[],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let state = State {",
          "        id: StateID(2),",
          "        stride2: 0,",
          "        transitions: &[StateID(3)],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let state = State {",
          "        id: StateID(2),",
          "        stride2: 0,",
          "        transitions: &[StateID(3)],",
          "    };",
          "    let classes = ByteClasses::empty();",
          "    let result = state.accelerate(&classes);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]