[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"\", &mut buf);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf, \"\");",
          "    escape_into(\"abc\", &mut buf);",
          "    assert_eq!(buf, \"abc\");",
          "    escape_into(\"Hello\", &mut buf);",
          "    assert_eq!(buf, \"Hello\");",
          "    escape_into(\"123\", &mut buf);",
          "    assert_eq!(buf, \"123\");",
          "    escape_into(\"text_without_meta\", &mut buf);",
          "    assert_eq!(buf, \"text_without_meta\");"
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"\", &mut buf);",
          "    assert_eq!(buf, \"\");",
          "    escape_into(\"abc\", &mut buf);",
          "    assert_eq!(buf, \"abc\");",
          "    escape_into(\"Hello\", &mut buf);",
          "    assert_eq!(buf, \"Hello\");",
          "    escape_into(\"123\", &mut buf);",
          "    assert_eq!(buf, \"123\");",
          "    escape_into(\"text_without_meta\", &mut buf);",
          "    assert_eq!(buf, \"text_without_meta\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abc\", &mut buf);",
          "}"
        ],
        "oracle": [
          "    let mut buf = String::new();",
          "    escape_into(\"abc\", &mut buf);",
          "    assert_eq!(buf, \"abc\");"
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abc\", &mut buf);",
          "    let mut buf = String::new();",
          "    escape_into(\"abc\", &mut buf);",
          "    assert_eq!(buf, \"abc\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefg\", &mut buf);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf, \"abcdefg\");"
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefg\", &mut buf);",
          "    assert_eq!(buf, \"abcdefg\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\", &mut buf);",
          "}"
        ],
        "oracle": [
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\", &mut buf);",
          "    assert_eq!(buf, \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\");"
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\", &mut buf);",
          "    let mut buf = String::new();",
          "    escape_into(\"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\", &mut buf);",
          "    assert_eq!(buf, \"abcdefghijabcdefghijabcdefghijabcdefghijabcdefghijabcdefghij\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"a\", &mut buf);",
          "}"
        ],
        "oracle": [
          "    buf == \"a\""
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    escape_into(\"a\", &mut buf);",
          "    buf == \"a\"",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut buf = String::new();",
          "    let text = \"x\".repeat(100);",
          "    escape_into(&text, &mut buf);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buf, \"x\".repeat(100));"
        ],
        "code": [
          "{",
          "    let mut buf = String::new();",
          "    let text = \"x\".repeat(100);",
          "    escape_into(&text, &mut buf);",
          "    assert_eq!(buf, \"x\".repeat(100));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]