[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut matcher = LookMatcher::new();",
          "    let haystack: &[u8] = b\"Hello\\rWorld\";",
          "    let at: usize = 5; // Index of 'r', preconditions met",
          "    matcher.is_end_crlf(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert!(!matcher.is_end(haystack, at));",
          "    assert_eq!(haystack[at], b'\\r');",
          "    assert_ne!(haystack[at - 1], b'\\r');",
          "    assert!(matcher.is_end_crlf(haystack, at));"
        ],
        "code": [
          "{",
          "    let mut matcher = LookMatcher::new();",
          "    let haystack: &[u8] = b\"Hello\\rWorld\";",
          "    let at: usize = 5; // Index of 'r', preconditions met",
          "    matcher.is_end_crlf(haystack, at);",
          "    assert!(!matcher.is_end(haystack, at));",
          "    assert_eq!(haystack[at], b'\\r');",
          "    assert_ne!(haystack[at - 1], b'\\r');",
          "    assert!(matcher.is_end_crlf(haystack, at));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut matcher = LookMatcher::new();",
          "    let haystack: &[u8] = b\"Example\\rText\";",
          "    let at: usize = 7; // Index of 'r', preconditions met",
          "    matcher.is_end_crlf(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert!(!matcher.is_end(haystack, at));",
          "    assert_eq!(haystack[at], b'\\r');",
          "    assert!(haystack[at] != b'\\n');",
          "    assert!(at != 0);",
          "    assert!(matcher.is_end_crlf(haystack, at));"
        ],
        "code": [
          "{",
          "    let mut matcher = LookMatcher::new();",
          "    let haystack: &[u8] = b\"Example\\rText\";",
          "    let at: usize = 7; // Index of 'r', preconditions met",
          "    matcher.is_end_crlf(haystack, at);",
          "    assert!(!matcher.is_end(haystack, at));",
          "    assert_eq!(haystack[at], b'\\r');",
          "    assert!(haystack[at] != b'\\n');",
          "    assert!(at != 0);",
          "    assert!(matcher.is_end_crlf(haystack, at));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]