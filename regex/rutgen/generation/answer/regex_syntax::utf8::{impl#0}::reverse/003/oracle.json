[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut utf8_sequence = Utf8Sequence::Two([",
          "        Utf8Range { start: 0, end: 3 },",
          "        Utf8Range { start: 1, end: 4 },",
          "    ]);",
          "    utf8_sequence.reverse();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(utf8_sequence.as_slice()[0], Utf8Range { start: 1, end: 4 });",
          "    assert_eq!(utf8_sequence.as_slice()[1], Utf8Range { start: 0, end: 3 });",
          "    assert_eq!(utf8_sequence.len(), 2);"
        ],
        "code": [
          "{",
          "    let mut utf8_sequence = Utf8Sequence::Two([",
          "        Utf8Range { start: 0, end: 3 },",
          "        Utf8Range { start: 1, end: 4 },",
          "    ]);",
          "    utf8_sequence.reverse();",
          "    assert_eq!(utf8_sequence.as_slice()[0], Utf8Range { start: 1, end: 4 });",
          "    assert_eq!(utf8_sequence.as_slice()[1], Utf8Range { start: 0, end: 3 });",
          "    assert_eq!(utf8_sequence.len(), 2);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut utf8_sequence = Utf8Sequence::Two([",
          "        Utf8Range { start: 0, end: 0 },",
          "        Utf8Range { start: 255, end: 255 },",
          "    ]);",
          "    utf8_sequence.reverse();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(utf8_sequence.as_slice(), &[Utf8Range { start: 255, end: 255 }, Utf8Range { start: 0, end: 0 }]);",
          "    assert_eq!(utf8_sequence.len(), 2);"
        ],
        "code": [
          "{",
          "    let mut utf8_sequence = Utf8Sequence::Two([",
          "        Utf8Range { start: 0, end: 0 },",
          "        Utf8Range { start: 255, end: 255 },",
          "    ]);",
          "    utf8_sequence.reverse();",
          "    assert_eq!(utf8_sequence.as_slice(), &[Utf8Range { start: 255, end: 255 }, Utf8Range { start: 0, end: 0 }]);",
          "    assert_eq!(utf8_sequence.len(), 2);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]