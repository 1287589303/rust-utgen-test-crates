[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let slot_table = SlotTable::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slot_table.table, vec![]);",
          "    assert_eq!(slot_table.slots_for_captures, 0);",
          "    assert_eq!(slot_table.slots_per_state, 0);"
        ],
        "code": [
          "{",
          "    let slot_table = SlotTable::new();",
          "    assert_eq!(slot_table.table, vec![]);",
          "    assert_eq!(slot_table.slots_for_captures, 0);",
          "    assert_eq!(slot_table.slots_per_state, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let slot_table = SlotTable::new();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slot_table.table, vec![]);",
          "    assert_eq!(slot_table.slots_for_captures, 0);",
          "    assert_eq!(slot_table.slots_per_state, 0);"
        ],
        "code": [
          "{",
          "    let slot_table = SlotTable::new();",
          "    assert_eq!(slot_table.table, vec![]);",
          "    assert_eq!(slot_table.slots_for_captures, 0);",
          "    assert_eq!(slot_table.slots_per_state, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]