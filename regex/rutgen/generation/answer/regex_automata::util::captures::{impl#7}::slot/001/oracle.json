[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let group_info = GroupInfo::empty();",
          "    let group_index = group_info.group_len(pattern_id);",
          "    let result = group_info.slot(pattern_id, group_index);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let group_info = GroupInfo::empty();",
          "    let group_index = group_info.group_len(pattern_id);",
          "    let result = group_info.slot(pattern_id, group_index);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let group_info = GroupInfo::empty();",
          "    let group_index = group_info.group_len(pattern_id) + 1;",
          "    let result = group_info.slot(pattern_id, group_index);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let pattern_id = PatternID(SmallIndex::new(0).unwrap());",
          "    let group_info = GroupInfo::empty();",
          "    let group_index = group_info.group_len(pattern_id) + 1;",
          "    let result = group_info.slot(pattern_id, group_index);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]