[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('\\\\');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('\\\\');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('.');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('.');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('+');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('+');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('*');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('*');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('?');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('?');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('(');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('(');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character(')');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character(')');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('|');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('|');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('[');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('[');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character(']');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character(']');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('{');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('{');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('}');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('~') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('(') == true);"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('}');",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character('*') == true);",
          "    assert!(is_meta_character('#') == true);",
          "    assert!(is_meta_character('[') == true);",
          "    assert!(is_meta_character('}') == true);",
          "    assert!(is_meta_character('&') == true);",
          "    assert!(is_meta_character('$') == true);",
          "    assert!(is_meta_character('+') == true);",
          "    assert!(is_meta_character(']') == true);",
          "    assert!(is_meta_character('~') == true);",
          "    assert!(is_meta_character('{') == true);",
          "    assert!(is_meta_character('^') == true);",
          "    assert!(is_meta_character('?') == true);",
          "    assert!(is_meta_character('-') == true);",
          "    assert!(is_meta_character('|') == true);",
          "    assert!(is_meta_character('\\\\') == true);",
          "    assert!(is_meta_character(')') == true);",
          "    assert!(is_meta_character('.') == true);",
          "    assert!(is_meta_character('(') == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('^');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('^');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('$');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('$');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('#');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('#');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('&');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('&');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('-');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('-');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_meta_character('~');",
          "}"
        ],
        "oracle": [
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));"
        ],
        "code": [
          "{",
          "    let result = is_meta_character('~');",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character('*'));",
          "    assert!(is_meta_character('#'));",
          "    assert!(is_meta_character('['));",
          "    assert!(is_meta_character('}'));",
          "    assert!(is_meta_character('&'));",
          "    assert!(is_meta_character('$'));",
          "    assert!(is_meta_character('+'));",
          "    assert!(is_meta_character(']'));",
          "    assert!(is_meta_character('~'));",
          "    assert!(is_meta_character('{'));",
          "    assert!(is_meta_character('^'));",
          "    assert!(is_meta_character('?'));",
          "    assert!(is_meta_character('-'));",
          "    assert!(is_meta_character('|'));",
          "    assert!(is_meta_character('\\\\'));",
          "    assert!(is_meta_character(')'));",
          "    assert!(is_meta_character('.'));",
          "    assert!(is_meta_character('('));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]