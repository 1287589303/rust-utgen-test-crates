[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    let mut buffer = core::fmt::Formatter::default();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buffer.to_string(), \"pattern can match invalid UTF-8\");"
        ],
        "code": [
          "{",
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    let mut buffer = core::fmt::Formatter::default();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "    assert_eq!(buffer.to_string(), \"pattern can match invalid UTF-8\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    let _ = format!(\"{}\", error_kind);",
          "}"
        ],
        "oracle": [
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    assert_eq!(format!(\"{}\", error_kind), \"pattern can match invalid UTF-8\");"
        ],
        "code": [
          "{",
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    let _ = format!(\"{}\", error_kind);",
          "    let error_kind = crate::ErrorKind::InvalidUtf8;",
          "    assert_eq!(format!(\"{}\", error_kind), \"pattern can match invalid UTF-8\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]