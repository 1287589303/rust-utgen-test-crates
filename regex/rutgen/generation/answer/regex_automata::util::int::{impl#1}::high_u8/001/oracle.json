[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 0;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(0u16.high_u8(), 0u8);",
          "    assert_eq!(255u16.high_u8(), 0u8);",
          "    assert_eq!(256u16.high_u8(), 1u8);",
          "    assert_eq!(511u16.high_u8(), 1u8);",
          "    assert_eq!(1024u16.high_u8(), 4u8);",
          "    assert_eq!(65535u16.high_u8(), 255u8);"
        ],
        "code": [
          "{",
          "    let value: u16 = 0;",
          "    value.high_u8();",
          "    assert_eq!(0u16.high_u8(), 0u8);",
          "    assert_eq!(255u16.high_u8(), 0u8);",
          "    assert_eq!(256u16.high_u8(), 1u8);",
          "    assert_eq!(511u16.high_u8(), 1u8);",
          "    assert_eq!(1024u16.high_u8(), 4u8);",
          "    assert_eq!(65535u16.high_u8(), 255u8);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 255;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 512;",
          "    assert_eq!(value.high_u8(), 2);",
          "    let value: u16 = 1023;",
          "    assert_eq!(value.high_u8(), 3);",
          "    let value: u16 = 0;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 65535;",
          "    assert_eq!(value.high_u8(), 255);"
        ],
        "code": [
          "{",
          "    let value: u16 = 255;",
          "    value.high_u8();",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 512;",
          "    assert_eq!(value.high_u8(), 2);",
          "    let value: u16 = 1023;",
          "    assert_eq!(value.high_u8(), 3);",
          "    let value: u16 = 0;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 65535;",
          "    assert_eq!(value.high_u8(), 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 256;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value.high_u8(), 1);",
          "    assert_eq!(value.high_u8(), (value >> 8) as u8);",
          "    let value: u16 = 511;",
          "    assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 255;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 0;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 32768;",
          "    assert_eq!(value.high_u8(), 128);"
        ],
        "code": [
          "{",
          "    let value: u16 = 256;",
          "    value.high_u8();",
          "    assert_eq!(value.high_u8(), 1);",
          "    assert_eq!(value.high_u8(), (value >> 8) as u8);",
          "    let value: u16 = 511;",
          "    assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 255;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 0;",
          "    assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 32768;",
          "    assert_eq!(value.high_u8(), 128);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 511;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 255; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1023; assert_eq!(value.high_u8(), 3);",
          "    let value: u16 = 2048; assert_eq!(value.high_u8(), 8);",
          "    let value: u16 = 4095; assert_eq!(value.high_u8(), 15);",
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 50000; assert_eq!(value.high_u8(), 195);",
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);"
        ],
        "code": [
          "{",
          "    let value: u16 = 511;",
          "    value.high_u8();",
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 255; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1023; assert_eq!(value.high_u8(), 3);",
          "    let value: u16 = 2048; assert_eq!(value.high_u8(), 8);",
          "    let value: u16 = 4095; assert_eq!(value.high_u8(), 15);",
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 50000; assert_eq!(value.high_u8(), 195);",
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 65535;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 127; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1024; assert_eq!(value.high_u8(), 4);",
          "    let value: u16 = 2048; assert_eq!(value.high_u8(), 8);",
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);",
          "    let value: u16 = 0xFFFF; assert_eq!(value.high_u8(), 255);"
        ],
        "code": [
          "{",
          "    let value: u16 = 65535;",
          "    value.high_u8();",
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 127; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 511; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1024; assert_eq!(value.high_u8(), 4);",
          "    let value: u16 = 2048; assert_eq!(value.high_u8(), 8);",
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);",
          "    let value: u16 = 0xFFFF; assert_eq!(value.high_u8(), 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 32768;",
          "    value.high_u8();",
          "}"
        ],
        "oracle": [
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);",
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 255; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1024; assert_eq!(value.high_u8(), 4);"
        ],
        "code": [
          "{",
          "    let value: u16 = 32768;",
          "    value.high_u8();",
          "    let value: u16 = 32768; assert_eq!(value.high_u8(), 128);",
          "    let value: u16 = 0; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 65535; assert_eq!(value.high_u8(), 255);",
          "    let value: u16 = 255; assert_eq!(value.high_u8(), 0);",
          "    let value: u16 = 256; assert_eq!(value.high_u8(), 1);",
          "    let value: u16 = 1024; assert_eq!(value.high_u8(), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]