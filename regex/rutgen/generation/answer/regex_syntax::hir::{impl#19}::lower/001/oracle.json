[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassBytesRange { start: 0, end: 100 };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let range = ClassBytesRange { start: 0, end: 100 };",
          "    let result = range.lower();",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassBytesRange { start: 128, end: 200 };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 128);"
        ],
        "code": [
          "{",
          "    let range = ClassBytesRange { start: 128, end: 200 };",
          "    let result = range.lower();",
          "    assert_eq!(result, 128);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassBytesRange { start: 255, end: 255 };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 255);"
        ],
        "code": [
          "{",
          "    let range = ClassBytesRange { start: 255, end: 255 };",
          "    let result = range.lower();",
          "    assert_eq!(result, 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassBytesRange { start: 255, end: 0 };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 255);"
        ],
        "code": [
          "{",
          "    let range = ClassBytesRange { start: 255, end: 0 };",
          "    let result = range.lower();",
          "    assert_eq!(result, 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = ClassBytesRange { start: 0, end: 0 };",
          "    let result = range.lower();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);"
        ],
        "code": [
          "{",
          "    let range = ClassBytesRange { start: 0, end: 0 };",
          "    let result = range.lower();",
          "    assert_eq!(result, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]