[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b00_0000_0000_0000_1000; // 8 in decimal",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Look::EndLF));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b00_0000_0000_0000_1000; // 8 in decimal",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::EndLF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0; // Out of range for valid Look values",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0; // Out of range for valid Look values",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b1111_1111_1111_1111_1111; // Out of range for valid Look values",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));",
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b1111_1111_1111_1111_1111; // Out of range for valid Look values",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));",
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_1000), Some(Look::EndLF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]