[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b00_0000_0000_0000_0100; // Corresponds to Look::StartLF",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Look::StartLF));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b00_0000_0000_0000_0100; // Corresponds to Look::StartLF",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::StartLF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let invalid_reprs: [u32; 8] = [0, 1, 2, 5, 255, 129, 130, 133];",
          "    for &repr in &invalid_reprs {",
          "        let result = Look::from_repr(repr);",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_0100), Some(Look::StartLF));"
        ],
        "code": [
          "{",
          "    let invalid_reprs: [u32; 8] = [0, 1, 2, 5, 255, 129, 130, 133];",
          "    for &repr in &invalid_reprs {",
          "        let result = Look::from_repr(repr);",
          "    }",
          "    assert_eq!(Look::from_repr(0b00_0000_0000_0000_0100), Some(Look::StartLF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]