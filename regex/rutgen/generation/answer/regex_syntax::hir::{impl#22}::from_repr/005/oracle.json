[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // matches 0b00_0100_0000_0000_0000",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // matches 0b00_0100_0000_0000_0000",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b11111111111111111111; // invalid representation",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // valid representation for Some(Look::WordStartHalfAscii)",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b11111111111111111111; // invalid representation",
          "    let result = Look::from_repr(repr);",
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // valid representation for Some(Look::WordStartHalfAscii)",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let repr: u32 = 0b00000000000000000000; // invalid representation",
          "    let result = Look::from_repr(repr);",
          "}"
        ],
        "oracle": [
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // valid representation for Look::WordStartHalfAscii",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));"
        ],
        "code": [
          "{",
          "    let repr: u32 = 0b00000000000000000000; // invalid representation",
          "    let result = Look::from_repr(repr);",
          "    let repr: u32 = 0b00_0100_0000_0000_0000; // valid representation for Look::WordStartHalfAscii",
          "    let result = Look::from_repr(repr);",
          "    assert_eq!(result, Some(Look::WordStartHalfAscii));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]