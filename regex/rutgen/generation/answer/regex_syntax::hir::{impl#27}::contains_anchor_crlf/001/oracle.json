[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "}"
        ],
        "oracle": [
          "    assert!(look_set.contains(Look::StartCRLF));",
          "    assert!(!look_set.contains(Look::EndCRLF));",
          "    assert!(look_set.contains_anchor_crlf());"
        ],
        "code": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "    assert!(look_set.contains(Look::StartCRLF));",
          "    assert!(!look_set.contains(Look::EndCRLF));",
          "    assert!(look_set.contains_anchor_crlf());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::EndCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "}"
        ],
        "oracle": [
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == look_set.contains(Look::EndCRLF));",
          "    look_set.set_insert(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(!look_set.contains_anchor_crlf());"
        ],
        "code": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::EndCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == look_set.contains(Look::EndCRLF));",
          "    look_set.set_insert(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(!look_set.contains_anchor_crlf());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    look_set.set_insert(Look::EndCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "}"
        ],
        "oracle": [
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == true);",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == true);",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == false);"
        ],
        "code": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    look_set.set_insert(Look::EndCRLF);",
          "    let _ = look_set.contains_anchor_crlf();",
          "    let mut look_set = LookSet::empty();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == true);",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == true);",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    let _ = look_set.contains_anchor_crlf();",
          "}"
        ],
        "oracle": [
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_insert(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(!look_set.contains_anchor_crlf());"
        ],
        "code": [
          "{",
          "    let mut look_set = LookSet::empty();",
          "    let _ = look_set.contains_anchor_crlf();",
          "    look_set.set_insert(Look::StartCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_insert(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::EndCRLF);",
          "    assert!(look_set.contains_anchor_crlf());",
          "    look_set.set_remove(Look::StartCRLF);",
          "    assert!(!look_set.contains_anchor_crlf());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]