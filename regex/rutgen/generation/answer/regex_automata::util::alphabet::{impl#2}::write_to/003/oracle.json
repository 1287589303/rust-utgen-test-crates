[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_classes = ByteClasses::empty();",
          "    let mut dst = vec![0u8; 256];",
          "    let result = byte_classes.write_to(&mut dst);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(256));",
          "    assert!(dst.iter().all(|&b| b == 0));",
          "    assert_eq!(byte_classes.write_to_len(), 256);"
        ],
        "code": [
          "{",
          "    let byte_classes = ByteClasses::empty();",
          "    let mut dst = vec![0u8; 256];",
          "    let result = byte_classes.write_to(&mut dst);",
          "    assert_eq!(result, Ok(256));",
          "    assert!(dst.iter().all(|&b| b == 0));",
          "    assert_eq!(byte_classes.write_to_len(), 256);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_classes = ByteClasses::singletons();",
          "    let mut dst = vec![0u8; 256];",
          "    let result = byte_classes.write_to(&mut dst);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(256));",
          "    assert!(dst.iter().all(|&x| x == byte_classes.get(x)));",
          "    assert!(dst.len() == 256);",
          "    assert!(result.is_ok());",
          "    assert!(dst.len() >= 256);"
        ],
        "code": [
          "{",
          "    let byte_classes = ByteClasses::singletons();",
          "    let mut dst = vec![0u8; 256];",
          "    let result = byte_classes.write_to(&mut dst);",
          "    assert_eq!(result, Ok(256));",
          "    assert!(dst.iter().all(|&x| x == byte_classes.get(x)));",
          "    assert!(dst.len() == 256);",
          "    assert!(result.is_ok());",
          "    assert!(dst.len() >= 256);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]