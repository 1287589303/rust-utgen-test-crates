[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let inputs = vec!['#', '%', '&', '-', '/', '!', '\"', '@', '^', '=', '+', '*', '?', '{', '}', '|', '\\\\'];",
          "    for &c in &inputs {",
          "        let _result = is_escapeable_character(c);",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('-'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('='));",
          "    assert!(is_escapeable_character('+'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('|'));",
          "    assert!(is_escapeable_character('\\\\'));"
        ],
        "code": [
          "{",
          "    let inputs = vec!['#', '%', '&', '-', '/', '!', '\"', '@', '^', '=', '+', '*', '?', '{', '}', '|', '\\\\'];",
          "    for &c in &inputs {",
          "        let _result = is_escapeable_character(c);",
          "    }",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('-'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('='));",
          "    assert!(is_escapeable_character('+'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('|'));",
          "    assert!(is_escapeable_character('\\\\'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let inputs = vec![' ', '\\'', ':', ';', ',', '.', '~', '`', '(', ')', '[', ']', '^', '$'];",
          "    for &c in &inputs {",
          "        let _result = is_escapeable_character(c);",
          "    }",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character(' '));",
          "    assert!(is_escapeable_character('\\''));",
          "    assert!(is_escapeable_character(':'));",
          "    assert!(is_escapeable_character(';'));",
          "    assert!(is_escapeable_character(','));",
          "    assert!(is_escapeable_character('.'));",
          "    assert!(is_escapeable_character('~'));",
          "    assert!(is_escapeable_character('`'));",
          "    assert!(is_escapeable_character('('));",
          "    assert!(is_escapeable_character(')'));",
          "    assert!(is_escapeable_character('['));",
          "    assert!(is_escapeable_character(']'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('$'));"
        ],
        "code": [
          "{",
          "    let inputs = vec![' ', '\\'', ':', ';', ',', '.', '~', '`', '(', ')', '[', ']', '^', '$'];",
          "    for &c in &inputs {",
          "        let _result = is_escapeable_character(c);",
          "    }",
          "    assert!(is_escapeable_character(' '));",
          "    assert!(is_escapeable_character('\\''));",
          "    assert!(is_escapeable_character(':'));",
          "    assert!(is_escapeable_character(';'));",
          "    assert!(is_escapeable_character(','));",
          "    assert!(is_escapeable_character('.'));",
          "    assert!(is_escapeable_character('~'));",
          "    assert!(is_escapeable_character('`'));",
          "    assert!(is_escapeable_character('('));",
          "    assert!(is_escapeable_character(')'));",
          "    assert!(is_escapeable_character('['));",
          "    assert!(is_escapeable_character(']'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('$'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]