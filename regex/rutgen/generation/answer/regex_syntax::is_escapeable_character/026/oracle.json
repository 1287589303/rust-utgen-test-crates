[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('!');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('E'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('1'));",
          "    assert!(!is_escapeable_character('2'));",
          "    assert!(!is_escapeable_character('9'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('!');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('E'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('1'));",
          "    assert!(!is_escapeable_character('2'));",
          "    assert!(!is_escapeable_character('9'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('@');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('@'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('@');",
          "    assert!(!is_escapeable_character('@'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('#');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('/'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('\"'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('p'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('#');",
          "    assert_eq!(is_escapeable_character('#'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('/'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('\"'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('g'), false);",
          "    assert_eq!(is_escapeable_character('p'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('$');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('$'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('&'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('`'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('$');",
          "    assert_eq!(is_escapeable_character('$'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('&'), false);",
          "    assert_eq!(is_escapeable_character('!'), false);",
          "    assert_eq!(is_escapeable_character('@'), false);",
          "    assert_eq!(is_escapeable_character('%'), false);",
          "    assert_eq!(is_escapeable_character('^'), false);",
          "    assert_eq!(is_escapeable_character('`'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('%');",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('!') == true);",
          "    assert!(is_escapeable_character('\"') == true);",
          "    assert!(is_escapeable_character('%') == true);",
          "    assert!(is_escapeable_character('/') == true);",
          "    assert!(is_escapeable_character('#') == true);",
          "    assert!(is_escapeable_character('&') == true);",
          "    assert!(is_escapeable_character('-') == true);",
          "    assert!(is_escapeable_character('?') == true);",
          "    assert!(is_escapeable_character('e') == false);",
          "    assert!(is_escapeable_character('0') == false);",
          "    assert!(is_escapeable_character('9') == false);",
          "    assert!(is_escapeable_character('A') == false);",
          "    assert!(is_escapeable_character('Z') == false);",
          "    assert!(is_escapeable_character('a') == false);",
          "    assert!(is_escapeable_character('z') == false);",
          "    assert!(is_escapeable_character('<') == false);",
          "    assert!(is_escapeable_character('>') == false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('%');",
          "    assert!(is_escapeable_character('!') == true);",
          "    assert!(is_escapeable_character('\"') == true);",
          "    assert!(is_escapeable_character('%') == true);",
          "    assert!(is_escapeable_character('/') == true);",
          "    assert!(is_escapeable_character('#') == true);",
          "    assert!(is_escapeable_character('&') == true);",
          "    assert!(is_escapeable_character('-') == true);",
          "    assert!(is_escapeable_character('?') == true);",
          "    assert!(is_escapeable_character('e') == false);",
          "    assert!(is_escapeable_character('0') == false);",
          "    assert!(is_escapeable_character('9') == false);",
          "    assert!(is_escapeable_character('A') == false);",
          "    assert!(is_escapeable_character('Z') == false);",
          "    assert!(is_escapeable_character('a') == false);",
          "    assert!(is_escapeable_character('z') == false);",
          "    assert!(is_escapeable_character('<') == false);",
          "    assert!(is_escapeable_character('>') == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('^');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('^');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('&');",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('&'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('&');",
          "    assert!(is_escapeable_character('&'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('*');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('4'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('*');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('4'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('(');",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('='));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('~'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('(');",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('='));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('~'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(')');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('f'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('h'));",
          "    assert!(!is_escapeable_character('i'));",
          "    assert!(!is_escapeable_character('j'));",
          "    assert!(!is_escapeable_character('k'));",
          "    assert!(!is_escapeable_character('l'));",
          "    assert!(!is_escapeable_character('m'));",
          "    assert!(!is_escapeable_character('n'));",
          "    assert!(!is_escapeable_character('o'));",
          "    assert!(!is_escapeable_character('p'));",
          "    assert!(!is_escapeable_character('q'));",
          "    assert!(!is_escapeable_character('r'));",
          "    assert!(!is_escapeable_character('s'));",
          "    assert!(!is_escapeable_character('t'));",
          "    assert!(!is_escapeable_character('u'));",
          "    assert!(!is_escapeable_character('v'));",
          "    assert!(!is_escapeable_character('w'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('C'));",
          "    assert!(!is_escapeable_character('D'));",
          "    assert!(!is_escapeable_character('E'));",
          "    assert!(!is_escapeable_character('F'));",
          "    assert!(!is_escapeable_character('G'));",
          "    assert!(!is_escapeable_character('H'));",
          "    assert!(!is_escapeable_character('I'));",
          "    assert!(!is_escapeable_character('J'));",
          "    assert!(!is_escapeable_character('K'));",
          "    assert!(!is_escapeable_character('L'));",
          "    assert!(!is_escapeable_character('M'));",
          "    assert!(!is_escapeable_character('N'));",
          "    assert!(!is_escapeable_character('O'));",
          "    assert!(!is_escapeable_character('P'));",
          "    assert!(!is_escapeable_character('Q'));",
          "    assert!(!is_escapeable_character('R'));",
          "    assert!(!is_escapeable_character('S'));",
          "    assert!(!is_escapeable_character('T'));",
          "    assert!(!is_escapeable_character('U'));",
          "    assert!(!is_escapeable_character('V'));",
          "    assert!(!is_escapeable_character('W'));",
          "    assert!(!is_escapeable_character('X'));",
          "    assert!(!is_escapeable_character('Y'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('$'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('('));",
          "    assert!(is_escapeable_character(')'));",
          "    assert!(is_escapeable_character('_'));",
          "    assert!(is_escapeable_character('+'));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('|'));",
          "    assert!(is_escapeable_character(':'));",
          "    assert!(is_escapeable_character(';'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('<'));",
          "    assert!(is_escapeable_character('>'));",
          "    assert!(is_escapeable_character(','));",
          "    assert!(is_escapeable_character('.'));",
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('\\\\'));",
          "    assert!(is_escapeable_character('-'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(')');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('f'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('h'));",
          "    assert!(!is_escapeable_character('i'));",
          "    assert!(!is_escapeable_character('j'));",
          "    assert!(!is_escapeable_character('k'));",
          "    assert!(!is_escapeable_character('l'));",
          "    assert!(!is_escapeable_character('m'));",
          "    assert!(!is_escapeable_character('n'));",
          "    assert!(!is_escapeable_character('o'));",
          "    assert!(!is_escapeable_character('p'));",
          "    assert!(!is_escapeable_character('q'));",
          "    assert!(!is_escapeable_character('r'));",
          "    assert!(!is_escapeable_character('s'));",
          "    assert!(!is_escapeable_character('t'));",
          "    assert!(!is_escapeable_character('u'));",
          "    assert!(!is_escapeable_character('v'));",
          "    assert!(!is_escapeable_character('w'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('C'));",
          "    assert!(!is_escapeable_character('D'));",
          "    assert!(!is_escapeable_character('E'));",
          "    assert!(!is_escapeable_character('F'));",
          "    assert!(!is_escapeable_character('G'));",
          "    assert!(!is_escapeable_character('H'));",
          "    assert!(!is_escapeable_character('I'));",
          "    assert!(!is_escapeable_character('J'));",
          "    assert!(!is_escapeable_character('K'));",
          "    assert!(!is_escapeable_character('L'));",
          "    assert!(!is_escapeable_character('M'));",
          "    assert!(!is_escapeable_character('N'));",
          "    assert!(!is_escapeable_character('O'));",
          "    assert!(!is_escapeable_character('P'));",
          "    assert!(!is_escapeable_character('Q'));",
          "    assert!(!is_escapeable_character('R'));",
          "    assert!(!is_escapeable_character('S'));",
          "    assert!(!is_escapeable_character('T'));",
          "    assert!(!is_escapeable_character('U'));",
          "    assert!(!is_escapeable_character('V'));",
          "    assert!(!is_escapeable_character('W'));",
          "    assert!(!is_escapeable_character('X'));",
          "    assert!(!is_escapeable_character('Y'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('@'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('$'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('^'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('*'));",
          "    assert!(is_escapeable_character('('));",
          "    assert!(is_escapeable_character(')'));",
          "    assert!(is_escapeable_character('_'));",
          "    assert!(is_escapeable_character('+'));",
          "    assert!(is_escapeable_character('{'));",
          "    assert!(is_escapeable_character('}'));",
          "    assert!(is_escapeable_character('|'));",
          "    assert!(is_escapeable_character(':'));",
          "    assert!(is_escapeable_character(';'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('<'));",
          "    assert!(is_escapeable_character('>'));",
          "    assert!(is_escapeable_character(','));",
          "    assert!(is_escapeable_character('.'));",
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('\\\\'));",
          "    assert!(is_escapeable_character('-'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('-');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('-'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('-');",
          "    assert_eq!(is_escapeable_character('-'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('=');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('='), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('=');",
          "    assert_eq!(is_escapeable_character('='), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('+');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('+'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('+');",
          "    assert_eq!(is_escapeable_character('+'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('#'), true);",
          "    assert_eq!(is_escapeable_character('&'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('<'), false);",
          "    assert_eq!(is_escapeable_character('>'), false);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('Z'), false);",
          "    assert_eq!(is_escapeable_character('9'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('{');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('{'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('{');",
          "    assert_eq!(is_escapeable_character('{'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('}');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('}'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('}');",
          "    assert_eq!(is_escapeable_character('}'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('[');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));",
          "    assert!(!is_escapeable_character('Z'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('[');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));",
          "    assert!(!is_escapeable_character('Z'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(']');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character(']'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('9'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(']');",
          "    assert!(!is_escapeable_character(']'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('9'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(':');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character(':'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(':');",
          "    assert!(!is_escapeable_character(':'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(';');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character(';'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(';');",
          "    assert_eq!(is_escapeable_character(';'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('\\'');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('\\''));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('\\'');",
          "    assert!(!is_escapeable_character('\\''));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('B'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('\"');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('h'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('\"');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('b'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('g'));",
          "    assert!(!is_escapeable_character('h'));",
          "    assert!(!is_escapeable_character('x'));",
          "    assert!(!is_escapeable_character('y'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character(',');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character(','));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character(',');",
          "    assert!(!is_escapeable_character(','));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('.');",
          "}"
        ],
        "oracle": [
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('-'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('.');",
          "    assert!(is_escapeable_character('?'));",
          "    assert!(is_escapeable_character('-'));",
          "    assert!(is_escapeable_character('&'));",
          "    assert!(is_escapeable_character('#'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(is_escapeable_character('/'));",
          "    assert!(is_escapeable_character('!'));",
          "    assert!(is_escapeable_character('\"'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('/');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('/');",
          "    assert!(!is_escapeable_character('e'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('?');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('E'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('N'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('?');",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('b'), false);",
          "    assert_eq!(is_escapeable_character('X'), false);",
          "    assert_eq!(is_escapeable_character('m'), false);",
          "    assert_eq!(is_escapeable_character('E'), false);",
          "    assert_eq!(is_escapeable_character('c'), false);",
          "    assert_eq!(is_escapeable_character('N'), false);",
          "    assert_eq!(is_escapeable_character('z'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('\\\\');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('C'));",
          "    assert!(!is_escapeable_character('x'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('\\\\');",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('C'));",
          "    assert!(!is_escapeable_character('x'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('|');",
          "}"
        ],
        "oracle": [
          "    assert_eq!(is_escapeable_character('|'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('?'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('\"'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('|');",
          "    assert_eq!(is_escapeable_character('|'), true);",
          "    assert_eq!(is_escapeable_character('-'), true);",
          "    assert_eq!(is_escapeable_character('?'), true);",
          "    assert_eq!(is_escapeable_character('%'), true);",
          "    assert_eq!(is_escapeable_character('/'), true);",
          "    assert_eq!(is_escapeable_character('!'), true);",
          "    assert_eq!(is_escapeable_character('\"'), true);",
          "    assert_eq!(is_escapeable_character('e'), false);",
          "    assert_eq!(is_escapeable_character('a'), false);",
          "    assert_eq!(is_escapeable_character('1'), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_escapeable_character('~');",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('~'));"
        ],
        "code": [
          "{",
          "    let result = is_escapeable_character('~');",
          "    assert!(!is_escapeable_character('~'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]