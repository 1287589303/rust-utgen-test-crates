[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '<';",
          "    let _ = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('<'));"
        ],
        "code": [
          "{",
          "    let c = '<';",
          "    let _ = is_escapeable_character(c);",
          "    assert!(!is_escapeable_character('<'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '>';",
          "    let _ = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('>'));"
        ],
        "code": [
          "{",
          "    let c = '>';",
          "    let _ = is_escapeable_character(c);",
          "    assert!(!is_escapeable_character('>'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '%';",
          "    let _ = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('&'));",
          "    assert!(!is_escapeable_character('#'));",
          "    assert!(!is_escapeable_character('/'));",
          "    assert!(!is_escapeable_character('!'));",
          "    assert!(!is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('%'));"
        ],
        "code": [
          "{",
          "    let c = '%';",
          "    let _ = is_escapeable_character(c);",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('&'));",
          "    assert!(!is_escapeable_character('#'));",
          "    assert!(!is_escapeable_character('/'));",
          "    assert!(!is_escapeable_character('!'));",
          "    assert!(!is_escapeable_character('\"'));",
          "    assert!(is_escapeable_character('%'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '/';",
          "    let _ = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('%'));"
        ],
        "code": [
          "{",
          "    let c = '/';",
          "    let _ = is_escapeable_character(c);",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(!is_escapeable_character('A'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('z'));",
          "    assert!(!is_escapeable_character('0'));",
          "    assert!(!is_escapeable_character('9'));",
          "    assert!(!is_escapeable_character('e'));",
          "    assert!(!is_escapeable_character('%'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let c = '!';",
          "    let _ = is_escapeable_character(c);",
          "}"
        ],
        "oracle": [
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('9'));"
        ],
        "code": [
          "{",
          "    let c = '!';",
          "    let _ = is_escapeable_character(c);",
          "    assert!(!is_escapeable_character('<'));",
          "    assert!(!is_escapeable_character('>'));",
          "    assert!(is_escapeable_character('%'));",
          "    assert!(!is_escapeable_character('a'));",
          "    assert!(!is_escapeable_character('Z'));",
          "    assert!(!is_escapeable_character('9'));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]