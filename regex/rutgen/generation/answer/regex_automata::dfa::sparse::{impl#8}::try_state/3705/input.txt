id.as_usize() == self.sparse().len(), wire::try_read_u16_as_usize(state, "state transition length") returns valid data, ntrans == 0, is_match is false, sp.is_match_state(id) is false, wire::check_slice_len(state, input_ranges_len, "sparse byte pairs") returns valid data, there are no input ranges, wire::check_slice_len(state, next_len, "sparse trans state IDs") returns valid data, there are no state IDs, is_match is false, no pattern IDs, sp.is_match_state(id) is false, sp.is_match_state(id) != is_match is false, state is not empty, accel_len == 3, state is not in accelerator ID range.
