id.as_usize() == self.sparse().len(), wire::try_read_u16_as_usize(state, "state transition length") returns Ok, ntrans == 257, is_match == false, sp.is_match_state(id) == false, wire::check_slice_len(state, input_ranges_len, "sparse byte pairs") returns Ok, input_ranges.length < 4, wire::check_slice_len(state, next_len, "sparse trans state IDs") returns Ok, is_match is true, wire::try_read_u32_as_usize(state, "pattern ID length") returns Ok, npats == 0, wire::mul(npats, 4, "sparse pattern ID byte length") returns Ok, wire::check_slice_len(state, pattern_ids_len, "sparse pattern IDs") returns Ok, wire::read_pattern_id(patbytes, "sparse pattern ID in try_state") returns Err
