[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let r1 = Utf8Range { start: 0, end: 5 };",
          "    let r2 = Utf8Range { start: 5, end: 10 };",
          "    intersects(r1, r2);",
          "}"
        ],
        "oracle": [
          "    assert!(intersects(Utf8Range { start: 0, end: 5 }, Utf8Range { start: 5, end: 10 }));"
        ],
        "code": [
          "{",
          "    let r1 = Utf8Range { start: 0, end: 5 };",
          "    let r2 = Utf8Range { start: 5, end: 10 };",
          "    intersects(r1, r2);",
          "    assert!(intersects(Utf8Range { start: 0, end: 5 }, Utf8Range { start: 5, end: 10 }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let r1 = Utf8Range { start: 3, end: 7 };",
          "    let r2 = Utf8Range { start: 7, end: 12 };",
          "    intersects(r1, r2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(intersects(Utf8Range { start: 3, end: 7 }, Utf8Range { start: 7, end: 12 }), true);"
        ],
        "code": [
          "{",
          "    let r1 = Utf8Range { start: 3, end: 7 };",
          "    let r2 = Utf8Range { start: 7, end: 12 };",
          "    intersects(r1, r2);",
          "    assert_eq!(intersects(Utf8Range { start: 3, end: 7 }, Utf8Range { start: 7, end: 12 }), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let r1 = Utf8Range { start: 1, end: 4 };",
          "    let r2 = Utf8Range { start: 4, end: 8 };",
          "    intersects(r1, r2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(intersects(Utf8Range { start: 1, end: 4 }, Utf8Range { start: 4, end: 8 }), true);"
        ],
        "code": [
          "{",
          "    let r1 = Utf8Range { start: 1, end: 4 };",
          "    let r2 = Utf8Range { start: 4, end: 8 };",
          "    intersects(r1, r2);",
          "    assert_eq!(intersects(Utf8Range { start: 1, end: 4 }, Utf8Range { start: 4, end: 8 }), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let r1 = Utf8Range { start: 10, end: 20 };",
          "    let r2 = Utf8Range { start: 20, end: 30 };",
          "    intersects(r1, r2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(intersects(Utf8Range { start: 10, end: 20 }, Utf8Range { start: 20, end: 30 }), true);"
        ],
        "code": [
          "{",
          "    let r1 = Utf8Range { start: 10, end: 20 };",
          "    let r2 = Utf8Range { start: 20, end: 30 };",
          "    intersects(r1, r2);",
          "    assert_eq!(intersects(Utf8Range { start: 10, end: 20 }, Utf8Range { start: 20, end: 30 }), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]