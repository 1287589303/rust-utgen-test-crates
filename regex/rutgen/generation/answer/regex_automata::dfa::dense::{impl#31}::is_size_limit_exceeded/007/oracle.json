[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::NFA(nfa::thompson::BuildError::InvalidPattern),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::NFA(nfa::thompson::BuildError::InvalidPattern),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::Unsupported(\"unsupported feature\"),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "}"
        ],
        "oracle": [
          "    assert!(!result);"
        ],
        "code": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::Unsupported(\"unsupported feature\"),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "    assert!(!result);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::NFA(nfa::thompson::BuildError::TooManyStates {",
          "            limit: 100,",
          "        }),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let error = BuildError {",
          "        kind: BuildErrorKind::NFA(nfa::thompson::BuildError::TooManyStates {",
          "            limit: 100,",
          "        }),",
          "    };",
          "    let result = error.is_size_limit_exceeded();",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]