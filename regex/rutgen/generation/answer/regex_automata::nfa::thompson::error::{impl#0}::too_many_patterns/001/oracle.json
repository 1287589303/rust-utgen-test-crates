[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let given = 0;",
          "    let result = BuildError::too_many_patterns(given);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given: 0, limit: PatternID::LIMIT });"
        ],
        "code": [
          "{",
          "    let given = 0;",
          "    let result = BuildError::too_many_patterns(given);",
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given: 0, limit: PatternID::LIMIT });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let given = PatternID::LIMIT;",
          "    let result = BuildError::too_many_patterns(given);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given, limit: PatternID::LIMIT });"
        ],
        "code": [
          "{",
          "    let given = PatternID::LIMIT;",
          "    let result = BuildError::too_many_patterns(given);",
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given, limit: PatternID::LIMIT });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let given = PatternID::LIMIT + 1;",
          "    let result = BuildError::too_many_patterns(given);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given, limit: PatternID::LIMIT });"
        ],
        "code": [
          "{",
          "    let given = PatternID::LIMIT + 1;",
          "    let result = BuildError::too_many_patterns(given);",
          "    assert_eq!(result.kind(), &BuildErrorKind::TooManyPatterns { given, limit: PatternID::LIMIT });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]