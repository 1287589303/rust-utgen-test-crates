hirs: &[&Hir] where hirs.len() = 1, top_concat(hirs[0]) returns Some with a valid concatenation of at least 2 HIR elements, ensuring prefilter(hir) does not return None for at least one element in concat[1..], and pre.is_fast() is true for that element, concat_suffix is formed with elements from concat[1..] yielding prefilter(&concat_suffix) returning None.
