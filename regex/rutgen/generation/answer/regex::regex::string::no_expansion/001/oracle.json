[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"$\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"$\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"price: $5 total: $100\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"price: $5 total: $100\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"$start\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"$start\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"end$\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"end$\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \" discount: $ 50\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);",
          "    let input = \"price: $100\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "    let input = \"$value\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "    let input = \"Save $$\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \" discount: $ 50\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "    let input = \"price: $100\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "    let input = \"$value\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "    let input = \"Save $$\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"total: $100 after discount\";",
          "    let result = no_expansion(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let input = \"total: $100 after discount\";",
          "    let result = no_expansion(&input);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]