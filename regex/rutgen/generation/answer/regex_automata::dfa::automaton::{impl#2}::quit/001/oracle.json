[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = StartError::quit(0);",
          "}"
        ],
        "oracle": [
          "    let result = StartError::quit(0); assert_eq!(result, StartError::Quit { byte: 0 });",
          "    let result = StartError::quit(255); assert_eq!(result, StartError::Quit { byte: 255 });",
          "    let result = StartError::quit(100); assert_eq!(result, StartError::Quit { byte: 100 });",
          "    let result = StartError::quit(1); assert_eq!(result, StartError::Quit { byte: 1 });"
        ],
        "code": [
          "{",
          "    let result = StartError::quit(0);",
          "    let result = StartError::quit(0); assert_eq!(result, StartError::Quit { byte: 0 });",
          "    let result = StartError::quit(255); assert_eq!(result, StartError::Quit { byte: 255 });",
          "    let result = StartError::quit(100); assert_eq!(result, StartError::Quit { byte: 100 });",
          "    let result = StartError::quit(1); assert_eq!(result, StartError::Quit { byte: 1 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = StartError::quit(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, StartError::Quit { byte: 1 });"
        ],
        "code": [
          "{",
          "    let result = StartError::quit(1);",
          "    assert_eq!(result, StartError::Quit { byte: 1 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = StartError::quit(128);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, StartError::Quit { byte: 128 });"
        ],
        "code": [
          "{",
          "    let result = StartError::quit(128);",
          "    assert_eq!(result, StartError::Quit { byte: 128 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = StartError::quit(255);",
          "}"
        ],
        "oracle": [
          "    let expected = StartError::Quit { byte: 255 };",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let result = StartError::quit(255);",
          "    let expected = StartError::Quit { byte: 255 };",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]