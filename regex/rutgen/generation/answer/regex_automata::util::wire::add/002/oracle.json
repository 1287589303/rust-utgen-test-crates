[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Addition that exceeds usize max\";",
          "    let result = add(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(result, Err(DeserializeError { .. })));",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Addition that exceeds usize max\")));"
        ],
        "code": [
          "{",
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Addition that exceeds usize max\";",
          "    let result = add(a, b, what);",
          "    assert!(matches!(result, Err(DeserializeError { .. })));",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Addition that exceeds usize max\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Another addition exceeding max\";",
          "    let result = add(a, b, what);",
          "}"
        ],
        "oracle": [
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Another addition exceeding max\";",
          "    let expected = Err(DeserializeError::arithmetic_overflow(what));",
          "    assert_eq!(result, expected);"
        ],
        "code": [
          "{",
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Another addition exceeding max\";",
          "    let result = add(a, b, what);",
          "    let a = usize::MAX;",
          "    let b = 1;",
          "    let what = \"Another addition exceeding max\";",
          "    let expected = Err(DeserializeError::arithmetic_overflow(what));",
          "    assert_eq!(result, expected);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]