[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdef\");",
          "    lit.keep_last_bytes(4);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.as_bytes(), b\"def\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 4);"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdef\");",
          "    lit.keep_last_bytes(4);",
          "    assert_eq!(lit.as_bytes(), b\"def\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdef\");",
          "    lit.keep_last_bytes(5);",
          "}"
        ],
        "oracle": [
          "    let lit = Literal::exact(b\"abcdef\");",
          "    assert_eq!(lit.as_bytes(), b\"abcdef\");",
          "    lit.keep_last_bytes(5);",
          "    assert_eq!(lit.as_bytes(), b\"def\");",
          "    assert!(lit.is_exact() == false);"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdef\");",
          "    lit.keep_last_bytes(5);",
          "    let lit = Literal::exact(b\"abcdef\");",
          "    assert_eq!(lit.as_bytes(), b\"abcdef\");",
          "    lit.keep_last_bytes(5);",
          "    assert_eq!(lit.as_bytes(), b\"def\");",
          "    assert!(lit.is_exact() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(b\"hello\");",
          "    lit.keep_last_bytes(3);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.as_bytes(), b\"llo\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 3);",
          "    assert!(lit.is_empty() == false);"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(b\"hello\");",
          "    lit.keep_last_bytes(3);",
          "    assert_eq!(lit.as_bytes(), b\"llo\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 3);",
          "    assert!(lit.is_empty() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(b\"rustlang\");",
          "    lit.keep_last_bytes(6);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.as_bytes(), b\"stlang\");",
          "    assert!(lit.is_exact() == false);",
          "    assert!(lit.len() == 6);"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(b\"rustlang\");",
          "    lit.keep_last_bytes(6);",
          "    assert_eq!(lit.as_bytes(), b\"stlang\");",
          "    assert!(lit.is_exact() == false);",
          "    assert!(lit.len() == 6);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdefgh\");",
          "    lit.keep_last_bytes(2);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.as_bytes(), b\"gh\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 2);",
          "    assert!(!lit.is_empty());"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(b\"abcdefgh\");",
          "    lit.keep_last_bytes(2);",
          "    assert_eq!(lit.as_bytes(), b\"gh\");",
          "    assert!(lit.is_exact() == false);",
          "    assert_eq!(lit.len(), 2);",
          "    assert!(!lit.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]