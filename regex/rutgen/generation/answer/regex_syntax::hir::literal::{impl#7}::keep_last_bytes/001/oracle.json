[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(vec![1, 2, 3]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(len);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.len(), 3);",
          "    assert_eq!(lit.as_bytes(), &[1, 2, 3]);",
          "    assert!(lit.is_exact());",
          "    assert!(!lit.is_empty());"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(vec![1, 2, 3]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(len);",
          "    assert_eq!(lit.len(), 3);",
          "    assert_eq!(lit.as_bytes(), &[1, 2, 3]);",
          "    assert!(lit.is_exact());",
          "    assert!(!lit.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(vec![5, 6, 7]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(0);",
          "}"
        ],
        "oracle": [
          "    lit.keep_last_bytes(len);",
          "    assert_eq!(lit.len(), len);",
          "    assert!(lit.is_exact());",
          "    assert_eq!(lit.as_bytes(), &[5, 6, 7]);"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(vec![5, 6, 7]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(0);",
          "    lit.keep_last_bytes(len);",
          "    assert_eq!(lit.len(), len);",
          "    assert!(lit.is_exact());",
          "    assert_eq!(lit.as_bytes(), &[5, 6, 7]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut lit = Literal::exact(vec![]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(len);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(lit.len(), 0);",
          "    assert!(lit.is_exact());",
          "    assert_eq!(lit.as_bytes(), &[]);",
          "    assert!(lit.is_empty());"
        ],
        "code": [
          "{",
          "    let mut lit = Literal::exact(vec![]);",
          "    let len = lit.len();",
          "    lit.keep_last_bytes(len);",
          "    assert_eq!(lit.len(), 0);",
          "    assert!(lit.is_exact());",
          "    assert_eq!(lit.as_bytes(), &[]);",
          "    assert!(lit.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]