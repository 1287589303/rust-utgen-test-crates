// Answer 0

#[test]
fn test_from_bytes_unchecked_valid_case() {
    let slice: &[u8] = &[
        0x02, 0x00, 0x00, 0x00, // state_len = 2
        0x04, 0x00, 0x00, 0x00, // slice offset pair length (4 bytes)
        0x00, 0x00, 0x00, 0x00, // first slice offset (0)
        0x01, 0x00, 0x00, 0x00, // first slice length (1)
        0x02, 0x00, 0x00, 0x00, // second slice offset (2)
        0x01, 0x00, 0x00, 0x00, // second slice length (1)
        0x02, 0x00, 0x00, 0x00, // pattern length (2)
        0x02, 0x00, 0x00, 0x00, // pattern ID length (2)
        0x01, 0x00, 0x00, 0x00, // pattern ID 0
        0x02, 0x00, 0x00, 0x00, // pattern ID 1
    ];
    let _ = unsafe { MatchStates::from_bytes_unchecked(slice) };
}

#[test]
#[should_panic]
fn test_from_bytes_unchecked_arithmetic_overflow_case() {
    let slice: &[u8] = &[
        0x01, 0x00, 0x00, 0x00, // state_len = 1
        0x04, 0x00, 0x00, 0x00, // slice offset pair length (4 bytes)
        0x00, 0x00, 0x00, 0x00, // first slice offset (0)
        0x01, 0x00, 0x00, 0x00, // first slice length (1)
        0x02, 0x00, 0x00, 0x00, // pattern length (2)
        0x03, 0x00, 0x00, 0x00, // pattern ID length (3)
        0x01, 0x00, 0x00, 0x00, // pattern ID 0
        0x02, 0x00, 0x00, 0x00, // pattern ID 1
        0x03, 0x00, 0x00, 0x00, // pattern ID 2
    ];
    let _ = unsafe { MatchStates::from_bytes_unchecked(slice) };
}

#[test]
fn test_from_bytes_unchecked_boundary_case() {
    let slice: &[u8] = &[
        0x03, 0x00, 0x00, 0x00, // state_len = 3
        0x06, 0x00, 0x00, 0x00, // slice offset pair length (6 bytes)
        0x00, 0x00, 0x00, 0x00, // first slice offset (0)
        0x01, 0x00, 0x00, 0x00, // first slice length (1)
        0x02, 0x00, 0x00, 0x00, // second slice offset (2)
        0x01, 0x00, 0x00, 0x00, // second slice length (1)
        0x04, 0x00, 0x00, 0x00, // third slice offset (4)
        0x01, 0x00, 0x00, 0x00, // third slice length (1)
        0x05, 0x00, 0x00, 0x00, // pattern length (5)
        0x00, 0x00, 0x00, 0x00, // pattern ID length (0)
    ];
    let _ = unsafe { MatchStates::from_bytes_unchecked(slice) };
}

