[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_set = ByteSet::empty();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_set, ByteSet { bits: BitSet([0; 2]) });"
        ],
        "code": [
          "{",
          "    let byte_set = ByteSet::empty();",
          "    assert_eq!(byte_set, ByteSet { bits: BitSet([0; 2]) });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_set = ByteSet::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_set, ByteSet::empty());",
          "    assert!(byte_set.is_empty());",
          "    assert_eq!(byte_set.bits, BitSet([0; 2]));",
          "    assert!(!byte_set.contains(0));",
          "    assert!(!byte_set.contains_range(0, 255));"
        ],
        "code": [
          "{",
          "    let byte_set = ByteSet::default();",
          "    assert_eq!(byte_set, ByteSet::empty());",
          "    assert!(byte_set.is_empty());",
          "    assert_eq!(byte_set.bits, BitSet([0; 2]));",
          "    assert!(!byte_set.contains(0));",
          "    assert!(!byte_set.contains_range(0, 255));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]