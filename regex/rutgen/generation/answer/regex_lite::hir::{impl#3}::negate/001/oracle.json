[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut class = Class::new(vec![]);",
          "    class.negate();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(class.ranges.len(), 1);",
          "    assert_eq!(class.ranges[0].start, '\\x00');",
          "    assert_eq!(class.ranges[0].end, char::MAX);"
        ],
        "code": [
          "{",
          "    let mut class = Class::new(vec![]);",
          "    class.negate();",
          "    assert_eq!(class.ranges.len(), 1);",
          "    assert_eq!(class.ranges[0].start, '\\x00');",
          "    assert_eq!(class.ranges[0].end, char::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut class = Class::new(vec![ClassRange { start: '\\x00', end: '\\x00' }]);",
          "    class.negate();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(class.ranges.len(), 1);",
          "    assert_eq!(class.ranges[0].start, '\\x00');",
          "    assert_eq!(class.ranges[0].end, char::MAX);"
        ],
        "code": [
          "{",
          "    let mut class = Class::new(vec![ClassRange { start: '\\x00', end: '\\x00' }]);",
          "    class.negate();",
          "    assert_eq!(class.ranges.len(), 1);",
          "    assert_eq!(class.ranges[0].start, '\\x00');",
          "    assert_eq!(class.ranges[0].end, char::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]