[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: char = char::min_value();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value, '\\x00');"
        ],
        "code": [
          "{",
          "    let value: char = char::min_value();",
          "    assert_eq!(value, '\\x00');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let initial: char = '\\x00';",
          "    let incremented: char = initial.increment();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(char::min_value(), '\\x00');",
          "    assert_eq!(char::max_value(), '\\u{10FFFF}');",
          "    assert_eq!(initial.increment(), '\\x01');",
          "    assert_eq!(initial.decrement(), '\\x00');"
        ],
        "code": [
          "{",
          "    let initial: char = '\\x00';",
          "    let incremented: char = initial.increment();",
          "    assert_eq!(char::min_value(), '\\x00');",
          "    assert_eq!(char::max_value(), '\\u{10FFFF}');",
          "    assert_eq!(initial.increment(), '\\x01');",
          "    assert_eq!(initial.decrement(), '\\x00');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let initial: char = '\\u{E000}';",
          "    let decremented: char = initial.decrement();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(char::min_value(), '\\x00');"
        ],
        "code": [
          "{",
          "    let initial: char = '\\u{E000}';",
          "    let decremented: char = initial.decrement();",
          "    assert_eq!(char::min_value(), '\\x00');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]