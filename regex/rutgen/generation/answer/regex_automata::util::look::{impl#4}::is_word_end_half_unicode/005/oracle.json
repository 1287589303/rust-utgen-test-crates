[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let haystack = b\"Hello, world!\";",
          "    let matcher = LookMatcher::new();",
          "    let at = haystack.len();",
          "    let _ = matcher.is_word_end_half_unicode(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(matcher.is_word_end_half_unicode(haystack, at), Ok(true));"
        ],
        "code": [
          "{",
          "    let haystack = b\"Hello, world!\";",
          "    let matcher = LookMatcher::new();",
          "    let at = haystack.len();",
          "    let _ = matcher.is_word_end_half_unicode(haystack, at);",
          "    assert_eq!(matcher.is_word_end_half_unicode(haystack, at), Ok(true));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let haystack: &[u8] = b\"\";",
          "    let matcher = LookMatcher::new();",
          "    let at = haystack.len();",
          "    let _ = matcher.is_word_end_half_unicode(haystack, at);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(matcher.is_word_end_half_unicode(haystack, at), Ok(true));"
        ],
        "code": [
          "{",
          "    let haystack: &[u8] = b\"\";",
          "    let matcher = LookMatcher::new();",
          "    let at = haystack.len();",
          "    let _ = matcher.is_word_end_half_unicode(haystack, at);",
          "    assert_eq!(matcher.is_word_end_half_unicode(haystack, at), Ok(true));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]