[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 2; ",
          "    let what: &'static str = \"Multiplication overflow\"; ",
          "    let result = mul(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Multiplication overflow\")));"
        ],
        "code": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 2; ",
          "    let what: &'static str = \"Multiplication overflow\"; ",
          "    let result = mul(a, b, what);",
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Multiplication overflow\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: usize = usize::MAX / 2 + 1; ",
          "    let b: usize = 3; ",
          "    let what: &'static str = \"Exceeding max value\"; ",
          "    let result = mul(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), DeserializeError::arithmetic_overflow(\"Exceeding max value\"));"
        ],
        "code": [
          "{",
          "    let a: usize = usize::MAX / 2 + 1; ",
          "    let b: usize = 3; ",
          "    let what: &'static str = \"Exceeding max value\"; ",
          "    let result = mul(a, b, what);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), DeserializeError::arithmetic_overflow(\"Exceeding max value\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 0; ",
          "    let what: &'static str = \"Max value multiplied by zero\"; ",
          "    let result = mul(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(what)));"
        ],
        "code": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 0; ",
          "    let what: &'static str = \"Max value multiplied by zero\"; ",
          "    let result = mul(a, b, what);",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(what)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 1; ",
          "    let what: &'static str = \"Max value multiplied by one\"; ",
          "    let result = mul(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), DeserializeError::arithmetic_overflow(\"Max value multiplied by one\"));"
        ],
        "code": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = 1; ",
          "    let what: &'static str = \"Max value multiplied by one\"; ",
          "    let result = mul(a, b, what);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), DeserializeError::arithmetic_overflow(\"Max value multiplied by one\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = usize::MAX; ",
          "    let what: &'static str = \"Max value multiplied by max value\"; ",
          "    let result = mul(a, b, what);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Max value multiplied by max value\")));"
        ],
        "code": [
          "{",
          "    let a: usize = usize::MAX; ",
          "    let b: usize = usize::MAX; ",
          "    let what: &'static str = \"Max value multiplied by max value\"; ",
          "    let result = mul(a, b, what);",
          "    assert!(result.is_err());",
          "    assert_eq!(result, Err(DeserializeError::arithmetic_overflow(\"Max value multiplied by max value\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]