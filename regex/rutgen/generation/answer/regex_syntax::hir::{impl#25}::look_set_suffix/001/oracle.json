[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    let properties_with_suffix = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix.look_set_suffix(), LookSet { bits: 1 });",
          "    let properties_with_suffix_none = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: u32::MAX },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix_none.look_set_suffix(), LookSet { bits: u32::MAX });",
          "    let properties_with_suffix_zero = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix_zero.look_set_suffix(), LookSet { bits: 0 });",
          "    let properties_utf8 = Properties(Box::new(PropertiesI {",
          "    utf8: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_utf8.look_set_suffix(), LookSet { bits: 0 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    let properties_with_suffix = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix.look_set_suffix(), LookSet { bits: 1 });",
          "    let properties_with_suffix_none = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: u32::MAX },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix_none.look_set_suffix(), LookSet { bits: u32::MAX });",
          "    let properties_with_suffix_zero = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_with_suffix_zero.look_set_suffix(), LookSet { bits: 0 });",
          "    let properties_utf8 = Properties(Box::new(PropertiesI {",
          "    utf8: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties_utf8.look_set_suffix(), LookSet { bits: 0 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(5),",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 1 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(5),",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: 0 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 1 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: Some(10),",
          "        look_set: LookSet { bits: 2 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.look_set_suffix();",
          "}"
        ],
        "oracle": [
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: Some(10),",
          "    look_set: LookSet { bits: 2 },",
          "    look_set_prefix: LookSet { bits: 0 },",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    look_set_prefix_any: LookSet { bits: 0 },",
          "    look_set_suffix_any: LookSet { bits: 0 },",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(5),",
          "    maximum_len: None,",
          "    look_set: LookSet { bits: 1 },",
          "    look_set_prefix: LookSet { bits: 3 },",
          "    look_set_suffix: LookSet { bits: 2 },",
          "    look_set_prefix_any: LookSet { bits: 0 },",
          "    look_set_suffix_any: LookSet { bits: 0 },",
          "    utf8: true,",
          "    explicit_captures_len: 1,",
          "    static_explicit_captures_len: Some(1),",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 2 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet { bits: 4 },",
          "    look_set_prefix: LookSet { bits: 5 },",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    look_set_prefix_any: LookSet { bits: 2 },",
          "    look_set_suffix_any: LookSet { bits: 1 },",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: Some(10),",
          "        look_set: LookSet { bits: 2 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 0 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.look_set_suffix();",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: Some(10),",
          "    look_set: LookSet { bits: 2 },",
          "    look_set_prefix: LookSet { bits: 0 },",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    look_set_prefix_any: LookSet { bits: 0 },",
          "    look_set_suffix_any: LookSet { bits: 0 },",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(5),",
          "    maximum_len: None,",
          "    look_set: LookSet { bits: 1 },",
          "    look_set_prefix: LookSet { bits: 3 },",
          "    look_set_suffix: LookSet { bits: 2 },",
          "    look_set_prefix_any: LookSet { bits: 0 },",
          "    look_set_suffix_any: LookSet { bits: 0 },",
          "    utf8: true,",
          "    explicit_captures_len: 1,",
          "    static_explicit_captures_len: Some(1),",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 2 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet { bits: 4 },",
          "    look_set_prefix: LookSet { bits: 5 },",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    look_set_prefix_any: LookSet { bits: 2 },",
          "    look_set_suffix_any: LookSet { bits: 1 },",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: u32::MAX },",
          "        look_set_prefix: LookSet { bits: u32::MAX },",
          "        look_set_suffix: LookSet { bits: u32::MAX },",
          "        look_set_prefix_any: LookSet { bits: u32::MAX },",
          "        look_set_suffix_any: LookSet { bits: u32::MAX },",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.look_set_suffix();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: u32::MAX });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0b101010 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0b101010 });"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet { bits: u32::MAX },",
          "        look_set_prefix: LookSet { bits: u32::MAX },",
          "        look_set_suffix: LookSet { bits: u32::MAX },",
          "        look_set_prefix_any: LookSet { bits: u32::MAX },",
          "        look_set_suffix_any: LookSet { bits: u32::MAX },",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.look_set_suffix();",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: u32::MAX });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 1 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 1 });",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    look_set_suffix: LookSet { bits: 0b101010 },",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.look_set_suffix(), LookSet { bits: 0b101010 });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(5),",
          "        look_set: LookSet { bits: 8 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 4 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 1,",
          "        static_explicit_captures_len: Some(2),",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.look_set_suffix().bits, 4);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(5),",
          "        look_set: LookSet { bits: 8 },",
          "        look_set_prefix: LookSet { bits: 0 },",
          "        look_set_suffix: LookSet { bits: 4 },",
          "        look_set_prefix_any: LookSet { bits: 0 },",
          "        look_set_suffix_any: LookSet { bits: 0 },",
          "        utf8: false,",
          "        explicit_captures_len: 1,",
          "        static_explicit_captures_len: Some(2),",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.look_set_suffix();",
          "    assert_eq!(properties.look_set_suffix().bits, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]