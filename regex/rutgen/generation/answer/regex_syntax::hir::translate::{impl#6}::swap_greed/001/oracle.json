[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { swap_greed: Some(true), ..Flags::default() };",
          "    flags.swap_greed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.swap_greed(), true);",
          "    let flags_false = Flags { swap_greed: Some(false), ..Flags::default() };",
          "    assert_eq!(flags_false.swap_greed(), false);",
          "    let flags_none = Flags { swap_greed: None, ..Flags::default() };",
          "    assert_eq!(flags_none.swap_greed(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags { swap_greed: Some(true), ..Flags::default() };",
          "    flags.swap_greed();",
          "    assert_eq!(flags.swap_greed(), true);",
          "    let flags_false = Flags { swap_greed: Some(false), ..Flags::default() };",
          "    assert_eq!(flags_false.swap_greed(), false);",
          "    let flags_none = Flags { swap_greed: None, ..Flags::default() };",
          "    assert_eq!(flags_none.swap_greed(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { swap_greed: Some(false), ..Flags::default() };",
          "    flags.swap_greed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.swap_greed(), false);",
          "    ",
          "    let flags = Flags { swap_greed: Some(true), ..Flags::default() };",
          "    assert_eq!(flags.swap_greed(), true);",
          "    ",
          "    let flags = Flags { swap_greed: None, ..Flags::default() };",
          "    assert_eq!(flags.swap_greed(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags { swap_greed: Some(false), ..Flags::default() };",
          "    flags.swap_greed();",
          "    assert_eq!(flags.swap_greed(), false);",
          "    ",
          "    let flags = Flags { swap_greed: Some(true), ..Flags::default() };",
          "    assert_eq!(flags.swap_greed(), true);",
          "    ",
          "    let flags = Flags { swap_greed: None, ..Flags::default() };",
          "    assert_eq!(flags.swap_greed(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let flags = Flags { swap_greed: None, ..Flags::default() };",
          "    flags.swap_greed();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(flags.swap_greed(), false);"
        ],
        "code": [
          "{",
          "    let flags = Flags { swap_greed: None, ..Flags::default() };",
          "    flags.swap_greed();",
          "    assert_eq!(flags.swap_greed(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]