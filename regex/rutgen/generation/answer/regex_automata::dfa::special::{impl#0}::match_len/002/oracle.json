[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(1), // Arbitrary valid StateID",
          "        quit_id: StateID(2), // Arbitrary valid StateID",
          "        min_match: DEAD, // Ensures self.matches() is false",
          "        max_match: StateID(3), // Must be greater than min_match",
          "        min_accel: StateID(4), // Arbitrary valid StateID",
          "        max_accel: StateID(5), // Arbitrary valid StateID",
          "        min_start: StateID(6), // Arbitrary valid StateID",
          "        max_start: StateID(7), // Arbitrary valid StateID",
          "    };",
          "    let stride = 1; // Must be greater than 0",
          "    special.match_len(stride);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(special.match_len(1), 0);"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(1), // Arbitrary valid StateID",
          "        quit_id: StateID(2), // Arbitrary valid StateID",
          "        min_match: DEAD, // Ensures self.matches() is false",
          "        max_match: StateID(3), // Must be greater than min_match",
          "        min_accel: StateID(4), // Arbitrary valid StateID",
          "        max_accel: StateID(5), // Arbitrary valid StateID",
          "        min_start: StateID(6), // Arbitrary valid StateID",
          "        max_start: StateID(7), // Arbitrary valid StateID",
          "    };",
          "    let stride = 1; // Must be greater than 0",
          "    special.match_len(stride);",
          "    assert_eq!(special.match_len(1), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(1),",
          "        quit_id: StateID(2),",
          "        min_match: DEAD,",
          "        max_match: StateID(4), // Must be greater than min_match",
          "        min_accel: StateID(5),",
          "        max_accel: StateID(6),",
          "        min_start: StateID(7),",
          "        max_start: StateID(8),",
          "    };",
          "    let stride = 2; // Must be greater than 0",
          "    special.match_len(stride);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(special.match_len(stride), 0);"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(1),",
          "        quit_id: StateID(2),",
          "        min_match: DEAD,",
          "        max_match: StateID(4), // Must be greater than min_match",
          "        min_accel: StateID(5),",
          "        max_accel: StateID(6),",
          "        min_start: StateID(7),",
          "        max_start: StateID(8),",
          "    };",
          "    let stride = 2; // Must be greater than 0",
          "    special.match_len(stride);",
          "    assert_eq!(special.match_len(stride), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]