hir.kind() must match HirKind::Literal(hir::Literal(ref bytes)) with bytes as a UTF-8 valid sequence or bytes with length > 0; or must match HirKind::Class(hir::Class::Bytes(ref cls)) with cls.ranges() having one or more ClassBytesRange where each range starts and ends as u8 values from 0 to 255 without overlaps; or must match HirKind::Class(hir::Class::Unicode(ref cls)) with cls.ranges() having one or more ClassUnicodeRange where each range starts and ends as char values from '\u{0000}' to '\u{10FFFF}' without overlaps, ensuring write_str conditions return Ok.
