[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let err = LazyStateIDError { attempted: 0 };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: 0 } });"
        ],
        "code": [
          "{",
          "    let err = LazyStateIDError { attempted: 0 };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: 0 } });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let err = LazyStateIDError { attempted: 12345 };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: 12345 } });"
        ],
        "code": [
          "{",
          "    let err = LazyStateIDError { attempted: 12345 };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: 12345 } });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let err = LazyStateIDError { attempted: u64::MAX };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: u64::MAX } });"
        ],
        "code": [
          "{",
          "    let err = LazyStateIDError { attempted: u64::MAX };",
          "    let result = BuildError::insufficient_state_id_capacity(err);",
          "    assert_eq!(result.kind, BuildErrorKind::InsufficientStateIDCapacity { err: LazyStateIDError { attempted: u64::MAX } });",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]