[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = ExtractKind::default();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(result.is::<ExtractKind>());"
        ],
        "code": [
          "{",
          "    let result = ExtractKind::default();",
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(result.is::<ExtractKind>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = ExtractKind::default();",
          "    let _clone = result.clone();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(result.clone() == ExtractKind::Prefix);",
          "    assert!(format!(\"{:?}\", result) == \"Prefix\");",
          "    assert_ne!(result, ExtractKind::Suffix);"
        ],
        "code": [
          "{",
          "    let result = ExtractKind::default();",
          "    let _clone = result.clone();",
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(result.clone() == ExtractKind::Prefix);",
          "    assert!(format!(\"{:?}\", result) == \"Prefix\");",
          "    assert_ne!(result, ExtractKind::Suffix);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = ExtractKind::default();",
          "    let _debug_str = format!(\"{:?}\", result);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert_eq!(_debug_str, \"Prefix\");",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(matches!(result, ExtractKind::default()));"
        ],
        "code": [
          "{",
          "    let result = ExtractKind::default();",
          "    let _debug_str = format!(\"{:?}\", result);",
          "    assert_eq!(result, ExtractKind::Prefix);",
          "    assert_eq!(_debug_str, \"Prefix\");",
          "    assert!(matches!(result, ExtractKind::Prefix));",
          "    assert!(matches!(result, ExtractKind::default()));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]