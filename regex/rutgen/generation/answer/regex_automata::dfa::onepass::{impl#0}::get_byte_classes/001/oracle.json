[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().byte_classes(true);",
          "    let _ = config.get_byte_classes();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_byte_classes(), true);",
          "    ",
          "    let config = Config::new().byte_classes(false);",
          "    assert_eq!(config.get_byte_classes(), false);",
          "    ",
          "    let config = Config::new();",
          "    assert_eq!(config.get_byte_classes(), true);"
        ],
        "code": [
          "{",
          "    let config = Config::new().byte_classes(true);",
          "    let _ = config.get_byte_classes();",
          "    assert_eq!(config.get_byte_classes(), true);",
          "    ",
          "    let config = Config::new().byte_classes(false);",
          "    assert_eq!(config.get_byte_classes(), false);",
          "    ",
          "    let config = Config::new();",
          "    assert_eq!(config.get_byte_classes(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().byte_classes(false);",
          "    let _ = config.get_byte_classes();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_byte_classes(), false);"
        ],
        "code": [
          "{",
          "    let config = Config::new().byte_classes(false);",
          "    let _ = config.get_byte_classes();",
          "    assert_eq!(config.get_byte_classes(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().byte_classes(None);",
          "    let _ = config.get_byte_classes();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_byte_classes(), true);",
          "    let config_with_byte_classes_enabled = Config::new().byte_classes(true);",
          "    assert_eq!(config_with_byte_classes_enabled.get_byte_classes(), true);",
          "    let config_with_byte_classes_disabled = Config::new().byte_classes(false);",
          "    assert_eq!(config_with_byte_classes_disabled.get_byte_classes(), false);",
          "    let config_with_byte_classes_none = Config::new().byte_classes(None);",
          "    assert_eq!(config_with_byte_classes_none.get_byte_classes(), true);"
        ],
        "code": [
          "{",
          "    let config = Config::new().byte_classes(None);",
          "    let _ = config.get_byte_classes();",
          "    assert_eq!(config.get_byte_classes(), true);",
          "    let config_with_byte_classes_enabled = Config::new().byte_classes(true);",
          "    assert_eq!(config_with_byte_classes_enabled.get_byte_classes(), true);",
          "    let config_with_byte_classes_disabled = Config::new().byte_classes(false);",
          "    assert_eq!(config_with_byte_classes_disabled.get_byte_classes(), false);",
          "    let config_with_byte_classes_none = Config::new().byte_classes(None);",
          "    assert_eq!(config_with_byte_classes_none.get_byte_classes(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]