[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = GroupInfoPatternNames::empty();",
          "    let iter_empty: core::slice::Iter<'static, Option<Arc<str>>> = [].iter();",
          "    assert_eq!(result.it.as_slice(), iter_empty.as_slice());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.it.len(), 0);",
          "    assert!(result.it.is_empty());",
          "    assert_eq!(result.it.next(), None);",
          "    assert_eq!(result.it.as_slice(), &[]);",
          "    assert!(result.it.size_hint() == (0, Some(0)));"
        ],
        "code": [
          "{",
          "    let result = GroupInfoPatternNames::empty();",
          "    let iter_empty: core::slice::Iter<'static, Option<Arc<str>>> = [].iter();",
          "    assert_eq!(result.it.as_slice(), iter_empty.as_slice());",
          "    assert_eq!(result.it.len(), 0);",
          "    assert!(result.it.is_empty());",
          "    assert_eq!(result.it.next(), None);",
          "    assert_eq!(result.it.as_slice(), &[]);",
          "    assert!(result.it.size_hint() == (0, Some(0)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]