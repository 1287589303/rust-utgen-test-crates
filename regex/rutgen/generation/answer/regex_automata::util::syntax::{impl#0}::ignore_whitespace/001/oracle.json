[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().ignore_whitespace(true);",
          "}"
        ],
        "oracle": [
          "    assert!(config.get_ignore_whitespace() == true);",
          "    assert!(config.get_case_insensitive() == false);",
          "    assert!(config.get_multi_line() == false);",
          "    assert!(config.get_dot_matches_new_line() == false);",
          "    assert!(config.get_crlf() == false);",
          "    assert!(config.get_line_terminator() == 0);",
          "    assert!(config.get_swap_greed() == false);",
          "    assert!(config.get_utf8() == false);",
          "    assert!(config.get_unicode() == false);",
          "    assert!(config.get_nest_limit() == 0);",
          "    assert!(config.get_octal() == false);"
        ],
        "code": [
          "{",
          "    let config = Config::new().ignore_whitespace(true);",
          "    assert!(config.get_ignore_whitespace() == true);",
          "    assert!(config.get_case_insensitive() == false);",
          "    assert!(config.get_multi_line() == false);",
          "    assert!(config.get_dot_matches_new_line() == false);",
          "    assert!(config.get_crlf() == false);",
          "    assert!(config.get_line_terminator() == 0);",
          "    assert!(config.get_swap_greed() == false);",
          "    assert!(config.get_utf8() == false);",
          "    assert!(config.get_unicode() == false);",
          "    assert!(config.get_nest_limit() == 0);",
          "    assert!(config.get_octal() == false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().ignore_whitespace(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(config.get_ignore_whitespace(), false);",
          "    let config = Config::new().ignore_whitespace(true);",
          "    assert_eq!(config.get_ignore_whitespace(), true);",
          "    let config = Config::new().ignore_whitespace(true).ignore_whitespace(false);",
          "    assert_eq!(config.get_ignore_whitespace(), false);",
          "    let config = Config::new().ignore_whitespace(false).ignore_whitespace(true);",
          "    assert_eq!(config.get_ignore_whitespace(), true);"
        ],
        "code": [
          "{",
          "    let config = Config::new().ignore_whitespace(false);",
          "    assert_eq!(config.get_ignore_whitespace(), false);",
          "    let config = Config::new().ignore_whitespace(true);",
          "    assert_eq!(config.get_ignore_whitespace(), true);",
          "    let config = Config::new().ignore_whitespace(true).ignore_whitespace(false);",
          "    assert_eq!(config.get_ignore_whitespace(), false);",
          "    let config = Config::new().ignore_whitespace(false).ignore_whitespace(true);",
          "    assert_eq!(config.get_ignore_whitespace(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]