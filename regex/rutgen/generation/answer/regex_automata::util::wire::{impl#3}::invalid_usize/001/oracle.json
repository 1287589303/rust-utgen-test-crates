[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let what = \"Non-empty static string\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"Non-empty static string\" })));"
        ],
        "code": [
          "{",
          "    let what = \"Non-empty static string\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"Non-empty static string\" })));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let what = \"\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { .. })));",
          "    assert_eq!(result.0, DeserializeErrorKind::InvalidUsize { what });",
          "    assert_eq!(result.0.what, \"\");"
        ],
        "code": [
          "{",
          "    let what = \"\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { .. })));",
          "    assert_eq!(result.0, DeserializeErrorKind::InvalidUsize { what });",
          "    assert_eq!(result.0.what, \"\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let what = \"@#%^&*()!\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"@#%^&*()!\" }));"
        ],
        "code": [
          "{",
          "    let what = \"@#%^&*()!\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"@#%^&*()!\" }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let what = \"12345\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"12345\" }));"
        ],
        "code": [
          "{",
          "    let what = \"12345\";",
          "    let result = DeserializeError::invalid_usize(what);",
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::InvalidUsize { what: \"12345\" }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]