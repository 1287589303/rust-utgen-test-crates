[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"backreferences are not supported\")"
        ],
        "code": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "    write!(f, \"backreferences are not supported\")",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "}"
        ],
        "oracle": [
          "    write!(f, \"backreferences are not supported\")"
        ],
        "code": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "    write!(f, \"backreferences are not supported\")",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(buffer.to_string(), \"backreferences are not supported\");"
        ],
        "code": [
          "{",
          "    let error_kind = ErrorKind::UnsupportedBackreference;",
          "    let mut buffer = core::fmt::Formatter::new();",
          "    let _ = error_kind.fmt(&mut buffer);",
          "    assert_eq!(buffer.to_string(), \"backreferences are not supported\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]