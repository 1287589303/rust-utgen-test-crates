[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = Builder {",
          "        pats: vec![],",
          "        metac: meta::Config::default(),",
          "        syntaxc: syntax::Config::default(),",
          "    };",
          "    builder.ignore_whitespace(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(builder.syntaxc.is_whitespace_ignored(), true);",
          "    assert_eq!(builder.ignore_whitespace(false).syntaxc.is_whitespace_ignored(), false);",
          "    assert!(std::ptr::eq(builder.ignore_whitespace(true), &mut builder));"
        ],
        "code": [
          "{",
          "    let mut builder = Builder {",
          "        pats: vec![],",
          "        metac: meta::Config::default(),",
          "        syntaxc: syntax::Config::default(),",
          "    };",
          "    builder.ignore_whitespace(true);",
          "    assert_eq!(builder.syntaxc.is_whitespace_ignored(), true);",
          "    assert_eq!(builder.ignore_whitespace(false).syntaxc.is_whitespace_ignored(), false);",
          "    assert!(std::ptr::eq(builder.ignore_whitespace(true), &mut builder));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut builder = Builder {",
          "        pats: vec![],",
          "        metac: meta::Config::default(),",
          "        syntaxc: syntax::Config::default(),",
          "    };",
          "    builder.ignore_whitespace(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(builder.syntaxc.is_whitespace_ignored(), false);",
          "    assert_eq!(builder.ignore_whitespace(true).syntaxc.is_whitespace_ignored(), true);",
          "    assert!(std::ptr::eq(builder.ignore_whitespace(false), &mut builder));"
        ],
        "code": [
          "{",
          "    let mut builder = Builder {",
          "        pats: vec![],",
          "        metac: meta::Config::default(),",
          "        syntaxc: syntax::Config::default(),",
          "    };",
          "    builder.ignore_whitespace(false);",
          "    assert_eq!(builder.syntaxc.is_whitespace_ignored(), false);",
          "    assert_eq!(builder.ignore_whitespace(true).syntaxc.is_whitespace_ignored(), true);",
          "    assert!(std::ptr::eq(builder.ignore_whitespace(false), &mut builder));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]