[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut set = crate::util::alphabet::ByteClassSet::empty();",
          "    let mut matcher = LookMatcher::new();",
          "    matcher.set_line_terminator(DebugByte(0));",
          "",
          "    // Triggering matches for Look::WordAscii where b1 == 255",
          "    matcher.add_to_byteset(Look::WordAscii, &mut set);",
          "}"
        ],
        "oracle": [
          "    set.set_range(asu8(255), asu8(255));",
          "    assert!(set.contains(asu8(255)));",
          "    set.set_range(asu8(0), asu8(255));",
          "    assert!(set.contains(asu8(0)));",
          "    assert!(set.contains(asu8(1)));",
          "    assert!(set.contains(asu8(254)));",
          "    assert!(set.contains(asu8(255)));"
        ],
        "code": [
          "{",
          "    let mut set = crate::util::alphabet::ByteClassSet::empty();",
          "    let mut matcher = LookMatcher::new();",
          "    matcher.set_line_terminator(DebugByte(0));",
          "",
          "    // Triggering matches for Look::WordAscii where b1 == 255",
          "    matcher.add_to_byteset(Look::WordAscii, &mut set);",
          "    set.set_range(asu8(255), asu8(255));",
          "    assert!(set.contains(asu8(255)));",
          "    set.set_range(asu8(0), asu8(255));",
          "    assert!(set.contains(asu8(0)));",
          "    assert!(set.contains(asu8(1)));",
          "    assert!(set.contains(asu8(254)));",
          "    assert!(set.contains(asu8(255)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut set = crate::util::alphabet::ByteClassSet::empty();",
          "    let mut matcher = LookMatcher::new();",
          "    matcher.set_line_terminator(DebugByte(1));",
          "",
          "    // Triggering matches for Look::WordAscii with the specified boundaries",
          "    matcher.add_to_byteset(Look::WordAscii, &mut set);",
          "}"
        ],
        "oracle": [
          "    assert!(set.contains_range(0x00, 0x00));",
          "    assert!(set.contains_range(0x01, 0x01));",
          "    assert!(set.contains_range(0x02, 0x02));",
          "    assert!(set.contains_range(0x03, 0x03));",
          "    assert!(set.contains_range(0x04, 0x04));",
          "    assert!(set.contains_range(0x05, 0x05));",
          "    assert!(set.contains_range(0x06, 0x06));",
          "    assert!(set.contains_range(0x07, 0x07));",
          "    assert!(set.contains_range(0x08, 0x08));",
          "    assert!(set.contains_range(0x09, 0x09));",
          "    assert!(set.contains_range(0x0A, 0x0A));",
          "    assert!(set.contains_range(0x0B, 0x0B));",
          "    assert!(set.contains_range(0x0C, 0x0C));",
          "    assert!(set.contains_range(0x0D, 0x0D));",
          "    assert!(set.contains_range(0x0E, 0x0E));",
          "    assert!(set.contains_range(0x0F, 0x0F));",
          "    assert!(set.contains_range(0x10, 0x10));",
          "    assert!(set.contains_range(0x11, 0x11));",
          "    assert!(set.contains_range(0x12, 0x12));",
          "    assert!(set.contains_range(0x13, 0x13));",
          "    assert!(set.contains_range(0x14, 0x14));",
          "    assert!(set.contains_range(0x15, 0x15));",
          "    assert!(set.contains_range(0x16, 0x16));",
          "    assert!(set.contains_range(0x17, 0x17));",
          "    assert!(set.contains_range(0x18, 0x18));",
          "    assert!(set.contains_range(0x19, 0x19));",
          "    assert!(set.contains_range(0x1A, 0x1A));",
          "    assert!(set.contains_range(0x1B, 0x1B));",
          "    assert!(set.contains_range(0x1C, 0x1C));",
          "    assert!(set.contains_range(0x1D, 0x1D));",
          "    assert!(set.contains_range(0x1E, 0x1E));",
          "    assert!(set.contains_range(0x1F, 0x1F));",
          "    assert!(set.contains_range(0x20, 0x20));",
          "    assert!(set.contains_range(0x21, 0x21));",
          "    assert!(set.contains_range(0x22, 0x22));",
          "    assert!(set.contains_range(0x23, 0x23));",
          "    assert!(set.contains_range(0x24, 0x24));",
          "    assert!(set.contains_range(0x25, 0x25));",
          "    assert!(set.contains_range(0x26, 0x26));",
          "    assert!(set.contains_range(0x27, 0x27));",
          "    assert!(set.contains_range(0x28, 0x28));",
          "    assert!(set.contains_range(0x29, 0x29));",
          "    assert!(set.contains_range(0x2A, 0x2A));",
          "    assert!(set.contains_range(0x2B, 0x2B));",
          "    assert!(set.contains_range(0x2C, 0x2C));",
          "    assert!(set.contains_range(0x2D, 0x2D));",
          "    assert!(set.contains_range(0x2E, 0x2E));",
          "    assert!(set.contains_range(0x2F, 0x2F));",
          "    assert!(set.contains_range(0x30, 0x30));",
          "    assert!(set.contains_range(0x31, 0x31));",
          "    assert!(set.contains_range(0x32, 0x32));",
          "    assert!(set.contains_range(0x33, 0x33));",
          "    assert!(set.contains_range(0x34, 0x34));",
          "    assert!(set.contains_range(0x35, 0x35));",
          "    assert!(set.contains_range(0x36, 0x36));",
          "    assert!(set.contains_range(0x37, 0x37));",
          "    assert!(set.contains_range(0x38, 0x38));",
          "    assert!(set.contains_range(0x39, 0x39));",
          "    assert!(set.contains_range(0x3A, 0x3A));",
          "    assert!(set.contains_range(0x3B, 0x3B));",
          "    assert!(set.contains_range(0x3C, 0x3C));",
          "    assert!(set.contains_range(0x3D, 0x3D));",
          "    assert!(set.contains_range(0x3E, 0x3E));",
          "    assert!(set.contains_range(0x3F, 0x3F));",
          "    assert!(set.contains_range(0x40, 0x40));",
          "    assert!(set.contains_range(0x41, 0x41));",
          "    assert!(set.contains_range(0x42, 0x42));",
          "    assert!(set.contains_range(0x43, 0x43));",
          "    assert!(set.contains_range(0x44, 0x44));",
          "    assert!(set.contains_range(0x45, 0x45));",
          "    assert!(set.contains_range(0x46, 0x46));",
          "    assert!(set.contains_range(0x47, 0x47));",
          "    assert!(set.contains_range(0x48, 0x48));",
          "    assert!(set.contains_range(0x49, 0x49));",
          "    assert!(set.contains_range(0x4A, 0x4A));",
          "    assert!(set.contains_range(0x4B, 0x4B));",
          "    assert!(set.contains_range(0x4C, 0x4C));",
          "    assert!(set.contains_range(0x4D, 0x4D));",
          "    assert!(set.contains_range(0x4E, 0x4E));",
          "    assert!(set.contains_range(0x4F, 0x4F));",
          "    assert!(set.contains_range(0x50, 0x50));",
          "    assert!(set.contains_range(0x51, 0x51));",
          "    assert!(set.contains_range(0x52, 0x52));",
          "    assert!(set.contains_range(0x53, 0x53));",
          "    assert!(set.contains_range(0x54, 0x54));",
          "    assert!(set.contains_range(0x55, 0x55));",
          "    assert!(set.contains_range(0x56, 0x56));",
          "    assert!(set.contains_range(0x57, 0x57));",
          "    assert!(set.contains_range(0x58, 0x58));",
          "    assert!(set.contains_range(0x59, 0x59));",
          "    assert!(set.contains_range(0x5A, 0x5A));",
          "    assert!(set.contains_range(0x5B, 0x5B));",
          "    assert!(set.contains_range(0x5C, 0x5C));",
          "    assert!(set.contains_range(0x5D, 0x5D));",
          "    assert!(set.contains_range(0x5E, 0x5E));",
          "    assert!(set.contains_range(0x5F, 0x5F));",
          "    assert!(set.contains_range(0x60, 0x60));",
          "    assert!(set.contains_range(0x61, 0x61));",
          "    assert!(set.contains_range(0x62, 0x62));",
          "    assert!(set.contains_range(0x63, 0x63));",
          "    assert!(set.contains_range(0x64, 0x64));",
          "    assert!(set.contains_range(0x65, 0x65));",
          "    assert!(set.contains_range(0x66, 0x66));",
          "    assert!(set.contains_range(0x67, 0x67));",
          "    assert!(set.contains_range(0x68, 0x68));",
          "    assert!(set.contains_range(0x69, 0x69));",
          "    assert!(set.contains_range(0x6A, 0x6A));",
          "    assert!(set.contains_range(0x6B, 0x6B));",
          "    assert!(set.contains_range(0x6C, 0x6C));",
          "    assert!(set.contains_range(0x6D, 0x6D));",
          "    assert!(set.contains_range(0x6E, 0x6E));",
          "    assert!(set.contains_range(0x6F, 0x6F));",
          "    assert!(set.contains_range(0x70, 0x70));",
          "    assert!(set.contains_range(0x71, 0x71));",
          "    assert!(set.contains_range(0x72, 0x72));",
          "    assert!(set.contains_range(0x73, 0x73));",
          "    assert!(set.contains_range(0x74, 0x74));",
          "    assert!(set.contains_range(0x75, 0x75));",
          "    assert!(set.contains_range(0x76, 0x76));",
          "    assert!(set.contains_range(0x77, 0x77));",
          "    assert!(set.contains_range(0x78, 0x78));",
          "    assert!(set.contains_range(0x79, 0x79));",
          "    assert!(set.contains_range(0x7A, 0x7A));",
          "    assert!(set.contains_range(0x7B, 0x7B));",
          "    assert!(set.contains_range(0x7C, 0x7C));",
          "    assert!(set.contains_range(0x7D, 0x7D));",
          "    assert!(set.contains_range(0x7E, 0x7E));",
          "    assert!(set.contains_range(0x7F, 0x7F));",
          "    assert!(set.contains_range(0x80, 0x80));",
          "    assert!(set.contains_range(0x81, 0x81));",
          "    assert!(set.contains_range(0x82, 0x82));",
          "    assert!(set.contains_range(0x83, 0x83));",
          "    assert!(set.contains_range(0x84, 0x84));",
          "    assert!(set.contains_range(0x85, 0x85));",
          "    assert!(set.contains_range(0x86, 0x86));",
          "    assert!(set.contains_range(0x87, 0x87));",
          "    assert!(set.contains_range(0x88, 0x88));",
          "    assert!(set.contains_range(0x89, 0x89));",
          "    assert!(set.contains_range(0x8A, 0x8A));",
          "    assert!(set.contains_range(0x8B, 0x8B));",
          "    assert!(set.contains_range(0x8C, 0x8C));",
          "    assert!(set.contains_range(0x8D, 0x8D));",
          "    assert!(set.contains_range(0x8E, 0x8E));",
          "    assert!(set.contains_range(0x8F, 0x8F));",
          "    assert!(set.contains_range(0x90, 0x90));",
          "    assert!(set.contains_range(0x91, 0x91));",
          "    assert!(set.contains_range(0x92, 0x92));",
          "    assert!(set.contains_range(0x93, 0x93));",
          "    assert!(set.contains_range(0x94, 0x94));",
          "    assert!(set.contains_range(0x95, 0x95));",
          "    assert!(set.contains_range(0x96, 0x96));",
          "    assert!(set.contains_range(0x97, 0x97));",
          "    assert!(set.contains_range(0x98, 0x98));",
          "    assert!(set.contains_range(0x99, 0x99));",
          "    assert!(set.contains_range(0x9A, 0x9A));",
          "    assert!(set.contains_range(0x9B, 0x9B));",
          "    assert!(set.contains_range(0x9C, 0x9C));",
          "    assert!(set.contains_range(0x9D, 0x9D));",
          "    assert!(set.contains_range(0x9E, 0x9E));",
          "    assert!(set.contains_range(0x9F, 0x9F));",
          "    assert!(set.contains_range(0xA0, 0xA0));",
          "    assert!(set.contains_range(0xA1, 0xA1));",
          "    assert!(set.contains_range(0xA2, 0xA2));",
          "    assert!(set.contains_range(0xA3, 0xA3));",
          "    assert!(set.contains_range(0xA4, 0xA4));",
          "    assert!(set.contains_range(0xA5, 0xA5));",
          "    assert!(set.contains_range(0xA6, 0xA6));",
          "    assert!(set.contains_range(0xA7, 0xA7));",
          "    assert!(set.contains_range(0xA8, 0xA8));",
          "    assert!(set.contains_range(0xA9, 0xA9));",
          "    assert!(set.contains_range(0xAA, 0xAA));",
          "    assert!(set.contains_range(0xAB, 0xAB));",
          "    assert!(set.contains_range(0xAC, 0xAC));",
          "    assert!(set.contains_range(0xAD, 0xAD));",
          "    assert!(set.contains_range(0xAE, 0xAE));",
          "    assert!(set.contains_range(0xAF, 0xAF));",
          "    assert!(set.contains_range(0xB0, 0xB0));",
          "    assert!(set.contains_range(0xB1, 0xB1));",
          "    assert!(set.contains_range(0xB2, 0xB2));",
          "    assert!(set.contains_range(0xB3, 0xB3));",
          "    assert!(set.contains_range(0xB4, 0xB4));",
          "    assert!(set.contains_range(0xB5, 0xB5));",
          "    assert!(set.contains_range(0xB6, 0xB6));",
          "    assert!(set.contains_range(0xB7, 0xB7));",
          "    assert!(set.contains_range(0xB8, 0xB8));",
          "    assert!(set.contains_range(0xB9, 0xB9));",
          "    assert!(set.contains_range(0xBA, 0xBA));",
          "    assert!(set.contains_range(0xBB, 0xBB));",
          "    assert!(set.contains_range(0xBC, 0xBC));",
          "    assert!(set.contains_range(0xBD, 0xBD));",
          "    assert!(set.contains_range(0xBE, 0xBE));",
          "    assert!(set.contains_range(0xBF, 0xBF));",
          "    assert!(set.contains_range(0xC0, 0xC0));",
          "    assert!(set.contains_range(0xC1, 0xC1));",
          "    assert!(set.contains_range(0xC2, 0xC2));",
          "    assert!(set.contains_range(0xC3, 0xC3));",
          "    assert!(set.contains_range(0xC4, 0xC4));",
          "    assert!(set.contains_range(0xC5, 0xC5));",
          "    assert!(set.contains_range(0xC6, 0xC6));",
          "    assert!(set.contains_range(0xC7, 0xC7));",
          "    assert!(set.contains_range(0xC8, 0xC8));",
          "    assert!(set.contains_range(0xC9, 0xC9));",
          "    assert!(set.contains_range(0xCA, 0xCA));",
          "    assert!(set.contains_range(0xCB, 0xCB));",
          "    assert!(set.contains_range(0xCC, 0xCC));",
          "    assert!(set.contains_range(0xCD, 0xCD));",
          "    assert!(set.contains_range(0xCE, 0xCE));",
          "    assert!(set.contains_range(0xCF, 0xCF));",
          "    assert!(set.contains_range(0xD0, 0xD0));",
          "    assert!(set.contains_range(0xD1, 0xD1));",
          "    assert!(set.contains_range(0xD2, 0xD2));",
          "    assert!(set.contains_range(0xD3, 0xD3));",
          "    assert!(set.contains_range(0xD4, 0xD4));",
          "    assert!(set.contains_range(0xD5, 0xD5));",
          "    assert!(set.contains_range(0xD6, 0xD6));",
          "    assert!(set.contains_range(0xD7, 0xD7));",
          "    assert!(set.contains_range(0xD8, 0xD8));",
          "    assert!(set.contains_range(0xD9, 0xD9));",
          "    assert!(set.contains_range(0xDA, 0xDA));",
          "    assert!(set.contains_range(0xDB, 0xDB));",
          "    assert!(set.contains_range(0xDC, 0xDC));",
          "    assert!(set.contains_range(0xDD, 0xDD));",
          "    assert!(set.contains_range(0xDE, 0xDE));",
          "    assert!(set.contains_range(0xDF, 0xDF));",
          "    assert!(set.contains_range(0xE0, 0xE0));",
          "    assert!(set.contains_range(0xE1, 0xE1));",
          "    assert!(set.contains_range(0xE2, 0xE2));",
          "    assert!(set.contains_range(0xE3, 0xE3));",
          "    assert!(set.contains_range(0xE4, 0xE4));",
          "    assert!(set.contains_range(0xE5, 0xE5));",
          "    assert!(set.contains_range(0xE6, 0xE6));",
          "    assert!(set.contains_range(0xE7, 0xE7));",
          "    assert!(set.contains_range(0xE8, 0xE8));",
          "    assert!(set.contains_range(0xE9, 0xE9));",
          "    assert!(set.contains_range(0xEA, 0xEA));",
          "    assert!(set.contains_range(0xEB, 0xEB));",
          "    assert!(set.contains_range(0xEC, 0xEC));",
          "    assert!(set.contains_range(0xED, 0xED));",
          "    assert!(set.contains_range(0xEE, 0xEE));",
          "    assert!(set.contains_range(0xEF, 0xEF));",
          "    assert!(set.contains_range(0xF0, 0xF0));",
          "    assert!(set.contains_range(0xF1, 0xF1));",
          "    assert!(set.contains_range(0xF2, 0xF2));",
          "    assert!(set.contains_range(0xF3, 0xF3));",
          "    assert!(set.contains_range(0xF4, 0xF4));",
          "    assert!(set.contains_range(0xF5, 0xF5));",
          "    assert!(set.contains_range(0xF6, 0xF6));",
          "    assert!(set.contains_range(0xF7, 0xF7));",
          "    assert!(set.contains_range(0xF8, 0xF8));",
          "    assert!(set.contains_range(0xF9, 0xF9));",
          "    assert!(set.contains_range(0xFA, 0xFA));",
          "    assert!(set.contains_range(0xFB, 0xFB));",
          "    assert!(set.contains_range(0xFC, 0xFC));",
          "    assert!(set.contains_range(0xFD, 0xFD));",
          "    assert!(set.contains_range(0xFE, 0xFE));",
          "    assert!(set.contains_range(0xFF, 0xFF));"
        ],
        "code": [
          "{",
          "    let mut set = crate::util::alphabet::ByteClassSet::empty();",
          "    let mut matcher = LookMatcher::new();",
          "    matcher.set_line_terminator(DebugByte(1));",
          "",
          "    // Triggering matches for Look::WordAscii with the specified boundaries",
          "    matcher.add_to_byteset(Look::WordAscii, &mut set);",
          "    assert!(set.contains_range(0x00, 0x00));",
          "    assert!(set.contains_range(0x01, 0x01));",
          "    assert!(set.contains_range(0x02, 0x02));",
          "    assert!(set.contains_range(0x03, 0x03));",
          "    assert!(set.contains_range(0x04, 0x04));",
          "    assert!(set.contains_range(0x05, 0x05));",
          "    assert!(set.contains_range(0x06, 0x06));",
          "    assert!(set.contains_range(0x07, 0x07));",
          "    assert!(set.contains_range(0x08, 0x08));",
          "    assert!(set.contains_range(0x09, 0x09));",
          "    assert!(set.contains_range(0x0A, 0x0A));",
          "    assert!(set.contains_range(0x0B, 0x0B));",
          "    assert!(set.contains_range(0x0C, 0x0C));",
          "    assert!(set.contains_range(0x0D, 0x0D));",
          "    assert!(set.contains_range(0x0E, 0x0E));",
          "    assert!(set.contains_range(0x0F, 0x0F));",
          "    assert!(set.contains_range(0x10, 0x10));",
          "    assert!(set.contains_range(0x11, 0x11));",
          "    assert!(set.contains_range(0x12, 0x12));",
          "    assert!(set.contains_range(0x13, 0x13));",
          "    assert!(set.contains_range(0x14, 0x14));",
          "    assert!(set.contains_range(0x15, 0x15));",
          "    assert!(set.contains_range(0x16, 0x16));",
          "    assert!(set.contains_range(0x17, 0x17));",
          "    assert!(set.contains_range(0x18, 0x18));",
          "    assert!(set.contains_range(0x19, 0x19));",
          "    assert!(set.contains_range(0x1A, 0x1A));",
          "    assert!(set.contains_range(0x1B, 0x1B));",
          "    assert!(set.contains_range(0x1C, 0x1C));",
          "    assert!(set.contains_range(0x1D, 0x1D));",
          "    assert!(set.contains_range(0x1E, 0x1E));",
          "    assert!(set.contains_range(0x1F, 0x1F));",
          "    assert!(set.contains_range(0x20, 0x20));",
          "    assert!(set.contains_range(0x21, 0x21));",
          "    assert!(set.contains_range(0x22, 0x22));",
          "    assert!(set.contains_range(0x23, 0x23));",
          "    assert!(set.contains_range(0x24, 0x24));",
          "    assert!(set.contains_range(0x25, 0x25));",
          "    assert!(set.contains_range(0x26, 0x26));",
          "    assert!(set.contains_range(0x27, 0x27));",
          "    assert!(set.contains_range(0x28, 0x28));",
          "    assert!(set.contains_range(0x29, 0x29));",
          "    assert!(set.contains_range(0x2A, 0x2A));",
          "    assert!(set.contains_range(0x2B, 0x2B));",
          "    assert!(set.contains_range(0x2C, 0x2C));",
          "    assert!(set.contains_range(0x2D, 0x2D));",
          "    assert!(set.contains_range(0x2E, 0x2E));",
          "    assert!(set.contains_range(0x2F, 0x2F));",
          "    assert!(set.contains_range(0x30, 0x30));",
          "    assert!(set.contains_range(0x31, 0x31));",
          "    assert!(set.contains_range(0x32, 0x32));",
          "    assert!(set.contains_range(0x33, 0x33));",
          "    assert!(set.contains_range(0x34, 0x34));",
          "    assert!(set.contains_range(0x35, 0x35));",
          "    assert!(set.contains_range(0x36, 0x36));",
          "    assert!(set.contains_range(0x37, 0x37));",
          "    assert!(set.contains_range(0x38, 0x38));",
          "    assert!(set.contains_range(0x39, 0x39));",
          "    assert!(set.contains_range(0x3A, 0x3A));",
          "    assert!(set.contains_range(0x3B, 0x3B));",
          "    assert!(set.contains_range(0x3C, 0x3C));",
          "    assert!(set.contains_range(0x3D, 0x3D));",
          "    assert!(set.contains_range(0x3E, 0x3E));",
          "    assert!(set.contains_range(0x3F, 0x3F));",
          "    assert!(set.contains_range(0x40, 0x40));",
          "    assert!(set.contains_range(0x41, 0x41));",
          "    assert!(set.contains_range(0x42, 0x42));",
          "    assert!(set.contains_range(0x43, 0x43));",
          "    assert!(set.contains_range(0x44, 0x44));",
          "    assert!(set.contains_range(0x45, 0x45));",
          "    assert!(set.contains_range(0x46, 0x46));",
          "    assert!(set.contains_range(0x47, 0x47));",
          "    assert!(set.contains_range(0x48, 0x48));",
          "    assert!(set.contains_range(0x49, 0x49));",
          "    assert!(set.contains_range(0x4A, 0x4A));",
          "    assert!(set.contains_range(0x4B, 0x4B));",
          "    assert!(set.contains_range(0x4C, 0x4C));",
          "    assert!(set.contains_range(0x4D, 0x4D));",
          "    assert!(set.contains_range(0x4E, 0x4E));",
          "    assert!(set.contains_range(0x4F, 0x4F));",
          "    assert!(set.contains_range(0x50, 0x50));",
          "    assert!(set.contains_range(0x51, 0x51));",
          "    assert!(set.contains_range(0x52, 0x52));",
          "    assert!(set.contains_range(0x53, 0x53));",
          "    assert!(set.contains_range(0x54, 0x54));",
          "    assert!(set.contains_range(0x55, 0x55));",
          "    assert!(set.contains_range(0x56, 0x56));",
          "    assert!(set.contains_range(0x57, 0x57));",
          "    assert!(set.contains_range(0x58, 0x58));",
          "    assert!(set.contains_range(0x59, 0x59));",
          "    assert!(set.contains_range(0x5A, 0x5A));",
          "    assert!(set.contains_range(0x5B, 0x5B));",
          "    assert!(set.contains_range(0x5C, 0x5C));",
          "    assert!(set.contains_range(0x5D, 0x5D));",
          "    assert!(set.contains_range(0x5E, 0x5E));",
          "    assert!(set.contains_range(0x5F, 0x5F));",
          "    assert!(set.contains_range(0x60, 0x60));",
          "    assert!(set.contains_range(0x61, 0x61));",
          "    assert!(set.contains_range(0x62, 0x62));",
          "    assert!(set.contains_range(0x63, 0x63));",
          "    assert!(set.contains_range(0x64, 0x64));",
          "    assert!(set.contains_range(0x65, 0x65));",
          "    assert!(set.contains_range(0x66, 0x66));",
          "    assert!(set.contains_range(0x67, 0x67));",
          "    assert!(set.contains_range(0x68, 0x68));",
          "    assert!(set.contains_range(0x69, 0x69));",
          "    assert!(set.contains_range(0x6A, 0x6A));",
          "    assert!(set.contains_range(0x6B, 0x6B));",
          "    assert!(set.contains_range(0x6C, 0x6C));",
          "    assert!(set.contains_range(0x6D, 0x6D));",
          "    assert!(set.contains_range(0x6E, 0x6E));",
          "    assert!(set.contains_range(0x6F, 0x6F));",
          "    assert!(set.contains_range(0x70, 0x70));",
          "    assert!(set.contains_range(0x71, 0x71));",
          "    assert!(set.contains_range(0x72, 0x72));",
          "    assert!(set.contains_range(0x73, 0x73));",
          "    assert!(set.contains_range(0x74, 0x74));",
          "    assert!(set.contains_range(0x75, 0x75));",
          "    assert!(set.contains_range(0x76, 0x76));",
          "    assert!(set.contains_range(0x77, 0x77));",
          "    assert!(set.contains_range(0x78, 0x78));",
          "    assert!(set.contains_range(0x79, 0x79));",
          "    assert!(set.contains_range(0x7A, 0x7A));",
          "    assert!(set.contains_range(0x7B, 0x7B));",
          "    assert!(set.contains_range(0x7C, 0x7C));",
          "    assert!(set.contains_range(0x7D, 0x7D));",
          "    assert!(set.contains_range(0x7E, 0x7E));",
          "    assert!(set.contains_range(0x7F, 0x7F));",
          "    assert!(set.contains_range(0x80, 0x80));",
          "    assert!(set.contains_range(0x81, 0x81));",
          "    assert!(set.contains_range(0x82, 0x82));",
          "    assert!(set.contains_range(0x83, 0x83));",
          "    assert!(set.contains_range(0x84, 0x84));",
          "    assert!(set.contains_range(0x85, 0x85));",
          "    assert!(set.contains_range(0x86, 0x86));",
          "    assert!(set.contains_range(0x87, 0x87));",
          "    assert!(set.contains_range(0x88, 0x88));",
          "    assert!(set.contains_range(0x89, 0x89));",
          "    assert!(set.contains_range(0x8A, 0x8A));",
          "    assert!(set.contains_range(0x8B, 0x8B));",
          "    assert!(set.contains_range(0x8C, 0x8C));",
          "    assert!(set.contains_range(0x8D, 0x8D));",
          "    assert!(set.contains_range(0x8E, 0x8E));",
          "    assert!(set.contains_range(0x8F, 0x8F));",
          "    assert!(set.contains_range(0x90, 0x90));",
          "    assert!(set.contains_range(0x91, 0x91));",
          "    assert!(set.contains_range(0x92, 0x92));",
          "    assert!(set.contains_range(0x93, 0x93));",
          "    assert!(set.contains_range(0x94, 0x94));",
          "    assert!(set.contains_range(0x95, 0x95));",
          "    assert!(set.contains_range(0x96, 0x96));",
          "    assert!(set.contains_range(0x97, 0x97));",
          "    assert!(set.contains_range(0x98, 0x98));",
          "    assert!(set.contains_range(0x99, 0x99));",
          "    assert!(set.contains_range(0x9A, 0x9A));",
          "    assert!(set.contains_range(0x9B, 0x9B));",
          "    assert!(set.contains_range(0x9C, 0x9C));",
          "    assert!(set.contains_range(0x9D, 0x9D));",
          "    assert!(set.contains_range(0x9E, 0x9E));",
          "    assert!(set.contains_range(0x9F, 0x9F));",
          "    assert!(set.contains_range(0xA0, 0xA0));",
          "    assert!(set.contains_range(0xA1, 0xA1));",
          "    assert!(set.contains_range(0xA2, 0xA2));",
          "    assert!(set.contains_range(0xA3, 0xA3));",
          "    assert!(set.contains_range(0xA4, 0xA4));",
          "    assert!(set.contains_range(0xA5, 0xA5));",
          "    assert!(set.contains_range(0xA6, 0xA6));",
          "    assert!(set.contains_range(0xA7, 0xA7));",
          "    assert!(set.contains_range(0xA8, 0xA8));",
          "    assert!(set.contains_range(0xA9, 0xA9));",
          "    assert!(set.contains_range(0xAA, 0xAA));",
          "    assert!(set.contains_range(0xAB, 0xAB));",
          "    assert!(set.contains_range(0xAC, 0xAC));",
          "    assert!(set.contains_range(0xAD, 0xAD));",
          "    assert!(set.contains_range(0xAE, 0xAE));",
          "    assert!(set.contains_range(0xAF, 0xAF));",
          "    assert!(set.contains_range(0xB0, 0xB0));",
          "    assert!(set.contains_range(0xB1, 0xB1));",
          "    assert!(set.contains_range(0xB2, 0xB2));",
          "    assert!(set.contains_range(0xB3, 0xB3));",
          "    assert!(set.contains_range(0xB4, 0xB4));",
          "    assert!(set.contains_range(0xB5, 0xB5));",
          "    assert!(set.contains_range(0xB6, 0xB6));",
          "    assert!(set.contains_range(0xB7, 0xB7));",
          "    assert!(set.contains_range(0xB8, 0xB8));",
          "    assert!(set.contains_range(0xB9, 0xB9));",
          "    assert!(set.contains_range(0xBA, 0xBA));",
          "    assert!(set.contains_range(0xBB, 0xBB));",
          "    assert!(set.contains_range(0xBC, 0xBC));",
          "    assert!(set.contains_range(0xBD, 0xBD));",
          "    assert!(set.contains_range(0xBE, 0xBE));",
          "    assert!(set.contains_range(0xBF, 0xBF));",
          "    assert!(set.contains_range(0xC0, 0xC0));",
          "    assert!(set.contains_range(0xC1, 0xC1));",
          "    assert!(set.contains_range(0xC2, 0xC2));",
          "    assert!(set.contains_range(0xC3, 0xC3));",
          "    assert!(set.contains_range(0xC4, 0xC4));",
          "    assert!(set.contains_range(0xC5, 0xC5));",
          "    assert!(set.contains_range(0xC6, 0xC6));",
          "    assert!(set.contains_range(0xC7, 0xC7));",
          "    assert!(set.contains_range(0xC8, 0xC8));",
          "    assert!(set.contains_range(0xC9, 0xC9));",
          "    assert!(set.contains_range(0xCA, 0xCA));",
          "    assert!(set.contains_range(0xCB, 0xCB));",
          "    assert!(set.contains_range(0xCC, 0xCC));",
          "    assert!(set.contains_range(0xCD, 0xCD));",
          "    assert!(set.contains_range(0xCE, 0xCE));",
          "    assert!(set.contains_range(0xCF, 0xCF));",
          "    assert!(set.contains_range(0xD0, 0xD0));",
          "    assert!(set.contains_range(0xD1, 0xD1));",
          "    assert!(set.contains_range(0xD2, 0xD2));",
          "    assert!(set.contains_range(0xD3, 0xD3));",
          "    assert!(set.contains_range(0xD4, 0xD4));",
          "    assert!(set.contains_range(0xD5, 0xD5));",
          "    assert!(set.contains_range(0xD6, 0xD6));",
          "    assert!(set.contains_range(0xD7, 0xD7));",
          "    assert!(set.contains_range(0xD8, 0xD8));",
          "    assert!(set.contains_range(0xD9, 0xD9));",
          "    assert!(set.contains_range(0xDA, 0xDA));",
          "    assert!(set.contains_range(0xDB, 0xDB));",
          "    assert!(set.contains_range(0xDC, 0xDC));",
          "    assert!(set.contains_range(0xDD, 0xDD));",
          "    assert!(set.contains_range(0xDE, 0xDE));",
          "    assert!(set.contains_range(0xDF, 0xDF));",
          "    assert!(set.contains_range(0xE0, 0xE0));",
          "    assert!(set.contains_range(0xE1, 0xE1));",
          "    assert!(set.contains_range(0xE2, 0xE2));",
          "    assert!(set.contains_range(0xE3, 0xE3));",
          "    assert!(set.contains_range(0xE4, 0xE4));",
          "    assert!(set.contains_range(0xE5, 0xE5));",
          "    assert!(set.contains_range(0xE6, 0xE6));",
          "    assert!(set.contains_range(0xE7, 0xE7));",
          "    assert!(set.contains_range(0xE8, 0xE8));",
          "    assert!(set.contains_range(0xE9, 0xE9));",
          "    assert!(set.contains_range(0xEA, 0xEA));",
          "    assert!(set.contains_range(0xEB, 0xEB));",
          "    assert!(set.contains_range(0xEC, 0xEC));",
          "    assert!(set.contains_range(0xED, 0xED));",
          "    assert!(set.contains_range(0xEE, 0xEE));",
          "    assert!(set.contains_range(0xEF, 0xEF));",
          "    assert!(set.contains_range(0xF0, 0xF0));",
          "    assert!(set.contains_range(0xF1, 0xF1));",
          "    assert!(set.contains_range(0xF2, 0xF2));",
          "    assert!(set.contains_range(0xF3, 0xF3));",
          "    assert!(set.contains_range(0xF4, 0xF4));",
          "    assert!(set.contains_range(0xF5, 0xF5));",
          "    assert!(set.contains_range(0xF6, 0xF6));",
          "    assert!(set.contains_range(0xF7, 0xF7));",
          "    assert!(set.contains_range(0xF8, 0xF8));",
          "    assert!(set.contains_range(0xF9, 0xF9));",
          "    assert!(set.contains_range(0xFA, 0xFA));",
          "    assert!(set.contains_range(0xFB, 0xFB));",
          "    assert!(set.contains_range(0xFC, 0xFC));",
          "    assert!(set.contains_range(0xFD, 0xFD));",
          "    assert!(set.contains_range(0xFE, 0xFE));",
          "    assert!(set.contains_range(0xFF, 0xFF));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]