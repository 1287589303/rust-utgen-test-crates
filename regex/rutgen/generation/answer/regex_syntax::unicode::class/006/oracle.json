[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let query = ClassQuery::Binary(\"Decimal_Number\");",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let query = ClassQuery::Binary(\"Decimal_Number\");",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for Binary query 'Decimal_Number'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Script_Extensions\",",
          "    property_value: \"Latin\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Script_Extensions' and value 'Latin'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Grapheme_Cluster_Break\",",
          "    property_value: \"Control\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Grapheme_Cluster_Break' and value 'Control'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Word_Break\",",
          "    property_value: \"CR\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Word_Break' and value 'CR'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Sentence_Break\",",
          "    property_value: \"Sep\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Sentence_Break' and value 'Sep'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Age\",",
          "    property_value: \"V1_1\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_err(), \"Expected Err result for ByValue query with property 'Age' and value 'V1_1'\");"
        ],
        "code": [
          "{",
          "    let query = ClassQuery::Binary(\"Decimal_Number\");",
          "    let _ = class(query);",
          "    let query = ClassQuery::Binary(\"Decimal_Number\");",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for Binary query 'Decimal_Number'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Script_Extensions\",",
          "    property_value: \"Latin\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Script_Extensions' and value 'Latin'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Grapheme_Cluster_Break\",",
          "    property_value: \"Control\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Grapheme_Cluster_Break' and value 'Control'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Word_Break\",",
          "    property_value: \"CR\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Word_Break' and value 'CR'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Sentence_Break\",",
          "    property_value: \"Sep\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_ok(), \"Expected Ok result for ByValue query with property 'Sentence_Break' and value 'Sep'\");",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Age\",",
          "    property_value: \"V1_1\",",
          "    };",
          "    let result = class(query);",
          "    assert!(result.is_err(), \"Expected Err result for ByValue query with property 'Age' and value 'V1_1'\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let query = ClassQuery::Binary(\"White_Space\");",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let query = ClassQuery::Binary(\"White_Space\");",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Latn\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"Control\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"CR\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"CR\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value: \"V1_1\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), false);"
        ],
        "code": [
          "{",
          "    let query = ClassQuery::Binary(\"White_Space\");",
          "    let _ = class(query);",
          "    let query = ClassQuery::Binary(\"White_Space\");",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Latn\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"Control\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"CR\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"CR\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), true);",
          "    ",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value: \"V1_1\" };",
          "    let result = class(query);",
          "    assert_eq!(result.is_ok(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"Latin\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script_Extensions\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(class(ClassQuery::Binary('A')).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Latin\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"Control\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"CR\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"CR\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Age\", property_value: \"V1_1\" }).is_err(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Cyrillic\" }).is_ok(), true);"
        ],
        "code": [
          "{",
          "    let property_value = \"Latin\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script_Extensions\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    assert_eq!(class(ClassQuery::Binary('A')).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Latin\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"Control\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"CR\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"CR\" }).is_ok(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Age\", property_value: \"V1_1\" }).is_err(), true);",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"Cyrillic\" }).is_ok(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"InvalidScript\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script_Extensions\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let property_value = \"InvalidScript\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert_eq!(result.is_err(), true);",
          "    assert_eq!(result.unwrap_err(), Error::PropertyValueNotFound);"
        ],
        "code": [
          "{",
          "    let property_value = \"InvalidScript\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script_Extensions\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    let property_value = \"InvalidScript\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert_eq!(result.is_err(), true);",
          "    assert_eq!(result.unwrap_err(), Error::PropertyValueNotFound);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Grapheme_Cluster_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Grapheme_Cluster_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Word_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Script_Extensions\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Sentence_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"V3_1\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Age\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_err(), true);"
        ],
        "code": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Grapheme_Cluster_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Grapheme_Cluster_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Word_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Script_Extensions\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Sentence_Break\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_ok(), true);",
          "    ",
          "    let property_value = \"V3_1\";",
          "    let query = ClassQuery::ByValue {",
          "    property_name: \"Age\",",
          "    property_value,",
          "    };",
          "    assert_eq!(class(query).is_err(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Word_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), Error::PropertyNotFound);"
        ],
        "code": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Word_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    let class_unicodes = result.unwrap();",
          "    assert_eq!(class_unicodes, expected_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), Error::PropertyNotFound);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Sentence_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_sentence_break_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_script_extensions_class);",
          "    ",
          "    let property_value = \"V1_1\";",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), Error::PropertyNotFound);",
          "    ",
          "    let property_value = \"V2_0\";",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_grapheme_cluster_break_class);",
          "    ",
          "    let property_value = \"V2_0\";",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_word_break_class);",
          "    ",
          "    let property_value = \"Latin\";",
          "    let query = ClassQuery::Binary(property_value);",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_binary_class);",
          "    ",
          "    let property_value = \"Latin_Extended\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_script_extensions_class);"
        ],
        "code": [
          "{",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Sentence_Break\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_sentence_break_class);",
          "    ",
          "    let property_value = \"Any\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_script_extensions_class);",
          "    ",
          "    let property_value = \"V1_1\";",
          "    let query = ClassQuery::ByValue { property_name: \"Age\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.unwrap_err(), Error::PropertyNotFound);",
          "    ",
          "    let property_value = \"V2_0\";",
          "    let query = ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_grapheme_cluster_break_class);",
          "    ",
          "    let property_value = \"V2_0\";",
          "    let query = ClassQuery::ByValue { property_name: \"Word_Break\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_word_break_class);",
          "    ",
          "    let property_value = \"Latin\";",
          "    let query = ClassQuery::Binary(property_value);",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_binary_class);",
          "    ",
          "    let property_value = \"Latin_Extended\";",
          "    let query = ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value };",
          "    let result = class(query);",
          "    assert!(result.is_ok());",
          "    assert_eq!(result.unwrap(), expected_script_extensions_class);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_value = \"AnyOtherValue\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Age\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(class(ClassQuery::Binary(\"Decimal_Number\")), Ok(<ExpectedValue>));",
          "    assert_eq!(class(ClassQuery::Binary(\"White_Space\")), Ok(<ExpectedValue>));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Age\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyNotFound));"
        ],
        "code": [
          "{",
          "    let property_value = \"AnyOtherValue\";",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Age\",",
          "        property_value,",
          "    };",
          "    let _ = class(query);",
          "    assert_eq!(class(ClassQuery::Binary(\"Decimal_Number\")), Ok(<ExpectedValue>));",
          "    assert_eq!(class(ClassQuery::Binary(\"White_Space\")), Ok(<ExpectedValue>));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Grapheme_Cluster_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Word_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Script_Extensions\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Sentence_Break\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyValueNotFound));",
          "    assert_eq!(class(ClassQuery::ByValue { property_name: \"Age\", property_value: \"AnyOtherValue\" }), Err(Error::PropertyNotFound));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]