[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().case_insensitive(true);",
          "}"
        ],
        "oracle": [
          "    let config = Config::new().case_insensitive(true);",
          "    assert!(config.get_case_insensitive());",
          "    let config_false = Config::new().case_insensitive(false);",
          "    assert!(!config_false.get_case_insensitive());",
          "    let config_default = Config::new();",
          "    assert!(!config_default.get_case_insensitive());"
        ],
        "code": [
          "{",
          "    let config = Config::new().case_insensitive(true);",
          "    let config = Config::new().case_insensitive(true);",
          "    assert!(config.get_case_insensitive());",
          "    let config_false = Config::new().case_insensitive(false);",
          "    assert!(!config_false.get_case_insensitive());",
          "    let config_default = Config::new();",
          "    assert!(!config_default.get_case_insensitive());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new().case_insensitive(false);",
          "}"
        ],
        "oracle": [
          "    let config = Config::new().case_insensitive(false);",
          "    assert_eq!(config.get_case_insensitive(), false);",
          "    let config = Config::new().case_insensitive(true);",
          "    assert_eq!(config.get_case_insensitive(), true);",
          "    let config = Config::new().case_insensitive(false).case_insensitive(true);",
          "    assert_eq!(config.get_case_insensitive(), true);",
          "    let config = Config::new().case_insensitive(true).case_insensitive(false);",
          "    assert_eq!(config.get_case_insensitive(), false);"
        ],
        "code": [
          "{",
          "    let config = Config::new().case_insensitive(false);",
          "    let config = Config::new().case_insensitive(false);",
          "    assert_eq!(config.get_case_insensitive(), false);",
          "    let config = Config::new().case_insensitive(true);",
          "    assert_eq!(config.get_case_insensitive(), true);",
          "    let config = Config::new().case_insensitive(false).case_insensitive(true);",
          "    assert_eq!(config.get_case_insensitive(), true);",
          "    let config = Config::new().case_insensitive(true).case_insensitive(false);",
          "    assert_eq!(config.get_case_insensitive(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]