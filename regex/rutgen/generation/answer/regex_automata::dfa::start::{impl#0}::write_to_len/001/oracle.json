[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let start_kind = StartKind::Both;",
          "    let _result = start_kind.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(start_kind.write_to_len(), size_of::<u32>());"
        ],
        "code": [
          "{",
          "    let start_kind = StartKind::Both;",
          "    let _result = start_kind.write_to_len();",
          "    assert_eq!(start_kind.write_to_len(), size_of::<u32>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let start_kind = StartKind::Unanchored;",
          "    let _result = start_kind.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(start_kind.write_to_len(), size_of::<u32>());"
        ],
        "code": [
          "{",
          "    let start_kind = StartKind::Unanchored;",
          "    let _result = start_kind.write_to_len();",
          "    assert_eq!(start_kind.write_to_len(), size_of::<u32>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let start_kind = StartKind::Anchored;",
          "    let _result = start_kind.write_to_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(start_kind.write_to_len(), 4);"
        ],
        "code": [
          "{",
          "    let start_kind = StartKind::Anchored;",
          "    let _result = start_kind.write_to_len();",
          "    assert_eq!(start_kind.write_to_len(), 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]