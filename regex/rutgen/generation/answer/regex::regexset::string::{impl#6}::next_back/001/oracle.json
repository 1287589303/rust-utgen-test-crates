[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_set = PatternSet::new_empty();",
          "    let range = 0..0; // starting at non-positive integer and ending at zero",
          "    let mut iter = SetMatchesIntoIter {",
          "        patset: pattern_set,",
          "        it: range,",
          "    };",
          "    let result = iter.next_back();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let pattern_set = PatternSet::new_empty();",
          "    let range = 0..0; // starting at non-positive integer and ending at zero",
          "    let mut iter = SetMatchesIntoIter {",
          "        patset: pattern_set,",
          "        it: range,",
          "    };",
          "    let result = iter.next_back();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let pattern_set = PatternSet::new_empty();",
          "    let range = -1..0; // starting at a non-positive integer ",
          "    let mut iter = SetMatchesIntoIter {",
          "        patset: pattern_set,",
          "        it: range,",
          "    };",
          "    let result = iter.next_back();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let pattern_set = PatternSet::new_empty();",
          "    let range = -1..0; // starting at a non-positive integer ",
          "    let mut iter = SetMatchesIntoIter {",
          "        patset: pattern_set,",
          "        it: range,",
          "    };",
          "    let result = iter.next_back();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]