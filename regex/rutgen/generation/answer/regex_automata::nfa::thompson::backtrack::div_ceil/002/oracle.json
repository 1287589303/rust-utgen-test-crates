[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 10;",
          "    let rhs = 1;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(10, 1), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 10;",
          "    let rhs = 1;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(10, 1), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 20;",
          "    let rhs = 2;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(20, 2), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 20;",
          "    let rhs = 2;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(20, 2), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 30;",
          "    let rhs = 3;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(30, 3), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 30;",
          "    let rhs = 3;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(30, 3), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 40;",
          "    let rhs = 4;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(40, 4), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 40;",
          "    let rhs = 4;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(40, 4), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 50;",
          "    let rhs = 5;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(50, 5), 10);",
          "    assert_eq!(div_ceil(100, 20), 5);",
          "    assert_eq!(div_ceil(0, 1), 0);",
          "    assert_eq!(div_ceil(30, 10), 3);",
          "    assert_eq!(div_ceil(45, 15), 3);"
        ],
        "code": [
          "{",
          "    let lhs = 50;",
          "    let rhs = 5;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(50, 5), 10);",
          "    assert_eq!(div_ceil(100, 20), 5);",
          "    assert_eq!(div_ceil(0, 1), 0);",
          "    assert_eq!(div_ceil(30, 10), 3);",
          "    assert_eq!(div_ceil(45, 15), 3);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 60;",
          "    let rhs = 6;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(60, 6), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 60;",
          "    let rhs = 6;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(60, 6), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 70;",
          "    let rhs = 7;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(70, 7), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 70;",
          "    let rhs = 7;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(70, 7), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 80;",
          "    let rhs = 8;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(80, 8), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 80;",
          "    let rhs = 8;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(80, 8), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 90;",
          "    let rhs = 9;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(90, 9), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 90;",
          "    let rhs = 9;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(90, 9), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 100;",
          "    let rhs = 10;",
          "    div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(div_ceil(100, 10), 10);"
        ],
        "code": [
          "{",
          "    let lhs = 100;",
          "    let rhs = 10;",
          "    div_ceil(lhs, rhs);",
          "    assert_eq!(div_ceil(100, 10), 10);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]