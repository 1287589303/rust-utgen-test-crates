[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 10;",
          "    let rhs = 3; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let lhs = 10;",
          "    let rhs = 3; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 20;",
          "    let rhs = 6; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let lhs = 20;",
          "    let rhs = 6; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 99;",
          "    let rhs = 8; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 13);"
        ],
        "code": [
          "{",
          "    let lhs = 99;",
          "    let rhs = 8; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "    assert_eq!(result, 13);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 33;",
          "    let rhs = 10; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 4);"
        ],
        "code": [
          "{",
          "    let lhs = 33;",
          "    let rhs = 10; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "    assert_eq!(result, 4);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let lhs = 50;",
          "    let rhs = 7; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 8);"
        ],
        "code": [
          "{",
          "    let lhs = 50;",
          "    let rhs = 7; // lhs % rhs != 0",
          "    let result = div_ceil(lhs, rhs);",
          "    assert_eq!(result, 8);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]