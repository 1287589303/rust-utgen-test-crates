self.state_len() > 2, state exists in self.states(), state.accelerate(self.byte_classes()) returns Some(accel), state is not a match state, state is a start state, accels is not empty, cmatch > 0, self.special.matches() is true, cur_id == self.special.min_match, accels.remove(&cur_id) is Some(accel), cur_id does not equal next_id, cnormal > 0, cur_id == next_norm_id, accels.remove(&cur_id) is Some(accel), accels.remove(&next_norm_id) is Some(accel2), accels.remove(&next_start_id) is Some(accel2), accels contains key cur_id, cstart > 0 is false.
