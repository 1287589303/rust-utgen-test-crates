[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 0, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "}"
        ],
        "oracle": [
          "    let utf8_range1 = Utf8Range { start: 0, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    assert_eq!(format!(\"{:?}\", sequence), \"Utf8Range { start: 0, end: 127 }Utf8Range { start: 128, end: 255 }\");"
        ],
        "code": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 0, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "    let utf8_range1 = Utf8Range { start: 0, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    assert_eq!(format!(\"{:?}\", sequence), \"Utf8Range { start: 0, end: 127 }Utf8Range { start: 128, end: 255 }\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 127, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 128 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 127, end: 127 }, Utf8Range { start: 128, end: 128 }])), \"Utf8Range { start: 127, end: 127 }Utf8Range { start: 128, end: 128 }\");"
        ],
        "code": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 127, end: 127 };",
          "    let utf8_range2 = Utf8Range { start: 128, end: 128 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 127, end: 127 }, Utf8Range { start: 128, end: 128 }])), \"Utf8Range { start: 127, end: 127 }Utf8Range { start: 128, end: 128 }\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 200, end: 220 };",
          "    let utf8_range2 = Utf8Range { start: 221, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 200, end: 220 }, Utf8Range { start: 221, end: 255 }])), \"Utf8Range { start: 200, end: 220 }Utf8Range { start: 221, end: 255 }\");"
        ],
        "code": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 200, end: 220 };",
          "    let utf8_range2 = Utf8Range { start: 221, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 200, end: 220 }, Utf8Range { start: 221, end: 255 }])), \"Utf8Range { start: 200, end: 220 }Utf8Range { start: 221, end: 255 }\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 255, end: 255 };",
          "    let utf8_range2 = Utf8Range { start: 255, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 255, end: 255 }, Utf8Range { start: 255, end: 255 }])), \"Utf8Range { start: 255, end: 255 }Utf8Range { start: 255, end: 255 }\");"
        ],
        "code": [
          "{",
          "    let utf8_range1 = Utf8Range { start: 255, end: 255 };",
          "    let utf8_range2 = Utf8Range { start: 255, end: 255 };",
          "    let sequence = Utf8Sequence::Two([utf8_range1, utf8_range2]);",
          "    let _ = format!(\"{:?}\", sequence);",
          "    assert_eq!(format!(\"{:?}\", Utf8Sequence::Two([Utf8Range { start: 255, end: 255 }, Utf8Range { start: 255, end: 255 }])), \"Utf8Range { start: 255, end: 255 }Utf8Range { start: 255, end: 255 }\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]