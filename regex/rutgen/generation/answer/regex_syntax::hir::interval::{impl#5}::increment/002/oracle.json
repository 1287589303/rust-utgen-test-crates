[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(output, '\\u{E000}');"
        ],
        "code": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "    assert_eq!(output, '\\u{E000}');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(output, '\\u{E000}');"
        ],
        "code": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "    assert_eq!(output, '\\u{E000}');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(output, '\\u{E000}');"
        ],
        "code": [
          "{",
          "    let input: char = '\\u{D7FF}';",
          "    let output = input.increment();",
          "    assert_eq!(output, '\\u{E000}');",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]