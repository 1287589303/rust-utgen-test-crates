[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = Utf8Range { start: 0, end: 127 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.output(), \"[00-7F]\");"
        ],
        "code": [
          "{",
          "    let range = Utf8Range { start: 0, end: 127 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "    assert_eq!(formatter.output(), \"[00-7F]\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = Utf8Range { start: 200, end: 250 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.to_string(), \"[C8-FA]\");"
        ],
        "code": [
          "{",
          "    let range = Utf8Range { start: 200, end: 250 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "    assert_eq!(formatter.to_string(), \"[C8-FA]\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = Utf8Range { start: 254, end: 255 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.to_string(), \"[FE-FF]\");"
        ],
        "code": [
          "{",
          "    let range = Utf8Range { start: 254, end: 255 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "    assert_eq!(formatter.to_string(), \"[FE-FF]\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let range = Utf8Range { start: 64, end: 128 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.output(), \"[40-80]\");"
        ],
        "code": [
          "{",
          "    let range = Utf8Range { start: 64, end: 128 };",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = range.fmt(&mut formatter);",
          "    assert_eq!(formatter.output(), \"[40-80]\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]