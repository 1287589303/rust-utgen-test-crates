[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(5),",
          "        quit_id: StateID(1),",
          "        min_match: StateID(2),",
          "        max_match: StateID(4),",
          "        min_accel: StateID(2),",
          "        max_accel: StateID(5),",
          "        min_start: StateID(3),",
          "        max_start: StateID(7),",
          "    };",
          "",
          "    let id = StateID(4);",
          "    special.is_start_state(id);",
          "}"
        ],
        "oracle": [
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert!(!special.is_start_state(StateID(2)));",
          "    assert!(!special.is_start_state(StateID(8)));"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(5),",
          "        quit_id: StateID(1),",
          "        min_match: StateID(2),",
          "        max_match: StateID(4),",
          "        min_accel: StateID(2),",
          "        max_accel: StateID(5),",
          "        min_start: StateID(3),",
          "        max_start: StateID(7),",
          "    };",
          "",
          "    let id = StateID(4);",
          "    special.is_start_state(id);",
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert!(!special.is_start_state(StateID(2)));",
          "    assert!(!special.is_start_state(StateID(8)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(8),",
          "        quit_id: StateID(2),",
          "        min_match: StateID(3),",
          "        max_match: StateID(6),",
          "        min_accel: StateID(3),",
          "        max_accel: StateID(8),",
          "        min_start: StateID(3),",
          "        max_start: StateID(7),",
          "    };",
          "",
          "    let id = StateID(6);",
          "    special.is_start_state(id);",
          "}"
        ],
        "oracle": [
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert!(special.is_start_state(id) == true);"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(8),",
          "        quit_id: StateID(2),",
          "        min_match: StateID(3),",
          "        max_match: StateID(6),",
          "        min_accel: StateID(3),",
          "        max_accel: StateID(8),",
          "        min_start: StateID(3),",
          "        max_start: StateID(7),",
          "    };",
          "",
          "    let id = StateID(6);",
          "    special.is_start_state(id);",
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert!(special.is_start_state(id) == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(9),",
          "        quit_id: StateID(2),",
          "        min_match: StateID(4),",
          "        max_match: StateID(5),",
          "        min_accel: StateID(4),",
          "        max_accel: StateID(9),",
          "        min_start: StateID(3),",
          "        max_start: StateID(8),",
          "    };",
          "",
          "    let id = StateID(5);",
          "    special.is_start_state(id);",
          "}"
        ],
        "oracle": [
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert_eq!(special.is_start_state(StateID(2)), false);",
          "    assert_eq!(special.is_start_state(StateID(9)), false);",
          "    assert_eq!(special.is_start_state(StateID(3)), true);",
          "    assert_eq!(special.is_start_state(StateID(8)), true);"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(9),",
          "        quit_id: StateID(2),",
          "        min_match: StateID(4),",
          "        max_match: StateID(5),",
          "        min_accel: StateID(4),",
          "        max_accel: StateID(9),",
          "        min_start: StateID(3),",
          "        max_start: StateID(8),",
          "    };",
          "",
          "    let id = StateID(5);",
          "    special.is_start_state(id);",
          "    assert!(!special.is_dead_state(id));",
          "    assert!(special.min_start <= id);",
          "    assert!(id <= special.max_start);",
          "    assert_eq!(special.is_start_state(StateID(2)), false);",
          "    assert_eq!(special.is_start_state(StateID(9)), false);",
          "    assert_eq!(special.is_start_state(StateID(3)), true);",
          "    assert_eq!(special.is_start_state(StateID(8)), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(10),",
          "        quit_id: StateID(3),",
          "        min_match: StateID(5),",
          "        max_match: StateID(7),",
          "        min_accel: StateID(5),",
          "        max_accel: StateID(10),",
          "        min_start: StateID(3),",
          "        max_start: StateID(9),",
          "    };",
          "",
          "    let id = StateID(7);",
          "    special.is_start_state(id);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(special.is_start_state(StateID(7)), true);",
          "    assert_eq!(special.is_start_state(StateID(3)), true);",
          "    assert_eq!(special.is_start_state(StateID(9)), true);",
          "    assert_eq!(special.is_start_state(StateID(2)), false);",
          "    assert_eq!(special.is_start_state(StateID(10)), false);"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(10),",
          "        quit_id: StateID(3),",
          "        min_match: StateID(5),",
          "        max_match: StateID(7),",
          "        min_accel: StateID(5),",
          "        max_accel: StateID(10),",
          "        min_start: StateID(3),",
          "        max_start: StateID(9),",
          "    };",
          "",
          "    let id = StateID(7);",
          "    special.is_start_state(id);",
          "    assert_eq!(special.is_start_state(StateID(7)), true);",
          "    assert_eq!(special.is_start_state(StateID(3)), true);",
          "    assert_eq!(special.is_start_state(StateID(9)), true);",
          "    assert_eq!(special.is_start_state(StateID(2)), false);",
          "    assert_eq!(special.is_start_state(StateID(10)), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let special = Special {",
          "        max: StateID(10),",
          "        quit_id: StateID(4),",
          "        min_match: StateID(5),",
          "        max_match: StateID(6),",
          "        min_accel: StateID(1),",
          "        max_accel: StateID(10),",
          "        min_start: StateID(5),",
          "        max_start: StateID(9),",
          "    };",
          "",
          "    let id = StateID(4);",
          "    special.is_start_state(id);",
          "}"
        ],
        "oracle": [
          "    special.is_start_state(id) == false",
          "    special.is_dead_state(id) == false",
          "    special.min_start <= id == false",
          "    special.max_start >= id == true",
          "    special.min_start == StateID(5)",
          "    special.max_start == StateID(9)"
        ],
        "code": [
          "{",
          "    let special = Special {",
          "        max: StateID(10),",
          "        quit_id: StateID(4),",
          "        min_match: StateID(5),",
          "        max_match: StateID(6),",
          "        min_accel: StateID(1),",
          "        max_accel: StateID(10),",
          "        min_start: StateID(5),",
          "        max_start: StateID(9),",
          "    };",
          "",
          "    let id = StateID(4);",
          "    special.is_start_state(id);",
          "    special.is_start_state(id) == false",
          "    special.is_dead_state(id) == false",
          "    special.min_start <= id == false",
          "    special.max_start >= id == true",
          "    special.min_start == StateID(5)",
          "    special.max_start == StateID(9)",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]