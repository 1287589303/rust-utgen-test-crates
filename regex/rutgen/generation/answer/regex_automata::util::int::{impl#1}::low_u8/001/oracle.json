[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 0;",
          "    let result = value.low_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);",
          "    assert_eq!(result, (value & 0xFF) as u8);",
          "    assert_eq!(result, (u16::from(value) as u8));",
          "    assert_eq!(result, (0u16 as u8));",
          "    assert_eq!(result, (u16::MAX as u8));",
          "    assert_eq!(result, (value.low_u8()));",
          "    assert_eq!(result, (value as u8));",
          "    assert_eq!(result, (value.wrapping_neg() as u8));"
        ],
        "code": [
          "{",
          "    let value: u16 = 0;",
          "    let result = value.low_u8();",
          "    assert_eq!(result, 0);",
          "    assert_eq!(result, (value & 0xFF) as u8);",
          "    assert_eq!(result, (u16::from(value) as u8));",
          "    assert_eq!(result, (0u16 as u8));",
          "    assert_eq!(result, (u16::MAX as u8));",
          "    assert_eq!(result, (value.low_u8()));",
          "    assert_eq!(result, (value as u8));",
          "    assert_eq!(result, (value.wrapping_neg() as u8));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 255;",
          "    let result = value.low_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 255);"
        ],
        "code": [
          "{",
          "    let value: u16 = 255;",
          "    let result = value.low_u8();",
          "    assert_eq!(result, 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: u16 = 65535;",
          "    let result = value.low_u8();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 255);",
          "    assert_eq!(result, (value & 0xFF) as u8);",
          "    assert_eq!(result, 65535 as u8);",
          "    assert_eq!(result, u8::from(u16::MAX));",
          "    assert_eq!(result, (value % 256) as u8);",
          "    assert_eq!(result, value.low_u8());",
          "    assert_eq!(result, value & 0xFF);"
        ],
        "code": [
          "{",
          "    let value: u16 = 65535;",
          "    let result = value.low_u8();",
          "    assert_eq!(result, 255);",
          "    assert_eq!(result, (value & 0xFF) as u8);",
          "    assert_eq!(result, 65535 as u8);",
          "    assert_eq!(result, u8::from(u16::MAX));",
          "    assert_eq!(result, (value % 256) as u8);",
          "    assert_eq!(result, value.low_u8());",
          "    assert_eq!(result, value & 0xFF);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]