[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"lc\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Cased_Letter\")));"
        ],
        "code": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"lc\");",
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Cased_Letter\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"assigned\");",
          "}"
        ],
        "oracle": [
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"assigned\");",
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Assigned\")));"
        ],
        "code": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"assigned\");",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"assigned\");",
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Assigned\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"any\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Any\")));",
          "    assert_ne!(norm, \"cf\");",
          "    assert_ne!(norm, \"sc\");",
          "    assert_eq!(norm, \"lc\");"
        ],
        "code": [
          "{",
          "    let class_query = ClassQuery::Binary(\"test\");",
          "    let result = class_query.canonical_binary(\"any\");",
          "    assert_eq!(result, Ok(CanonicalClassQuery::GeneralCategory(\"Any\")));",
          "    assert_ne!(norm, \"cf\");",
          "    assert_ne!(norm, \"sc\");",
          "    assert_eq!(norm, \"lc\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]