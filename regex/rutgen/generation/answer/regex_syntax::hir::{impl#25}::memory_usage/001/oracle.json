[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: false,",
          "        explicit_captures_len: 50,",
          "        static_explicit_captures_len: Some(10),",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: false,",
          "        explicit_captures_len: 50,",
          "        static_explicit_captures_len: Some(10),",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(50),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 75,",
          "        static_explicit_captures_len: Some(25),",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(50),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 75,",
          "        static_explicit_captures_len: Some(25),",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 100,",
          "        static_explicit_captures_len: Some(100),",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 100,",
          "        static_explicit_captures_len: Some(100),",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(50),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: false,",
          "        explicit_captures_len: 10,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(0),",
          "        maximum_len: Some(50),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: false,",
          "        explicit_captures_len: 10,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(100),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 100,",
          "        static_explicit_captures_len: Some(50),",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());"
        ],
        "code": [
          "{",
          "    struct LookSet;",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(100),",
          "        maximum_len: Some(100),",
          "        look_set: LookSet,",
          "        look_set_prefix: LookSet,",
          "        look_set_suffix: LookSet,",
          "        look_set_prefix_any: LookSet,",
          "        look_set_suffix_any: LookSet,",
          "        utf8: true,",
          "        explicit_captures_len: 100,",
          "        static_explicit_captures_len: Some(50),",
          "        literal: true,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.memory_usage();",
          "    assert_eq!(properties.memory_usage(), core::mem::size_of::<PropertiesI>());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]