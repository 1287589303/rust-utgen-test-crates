[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new();",
          "    let result = config.backtrack(true);",
          "}"
        ],
        "oracle": [
          "    let expected_config = Config { backtrack: Some(true), ..config };",
          "    assert_eq!(result, expected_config);",
          "    let result_false = config.backtrack(false);",
          "    let expected_config_false = Config { backtrack: Some(false), ..config };",
          "    assert_eq!(result_false, expected_config_false);",
          "    let config_default = Config::default();",
          "    let result_default = config_default.backtrack(true);",
          "    let expected_default_config = Config { backtrack: Some(true), ..config_default };",
          "    assert_eq!(result_default, expected_default_config);"
        ],
        "code": [
          "{",
          "    let config = Config::new();",
          "    let result = config.backtrack(true);",
          "    let expected_config = Config { backtrack: Some(true), ..config };",
          "    assert_eq!(result, expected_config);",
          "    let result_false = config.backtrack(false);",
          "    let expected_config_false = Config { backtrack: Some(false), ..config };",
          "    assert_eq!(result_false, expected_config_false);",
          "    let config_default = Config::default();",
          "    let result_default = config_default.backtrack(true);",
          "    let expected_default_config = Config { backtrack: Some(true), ..config_default };",
          "    assert_eq!(result_default, expected_default_config);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let config = Config::new();",
          "    let result = config.backtrack(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result.backtrack, Some(false));"
        ],
        "code": [
          "{",
          "    let config = Config::new();",
          "    let result = config.backtrack(false);",
          "    assert_eq!(result.backtrack, Some(false));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]