[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(3),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    literal: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(3),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: true,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    literal: true,",
          "    ..Default::default()",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(2),",
          "        maximum_len: Some(6),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: true,",
          "    literal: false,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    literal: true,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(2),",
          "        maximum_len: Some(6),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: true,",
          "    literal: false,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    let properties = Properties(Box::new(PropertiesI {",
          "    alternation_literal: false,",
          "    literal: true,",
          "    ..default_properties",
          "    }));",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.is_alternation_literal();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties_alternation_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties_alternation_literal.is_alternation_literal(), true);",
          "    ",
          "    let properties_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_literal.is_alternation_literal(), false);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: None,",
          "        maximum_len: None,",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.is_alternation_literal();",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties_alternation_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties_alternation_literal.is_alternation_literal(), true);",
          "    ",
          "    let properties_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: None,",
          "    maximum_len: None,",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_literal.is_alternation_literal(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(2),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: true,",
          "        explicit_captures_len: 1,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.is_alternation_literal();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties_alternation = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(1),",
          "    maximum_len: Some(3),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: true,",
          "    explicit_captures_len: 2,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties_alternation.is_alternation_literal(), true);",
          "    ",
          "    let properties_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(1),",
          "    maximum_len: Some(5),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_literal.is_alternation_literal(), false);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(1),",
          "        maximum_len: Some(2),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: true,",
          "        explicit_captures_len: 1,",
          "        static_explicit_captures_len: None,",
          "        literal: false,",
          "        alternation_literal: false,",
          "    }));",
          "    properties.is_alternation_literal();",
          "    assert_eq!(properties.is_alternation_literal(), false);",
          "    ",
          "    let properties_alternation = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(1),",
          "    maximum_len: Some(3),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: true,",
          "    explicit_captures_len: 2,",
          "    static_explicit_captures_len: None,",
          "    literal: false,",
          "    alternation_literal: true,",
          "    }));",
          "    assert_eq!(properties_alternation.is_alternation_literal(), true);",
          "    ",
          "    let properties_literal = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(1),",
          "    maximum_len: Some(5),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_literal.is_alternation_literal(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(3),",
          "        maximum_len: Some(10),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties_not_alternation = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(3),",
          "    maximum_len: Some(10),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_not_alternation.is_alternation_literal(), false);"
        ],
        "code": [
          "{",
          "    let properties = Properties(Box::new(PropertiesI {",
          "        minimum_len: Some(3),",
          "        maximum_len: Some(10),",
          "        look_set: LookSet::new(),",
          "        look_set_prefix: LookSet::new(),",
          "        look_set_suffix: LookSet::new(),",
          "        look_set_prefix_any: LookSet::new(),",
          "        look_set_suffix_any: LookSet::new(),",
          "        utf8: false,",
          "        explicit_captures_len: 0,",
          "        static_explicit_captures_len: None,",
          "        literal: true,",
          "        alternation_literal: true,",
          "    }));",
          "    properties.is_alternation_literal();",
          "    assert_eq!(properties.is_alternation_literal(), true);",
          "    ",
          "    let properties_not_alternation = Properties(Box::new(PropertiesI {",
          "    minimum_len: Some(3),",
          "    maximum_len: Some(10),",
          "    look_set: LookSet::new(),",
          "    look_set_prefix: LookSet::new(),",
          "    look_set_suffix: LookSet::new(),",
          "    look_set_prefix_any: LookSet::new(),",
          "    look_set_suffix_any: LookSet::new(),",
          "    utf8: false,",
          "    explicit_captures_len: 0,",
          "    static_explicit_captures_len: None,",
          "    literal: true,",
          "    alternation_literal: false,",
          "    }));",
          "    assert_eq!(properties_not_alternation.is_alternation_literal(), false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]