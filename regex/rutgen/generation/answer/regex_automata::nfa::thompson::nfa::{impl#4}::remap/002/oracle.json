[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut state = State::Fail;",
          "    let remap: Vec<StateID> = Vec::new();",
          "    state.remap(&remap);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(state, State::Fail);",
          "    assert!(state.is_epsilon());",
          "    assert_eq!(state.memory_usage(), 0);"
        ],
        "code": [
          "{",
          "    let mut state = State::Fail;",
          "    let remap: Vec<StateID> = Vec::new();",
          "    state.remap(&remap);",
          "    assert_eq!(state, State::Fail);",
          "    assert!(state.is_epsilon());",
          "    assert_eq!(state.memory_usage(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut state = State::Fail;",
          "    let remap: Vec<StateID> = vec![StateID(SmallIndex(0))];",
          "    state.remap(&remap);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(state, State::Fail);"
        ],
        "code": [
          "{",
          "    let mut state = State::Fail;",
          "    let remap: Vec<StateID> = vec![StateID(SmallIndex(0))];",
          "    state.remap(&remap);",
          "    assert_eq!(state, State::Fail);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]