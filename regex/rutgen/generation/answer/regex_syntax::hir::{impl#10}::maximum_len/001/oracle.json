[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![ClassBytesRange::new(0x61, 0x61)]));",
          "    let _ = byte_class.maximum_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_class.maximum_len(), Some(1));"
        ],
        "code": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![ClassBytesRange::new(0x61, 0x61)]));",
          "    let _ = byte_class.maximum_len();",
          "    assert_eq!(byte_class.maximum_len(), Some(1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![",
          "        ClassBytesRange::new(0x00, 0x1F),",
          "        ClassBytesRange::new(0x20, 0x7E),",
          "        ClassBytesRange::new(0x80, 0xFF),",
          "    ]));",
          "    let _ = byte_class.maximum_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_class.maximum_len(), Some(1));"
        ],
        "code": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![",
          "        ClassBytesRange::new(0x00, 0x1F),",
          "        ClassBytesRange::new(0x20, 0x7E),",
          "        ClassBytesRange::new(0x80, 0xFF),",
          "    ]));",
          "    let _ = byte_class.maximum_len();",
          "    assert_eq!(byte_class.maximum_len(), Some(1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![ClassBytesRange::new(0x00, 0xFF)]));",
          "    let _ = byte_class.maximum_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(byte_class.maximum_len(), Some(1));"
        ],
        "code": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::new(vec![ClassBytesRange::new(0x00, 0xFF)]));",
          "    let _ = byte_class.maximum_len();",
          "    assert_eq!(byte_class.maximum_len(), Some(1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::empty());",
          "    let _ = byte_class.maximum_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(None, byte_class.maximum_len());"
        ],
        "code": [
          "{",
          "    let byte_class = Class::Bytes(ClassBytes::empty());",
          "    let _ = byte_class.maximum_len();",
          "    assert_eq!(None, byte_class.maximum_len());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]