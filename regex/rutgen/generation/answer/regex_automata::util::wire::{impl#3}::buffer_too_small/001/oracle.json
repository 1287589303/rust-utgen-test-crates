[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"a\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, DeserializeError::buffer_too_small(\"a\"));",
          "    assert!(matches!(result.0, DeserializeErrorKind::BufferTooSmall { what: \"a\" }));"
        ],
        "code": [
          "{",
          "    let input = \"a\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "    assert_eq!(result, DeserializeError::buffer_too_small(\"a\"));",
          "    assert!(matches!(result.0, DeserializeErrorKind::BufferTooSmall { what: \"a\" }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"buffer too small error\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what: \"buffer too small error\" }));"
        ],
        "code": [
          "{",
          "    let input = \"buffer too small error\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what: \"buffer too small error\" }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"a\".repeat(usize::MAX);",
          "    let result = DeserializeError::buffer_too_small(&input);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what: \"a\".repeat(usize::MAX) }));"
        ],
        "code": [
          "{",
          "    let input = \"a\".repeat(usize::MAX);",
          "    let result = DeserializeError::buffer_too_small(&input);",
          "    assert_eq!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what: \"a\".repeat(usize::MAX) }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input = \"\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what }) if what == input));"
        ],
        "code": [
          "{",
          "    let input = \"\";",
          "    let result = DeserializeError::buffer_too_small(input);",
          "    assert!(matches!(result, DeserializeError(DeserializeErrorKind::BufferTooSmall { what }) if what == input));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]