[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scalar_range = ScalarRange { start: 128, end: 255 };",
          "    let result = scalar_range.as_ascii();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let scalar_range = ScalarRange { start: 128, end: 255 };",
          "    let result = scalar_range.as_ascii();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scalar_range = ScalarRange { start: 0, end: 200 };",
          "    let result = scalar_range.as_ascii();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let scalar_range = ScalarRange { start: 0, end: 200 };",
          "    let result = scalar_range.as_ascii();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scalar_range = ScalarRange { start: 255, end: 128 };",
          "    let result = scalar_range.as_ascii();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let scalar_range = ScalarRange { start: 255, end: 128 };",
          "    let result = scalar_range.as_ascii();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scalar_range = ScalarRange { start: 0x110000, end: 0x110000 };",
          "    let result = scalar_range.as_ascii();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let scalar_range = ScalarRange { start: 0x110000, end: 0x110000 };",
          "    let result = scalar_range.as_ascii();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let scalar_range = ScalarRange { start: 0, end: 0x110000 };",
          "    let result = scalar_range.as_ascii();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let scalar_range = ScalarRange { start: 0, end: 0x110000 };",
          "    let result = scalar_range.as_ascii();",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]