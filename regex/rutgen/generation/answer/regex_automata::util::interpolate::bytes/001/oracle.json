[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut dst = Vec::new();",
          "    let replacement: &[u8] = b\"\";",
          "    let append = |_, _: &mut Vec<u8>| {};",
          "    let name_to_index = |_: &str| None;",
          "    bytes(replacement, append, name_to_index, &mut dst);",
          "}"
        ],
        "oracle": [
          "    assert!(dst.is_empty());"
        ],
        "code": [
          "{",
          "    let mut dst = Vec::new();",
          "    let replacement: &[u8] = b\"\";",
          "    let append = |_, _: &mut Vec<u8>| {};",
          "    let name_to_index = |_: &str| None;",
          "    bytes(replacement, append, name_to_index, &mut dst);",
          "    assert!(dst.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut dst = vec![b'x', b'y', b'z'];",
          "    let replacement: &[u8] = b\"\";",
          "    let append = |_, _: &mut Vec<u8>| {};",
          "    let name_to_index = |_: &str| None;",
          "    bytes(replacement, append, name_to_index, &mut dst);",
          "}"
        ],
        "oracle": [
          "    dst == vec![b'x', b'y', b'z']"
        ],
        "code": [
          "{",
          "    let mut dst = vec![b'x', b'y', b'z'];",
          "    let replacement: &[u8] = b\"\";",
          "    let append = |_, _: &mut Vec<u8>| {};",
          "    let name_to_index = |_: &str| None;",
          "    bytes(replacement, append, name_to_index, &mut dst);",
          "    dst == vec![b'x', b'y', b'z']",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]