[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(range.start, 0);"
        ],
        "code": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(0);",
          "    assert_eq!(range.start, 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(128);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(range.lower(), 128);",
          "    assert_eq!(range.start, 128);",
          "    assert!(range.upper() == 0);"
        ],
        "code": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(128);",
          "    assert_eq!(range.lower(), 128);",
          "    assert_eq!(range.start, 128);",
          "    assert!(range.upper() == 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(255);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(range.lower(), 255);"
        ],
        "code": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(255);",
          "    assert_eq!(range.lower(), 255);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(1);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(range.start, 1);"
        ],
        "code": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(1);",
          "    assert_eq!(range.start, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(254);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(range.lower(), 254);",
          "    assert_eq!(range.start, 254);"
        ],
        "code": [
          "{",
          "    let mut range = ClassBytesRange::default();",
          "    range.set_lower(254);",
          "    assert_eq!(range.lower(), 254);",
          "    assert_eq!(range.start, 254);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]