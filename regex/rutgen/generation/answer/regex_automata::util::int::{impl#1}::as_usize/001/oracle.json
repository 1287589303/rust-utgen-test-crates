[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: u16 = 0;",
          "    let result = input.as_usize();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 0);",
          "    let input: u16 = 1;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 1);",
          "    let input: u16 = u16::MAX;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, usize::from(u16::MAX));",
          "    let input: u16 = 100;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 100);",
          "    let input: u16 = 65535;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 65535);"
        ],
        "code": [
          "{",
          "    let input: u16 = 0;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 0);",
          "    let input: u16 = 1;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 1);",
          "    let input: u16 = u16::MAX;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, usize::from(u16::MAX));",
          "    let input: u16 = 100;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 100);",
          "    let input: u16 = 65535;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 65535);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: u16 = 1;",
          "    let result = input.as_usize();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 1);"
        ],
        "code": [
          "{",
          "    let input: u16 = 1;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: u16 = 65534;",
          "    let result = input.as_usize();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 65534);"
        ],
        "code": [
          "{",
          "    let input: u16 = 65534;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 65534);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let input: u16 = 65535;",
          "    let result = input.as_usize();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, 65535);"
        ],
        "code": [
          "{",
          "    let input: u16 = 65535;",
          "    let result = input.as_usize();",
          "    assert_eq!(result, 65535);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]