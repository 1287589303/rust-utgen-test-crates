[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cache_error = CacheError(());",
          "    let start_error = StartError::Cache { err: cache_error };",
          "    let _result = start_error.source();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_result, Some(&cache_error));"
        ],
        "code": [
          "{",
          "    let cache_error = CacheError(());",
          "    let start_error = StartError::Cache { err: cache_error };",
          "    let _result = start_error.source();",
          "    assert_eq!(_result, Some(&cache_error));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let cache_error = CacheError(());",
          "    let start_error = StartError::Cache { err: cache_error.clone() };",
          "    let _result = start_error.source();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(_result, Some(&cache_error));"
        ],
        "code": [
          "{",
          "    let cache_error = CacheError(());",
          "    let start_error = StartError::Cache { err: cache_error.clone() };",
          "    let _result = start_error.source();",
          "    assert_eq!(_result, Some(&cache_error));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]