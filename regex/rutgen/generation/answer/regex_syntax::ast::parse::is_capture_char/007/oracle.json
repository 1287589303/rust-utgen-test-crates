[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_capture_char('_', false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    result = is_capture_char(']', false);",
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_capture_char('.', false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_capture_char('[', false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('a', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('1', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('!', false);",
          "    assert_eq!(result, false);",
          "    let result = is_capture_char(' ', false);",
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('a', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('1', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('!', false);",
          "    assert_eq!(result, false);",
          "    let result = is_capture_char(' ', false);",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = is_capture_char(']', false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('a', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('1', false);",
          "    assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char(']', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('.', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('_', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('[', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('a', false);",
          "    assert_eq!(result, true);",
          "    let result = is_capture_char('1', false);",
          "    assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]