[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let info = GroupInfo::empty();",
          "    let pattern_len = info.pattern_len();",
          "    let all_group_len = info.all_group_len();",
          "    let slot_len = info.slot_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(0, pattern_len);",
          "    assert_eq!(0, all_group_len);",
          "    assert_eq!(0, slot_len);"
        ],
        "code": [
          "{",
          "    let info = GroupInfo::empty();",
          "    let pattern_len = info.pattern_len();",
          "    let all_group_len = info.all_group_len();",
          "    let slot_len = info.slot_len();",
          "    assert_eq!(0, pattern_len);",
          "    assert_eq!(0, all_group_len);",
          "    assert_eq!(0, slot_len);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let empty_iterator = core::iter::empty::<[Option<&str>; 0]>();",
          "    let info = GroupInfo::new(empty_iterator).expect(\"should not fail on empty iterator\");",
          "    let pattern_len = info.pattern_len();",
          "    let all_group_len = info.all_group_len();",
          "    let slot_len = info.slot_len();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(0, pattern_len);",
          "    assert_eq!(0, all_group_len);",
          "    assert_eq!(0, slot_len);"
        ],
        "code": [
          "{",
          "    let empty_iterator = core::iter::empty::<[Option<&str>; 0]>();",
          "    let info = GroupInfo::new(empty_iterator).expect(\"should not fail on empty iterator\");",
          "    let pattern_len = info.pattern_len();",
          "    let all_group_len = info.all_group_len();",
          "    let slot_len = info.slot_len();",
          "    assert_eq!(0, pattern_len);",
          "    assert_eq!(0, all_group_len);",
          "    assert_eq!(0, slot_len);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]