1. Input a `ClassUnicode` instance with no ranges (empty set) to verify negation creates a full range set; 
2. Input a `ClassUnicode` instance with a single range (e.g., `ClassUnicodeRange { start: 'a', end: 'z' }`) to check negation results in the inclusion of all characters outside this range; 
3. Input a `ClassUnicode` instance with overlapping ranges (e.g., `ClassUnicodeRange { start: 'A', end: 'C' }` and `ClassUnicodeRange { start: 'B', end: 'D' }`) to ensure negation correctly calculates the non-overlapping sections; 
4. Input a `ClassUnicode` instance with a range covering all Unicode scalar values (e.g., `ClassUnicodeRange { start: '\u{0}', end: '\u{10FFFF}' }`) to check negation results in an empty set; 
5. Input a `ClassUnicode` instance that contains non-contiguous ranges (e.g., `ClassUnicodeRange { start: '0', end: '9' }` and `ClassUnicodeRange { start: 'A', end: 'F' }`) to verify the negation captures all other characters correctly.
