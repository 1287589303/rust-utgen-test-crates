[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Unknown_Value\"; // Precondition: canonical_value(vals, &property_value) is None",
          "",
          "    let query = ClassQuery::ByValue {",
          "        property_name,",
          "        property_value,",
          "    };",
          "    ",
          "    let _result = query.canonicalize();",
          "}"
        ],
        "oracle": [
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Unknown_Value\"; // Precondition: canonical_value(vals, &property_value) is None",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name,",
          "    property_value,",
          "    };",
          "    ",
          "    let result = query.canonicalize();",
          "    assert_eq!(result, Err(Error::PropertyValueNotFound));"
        ],
        "code": [
          "{",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Unknown_Value\"; // Precondition: canonical_value(vals, &property_value) is None",
          "",
          "    let query = ClassQuery::ByValue {",
          "        property_name,",
          "        property_value,",
          "    };",
          "    ",
          "    let _result = query.canonicalize();",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Unknown_Value\"; // Precondition: canonical_value(vals, &property_value) is None",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name,",
          "    property_value,",
          "    };",
          "    ",
          "    let result = query.canonicalize();",
          "    assert_eq!(result, Err(Error::PropertyValueNotFound));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Recognized_Value\"; // This should be valid but not found in property_values",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "        property_name,",
          "        property_value,",
          "    };",
          "",
          "    let _result = query.canonicalize();",
          "}"
        ],
        "oracle": [
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Invalid_Value\"; // This should be valid but not found in property_values",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name,",
          "    property_value,",
          "    };",
          "    ",
          "    let result = query.canonicalize();",
          "    assert_eq!(result, Err(Error::PropertyValueNotFound));"
        ],
        "code": [
          "{",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Recognized_Value\"; // This should be valid but not found in property_values",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "        property_name,",
          "        property_value,",
          "    };",
          "",
          "    let _result = query.canonicalize();",
          "    let property_name = \"Known_Property\"; // Precondition: canonical_prop(&property_name)? is Ok/Some",
          "    let property_value = \"Invalid_Value\"; // This should be valid but not found in property_values",
          "    ",
          "    let query = ClassQuery::ByValue {",
          "    property_name,",
          "    property_value,",
          "    };",
          "    ",
          "    let result = query.canonicalize();",
          "    assert_eq!(result, Err(Error::PropertyValueNotFound));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]