[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script\",",
          "        property_value: \"Latin\",",
          "    };",
          "    let _ = query.canonicalize();",
          "}"
        ],
        "oracle": [
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    let result = query.canonicalize();",
          "    assert_eq!(result.is_ok(), true);",
          "    match result {",
          "    Ok(CanonicalClassQuery::Script(canon)) => assert_eq!(canon, \"Latin\"),",
          "    _ => panic!(\"Expected CanonicalClassQuery::Script variant\"),",
          "    }"
        ],
        "code": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script\",",
          "        property_value: \"Latin\",",
          "    };",
          "    let _ = query.canonicalize();",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    let result = query.canonicalize();",
          "    assert_eq!(result.is_ok(), true);",
          "    match result {",
          "    Ok(CanonicalClassQuery::Script(canon)) => assert_eq!(canon, \"Latin\"),",
          "    _ => panic!(\"Expected CanonicalClassQuery::Script variant\"),",
          "    }",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script\",",
          "        property_value: \"UnknownScript\",",
          "    };",
          "    let _ = query.canonicalize();",
          "}"
        ],
        "oracle": [
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"Letter\" };",
          "    assert_eq!(query.canonicalize(), Err(Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    assert_eq!(query.canonicalize().is_ok(), true);",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"InvalidScript\" };",
          "    assert_eq!(query.canonicalize(), Err(Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Common\" };",
          "    assert_eq!(query.canonicalize(), Ok(CanonicalClassQuery::Script(\"Common\")));",
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"NonLetter\" };",
          "    assert_eq!(query.canonicalize().is_ok(), false);",
          "    let query = ClassQuery::ByValue { property_name: \"Some_Property\", property_value: \"Some_Value\" };",
          "    assert_eq!(query.canonicalize(), Ok(CanonicalClassQuery::ByValue { property_name: \"Some_Property\", property_value: \"Some_Canonical_Value\" }));"
        ],
        "code": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Script\",",
          "        property_value: \"UnknownScript\",",
          "    };",
          "    let _ = query.canonicalize();",
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"Letter\" };",
          "    assert_eq!(query.canonicalize(), Err(Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    assert_eq!(query.canonicalize().is_ok(), true);",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"InvalidScript\" };",
          "    assert_eq!(query.canonicalize(), Err(Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Common\" };",
          "    assert_eq!(query.canonicalize(), Ok(CanonicalClassQuery::Script(\"Common\")));",
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"NonLetter\" };",
          "    assert_eq!(query.canonicalize().is_ok(), false);",
          "    let query = ClassQuery::ByValue { property_name: \"Some_Property\", property_value: \"Some_Value\" };",
          "    assert_eq!(query.canonicalize(), Ok(CanonicalClassQuery::ByValue { property_name: \"Some_Property\", property_value: \"Some_Canonical_Value\" }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Some_Other_Property\",",
          "        property_value: \"Latin\",",
          "    };",
          "    let _ = query.canonicalize();",
          "}"
        ],
        "oracle": [
          "    let query = ClassQuery::ByValue { property_name: \"Some_Other_Property\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_ok());",
          "    let result = query.canonicalize().unwrap();",
          "    assert!(matches!(result, CanonicalClassQuery::Script(_)));",
          "    assert!(matches!(result, CanonicalClassQuery::ByValue { property_name, property_value } if property_name == \"Some_Other_Property\" && property_value == \"Latin\"));",
          "    let result = query.canonicalize().unwrap_err();",
          "    assert!(matches!(result, Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_err());",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Nonexistent_Script\" };",
          "    assert!(query.canonicalize().is_err());",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_ok());"
        ],
        "code": [
          "{",
          "    let query = ClassQuery::ByValue {",
          "        property_name: \"Some_Other_Property\",",
          "        property_value: \"Latin\",",
          "    };",
          "    let _ = query.canonicalize();",
          "    let query = ClassQuery::ByValue { property_name: \"Some_Other_Property\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_ok());",
          "    let result = query.canonicalize().unwrap();",
          "    assert!(matches!(result, CanonicalClassQuery::Script(_)));",
          "    assert!(matches!(result, CanonicalClassQuery::ByValue { property_name, property_value } if property_name == \"Some_Other_Property\" && property_value == \"Latin\"));",
          "    let result = query.canonicalize().unwrap_err();",
          "    assert!(matches!(result, Error::PropertyValueNotFound));",
          "    let query = ClassQuery::ByValue { property_name: \"General_Category\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_err());",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Nonexistent_Script\" };",
          "    assert!(query.canonicalize().is_err());",
          "    let query = ClassQuery::ByValue { property_name: \"Script\", property_value: \"Latin\" };",
          "    assert!(query.canonicalize().is_ok());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]