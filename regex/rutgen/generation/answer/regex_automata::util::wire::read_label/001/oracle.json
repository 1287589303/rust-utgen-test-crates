[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0]; // NUL at the end but size is too short",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));"
        ],
        "code": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0]; // NUL at the end but size is too short",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0, 0]; // NUL found, but slice is too large",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));"
        ],
        "code": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0, 0]; // NUL found, but slice is too large",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0, 0, 0, 0]; // NUL at correct place but not enough data for padding",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));"
        ],
        "code": [
          "{",
          "    let slice: &[u8] = &[1, 2, 3, 4, 5, 6, 0, 0, 0, 0]; // NUL at correct place but not enough data for padding",
          "    let expected_label = \"label\";",
          "    let result = read_label(slice, expected_label);",
          "    assert_eq!(result, Err(DeserializeError::generic(\"could not find properly sized label at start of serialized object\")));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]