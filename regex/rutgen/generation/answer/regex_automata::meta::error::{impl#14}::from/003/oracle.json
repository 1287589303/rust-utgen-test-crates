[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let merr = MatchError::gave_up(0);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "}"
        ],
        "oracle": [
          "    let merr = MatchError::gave_up(0);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 0);",
          "    let merr = MatchError::gave_up(5);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 5);"
        ],
        "code": [
          "{",
          "    let merr = MatchError::gave_up(0);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    let merr = MatchError::gave_up(0);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 0);",
          "    let merr = MatchError::gave_up(5);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 5);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let merr = MatchError::gave_up(usize::MAX);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(retry_fail_error.offset, usize::MAX);"
        ],
        "code": [
          "{",
          "    let merr = MatchError::gave_up(usize::MAX);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, usize::MAX);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let merr = MatchError::gave_up(12345);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "}"
        ],
        "oracle": [
          "    let merr = MatchError::gave_up(12345);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 12345);"
        ],
        "code": [
          "{",
          "    let merr = MatchError::gave_up(12345);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    let merr = MatchError::gave_up(12345);",
          "    let retry_fail_error: RetryFailError = merr.into();",
          "    assert_eq!(retry_fail_error.offset, 12345);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]