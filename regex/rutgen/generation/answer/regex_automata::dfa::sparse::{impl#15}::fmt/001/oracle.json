[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct DummyStartTable;",
          "    let dummy_table = DummyStartTable;",
          "",
          "    let formatter = &mut fmt::Formatter::default();",
          "    let state_iter = StartStateIter {",
          "        st: &dummy_table,",
          "        i: 0,",
          "    };",
          "",
          "    let _ = state_iter.fmt(formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.to_string(), \"StartStateIter { i: 0 }\");"
        ],
        "code": [
          "{",
          "    struct DummyStartTable;",
          "    let dummy_table = DummyStartTable;",
          "",
          "    let formatter = &mut fmt::Formatter::default();",
          "    let state_iter = StartStateIter {",
          "        st: &dummy_table,",
          "        i: 0,",
          "    };",
          "",
          "    let _ = state_iter.fmt(formatter);",
          "    assert_eq!(formatter.to_string(), \"StartStateIter { i: 0 }\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct DummyStartTable;",
          "    let dummy_table = DummyStartTable;",
          "",
          "    let formatter = &mut fmt::Formatter::default();",
          "    let state_iter = StartStateIter {",
          "        st: &dummy_table,",
          "        i: usize::MAX,",
          "    };",
          "",
          "    let _ = state_iter.fmt(formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(state_iter.i, usize::MAX);",
          "    assert!(formatter.is_empty());",
          "    assert!(formatter.debug_struct(\"StartStateIter\").field(\"i\", &usize::MAX).finish().is_ok());",
          "    assert!(state_iter.fmt(formatter).is_ok());"
        ],
        "code": [
          "{",
          "    struct DummyStartTable;",
          "    let dummy_table = DummyStartTable;",
          "",
          "    let formatter = &mut fmt::Formatter::default();",
          "    let state_iter = StartStateIter {",
          "        st: &dummy_table,",
          "        i: usize::MAX,",
          "    };",
          "",
          "    let _ = state_iter.fmt(formatter);",
          "    assert_eq!(state_iter.i, usize::MAX);",
          "    assert!(formatter.is_empty());",
          "    assert!(formatter.debug_struct(\"StartStateIter\").field(\"i\", &usize::MAX).finish().is_ok());",
          "    assert!(state_iter.fmt(formatter).is_ok());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]