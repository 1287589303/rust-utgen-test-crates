[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let capacity = 1;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 1);",
          "    assert!(map.map.is_empty());",
          "    assert!(capacity > 0);"
        ],
        "code": [
          "{",
          "    let capacity = 1;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 1);",
          "    assert!(map.map.is_empty());",
          "    assert!(capacity > 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let capacity = 10;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, capacity);",
          "    assert_eq!(map.map.len(), 0);"
        ],
        "code": [
          "{",
          "    let capacity = 10;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, capacity);",
          "    assert_eq!(map.map.len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let capacity = 100;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 100);",
          "    assert_eq!(map.map, vec![]);"
        ],
        "code": [
          "{",
          "    let capacity = 100;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 100);",
          "    assert_eq!(map.map, vec![]);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let capacity = 1000;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 1000);",
          "    assert_eq!(map.map.len(), 0);"
        ],
        "code": [
          "{",
          "    let capacity = 1000;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, 1000);",
          "    assert_eq!(map.map.len(), 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let capacity = 10000;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, capacity);",
          "    assert!(map.map.is_empty());"
        ],
        "code": [
          "{",
          "    let capacity = 10000;",
          "    let map = Utf8SuffixMap::new(capacity);",
          "    assert_eq!(map.version, 0);",
          "    assert_eq!(map.capacity, capacity);",
          "    assert!(map.map.is_empty());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]