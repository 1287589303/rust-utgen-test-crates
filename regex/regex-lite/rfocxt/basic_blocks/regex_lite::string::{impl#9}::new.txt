[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &(*_1),
            StorageLive(_5),
            _5 = _2,
            StorageLive(_6),
            _6 = _3,
            _0 = string::Match::<'_> { haystack: move _4, start: move _5, end: move _6 },
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/string.rs:1507:6: 1507:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: string::Match<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1505:60: 1505:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/string.rs:1505:22: 1505:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/string.rs:1505:12: 1505:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/string.rs:1505:12: 1505:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1505:12: 1505:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/string.rs:1505:38: 1505:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/string.rs:1505:31: 1505:36 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/string.rs:1505:31: 1505:36 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1505:31: 1505:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/string.rs:1505:50: 1505:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/string.rs:1505:45: 1505:48 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/string.rs:1505:45: 1505:48 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1505:45: 1505:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1506:17: 1506:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1506:27: 1506:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/string.rs:1506:34: 1506:37 (#0),
            scope: scope[0],
        },
    },
]