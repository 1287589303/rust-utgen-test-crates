[
    BasicBlockData {
        statements: [
            PlaceMention((*_1)),
            _4 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:207:9: 207:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb8, 5: bb9, 6: bb10, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), (*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:208:13: 208:39 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:211:13: 211:49 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb16, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:220:13: 220:51 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb50, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = discriminant((((*_1) as Goto).1: core::option::Option<hir::Look>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:207:9: 207:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb6, 1: bb7, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:232:13: 232:47 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb94, imaginary: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:235:13: 235:53 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb98, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:238:13: 238:44 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb103, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:241:13: 241:24 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb108, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_204),
            _204 = &mut (*_2),
            StorageLive(_205),
            StorageLive(_206),
            StorageLive(_207),
            StorageLive(_208),
            _208 = [const "MATCH"],
            _207 = &_208,
            _206 = &(*_207),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#160),
                    scope: scope[0],
                },
                kind: _205 = core::fmt::Arguments::<'_>::new_const::<1>(move _206) -> [return: bb111, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = (((*_1) as Char).0: u32),
            StorageLive(_6),
            _6 = (((*_1) as Char).1: char),
            StorageLive(_7),
            _7 = &mut (*_2),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            StorageLive(_11),
            _11 = [const "", const " => "],
            _10 = &_11,
            _9 = &(*_10),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = &_6,
            _16 = &(*_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:209:28: 209:32 (#138),
                    scope: scope[1],
                },
                kind: _15 = core::fmt::rt::Argument::<'_>::new_debug::<char>(move _16) -> [return: bb12, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &_5,
            _19 = &(*_20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:209:36: 209:40 (#138),
                    scope: scope[1],
                },
                kind: _18 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _19) -> [return: bb13, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            _14 = [move _15, move _18],
            StorageDead(_18),
            StorageDead(_15),
            _13 = &_14,
            _12 = &(*_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#138),
                    scope: scope[1],
                },
                kind: _8 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _9, move _12) -> [return: bb14, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                    scope: scope[1],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _7, move _8) -> [return: bb15, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_8),
            StorageDead(_7),
            StorageDead(_20),
            StorageDead(_17),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_11),
            StorageDead(_10),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:210:13: 210:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            _21 = (((*_1) as Ranges).0: u32),
            StorageLive(_22),
            _22 = &(((*_1) as Ranges).1: alloc::vec::Vec<(char, char)>),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            StorageLive(_29),
            _29 = &(*_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:56 (#0),
                    scope: scope[2],
                },
                kind: _28 = <alloc::vec::Vec<(char, char)> as core::ops::Deref>::deref(move _29) -> [return: bb17, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = &(*_28),
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:56 (#0),
                    scope: scope[2],
                },
                kind: _26 = core::slice::<impl [(char, char)]>::iter(move _27) -> [return: bb18, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:68 (#0),
                    scope: scope[2],
                },
                kind: _25 = <core::slice::Iter<'_, (char, char)> as core::iter::Iterator>::enumerate(move _26) -> [return: bb19, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                    scope: scope[2],
                },
                kind: _24 = <core::iter::Enumerate<core::slice::Iter<'_, (char, char)>> as core::iter::IntoIterator>::into_iter(move _25) -> [return: bb20, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            PlaceMention(_24),
            StorageLive(_30),
            _30 = move _24,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
                    scope: scope[3],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
                    scope: scope[3],
                },
                kind: falseUnwind -> [real: bb22, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_32),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            _35 = &mut _30,
            _34 = &mut (*_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                    scope: scope[3],
                },
                kind: _33 = <core::iter::Enumerate<core::slice::Iter<'_, (char, char)>> as core::iter::Iterator>::next(move _34) -> [return: bb23, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
            PlaceMention(_33),
            _36 = discriminant(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                    scope: scope[3],
                },
                kind: switchInt(move _36) -> [0: bb25, 1: bb26, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                    scope: scope[3],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb27, imaginary: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_38),
            _38 = (((_33 as Some).0: (usize, &(char, char))).0: usize),
            StorageLive(_39),
            _39 = ((*(((_33 as Some).0: (usize, &(char, char))).1: &(char, char))).0: char),
            StorageLive(_40),
            _40 = ((*(((_33 as Some).0: (usize, &(char, char))).1: &(char, char))).1: char),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = _38,
            _42 = Gt(move _43, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:213:24: 213:29 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _42) -> [0: bb37, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = const (),
            StorageDead(_35),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_28),
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_82),
            _82 = (),
            _0 = core::result::Result::<(), core::fmt::Error>::Ok(move _82),
            StorageDead(_82),
            StorageDead(_22),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:219:13: 219:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageLive(_44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            _47 = &mut (*_2),
            StorageLive(_48),
            StorageLive(_49),
            StorageLive(_50),
            StorageLive(_51),
            _51 = [const ", "],
            _50 = &_51,
            _49 = &(*_50),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#140),
                    scope: scope[4],
                },
                kind: _48 = core::fmt::Arguments::<'_>::new_const::<1>(move _49) -> [return: bb29, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_49),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#139),
                    scope: scope[4],
                },
                kind: _46 = core::fmt::Formatter::<'_>::write_fmt(move _47, move _48) -> [return: bb30, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                    scope: scope[4],
                },
                kind: _45 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _46) -> [return: bb31, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            PlaceMention(_45),
            _52 = discriminant(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                    scope: scope[4],
                },
                kind: switchInt(move _52) -> [0: bb34, 1: bb33, otherwise: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb35, imaginary: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_56),
            _56 = ((_45 as Continue).0: ()),
            _44 = _56,
            StorageDead(_56),
            StorageDead(_51),
            StorageDead(_50),
            StorageDead(_45),
            StorageDead(_44),
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:213:21: 215:22 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_53),
            _53 = ((_45 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_55),
            _55 = _53,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                    scope: scope[6],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _55) -> [return: bb36, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_55),
            StorageDead(_53),
            StorageDead(_51),
            StorageDead(_50),
            StorageDead(_45),
            StorageDead(_44),
            StorageDead(_42),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb117,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            _41 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:213:21: 215:22 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb38,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_41),
            StorageLive(_57),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            _60 = &mut (*_2),
            StorageLive(_61),
            StorageLive(_62),
            StorageLive(_63),
            StorageLive(_64),
            _64 = [const "", const "-", const " => "],
            _63 = &_64,
            _62 = &(*_63),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            StorageLive(_68),
            StorageLive(_69),
            StorageLive(_70),
            _70 = &_39,
            _69 = &(*_70),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:32: 216:36 (#142),
                    scope: scope[4],
                },
                kind: _68 = core::fmt::rt::Argument::<'_>::new_debug::<char>(move _69) -> [return: bb39, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_69),
            StorageLive(_71),
            StorageLive(_72),
            StorageLive(_73),
            _73 = &_40,
            _72 = &(*_73),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:37: 216:41 (#142),
                    scope: scope[4],
                },
                kind: _71 = core::fmt::rt::Argument::<'_>::new_debug::<char>(move _72) -> [return: bb40, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &_21,
            _75 = &(*_76),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:45: 216:49 (#142),
                    scope: scope[4],
                },
                kind: _74 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _75) -> [return: bb41, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
            _67 = [move _68, move _71, move _74],
            StorageDead(_74),
            StorageDead(_71),
            StorageDead(_68),
            _66 = &_67,
            _65 = &(*_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#142),
                    scope: scope[4],
                },
                kind: _61 = core::fmt::Arguments::<'_>::new_v1::<3, 3>(move _62, move _65) -> [return: bb42, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
            StorageDead(_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#141),
                    scope: scope[4],
                },
                kind: _59 = core::fmt::Formatter::<'_>::write_fmt(move _60, move _61) -> [return: bb43, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                    scope: scope[4],
                },
                kind: _58 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _59) -> [return: bb44, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            PlaceMention(_58),
            _77 = discriminant(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                    scope: scope[4],
                },
                kind: switchInt(move _77) -> [0: bb47, 1: bb46, otherwise: bb45],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb48, imaginary: bb47],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_81),
            _81 = ((_58 as Continue).0: ()),
            _57 = _81,
            StorageDead(_81),
            StorageDead(_76),
            StorageDead(_73),
            StorageDead(_70),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_64),
            StorageDead(_63),
            StorageDead(_58),
            StorageDead(_57),
            _32 = const (),
            StorageDead(_40),
            StorageDead(_39),
            StorageDead(_38),
            StorageDead(_35),
            StorageDead(_33),
            StorageDead(_32),
            _31 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
                    scope: scope[3],
                },
                kind: goto -> bb21,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_78),
            _78 = ((_58 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_80),
            _80 = _78,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                    scope: scope[10],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _80) -> [return: bb49, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_80),
            StorageDead(_78),
            StorageDead(_76),
            StorageDead(_73),
            StorageDead(_70),
            StorageDead(_67),
            StorageDead(_66),
            StorageDead(_64),
            StorageDead(_63),
            StorageDead(_58),
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb117,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_83),
            _83 = &(((*_1) as Splits).0: alloc::vec::Vec<u32>),
            StorageLive(_84),
            _84 = (((*_1) as Splits).1: bool),
            StorageLive(_85),
            StorageLive(_86),
            StorageLive(_87),
            StorageLive(_88),
            _88 = &mut (*_2),
            StorageLive(_89),
            StorageLive(_90),
            StorageLive(_91),
            StorageLive(_92),
            _92 = [const "splits("],
            _91 = &_92,
            _90 = &(*_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#144),
                    scope: scope[13],
                },
                kind: _89 = core::fmt::Arguments::<'_>::new_const::<1>(move _90) -> [return: bb51, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#143),
                    scope: scope[13],
                },
                kind: _87 = core::fmt::Formatter::<'_>::write_fmt(move _88, move _89) -> [return: bb52, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_89),
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                    scope: scope[13],
                },
                kind: _86 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _87) -> [return: bb53, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_87),
            PlaceMention(_86),
            _93 = discriminant(_86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                    scope: scope[13],
                },
                kind: switchInt(move _93) -> [0: bb56, 1: bb55, otherwise: bb54],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _86),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                    scope: scope[13],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
                    scope: scope[13],
                },
                kind: falseEdge -> [real: bb57, imaginary: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_97),
            _97 = ((_86 as Continue).0: ()),
            _85 = _97,
            StorageDead(_97),
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_86),
            StorageDead(_85),
            StorageLive(_98),
            StorageLive(_99),
            StorageLive(_100),
            StorageLive(_101),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = &(*_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:40: 223:47 (#0),
                    scope: scope[13],
                },
                kind: _103 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _104) -> [return: bb59, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_94),
            _94 = ((_86 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_96),
            _96 = _94,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                    scope: scope[15],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _96) -> [return: bb58, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
            StorageDead(_94),
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_86),
            StorageDead(_85),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[13],
                },
                kind: goto -> bb116,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _102 = &(*_103),
            StorageDead(_104),
            StorageLive(_105),
            _105 = _84,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:57 (#0),
                    scope: scope[13],
                },
                kind: _101 = nfa::State::iter_splits(move _102, move _105) -> [return: bb60, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_102),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:69 (#0),
                    scope: scope[13],
                },
                kind: _100 = <impl core::iter::Iterator<Item = u32> + '_ as core::iter::Iterator>::enumerate(move _101) -> [return: bb61, unwind: bb122],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                    scope: scope[13],
                },
                kind: _99 = <core::iter::Enumerate<impl core::iter::Iterator<Item = u32> + '_> as core::iter::IntoIterator>::into_iter(move _100) -> [return: bb62, unwind: bb121],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            PlaceMention(_99),
            StorageLive(_106),
            _106 = move _99,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
                    scope: scope[18],
                },
                kind: goto -> bb63,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
                    scope: scope[18],
                },
                kind: falseUnwind -> [real: bb64, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_107),
            StorageLive(_108),
            StorageLive(_109),
            StorageLive(_110),
            _110 = &mut _106,
            _109 = &mut (*_110),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                    scope: scope[18],
                },
                kind: _108 = <core::iter::Enumerate<impl core::iter::Iterator<Item = u32> + '_> as core::iter::Iterator>::next(move _109) -> [return: bb65, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
            PlaceMention(_108),
            _111 = discriminant(_108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                    scope: scope[18],
                },
                kind: switchInt(move _111) -> [0: bb67, 1: bb68, otherwise: bb66],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _108),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                    scope: scope[18],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
                    scope: scope[18],
                },
                kind: falseEdge -> [real: bb69, imaginary: bb68],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_113),
            _113 = (((_108 as Some).0: (usize, u32)).0: usize),
            StorageLive(_114),
            _114 = (((_108 as Some).0: (usize, u32)).1: u32),
            StorageLive(_115),
            StorageLive(_116),
            StorageLive(_117),
            _117 = _113,
            _116 = Gt(move _117, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:225:24: 225:29 (#0),
                    scope: scope[19],
                },
                kind: switchInt(move _116) -> [0: bb79, otherwise: bb70],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _98 = const (),
            StorageDead(_110),
            StorageDead(_108),
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_106) -> [return: bb90, unwind: bb120],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
            StorageLive(_118),
            StorageLive(_119),
            StorageLive(_120),
            StorageLive(_121),
            _121 = &mut (*_2),
            StorageLive(_122),
            StorageLive(_123),
            StorageLive(_124),
            StorageLive(_125),
            _125 = [const ", "],
            _124 = &_125,
            _123 = &(*_124),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#146),
                    scope: scope[19],
                },
                kind: _122 = core::fmt::Arguments::<'_>::new_const::<1>(move _123) -> [return: bb71, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#145),
                    scope: scope[19],
                },
                kind: _120 = core::fmt::Formatter::<'_>::write_fmt(move _121, move _122) -> [return: bb72, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_122),
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                    scope: scope[19],
                },
                kind: _119 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _120) -> [return: bb73, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_120),
            PlaceMention(_119),
            _126 = discriminant(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                    scope: scope[19],
                },
                kind: switchInt(move _126) -> [0: bb76, 1: bb75, otherwise: bb74],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                    scope: scope[19],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb77, imaginary: bb76],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_130),
            _130 = ((_119 as Continue).0: ()),
            _118 = _130,
            StorageDead(_130),
            StorageDead(_125),
            StorageDead(_124),
            StorageDead(_119),
            StorageDead(_118),
            _115 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:225:21: 227:22 (#0),
                    scope: scope[19],
                },
                kind: goto -> bb80,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_127),
            _127 = ((_119 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_129),
            _129 = _127,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                    scope: scope[21],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _129) -> [return: bb78, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
            StorageDead(_127),
            StorageDead(_125),
            StorageDead(_124),
            StorageDead(_119),
            StorageDead(_118),
            StorageDead(_116),
            StorageDead(_115),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[19],
                },
                kind: goto -> bb113,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
            _115 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:225:21: 227:22 (#0),
                    scope: scope[19],
                },
                kind: goto -> bb80,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageDead(_115),
            StorageLive(_131),
            StorageLive(_132),
            StorageLive(_133),
            StorageLive(_134),
            _134 = &mut (*_2),
            StorageLive(_135),
            StorageLive(_136),
            StorageLive(_137),
            StorageLive(_138),
            _138 = [const ""],
            _137 = &_138,
            _136 = &(*_137),
            StorageLive(_139),
            StorageLive(_140),
            StorageLive(_141),
            StorageLive(_142),
            StorageLive(_143),
            StorageLive(_144),
            _144 = &_114,
            _143 = &(*_144),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:32: 228:36 (#148),
                    scope: scope[19],
                },
                kind: _142 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _143) -> [return: bb81, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
            _141 = [move _142],
            StorageDead(_142),
            _140 = &_141,
            _139 = &(*_140),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#148),
                    scope: scope[19],
                },
                kind: _135 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _136, move _139) -> [return: bb82, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            StorageDead(_136),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#147),
                    scope: scope[19],
                },
                kind: _133 = core::fmt::Formatter::<'_>::write_fmt(move _134, move _135) -> [return: bb83, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_134),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                    scope: scope[19],
                },
                kind: _132 = <core::result::Result<(), core::fmt::Error> as core::ops::Try>::branch(move _133) -> [return: bb84, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            PlaceMention(_132),
            _145 = discriminant(_132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                    scope: scope[19],
                },
                kind: switchInt(move _145) -> [0: bb87, 1: bb86, otherwise: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _132),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                    scope: scope[19],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
                    scope: scope[19],
                },
                kind: falseEdge -> [real: bb88, imaginary: bb87],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_149),
            _149 = ((_132 as Continue).0: ()),
            _131 = _149,
            StorageDead(_149),
            StorageDead(_144),
            StorageDead(_141),
            StorageDead(_140),
            StorageDead(_138),
            StorageDead(_137),
            StorageDead(_132),
            StorageDead(_131),
            _107 = const (),
            StorageDead(_114),
            StorageDead(_113),
            StorageDead(_110),
            StorageDead(_108),
            StorageDead(_107),
            _31 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
                    scope: scope[18],
                },
                kind: goto -> bb63,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_146),
            _146 = ((_132 as Break).0: core::result::Result<core::convert::Infallible, core::fmt::Error>),
            StorageLive(_148),
            _148 = _146,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                    scope: scope[25],
                },
                kind: _0 = <core::result::Result<(), core::fmt::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, core::fmt::Error>>>::from_residual(move _148) -> [return: bb89, unwind: bb119],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_148),
            StorageDead(_146),
            StorageDead(_144),
            StorageDead(_141),
            StorageDead(_140),
            StorageDead(_138),
            StorageDead(_137),
            StorageDead(_132),
            StorageDead(_131),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[19],
                },
                kind: goto -> bb113,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_99) -> [return: bb91, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            StorageDead(_99),
            StorageDead(_98),
            StorageLive(_150),
            _150 = &mut (*_2),
            StorageLive(_151),
            StorageLive(_152),
            StorageLive(_153),
            StorageLive(_154),
            _154 = [const ")"],
            _153 = &_154,
            _152 = &(*_153),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#150),
                    scope: scope[13],
                },
                kind: _151 = core::fmt::Arguments::<'_>::new_const::<1>(move _152) -> [return: bb92, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                    scope: scope[13],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _150, move _151) -> [return: bb93, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_151),
            StorageDead(_150),
            StorageDead(_154),
            StorageDead(_153),
            StorageDead(_84),
            StorageDead(_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:231:13: 231:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_155),
            _155 = (((*_1) as Goto).0: u32),
            StorageLive(_156),
            _156 = &mut (*_2),
            StorageLive(_157),
            StorageLive(_158),
            StorageLive(_159),
            StorageLive(_160),
            _160 = [const "goto(", const ")"],
            _159 = &_160,
            _158 = &(*_159),
            StorageLive(_161),
            StorageLive(_162),
            StorageLive(_163),
            StorageLive(_164),
            StorageLive(_165),
            StorageLive(_166),
            _166 = &_155,
            _165 = &(*_166),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:233:33: 233:37 (#152),
                    scope: scope[28],
                },
                kind: _164 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _165) -> [return: bb95, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
            _163 = [move _164],
            StorageDead(_164),
            _162 = &_163,
            _161 = &(*_162),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#152),
                    scope: scope[28],
                },
                kind: _157 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _158, move _161) -> [return: bb96, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
            StorageDead(_158),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                    scope: scope[28],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _156, move _157) -> [return: bb97, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_157),
            StorageDead(_156),
            StorageDead(_166),
            StorageDead(_163),
            StorageDead(_162),
            StorageDead(_160),
            StorageDead(_159),
            StorageDead(_155),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:234:13: 234:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_167),
            _167 = (((*_1) as Goto).0: u32),
            StorageLive(_168),
            _168 = (((((*_1) as Goto).1: core::option::Option<hir::Look>) as Some).0: hir::Look),
            StorageLive(_169),
            _169 = &mut (*_2),
            StorageLive(_170),
            StorageLive(_171),
            StorageLive(_172),
            StorageLive(_173),
            _173 = [const "", const " => "],
            _172 = &_173,
            _171 = &(*_172),
            StorageLive(_174),
            StorageLive(_175),
            StorageLive(_176),
            StorageLive(_177),
            StorageLive(_178),
            StorageLive(_179),
            _179 = &_168,
            _178 = &(*_179),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:236:28: 236:32 (#154),
                    scope: scope[29],
                },
                kind: _177 = core::fmt::rt::Argument::<'_>::new_debug::<hir::Look>(move _178) -> [return: bb99, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_178),
            StorageLive(_180),
            StorageLive(_181),
            StorageLive(_182),
            _182 = &_167,
            _181 = &(*_182),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:236:36: 236:40 (#154),
                    scope: scope[29],
                },
                kind: _180 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _181) -> [return: bb100, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_181),
            _176 = [move _177, move _180],
            StorageDead(_180),
            StorageDead(_177),
            _175 = &_176,
            _174 = &(*_175),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#154),
                    scope: scope[29],
                },
                kind: _170 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _171, move _174) -> [return: bb101, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_174),
            StorageDead(_171),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                    scope: scope[29],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _169, move _170) -> [return: bb102, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_170),
            StorageDead(_169),
            StorageDead(_182),
            StorageDead(_179),
            StorageDead(_176),
            StorageDead(_175),
            StorageDead(_173),
            StorageDead(_172),
            StorageDead(_168),
            StorageDead(_167),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:237:13: 237:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_183),
            _183 = (((*_1) as Capture).0: u32),
            StorageLive(_184),
            _184 = (((*_1) as Capture).1: u32),
            StorageLive(_185),
            _185 = &mut (*_2),
            StorageLive(_186),
            StorageLive(_187),
            StorageLive(_188),
            StorageLive(_189),
            _189 = [const "capture(slot=", const ") => "],
            _188 = &_189,
            _187 = &(*_188),
            StorageLive(_190),
            StorageLive(_191),
            StorageLive(_192),
            StorageLive(_193),
            StorageLive(_194),
            StorageLive(_195),
            _195 = &_184,
            _194 = &(*_195),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:239:41: 239:45 (#156),
                    scope: scope[30],
                },
                kind: _193 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _194) -> [return: bb104, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_194),
            StorageLive(_196),
            StorageLive(_197),
            StorageLive(_198),
            _198 = &_183,
            _197 = &(*_198),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:239:50: 239:54 (#156),
                    scope: scope[30],
                },
                kind: _196 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _197) -> [return: bb105, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_197),
            _192 = [move _193, move _196],
            StorageDead(_196),
            StorageDead(_193),
            _191 = &_192,
            _190 = &(*_191),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#156),
                    scope: scope[30],
                },
                kind: _186 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _187, move _190) -> [return: bb106, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_190),
            StorageDead(_187),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                    scope: scope[30],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _185, move _186) -> [return: bb107, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_186),
            StorageDead(_185),
            StorageDead(_198),
            StorageDead(_195),
            StorageDead(_192),
            StorageDead(_191),
            StorageDead(_189),
            StorageDead(_188),
            StorageDead(_184),
            StorageDead(_183),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:240:13: 240:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_199),
            _199 = &mut (*_2),
            StorageLive(_200),
            StorageLive(_201),
            StorageLive(_202),
            StorageLive(_203),
            _203 = [const "FAIL"],
            _202 = &_203,
            _201 = &(*_202),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#158),
                    scope: scope[0],
                },
                kind: _200 = core::fmt::Arguments::<'_>::new_const::<1>(move _201) -> [return: bb109, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_201),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#157),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _199, move _200) -> [return: bb110, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_200),
            StorageDead(_199),
            StorageDead(_203),
            StorageDead(_202),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:241:44: 241:45 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_206),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                    scope: scope[0],
                },
                kind: _0 = core::fmt::Formatter::<'_>::write_fmt(move _204, move _205) -> [return: bb112, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_205),
            StorageDead(_204),
            StorageDead(_208),
            StorageDead(_207),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:244:13: 244:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
            StorageDead(_113),
            StorageDead(_110),
            StorageDead(_108),
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_106) -> [return: bb114, unwind: bb120],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_106),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_99) -> [return: bb115, unwind: bb123],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            StorageDead(_99),
            StorageDead(_98),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[13],
                },
                kind: goto -> bb116,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_39),
            StorageDead(_38),
            StorageDead(_35),
            StorageDead(_33),
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_28),
            StorageDead(_24),
            StorageDead(_23),
            StorageDead(_22),
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb118,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:246:6: 246:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_106) -> [return: bb120, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:229:17: 229:18 (#543),
                    scope: scope[13],
                },
                kind: drop(_99) -> [return: bb123, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:68: 223:69 (#544),
                    scope: scope[13],
                },
                kind: drop(_100) -> [return: bb123, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:223:68: 223:69 (#0),
                    scope: scope[13],
                },
                kind: drop(_101) -> [return: bb123, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/nfa.rs:206:5: 246:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:206:56: 206:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} nfa::State,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:206:12: 206:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/nfa.rs:206:22: 206:51 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/nfa.rs:206:19: 206:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:206:19: 206:20 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:206:19: 206:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:232:41: 232:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:208:13: 208:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:208:13: 208:39 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:208:27: 208:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:208:13: 208:39 (#0),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:208:35: 208:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:24: 209:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:27: 209:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:27: 209:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:27: 209:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:28: 209:32 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:43: 209:45 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:43: 209:45 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:36: 209:40 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:47: 209:53 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#137),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:209:47: 209:53 (#138),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:211:13: 211:49 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:211:29: 211:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:211:13: 211:49 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<(char, char), alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:211:37: 211:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, (char, char)>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, (char, char)>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, (char, char)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(char, char)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [(char, char)],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<(char, char), alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _24,
                                ),
                                regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                    },
                ),
            ),
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, (char, char)>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:206:5: 246:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(usize, &'{erased} (char, char))>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::slice::Iter<'{erased}, (char, char)>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::slice::Iter<'{erased}, (char, char)>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:43: 212:68 (#534),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:17: 217:18 (#533),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _33,
                                ),
                                regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:212:21: 212:39 (#535),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:22: 212:23 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _33,
                                ),
                                regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:212:21: 212:39 (#535),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:27: 212:32 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _33,
                                ),
                                regex-lite/src/nfa.rs:212:43: 212:68 (#534),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:212:21: 212:39 (#535),
                    },
                ),
            ),
        ),
        ty: char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:212:34: 212:37 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:213:21: 215:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:213:24: 213:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:213:24: 213:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:25: 214:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#139),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:32: 214:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#140),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:35: 214:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:35: 214:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:35: 214:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _45,
                                ),
                                regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:40: 214:41 (#538),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _45,
                                ),
                                regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:214:25: 214:41 (#537),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:214:25: 214:41 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:21: 216:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#141),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:28: 216:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:31: 216:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:31: 216:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:31: 216:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:32: 216:36 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:52: 216:57 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:52: 216:57 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:37: 216:41 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:59: 216:62 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} char,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:59: 216:62 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:45: 216:49 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:64: 216:70 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:64: 216:70 (#142),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _58,
                                ),
                                regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:71: 216:72 (#540),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _58,
                                ),
                                regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:216:21: 216:72 (#539),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:216:21: 216:72 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:218:20: 218:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:220:13: 220:51 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:220:29: 220:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:220:13: 220:51 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:220:42: 220:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:17: 221:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#143),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:24: 221:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#144),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:27: 221:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:27: 221:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:27: 221:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _86,
                                ),
                                regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:37: 221:38 (#542),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _86,
                                ),
                                regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:221:17: 221:38 (#541),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:221:17: 221:38 (#0),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: Alias(
            Opaque,
            AliasTy {
                args: [
                    '{erased},
                ],
                def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:57 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:40: 223:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u32],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:40: 223:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} alloc::vec::Vec<u32, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:40: 223:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:49: 223:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _99,
                                ),
                                regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                    },
                ),
            ),
        ),
        ty: core::iter::Enumerate<Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[13],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(usize, u32)>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<Alias(Opaque, AliasTy { args: ['{erased}], def_id: DefId(0:1356 ~ regex_lite[fbae]::nfa::{impl#4}::iter_splits::{opaque#0}) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:223:21: 223:69 (#544),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:222:17: 229:18 (#543),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _108,
                                ),
                                regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:222:21: 222:29 (#545),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:222:22: 222:23 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _108,
                                ),
                                regex-lite/src/nfa.rs:223:21: 223:69 (#544),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:222:21: 222:29 (#545),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:222:25: 222:28 (#0),
            scope: scope[18],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:225:21: 227:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:225:24: 225:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:225:24: 225:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:25: 226:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#145),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:32: 226:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#146),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:35: 226:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:35: 226:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:35: 226:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _119,
                                ),
                                regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:40: 226:41 (#548),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _119,
                                ),
                                regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:226:25: 226:41 (#547),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:226:25: 226:41 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:21: 228:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::ControlFlow<core::result::Result<core::convert::Infallible, core::fmt::Error>, ()>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#147),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:28: 228:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:31: 228:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:31: 228:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:31: 228:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:32: 228:36 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:39: 228:42 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:39: 228:42 (#148),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _132,
                                ),
                                regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
                    },
                ),
            ),
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::convert::Infallible, core::fmt::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:43: 228:44 (#550),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _132,
                                ),
                                regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:228:21: 228:44 (#549),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:228:21: 228:44 (#0),
            scope: scope[19],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:230:24: 230:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#150),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:230:27: 230:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:230:27: 230:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#149),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:230:27: 230:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:232:13: 232:47 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:232:27: 232:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:24: 233:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:27: 233:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:27: 233:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:27: 233:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:33: 233:37 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:41: 233:47 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#151),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:233:41: 233:47 (#152),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:235:13: 235:53 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:235:27: 235:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:235:13: 235:53 (#0),
                    },
                ),
            ),
        ),
        ty: hir::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:235:46: 235:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:24: 236:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:27: 236:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:27: 236:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:27: 236:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:28: 236:32 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} hir::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:43: 236:47 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} hir::Look,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:43: 236:47 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:36: 236:40 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:49: 236:55 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#153),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:236:49: 236:55 (#154),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:238:13: 238:44 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:238:30: 238:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    (*_1),
                                ),
                                regex-lite/src/nfa.rs:207:15: 207:20 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/nfa.rs:238:13: 238:44 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:238:38: 238:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:24: 239:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:27: 239:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:27: 239:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: [&'{erased} str; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:27: 239:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: [core::fmt::rt::Argument<'{erased}>; 2_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:41: 239:45 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:57: 239:61 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:57: 239:61 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: core::fmt::rt::Argument<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:50: 239:54 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:63: 239:69 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#155),
                },
            ),
        ),
        ty: &'{erased} u32,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:239:63: 239:69 (#156),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/nfa.rs:207:9: 245:10 (#0),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:241:35: 241:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/nfa.rs:207:9: 245:10 (#0),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#158),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/nfa.rs:207:9: 245:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:241:38: 241:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/nfa.rs:207:9: 245:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:241:38: 241:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/nfa.rs:207:9: 245:10 (#0),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:241:38: 241:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                },
            ),
        ),
        ty: &'{erased} mut core::fmt::Formatter<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:243:24: 243:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                },
            ),
        ),
        ty: core::fmt::Arguments<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24: 632:54 (#160),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:243:27: 243:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                },
            ),
        ),
        ty: &'{erased} [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:243:27: 243:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9: 632:55 (#159),
                },
            ),
        ),
        ty: [&'{erased} str; 1_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/nfa.rs:243:27: 243:34 (#0),
            scope: scope[0],
        },
    },
]