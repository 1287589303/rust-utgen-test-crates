[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/int.rs:40:27: 40:48 (#0),
                    scope: scope[0],
                },
                kind: _3 = core::num::<impl usize>::wrapping_add(move _4, const 1_usize) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/int.rs:40:9: 40:49 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::num::NonZero::<usize>::new(move _3) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/int.rs:40:9: 40:66 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::option::Option::<core::num::NonZero<usize>>::map::<int::NonMaxUsize, fn(core::num::NonZero<usize>) -> int::NonMaxUsize {int::NonMaxUsize}>(move _2, int::NonMaxUsize) -> [return: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/int.rs:41:6: 41:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/int.rs:39:5: 41:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<int::NonMaxUsize>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/int.rs:39:40: 39:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/int.rs:39:30: 39:35 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/int.rs:39:23: 39:28 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/int.rs:39:23: 39:28 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/int.rs:39:23: 39:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/int.rs:40:9: 40:66 (#0),
                },
            ),
        ),
        ty: core::option::Option<core::num::NonZero<usize>>,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/int.rs:40:9: 40:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/int.rs:40:9: 40:66 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/int.rs:40:27: 40:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: regex-lite/src/int.rs:40:9: 40:66 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/int.rs:40:27: 40:32 (#0),
            scope: scope[0],
        },
    },
]