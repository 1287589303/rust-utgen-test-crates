[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:623:18: 623:35 (#0),
                    scope: scope[0],
                },
                kind: _3 = pikevm::SparseSet::new(const 0_usize) -> [return: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:624:25: 624:41 (#0),
                    scope: scope[0],
                },
                kind: _4 = pikevm::SlotTable::new() -> [return: bb2, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = pikevm::ActiveStates { set: move _3, slot_table: move _4 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:625:9: 625:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb3, unwind: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:625:9: 625:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut _2,
            StorageLive(_7),
            _7 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:626:9: 626:25 (#0),
                    scope: scope[1],
                },
                kind: _5 = pikevm::ActiveStates::reset(move _6, move _7) -> [return: bb5, unwind: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
            _0 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:628:5: 628:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:628:6: 628:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:628:5: 628:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:625:9: 625:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: regex-lite/src/pikevm.rs:621:5: 628:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:621:28: 621:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            regex-lite/src/pikevm.rs:621:16: 621:23 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/pikevm.rs:621:12: 621:14 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/pikevm.rs:621:12: 621:14 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:621:12: 621:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                regex-lite/src/pikevm.rs:622:26: 625:10 (#0),
                            ),
                        ),
                        pat_span: regex-lite/src/pikevm.rs:622:13: 622:23 (#0),
                    },
                ),
            ),
        ),
        ty: pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:622:13: 622:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: pikevm::SparseSet,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:623:18: 623:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: pikevm::SlotTable,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:624:25: 624:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:626:9: 626:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut pikevm::ActiveStates,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:626:9: 626:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} pikevm::PikeVM,
        user_ty: None,
        source_info: SourceInfo {
            span: regex-lite/src/pikevm.rs:626:22: 626:24 (#0),
            scope: scope[0],
        },
    },
]