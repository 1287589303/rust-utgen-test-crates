[
    "regex_lite::error::{impl#0}::new",
    "regex_lite::error::{impl#2}::fmt",
    "regex_lite::hir::escape",
    "regex_lite::hir::is_escapeable_character",
    "regex_lite::hir::is_meta_character",
    "regex_lite::hir::next_char",
    "regex_lite::hir::parse::check_hir_nesting",
    "regex_lite::hir::parse::check_hir_nesting::recurse",
    "regex_lite::hir::parse::into_class_item_range",
    "regex_lite::hir::parse::into_class_item_ranges",
    "regex_lite::hir::parse::is_capture_char",
    "regex_lite::hir::parse::is_hex",
    "regex_lite::hir::parse::posix_class",
    "regex_lite::hir::parse::tests::cap",
    "regex_lite::hir::parse::tests::class",
    "regex_lite::hir::parse::tests::named_cap",
    "regex_lite::hir::parse::tests::p",
    "regex_lite::hir::parse::tests::perr",
    "regex_lite::hir::parse::tests::posix",
    "regex_lite::hir::parse::tests::singles",
    "regex_lite::hir::parse::{impl#0}::add_capture_name",
    "regex_lite::hir::parse::{impl#0}::bump",
    "regex_lite::hir::parse::{impl#0}::bump_and_bump_space",
    "regex_lite::hir::parse::{impl#0}::bump_if",
    "regex_lite::hir::parse::{impl#0}::bump_space",
    "regex_lite::hir::parse::{impl#0}::char",
    "regex_lite::hir::parse::{impl#0}::decrement_depth",
    "regex_lite::hir::parse::{impl#0}::flags",
    "regex_lite::hir::parse::{impl#0}::increment_depth",
    "regex_lite::hir::parse::{impl#0}::is_done",
    "regex_lite::hir::parse::{impl#0}::is_lookaround_prefix",
    "regex_lite::hir::parse::{impl#0}::new",
    "regex_lite::hir::parse::{impl#0}::next_capture_index",
    "regex_lite::hir::parse::{impl#0}::pattern",
    "regex_lite::hir::parse::{impl#0}::peek",
    "regex_lite::hir::parse::{impl#0}::peek_space",
    "regex_lite::hir::parse::{impl#0}::pos",
    "regex_lite::hir::parse::{impl#1}::hir_anchor_end",
    "regex_lite::hir::parse::{impl#1}::hir_anchor_start",
    "regex_lite::hir::parse::{impl#1}::hir_char",
    "regex_lite::hir::parse::{impl#1}::hir_dot",
    "regex_lite::hir::parse::{impl#1}::maybe_parse_posix_class",
    "regex_lite::hir::parse::{impl#1}::maybe_parse_special_word_boundary",
    "regex_lite::hir::parse::{impl#1}::parse",
    "regex_lite::hir::parse::{impl#1}::parse_capture_name",
    "regex_lite::hir::parse::{impl#1}::parse_class",
    "regex_lite::hir::parse::{impl#1}::parse_class_item",
    "regex_lite::hir::parse::{impl#1}::parse_class_range",
    "regex_lite::hir::parse::{impl#1}::parse_counted_repetition",
    "regex_lite::hir::parse::{impl#1}::parse_decimal",
    "regex_lite::hir::parse::{impl#1}::parse_escape",
    "regex_lite::hir::parse::{impl#1}::parse_flag",
    "regex_lite::hir::parse::{impl#1}::parse_flags",
    "regex_lite::hir::parse::{impl#1}::parse_group",
    "regex_lite::hir::parse::{impl#1}::parse_hex",
    "regex_lite::hir::parse::{impl#1}::parse_hex_brace",
    "regex_lite::hir::parse::{impl#1}::parse_hex_digits",
    "regex_lite::hir::parse::{impl#1}::parse_inner",
    "regex_lite::hir::parse::{impl#1}::parse_perl_class",
    "regex_lite::hir::parse::{impl#1}::parse_primitive",
    "regex_lite::hir::parse::{impl#1}::parse_uncounted_repetition",
    "regex_lite::hir::prev_char",
    "regex_lite::hir::{impl#0}::default",
    "regex_lite::hir::{impl#1}::alternation",
    "regex_lite::hir::{impl#1}::capture",
    "regex_lite::hir::{impl#1}::char",
    "regex_lite::hir::{impl#1}::class",
    "regex_lite::hir::{impl#1}::concat",
    "regex_lite::hir::{impl#1}::empty",
    "regex_lite::hir::{impl#1}::fail",
    "regex_lite::hir::{impl#1}::is_match_empty",
    "regex_lite::hir::{impl#1}::is_start_anchored",
    "regex_lite::hir::{impl#1}::kind",
    "regex_lite::hir::{impl#1}::look",
    "regex_lite::hir::{impl#1}::parse",
    "regex_lite::hir::{impl#1}::repetition",
    "regex_lite::hir::{impl#1}::static_explicit_captures_len",
    "regex_lite::hir::{impl#2}::subs",
    "regex_lite::hir::{impl#3}::ascii_case_fold",
    "regex_lite::hir::{impl#3}::canonicalize",
    "regex_lite::hir::{impl#3}::is_canonical",
    "regex_lite::hir::{impl#3}::negate",
    "regex_lite::hir::{impl#3}::new",
    "regex_lite::hir::{impl#4}::ascii_case_fold",
    "regex_lite::hir::{impl#4}::is_contiguous",
    "regex_lite::hir::{impl#4}::is_intersection_empty",
    "regex_lite::hir::{impl#4}::union",
    "regex_lite::hir::{impl#5}::is_match",
    "regex_lite::hir::{impl#6}::drop",
    "regex_lite::int::U32::as_usize",
    "regex_lite::int::{impl#0}::as_usize",
    "regex_lite::int::{impl#1}::get",
    "regex_lite::int::{impl#1}::new",
    "regex_lite::int::{impl#2}::fmt",
    "regex_lite::interpolate::find_cap_ref",
    "regex_lite::interpolate::find_cap_ref_braced",
    "regex_lite::interpolate::is_valid_cap_letter",
    "regex_lite::interpolate::string",
    "regex_lite::interpolate::{impl#0}::from",
    "regex_lite::interpolate::{impl#1}::from",
    "regex_lite::nfa::{impl#0}::default",
    "regex_lite::nfa::{impl#1}::capture_names",
    "regex_lite::nfa::{impl#1}::group_len",
    "regex_lite::nfa::{impl#1}::is_start_anchored",
    "regex_lite::nfa::{impl#1}::len",
    "regex_lite::nfa::{impl#1}::memory_usage",
    "regex_lite::nfa::{impl#1}::new",
    "regex_lite::nfa::{impl#1}::pattern",
    "regex_lite::nfa::{impl#1}::start",
    "regex_lite::nfa::{impl#1}::state",
    "regex_lite::nfa::{impl#1}::static_explicit_captures_len",
    "regex_lite::nfa::{impl#1}::to_index",
    "regex_lite::nfa::{impl#2}::fmt",
    "regex_lite::nfa::{impl#3}::next",
    "regex_lite::nfa::{impl#4}::iter_splits",
    "regex_lite::nfa::{impl#4}::memory_usage",
    "regex_lite::nfa::{impl#5}::fmt",
    "regex_lite::nfa::{impl#6}::add",
    "regex_lite::nfa::{impl#6}::add_empty",
    "regex_lite::nfa::{impl#6}::c",
    "regex_lite::nfa::{impl#6}::c_alternation",
    "regex_lite::nfa::{impl#6}::c_at_least",
    "regex_lite::nfa::{impl#6}::c_bounded",
    "regex_lite::nfa::{impl#6}::c_capture",
    "regex_lite::nfa::{impl#6}::c_char",
    "regex_lite::nfa::{impl#6}::c_class",
    "regex_lite::nfa::{impl#6}::c_concat",
    "regex_lite::nfa::{impl#6}::c_empty",
    "regex_lite::nfa::{impl#6}::c_exactly",
    "regex_lite::nfa::{impl#6}::c_fail",
    "regex_lite::nfa::{impl#6}::c_look",
    "regex_lite::nfa::{impl#6}::c_repetition",
    "regex_lite::nfa::{impl#6}::c_zero_or_one",
    "regex_lite::nfa::{impl#6}::check_size_limit",
    "regex_lite::nfa::{impl#6}::compile",
    "regex_lite::nfa::{impl#6}::new",
    "regex_lite::nfa::{impl#6}::patch",
    "regex_lite::pikevm::{impl#0}::captures_iter",
    "regex_lite::pikevm::{impl#0}::epsilon_closure",
    "regex_lite::pikevm::{impl#0}::epsilon_closure_explore",
    "regex_lite::pikevm::{impl#0}::find_iter",
    "regex_lite::pikevm::{impl#0}::new",
    "regex_lite::pikevm::{impl#0}::next",
    "regex_lite::pikevm::{impl#0}::nexts",
    "regex_lite::pikevm::{impl#0}::nfa",
    "regex_lite::pikevm::{impl#0}::search",
    "regex_lite::pikevm::{impl#1}::next",
    "regex_lite::pikevm::{impl#2}::handle_overlapping_empty_match",
    "regex_lite::pikevm::{impl#3}::next",
    "regex_lite::pikevm::{impl#4}::new",
    "regex_lite::pikevm::{impl#4}::setup_search",
    "regex_lite::pikevm::{impl#5}::new",
    "regex_lite::pikevm::{impl#5}::reset",
    "regex_lite::pikevm::{impl#5}::setup_search",
    "regex_lite::pikevm::{impl#6}::all_absent",
    "regex_lite::pikevm::{impl#6}::for_state",
    "regex_lite::pikevm::{impl#6}::new",
    "regex_lite::pikevm::{impl#6}::reset",
    "regex_lite::pikevm::{impl#6}::setup_search",
    "regex_lite::pikevm::{impl#7}::capacity",
    "regex_lite::pikevm::{impl#7}::clear",
    "regex_lite::pikevm::{impl#7}::contains",
    "regex_lite::pikevm::{impl#7}::insert",
    "regex_lite::pikevm::{impl#7}::is_empty",
    "regex_lite::pikevm::{impl#7}::iter",
    "regex_lite::pikevm::{impl#7}::len",
    "regex_lite::pikevm::{impl#7}::new",
    "regex_lite::pikevm::{impl#7}::resize",
    "regex_lite::pikevm::{impl#8}::fmt",
    "regex_lite::pikevm::{impl#9}::next",
    "regex_lite::pool::{impl#1}::new",
    "regex_lite::pool::{impl#2}::get",
    "regex_lite::pool::{impl#2}::put_value",
    "regex_lite::pool::{impl#3}::fmt",
    "regex_lite::pool::{impl#4}::drop",
    "regex_lite::pool::{impl#5}::deref",
    "regex_lite::pool::{impl#6}::deref_mut",
    "regex_lite::pool::{impl#7}::fmt",
    "regex_lite::string::Replacer::by_ref",
    "regex_lite::string::Replacer::no_expansion",
    "regex_lite::string::Replacer::replace_append",
    "regex_lite::string::no_expansion",
    "regex_lite::string::{impl#0}::clone",
    "regex_lite::string::{impl#10}::fmt",
    "regex_lite::string::{impl#11}::from",
    "regex_lite::string::{impl#12}::from",
    "regex_lite::string::{impl#13}::expand",
    "regex_lite::string::{impl#13}::extract",
    "regex_lite::string::{impl#13}::get",
    "regex_lite::string::{impl#13}::iter",
    "regex_lite::string::{impl#13}::len",
    "regex_lite::string::{impl#13}::name",
    "regex_lite::string::{impl#14}::fmt",
    "regex_lite::string::{impl#14}::fmt::{impl#0}::fmt",
    "regex_lite::string::{impl#14}::fmt::{impl#1}::fmt",
    "regex_lite::string::{impl#14}::fmt::{impl#2}::fmt",
    "regex_lite::string::{impl#15}::index",
    "regex_lite::string::{impl#16}::index",
    "regex_lite::string::{impl#17}::get",
    "regex_lite::string::{impl#17}::len",
    "regex_lite::string::{impl#18}::count",
    "regex_lite::string::{impl#18}::next",
    "regex_lite::string::{impl#1}::fmt",
    "regex_lite::string::{impl#20}::count",
    "regex_lite::string::{impl#20}::next",
    "regex_lite::string::{impl#22}::next",
    "regex_lite::string::{impl#24}::next",
    "regex_lite::string::{impl#24}::size_hint",
    "regex_lite::string::{impl#26}::count",
    "regex_lite::string::{impl#26}::next",
    "regex_lite::string::{impl#26}::size_hint",
    "regex_lite::string::{impl#29}::count",
    "regex_lite::string::{impl#29}::next",
    "regex_lite::string::{impl#29}::size_hint",
    "regex_lite::string::{impl#2}::fmt",
    "regex_lite::string::{impl#32}::no_expansion",
    "regex_lite::string::{impl#32}::replace_append",
    "regex_lite::string::{impl#33}::no_expansion",
    "regex_lite::string::{impl#33}::replace_append",
    "regex_lite::string::{impl#34}::no_expansion",
    "regex_lite::string::{impl#34}::replace_append",
    "regex_lite::string::{impl#35}::no_expansion",
    "regex_lite::string::{impl#35}::replace_append",
    "regex_lite::string::{impl#36}::no_expansion",
    "regex_lite::string::{impl#36}::replace_append",
    "regex_lite::string::{impl#37}::replace_append",
    "regex_lite::string::{impl#38}::no_expansion",
    "regex_lite::string::{impl#38}::replace_append",
    "regex_lite::string::{impl#39}::no_expansion",
    "regex_lite::string::{impl#39}::replace_append",
    "regex_lite::string::{impl#3}::from_str",
    "regex_lite::string::{impl#40}::build",
    "regex_lite::string::{impl#40}::case_insensitive",
    "regex_lite::string::{impl#40}::crlf",
    "regex_lite::string::{impl#40}::dot_matches_new_line",
    "regex_lite::string::{impl#40}::ignore_whitespace",
    "regex_lite::string::{impl#40}::multi_line",
    "regex_lite::string::{impl#40}::nest_limit",
    "regex_lite::string::{impl#40}::new",
    "regex_lite::string::{impl#40}::size_limit",
    "regex_lite::string::{impl#40}::swap_greed",
    "regex_lite::string::{impl#4}::try_from",
    "regex_lite::string::{impl#5}::try_from",
    "regex_lite::string::{impl#6}::captures",
    "regex_lite::string::{impl#6}::captures_iter",
    "regex_lite::string::{impl#6}::find",
    "regex_lite::string::{impl#6}::find_iter",
    "regex_lite::string::{impl#6}::is_match",
    "regex_lite::string::{impl#6}::new",
    "regex_lite::string::{impl#6}::replace",
    "regex_lite::string::{impl#6}::replace_all",
    "regex_lite::string::{impl#6}::replacen",
    "regex_lite::string::{impl#6}::split",
    "regex_lite::string::{impl#6}::splitn",
    "regex_lite::string::{impl#7}::captures_at",
    "regex_lite::string::{impl#7}::captures_read",
    "regex_lite::string::{impl#7}::captures_read_at",
    "regex_lite::string::{impl#7}::find_at",
    "regex_lite::string::{impl#7}::is_match_at",
    "regex_lite::string::{impl#7}::shortest_match",
    "regex_lite::string::{impl#7}::shortest_match_at",
    "regex_lite::string::{impl#8}::as_str",
    "regex_lite::string::{impl#8}::capture_locations",
    "regex_lite::string::{impl#8}::capture_names",
    "regex_lite::string::{impl#8}::captures_len",
    "regex_lite::string::{impl#8}::static_captures_len",
    "regex_lite::string::{impl#9}::as_str",
    "regex_lite::string::{impl#9}::end",
    "regex_lite::string::{impl#9}::is_empty",
    "regex_lite::string::{impl#9}::len",
    "regex_lite::string::{impl#9}::new",
    "regex_lite::string::{impl#9}::range",
    "regex_lite::string::{impl#9}::start",
    "regex_lite::utf8::decode",
    "regex_lite::utf8::decode_lossy",
    "regex_lite::utf8::decode_step",
    "regex_lite::utf8::is_word_byte",
    "regex_lite::utf8::is_word_byte::mkwordset",
]