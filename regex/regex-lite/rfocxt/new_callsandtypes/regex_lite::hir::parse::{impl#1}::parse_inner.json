{"mod_name":"hir::parse","calls":["<core::result::Result<u32, error::Error> as core::ops::Try>::branch","<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","core::cell::Cell::<core::option::Option<char>>::get","hir::Hir::concat","hir::parse::Parser::<'_>::parse_class","alloc::vec::Vec::<hir::Hir>::new","hir::parse::Parser::<'_>::parse_group","hir::parse::Parser::<'_>::parse_uncounted_repetition","hir::parse::Parser::<'_>::is_done","<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","hir::parse::Parser::<'_>::bump","error::Error::new","<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","hir::parse::Parser::<'_>::parse_counted_repetition","hir::parse::Parser::<'_>::bump_space","<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","core::cell::RefCell::<hir::Flags>::borrow","hir::parse::Parser::<'_>::increment_depth","<core::option::Option<char> as core::cmp::PartialEq>::ne","core::mem::take::<alloc::vec::Vec<hir::Hir>>","<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","alloc::vec::Vec::<hir::Hir>::push","<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","hir::parse::Parser::<'_>::decrement_depth","hir::parse::Parser::<'_>::parse_primitive","core::cell::RefCell::<hir::Flags>::borrow_mut","hir::Hir::alternation","hir::parse::Parser::<'_>::char","regex_lite::hir::parse::Parser::parse_inner","hir::parse::Parser::is_done","hir::parse::Parser::bump_space","hir::parse::Parser::parse_group","core::cell::Cell>::get","hir::parse::Parser::parse_counted_repetition","core::cell::RefCell::borrow_mut","hir::parse::Parser::parse_class","hir::parse::Parser::char","alloc::vec::Vec::push","core::cell::RefCell::borrow","alloc::vec::Vec::new","hir::parse::Parser::increment_depth","hir::parse::Parser::decrement_depth","hir::parse::Parser::bump","hir::parse::Parser::parse_primitive","core::mem::take>","hir::parse::Parser::parse_uncounted_repetition","regex_lite::utf8::is_word_byte::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::error::alloc::vec::Vec::push","regex_lite::utf8::is_word_byte::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#6}::drop::core::mem::take>","regex_lite::utf8::tests::core::cell::RefCell::borrow","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::char","regex_lite::utf8::tests::alloc::vec::Vec::push","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::char","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::parse::alloc::vec::Vec::push","regex_lite::hir::{impl#5}::is_match::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::bump_space","regex_lite::int::core::cell::Cell>::get","regex_lite::nfa::core::mem::take>","regex_lite::int::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::int::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::interpolate::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::{impl#6}::drop::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::increment_depth","regex_lite::hir::parse::hir::parse::Parser::<'_>::is_done","regex_lite::utf8::tests::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::utf8::hir::parse::Parser::parse_counted_repetition","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::is_done","regex_lite::error::core::cell::Cell>::get","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::pikevm::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::bump","regex_lite::utf8::is_word_byte::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::decrement_depth","regex_lite::utf8::tests::hir::parse::Parser::decrement_depth","regex_lite::hir::hir::parse::Parser::bump","regex_lite::nfa::hir::parse::Parser::bump_space","regex_lite::hir::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::parse_class","regex_lite::interpolate::hir::parse::Parser::increment_depth","regex_lite::core::mem::take>","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::parse::Parser::parse_group","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::bump","regex_lite::string::alloc::vec::Vec::new","regex_lite::hir::parse::tests::hir::parse::Parser::parse_counted_repetition","regex_lite::interpolate::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::{impl#3}::negate::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::int::hir::parse::Parser::<'_>::parse_class","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::error::Error::new","regex_lite::error::core::cell::RefCell::borrow","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::bump","regex_lite::int::core::mem::take>","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::decrement_depth","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::string::hir::parse::Parser::<'_>::increment_depth","regex_lite::hir::parse::Parser::increment_depth","regex_lite::hir::hir::parse::Parser::is_done","regex_lite::pikevm::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::nfa::hir::parse::Parser::decrement_depth","regex_lite::hir::parse::tests::core::mem::take>","regex_lite::string::{impl#14}::fmt::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::Parser::<'_>::is_done","regex_lite::utf8::is_word_byte::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::char","regex_lite::utf8::hir::parse::Parser::<'_>::bump_space","regex_lite::interpolate::alloc::vec::Vec::new","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::new","regex_lite::utf8::is_word_byte::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::char","regex_lite::utf8::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::int::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::hir::parse::Parser::<'_>::is_done","regex_lite::pikevm::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::parse::tests::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::parse::tests::hir::parse::Parser::parse_group","regex_lite::nfa::hir::parse::Parser::<'_>::bump","regex_lite::utf8::hir::parse::Parser::is_done","regex_lite::utf8::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::utf8::decode_step::alloc::vec::Vec::<hir::Hir>::new","regex_lite::string::hir::parse::Parser::<'_>::char","regex_lite::utf8::is_word_byte::hir::parse::Parser::char","regex_lite::utf8::tests::hir::parse::Parser::is_done","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::{impl#3}::negate::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::nfa::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<hir::Hir>::push","regex_lite::utf8::decode_step::hir::parse::Parser::char","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::tests::hir::parse::Parser::decrement_depth","regex_lite::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::interpolate::core::cell::Cell>::get","regex_lite::utf8::decode_step::core::cell::Cell>::get","regex_lite::interpolate::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::increment_depth","regex_lite::error::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::decrement_depth","regex_lite::utf8::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::borrow_mut","regex_lite::hir::hir::parse::Parser::parse_uncounted_repetition","regex_lite::string::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::parse::Parser::parse_uncounted_repetition","regex_lite::utf8::is_word_byte::hir::parse::Parser::parse_group","regex_lite::error::hir::parse::Parser::<'_>::bump","regex_lite::utf8::alloc::vec::Vec::new","regex_lite::interpolate::hir::parse::Parser::<'_>::bump","regex_lite::utf8::is_word_byte::hir::parse::Parser::is_done","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#5}::is_match::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::nfa::alloc::vec::Vec::<hir::Hir>::push","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::bump_space","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::is_done","regex_lite::hir::parse::tests::core::cell::RefCell::borrow","regex_lite::pikevm::hir::Hir::concat","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::string::{impl#14}::fmt::core::mem::take>","regex_lite::hir::parse::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::parse_uncounted_repetition","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::bump_space","regex_lite::utf8::tests::alloc::vec::Vec::new","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::char","regex_lite::utf8::tests::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::bump_space","regex_lite::string::{impl#14}::fmt::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pool::hir::parse::Parser::char","regex_lite::int::hir::parse::Parser::increment_depth","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::parse_primitive","regex_lite::utf8::tests::error::Error::new","regex_lite::hir::parse::check_hir_nesting::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::int::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::nfa::core::cell::RefCell::borrow","regex_lite::hir::{impl#2}::subs::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::string::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::bump_space","regex_lite::utf8::decode_step::core::cell::RefCell::borrow","regex_lite::hir::{impl#5}::is_match::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::new","regex_lite::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::tests::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::nfa::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::parse::check_hir_nesting::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::string::hir::parse::Parser::<'_>::is_done","regex_lite::hir::parse::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::increment_depth","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::core::cell::RefCell::borrow_mut","regex_lite::interpolate::hir::parse::Parser::bump_space","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::borrow","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::hir::parse::Parser::decrement_depth","regex_lite::int::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::parse_uncounted_repetition","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::parse_class","regex_lite::nfa::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::hir::parse::Parser::<'_>::is_done","regex_lite::hir::parse::hir::parse::Parser::<'_>::parse_primitive","regex_lite::pikevm::hir::Hir::alternation","regex_lite::int::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::error::hir::parse::Parser::bump","regex_lite::utf8::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::nfa::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::is_word_byte::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::string::{impl#14}::fmt::hir::Hir::concat","regex_lite::pikevm::core::cell::Cell>::get","regex_lite::utf8::hir::parse::Parser::bump_space","regex_lite::int::hir::parse::Parser::char","regex_lite::string::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::parse::tests::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::string::{impl#14}::fmt::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::error::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pikevm::hir::parse::Parser::<'_>::is_done","regex_lite::hir::parse::tests::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::{impl#5}::is_match::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::parse::tests::alloc::vec::Vec::new","regex_lite::utf8::tests::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::pikevm::hir::parse::Parser::char","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::error::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::pool::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::{impl#3}::negate::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::parse_class","regex_lite::string::{impl#14}::fmt::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<hir::Hir>::new","regex_lite::pikevm::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::parse_primitive","regex_lite::string::{impl#14}::fmt::core::cell::Cell>::get","regex_lite::utf8::decode_step::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::parse_group","regex_lite::utf8::tests::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::check_hir_nesting::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::string::hir::parse::Parser::parse_class","regex_lite::pikevm::hir::parse::Parser::parse_class","regex_lite::utf8::is_word_byte::hir::Hir::alternation","regex_lite::utf8::decode_step::hir::parse::Parser::increment_depth","regex_lite::interpolate::hir::Hir::concat","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::increment_depth","regex_lite::hir::parse::Parser::<'_>::char","regex_lite::hir::parse::check_hir_nesting::core::cell::Cell>::get","regex_lite::interpolate::hir::parse::Parser::parse_class","regex_lite::string::{impl#14}::fmt::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::increment_depth","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::bump","regex_lite::int::hir::parse::Parser::bump","regex_lite::int::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::tests::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::parse_group","regex_lite::hir::parse::hir::parse::Parser::parse_primitive","regex_lite::interpolate::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::is_done","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::char","regex_lite::utf8::decode_step::hir::parse::Parser::parse_group","regex_lite::hir::parse::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::alloc::vec::Vec::push","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#6}::drop::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::push","regex_lite::hir::parse::Parser::bump_space","regex_lite::hir::parse::tests::hir::parse::Parser::is_done","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::new","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::parse::Parser::bump","regex_lite::hir::parse::Parser::char","regex_lite::utf8::tests::hir::parse::Parser::parse_uncounted_repetition","regex_lite::error::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::nfa::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::push","regex_lite::string::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::utf8::is_word_byte::error::Error::new","regex_lite::hir::parse::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#6}::drop::error::Error::new","regex_lite::pool::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::{impl#6}::drop::hir::Hir::alternation","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#2}::subs::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::interpolate::hir::parse::Parser::char","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::parse_primitive","regex_lite::error::hir::parse::Parser::is_done","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::parse::tests::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::utf8::decode_step::hir::parse::Parser::parse_class","regex_lite::hir::{impl#2}::subs::core::cell::Cell>::get","regex_lite::interpolate::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::parse_uncounted_repetition","regex_lite::hir::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::char","regex_lite::hir::parse::hir::parse::Parser::increment_depth","regex_lite::hir::{impl#3}::negate::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::core::cell::RefCell::borrow_mut","regex_lite::interpolate::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::tests::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::tests::hir::parse::Parser::<'_>::bump","regex_lite::hir::parse::Parser::<'_>::increment_depth","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::parse_class","regex_lite::nfa::hir::parse::Parser::parse_primitive","regex_lite::pool::core::mem::take>","regex_lite::core::cell::RefCell::borrow_mut","regex_lite::hir::{impl#3}::negate::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::decode_step::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::parse::tests::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::pool::hir::parse::Parser::is_done","regex_lite::pool::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::pool::hir::parse::Parser::parse_group","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::borrow","regex_lite::pool::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::interpolate::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::{impl#3}::negate::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::utf8::is_word_byte::regex_lite::hir::parse::Parser::parse_inner","regex_lite::int::hir::parse::Parser::bump_space","regex_lite::utf8::hir::parse::Parser::parse_class","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::is_done","regex_lite::utf8::is_word_byte::alloc::vec::Vec::new","regex_lite::utf8::hir::parse::Parser::increment_depth","regex_lite::interpolate::hir::parse::Parser::parse_primitive","regex_lite::int::alloc::vec::Vec::push","regex_lite::int::hir::parse::Parser::<'_>::char","regex_lite::string::hir::parse::Parser::parse_group","regex_lite::utf8::core::cell::RefCell::borrow","regex_lite::nfa::hir::parse::Parser::<'_>::parse_primitive","regex_lite::interpolate::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::is_word_byte::hir::parse::Parser::parse_uncounted_repetition","regex_lite::utf8::is_word_byte::hir::parse::Parser::bump_space","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#5}::is_match::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::decode_step::hir::Hir::alternation","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::is_done","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::parse::core::cell::Cell>::get","regex_lite::utf8::tests::hir::parse::Parser::parse_counted_repetition","regex_lite::nfa::core::cell::Cell>::get","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::{impl#6}::drop::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::hir::parse::Parser::char","regex_lite::error::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#6}::drop::regex_lite::hir::parse::Parser::parse_inner","regex_lite::interpolate::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::parse::tests::alloc::vec::Vec::<hir::Hir>::push","regex_lite::utf8::decode_step::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::utf8::is_word_byte::hir::parse::Parser::bump","regex_lite::hir::parse::tests::hir::parse::Parser::bump_space","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::is_done","regex_lite::string::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::error::alloc::vec::Vec::<hir::Hir>::push","regex_lite::pool::hir::parse::Parser::increment_depth","regex_lite::pool::regex_lite::hir::parse::Parser::parse_inner","regex_lite::pool::alloc::vec::Vec::<hir::Hir>::push","regex_lite::error::alloc::vec::Vec::<hir::Hir>::new","regex_lite::pool::hir::Hir::concat","regex_lite::interpolate::hir::parse::Parser::<'_>::char","regex_lite::pool::hir::parse::Parser::decrement_depth","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::bump_space","regex_lite::hir::hir::parse::Parser::increment_depth","regex_lite::hir::hir::parse::Parser::parse_group","regex_lite::hir::{impl#5}::is_match::hir::Hir::concat","regex_lite::hir::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::parse::hir::parse::Parser::<'_>::parse_group","regex_lite::utf8::decode_step::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::nfa::hir::parse::Parser::parse_uncounted_repetition","regex_lite::int::hir::parse::Parser::<'_>::parse_primitive","regex_lite::pikevm::alloc::vec::Vec::push","regex_lite::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::is_done","regex_lite::hir::parse::tests::hir::Hir::alternation","regex_lite::pikevm::hir::parse::Parser::<'_>::parse_group","regex_lite::nfa::alloc::vec::Vec::push","regex_lite::int::hir::Hir::concat","regex_lite::hir::parse::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::string::{impl#14}::fmt::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::bump","regex_lite::pikevm::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::borrow","regex_lite::utf8::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::{impl#5}::is_match::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::hir::parse::Parser::<'_>::parse_primitive","regex_lite::string::core::cell::RefCell::borrow","regex_lite::hir::{impl#3}::negate::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::pool::hir::parse::Parser::parse_primitive","regex_lite::hir::parse::tests::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#3}::negate::error::Error::new","regex_lite::pool::hir::parse::Parser::<'_>::parse_primitive","regex_lite::error::hir::parse::Parser::<'_>::bump_space","regex_lite::error::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::parse::tests::hir::parse::Parser::parse_class","regex_lite::pool::hir::parse::Parser::<'_>::char","regex_lite::hir::parse::tests::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::interpolate::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::alloc::vec::Vec::<hir::Hir>::push","regex_lite::utf8::is_word_byte::core::cell::RefCell::borrow_mut","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::decrement_depth","regex_lite::error::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::pool::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::hir::parse::Parser::parse_group","regex_lite::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::error::hir::parse::Parser::parse_counted_repetition","regex_lite::utf8::tests::core::cell::RefCell::borrow_mut","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::{impl#2}::subs::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::string::hir::parse::Parser::bump","regex_lite::error::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::tests::hir::Hir::alternation","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::parse_group","regex_lite::nfa::hir::Hir::alternation","regex_lite::int::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::parse::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::parse::check_hir_nesting::hir::Hir::alternation","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::increment_depth","regex_lite::hir::parse::tests::hir::parse::Parser::parse_uncounted_repetition","regex_lite::int::hir::parse::Parser::parse_class","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::{impl#3}::negate::core::cell::Cell>::get","regex_lite::int::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::parse::tests::error::Error::new","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::increment_depth","regex_lite::string::hir::Hir::alternation","regex_lite::utf8::hir::parse::Parser::parse_group","regex_lite::nfa::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::string::{impl#14}::fmt::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::utf8::core::cell::Cell>::get","regex_lite::pikevm::hir::parse::Parser::parse_uncounted_repetition","regex_lite::error::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::is_word_byte::hir::parse::Parser::increment_depth","regex_lite::utf8::tests::hir::Hir::concat","regex_lite::nfa::hir::parse::Parser::<'_>::parse_group","regex_lite::interpolate::core::mem::take>","regex_lite::nfa::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::nfa::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::pikevm::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#6}::drop::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::parse_group","regex_lite::hir::{impl#2}::subs::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::bump_space","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::decrement_depth","regex_lite::error::hir::parse::Parser::<'_>::char","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::is_done","regex_lite::pool::hir::parse::Parser::parse_class","regex_lite::pool::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::interpolate::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#3}::negate::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pool::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::tests::hir::parse::Parser::parse_primitive","regex_lite::utf8::tests::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::parse::Parser::<'_>::parse_group","regex_lite::utf8::decode_step::hir::Hir::concat","regex_lite::utf8::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::parse::Parser::parse_primitive","regex_lite::string::hir::parse::Parser::<'_>::bump","regex_lite::nfa::hir::parse::Parser::increment_depth","regex_lite::string::hir::Hir::concat","regex_lite::utf8::decode_step::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#2}::subs::core::mem::take>","regex_lite::utf8::is_word_byte::hir::parse::Parser::decrement_depth","regex_lite::utf8::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::parse::Parser::<'_>::decrement_depth","regex_lite::nfa::core::cell::RefCell::borrow_mut","regex_lite::hir::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::is_done","regex_lite::error::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::pikevm::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::bump_space","regex_lite::pool::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#5}::is_match::error::Error::new","regex_lite::string::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::new","regex_lite::nfa::hir::parse::Parser::parse_group","regex_lite::hir::hir::Hir::alternation","regex_lite::hir::{impl#3}::negate::hir::Hir::concat","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::bump","regex_lite::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::utf8::is_word_byte::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::nfa::hir::parse::Parser::bump","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::parse_uncounted_repetition","regex_lite::utf8::decode_step::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::new","regex_lite::string::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::tests::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::pool::hir::parse::Parser::bump_space","regex_lite::hir::parse::hir::parse::Parser::char","regex_lite::int::hir::parse::Parser::decrement_depth","regex_lite::int::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::is_word_byte::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::string::core::cell::RefCell::borrow_mut","regex_lite::hir::{impl#5}::is_match::core::mem::take>","regex_lite::int::hir::Hir::alternation","regex_lite::hir::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::nfa::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::error::Error::new","regex_lite::hir::parse::tests::alloc::vec::Vec::push","regex_lite::hir::Hir::alternation","regex_lite::hir::{impl#5}::is_match::core::cell::Cell>::get","regex_lite::pool::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::utf8::is_word_byte::alloc::vec::Vec::push","regex_lite::utf8::hir::parse::Parser::char","regex_lite::int::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::hir::parse::Parser::<'_>::char","regex_lite::error::error::Error::new","regex_lite::utf8::tests::core::mem::take>","regex_lite::interpolate::hir::parse::Parser::<'_>::is_done","regex_lite::utf8::decode_step::hir::parse::Parser::bump_space","regex_lite::nfa::error::Error::new","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::is_done","regex_lite::hir::hir::Hir::concat","regex_lite::string::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::interpolate::alloc::vec::Vec::push","regex_lite::hir::parse::hir::parse::Parser::<'_>::decrement_depth","regex_lite::hir::parse::error::Error::new","regex_lite::nfa::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::string::{impl#14}::fmt::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::decode_step::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::utf8::decode_step::hir::parse::Parser::parse_uncounted_repetition","regex_lite::error::hir::Hir::alternation","regex_lite::utf8::hir::Hir::alternation","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::decrement_depth","regex_lite::error::hir::parse::Parser::parse_group","regex_lite::int::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::parse::Parser::parse_counted_repetition","regex_lite::pikevm::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::push","regex_lite::utf8::tests::hir::parse::Parser::char","regex_lite::utf8::hir::Hir::concat","regex_lite::pool::hir::parse::Parser::<'_>::bump","regex_lite::hir::parse::check_hir_nesting::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<hir::Hir>::push","regex_lite::string::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::nfa::hir::Hir::concat","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::char","regex_lite::hir::parse::tests::hir::parse::Parser::char","regex_lite::interpolate::hir::parse::Parser::bump","regex_lite::hir::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::parse::hir::Hir::concat","regex_lite::interpolate::hir::Hir::alternation","regex_lite::int::hir::parse::Parser::parse_uncounted_repetition","regex_lite::pikevm::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<hir::Hir>::push","regex_lite::string::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::error::Error::new","regex_lite::utf8::tests::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::decrement_depth","regex_lite::error::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::tests::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::parse_group","regex_lite::utf8::is_word_byte::hir::parse::Parser::parse_class","regex_lite::utf8::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::char","regex_lite::string::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::pikevm::hir::parse::Parser::parse_group","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::increment_depth","regex_lite::pool::core::cell::Cell>::get","regex_lite::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#5}::is_match::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pool::hir::parse::Parser::<'_>::is_done","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::{impl#5}::is_match::hir::Hir::alternation","regex_lite::utf8::decode_step::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::error::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pikevm::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::{impl#5}::is_match::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::parse::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::parse::tests::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::{impl#5}::is_match::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::error::hir::parse::Parser::bump_space","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::parse_group","regex_lite::hir::{impl#2}::subs::error::Error::new","regex_lite::pool::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::parse_class","regex_lite::pikevm::alloc::vec::Vec::<hir::Hir>::push","regex_lite::pikevm::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::parse::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::parse::alloc::vec::Vec::new","regex_lite::hir::{impl#6}::drop::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pikevm::hir::parse::Parser::parse_primitive","regex_lite::hir::{impl#2}::subs::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::bump_space","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::tests::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::error::hir::parse::Parser::<'_>::is_done","regex_lite::pool::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::tests::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::tests::hir::Hir::concat","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::bump_space","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::increment_depth","regex_lite::nfa::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::{impl#6}::drop::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::is_done","regex_lite::string::{impl#14}::fmt::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::int::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::error::hir::parse::Parser::<'_>::increment_depth","regex_lite::nfa::hir::parse::Parser::parse_counted_repetition","regex_lite::utf8::tests::hir::parse::Parser::<'_>::parse_class","regex_lite::string::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::pool::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::parse::hir::parse::Parser::parse_uncounted_repetition","regex_lite::hir::{impl#2}::subs::hir::Hir::alternation","regex_lite::string::{impl#14}::fmt::hir::Hir::alternation","regex_lite::hir::parse::core::cell::RefCell::borrow","regex_lite::hir::{impl#2}::subs::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::pool::alloc::vec::Vec::new","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#5}::is_match::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::error::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::bump_space","regex_lite::pikevm::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::pool::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#6}::drop::core::cell::Cell>::get","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::parse_uncounted_repetition","regex_lite::hir::{impl#6}::drop::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::regex_lite::hir::parse::Parser::parse_inner","regex_lite::string::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::parse_counted_repetition","regex_lite::utf8::tests::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::hir::parse::Parser::bump_space","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::borrow_mut","regex_lite::hir::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::interpolate::hir::parse::Parser::parse_group","regex_lite::pikevm::hir::parse::Parser::is_done","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::parse_class","regex_lite::error::hir::parse::Parser::increment_depth","regex_lite::hir::parse::hir::parse::Parser::is_done","regex_lite::string::{impl#14}::fmt::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::decode_step::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::int::alloc::vec::Vec::new","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::parse_class","regex_lite::string::alloc::vec::Vec::push","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::parse_primitive","regex_lite::int::alloc::vec::Vec::<hir::Hir>::push","regex_lite::utf8::decode_step::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::int::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::hir::parse::Parser::<'_>::increment_depth","regex_lite::string::hir::parse::Parser::parse_uncounted_repetition","regex_lite::nfa::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::borrow","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::parse_primitive","regex_lite::pool::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#3}::negate::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::parse_primitive","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::increment_depth","regex_lite::utf8::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::{impl#2}::subs::hir::Hir::concat","regex_lite::hir::{impl#3}::negate::hir::Hir::alternation","regex_lite::hir::{impl#3}::negate::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::core::cell::Cell>::get","regex_lite::utf8::tests::hir::parse::Parser::<'_>::char","regex_lite::utf8::tests::hir::parse::Parser::bump","regex_lite::hir::parse::Parser::is_done","regex_lite::hir::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::parse::check_hir_nesting::hir::Hir::concat","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::decrement_depth","regex_lite::nfa::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::interpolate::hir::parse::Parser::<'_>::parse_class","regex_lite::utf8::tests::alloc::vec::Vec::<hir::Hir>::push","regex_lite::utf8::decode_step::alloc::vec::Vec::push","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::char","regex_lite::hir::parse::hir::parse::Parser::<'_>::char","regex_lite::interpolate::error::Error::new","regex_lite::pikevm::hir::parse::Parser::bump_space","regex_lite::core::cell::RefCell::borrow","regex_lite::int::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::string::hir::parse::Parser::is_done","regex_lite::error::alloc::vec::Vec::new","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::parse_class","regex_lite::utf8::hir::parse::Parser::decrement_depth","regex_lite::string::hir::parse::Parser::<'_>::parse_group","regex_lite::interpolate::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::char","regex_lite::alloc::vec::Vec::<hir::Hir>::new","regex_lite::string::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::decrement_depth","regex_lite::utf8::tests::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::interpolate::core::cell::RefCell::borrow","regex_lite::hir::parse::Parser::<'_>::parse_primitive","regex_lite::hir::parse::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::int::hir::parse::Parser::<'_>::bump","regex_lite::pool::core::cell::RefCell::borrow_mut","regex_lite::utf8::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::interpolate::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::borrow","regex_lite::hir::parse::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#6}::drop::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::pool::hir::Hir::alternation","regex_lite::hir::parse::check_hir_nesting::error::Error::new","regex_lite::interpolate::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::string::{impl#14}::fmt::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::utf8::is_word_byte::hir::Hir::concat","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::push","regex_lite::string::hir::parse::Parser::parse_primitive","regex_lite::utf8::decode_step::alloc::vec::Vec::new","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::utf8::decode_step::hir::parse::Parser::bump","regex_lite::error::hir::parse::Parser::parse_uncounted_repetition","regex_lite::hir::{impl#2}::subs::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::utf8::decode_step::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::Parser::decrement_depth","regex_lite::hir::Hir::concat","regex_lite::hir::{impl#6}::drop::hir::Hir::concat","regex_lite::utf8::is_word_byte::core::mem::take>","regex_lite::hir::parse::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::hir::parse::Parser::<'_>::bump","regex_lite::error::hir::parse::Parser::parse_class","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::nfa::hir::parse::Parser::<'_>::char","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::char","regex_lite::utf8::hir::parse::Parser::parse_primitive","regex_lite::pikevm::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::alloc::vec::Vec::new","regex_lite::hir::parse::tests::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::increment_depth","regex_lite::pool::hir::parse::Parser::<'_>::parse_group","regex_lite::interpolate::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#2}::subs::regex_lite::hir::parse::Parser::parse_inner","regex_lite::pikevm::core::cell::RefCell::borrow_mut","regex_lite::pool::core::cell::RefCell::borrow","regex_lite::pikevm::hir::parse::Parser::<'_>::char","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::parse_group","regex_lite::int::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::parse::hir::parse::Parser::parse_class","regex_lite::nfa::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::hir::parse::Parser::bump","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::parse_group","regex_lite::string::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::<'_>::parse_class","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::parse_group","regex_lite::interpolate::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::pool::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::tests::core::cell::Cell>::get","regex_lite::utf8::decode_step::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::parse::hir::Hir::alternation","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::char","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::tests::hir::parse::Parser::parse_class","regex_lite::string::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::parse_primitive","regex_lite::pikevm::hir::parse::Parser::<'_>::bump","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::push","regex_lite::hir::parse::tests::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::is_word_byte::core::cell::RefCell::borrow","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::parse_class","regex_lite::error::hir::parse::Parser::<'_>::parse_primitive","regex_lite::string::hir::parse::Parser::char","regex_lite::pikevm::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::Parser::<'_>::bump","regex_lite::hir::parse::tests::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::tests::<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","regex_lite::hir::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::alloc::vec::Vec::push","regex_lite::hir::hir::parse::Parser::<'_>::increment_depth","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::bump_space","regex_lite::utf8::hir::parse::Parser::<'_>::char","regex_lite::error::hir::parse::Parser::parse_primitive","regex_lite::utf8::tests::regex_lite::hir::parse::Parser::parse_inner","regex_lite::utf8::tests::hir::parse::Parser::parse_group","regex_lite::hir::parse::tests::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::utf8::decode_step::hir::parse::Parser::<'_>::bump","regex_lite::hir::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pikevm::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::utf8::is_word_byte::core::cell::Cell>::get","regex_lite::int::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::is_word_byte::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::utf8::tests::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::nfa::hir::parse::Parser::<'_>::bump_space","regex_lite::nfa::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::string::core::cell::Cell>::get","regex_lite::interpolate::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::parse_group","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::parse_primitive","regex_lite::string::error::Error::new","regex_lite::int::alloc::vec::Vec::<hir::Hir>::new","regex_lite::nfa::hir::parse::Parser::is_done","regex_lite::hir::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::parse_uncounted_repetition","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::parse_class","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::borrow","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::increment_depth","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::parse::tests::core::cell::Cell>::get","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::is_done","regex_lite::hir::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::pikevm::hir::parse::Parser::<'_>::increment_depth","regex_lite::int::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::borrow_mut","regex_lite::string::hir::parse::Parser::<'_>::parse_primitive","regex_lite::string::alloc::vec::Vec::<hir::Hir>::new","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::parse_class","regex_lite::pikevm::alloc::vec::Vec::new","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::increment_depth","regex_lite::utf8::decode_step::alloc::vec::Vec::<hir::Hir>::push","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::borrow_mut","regex_lite::utf8::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<hir::Hir>::push","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<hir::Hir>::new","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::nfa::hir::parse::Parser::<'_>::is_done","regex_lite::error::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::is_word_byte::hir::parse::Parser::parse_primitive","regex_lite::hir::parse::check_hir_nesting::core::mem::take>","regex_lite::hir::core::mem::take>","regex_lite::hir::parse::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::tests::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::parse_counted_repetition","regex_lite::error::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::pikevm::hir::parse::Parser::increment_depth","regex_lite::int::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::utf8::tests::hir::parse::Parser::bump_space","regex_lite::int::error::Error::new","regex_lite::utf8::core::mem::take>","regex_lite::hir::parse::tests::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::utf8::alloc::vec::Vec::<hir::Hir>::new","regex_lite::pool::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::decode_step::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::pool::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::tests::hir::parse::Parser::bump","regex_lite::pikevm::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::decode_step::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#3}::negate::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::char","regex_lite::utf8::is_word_byte::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::string::{impl#14}::fmt::error::Error::new","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::parse_group","regex_lite::pikevm::hir::parse::Parser::bump","regex_lite::hir::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::utf8::tests::hir::parse::Parser::<'_>::decrement_depth","regex_lite::utf8::is_word_byte::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::pool::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::parse_group","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::bump_space","regex_lite::utf8::is_word_byte::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pool::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::push","regex_lite::interpolate::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::interpolate::hir::parse::Parser::<'_>::decrement_depth","regex_lite::pikevm::error::Error::new","regex_lite::utf8::tests::hir::parse::Parser::<'_>::parse_primitive","regex_lite::error::hir::parse::Parser::char","regex_lite::int::hir::parse::Parser::<'_>::is_done","regex_lite::pikevm::<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::decrement_depth","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<hir::Hir>::new","regex_lite::nfa::hir::parse::Parser::<'_>::increment_depth","regex_lite::int::hir::parse::Parser::is_done","regex_lite::string::core::mem::take>","regex_lite::hir::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::hir::parse::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<hir::Hir>::push","regex_lite::error::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::error::hir::parse::Parser::<'_>::decrement_depth","regex_lite::int::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::parse::hir::parse::Parser::<'_>::bump_space","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::error::core::mem::take>","regex_lite::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::char","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::parse_counted_repetition","regex_lite::error::hir::parse::Parser::<'_>::parse_group","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::is_done","regex_lite::interpolate::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::nfa::hir::parse::Parser::parse_class","regex_lite::utf8::decode_step::core::cell::Cell::<core::option::Option<char>>::get","regex_lite::interpolate::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::<'_>::bump_space","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::new","regex_lite::string::hir::parse::Parser::increment_depth","regex_lite::hir::parse::tests::hir::parse::Parser::increment_depth","regex_lite::utf8::is_word_byte::hir::parse::Parser::parse_counted_repetition","regex_lite::interpolate::hir::parse::Parser::is_done","regex_lite::pool::alloc::vec::Vec::push","regex_lite::nfa::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::error::hir::Hir::concat","regex_lite::hir::core::cell::Cell>::get","regex_lite::interpolate::hir::parse::Parser::parse_uncounted_repetition","regex_lite::pool::hir::parse::Parser::<'_>::decrement_depth","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::parse_counted_repetition","regex_lite::nfa::core::mem::take::<alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::tests::alloc::vec::Vec::<hir::Hir>::new","regex_lite::int::<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::hir::{impl#2}::subs::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::hir::parse::tests::<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut","regex_lite::nfa::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::decode_step::hir::parse::Parser::parse_primitive","regex_lite::interpolate::hir::parse::Parser::parse_counted_repetition","regex_lite::utf8::regex_lite::hir::parse::Parser::parse_inner","regex_lite::hir::hir::parse::Parser::<'_>::parse_group","regex_lite::pool::error::Error::new","regex_lite::utf8::tests::hir::parse::Parser::<'_>::is_done","regex_lite::hir::hir::parse::Parser::<'_>::bump_space","regex_lite::hir::core::cell::RefCell::borrow","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::parse_class","regex_lite::pikevm::core::mem::take>","regex_lite::hir::{impl#2}::subs::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::hir::{impl#3}::negate::core::mem::take>","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::is_done","regex_lite::hir::{impl#2}::subs::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::bump","regex_lite::utf8::decode_step::error::Error::new","regex_lite::error::core::cell::RefCell::borrow_mut","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::increment_depth","regex_lite::pikevm::core::cell::RefCell::borrow","regex_lite::int::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::parse::Parser::parse_class","regex_lite::hir::{impl#3}::negate::hir::parse::Parser::bump","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser::parse_primitive","regex_lite::utf8::decode_step::core::mem::take>","regex_lite::error::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::hir::parse::Parser::<'_>::bump","regex_lite::hir::parse::hir::parse::Parser::bump_space","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::borrow_mut","regex_lite::pikevm::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::alloc::vec::Vec::<hir::Hir>::push","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::is_word_byte::hir::parse::Parser::<'_>::bump","regex_lite::utf8::hir::parse::Parser::parse_uncounted_repetition","regex_lite::pikevm::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::interpolate::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::hir::parse::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::hir::parse::Parser::parse_class","regex_lite::hir::parse::Parser::<'_>::parse_class","regex_lite::alloc::vec::Vec::push","regex_lite::interpolate::core::cell::RefCell::borrow_mut","regex_lite::hir::parse::tests::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::utf8::<core::option::Option<char> as core::cmp::PartialEq>::ne","regex_lite::interpolate::alloc::vec::Vec::<hir::Hir>::new","regex_lite::utf8::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::hir::{impl#6}::drop::hir::parse::Parser::<'_>::parse_uncounted_repetition","regex_lite::utf8::decode_step::hir::parse::Parser::is_done","regex_lite::utf8::decode_step::hir::parse::Parser::parse_counted_repetition","regex_lite::hir::{impl#2}::subs::hir::parse::Parser::<'_>::decrement_depth","regex_lite::int::hir::parse::Parser::parse_group","regex_lite::utf8::tests::core::cell::RefCell::<hir::Flags>::borrow","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::<'_>::parse_counted_repetition","regex_lite::core::cell::RefCell::<hir::Flags>::borrow_mut","regex_lite::alloc::vec::Vec::new","regex_lite::hir::parse::hir::parse::Parser::bump","regex_lite::int::core::cell::RefCell::borrow","regex_lite::pool::hir::parse::Parser::bump","regex_lite::hir::parse::core::mem::take>","regex_lite::string::<core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch","regex_lite::pool::hir::parse::Parser::parse_uncounted_repetition","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::is_done","regex_lite::nfa::alloc::vec::Vec::new","regex_lite::pikevm::hir::parse::Parser::<'_>::bump_space","regex_lite::nfa::hir::parse::Parser::char","regex_lite::utf8::tests::hir::parse::Parser::increment_depth","regex_lite::hir::parse::<core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref","regex_lite::string::{impl#14}::fmt::hir::parse::Parser::bump"],"types":["!","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","alloc::alloc::Global","hir::Flags","hir::parse::Parser<'_>","core::cell::RefMut<'_, hir::Flags>","char","u32","hir::Hir","bool","core::cell::Cell<core::option::Option<char>>","()","str","core::result::Result<hir::Hir, error::Error>","core::cell::RefCell<hir::Flags>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","error::Error","core::result::Result<core::convert::Infallible, error::Error>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","core::cell::Ref<'_, hir::Flags>","core::convert::Infallible","isize","core::option::Option<char>","core::result::Result<u32, error::Error>","core::result::Result<core::option::Option<hir::Hir>, error::Error>","alloc::vec::Vec<hir::Hir>","core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","core::option::Option<hir::Hir>","regex_lite::hir::parse::Parser","Cell","Config","Flags","Option","RefCell","String","Vec","char","str","u32","usize","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","core::option::Option","core::cell::Cell>","hir::parse::Parser","core::cell::RefMut","core::ops::ControlFlow, hir::Hir>","core::result::Result","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","core::result::Result, error::Error>","core::cell::RefCell","core::cell::Ref","alloc::vec::Vec","core::ops::ControlFlow, core::option::Option<hir::Hir>>","core::ops::ControlFlow, u32>","regex_lite::hir::parse::tests::core::ops::ControlFlow, u32>","regex_lite::error::Flags","regex_lite::string::{impl#14}::fmt::Flags","regex_lite::hir::Option","regex_lite::hir::{impl#3}::negate::core::cell::Ref","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::string::{impl#14}::fmt::core::cell::Cell<core::option::Option<char>>","regex_lite::()","regex_lite::hir::{impl#3}::negate::()","regex_lite::nfa::core::result::Result<u32, error::Error>","regex_lite::pikevm::core::cell::RefCell","regex_lite::error::core::option::Option<char>","regex_lite::int::core::cell::Cell<core::option::Option<char>>","regex_lite::string::{impl#14}::fmt::Vec","regex_lite::hir::parse::tests::core::cell::RefMut","regex_lite::interpolate::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::nfa::u32","regex_lite::hir::Cell","regex_lite::nfa::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::pool::Option","regex_lite::hir::parse::hir::Flags","regex_lite::utf8::tests::core::result::Result<hir::Hir, error::Error>","regex_lite::pikevm::core::cell::Ref<'_, hir::Flags>","regex_lite::interpolate::core::option::Option<char>","regex_lite::hir::parse::core::cell::Ref","regex_lite::nfa::alloc::vec::Vec","regex_lite::utf8::tests::core::ops::ControlFlow, u32>","regex_lite::int::alloc::alloc::Global","regex_lite::hir::String","regex_lite::hir::parse::hir::parse::Parser<'_>","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::Hir","regex_lite::error::core::cell::RefCell","regex_lite::utf8::usize","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::utf8::core::cell::RefCell","regex_lite::hir::core::cell::RefCell<hir::Flags>","regex_lite::nfa::()","regex_lite::hir::parse::tests::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pikevm::core::option::Option<hir::Hir>","regex_lite::hir::{impl#2}::subs::core::option::Option<char>","regex_lite::hir::parse::check_hir_nesting::core::cell::RefMut","regex_lite::hir::parse::String","regex_lite::nfa::core::convert::Infallible","regex_lite::utf8::decode_step::core::cell::Cell>","regex_lite::utf8::decode_step::u32","regex_lite::utf8::tests::RefCell","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::string::{impl#14}::fmt::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#3}::negate::core::result::Result<hir::Hir, error::Error>","regex_lite::int::core::cell::RefMut","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::nfa::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::interpolate::Vec","regex_lite::interpolate::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::int::String","regex_lite::hir::{impl#6}::drop::String","regex_lite::utf8::tests::core::cell::Ref","regex_lite::utf8::decode_step::core::cell::RefMut<'_, hir::Flags>","regex_lite::utf8::decode_step::hir::Flags","regex_lite::pool::core::option::Option","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell<hir::Flags>","regex_lite::hir::parse::Vec","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#2}::subs::core::convert::Infallible","regex_lite::utf8::is_word_byte::core::cell::RefCell","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::utf8::tests::isize","regex_lite::string::alloc::alloc::Global","regex_lite::utf8::tests::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::tests::core::cell::RefCell","regex_lite::hir::alloc::alloc::Global","regex_lite::hir::{impl#5}::is_match::alloc::alloc::Global","regex_lite::hir::parse::core::cell::RefCell<hir::Flags>","regex_lite::hir::{impl#5}::is_match::error::Error","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::string::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::string::{impl#14}::fmt::hir::Hir","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::utf8::tests::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#5}::is_match::core::result::Result","regex_lite::pool::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::hir::parse::Parser<'_>","regex_lite::string::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::{impl#6}::drop::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec","regex_lite::hir::Flags","regex_lite::utf8::is_word_byte::hir::Hir","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec","regex_lite::string::{impl#14}::fmt::hir::Flags","regex_lite::hir::parse::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::str","regex_lite::hir::parse::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::tests::core::option::Option<char>","regex_lite::utf8::is_word_byte::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#6}::drop::core::option::Option<hir::Hir>","regex_lite::pikevm::()","regex_lite::hir::{impl#3}::negate::isize","regex_lite::utf8::is_word_byte::regex_lite::hir::parse::Parser","regex_lite::string::{impl#14}::fmt::Cell","regex_lite::hir::{impl#6}::drop::Vec","regex_lite::string::core::cell::RefMut","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::error::regex_lite::hir::parse::Parser","regex_lite::hir::core::cell::RefMut","regex_lite::error::core::result::Result","regex_lite::hir::parse::u32","regex_lite::utf8::is_word_byte::String","regex_lite::hir::{impl#6}::drop::Config","regex_lite::u32","regex_lite::pool::hir::Hir","regex_lite::nfa::Vec","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser","regex_lite::string::char","regex_lite::hir::core::ops::ControlFlow, hir::Hir>","regex_lite::error::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#2}::subs::core::cell::RefCell","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#6}::drop::core::cell::RefCell<hir::Flags>","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::{impl#5}::is_match::!","regex_lite::interpolate::hir::Hir","regex_lite::string::{impl#14}::fmt::isize","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::string::{impl#14}::fmt::RefCell","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::interpolate::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::core::result::Result<u32, error::Error>","regex_lite::core::option::Option","regex_lite::pool::core::option::Option<hir::Hir>","regex_lite::utf8::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::int::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::tests::Cell","regex_lite::nfa::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::parse::tests::alloc::vec::Vec","regex_lite::utf8::hir::Flags","regex_lite::nfa::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::core::option::Option","regex_lite::hir::{impl#5}::is_match::Vec","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::interpolate::core::result::Result","regex_lite::nfa::core::ops::ControlFlow, u32>","regex_lite::hir::parse::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::tests::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::{impl#3}::negate::core::cell::RefCell","regex_lite::hir::Vec","regex_lite::hir::{impl#5}::is_match::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::utf8::is_word_byte::core::ops::ControlFlow, hir::Hir>","regex_lite::utf8::hir::parse::Parser","regex_lite::pikevm::alloc::vec::Vec","regex_lite::int::!","regex_lite::pikevm::core::option::Option<char>","regex_lite::interpolate::Flags","regex_lite::utf8::is_word_byte::usize","regex_lite::hir::{impl#3}::negate::!","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#6}::drop::alloc::alloc::Global","regex_lite::error::RefCell","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::error::()","regex_lite::hir::{impl#6}::drop::RefCell","regex_lite::hir::parse::core::ops::ControlFlow, u32>","regex_lite::string::regex_lite::hir::parse::Parser","regex_lite::hir::parse::check_hir_nesting::String","regex_lite::utf8::decode_step::core::cell::Cell<core::option::Option<char>>","regex_lite::string::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::string::{impl#14}::fmt::Config","regex_lite::utf8::is_word_byte::core::ops::ControlFlow, u32>","regex_lite::string::{impl#14}::fmt::core::cell::RefMut","regex_lite::interpolate::Cell","regex_lite::hir::{impl#2}::subs::core::result::Result","regex_lite::utf8::core::result::Result<hir::Hir, error::Error>","regex_lite::string::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::decode_step::core::cell::Ref","regex_lite::hir::{impl#6}::drop::core::cell::RefMut","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::nfa::core::cell::RefCell","regex_lite::pikevm::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::tests::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::{impl#6}::drop::core::result::Result<u32, error::Error>","regex_lite::interpolate::!","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::{impl#5}::is_match::core::convert::Infallible","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::int::core::result::Result<hir::Hir, error::Error>","regex_lite::pool::alloc::alloc::Global","regex_lite::nfa::bool","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::core::cell::RefMut","regex_lite::interpolate::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#5}::is_match::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::{impl#5}::is_match::core::option::Option<hir::Hir>","regex_lite::utf8::core::cell::Cell>","regex_lite::hir::{impl#2}::subs::core::option::Option<hir::Hir>","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::pool::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#3}::negate::core::cell::RefMut<'_, hir::Flags>","regex_lite::utf8::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::RefCell","regex_lite::pool::core::result::Result<hir::Hir, error::Error>","regex_lite::utf8::tests::char","regex_lite::utf8::decode_step::Flags","regex_lite::utf8::tests::Flags","regex_lite::utf8::decode_step::alloc::vec::Vec<hir::Hir>","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::string::{impl#14}::fmt::core::option::Option","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell<hir::Flags>","regex_lite::nfa::hir::parse::Parser","regex_lite::alloc::vec::Vec","regex_lite::hir::parse::tests::Option","regex_lite::hir::{impl#6}::drop::core::cell::RefMut<'_, hir::Flags>","regex_lite::pool::core::cell::RefMut<'_, hir::Flags>","regex_lite::int::char","regex_lite::utf8::decode_step::isize","regex_lite::pool::core::option::Option<char>","regex_lite::hir::core::result::Result<u32, error::Error>","regex_lite::string::core::result::Result, error::Error>","regex_lite::pool::core::result::Result","regex_lite::pikevm::core::cell::Cell>","regex_lite::int::u32","regex_lite::error::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::{impl#2}::subs::core::cell::RefMut","regex_lite::error::Cell","regex_lite::hir::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#6}::drop::Cell","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::parse::core::cell::Cell>","regex_lite::hir::parse::check_hir_nesting::Option","regex_lite::nfa::hir::Flags","regex_lite::utf8::!","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::utf8::tests::core::cell::RefCell<hir::Flags>","regex_lite::error::!","regex_lite::hir::{impl#3}::negate::hir::parse::Parser","regex_lite::utf8::decode_step::core::cell::RefCell","regex_lite::pool::Cell","regex_lite::pikevm::core::option::Option","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#5}::is_match::str","regex_lite::string::core::result::Result","regex_lite::string::{impl#14}::fmt::core::result::Result<u32, error::Error>","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::pool::u32","regex_lite::error::alloc::alloc::Global","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::Flags","regex_lite::hir::{impl#2}::subs::!","regex_lite::hir::{impl#6}::drop::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::tests::core::cell::Cell>","regex_lite::utf8::bool","regex_lite::pool::!","regex_lite::utf8::core::cell::Cell<core::option::Option<char>>","regex_lite::utf8::is_word_byte::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#5}::is_match::()","regex_lite::hir::parse::error::Error","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::tests::hir::Hir","regex_lite::interpolate::()","regex_lite::hir::parse::tests::error::Error","regex_lite::utf8::is_word_byte::core::option::Option<hir::Hir>","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::string::alloc::vec::Vec","regex_lite::pool::core::ops::ControlFlow, u32>","regex_lite::hir::parse::tests::core::cell::RefCell<hir::Flags>","regex_lite::utf8::decode_step::core::option::Option<char>","regex_lite::hir::parse::check_hir_nesting::core::option::Option<hir::Hir>","regex_lite::utf8::decode_step::usize","regex_lite::utf8::is_word_byte::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::{impl#6}::drop::hir::parse::Parser<'_>","regex_lite::pikevm::error::Error","regex_lite::utf8::alloc::vec::Vec<hir::Hir>","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::parse::check_hir_nesting::regex_lite::hir::parse::Parser","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<hir::Hir>","regex_lite::string::{impl#14}::fmt::str","regex_lite::hir::u32","regex_lite::hir::()","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<hir::Hir>","regex_lite::string::hir::Hir","regex_lite::pool::RefCell","regex_lite::error::core::cell::RefMut","regex_lite::utf8::is_word_byte::isize","regex_lite::hir::parse::tests::!","regex_lite::hir::parse::Cell","regex_lite::error::core::cell::Ref<'_, hir::Flags>","regex_lite::int::()","regex_lite::interpolate::core::cell::RefMut","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::is_word_byte::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::tests::alloc::alloc::Global","regex_lite::utf8::tests::!","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::decode_step::core::cell::RefCell<hir::Flags>","regex_lite::hir::char","regex_lite::hir::parse::tests::hir::parse::Parser<'_>","regex_lite::utf8::core::cell::RefCell<hir::Flags>","regex_lite::hir::parse::hir::Hir","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#6}::drop::str","regex_lite::utf8::is_word_byte::hir::parse::Parser","regex_lite::int::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::int::RefCell","regex_lite::int::Vec","regex_lite::utf8::core::result::Result","regex_lite::pool::Vec","regex_lite::interpolate::core::ops::ControlFlow, hir::Hir>","regex_lite::pikevm::u32","regex_lite::int::core::option::Option<hir::Hir>","regex_lite::utf8::decode_step::core::convert::Infallible","regex_lite::isize","regex_lite::interpolate::core::cell::Cell<core::option::Option<char>>","regex_lite::pool::core::cell::Cell<core::option::Option<char>>","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::string::Option","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::bool","regex_lite::hir::{impl#5}::is_match::Option","regex_lite::utf8::is_word_byte::alloc::vec::Vec","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::parse::tests::core::option::Option<hir::Hir>","regex_lite::hir::parse::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::{impl#3}::negate::String","regex_lite::utf8::decode_step::core::result::Result","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow, hir::Hir>","regex_lite::int::core::cell::RefMut<'_, hir::Flags>","regex_lite::error::str","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::core::cell::Cell>","regex_lite::utf8::is_word_byte::core::convert::Infallible","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::tests::()","regex_lite::utf8::is_word_byte::Option","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow, u32>","regex_lite::int::core::cell::Cell>","regex_lite::pikevm::hir::parse::Parser","regex_lite::int::bool","regex_lite::int::Option","regex_lite::hir::{impl#2}::subs::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::decode_step::Cell","regex_lite::utf8::is_word_byte::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::nfa::core::cell::RefMut","regex_lite::int::regex_lite::hir::parse::Parser","regex_lite::string::core::cell::Cell<core::option::Option<char>>","regex_lite::interpolate::core::ops::ControlFlow, u32>","regex_lite::utf8::is_word_byte::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::int::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::string::core::cell::RefCell<hir::Flags>","regex_lite::hir::{impl#3}::negate::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::utf8::decode_step::Option","regex_lite::pool::core::cell::RefMut","regex_lite::hir::{impl#2}::subs::RefCell","regex_lite::utf8::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pikevm::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::{impl#5}::is_match::isize","regex_lite::hir::parse::core::option::Option<hir::Hir>","regex_lite::hir::{impl#2}::subs::()","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#2}::subs::Flags","regex_lite::string::str","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::{impl#2}::subs::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#2}::subs::usize","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::error::Error","regex_lite::hir::{impl#6}::drop::core::option::Option","regex_lite::hir::parse::tests::isize","regex_lite::pool::core::cell::Ref","regex_lite::hir::{impl#3}::negate::core::convert::Infallible","regex_lite::nfa::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::utf8::()","regex_lite::hir::{impl#2}::subs::isize","regex_lite::string::isize","regex_lite::hir::{impl#6}::drop::core::option::Option<char>","regex_lite::string::{impl#14}::fmt::core::option::Option<hir::Hir>","regex_lite::string::Cell","regex_lite::utf8::decode_step::error::Error","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#3}::negate::Flags","regex_lite::utf8::tests::Option","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::parse::check_hir_nesting::core::option::Option","regex_lite::hir::parse::tests::core::cell::Ref","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::nfa::Cell","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::pool::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::parse::core::cell::RefMut","regex_lite::utf8::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#6}::drop::core::cell::Cell<core::option::Option<char>>","regex_lite::pikevm::isize","regex_lite::utf8::char","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::utf8::decode_step::()","regex_lite::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::parse::tests::alloc::alloc::Global","regex_lite::interpolate::bool","regex_lite::int::error::Error","regex_lite::nfa::Option","regex_lite::core::cell::RefMut","regex_lite::core::ops::ControlFlow, hir::Hir>","regex_lite::utf8::is_word_byte::Cell","regex_lite::hir::{impl#3}::negate::core::cell::RefCell<hir::Flags>","regex_lite::nfa::core::result::Result","regex_lite::interpolate::core::option::Option<hir::Hir>","regex_lite::utf8::tests::core::option::Option<hir::Hir>","regex_lite::hir::{impl#3}::negate::hir::Flags","regex_lite::string::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::bool","regex_lite::interpolate::char","regex_lite::string::!","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::utf8::tests::core::convert::Infallible","regex_lite::utf8::tests::Vec","regex_lite::hir::parse::core::cell::RefCell","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser","regex_lite::int::core::cell::RefCell","regex_lite::nfa::error::Error","regex_lite::hir::{impl#3}::negate::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#2}::subs::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::{impl#3}::negate::core::cell::Cell>","regex_lite::interpolate::core::result::Result, error::Error>","regex_lite::string::{impl#14}::fmt::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#2}::subs::char","regex_lite::utf8::is_word_byte::Config","regex_lite::hir::parse::check_hir_nesting::()","regex_lite::string::RefCell","regex_lite::int::core::ops::ControlFlow, u32>","regex_lite::error::alloc::vec::Vec","regex_lite::nfa::str","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::hir::parse::Parser","regex_lite::utf8::core::result::Result, error::Error>","regex_lite::core::option::Option<hir::Hir>","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::utf8::decode_step::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::nfa::core::option::Option<char>","regex_lite::nfa::core::cell::Ref","regex_lite::utf8::decode_step::core::option::Option<hir::Hir>","regex_lite::error::error::Error","regex_lite::hir::parse::Option","regex_lite::hir::parse::alloc::vec::Vec","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::hir::Hir","regex_lite::hir::hir::Flags","regex_lite::utf8::String","regex_lite::hir::parse::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::String","regex_lite::utf8::is_word_byte::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::Cell","regex_lite::!","regex_lite::utf8::tests::core::cell::RefMut<'_, hir::Flags>","regex_lite::core::cell::Cell<core::option::Option<char>>","regex_lite::pikevm::Flags","regex_lite::utf8::is_word_byte::Vec","regex_lite::int::core::option::Option<char>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::core::cell::Cell<core::option::Option<char>>","regex_lite::utf8::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::parse::tests::hir::Hir","regex_lite::hir::parse::check_hir_nesting::str","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::interpolate::alloc::alloc::Global","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec","regex_lite::error::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::parse::check_hir_nesting::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::{impl#3}::negate::core::result::Result<u32, error::Error>","regex_lite::interpolate::core::option::Option","regex_lite::char","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::char","regex_lite::utf8::is_word_byte::char","regex_lite::hir::parse::tests::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::str","regex_lite::nfa::hir::Hir","regex_lite::utf8::decode_step::String","regex_lite::interpolate::usize","regex_lite::hir::{impl#6}::drop::core::cell::RefCell","regex_lite::hir::{impl#2}::subs::hir::Flags","regex_lite::error::core::result::Result<u32, error::Error>","regex_lite::int::Config","regex_lite::pool::core::cell::Cell>","regex_lite::nfa::core::option::Option<hir::Hir>","regex_lite::hir::{impl#2}::subs::String","regex_lite::utf8::tests::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::tests::core::cell::Cell>","regex_lite::utf8::is_word_byte::core::cell::RefCell<hir::Flags>","regex_lite::hir::parse::check_hir_nesting::error::Error","regex_lite::string::core::option::Option<char>","regex_lite::utf8::decode_step::core::cell::RefMut","regex_lite::string::core::cell::RefCell","regex_lite::core::cell::Ref<'_, hir::Flags>","regex_lite::interpolate::core::result::Result<u32, error::Error>","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::error::core::result::Result, error::Error>","regex_lite::interpolate::core::cell::Ref","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::decode_step::alloc::alloc::Global","regex_lite::pikevm::core::cell::RefMut","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::utf8::tests::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::parse::alloc::vec::Vec<hir::Hir>","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow, hir::Hir>","regex_lite::pikevm::alloc::vec::Vec<hir::Hir>","regex_lite::error::core::cell::Ref","regex_lite::nfa::usize","regex_lite::int::core::cell::RefCell<hir::Flags>","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::parse::check_hir_nesting::RefCell","regex_lite::error::char","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::string::{impl#14}::fmt::!","regex_lite::interpolate::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::parse::tests::str","regex_lite::hir::{impl#2}::subs::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::parse::isize","regex_lite::hir::parse::!","regex_lite::error::alloc::vec::Vec<hir::Hir>","regex_lite::string::{impl#14}::fmt::regex_lite::hir::parse::Parser","regex_lite::hir::parse::check_hir_nesting::Cell","regex_lite::hir::parse::core::option::Option","regex_lite::int::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::isize","regex_lite::pikevm::core::result::Result, error::Error>","regex_lite::hir::{impl#6}::drop::error::Error","regex_lite::core::cell::Ref","regex_lite::utf8::Option","regex_lite::utf8::tests::alloc::vec::Vec","regex_lite::error::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::core::cell::RefCell","regex_lite::hir::{impl#2}::subs::hir::Hir","regex_lite::interpolate::hir::parse::Parser","regex_lite::pikevm::Cell","regex_lite::pikevm::core::convert::Infallible","regex_lite::hir::{impl#2}::subs::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::parse::check_hir_nesting::usize","regex_lite::hir::{impl#3}::negate::hir::parse::Parser<'_>","regex_lite::utf8::tests::bool","regex_lite::hir::{impl#3}::negate::usize","regex_lite::hir::parse::check_hir_nesting::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::pool::hir::parse::Parser<'_>","regex_lite::hir::{impl#3}::negate::hir::Hir","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::utf8::core::cell::Ref","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::nfa::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow, u32>","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::tests::Cell","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::parse::tests::RefCell","regex_lite::string::u32","regex_lite::utf8::is_word_byte::Flags","regex_lite::hir::alloc::vec::Vec","regex_lite::hir::error::Error","regex_lite::hir::parse::check_hir_nesting::core::result::Result, error::Error>","regex_lite::hir::{impl#3}::negate::regex_lite::hir::parse::Parser","regex_lite::pikevm::hir::parse::Parser<'_>","regex_lite::error::Vec","regex_lite::int::isize","regex_lite::hir::{impl#3}::negate::bool","regex_lite::nfa::RefCell","regex_lite::int::hir::parse::Parser","regex_lite::hir::regex_lite::hir::parse::Parser","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::tests::String","regex_lite::nfa::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::tests::regex_lite::hir::parse::Parser","regex_lite::utf8::is_word_byte::core::result::Result, error::Error>","regex_lite::nfa::core::result::Result, error::Error>","regex_lite::string::{impl#14}::fmt::core::cell::RefCell","regex_lite::utf8::is_word_byte::()","regex_lite::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::decode_step::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#3}::negate::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::{impl#3}::negate::RefCell","regex_lite::hir::{impl#2}::subs::u32","regex_lite::int::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::pool::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::parse::check_hir_nesting::hir::Hir","regex_lite::core::cell::RefCell<hir::Flags>","regex_lite::hir::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::core::cell::RefCell","regex_lite::utf8::decode_step::core::option::Option","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::core::convert::Infallible","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::pool::isize","regex_lite::hir::parse::char","regex_lite::utf8::core::ops::ControlFlow, hir::Hir>","regex_lite::pikevm::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::utf8::core::option::Option","regex_lite::error::isize","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::parse::check_hir_nesting::isize","regex_lite::string::usize","regex_lite::int::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow, hir::Hir>","regex_lite::interpolate::str","regex_lite::utf8::decode_step::str","regex_lite::interpolate::core::cell::RefCell<hir::Flags>","regex_lite::pool::core::cell::Ref<'_, hir::Flags>","regex_lite::interpolate::RefCell","regex_lite::hir::parse::tests::core::ops::ControlFlow, hir::Hir>","regex_lite::utf8::decode_step::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::utf8::is_word_byte::bool","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::core::result::Result<hir::Hir, error::Error>","regex_lite::utf8::decode_step::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::Config","regex_lite::hir::{impl#6}::drop::core::cell::Cell>","regex_lite::string::{impl#14}::fmt::core::cell::Ref","regex_lite::hir::{impl#3}::negate::str","regex_lite::hir::alloc::vec::Vec<hir::Hir>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::interpolate::alloc::vec::Vec<hir::Hir>","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::pool::str","regex_lite::hir::parse::tests::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::decode_step::core::ops::ControlFlow, u32>","regex_lite::hir::parse::tests::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::string::String","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::{impl#3}::negate::core::option::Option","regex_lite::string::hir::parse::Parser<'_>","regex_lite::pool::Config","regex_lite::interpolate::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pool::hir::parse::Parser","regex_lite::utf8::tests::()","regex_lite::int::hir::parse::Parser<'_>","regex_lite::hir::parse::check_hir_nesting::core::result::Result<u32, error::Error>","regex_lite::pikevm::core::cell::RefMut<'_, hir::Flags>","regex_lite::core::result::Result","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#5}::is_match::core::cell::Ref","regex_lite::string::alloc::vec::Vec<hir::Hir>","regex_lite::hir::{impl#6}::drop::core::result::Result<hir::Hir, error::Error>","regex_lite::string::{impl#14}::fmt::hir::parse::Parser","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#2}::subs::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::parse::check_hir_nesting::hir::Flags","regex_lite::utf8::decode_step::core::result::Result<u32, error::Error>","regex_lite::core::ops::ControlFlow, u32>","regex_lite::string::{impl#14}::fmt::core::option::Option<char>","regex_lite::pikevm::Config","regex_lite::string::{impl#14}::fmt::error::Error","regex_lite::nfa::core::result::Result<hir::Hir, error::Error>","regex_lite::hir::parse::tests::core::cell::RefCell","regex_lite::pool::char","regex_lite::utf8::is_word_byte::core::option::Option<char>","regex_lite::utf8::Flags","regex_lite::utf8::decode_step::Vec","regex_lite::utf8::is_word_byte::core::cell::Cell<core::option::Option<char>>","regex_lite::nfa::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::{impl#6}::drop::usize","regex_lite::pool::String","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::error::Config","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::string::core::option::Option<hir::Hir>","regex_lite::hir::{impl#3}::negate::Vec","regex_lite::hir::{impl#5}::is_match::Flags","regex_lite::hir::{impl#6}::drop::Option","regex_lite::interpolate::hir::parse::Parser<'_>","regex_lite::error::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::utf8::decode_step::core::result::Result<hir::Hir, error::Error>","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::{impl#2}::subs::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::tests::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#5}::is_match::core::option::Option<char>","regex_lite::hir::{impl#6}::drop::isize","regex_lite::hir::parse::check_hir_nesting::core::cell::Ref","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow, u32>","regex_lite::error::core::cell::RefCell<hir::Flags>","regex_lite::utf8::tests::Config","regex_lite::string::{impl#14}::fmt::Option","regex_lite::pikevm::core::ops::ControlFlow, hir::Hir>","regex_lite::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::utf8::is_word_byte::u32","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#5}::is_match::core::result::Result<u32, error::Error>","regex_lite::hir::parse::Config","regex_lite::int::core::cell::Ref","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::int::core::result::Result, error::Error>","regex_lite::interpolate::regex_lite::hir::parse::Parser","regex_lite::utf8::is_word_byte::RefCell","regex_lite::hir::parse::check_hir_nesting::Vec","regex_lite::string::core::convert::Infallible","regex_lite::hir::!","regex_lite::string::{impl#14}::fmt::core::result::Result<hir::Hir, error::Error>","regex_lite::usize","regex_lite::pikevm::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::parse::tests::core::result::Result<hir::Hir, error::Error>","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::{impl#3}::negate::Cell","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::string::core::cell::Ref","regex_lite::hir::parse::check_hir_nesting::hir::parse::Parser<'_>","regex_lite::pikevm::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#5}::is_match::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::error::usize","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::nfa::core::cell::Cell>","regex_lite::utf8::decode_step::core::ops::ControlFlow, hir::Hir>","regex_lite::utf8::decode_step::alloc::vec::Vec","regex_lite::string::{impl#14}::fmt::core::cell::Cell>","regex_lite::string::()","regex_lite::utf8::Vec","regex_lite::hir::{impl#2}::subs::Option","regex_lite::pool::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::core::result::Result, error::Error>","regex_lite::string::Config","regex_lite::hir::{impl#6}::drop::u32","regex_lite::int::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::utf8::alloc::alloc::Global","regex_lite::hir::core::option::Option<char>","regex_lite::utf8::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#2}::subs::error::Error","regex_lite::hir::parse::tests::core::result::Result<u32, error::Error>","regex_lite::nfa::core::ops::ControlFlow, hir::Hir>","regex_lite::utf8::core::option::Option<char>","regex_lite::string::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::hir::Hir","regex_lite::error::core::convert::Infallible","regex_lite::hir::{impl#2}::subs::core::cell::Ref","regex_lite::hir::core::result::Result","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::decode_step::hir::parse::Parser","regex_lite::hir::{impl#6}::drop::core::result::Result","regex_lite::hir::{impl#3}::negate::core::result::Result, error::Error>","regex_lite::utf8::tests::str","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::decode_step::char","regex_lite::utf8::decode_step::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::usize","regex_lite::utf8::error::Error","regex_lite::hir::RefCell","regex_lite::utf8::str","regex_lite::utf8::tests::core::result::Result, error::Error>","regex_lite::string::{impl#14}::fmt::core::result::Result, error::Error>","regex_lite::hir::{impl#5}::is_match::core::cell::RefMut<'_, hir::Flags>","regex_lite::interpolate::core::cell::RefCell","regex_lite::str","regex_lite::pikevm::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::string::core::cell::Cell>","regex_lite::pikevm::bool","regex_lite::utf8::hir::Hir","regex_lite::utf8::is_word_byte::error::Error","regex_lite::hir::{impl#2}::subs::hir::parse::Parser","regex_lite::hir::parse::tests::bool","regex_lite::utf8::is_word_byte::core::cell::RefMut","regex_lite::hir::parse::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::alloc::vec::Vec","regex_lite::hir::parse::usize","regex_lite::pikevm::usize","regex_lite::error::hir::parse::Parser","regex_lite::hir::{impl#5}::is_match::core::cell::RefMut","regex_lite::utf8::is_word_byte::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::{impl#6}::drop::!","regex_lite::hir::{impl#5}::is_match::char","regex_lite::hir::{impl#3}::negate::core::cell::RefMut","regex_lite::utf8::is_word_byte::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::char","regex_lite::utf8::decode_step::hir::Hir","regex_lite::hir::{impl#6}::drop::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::hir::{impl#6}::drop::regex_lite::hir::parse::Parser","regex_lite::pikevm::hir::Flags","regex_lite::hir::parse::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#5}::is_match::bool","regex_lite::utf8::tests::core::option::Option","regex_lite::utf8::tests::hir::parse::Parser","regex_lite::string::{impl#14}::fmt::alloc::alloc::Global","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::pool::Flags","regex_lite::hir::core::result::Result, error::Error>","regex_lite::hir::{impl#2}::subs::core::cell::RefMut<'_, hir::Flags>","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow, u32>","regex_lite::hir::parse::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::{impl#3}::negate::Option","regex_lite::int::usize","regex_lite::int::hir::Hir","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell","regex_lite::error::String","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::pool::core::result::Result, error::Error>","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow, hir::Hir>","regex_lite::nfa::core::cell::RefCell<hir::Flags>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#2}::subs::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::utf8::is_word_byte::core::result::Result<hir::Hir, error::Error>","regex_lite::error::hir::Flags","regex_lite::hir::parse::check_hir_nesting::!","regex_lite::pikevm::Option","regex_lite::error::hir::parse::Parser<'_>","regex_lite::hir::parse::tests::regex_lite::hir::parse::Parser","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::interpolate::String","regex_lite::pikevm::core::cell::RefCell<hir::Flags>","regex_lite::utf8::is_word_byte::!","regex_lite::pikevm::core::result::Result<hir::Hir, error::Error>","regex_lite::string::{impl#14}::fmt::core::cell::RefMut<'_, hir::Flags>","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::tests::Config","regex_lite::pikevm::Vec","regex_lite::core::option::Option<char>","regex_lite::regex_lite::hir::parse::Parser","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::tests::String","regex_lite::hir::parse::tests::u32","regex_lite::hir::parse::tests::char","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::parse::check_hir_nesting::u32","regex_lite::int::alloc::vec::Vec","regex_lite::hir::parse::alloc::alloc::Global","regex_lite::interpolate::u32","regex_lite::pikevm::regex_lite::hir::parse::Parser","regex_lite::interpolate::core::cell::Cell>","regex_lite::error::core::option::Option<hir::Hir>","regex_lite::hir::parse::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::parse::tests::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::is_word_byte::core::option::Option","regex_lite::utf8::tests::error::Error","regex_lite::hir::{impl#6}::drop::hir::Hir","regex_lite::hir::{impl#3}::negate::error::Error","regex_lite::interpolate::hir::Flags","regex_lite::hir::{impl#3}::negate::core::option::Option<char>","regex_lite::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow, u32>","regex_lite::hir::parse::tests::core::cell::RefMut<'_, hir::Flags>","regex_lite::utf8::decode_step::!","regex_lite::string::bool","regex_lite::pool::core::cell::RefCell<hir::Flags>","regex_lite::hir::parse::check_hir_nesting::Config","regex_lite::pikevm::core::cell::Ref","regex_lite::hir::{impl#6}::drop::()","regex_lite::hir::parse::check_hir_nesting::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::utf8::decode_step::core::result::Result, error::Error>","regex_lite::interpolate::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::string::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::string::Vec","regex_lite::nfa::alloc::alloc::Global","regex_lite::utf8::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::parse::check_hir_nesting::core::cell::Cell>","regex_lite::string::core::result::Result<u32, error::Error>","regex_lite::pool::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#3}::negate::u32","regex_lite::utf8::tests::usize","regex_lite::hir::parse::tests::hir::Flags","regex_lite::hir::{impl#3}::negate::core::cell::Ref<'_, hir::Flags>","regex_lite::error::Option","regex_lite::hir::{impl#6}::drop::hir::parse::Parser","regex_lite::hir::core::convert::Infallible","regex_lite::hir::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::utf8::tests::hir::Flags","regex_lite::error::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec","regex_lite::nfa::char","regex_lite::pool::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::hir::parse::Parser","regex_lite::interpolate::core::cell::Ref<'_, hir::Flags>","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::pikevm::core::ops::ControlFlow, u32>","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::nfa::!","regex_lite::pool::hir::Flags","regex_lite::string::{impl#14}::fmt::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::parse::tests::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::{impl#3}::negate::Config","regex_lite::hir::{impl#3}::negate::char","regex_lite::nfa::Config","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::hir::{impl#6}::drop::core::result::Result, error::Error>","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell","regex_lite::nfa::Flags","regex_lite::hir::{impl#2}::subs::hir::parse::Parser<'_>","regex_lite::hir::{impl#2}::subs::Vec","regex_lite::string::{impl#14}::fmt::core::cell::RefCell<hir::Flags>","regex_lite::string::{impl#14}::fmt::usize","regex_lite::Cell","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#2}::subs::alloc::alloc::Global","regex_lite::utf8::tests::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::utf8::tests::core::result::Result","regex_lite::int::Flags","regex_lite::pool::bool","regex_lite::hir::parse::core::result::Result<u32, error::Error>","regex_lite::string::core::ops::ControlFlow, u32>","regex_lite::hir::parse::check_hir_nesting::core::result::Result","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<hir::Hir>","regex_lite::string::Flags","regex_lite::pikevm::alloc::alloc::Global","regex_lite::pikevm::RefCell","regex_lite::error::hir::Hir","regex_lite::hir::core::cell::Cell>","regex_lite::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::string::hir::Flags","regex_lite::String","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::int::core::option::Option","regex_lite::string::{impl#14}::fmt::core::result::Result","regex_lite::utf8::tests::u32","regex_lite::utf8::is_word_byte::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::hir::{impl#2}::subs::Config","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::check_hir_nesting::char","regex_lite::hir::{impl#3}::negate::core::option::Option<hir::Hir>","regex_lite::string::{impl#14}::fmt::String","regex_lite::hir::parse::tests::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::nfa::String","regex_lite::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#5}::is_match::core::option::Option","regex_lite::pool::alloc::vec::Vec","regex_lite::utf8::is_word_byte::core::result::Result","regex_lite::int::core::convert::Infallible","regex_lite::hir::parse::tests::core::result::Result","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::hir::parse::tests::Flags","regex_lite::hir::{impl#2}::subs::str","regex_lite::hir::parse::check_hir_nesting::bool","regex_lite::hir::{impl#5}::is_match::usize","regex_lite::hir::{impl#5}::is_match::hir::parse::Parser<'_>","regex_lite::utf8::decode_step::hir::parse::Parser<'_>","regex_lite::utf8::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::error::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::pool::usize","regex_lite::hir::{impl#5}::is_match::regex_lite::hir::parse::Parser","regex_lite::interpolate::core::convert::Infallible","regex_lite::utf8::decode_step::regex_lite::hir::parse::Parser","regex_lite::int::str","regex_lite::int::hir::Flags","regex_lite::Option","regex_lite::hir::{impl#5}::is_match::core::cell::Cell>","regex_lite::string::error::Error","regex_lite::hir::Config","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec","regex_lite::utf8::tests::core::cell::Ref<'_, hir::Flags>","regex_lite::utf8::tests::core::cell::RefMut","regex_lite::hir::{impl#2}::subs::core::result::Result, error::Error>","regex_lite::hir::{impl#6}::drop::core::cell::Ref","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::error::bool","regex_lite::hir::parse::check_hir_nesting::alloc::alloc::Global","regex_lite::hir::{impl#3}::negate::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::pool::alloc::vec::Vec<hir::Hir>","regex_lite::pikevm::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::nfa::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::hir::Flags","regex_lite::nfa::hir::parse::Parser<'_>","regex_lite::utf8::hir::parse::Parser<'_>","regex_lite::int::alloc::vec::Vec<hir::Hir>","regex_lite::string::{impl#14}::fmt::hir::parse::Parser<'_>","regex_lite::hir::{impl#6}::drop::core::cell::Ref<'_, hir::Flags>","regex_lite::hir::{impl#2}::subs::Cell","regex_lite::utf8::Cell","regex_lite::interpolate::isize","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::bool","regex_lite::utf8::Config","regex_lite::hir::parse::check_hir_nesting::core::result::Result<hir::Hir, error::Error>","regex_lite::int::core::result::Result<u32, error::Error>","regex_lite::interpolate::Option","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::parse::core::option::Option<char>","regex_lite::hir::{impl#5}::is_match::String","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::hir::parse::check_hir_nesting::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::RefCell","regex_lite::Flags","regex_lite::hir::parse::Flags","regex_lite::error::core::ops::ControlFlow, hir::Hir>","regex_lite::pool::()","regex_lite::hir::parse::check_hir_nesting::core::option::Option<char>","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::hir::{impl#5}::is_match::u32","regex_lite::hir::{impl#2}::subs::core::cell::RefCell<hir::Flags>","regex_lite::utf8::decode_step::RefCell","regex_lite::hir::parse::tests::Vec","regex_lite::utf8::decode_step::bool","regex_lite::string::{impl#14}::fmt::core::cell::Ref<'_, hir::Flags>","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec>","regex_lite::utf8::tests::hir::parse::Parser<'_>","regex_lite::hir::parse::tests::hir::parse::Parser","regex_lite::utf8::is_word_byte::core::cell::Cell>","regex_lite::hir::core::option::Option<hir::Hir>","regex_lite::utf8::is_word_byte::hir::parse::Parser<'_>","regex_lite::hir::parse::core::result::Result","regex_lite::int::core::result::Result","regex_lite::pool::error::Error","regex_lite::hir::{impl#3}::negate::core::result::Result","regex_lite::hir::core::cell::Ref","regex_lite::hir::{impl#6}::drop::core::convert::Infallible","regex_lite::hir::parse::tests::core::option::Option","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<hir::Hir>","regex_lite::hir::{impl#2}::subs::core::cell::Cell>","regex_lite::string::{impl#14}::fmt::core::convert::Infallible","regex_lite::hir::parse::core::result::Result, error::Error>","regex_lite::hir::parse::check_hir_nesting::core::cell::Ref<'_, hir::Flags>","regex_lite::pool::core::convert::Infallible","regex_lite::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::RefCell","regex_lite::string::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::error::core::ops::ControlFlow, alloc::vec::Vec<hir::Hir>>","regex_lite::pikevm::hir::Hir","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option<hir::Hir>>","regex_lite::utf8::tests::core::cell::Cell<core::option::Option<char>>","regex_lite::nfa::alloc::vec::Vec<hir::Hir>","regex_lite::utf8::core::convert::Infallible","regex_lite::hir::{impl#5}::is_match::Config","regex_lite::nfa::isize","regex_lite::hir::parse::tests::usize","regex_lite::utf8::u32","regex_lite::hir::{impl#6}::drop::Flags","regex_lite::Vec","regex_lite::interpolate::alloc::vec::Vec","regex_lite::hir::{impl#6}::drop::char","regex_lite::hir::{impl#2}::subs::core::option::Option","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow, u32>","regex_lite::hir::core::ops::ControlFlow, u32>","regex_lite::error::core::option::Option","regex_lite::hir::{impl#5}::is_match::core::cell::Cell<core::option::Option<char>>","regex_lite::hir::parse::tests::core::result::Result, error::Error>","regex_lite::hir::{impl#6}::drop::bool","regex_lite::hir::core::cell::RefMut<'_, hir::Flags>","regex_lite::hir::parse::tests::core::option::Option<char>","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#5}::is_match::RefCell","regex_lite::utf8::is_word_byte::core::cell::Ref","regex_lite::hir::isize","regex_lite::hir::{impl#6}::drop::hir::Flags","regex_lite::utf8::core::option::Option<hir::Hir>","regex_lite::hir::{impl#2}::subs::bool","regex_lite::string::{impl#14}::fmt::()","regex_lite::pool::core::cell::RefCell","regex_lite::utf8::decode_step::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::hir::parse::Parser<'_>","regex_lite::hir::parse::core::ops::ControlFlow, hir::Hir>","regex_lite::core::convert::Infallible","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow, core::option::Option<hir::Hir>>","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, core::option::Option>","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec","regex_lite::error::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#3}::negate::alloc::alloc::Global","regex_lite::pikevm::!","regex_lite::utf8::tests::core::result::Result<core::option::Option<hir::Hir>, error::Error>","regex_lite::utf8::is_word_byte::hir::Flags","regex_lite::hir::parse::()","regex_lite::interpolate::Config","regex_lite::nfa::core::option::Option","regex_lite::string::core::option::Option","regex_lite::string::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::parse::bool","regex_lite::pool::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::decode_step::Config","regex_lite::hir::parse::core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error>","regex_lite::error::u32","regex_lite::hir::parse::tests::core::convert::Infallible","regex_lite::pikevm::core::result::Result","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","regex_lite::string::{impl#14}::fmt::u32","regex_lite::interpolate::error::Error","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, alloc::vec::Vec<hir::Hir>>","regex_lite::int::Cell","regex_lite::hir::{impl#5}::is_match::core::result::Result, error::Error>","regex_lite::error::core::cell::Cell>","regex_lite::string::hir::parse::Parser","regex_lite::hir::parse::core::convert::Infallible","regex_lite::utf8::is_word_byte::str","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow, hir::Hir>","regex_lite::hir::parse::str"]}