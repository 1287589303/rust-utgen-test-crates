{"mod_name":"hir","calls":["<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","alloc::vec::Vec::<hir::ClassRange>::len","alloc::vec::Vec::<hir::ClassRange>::push","<core::ops::Range<usize> as core::iter::Iterator>::next","hir::ClassRange::ascii_case_fold","hir::Class::canonicalize","<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::Class::ascii_case_fold","alloc::vec::Vec::push","alloc::vec::Vec::len","regex_lite::int::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::nfa::alloc::vec::Vec::len","regex_lite::nfa::hir::Class::canonicalize","regex_lite::hir::hir::ClassRange::ascii_case_fold","regex_lite::pikevm::hir::Class::canonicalize","regex_lite::utf8::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::error::hir::Class::canonicalize","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::{impl#5}::is_match::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::parse::regex_lite::hir::Class::ascii_case_fold","regex_lite::pikevm::regex_lite::hir::Class::ascii_case_fold","regex_lite::string::alloc::vec::Vec::push","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::utf8::is_word_byte::alloc::vec::Vec::push","regex_lite::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::len","regex_lite::nfa::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::parse::tests::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::parse::tests::alloc::vec::Vec::len","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::push","regex_lite::string::alloc::vec::Vec::len","regex_lite::hir::{impl#5}::is_match::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::string::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#3}::negate::hir::Class::canonicalize","regex_lite::hir::hir::Class::canonicalize","regex_lite::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::utf8::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::interpolate::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::error::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::string::{impl#14}::fmt::hir::ClassRange::ascii_case_fold","regex_lite::string::hir::Class::canonicalize","regex_lite::utf8::decode_step::hir::Class::canonicalize","regex_lite::pool::hir::Class::canonicalize","regex_lite::utf8::hir::Class::canonicalize","regex_lite::hir::parse::check_hir_nesting::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::nfa::regex_lite::hir::Class::ascii_case_fold","regex_lite::string::{impl#14}::fmt::regex_lite::hir::Class::ascii_case_fold","regex_lite::pool::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::interpolate::alloc::vec::Vec::push","regex_lite::hir::parse::alloc::vec::Vec::push","regex_lite::hir::alloc::vec::Vec::push","regex_lite::hir::parse::alloc::vec::Vec::len","regex_lite::utf8::alloc::vec::Vec::push","regex_lite::pool::alloc::vec::Vec::len","regex_lite::hir::alloc::vec::Vec::len","regex_lite::nfa::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::int::alloc::vec::Vec::len","regex_lite::alloc::vec::Vec::len","regex_lite::nfa::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::int::regex_lite::hir::Class::ascii_case_fold","regex_lite::interpolate::hir::ClassRange::ascii_case_fold","regex_lite::int::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::utf8::is_word_byte::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::pikevm::alloc::vec::Vec::push","regex_lite::utf8::tests::hir::ClassRange::ascii_case_fold","regex_lite::hir::parse::hir::ClassRange::ascii_case_fold","regex_lite::hir::parse::check_hir_nesting::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#3}::negate::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#6}::drop::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::error::alloc::vec::Vec::push","regex_lite::int::alloc::vec::Vec::push","regex_lite::pikevm::alloc::vec::Vec::len","regex_lite::string::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::parse::check_hir_nesting::hir::ClassRange::ascii_case_fold","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::error::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#2}::subs::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::int::hir::ClassRange::ascii_case_fold","regex_lite::utf8::tests::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::{impl#3}::negate::hir::ClassRange::ascii_case_fold","regex_lite::utf8::alloc::vec::Vec::len","regex_lite::utf8::tests::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::nfa::hir::ClassRange::ascii_case_fold","regex_lite::hir::{impl#6}::drop::hir::Class::canonicalize","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::nfa::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::parse::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::interpolate::regex_lite::hir::Class::ascii_case_fold","regex_lite::pikevm::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::parse::check_hir_nesting::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::string::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::{impl#2}::subs::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::pool::regex_lite::hir::Class::ascii_case_fold","regex_lite::error::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::regex_lite::hir::Class::ascii_case_fold","regex_lite::pool::alloc::vec::Vec::push","regex_lite::hir::{impl#5}::is_match::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::pikevm::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::interpolate::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::{impl#5}::is_match::hir::Class::canonicalize","regex_lite::error::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::{impl#6}::drop::hir::ClassRange::ascii_case_fold","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::push","regex_lite::error::alloc::vec::Vec::len","regex_lite::int::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::pool::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::utf8::decode_step::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::int::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::parse::tests::hir::ClassRange::ascii_case_fold","regex_lite::utf8::tests::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::interpolate::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#6}::drop::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::int::hir::Class::canonicalize","regex_lite::utf8::tests::hir::Class::canonicalize","regex_lite::hir::{impl#6}::drop::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::utf8::decode_step::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::parse::tests::regex_lite::hir::Class::ascii_case_fold","regex_lite::pikevm::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::push","regex_lite::hir::Class::canonicalize","regex_lite::pikevm::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::is_word_byte::regex_lite::hir::Class::ascii_case_fold","regex_lite::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::string::{impl#14}::fmt::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::interpolate::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::{impl#5}::is_match::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::utf8::tests::alloc::vec::Vec::push","regex_lite::pool::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::utf8::is_word_byte::hir::Class::canonicalize","regex_lite::utf8::tests::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::error::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::pikevm::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::len","regex_lite::interpolate::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::parse::hir::Class::canonicalize","regex_lite::int::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::parse::tests::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::string::regex_lite::hir::Class::ascii_case_fold","regex_lite::utf8::decode_step::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::utf8::decode_step::hir::ClassRange::ascii_case_fold","regex_lite::hir::{impl#2}::subs::regex_lite::hir::Class::ascii_case_fold","regex_lite::utf8::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::len","regex_lite::hir::{impl#2}::subs::hir::Class::canonicalize","regex_lite::utf8::decode_step::alloc::vec::Vec::push","regex_lite::utf8::is_word_byte::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::push","regex_lite::interpolate::hir::Class::canonicalize","regex_lite::string::{impl#14}::fmt::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::parse::check_hir_nesting::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::parse::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::interpolate::alloc::vec::Vec::len","regex_lite::utf8::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::{impl#3}::negate::regex_lite::hir::Class::ascii_case_fold","regex_lite::utf8::is_word_byte::alloc::vec::Vec::len","regex_lite::hir::parse::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::error::hir::ClassRange::ascii_case_fold","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::push","regex_lite::pool::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::utf8::decode_step::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::pool::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::decode_step::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#2}::subs::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#2}::subs::hir::ClassRange::ascii_case_fold","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::push","regex_lite::utf8::decode_step::alloc::vec::Vec::len","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::tests::alloc::vec::Vec::len","regex_lite::hir::parse::tests::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::hir::ClassRange::ascii_case_fold","regex_lite::hir::parse::tests::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::alloc::vec::Vec::push","regex_lite::hir::{impl#3}::negate::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::utf8::is_word_byte::hir::ClassRange::ascii_case_fold","regex_lite::pikevm::hir::ClassRange::ascii_case_fold","regex_lite::utf8::tests::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::ClassRange::ascii_case_fold","regex_lite::pool::hir::ClassRange::ascii_case_fold","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::utf8::is_word_byte::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::hir::{impl#5}::is_match::hir::ClassRange::ascii_case_fold","regex_lite::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::parse::tests::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::hir::parse::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::string::alloc::vec::Vec::<hir::ClassRange>::len","regex_lite::nfa::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::{impl#6}::drop::regex_lite::hir::Class::ascii_case_fold","regex_lite::utf8::decode_step::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::string::hir::ClassRange::ascii_case_fold","regex_lite::nfa::alloc::vec::Vec::push","regex_lite::hir::parse::check_hir_nesting::hir::Class::canonicalize","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::len","regex_lite::hir::parse::alloc::vec::Vec::<hir::ClassRange>::push","regex_lite::hir::parse::tests::hir::Class::canonicalize","regex_lite::string::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::error::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::{impl#3}::negate::<core::ops::Range<usize> as core::iter::Iterator>::next","regex_lite::string::{impl#14}::fmt::<alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index","regex_lite::hir::<core::ops::Range<usize> as core::iter::IntoIterator>::into_iter","regex_lite::hir::parse::tests::alloc::vec::Vec::push","regex_lite::string::{impl#14}::fmt::hir::Class::canonicalize","regex_lite::utf8::tests::regex_lite::hir::Class::ascii_case_fold","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::len","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::len"],"types":["alloc::vec::Vec<hir::ClassRange>","core::option::Option<hir::ClassRange>","()","hir::Class","!","usize","core::ops::Range<usize>","core::option::Option<usize>","isize","hir::ClassRange","alloc::alloc::Global","regex_lite::hir::Class","ClassRange","Vec","alloc::vec::Vec","core::ops::Range","core::option::Option","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec","regex_lite::nfa::core::option::Option<usize>","regex_lite::hir::parse::isize","regex_lite::utf8::core::option::Option","regex_lite::core::option::Option<hir::ClassRange>","regex_lite::core::ops::Range<usize>","regex_lite::utf8::is_word_byte::usize","regex_lite::int::usize","regex_lite::hir::{impl#3}::negate::core::option::Option","regex_lite::utf8::decode_step::core::ops::Range<usize>","regex_lite::string::()","regex_lite::hir::hir::Class","regex_lite::utf8::ClassRange","regex_lite::regex_lite::hir::Class","regex_lite::pool::Vec","regex_lite::utf8::is_word_byte::core::ops::Range<usize>","regex_lite::hir::parse::check_hir_nesting::hir::ClassRange","regex_lite::interpolate::alloc::vec::Vec<hir::ClassRange>","regex_lite::int::alloc::vec::Vec","regex_lite::pikevm::core::option::Option","regex_lite::hir::{impl#6}::drop::core::option::Option<usize>","regex_lite::hir::{impl#6}::drop::core::option::Option<hir::ClassRange>","regex_lite::interpolate::!","regex_lite::utf8::is_word_byte::core::option::Option<usize>","regex_lite::string::regex_lite::hir::Class","regex_lite::hir::parse::check_hir_nesting::hir::Class","regex_lite::hir::{impl#2}::subs::!","regex_lite::string::{impl#14}::fmt::core::option::Option<usize>","regex_lite::hir::{impl#6}::drop::hir::ClassRange","regex_lite::nfa::alloc::alloc::Global","regex_lite::utf8::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#5}::is_match::regex_lite::hir::Class","regex_lite::hir::parse::tests::regex_lite::hir::Class","regex_lite::interpolate::isize","regex_lite::error::core::option::Option<usize>","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec","regex_lite::pool::core::ops::Range","regex_lite::usize","regex_lite::utf8::()","regex_lite::pool::usize","regex_lite::hir::{impl#3}::negate::usize","regex_lite::utf8::decode_step::isize","regex_lite::utf8::is_word_byte::hir::Class","regex_lite::utf8::tests::regex_lite::hir::Class","regex_lite::int::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::()","regex_lite::hir::parse::tests::hir::Class","regex_lite::string::{impl#14}::fmt::usize","regex_lite::hir::parse::Vec","regex_lite::string::{impl#14}::fmt::isize","regex_lite::int::core::ops::Range<usize>","regex_lite::pool::()","regex_lite::error::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#2}::subs::usize","regex_lite::hir::{impl#5}::is_match::isize","regex_lite::hir::parse::tests::core::ops::Range","regex_lite::hir::Vec","regex_lite::hir::{impl#6}::drop::core::ops::Range","regex_lite::hir::parse::check_hir_nesting::isize","regex_lite::int::core::ops::Range","regex_lite::interpolate::core::ops::Range","regex_lite::pool::core::option::Option<usize>","regex_lite::string::{impl#14}::fmt::Vec","regex_lite::utf8::decode_step::!","regex_lite::hir::{impl#5}::is_match::Vec","regex_lite::core::option::Option","regex_lite::hir::parse::tests::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::is_word_byte::isize","regex_lite::hir::{impl#2}::subs::hir::ClassRange","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::core::option::Option<usize>","regex_lite::hir::parse::hir::ClassRange","regex_lite::int::!","regex_lite::hir::{impl#2}::subs::alloc::alloc::Global","regex_lite::nfa::regex_lite::hir::Class","regex_lite::utf8::decode_step::hir::Class","regex_lite::utf8::tests::ClassRange","regex_lite::hir::{impl#2}::subs::ClassRange","regex_lite::hir::{impl#6}::drop::ClassRange","regex_lite::nfa::core::ops::Range","regex_lite::hir::{impl#3}::negate::Vec","regex_lite::hir::{impl#3}::negate::alloc::alloc::Global","regex_lite::utf8::core::option::Option<usize>","regex_lite::utf8::decode_step::Vec","regex_lite::utf8::decode_step::core::option::Option<hir::ClassRange>","regex_lite::pikevm::hir::Class","regex_lite::utf8::usize","regex_lite::hir::parse::regex_lite::hir::Class","regex_lite::utf8::decode_step::usize","regex_lite::utf8::decode_step::hir::ClassRange","regex_lite::hir::{impl#2}::subs::core::option::Option<hir::ClassRange>","regex_lite::hir::parse::core::option::Option","regex_lite::pikevm::usize","regex_lite::hir::parse::check_hir_nesting::alloc::alloc::Global","regex_lite::hir::parse::alloc::alloc::Global","regex_lite::pikevm::ClassRange","regex_lite::nfa::!","regex_lite::pool::core::option::Option","regex_lite::hir::parse::tests::isize","regex_lite::hir::parse::tests::core::option::Option<hir::ClassRange>","regex_lite::nfa::alloc::vec::Vec<hir::ClassRange>","regex_lite::string::{impl#14}::fmt::()","regex_lite::hir::parse::check_hir_nesting::usize","regex_lite::error::isize","regex_lite::utf8::tests::hir::Class","regex_lite::utf8::tests::alloc::alloc::Global","regex_lite::utf8::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#5}::is_match::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::alloc::alloc::Global","regex_lite::pikevm::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#6}::drop::()","regex_lite::hir::{impl#5}::is_match::hir::ClassRange","regex_lite::utf8::alloc::alloc::Global","regex_lite::pikevm::Vec","regex_lite::error::hir::ClassRange","regex_lite::hir::parse::alloc::vec::Vec<hir::ClassRange>","regex_lite::nfa::ClassRange","regex_lite::hir::{impl#6}::drop::core::ops::Range<usize>","regex_lite::interpolate::usize","regex_lite::utf8::is_word_byte::()","regex_lite::utf8::isize","regex_lite::hir::parse::check_hir_nesting::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#3}::negate::!","regex_lite::interpolate::ClassRange","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#5}::is_match::hir::Class","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec","regex_lite::hir::parse::tests::ClassRange","regex_lite::hir::{impl#5}::is_match::!","regex_lite::utf8::tests::alloc::vec::Vec","regex_lite::int::core::option::Option","regex_lite::utf8::Vec","regex_lite::!","regex_lite::utf8::tests::core::ops::Range<usize>","regex_lite::interpolate::()","regex_lite::int::core::option::Option<usize>","regex_lite::hir::{impl#5}::is_match::core::ops::Range<usize>","regex_lite::utf8::tests::Vec","regex_lite::utf8::is_word_byte::Vec","regex_lite::utf8::tests::core::ops::Range","regex_lite::hir::{impl#2}::subs::isize","regex_lite::utf8::is_word_byte::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::()","regex_lite::isize","regex_lite::interpolate::core::option::Option<usize>","regex_lite::pool::!","regex_lite::utf8::is_word_byte::alloc::vec::Vec","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec","regex_lite::pool::isize","regex_lite::hir::{impl#5}::is_match::core::option::Option","regex_lite::hir::parse::tests::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::regex_lite::hir::Class","regex_lite::alloc::vec::Vec<hir::ClassRange>","regex_lite::int::hir::ClassRange","regex_lite::alloc::vec::Vec","regex_lite::utf8::!","regex_lite::error::core::option::Option","regex_lite::hir::parse::check_hir_nesting::core::option::Option","regex_lite::hir::{impl#3}::negate::regex_lite::hir::Class","regex_lite::int::regex_lite::hir::Class","regex_lite::Vec","regex_lite::interpolate::Vec","regex_lite::error::alloc::vec::Vec","regex_lite::utf8::is_word_byte::core::option::Option","regex_lite::string::alloc::vec::Vec","regex_lite::pool::alloc::vec::Vec<hir::ClassRange>","regex_lite::string::alloc::alloc::Global","regex_lite::nfa::Vec","regex_lite::string::core::ops::Range","regex_lite::string::{impl#14}::fmt::core::option::Option","regex_lite::hir::{impl#3}::negate::hir::Class","regex_lite::error::hir::Class","regex_lite::utf8::is_word_byte::ClassRange","regex_lite::int::core::option::Option<hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::core::ops::Range<usize>","regex_lite::string::usize","regex_lite::hir::parse::tests::core::option::Option","regex_lite::hir::{impl#3}::negate::core::option::Option<hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::()","regex_lite::hir::usize","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::!","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::tests::Vec","regex_lite::utf8::hir::Class","regex_lite::interpolate::hir::Class","regex_lite::hir::{impl#6}::drop::hir::Class","regex_lite::nfa::hir::Class","regex_lite::utf8::is_word_byte::!","regex_lite::string::!","regex_lite::hir::{impl#3}::negate::core::ops::Range<usize>","regex_lite::hir::{impl#6}::drop::isize","regex_lite::hir::parse::ClassRange","regex_lite::pikevm::core::ops::Range<usize>","regex_lite::hir::{impl#6}::drop::regex_lite::hir::Class","regex_lite::interpolate::regex_lite::hir::Class","regex_lite::string::{impl#14}::fmt::core::ops::Range","regex_lite::utf8::regex_lite::hir::Class","regex_lite::interpolate::hir::ClassRange","regex_lite::utf8::decode_step::alloc::alloc::Global","regex_lite::error::core::ops::Range","regex_lite::hir::{impl#2}::subs::regex_lite::hir::Class","regex_lite::hir::parse::core::ops::Range","regex_lite::hir::{impl#6}::drop::Vec","regex_lite::hir::{impl#2}::subs::Vec","regex_lite::pikevm::alloc::vec::Vec<hir::ClassRange>","regex_lite::string::{impl#14}::fmt::hir::ClassRange","regex_lite::core::option::Option<usize>","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::usize","regex_lite::utf8::core::ops::Range","regex_lite::utf8::decode_step::core::option::Option","regex_lite::hir::{impl#2}::subs::()","regex_lite::hir::isize","regex_lite::pool::core::option::Option<hir::ClassRange>","regex_lite::int::hir::Class","regex_lite::error::core::ops::Range<usize>","regex_lite::pool::alloc::alloc::Global","regex_lite::utf8::tests::core::option::Option","regex_lite::int::alloc::alloc::Global","regex_lite::hir::{impl#3}::negate::core::ops::Range","regex_lite::hir::ClassRange","regex_lite::utf8::tests::()","regex_lite::utf8::decode_step::core::option::Option<usize>","regex_lite::utf8::tests::isize","regex_lite::nfa::hir::ClassRange","regex_lite::hir::parse::check_hir_nesting::regex_lite::hir::Class","regex_lite::pikevm::isize","regex_lite::hir::parse::tests::core::option::Option<usize>","regex_lite::utf8::is_word_byte::hir::ClassRange","regex_lite::utf8::decode_step::alloc::vec::Vec","regex_lite::pool::regex_lite::hir::Class","regex_lite::utf8::tests::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#3}::negate::()","regex_lite::hir::{impl#5}::is_match::core::ops::Range","regex_lite::error::usize","regex_lite::int::Vec","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec","regex_lite::interpolate::alloc::alloc::Global","regex_lite::utf8::tests::hir::ClassRange","regex_lite::int::()","regex_lite::hir::{impl#6}::drop::usize","regex_lite::hir::regex_lite::hir::Class","regex_lite::string::isize","regex_lite::hir::parse::core::option::Option<usize>","regex_lite::pikevm::hir::ClassRange","regex_lite::hir::parse::check_hir_nesting::Vec","regex_lite::hir::{impl#5}::is_match::()","regex_lite::utf8::alloc::vec::Vec","regex_lite::utf8::decode_step::core::ops::Range","regex_lite::string::alloc::vec::Vec<hir::ClassRange>","regex_lite::alloc::alloc::Global","regex_lite::int::isize","regex_lite::error::Vec","regex_lite::hir::parse::alloc::vec::Vec","regex_lite::hir::parse::!","regex_lite::pool::hir::ClassRange","regex_lite::hir::core::option::Option<hir::ClassRange>","regex_lite::utf8::core::ops::Range<usize>","regex_lite::pikevm::regex_lite::hir::Class","regex_lite::error::()","regex_lite::hir::parse::tests::core::ops::Range<usize>","regex_lite::interpolate::alloc::vec::Vec","regex_lite::pikevm::alloc::vec::Vec","regex_lite::string::{impl#14}::fmt::hir::Class","regex_lite::hir::core::option::Option<usize>","regex_lite::hir::{impl#2}::subs::hir::Class","regex_lite::string::{impl#14}::fmt::core::ops::Range<usize>","regex_lite::interpolate::core::option::Option<hir::ClassRange>","regex_lite::nfa::()","regex_lite::string::core::option::Option<usize>","regex_lite::utf8::is_word_byte::alloc::alloc::Global","regex_lite::int::ClassRange","regex_lite::()","regex_lite::utf8::decode_step::regex_lite::hir::Class","regex_lite::string::core::option::Option<hir::ClassRange>","regex_lite::hir::alloc::vec::Vec<hir::ClassRange>","regex_lite::string::hir::Class","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::tests::!","regex_lite::hir::{impl#2}::subs::core::ops::Range<usize>","regex_lite::utf8::is_word_byte::core::option::Option<hir::ClassRange>","regex_lite::utf8::tests::core::option::Option<usize>","regex_lite::hir::alloc::alloc::Global","regex_lite::interpolate::core::option::Option","regex_lite::hir::{impl#6}::drop::core::option::Option","regex_lite::string::{impl#14}::fmt::core::option::Option<hir::ClassRange>","regex_lite::pikevm::core::option::Option<usize>","regex_lite::hir::parse::core::ops::Range<usize>","regex_lite::pool::ClassRange","regex_lite::utf8::is_word_byte::core::ops::Range","regex_lite::utf8::is_word_byte::regex_lite::hir::Class","regex_lite::nfa::core::ops::Range<usize>","regex_lite::hir::{impl#2}::subs::core::option::Option<usize>","regex_lite::string::ClassRange","regex_lite::nfa::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<hir::ClassRange>","regex_lite::error::core::option::Option<hir::ClassRange>","regex_lite::utf8::tests::!","regex_lite::pikevm::!","regex_lite::hir::parse::tests::usize","regex_lite::string::hir::ClassRange","regex_lite::hir::{impl#6}::drop::alloc::alloc::Global","regex_lite::hir::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::core::ops::Range","regex_lite::hir::parse::tests::()","regex_lite::hir::{impl#5}::is_match::core::option::Option<usize>","regex_lite::core::ops::Range","regex_lite::hir::{impl#5}::is_match::usize","regex_lite::hir::{impl#5}::is_match::core::option::Option<hir::ClassRange>","regex_lite::hir::core::ops::Range<usize>","regex_lite::error::alloc::alloc::Global","regex_lite::hir::{impl#3}::negate::core::option::Option<usize>","regex_lite::pikevm::core::ops::Range","regex_lite::nfa::alloc::vec::Vec","regex_lite::hir::parse::hir::Class","regex_lite::string::{impl#14}::fmt::ClassRange","regex_lite::utf8::decode_step::alloc::vec::Vec<hir::ClassRange>","regex_lite::pool::core::ops::Range<usize>","regex_lite::hir::hir::ClassRange","regex_lite::string::core::option::Option","regex_lite::pool::hir::Class","regex_lite::hir::{impl#3}::negate::hir::ClassRange","regex_lite::error::!","regex_lite::pikevm::alloc::alloc::Global","regex_lite::nfa::usize","regex_lite::hir::parse::tests::hir::ClassRange","regex_lite::ClassRange","regex_lite::hir::{impl#2}::subs::core::option::Option","regex_lite::nfa::core::option::Option","regex_lite::hir::{impl#3}::negate::ClassRange","regex_lite::hir::core::ops::Range","regex_lite::utf8::tests::usize","regex_lite::hir::parse::tests::alloc::vec::Vec","regex_lite::string::core::ops::Range<usize>","regex_lite::error::regex_lite::hir::Class","regex_lite::hir::{impl#5}::is_match::ClassRange","regex_lite::hir::core::option::Option","regex_lite::string::{impl#14}::fmt::!","regex_lite::utf8::hir::ClassRange","regex_lite::nfa::isize","regex_lite::hir::{impl#3}::negate::isize","regex_lite::pool::alloc::vec::Vec","regex_lite::utf8::decode_step::ClassRange","regex_lite::pikevm::()","regex_lite::hir::parse::core::option::Option<hir::ClassRange>","regex_lite::hir::{impl#6}::drop::!","regex_lite::string::Vec","regex_lite::hir::{impl#2}::subs::core::ops::Range","regex_lite::utf8::tests::alloc::vec::Vec<hir::ClassRange>","regex_lite::error::ClassRange","regex_lite::hir::parse::check_hir_nesting::ClassRange","regex_lite::utf8::decode_step::()","regex_lite::hir::!","regex_lite::interpolate::core::ops::Range<usize>"]}