{"mod_name":"nfa","calls":["nfa::Compiler::add","<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","alloc::vec::Vec::<hir::ClassRange>::is_empty","<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","core::slice::<impl [hir::ClassRange]>::iter","<core::result::Result<u32, error::Error> as core::ops::Try>::branch","<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::nfa::Compiler::c_class","core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","core::slice::iter","core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","alloc::vec::Vec::is_empty","core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::nfa::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::is_word_byte::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::utf8::tests::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::nfa::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::nfa::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::string::nfa::Compiler::add","regex_lite::string::{impl#14}::fmt::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::pool::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::utf8::tests::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::error::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::string::alloc::vec::Vec::is_empty","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pikevm::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::int::core::slice::iter","regex_lite::error::nfa::Compiler::add","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::pikevm::alloc::vec::Vec::is_empty","regex_lite::error::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::int::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::tests::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::pikevm::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::string::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#5}::is_match::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::utf8::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::int::nfa::Compiler::add","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#3}::negate::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::utf8::tests::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::regex_lite::nfa::Compiler::c_class","regex_lite::nfa::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::nfa::Compiler::add","regex_lite::utf8::tests::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::interpolate::regex_lite::nfa::Compiler::c_class","regex_lite::hir::parse::tests::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::regex_lite::nfa::Compiler::c_class","regex_lite::hir::parse::check_hir_nesting::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::pool::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::interpolate::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::iter","regex_lite::utf8::decode_step::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::int::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::error::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::iter","regex_lite::hir::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::is_word_byte::regex_lite::nfa::Compiler::c_class","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::nfa::regex_lite::nfa::Compiler::c_class","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::hir::parse::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::nfa::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::utf8::tests::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::is_empty","regex_lite::nfa::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::pool::nfa::Compiler::add","regex_lite::hir::parse::nfa::Compiler::add","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::int::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::interpolate::alloc::vec::Vec::is_empty","regex_lite::core::slice::iter","regex_lite::hir::parse::tests::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::int::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::utf8::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::error::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::{impl#6}::drop::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::utf8::tests::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::hir::{impl#2}::subs::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::nfa::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::error::core::slice::iter","regex_lite::string::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::interpolate::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::tests::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::check_hir_nesting::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::string::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::int::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::nfa::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::error::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::pikevm::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::pikevm::regex_lite::nfa::Compiler::c_class","regex_lite::int::regex_lite::nfa::Compiler::c_class","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::string::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pool::alloc::vec::Vec::is_empty","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::iter","regex_lite::nfa::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::utf8::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::iter","regex_lite::hir::{impl#2}::subs::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::parse::check_hir_nesting::nfa::Compiler::add","regex_lite::interpolate::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#5}::is_match::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::string::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::int::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#5}::is_match::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::is_empty","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::nfa::nfa::Compiler::add","regex_lite::interpolate::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::nfa::Compiler::add","regex_lite::pool::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::pikevm::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::utf8::regex_lite::nfa::Compiler::c_class","regex_lite::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::tests::nfa::Compiler::add","regex_lite::hir::nfa::Compiler::add","regex_lite::int::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::error::regex_lite::nfa::Compiler::c_class","regex_lite::utf8::decode_step::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pool::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::utf8::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::alloc::vec::Vec::is_empty","regex_lite::string::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::hir::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::iter","regex_lite::utf8::decode_step::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::pool::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::string::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pool::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::pikevm::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::nfa::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::parse::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::utf8::alloc::vec::Vec::is_empty","regex_lite::int::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::parse::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::string::{impl#14}::fmt::nfa::Compiler::add","regex_lite::hir::parse::tests::regex_lite::nfa::Compiler::c_class","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::pikevm::nfa::Compiler::add","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::tests::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::interpolate::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::string::{impl#14}::fmt::regex_lite::nfa::Compiler::c_class","regex_lite::hir::parse::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#6}::drop::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::int::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::is_empty","regex_lite::hir::parse::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pool::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::decode_step::nfa::Compiler::add","regex_lite::hir::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::string::core::slice::iter","regex_lite::interpolate::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::utf8::tests::alloc::vec::Vec::is_empty","regex_lite::error::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::pikevm::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::pool::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::{impl#5}::is_match::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::{impl#3}::negate::regex_lite::nfa::Compiler::c_class","regex_lite::hir::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#6}::drop::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::utf8::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::pikevm::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::nfa::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::utf8::decode_step::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#3}::negate::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::int::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::parse::tests::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::error::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::parse::alloc::vec::Vec::is_empty","regex_lite::string::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::hir::parse::tests::nfa::Compiler::add","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::pool::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::nfa::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::interpolate::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::error::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::alloc::vec::Vec::is_empty","regex_lite::interpolate::nfa::Compiler::add","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::parse::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::hir::{impl#5}::is_match::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::pool::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::nfa::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::pikevm::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::int::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::iter","regex_lite::pool::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::error::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::interpolate::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::utf8::nfa::Compiler::add","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::iter","regex_lite::utf8::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::pool::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::parse::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::pikevm::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::string::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::string::regex_lite::nfa::Compiler::c_class","regex_lite::nfa::Compiler::add","regex_lite::error::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::int::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::utf8::is_word_byte::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::string::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::alloc::vec::Vec::is_empty","regex_lite::nfa::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::error::alloc::vec::Vec::is_empty","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::error::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::{impl#5}::is_match::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::hir::parse::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::interpolate::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::nfa::Compiler::add","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::[hir::ClassRange]>::iter","regex_lite::interpolate::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::error::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::{impl#2}::subs::regex_lite::nfa::Compiler::c_class","regex_lite::error::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::int::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::nfa::Compiler::add","regex_lite::interpolate::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::pool::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::pool::core::slice::<impl regex_lite::interpolate::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::parse::check_hir_nesting::core::slice::iter","regex_lite::hir::alloc::vec::Vec::is_empty","regex_lite::pikevm::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::string::{impl#14}::fmt::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::parse::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::int::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::pikevm::[hir::ClassRange]>::iter","regex_lite::pool::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::pikevm::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::nfa::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","regex_lite::hir::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::hir::{impl#2}::subs::core::slice::<impl regex_lite::string::{impl#14}::fmt::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::hir::parse::tests::[hir::ClassRange]>::iter","regex_lite::utf8::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::hir::{impl#3}::negate::core::slice::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::string::{impl#14}::fmt::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::nfa::Compiler::add","regex_lite::hir::parse::check_hir_nesting::<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]>::iter","regex_lite::utf8::tests::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::hir::{impl#6}::drop::[hir::ClassRange]>::iter","regex_lite::hir::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::error::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::{impl#6}::drop::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#3}::negate::<core::result::Result<u32, error::Error> as core::ops::Try>::branch","regex_lite::utf8::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::core::slice::<impl regex_lite::hir::{impl#2}::subs::[hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::pool::core::slice::<impl regex_lite::utf8::decode_step::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::utf8::decode_step::alloc::vec::Vec::<hir::ClassRange>::is_empty","regex_lite::utf8::tests::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#6}::drop::core::slice::<impl regex_lite::utf8::is_word_byte::[hir::ClassRange]>::iter","regex_lite::hir::parse::core::slice::<impl regex_lite::nfa::[hir::ClassRange]>::iter","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::utf8::tests::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::core::slice::<impl regex_lite::utf8::tests::[hir::ClassRange]>::iter","regex_lite::nfa::core::slice::<impl regex_lite::utf8::[hir::ClassRange]>::iter","regex_lite::pikevm::core::slice::<impl regex_lite::error::[hir::ClassRange]>::iter","regex_lite::string::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter","regex_lite::utf8::is_word_byte::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::hir::parse::regex_lite::nfa::Compiler::c_class","regex_lite::hir::{impl#3}::negate::core::slice::<impl [hir::ClassRange]>::iter","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]>::iter","regex_lite::utf8::tests::core::slice::<impl regex_lite::pool::[hir::ClassRange]>::iter","regex_lite::int::<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","regex_lite::hir::parse::tests::core::slice::<impl regex_lite::hir::{impl#3}::negate::[hir::ClassRange]>::iter","regex_lite::utf8::<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","regex_lite::nfa::core::slice::iter","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::is_empty","regex_lite::hir::{impl#5}::is_match::core::slice::<impl regex_lite::string::[hir::ClassRange]>::iter"],"types":["bool","core::slice::Iter<'_, hir::ClassRange>","core::convert::Infallible","core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","hir::ClassRange","core::result::Result<core::convert::Infallible, error::Error>","{closure@regex-lite/src/nfa.rs:347:41: 347:44}","(char, char)","nfa::State","error::Error","hir::Class","core::result::Result<nfa::ThompsonRef, error::Error>","isize","alloc::vec::Vec<hir::ClassRange>","core::result::Result<u32, error::Error>","nfa::ThompsonRef","[hir::ClassRange]","!","alloc::alloc::Global","nfa::Compiler","char","u32","alloc::vec::Vec<(char, char)>","regex_lite::nfa::Compiler","Config","NFA","RefCell","core::slice::Iter","core::result::Result","core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","core::ops::ControlFlow, u32>","alloc::vec::Vec","regex_lite::hir::{impl#3}::negate::[hir::ClassRange]","regex_lite::utf8::tests::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::nfa::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::core::result::Result<u32, error::Error>","regex_lite::utf8::decode_step::regex_lite::nfa::Compiler","regex_lite::pikevm::alloc::vec::Vec<hir::ClassRange>","regex_lite::error::u32","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::[hir::ClassRange]","regex_lite::hir::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::string::(char, char)","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#3}::negate::alloc::alloc::Global","regex_lite::utf8::decode_step::error::Error","regex_lite::isize","regex_lite::interpolate::core::convert::Infallible","regex_lite::utf8::decode_step::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#6}::drop::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::is_word_byte::Config","regex_lite::utf8::is_word_byte::bool","regex_lite::hir::parse::check_hir_nesting::char","regex_lite::hir::{impl#5}::is_match::core::result::Result<u32, error::Error>","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::error::Error","regex_lite::utf8::decode_step::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::is_word_byte::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::interpolate::char","regex_lite::hir::{impl#2}::subs::RefCell","regex_lite::nfa::core::result::Result","regex_lite::hir::parse::check_hir_nesting::nfa::State","regex_lite::utf8::isize","regex_lite::utf8::decode_step::core::slice::Iter","regex_lite::interpolate::!","regex_lite::utf8::tests::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::RefCell","regex_lite::string::{impl#14}::fmt::core::result::Result","regex_lite::string::alloc::vec::Vec","regex_lite::interpolate::core::result::Result<u32, error::Error>","regex_lite::pool::nfa::Compiler","regex_lite::int::alloc::vec::Vec","regex_lite::hir::{impl#6}::drop::RefCell","regex_lite::hir::parse::check_hir_nesting::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#5}::is_match::bool","regex_lite::utf8::is_word_byte::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::utf8::decode_step::isize","regex_lite::utf8::is_word_byte::error::Error","regex_lite::int::nfa::Compiler","regex_lite::!","regex_lite::utf8::decode_step::Config","regex_lite::string::NFA","regex_lite::hir::{impl#3}::negate::NFA","regex_lite::string::{impl#14}::fmt::nfa::State","regex_lite::string::{impl#14}::fmt::nfa::ThompsonRef","regex_lite::nfa::State","regex_lite::hir::parse::hir::Class","regex_lite::utf8::tests::!","regex_lite::string::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::pikevm::alloc::alloc::Global","regex_lite::u32","regex_lite::string::u32","regex_lite::utf8::NFA","regex_lite::nfa::RefCell","regex_lite::string::core::slice::Iter","regex_lite::hir::{impl#6}::drop::core::convert::Infallible","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow, u32>","regex_lite::hir::parse::Config","regex_lite::pikevm::core::ops::ControlFlow, u32>","regex_lite::utf8::tests::nfa::State","regex_lite::pikevm::nfa::State","regex_lite::error::regex_lite::nfa::Compiler","regex_lite::utf8::is_word_byte::core::convert::Infallible","regex_lite::interpolate::Config","regex_lite::utf8::decode_step::alloc::vec::Vec","regex_lite::nfa::[hir::ClassRange]","regex_lite::utf8::tests::alloc::vec::Vec","regex_lite::utf8::alloc::vec::Vec","regex_lite::hir::parse::tests::nfa::Compiler","regex_lite::utf8::tests::core::convert::Infallible","regex_lite::pool::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::utf8::tests::char","regex_lite::utf8::is_word_byte::alloc::vec::Vec<hir::ClassRange>","regex_lite::string::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::nfa::State","regex_lite::hir::parse::check_hir_nesting::error::Error","regex_lite::pikevm::hir::Class","regex_lite::hir::{impl#6}::drop::!","regex_lite::core::result::Result","regex_lite::nfa::u32","regex_lite::hir::nfa::Compiler","regex_lite::utf8::tests::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::core::result::Result<u32, error::Error>","regex_lite::string::{impl#14}::fmt::char","regex_lite::hir::parse::check_hir_nesting::[hir::ClassRange]","regex_lite::string::{impl#14}::fmt::error::Error","regex_lite::regex_lite::nfa::Compiler","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec","regex_lite::utf8::Config","regex_lite::utf8::tests::hir::Class","regex_lite::hir::{impl#3}::negate::RefCell","regex_lite::utf8::is_word_byte::hir::Class","regex_lite::interpolate::RefCell","regex_lite::hir::parse::tests::hir::ClassRange","regex_lite::pool::isize","regex_lite::hir::{impl#6}::drop::alloc::alloc::Global","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<(char, char)>","regex_lite::hir::{impl#6}::drop::[hir::ClassRange]","regex_lite::pool::RefCell","regex_lite::int::isize","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<(char, char)>","regex_lite::int::!","regex_lite::utf8::core::slice::Iter<'_, hir::ClassRange>","regex_lite::interpolate::alloc::alloc::Global","regex_lite::interpolate::alloc::vec::Vec<hir::ClassRange>","regex_lite::interpolate::isize","regex_lite::nfa::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::pool::core::convert::Infallible","regex_lite::interpolate::hir::ClassRange","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::tests::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::is_word_byte::core::result::Result","regex_lite::hir::parse::core::convert::Infallible","regex_lite::hir::{impl#3}::negate::nfa::State","regex_lite::int::error::Error","regex_lite::hir::{impl#6}::drop::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::{impl#2}::subs::error::Error","regex_lite::string::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::parse::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#5}::is_match::(char, char)","regex_lite::interpolate::alloc::vec::Vec<(char, char)>","regex_lite::nfa::alloc::vec::Vec<(char, char)>","regex_lite::nfa::bool","regex_lite::utf8::decode_step::u32","regex_lite::pool::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#5}::is_match::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pool::!","regex_lite::error::Config","regex_lite::string::{impl#14}::fmt::RefCell","regex_lite::(char, char)","regex_lite::hir::{impl#6}::drop::hir::ClassRange","regex_lite::hir::alloc::vec::Vec<hir::ClassRange>","regex_lite::nfa::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::string::{impl#14}::fmt::core::result::Result<u32, error::Error>","regex_lite::nfa::nfa::Compiler","regex_lite::error::core::result::Result<u32, error::Error>","regex_lite::hir::parse::tests::nfa::State","regex_lite::hir::{impl#3}::negate::nfa::ThompsonRef","regex_lite::int::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::core::result::Result<u32, error::Error>","regex_lite::hir::{impl#2}::subs::!","regex_lite::utf8::is_word_byte::[hir::ClassRange]","regex_lite::hir::{impl#3}::negate::char","regex_lite::hir::alloc::alloc::Global","regex_lite::nfa::regex_lite::nfa::Compiler","regex_lite::utf8::tests::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#6}::drop::(char, char)","regex_lite::string::{impl#14}::fmt::nfa::Compiler","regex_lite::hir::{impl#6}::drop::Config","regex_lite::utf8::is_word_byte::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#6}::drop::core::result::Result","regex_lite::hir::{impl#5}::is_match::core::slice::Iter","regex_lite::hir::parse::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#2}::subs::core::slice::Iter","regex_lite::hir::{impl#2}::subs::bool","regex_lite::utf8::decode_step::(char, char)","regex_lite::hir::RefCell","regex_lite::hir::{impl#2}::subs::core::convert::Infallible","regex_lite::char","regex_lite::hir::{impl#2}::subs::[hir::ClassRange]","regex_lite::pikevm::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::hir::{impl#3}::negate::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::is_word_byte::!","regex_lite::string::{impl#14}::fmt::alloc::alloc::Global","regex_lite::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::string::hir::ClassRange","regex_lite::nfa::!","regex_lite::interpolate::core::slice::Iter<'_, hir::ClassRange>","regex_lite::pool::char","regex_lite::nfa::(char, char)","regex_lite::hir::parse::tests::NFA","regex_lite::hir::{impl#5}::is_match::hir::ClassRange","regex_lite::pool::u32","regex_lite::hir::parse::tests::isize","regex_lite::interpolate::NFA","regex_lite::pikevm::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#6}::drop::core::result::Result<u32, error::Error>","regex_lite::int::u32","regex_lite::pikevm::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::error::bool","regex_lite::pool::(char, char)","regex_lite::hir::parse::isize","regex_lite::pikevm::core::convert::Infallible","regex_lite::string::alloc::alloc::Global","regex_lite::hir::{impl#2}::subs::hir::Class","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec","regex_lite::error::alloc::alloc::Global","regex_lite::hir::{impl#3}::negate::u32","regex_lite::utf8::decode_step::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::check_hir_nesting::bool","regex_lite::int::hir::ClassRange","regex_lite::utf8::is_word_byte::nfa::State","regex_lite::hir::{impl#5}::is_match::regex_lite::nfa::Compiler","regex_lite::hir::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::utf8::decode_step::alloc::vec::Vec<(char, char)>","regex_lite::error::core::slice::Iter","regex_lite::hir::parse::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::string::nfa::Compiler","regex_lite::utf8::tests::Config","regex_lite::hir::regex_lite::nfa::Compiler","regex_lite::nfa::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::string::core::ops::ControlFlow, u32>","regex_lite::hir::parse::check_hir_nesting::nfa::ThompsonRef","regex_lite::hir::parse::char","regex_lite::hir::parse::tests::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::tests::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::string::{impl#14}::fmt::u32","regex_lite::hir::parse::tests::core::convert::Infallible","regex_lite::error::nfa::ThompsonRef","regex_lite::error::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::string::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::string::{impl#14}::fmt::core::convert::Infallible","regex_lite::utf8::alloc::alloc::Global","regex_lite::utf8::(char, char)","regex_lite::hir::parse::tests::hir::Class","regex_lite::utf8::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<(char, char)>","regex_lite::utf8::!","regex_lite::hir::{impl#5}::is_match::alloc::alloc::Global","regex_lite::string::{impl#14}::fmt::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#3}::negate::bool","regex_lite::hir::{impl#5}::is_match::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::tests::alloc::alloc::Global","regex_lite::hir::parse::NFA","regex_lite::utf8::is_word_byte::RefCell","regex_lite::hir::parse::check_hir_nesting::RefCell","regex_lite::hir::parse::tests::core::slice::Iter","regex_lite::hir::parse::check_hir_nesting::isize","regex_lite::hir::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::regex_lite::nfa::Compiler","regex_lite::string::{impl#14}::fmt::regex_lite::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::core::result::Result","regex_lite::utf8::tests::bool","regex_lite::hir::parse::tests::bool","regex_lite::hir::error::Error","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec","regex_lite::utf8::core::result::Result","regex_lite::int::hir::Class","regex_lite::pool::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#3}::negate::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::int::alloc::vec::Vec<hir::ClassRange>","regex_lite::pikevm::hir::ClassRange","regex_lite::error::alloc::vec::Vec<(char, char)>","regex_lite::hir::{impl#3}::negate::Config","regex_lite::utf8::tests::isize","regex_lite::string::{impl#14}::fmt::NFA","regex_lite::hir::parse::tests::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::int::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::int::bool","regex_lite::string::nfa::State","regex_lite::utf8::u32","regex_lite::hir::{impl#6}::drop::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::parse::alloc::alloc::Global","regex_lite::string::hir::Class","regex_lite::nfa::nfa::State","regex_lite::hir::{impl#5}::is_match::nfa::Compiler","regex_lite::hir::{impl#2}::subs::regex_lite::nfa::Compiler","regex_lite::hir::parse::!","regex_lite::hir::{impl#2}::subs::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::hir::ClassRange","regex_lite::hir::parse::tests::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::decode_step::nfa::State","regex_lite::string::char","regex_lite::hir::char","regex_lite::hir::parse::tests::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::utf8::tests::regex_lite::nfa::Compiler","regex_lite::error::error::Error","regex_lite::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::error::isize","regex_lite::hir::{impl#6}::drop::hir::Class","regex_lite::hir::{impl#6}::drop::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::hir::parse::regex_lite::nfa::Compiler","regex_lite::utf8::is_word_byte::nfa::Compiler","regex_lite::hir::{impl#6}::drop::nfa::Compiler","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<(char, char)>","regex_lite::hir::alloc::vec::Vec<(char, char)>","regex_lite::hir::parse::core::result::Result","regex_lite::utf8::decode_step::NFA","regex_lite::utf8::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#5}::is_match::error::Error","regex_lite::nfa::hir::Class","regex_lite::hir::parse::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<hir::ClassRange>","regex_lite::nfa::nfa::ThompsonRef","regex_lite::pikevm::alloc::vec::Vec<(char, char)>","regex_lite::hir::{impl#3}::negate::core::slice::Iter","regex_lite::utf8::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pikevm::(char, char)","regex_lite::hir::parse::check_hir_nesting::Config","regex_lite::error::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::is_word_byte::NFA","regex_lite::error::core::ops::ControlFlow, u32>","regex_lite::interpolate::alloc::vec::Vec","regex_lite::utf8::is_word_byte::nfa::ThompsonRef","regex_lite::utf8::hir::Class","regex_lite::nfa::hir::ClassRange","regex_lite::utf8::tests::hir::ClassRange","regex_lite::hir::parse::check_hir_nesting::nfa::Compiler","regex_lite::hir::hir::Class","regex_lite::string::regex_lite::nfa::Compiler","regex_lite::hir::{impl#2}::subs::hir::ClassRange","regex_lite::hir::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#2}::subs::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::alloc::vec::Vec<(char, char)>","regex_lite::Config","regex_lite::pikevm::RefCell","regex_lite::string::{impl#14}::fmt::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::tests::error::Error","regex_lite::utf8::regex_lite::nfa::Compiler","regex_lite::hir::parse::tests::regex_lite::nfa::Compiler","regex_lite::string::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::error::hir::ClassRange","regex_lite::interpolate::nfa::State","regex_lite::hir::{impl#2}::subs::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::parse::tests::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#3}::negate::core::ops::ControlFlow, u32>","regex_lite::utf8::decode_step::core::result::Result","regex_lite::int::core::convert::Infallible","regex_lite::utf8::decode_step::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::{impl#6}::drop::regex_lite::nfa::Compiler","regex_lite::hir::core::slice::Iter","regex_lite::utf8::decode_step::hir::Class","regex_lite::string::{impl#14}::fmt::(char, char)","regex_lite::utf8::tests::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#3}::negate::!","regex_lite::hir::{impl#6}::drop::char","regex_lite::interpolate::core::slice::Iter","regex_lite::hir::parse::core::result::Result<u32, error::Error>","regex_lite::string::core::convert::Infallible","regex_lite::hir::{impl#6}::drop::isize","regex_lite::string::{impl#14}::fmt::hir::ClassRange","regex_lite::utf8::decode_step::RefCell","regex_lite::pikevm::error::Error","regex_lite::utf8::core::convert::Infallible","regex_lite::hir::{impl#3}::negate::error::Error","regex_lite::utf8::is_word_byte::alloc::alloc::Global","regex_lite::hir::{impl#5}::is_match::!","regex_lite::utf8::decode_step::alloc::alloc::Global","regex_lite::hir::{impl#5}::is_match::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#3}::negate::core::convert::Infallible","regex_lite::hir::{impl#2}::subs::core::result::Result","regex_lite::hir::{impl#6}::drop::error::Error","regex_lite::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::decode_step::bool","regex_lite::utf8::decode_step::core::result::Result<u32, error::Error>","regex_lite::utf8::decode_step::nfa::Compiler","regex_lite::pikevm::!","regex_lite::int::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#6}::drop::core::slice::Iter<'_, hir::ClassRange>","regex_lite::error::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::is_word_byte::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::utf8::is_word_byte::(char, char)","regex_lite::pikevm::regex_lite::nfa::Compiler","regex_lite::pool::nfa::ThompsonRef","regex_lite::utf8::decode_step::!","regex_lite::hir::{impl#5}::is_match::char","regex_lite::pool::alloc::vec::Vec<(char, char)>","regex_lite::utf8::nfa::ThompsonRef","regex_lite::int::regex_lite::nfa::Compiler","regex_lite::interpolate::error::Error","regex_lite::hir::{impl#6}::drop::nfa::ThompsonRef","regex_lite::int::NFA","regex_lite::hir::parse::tests::Config","regex_lite::nfa::core::slice::Iter","regex_lite::hir::{impl#6}::drop::core::slice::Iter","regex_lite::string::nfa::ThompsonRef","regex_lite::hir::{impl#6}::drop::nfa::State","regex_lite::alloc::alloc::Global","regex_lite::hir::{impl#5}::is_match::NFA","regex_lite::hir::parse::[hir::ClassRange]","regex_lite::pikevm::core::result::Result","regex_lite::error::hir::Class","regex_lite::nfa::core::ops::ControlFlow, u32>","regex_lite::error::!","regex_lite::hir::{impl#3}::negate::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::pool::error::Error","regex_lite::hir::{impl#5}::is_match::nfa::State","regex_lite::hir::{impl#2}::subs::NFA","regex_lite::utf8::tests::core::slice::Iter","regex_lite::pool::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::hir::ClassRange","regex_lite::nfa::error::Error","regex_lite::hir::{impl#2}::subs::alloc::alloc::Global","regex_lite::pikevm::nfa::Compiler","regex_lite::hir::{impl#2}::subs::Config","regex_lite::utf8::tests::(char, char)","regex_lite::hir::parse::tests::alloc::alloc::Global","regex_lite::hir::parse::u32","regex_lite::string::RefCell","regex_lite::hir::{impl#3}::negate::core::result::Result<u32, error::Error>","regex_lite::utf8::tests::u32","regex_lite::string::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::u32","regex_lite::hir::{impl#3}::negate::regex_lite::nfa::Compiler","regex_lite::hir::nfa::ThompsonRef","regex_lite::int::char","regex_lite::hir::parse::nfa::State","regex_lite::string::{impl#14}::fmt::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#5}::is_match::u32","regex_lite::pikevm::core::slice::Iter","regex_lite::string::core::result::Result<u32, error::Error>","regex_lite::string::{impl#14}::fmt::[hir::ClassRange]","regex_lite::hir::parse::nfa::Compiler","regex_lite::pikevm::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::!","regex_lite::[hir::ClassRange]","regex_lite::string::Config","regex_lite::nfa::alloc::vec::Vec","regex_lite::hir::{impl#6}::drop::core::ops::ControlFlow, u32>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec","regex_lite::pool::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::parse::alloc::vec::Vec<(char, char)>","regex_lite::pikevm::core::slice::Iter<'_, hir::ClassRange>","regex_lite::error::char","regex_lite::hir::parse::tests::alloc::vec::Vec","regex_lite::pikevm::Config","regex_lite::hir::(char, char)","regex_lite::utf8::core::result::Result<u32, error::Error>","regex_lite::hir::parse::tests::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::error::Error","regex_lite::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::is_word_byte::isize","regex_lite::pikevm::core::result::Result<u32, error::Error>","regex_lite::nfa::ThompsonRef","regex_lite::utf8::is_word_byte::alloc::vec::Vec","regex_lite::core::slice::Iter","regex_lite::error::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::string::{impl#14}::fmt::isize","regex_lite::hir::{impl#3}::negate::hir::Class","regex_lite::hir::{impl#3}::negate::nfa::Compiler","regex_lite::hir::NFA","regex_lite::error::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::core::convert::Infallible","regex_lite::utf8::is_word_byte::hir::ClassRange","regex_lite::interpolate::hir::Class","regex_lite::pool::core::slice::Iter","regex_lite::hir::{impl#2}::subs::nfa::State","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::parse::check_hir_nesting::core::convert::Infallible","regex_lite::utf8::tests::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::string::isize","regex_lite::hir::parse::tests::alloc::vec::Vec<(char, char)>","regex_lite::utf8::decode_step::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#3}::negate::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::error::alloc::vec::Vec","regex_lite::int::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::error::core::result::Result","regex_lite::interpolate::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::tests::(char, char)","regex_lite::pool::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#2}::subs::u32","regex_lite::pool::Config","regex_lite::utf8::tests::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::tests::[hir::ClassRange]","regex_lite::utf8::alloc::vec::Vec<(char, char)>","regex_lite::utf8::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::utf8::decode_step::[hir::ClassRange]","regex_lite::utf8::char","regex_lite::hir::{impl#2}::subs::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::pool::[hir::ClassRange]","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<(char, char)>","regex_lite::utf8::is_word_byte::alloc::vec::Vec<(char, char)>","regex_lite::interpolate::nfa::ThompsonRef","regex_lite::core::convert::Infallible","regex_lite::pool::hir::Class","regex_lite::interpolate::(char, char)","regex_lite::utf8::nfa::State","regex_lite::hir::parse::nfa::ThompsonRef","regex_lite::hir::{impl#5}::is_match::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#6}::drop::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::interpolate::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#5}::is_match::RefCell","regex_lite::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::interpolate::nfa::Compiler","regex_lite::interpolate::bool","regex_lite::nfa::char","regex_lite::utf8::is_word_byte::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::decode_step::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::pool::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::int::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#5}::is_match::[hir::ClassRange]","regex_lite::hir::{impl#2}::subs::nfa::Compiler","regex_lite::utf8::decode_step::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#2}::subs::(char, char)","regex_lite::error::NFA","regex_lite::utf8::decode_step::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::parse::error::Error","regex_lite::hir::{impl#6}::drop::bool","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::error::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::interpolate::regex_lite::nfa::Compiler","regex_lite::pikevm::bool","regex_lite::hir::parse::tests::nfa::ThompsonRef","regex_lite::hir::bool","regex_lite::interpolate::core::result::Result","regex_lite::hir::parse::tests::core::ops::ControlFlow, u32>","regex_lite::error::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::string::{impl#14}::fmt::!","regex_lite::nfa::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::nfa::core::slice::Iter<'_, hir::ClassRange>","regex_lite::utf8::tests::nfa::Compiler","regex_lite::pool::nfa::State","regex_lite::hir::isize","regex_lite::hir::{impl#2}::subs::core::slice::Iter<'_, hir::ClassRange>","regex_lite::utf8::tests::core::result::Result","regex_lite::hir::{impl#2}::subs::nfa::ThompsonRef","regex_lite::pikevm::NFA","regex_lite::hir::{impl#3}::negate::isize","regex_lite::string::{impl#14}::fmt::bool","regex_lite::int::core::result::Result<u32, error::Error>","regex_lite::pool::core::ops::ControlFlow, u32>","regex_lite::interpolate::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::Class","regex_lite::pikevm::[hir::ClassRange]","regex_lite::utf8::tests::[hir::ClassRange]","regex_lite::pikevm::isize","regex_lite::utf8::is_word_byte::u32","regex_lite::hir::ClassRange","regex_lite::string::alloc::vec::Vec<(char, char)>","regex_lite::hir::Config","regex_lite::error::core::convert::Infallible","regex_lite::hir::parse::check_hir_nesting::NFA","regex_lite::utf8::is_word_byte::char","regex_lite::pikevm::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::hir::ClassRange","regex_lite::hir::{impl#2}::subs::char","regex_lite::hir::hir::ClassRange","regex_lite::utf8::is_word_byte::core::result::Result<u32, error::Error>","regex_lite::hir::parse::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::{impl#3}::negate::hir::ClassRange","regex_lite::pikevm::char","regex_lite::utf8::tests::alloc::vec::Vec<(char, char)>","regex_lite::interpolate::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::utf8::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::pool::core::result::Result<u32, error::Error>","regex_lite::utf8::tests::core::result::Result<u32, error::Error>","regex_lite::pool::bool","regex_lite::hir::{impl#5}::is_match::Config","regex_lite::error::nfa::State","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<hir::ClassRange>","regex_lite::nfa::core::result::Result<u32, error::Error>","regex_lite::hir::parse::bool","regex_lite::utf8::tests::nfa::ThompsonRef","regex_lite::hir::{impl#5}::is_match::hir::Class","regex_lite::hir::parse::tests::core::result::Result<u32, error::Error>","regex_lite::pool::alloc::vec::Vec<hir::ClassRange>","regex_lite::utf8::core::slice::Iter","regex_lite::hir::{impl#5}::is_match::isize","regex_lite::hir::parse::tests::core::result::Result","regex_lite::string::{impl#14}::fmt::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::parse::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::decode_step::char","regex_lite::pool::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::(char, char)","regex_lite::string::{impl#14}::fmt::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::hir::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::utf8::is_word_byte::core::slice::Iter","regex_lite::int::core::result::Result","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec","regex_lite::int::core::ops::ControlFlow, u32>","regex_lite::hir::{impl#5}::is_match::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::error::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<hir::ClassRange>","regex_lite::pool::NFA","regex_lite::hir::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::int::alloc::alloc::Global","regex_lite::string::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::parse::check_hir_nesting::core::slice::Iter","regex_lite::alloc::vec::Vec","regex_lite::utf8::is_word_byte::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::decode_step::nfa::ThompsonRef","regex_lite::nfa::NFA","regex_lite::hir::{impl#6}::drop::NFA","regex_lite::utf8::RefCell","regex_lite::pool::hir::ClassRange","regex_lite::int::RefCell","regex_lite::int::core::slice::Iter","regex_lite::interpolate::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#3}::negate::core::slice::Iter<'_, hir::ClassRange>","regex_lite::utf8::decode_step::hir::ClassRange","regex_lite::hir::parse::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::{impl#3}::negate::(char, char)","regex_lite::error::(char, char)","regex_lite::string::{impl#14}::fmt::hir::Class","regex_lite::hir::parse::check_hir_nesting::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::decode_step::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<(char, char)>","regex_lite::hir::{impl#2}::subs::core::ops::ControlFlow, u32>","regex_lite::hir::parse::check_hir_nesting::core::slice::Iter<'_, hir::ClassRange>","regex_lite::string::bool","regex_lite::error::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::nfa::isize","regex_lite::string::alloc::vec::Vec<hir::ClassRange>","regex_lite::pool::regex_lite::nfa::Compiler","regex_lite::utf8::is_word_byte::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::{impl#5}::is_match::nfa::ThompsonRef","regex_lite::hir::parse::check_hir_nesting::u32","regex_lite::int::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::interpolate::[hir::ClassRange]","regex_lite::hir::{impl#5}::is_match::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::core::slice::Iter<'_, hir::ClassRange>","regex_lite::interpolate::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::error::[hir::ClassRange]","regex_lite::hir::{impl#2}::subs::core::result::Result<u32, error::Error>","regex_lite::int::[hir::ClassRange]","regex_lite::nfa::Config","regex_lite::utf8::is_word_byte::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::parse::tests::!","regex_lite::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::hir::{impl#5}::is_match::core::result::Result","regex_lite::hir::{impl#3}::negate::core::result::Result","regex_lite::pool::core::result::Result","regex_lite::hir::alloc::vec::Vec","regex_lite::hir::{impl#6}::drop::u32","regex_lite::hir::{impl#3}::negate::core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::string::{impl#14}::fmt::Config","regex_lite::nfa::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::parse::tests::RefCell","regex_lite::nfa::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::pool::alloc::alloc::Global","regex_lite::string::!","regex_lite::utf8::tests::NFA","regex_lite::hir::core::ops::ControlFlow, u32>","regex_lite::utf8::tests::RefCell","regex_lite::string::core::result::Result","regex_lite::string::error::Error","regex_lite::hir::parse::check_hir_nesting::!","regex_lite::int::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::hir::core::result::Result","regex_lite::hir::{impl#2}::subs::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::string::{impl#14}::fmt::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::check_hir_nesting::core::result::Result<core::convert::Infallible, error::Error>","regex_lite::interpolate::u32","regex_lite::pikevm::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::NFA","regex_lite::int::nfa::ThompsonRef","regex_lite::nfa::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::core::ops::ControlFlow, u32>","regex_lite::utf8::tests::error::Error","regex_lite::hir::parse::tests::u32","regex_lite::core::ops::ControlFlow, u32>","regex_lite::int::alloc::vec::Vec<(char, char)>","regex_lite::int::nfa::State","regex_lite::bool","regex_lite::nfa::core::convert::Infallible","regex_lite::hir::parse::tests::core::slice::Iter<'_, hir::ClassRange>","regex_lite::hir::parse::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::core::result::Result<nfa::ThompsonRef, error::Error>","regex_lite::pikevm::u32","regex_lite::hir::{impl#5}::is_match::core::ops::ControlFlow, u32>","regex_lite::int::Config","regex_lite::pikevm::nfa::ThompsonRef","regex_lite::int::(char, char)","regex_lite::hir::parse::tests::char","regex_lite::string::[hir::ClassRange]","regex_lite::hir::parse::check_hir_nesting::{closure@regex-lite/src/nfa.rs:347:41: 347:44}","regex_lite::hir::parse::check_hir_nesting::alloc::alloc::Global","regex_lite::hir::[hir::ClassRange]","regex_lite::hir::parse::check_hir_nesting::hir::Class","regex_lite::pikevm::core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","regex_lite::hir::parse::core::slice::Iter","regex_lite::hir::{impl#2}::subs::isize","regex_lite::utf8::is_word_byte::regex_lite::nfa::Compiler","regex_lite::interpolate::core::iter::Map, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","regex_lite::utf8::decode_step::core::convert::Infallible","regex_lite::hir::parse::(char, char)","regex_lite::utf8::alloc::vec::Vec<hir::ClassRange>","regex_lite::hir::parse::RefCell","regex_lite::error::RefCell","regex_lite::string::{impl#14}::fmt::core::slice::Iter","regex_lite::utf8::bool","regex_lite::hir::{impl#5}::is_match::core::convert::Infallible"]}