{"mod_name":"nfa","calls":["alloc::vec::Vec::<nfa::State>::new","<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","core::cell::RefCell::<nfa::NFA>::new","alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::nfa::Compiler::new","core::cell::RefCell::new","alloc::vec::Vec>>::new","alloc::vec::Vec::new","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<nfa::State>::new","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<nfa::State>::new","regex_lite::nfa::alloc::vec::Vec::<nfa::State>::new","regex_lite::pikevm::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::parse::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::core::cell::RefCell::<nfa::NFA>::new","regex_lite::error::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::{impl#2}::subs::regex_lite::nfa::Compiler::new","regex_lite::core::cell::RefCell::<nfa::NFA>::new","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::new","regex_lite::utf8::is_word_byte::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::<nfa::NFA>::new","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::alloc::vec::Vec::<nfa::State>::new","regex_lite::string::alloc::vec::Vec::new","regex_lite::error::alloc::vec::Vec>>::new","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::new","regex_lite::hir::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::is_word_byte::core::cell::RefCell::new","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell::new","regex_lite::int::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::string::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#5}::is_match::regex_lite::nfa::Compiler::new","regex_lite::utf8::alloc::vec::Vec>>::new","regex_lite::utf8::decode_step::regex_lite::nfa::Compiler::new","regex_lite::interpolate::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::tests::regex_lite::nfa::Compiler::new","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::<nfa::NFA>::new","regex_lite::pool::alloc::vec::Vec>>::new","regex_lite::interpolate::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::parse::core::cell::RefCell::new","regex_lite::pikevm::alloc::vec::Vec::<nfa::State>::new","regex_lite::pool::core::cell::RefCell::<nfa::NFA>::new","regex_lite::core::cell::RefCell::new","regex_lite::hir::parse::alloc::vec::Vec::<nfa::State>::new","regex_lite::error::alloc::vec::Vec::<nfa::State>::new","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::decode_step::core::cell::RefCell::new","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec>>::new","regex_lite::nfa::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::tests::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::tests::alloc::vec::Vec::new","regex_lite::hir::parse::core::cell::RefCell::<nfa::NFA>::new","regex_lite::interpolate::alloc::vec::Vec::new","regex_lite::pool::core::cell::RefCell::new","regex_lite::hir::parse::tests::alloc::vec::Vec::new","regex_lite::hir::parse::tests::alloc::vec::Vec>>::new","regex_lite::utf8::core::cell::RefCell::new","regex_lite::nfa::regex_lite::nfa::Compiler::new","regex_lite::int::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<nfa::State>::new","regex_lite::utf8::is_word_byte::regex_lite::nfa::Compiler::new","regex_lite::int::regex_lite::nfa::Compiler::new","regex_lite::alloc::vec::Vec::<nfa::State>::new","regex_lite::string::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell::new","regex_lite::hir::parse::tests::core::cell::RefCell::<nfa::NFA>::new","regex_lite::utf8::tests::core::cell::RefCell::new","regex_lite::pikevm::alloc::vec::Vec>>::new","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::<nfa::NFA>::new","regex_lite::error::core::cell::RefCell::<nfa::NFA>::new","regex_lite::utf8::tests::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::regex_lite::nfa::Compiler::new","regex_lite::hir::parse::tests::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::parse::tests::alloc::vec::Vec::<nfa::State>::new","regex_lite::utf8::decode_step::core::cell::RefCell::<nfa::NFA>::new","regex_lite::interpolate::regex_lite::nfa::Compiler::new","regex_lite::regex_lite::nfa::Compiler::new","regex_lite::utf8::decode_step::alloc::vec::Vec>>::new","regex_lite::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::parse::check_hir_nesting::regex_lite::nfa::Compiler::new","regex_lite::hir::alloc::vec::Vec::new","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::new","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec>>::new","regex_lite::pikevm::regex_lite::nfa::Compiler::new","regex_lite::hir::parse::tests::core::cell::RefCell::new","regex_lite::alloc::vec::Vec::new","regex_lite::nfa::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#6}::drop::regex_lite::nfa::Compiler::new","regex_lite::pool::regex_lite::nfa::Compiler::new","regex_lite::utf8::decode_step::alloc::vec::Vec::new","regex_lite::pikevm::core::cell::RefCell::new","regex_lite::nfa::alloc::vec::Vec::new","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::new","regex_lite::error::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::is_word_byte::alloc::vec::Vec>>::new","regex_lite::error::regex_lite::nfa::Compiler::new","regex_lite::alloc::vec::Vec>>::new","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec::new","regex_lite::pikevm::alloc::vec::Vec::new","regex_lite::hir::{impl#3}::negate::core::cell::RefCell::<nfa::NFA>::new","regex_lite::int::core::cell::RefCell::new","regex_lite::interpolate::core::cell::RefCell::new","regex_lite::hir::parse::tests::regex_lite::nfa::Compiler::new","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec::new","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::new","regex_lite::string::alloc::vec::Vec>>::new","regex_lite::hir::parse::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#3}::negate::regex_lite::nfa::Compiler::new","regex_lite::string::{impl#14}::fmt::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<nfa::State>::new","regex_lite::utf8::regex_lite::nfa::Compiler::new","regex_lite::utf8::decode_step::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::is_word_byte::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::nfa::alloc::vec::Vec>>::new","regex_lite::pool::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::string::{impl#14}::fmt::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec>>::new","regex_lite::nfa::core::cell::RefCell::new","regex_lite::utf8::decode_step::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::pool::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec>>::new","regex_lite::string::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::{impl#2}::subs::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::{impl#6}::drop::core::cell::RefCell::<nfa::NFA>::new","regex_lite::utf8::tests::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::string::regex_lite::nfa::Compiler::new","regex_lite::hir::parse::alloc::vec::Vec>>::new","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::utf8::tests::alloc::vec::Vec>>::new","regex_lite::hir::core::cell::RefCell::new","regex_lite::hir::parse::check_hir_nesting::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::pikevm::core::cell::RefCell::<nfa::NFA>::new","regex_lite::utf8::decode_step::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec>>::new","regex_lite::utf8::tests::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::alloc::vec::Vec>>::new","regex_lite::nfa::core::cell::RefCell::<nfa::NFA>::new","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec>>::new","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec::new","regex_lite::utf8::is_word_byte::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::parse::regex_lite::nfa::Compiler::new","regex_lite::hir::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::alloc::vec::Vec::new","regex_lite::error::core::cell::RefCell::new","regex_lite::interpolate::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::int::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::hir::{impl#5}::is_match::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::utf8::is_word_byte::alloc::vec::Vec::new","regex_lite::interpolate::alloc::vec::Vec>>::new","regex_lite::hir::parse::tests::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::hir::parse::alloc::vec::Vec::new","regex_lite::hir::{impl#3}::negate::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::string::{impl#14}::fmt::regex_lite::nfa::Compiler::new","regex_lite::string::alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new","regex_lite::pool::alloc::vec::Vec::<nfa::State>::new","regex_lite::pool::alloc::vec::Vec::new","regex_lite::pikevm::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::interpolate::core::cell::RefCell::<nfa::NFA>::new","regex_lite::error::alloc::vec::Vec::new","regex_lite::int::alloc::vec::Vec::new","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::new","regex_lite::int::alloc::vec::Vec>>::new","regex_lite::hir::{impl#6}::drop::<std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default","regex_lite::int::core::cell::RefCell::<nfa::NFA>::new","regex_lite::string::core::cell::RefCell::new","regex_lite::utf8::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec::<nfa::State>::new","regex_lite::hir::{impl#2}::subs::core::cell::RefCell::new"],"types":["nfa::Compiler","core::option::Option<usize>","std::hash::RandomState","std::collections::HashMap<alloc::sync::Arc<str>, u32>","core::cell::RefCell<nfa::NFA>","str","alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","alloc::vec::Vec<nfa::State>","alloc::string::String","alloc::alloc::Global","nfa::Config","nfa::State","core::option::Option<alloc::sync::Arc<str>>","nfa::NFA","u32","usize","alloc::sync::Arc<str>","regex_lite::nfa::Compiler","Config","NFA","RefCell","core::cell::RefCell","alloc::vec::Vec","core::option::Option>","std::collections::HashMap, u32>","alloc::vec::Vec>>","core::option::Option","alloc::sync::Arc","regex_lite::interpolate::core::option::Option","regex_lite::utf8::std::hash::RandomState","regex_lite::int::regex_lite::nfa::Compiler","regex_lite::hir::alloc::alloc::Global","regex_lite::hir::parse::tests::nfa::State","regex_lite::utf8::is_word_byte::core::cell::RefCell<nfa::NFA>","regex_lite::hir::parse::tests::RefCell","regex_lite::hir::{impl#6}::drop::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::parse::tests::nfa::NFA","regex_lite::pool::core::option::Option>","regex_lite::nfa::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::parse::core::option::Option<usize>","regex_lite::hir::{impl#6}::drop::alloc::alloc::Global","regex_lite::hir::parse::nfa::Config","regex_lite::string::usize","regex_lite::utf8::is_word_byte::alloc::sync::Arc<str>","regex_lite::hir::{impl#5}::is_match::NFA","regex_lite::pikevm::core::option::Option>","regex_lite::hir::core::cell::RefCell<nfa::NFA>","regex_lite::utf8::tests::str","regex_lite::utf8::alloc::vec::Vec","regex_lite::pool::core::cell::RefCell<nfa::NFA>","regex_lite::string::{impl#14}::fmt::core::cell::RefCell","regex_lite::hir::parse::check_hir_nesting::nfa::Compiler","regex_lite::hir::parse::tests::alloc::vec::Vec","regex_lite::interpolate::nfa::Config","regex_lite::int::NFA","regex_lite::string::alloc::vec::Vec","regex_lite::string::u32","regex_lite::utf8::tests::NFA","regex_lite::hir::parse::check_hir_nesting::RefCell","regex_lite::hir::regex_lite::nfa::Compiler","regex_lite::interpolate::alloc::sync::Arc","regex_lite::hir::core::cell::RefCell","regex_lite::hir::parse::tests::core::option::Option","regex_lite::hir::{impl#3}::negate::str","regex_lite::interpolate::core::option::Option>","regex_lite::pool::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::utf8::decode_step::alloc::vec::Vec<nfa::State>","regex_lite::int::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::int::alloc::alloc::Global","regex_lite::utf8::decode_step::core::option::Option>","regex_lite::hir::{impl#6}::drop::nfa::State","regex_lite::error::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::string::{impl#14}::fmt::alloc::string::String","regex_lite::hir::parse::core::option::Option>","regex_lite::utf8::decode_step::core::option::Option<usize>","regex_lite::nfa::alloc::vec::Vec<nfa::State>","regex_lite::string::{impl#14}::fmt::regex_lite::nfa::Compiler","regex_lite::pool::core::cell::RefCell","regex_lite::hir::{impl#5}::is_match::core::option::Option>","regex_lite::hir::parse::Config","regex_lite::utf8::decode_step::nfa::Compiler","regex_lite::string::{impl#14}::fmt::NFA","regex_lite::hir::parse::tests::alloc::vec::Vec>>","regex_lite::error::usize","regex_lite::utf8::is_word_byte::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::utf8::core::cell::RefCell<nfa::NFA>","regex_lite::pikevm::nfa::State","regex_lite::utf8::decode_step::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::{impl#5}::is_match::core::option::Option<alloc::sync::Arc<str>>","regex_lite::utf8::tests::regex_lite::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::core::option::Option<usize>","regex_lite::hir::core::option::Option<usize>","regex_lite::error::std::collections::HashMap, u32>","regex_lite::int::alloc::vec::Vec<nfa::State>","regex_lite::utf8::decode_step::nfa::NFA","regex_lite::std::collections::HashMap, u32>","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell","regex_lite::int::u32","regex_lite::interpolate::usize","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec","regex_lite::hir::NFA","regex_lite::string::alloc::vec::Vec<nfa::State>","regex_lite::error::alloc::alloc::Global","regex_lite::int::core::option::Option","regex_lite::pool::nfa::Compiler","regex_lite::alloc::vec::Vec","regex_lite::interpolate::alloc::string::String","regex_lite::hir::{impl#5}::is_match::usize","regex_lite::utf8::decode_step::nfa::Config","regex_lite::utf8::tests::core::option::Option<usize>","regex_lite::utf8::tests::alloc::alloc::Global","regex_lite::string::RefCell","regex_lite::utf8::is_word_byte::std::collections::HashMap, u32>","regex_lite::core::option::Option<usize>","regex_lite::hir::parse::tests::core::option::Option<usize>","regex_lite::hir::{impl#3}::negate::nfa::Config","regex_lite::pikevm::Config","regex_lite::hir::{impl#2}::subs::core::option::Option<usize>","regex_lite::pikevm::usize","regex_lite::pikevm::core::option::Option<usize>","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell<nfa::NFA>","regex_lite::string::std::hash::RandomState","regex_lite::hir::{impl#3}::negate::nfa::State","regex_lite::hir::parse::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::nfa::alloc::string::String","regex_lite::utf8::is_word_byte::nfa::Compiler","regex_lite::utf8::tests::usize","regex_lite::hir::{impl#5}::is_match::alloc::sync::Arc","regex_lite::hir::parse::core::option::Option<alloc::sync::Arc<str>>","regex_lite::error::str","regex_lite::core::option::Option>","regex_lite::hir::parse::tests::std::hash::RandomState","regex_lite::string::core::cell::RefCell","regex_lite::pikevm::alloc::string::String","regex_lite::string::{impl#14}::fmt::nfa::State","regex_lite::interpolate::core::cell::RefCell","regex_lite::utf8::decode_step::nfa::State","regex_lite::int::nfa::State","regex_lite::pool::regex_lite::nfa::Compiler","regex_lite::hir::{impl#6}::drop::usize","regex_lite::error::nfa::Config","regex_lite::int::Config","regex_lite::hir::{impl#6}::drop::alloc::sync::Arc","regex_lite::error::core::option::Option>","regex_lite::hir::RefCell","regex_lite::utf8::decode_step::regex_lite::nfa::Compiler","regex_lite::string::NFA","regex_lite::hir::parse::NFA","regex_lite::utf8::decode_step::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::string::{impl#14}::fmt::nfa::NFA","regex_lite::utf8::u32","regex_lite::hir::parse::tests::core::option::Option>","regex_lite::hir::{impl#2}::subs::RefCell","regex_lite::pikevm::alloc::vec::Vec","regex_lite::string::{impl#14}::fmt::alloc::sync::Arc","regex_lite::interpolate::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec","regex_lite::utf8::tests::alloc::sync::Arc<str>","regex_lite::hir::nfa::Compiler","regex_lite::int::core::cell::RefCell","regex_lite::string::{impl#14}::fmt::usize","regex_lite::utf8::tests::nfa::State","regex_lite::hir::{impl#6}::drop::Config","regex_lite::hir::parse::alloc::sync::Arc<str>","regex_lite::string::{impl#14}::fmt::RefCell","regex_lite::hir::parse::check_hir_nesting::regex_lite::nfa::Compiler","regex_lite::utf8::is_word_byte::Config","regex_lite::hir::{impl#6}::drop::core::cell::RefCell","regex_lite::pikevm::alloc::vec::Vec<nfa::State>","regex_lite::string::Config","regex_lite::hir::{impl#2}::subs::nfa::NFA","regex_lite::hir::parse::tests::nfa::Config","regex_lite::utf8::decode_step::u32","regex_lite::hir::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#5}::is_match::alloc::alloc::Global","regex_lite::utf8::tests::std::collections::HashMap, u32>","regex_lite::string::{impl#14}::fmt::core::option::Option","regex_lite::utf8::alloc::alloc::Global","regex_lite::hir::{impl#6}::drop::nfa::Config","regex_lite::hir::parse::std::hash::RandomState","regex_lite::error::alloc::sync::Arc","regex_lite::int::alloc::sync::Arc<str>","regex_lite::utf8::decode_step::std::collections::HashMap, u32>","regex_lite::string::{impl#14}::fmt::nfa::Config","regex_lite::hir::parse::alloc::string::String","regex_lite::hir::std::collections::HashMap, u32>","regex_lite::utf8::decode_step::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec>>","regex_lite::error::alloc::string::String","regex_lite::hir::{impl#2}::subs::core::option::Option<alloc::sync::Arc<str>>","regex_lite::pool::alloc::vec::Vec>>","regex_lite::hir::{impl#3}::negate::core::option::Option","regex_lite::utf8::alloc::string::String","regex_lite::pool::core::option::Option<alloc::sync::Arc<str>>","regex_lite::int::str","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<nfa::State>","regex_lite::hir::{impl#2}::subs::core::option::Option","regex_lite::utf8::decode_step::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::parse::tests::str","regex_lite::int::core::option::Option<usize>","regex_lite::pikevm::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::str","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::parse::tests::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::parse::check_hir_nesting::nfa::Config","regex_lite::nfa::RefCell","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::parse::check_hir_nesting::nfa::NFA","regex_lite::hir::parse::alloc::vec::Vec","regex_lite::alloc::sync::Arc<str>","regex_lite::hir::{impl#6}::drop::RefCell","regex_lite::utf8::is_word_byte::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::parse::check_hir_nesting::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::interpolate::NFA","regex_lite::utf8::tests::alloc::vec::Vec","regex_lite::string::{impl#14}::fmt::std::hash::RandomState","regex_lite::hir::{impl#6}::drop::nfa::Compiler","regex_lite::utf8::is_word_byte::u32","regex_lite::hir::parse::regex_lite::nfa::Compiler","regex_lite::pool::Config","regex_lite::error::Config","regex_lite::hir::{impl#2}::subs::alloc::alloc::Global","regex_lite::pool::str","regex_lite::int::core::option::Option>","regex_lite::hir::parse::check_hir_nesting::nfa::State","regex_lite::string::{impl#14}::fmt::core::cell::RefCell<nfa::NFA>","regex_lite::interpolate::RefCell","regex_lite::pikevm::RefCell","regex_lite::hir::parse::tests::std::collections::HashMap, u32>","regex_lite::hir::{impl#3}::negate::nfa::NFA","regex_lite::string::core::option::Option","regex_lite::alloc::sync::Arc","regex_lite::string::{impl#14}::fmt::str","regex_lite::hir::parse::tests::alloc::vec::Vec<nfa::State>","regex_lite::utf8::tests::RefCell","regex_lite::hir::parse::nfa::State","regex_lite::string::alloc::vec::Vec>>","regex_lite::utf8::is_word_byte::core::option::Option<usize>","regex_lite::pool::std::collections::HashMap, u32>","regex_lite::utf8::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::nfa::NFA","regex_lite::utf8::decode_step::alloc::alloc::Global","regex_lite::pool::NFA","regex_lite::string::regex_lite::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec","regex_lite::nfa::core::option::Option<alloc::sync::Arc<str>>","regex_lite::string::alloc::sync::Arc<str>","regex_lite::string::str","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::utf8::is_word_byte::alloc::alloc::Global","regex_lite::utf8::is_word_byte::regex_lite::nfa::Compiler","regex_lite::hir::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::pikevm::u32","regex_lite::hir::{impl#6}::drop::core::option::Option<usize>","regex_lite::pikevm::core::cell::RefCell","regex_lite::utf8::decode_step::core::option::Option","regex_lite::pikevm::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::{impl#6}::drop::u32","regex_lite::string::core::cell::RefCell<nfa::NFA>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec<nfa::State>","regex_lite::interpolate::alloc::vec::Vec<nfa::State>","regex_lite::hir::parse::check_hir_nesting::u32","regex_lite::utf8::tests::nfa::NFA","regex_lite::int::alloc::string::String","regex_lite::hir::core::option::Option<alloc::sync::Arc<str>>","regex_lite::string::{impl#14}::fmt::u32","regex_lite::nfa::usize","regex_lite::core::cell::RefCell<nfa::NFA>","regex_lite::hir::{impl#2}::subs::nfa::Config","regex_lite::error::alloc::sync::Arc<str>","regex_lite::hir::{impl#6}::drop::alloc::string::String","regex_lite::interpolate::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::alloc::string::String","regex_lite::int::nfa::Config","regex_lite::hir::{impl#5}::is_match::Config","regex_lite::hir::parse::core::cell::RefCell","regex_lite::hir::parse::tests::alloc::alloc::Global","regex_lite::hir::nfa::State","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec","regex_lite::hir::parse::str","regex_lite::utf8::is_word_byte::str","regex_lite::pikevm::str","regex_lite::hir::parse::check_hir_nesting::alloc::vec::Vec<nfa::State>","regex_lite::utf8::is_word_byte::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#5}::is_match::nfa::State","regex_lite::utf8::is_word_byte::core::option::Option>","regex_lite::utf8::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::parse::alloc::vec::Vec<nfa::State>","regex_lite::hir::parse::check_hir_nesting::std::hash::RandomState","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec<nfa::State>","regex_lite::utf8::core::option::Option>","regex_lite::nfa::alloc::sync::Arc<str>","regex_lite::hir::alloc::vec::Vec","regex_lite::nfa::std::collections::HashMap, u32>","regex_lite::nfa::alloc::sync::Arc","regex_lite::hir::{impl#5}::is_match::nfa::Compiler","regex_lite::pikevm::nfa::Compiler","regex_lite::utf8::tests::u32","regex_lite::string::{impl#14}::fmt::core::option::Option<alloc::sync::Arc<str>>","regex_lite::string::{impl#14}::fmt::alloc::alloc::Global","regex_lite::utf8::decode_step::alloc::sync::Arc<str>","regex_lite::hir::{impl#6}::drop::core::option::Option<alloc::sync::Arc<str>>","regex_lite::utf8::tests::alloc::string::String","regex_lite::pikevm::std::hash::RandomState","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec>>","regex_lite::error::alloc::vec::Vec>>","regex_lite::string::{impl#14}::fmt::core::option::Option<usize>","regex_lite::hir::parse::check_hir_nesting::alloc::sync::Arc<str>","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::{impl#2}::subs::usize","regex_lite::hir::{impl#2}::subs::Config","regex_lite::utf8::core::option::Option","regex_lite::hir::{impl#5}::is_match::std::collections::HashMap, u32>","regex_lite::hir::{impl#3}::negate::core::cell::RefCell","regex_lite::hir::{impl#3}::negate::NFA","regex_lite::utf8::usize","regex_lite::hir::alloc::vec::Vec>>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec>>","regex_lite::Config","regex_lite::string::std::collections::HashMap, u32>","regex_lite::nfa::NFA","regex_lite::hir::parse::check_hir_nesting::usize","regex_lite::string::{impl#14}::fmt::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::pikevm::alloc::alloc::Global","regex_lite::error::alloc::vec::Vec","regex_lite::pikevm::regex_lite::nfa::Compiler","regex_lite::hir::{impl#6}::drop::str","regex_lite::hir::parse::check_hir_nesting::NFA","regex_lite::hir::{impl#6}::drop::std::hash::RandomState","regex_lite::hir::{impl#5}::is_match::core::cell::RefCell<nfa::NFA>","regex_lite::hir::{impl#6}::drop::core::cell::RefCell<nfa::NFA>","regex_lite::string::{impl#14}::fmt::core::option::Option>","regex_lite::hir::parse::check_hir_nesting::std::collections::HashMap, u32>","regex_lite::hir::parse::core::option::Option","regex_lite::pool::nfa::State","regex_lite::hir::{impl#3}::negate::alloc::sync::Arc","regex_lite::hir::{impl#3}::negate::Config","regex_lite::error::core::cell::RefCell<nfa::NFA>","regex_lite::hir::parse::tests::regex_lite::nfa::Compiler","regex_lite::pikevm::alloc::sync::Arc","regex_lite::pool::std::hash::RandomState","regex_lite::nfa::regex_lite::nfa::Compiler","regex_lite::utf8::is_word_byte::RefCell","regex_lite::int::nfa::Compiler","regex_lite::utf8::tests::alloc::sync::Arc","regex_lite::pool::alloc::string::String","regex_lite::utf8::tests::alloc::vec::Vec<nfa::State>","regex_lite::utf8::tests::core::option::Option<alloc::sync::Arc<str>>","regex_lite::utf8::decode_step::Config","regex_lite::hir::{impl#3}::negate::alloc::vec::Vec>>","regex_lite::string::core::option::Option<usize>","regex_lite::hir::parse::alloc::vec::Vec>>","regex_lite::alloc::string::String","regex_lite::utf8::decode_step::usize","regex_lite::nfa::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#3}::negate::core::option::Option<usize>","regex_lite::error::core::option::Option<usize>","regex_lite::hir::{impl#5}::is_match::nfa::Config","regex_lite::hir::Config","regex_lite::pool::nfa::Config","regex_lite::nfa::Config","regex_lite::utf8::regex_lite::nfa::Compiler","regex_lite::hir::parse::check_hir_nesting::core::option::Option<alloc::sync::Arc<str>>","regex_lite::int::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::parse::check_hir_nesting::alloc::sync::Arc","regex_lite::std::hash::RandomState","regex_lite::utf8::tests::Config","regex_lite::utf8::tests::core::cell::RefCell<nfa::NFA>","regex_lite::hir::parse::tests::NFA","regex_lite::utf8::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::hir::{impl#3}::negate::RefCell","regex_lite::interpolate::std::hash::RandomState","regex_lite::utf8::decode_step::alloc::sync::Arc","regex_lite::hir::{impl#3}::negate::regex_lite::nfa::Compiler","regex_lite::hir::parse::tests::nfa::Compiler","regex_lite::string::nfa::Compiler","regex_lite::hir::{impl#6}::drop::alloc::sync::Arc<str>","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec>>","regex_lite::hir::alloc::vec::Vec<nfa::State>","regex_lite::hir::{impl#6}::drop::std::collections::HashMap, u32>","regex_lite::pool::alloc::sync::Arc","regex_lite::hir::{impl#5}::is_match::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::string::{impl#14}::fmt::alloc::vec::Vec","regex_lite::hir::{impl#3}::negate::usize","regex_lite::hir::{impl#5}::is_match::core::option::Option<usize>","regex_lite::hir::parse::check_hir_nesting::alloc::string::String","regex_lite::regex_lite::nfa::Compiler","regex_lite::interpolate::nfa::State","regex_lite::int::std::hash::RandomState","regex_lite::utf8::tests::std::hash::RandomState","regex_lite::utf8::is_word_byte::alloc::sync::Arc","regex_lite::hir::parse::check_hir_nesting::core::cell::RefCell","regex_lite::utf8::is_word_byte::alloc::vec::Vec>>","regex_lite::nfa::alloc::vec::Vec>>","regex_lite::utf8::is_word_byte::alloc::string::String","regex_lite::pool::usize","regex_lite::nfa::core::cell::RefCell<nfa::NFA>","regex_lite::string::{impl#14}::fmt::alloc::sync::Arc<str>","regex_lite::hir::parse::tests::alloc::sync::Arc<str>","regex_lite::hir::{impl#5}::is_match::std::hash::RandomState","regex_lite::interpolate::core::option::Option<alloc::sync::Arc<str>>","regex_lite::error::nfa::Compiler","regex_lite::interpolate::nfa::NFA","regex_lite::hir::parse::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::string::nfa::State","regex_lite::string::core::option::Option>","regex_lite::nfa::core::option::Option>","regex_lite::utf8::tests::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::utf8::is_word_byte::nfa::Config","regex_lite::nfa::nfa::Compiler","regex_lite::int::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::nfa::Config","regex_lite::error::std::hash::RandomState","regex_lite::error::u32","regex_lite::hir::{impl#2}::subs::alloc::sync::Arc<str>","regex_lite::string::{impl#14}::fmt::std::collections::HashMap, u32>","regex_lite::utf8::alloc::vec::Vec<nfa::State>","regex_lite::utf8::nfa::NFA","regex_lite::hir::{impl#2}::subs::std::collections::HashMap, u32>","regex_lite::hir::{impl#3}::negate::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::{impl#5}::is_match::u32","regex_lite::nfa::core::option::Option<usize>","regex_lite::utf8::str","regex_lite::hir::{impl#2}::subs::alloc::sync::Arc","regex_lite::hir::parse::alloc::sync::Arc","regex_lite::hir::parse::check_hir_nesting::str","regex_lite::hir::parse::alloc::alloc::Global","regex_lite::pikevm::core::option::Option","regex_lite::pool::core::option::Option<usize>","regex_lite::nfa::nfa::NFA","regex_lite::error::core::option::Option","regex_lite::hir::{impl#5}::is_match::alloc::string::String","regex_lite::hir::{impl#3}::negate::u32","regex_lite::hir::{impl#5}::is_match::RefCell","regex_lite::hir::{impl#6}::drop::alloc::vec::Vec","regex_lite::utf8::is_word_byte::core::option::Option","regex_lite::hir::{impl#3}::negate::alloc::sync::Arc<str>","regex_lite::utf8::core::option::Option<usize>","regex_lite::nfa::nfa::Config","regex_lite::nfa::State","regex_lite::usize","regex_lite::core::option::Option<alloc::sync::Arc<str>>","regex_lite::utf8::tests::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::error::nfa::State","regex_lite::pool::alloc::sync::Arc<str>","regex_lite::error::RefCell","regex_lite::utf8::decode_step::core::cell::RefCell","regex_lite::interpolate::alloc::vec::Vec","regex_lite::hir::{impl#2}::subs::nfa::State","regex_lite::hir::{impl#3}::negate::core::option::Option>","regex_lite::utf8::alloc::sync::Arc<str>","regex_lite::hir::alloc::sync::Arc","regex_lite::interpolate::alloc::sync::Arc<str>","regex_lite::utf8::nfa::Config","regex_lite::hir::{impl#5}::is_match::regex_lite::nfa::Compiler","regex_lite::hir::{impl#2}::subs::core::cell::RefCell<nfa::NFA>","regex_lite::hir::{impl#2}::subs::nfa::Compiler","regex_lite::string::{impl#14}::fmt::nfa::Compiler","regex_lite::hir::{impl#3}::negate::nfa::Compiler","regex_lite::pool::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::pool::alloc::alloc::Global","regex_lite::RefCell","regex_lite::alloc::vec::Vec>>","regex_lite::hir::parse::tests::alloc::string::String","regex_lite::interpolate::core::option::Option<usize>","regex_lite::string::core::option::Option<alloc::sync::Arc<str>>","regex_lite::utf8::RefCell","regex_lite::utf8::tests::alloc::vec::Vec>>","regex_lite::hir::{impl#3}::negate::alloc::alloc::Global","regex_lite::hir::usize","regex_lite::int::nfa::NFA","regex_lite::u32","regex_lite::utf8::nfa::State","regex_lite::hir::alloc::sync::Arc<str>","regex_lite::hir::parse::tests::alloc::sync::Arc","regex_lite::utf8::nfa::Compiler","regex_lite::pikevm::core::cell::RefCell<nfa::NFA>","regex_lite::pikevm::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::parse::check_hir_nesting::Config","regex_lite::utf8::decode_step::str","regex_lite::utf8::decode_step::NFA","regex_lite::nfa::core::cell::RefCell","regex_lite::interpolate::Config","regex_lite::hir::parse::tests::core::cell::RefCell","regex_lite::int::alloc::vec::Vec","regex_lite::hir::parse::check_hir_nesting::core::option::Option>","regex_lite::error::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::utf8::tests::core::option::Option>","regex_lite::utf8::alloc::sync::Arc","regex_lite::int::alloc::sync::Arc","regex_lite::hir::{impl#2}::subs::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec<nfa::State>","regex_lite::NFA","regex_lite::utf8::decode_step::std::hash::RandomState","regex_lite::hir::{impl#5}::is_match::str","regex_lite::utf8::is_word_byte::std::hash::RandomState","regex_lite::hir::{impl#5}::is_match::alloc::sync::Arc<str>","regex_lite::hir::str","regex_lite::hir::parse::nfa::NFA","regex_lite::hir::{impl#2}::subs::alloc::string::String","regex_lite::hir::{impl#2}::subs::alloc::vec::Vec>>","regex_lite::utf8::decode_step::core::cell::RefCell<nfa::NFA>","regex_lite::interpolate::str","regex_lite::nfa::nfa::State","regex_lite::hir::parse::tests::u32","regex_lite::utf8::is_word_byte::alloc::vec::Vec","regex_lite::hir::{impl#2}::subs::std::hash::RandomState","regex_lite::interpolate::nfa::Compiler","regex_lite::hir::parse::tests::Config","regex_lite::string::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::utf8::decode_step::alloc::string::String","regex_lite::utf8::decode_step::RefCell","regex_lite::interpolate::alloc::vec::Vec>>","regex_lite::hir::parse::u32","regex_lite::hir::parse::check_hir_nesting::core::option::Option","regex_lite::hir::std::hash::RandomState","regex_lite::utf8::is_word_byte::alloc::vec::Vec<nfa::State>","regex_lite::pikevm::nfa::Config","regex_lite::hir::{impl#3}::negate::std::collections::HashMap, u32>","regex_lite::hir::{impl#3}::negate::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<nfa::State>","regex_lite::hir::parse::usize","regex_lite::utf8::is_word_byte::nfa::State","regex_lite::hir::{impl#6}::drop::core::option::Option>","regex_lite::hir::parse::std::collections::HashMap, u32>","regex_lite::nfa::alloc::alloc::Global","regex_lite::alloc::vec::Vec<nfa::State>","regex_lite::error::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::parse::core::cell::RefCell<nfa::NFA>","regex_lite::hir::u32","regex_lite::string::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::utf8::alloc::vec::Vec>>","regex_lite::hir::{impl#2}::subs::u32","regex_lite::hir::core::option::Option>","regex_lite::utf8::NFA","regex_lite::string::nfa::NFA","regex_lite::string::{impl#14}::fmt::Config","regex_lite::hir::{impl#6}::drop::NFA","regex_lite::utf8::is_word_byte::core::cell::RefCell","regex_lite::pikevm::alloc::sync::Arc<str>","regex_lite::nfa::u32","regex_lite::hir::parse::nfa::Compiler","regex_lite::string::alloc::alloc::Global","regex_lite::hir::{impl#2}::subs::core::option::Option>","regex_lite::utf8::tests::core::option::Option","regex_lite::hir::parse::tests::core::option::Option<alloc::sync::Arc<str>>","regex_lite::hir::{impl#2}::subs::core::cell::RefCell","regex_lite::utf8::core::cell::RefCell","regex_lite::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::nfa::str","regex_lite::utf8::std::collections::HashMap, u32>","regex_lite::int::std::collections::HashMap, u32>","regex_lite::core::option::Option","regex_lite::hir::{impl#5}::is_match::alloc::vec::Vec<core::option::Option<alloc::sync::Arc<str>>>","regex_lite::string::alloc::string::String","regex_lite::interpolate::alloc::alloc::Global","regex_lite::hir::{impl#2}::subs::NFA","regex_lite::hir::{impl#6}::drop::core::option::Option","regex_lite::nfa::std::hash::RandomState","regex_lite::error::NFA","regex_lite::utf8::Config","regex_lite::utf8::is_word_byte::NFA","regex_lite::pool::u32","regex_lite::error::regex_lite::nfa::Compiler","regex_lite::pikevm::nfa::NFA","regex_lite::error::core::cell::RefCell","regex_lite::pikevm::std::collections::HashMap, u32>","regex_lite::utf8::is_word_byte::nfa::NFA","regex_lite::utf8::is_word_byte::usize","regex_lite::pikevm::alloc::vec::Vec>>","regex_lite::hir::parse::RefCell","regex_lite::string::nfa::Config","regex_lite::alloc::alloc::Global","regex_lite::int::usize","regex_lite::int::core::cell::RefCell<nfa::NFA>","regex_lite::error::nfa::NFA","regex_lite::hir::{impl#3}::negate::std::hash::RandomState","regex_lite::utf8::tests::nfa::Config","regex_lite::hir::{impl#3}::negate::alloc::string::String","regex_lite::interpolate::regex_lite::nfa::Compiler","regex_lite::nfa::alloc::vec::Vec","regex_lite::interpolate::std::collections::HashMap, u32>","regex_lite::utf8::tests::core::cell::RefCell","regex_lite::pool::alloc::vec::Vec","regex_lite::string::alloc::sync::Arc","regex_lite::pool::RefCell","regex_lite::hir::parse::tests::usize","regex_lite::hir::{impl#2}::subs::regex_lite::nfa::Compiler","regex_lite::hir::{impl#2}::subs::str","regex_lite::error::alloc::vec::Vec<nfa::State>","regex_lite::hir::parse::tests::std::collections::HashMap<alloc::sync::Arc<str>, u32>","regex_lite::int::alloc::vec::Vec>>","regex_lite::hir::parse::check_hir_nesting::alloc::alloc::Global","regex_lite::pikevm::NFA","regex_lite::core::cell::RefCell","regex_lite::pool::alloc::vec::Vec<nfa::State>","regex_lite::hir::{impl#6}::drop::nfa::NFA","regex_lite::hir::{impl#5}::is_match::core::option::Option","regex_lite::hir::core::option::Option","regex_lite::interpolate::u32","regex_lite::utf8::tests::nfa::Compiler","regex_lite::pool::nfa::NFA","regex_lite::hir::parse::tests::core::cell::RefCell<nfa::NFA>","regex_lite::hir::{impl#5}::is_match::nfa::NFA","regex_lite::pool::core::option::Option","regex_lite::interpolate::core::cell::RefCell<nfa::NFA>","regex_lite::utf8::decode_step::alloc::vec::Vec>>","regex_lite::hir::{impl#3}::negate::core::cell::RefCell<nfa::NFA>","regex_lite::nfa::core::option::Option","regex_lite::hir::{impl#6}::drop::regex_lite::nfa::Compiler","regex_lite::int::RefCell"]}