{"mod_name":"nfa","calls":["nfa::Compiler::add","<core::slice::Iter<'_, hir::ClassRange> as core::iter::Iterator>::map::<","<core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","alloc::vec::Vec::<hir::ClassRange>::is_empty","<core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}> as core::iter::Iterator>::collect::<alloc::vec::Vec<","core::slice::<impl [hir::ClassRange]>::iter","<core::result::Result<u32, error::Error> as core::ops::Try>::branch","<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref"],"types":["bool","core::slice::Iter<'_, hir::ClassRange>","core::convert::Infallible","core::iter::Map<core::slice::Iter<'_, hir::ClassRange>, {closure@regex-lite/src/nfa.rs:347:41: 347:44}>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","hir::ClassRange","core::result::Result<core::convert::Infallible, error::Error>","{closure@regex-lite/src/nfa.rs:347:41: 347:44}","(char, char)","nfa::State","error::Error","hir::Class","core::result::Result<nfa::ThompsonRef, error::Error>","isize","alloc::vec::Vec<hir::ClassRange>","core::result::Result<u32, error::Error>","nfa::ThompsonRef","[hir::ClassRange]","!","alloc::alloc::Global","nfa::Compiler","char","u32","alloc::vec::Vec<(char, char)>"]}