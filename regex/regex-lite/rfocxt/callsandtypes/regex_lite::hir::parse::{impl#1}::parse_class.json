{"mod_name":"hir::parse","calls":["alloc::vec::Vec::<hir::ClassRange>::push","hir::parse::Parser::<'_>::flags","alloc::vec::Vec::<hir::ClassRange>::new","<core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","hir::parse::Parser::<'_>::bump","<core::result::Result<","hir::Hir::class","alloc::vec::Vec::<hir::ClassRange>::is_empty","core::panicking::assert_failed::<char, char>","hir::Class::negate","hir::parse::Parser::<'_>::bump_and_bump_space","hir::parse::Parser::<'_>::parse_class_range","alloc::vec::Vec::<hir::ClassRange>::extend_from_slice","hir::parse::Parser::<'_>::peek","error::Error::new","hir::parse::Parser::<'_>::is_done","hir::parse::Parser::<'_>::maybe_parse_posix_class","hir::Class::new::<alloc::vec::Vec<hir::ClassRange>>","hir::parse::Parser::<'_>::bump_space","<core::option::Option<char> as core::cmp::PartialEq>::eq","hir::parse::Parser::<'_>::char","<alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref","hir::Class::ascii_case_fold"],"types":["core::result::Result<hir::Hir, error::Error>","hir::ClassRange","!","error::Error","core::option::Option<hir::Class>","hir::Class","hir::Hir","core::option::Option<core::fmt::Arguments<'_>>","hir::Flags","core::convert::Infallible","core::result::Result<(), error::Error>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>>","()","(&char, &char)","core::result::Result<core::convert::Infallible, error::Error>","[hir::ClassRange]","bool","core::fmt::Arguments<'_>","str","core::option::Option<char>","isize","hir::parse::Parser<'_>","alloc::vec::Vec<hir::ClassRange>","core::panicking::AssertKind","char","alloc::alloc::Global"]}