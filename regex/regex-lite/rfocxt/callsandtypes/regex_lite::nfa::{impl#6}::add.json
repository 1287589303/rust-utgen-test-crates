{"mod_name":"nfa","calls":["alloc::vec::Vec::<nfa::State>::push","core::result::Result::<u32, core::num::TryFromIntError>::map_err::<error::Error, {closure@regex-lite/src/nfa.rs:645:22: 645:25}>","<core::result::Result<u32, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","alloc::vec::Vec::<nfa::State>::len","nfa::Compiler::check_size_limit","<core::result::Result<","nfa::State::memory_usage","<core::cell::Ref<'_, nfa::NFA> as core::ops::Deref>::deref","core::cell::RefCell::<nfa::NFA>::borrow_mut","core::cell::RefCell::<nfa::NFA>::borrow","<u32 as core::convert::TryFrom<usize>>::try_from","<core::cell::RefMut<'_, nfa::NFA> as core::ops::DerefMut>::deref_mut","<core::result::Result<u32, error::Error> as core::ops::Try>::branch"],"types":["core::result::Result<u32, error::Error>","alloc::alloc::Global","usize","core::cell::Ref<'_, nfa::NFA>","core::cell::RefCell<nfa::NFA>","core::result::Result<core::convert::Infallible, error::Error>","{closure@regex-lite/src/nfa.rs:645:22: 645:25}","nfa::NFA","nfa::State","isize","bool","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>>","error::Error","nfa::Compiler","!","(usize, bool)","u32","core::convert::Infallible","core::result::Result<(), error::Error>","core::cell::RefMut<'_, nfa::NFA>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","alloc::vec::Vec<nfa::State>","core::result::Result<u32, core::num::TryFromIntError>","core::num::TryFromIntError","()"]}