{"mod_name":"hir::parse","calls":["hir::parse::Parser::<'_>::bump_if","hir::Hir::capture","hir::parse::Parser::<'_>::is_lookaround_prefix","hir::parse::Parser::<'_>::parse_capture_name","<core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch","<core::result::Result<u32, error::Error> as core::ops::Try>::branch","hir::parse::Parser::<'_>::is_done","hir::parse::Parser::<'_>::pos","<core::result::Result<hir::Flags, error::Error> as core::ops::Try>::branch","core::cell::RefCell::<hir::Flags>::borrow_mut","<core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual","<alloc::boxed::Box<str> as core::convert::From<&str>>::from","<core::result::Result<&str, error::Error> as core::ops::Try>::branch","error::Error::new","hir::parse::Parser::<'_>::next_capture_index","hir::parse::Parser::<'_>::bump","core::panicking::assert_failed::<char, char>","hir::parse::Parser::<'_>::bump_and_bump_space","hir::parse::Parser::<'_>::parse_inner","core::result::Result::<hir::Hir, error::Error>::map::<core::option::Option<hir::Hir>, fn","alloc::boxed::Box::<hir::Hir>::new","hir::parse::Parser::<'_>::parse_flags","hir::parse::Parser::<'_>::char","<core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut"],"types":["hir::Flags","isize","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Hir>","core::result::Result<hir::Hir, error::Error>","usize","error::Error","core::cell::RefCell<hir::Flags>","core::convert::Infallible","str","u32","char","(&char, &char)","hir::parse::Parser<'_>","fn(hir::Hir) -> core::option::Option<hir::Hir> {core::option::Option::<hir::Hir>::Some}","core::result::Result<core::option::Option<hir::Hir>, error::Error>","!","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, &str>","hir::Capture","core::fmt::Arguments<'_>","core::option::Option<core::fmt::Arguments<'_>>","alloc::boxed::Box<hir::Hir>","hir::Hir","core::option::Option<alloc::boxed::Box<str>>","()","core::result::Result<u32, error::Error>","core::panicking::AssertKind","(usize, bool)","core::cell::RefMut<'_, hir::Flags>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, hir::Flags>","core::result::Result<&str, error::Error>","core::result::Result<hir::Flags, error::Error>","core::result::Result<core::convert::Infallible, error::Error>","bool","alloc::boxed::Box<str>","core::ops::ControlFlow<core::result::Result<core::convert::Infallible, error::Error>, u32>","alloc::alloc::Global","core::option::Option<hir::Hir>"]}