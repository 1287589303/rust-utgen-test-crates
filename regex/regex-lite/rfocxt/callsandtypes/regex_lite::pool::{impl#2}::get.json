{"mod_name":"pool","calls":["alloc::boxed::Box::<T>::new","alloc::vec::Vec::<alloc::boxed::Box<T>>::pop","core::result::Result::<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>, std::sync::PoisonError<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>>>::unwrap","<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>> as core::ops::DerefMut>::deref_mut","<F as core::ops::Fn<","std::sync::Mutex::<alloc::vec::Vec<alloc::boxed::Box<T>>>::lock"],"types":["alloc::alloc::Global","core::result::Result<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>, std::sync::PoisonError<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>>>","pool::Pool<T, F>","()","std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>","F","isize","pool::PoolGuard<'_, T, F>","alloc::vec::Vec<alloc::boxed::Box<T>>","core::option::Option<alloc::boxed::Box<T>>","std::sync::PoisonError<std::sync::MutexGuard<'_, alloc::vec::Vec<alloc::boxed::Box<T>>>>","std::sync::Mutex<alloc::vec::Vec<alloc::boxed::Box<T>>>","T","alloc::boxed::Box<T>"]}