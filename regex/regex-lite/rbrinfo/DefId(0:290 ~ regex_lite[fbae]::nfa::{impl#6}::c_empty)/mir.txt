bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/nfa.rs:324:13-324:15)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:34)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:22)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:18-324:34)
      kind: _4 = nfa::Compiler::add_empty(move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/nfa.rs:324:33-324:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
      kind: _3 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  1: PlaceMention(_3)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  2: _6 = discriminant(_3)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  1: _10 = ((_3 as Continue).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  2: _2 = _10
    SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/nfa.rs:324:13-324:15)
  5: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:324:35-324:36)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/nfa.rs:325:12-325:46)
  7: StorageLive(_12)
    SourceInfo(regex-lite/src/nfa.rs:325:33-325:35)
  8: _12 = _2
    SourceInfo(regex-lite/src/nfa.rs:325:33-325:35)
  9: StorageLive(_13)
    SourceInfo(regex-lite/src/nfa.rs:325:42-325:44)
  10: _13 = _2
    SourceInfo(regex-lite/src/nfa.rs:325:42-325:44)
  11: _11 = nfa::ThompsonRef { start: move _12, end: move _13 }
    SourceInfo(regex-lite/src/nfa.rs:325:12-325:46)
  12: StorageDead(_13)
    SourceInfo(regex-lite/src/nfa.rs:325:45-325:46)
  13: StorageDead(_12)
    SourceInfo(regex-lite/src/nfa.rs:325:45-325:46)
  14: _0 = core::result::Result::<nfa::ThompsonRef, error::Error>::Ok(move _11)
    SourceInfo(regex-lite/src/nfa.rs:325:9-325:47)
  15: StorageDead(_11)
    SourceInfo(regex-lite/src/nfa.rs:325:46-325:47)
  16: StorageDead(_2)
    SourceInfo(regex-lite/src/nfa.rs:326:5-326:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:326:6-326:6)
      kind: goto -> bb8
  }
  preds [bb2, bb4]
  succs [bb8]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  1: _7 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  3: _9 = move _7
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:324:18-324:35)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _9) -> [return: bb7, unwind: bb9]
  }
  preds [bb4]
  succs [bb7, bb9]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:324:34-324:35)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:324:35-324:36)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/nfa.rs:326:5-326:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:326:6-326:6)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:326:6-326:6)
      kind: return
  }
  preds [bb5, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:323:5-326:6)
      kind: resume
  }
  preds [bb0, bb1, bb6]
  succs []

