bb0
  0: StorageLive(_1)
    SourceInfo(regex-lite/src/hir/mod.rs:221:13-221:17)
  1: _1 = hir::HirKind::Empty
    SourceInfo(regex-lite/src/hir/mod.rs:221:20-221:34)
  2: FakeRead(ForLet(None), _1)
    SourceInfo(regex-lite/src/hir/mod.rs:221:13-221:17)
  3: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:223:13-223:17)
  4: _2 = move _1
    SourceInfo(regex-lite/src/hir/mod.rs:223:13-223:17)
  5: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:226:43-226:50)
  6: _3 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:226:43-226:50)
  7: _0 = hir::Hir { kind: move _2, is_start_anchored: const false, is_match_empty: const true, static_explicit_captures_len: move _3 }
    SourceInfo(regex-lite/src/hir/mod.rs:222:9-227:10)
  8: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:227:9-227:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:227:9-227:10)
      kind: drop(_2) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:227:9-227:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:228:5-228:6)
      kind: drop(_1) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_1)
    SourceInfo(regex-lite/src/hir/mod.rs:228:5-228:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:228:6-228:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:228:5-228:6)
      kind: drop(_1) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:220:5-228:6)
      kind: resume
  }
  preds [bb1, bb3]
  succs []

