bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1213:13-1213:15)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1213:18-1213:22)
  2: _3 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1213:18-1213:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1213:18-1213:29)
      kind: _2 = hir::parse::Parser::<'_>::char(move _3) -> [return: bb1, unwind: bb33]
  }
  preds []
  succs [bb1, bb33]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1213:28-1213:29)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:1213:13-1213:15)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1214:9-1214:20)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1214:9-1214:13)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1214:9-1214:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1214:9-1214:20)
      kind: _4 = hir::parse::Parser::<'_>::bump(move _5) -> [return: bb2, unwind: bb33]
  }
  preds [bb0]
  succs [bb2, bb33]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1214:19-1214:20)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1214:20-1214:21)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1215:13-1215:22)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1215:41-1220:10)
  4: PlaceMention(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1215:47-1215:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1215:41-1215:49)
      kind: switchInt(_2) -> [100: bb4, 68: bb4, 115: bb5, 83: bb5, 119: bb6, 87: bb6, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb4, bb5, bb5, bb6, bb6]

bb3
  0: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:13-1219:16)
  1: _17 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:1219:13-1219:16)
  2: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _23 = [const "internal error: entered unreachable code: invalid Perl class \\"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: _22 = &_23
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  9: _21 = &(*_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  10: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:55-1219:57)
  14: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:60-1219:63)
  15: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:60-1219:63)
  16: _29 = &_17
    SourceInfo(regex-lite/src/hir/parse.rs:1219:60-1219:63)
  17: _28 = &(*_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:60-1219:63)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1219:55-1219:57)
      kind: _27 = core::fmt::rt::Argument::<'_>::new_display::<char>(move _28) -> [return: bb16, unwind: bb33]
  }
  preds [bb2, bb6]
  succs [bb16, bb33]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1216:13-1216:22)
      kind: falseEdge -> [real: bb7, imaginary: bb5]
  }
  preds [bb2, bb2]
  succs [bb5, bb7]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1217:13-1217:22)
      kind: falseEdge -> [real: bb10, imaginary: bb6]
  }
  preds [bb2, bb2, bb4]
  succs [bb6, bb10]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1218:13-1218:22)
      kind: falseEdge -> [real: bb13, imaginary: bb3]
  }
  preds [bb2, bb2, bb5]
  succs [bb3, bb13]

bb7
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:26-1216:46)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:38-1216:45)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:38-1216:45)
  3: _10 = const "digit"
    SourceInfo(regex-lite/src/hir/parse.rs:1216:38-1216:45)
  4: _9 = &(*_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:38-1216:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1216:26-1216:46)
      kind: _8 = hir::parse::posix_class(move _9) -> [return: bb8, unwind: bb33]
  }
  preds [bb4]
  succs [bb8, bb33]

bb8
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:45-1216:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1216:26-1216:55)
      kind: _7 = core::result::Result::<impl core::iter::Iterator<Item = hir::ClassRange>, error::Error>::unwrap(move _8) -> [return: bb9, unwind: bb32]
  }
  preds [bb7]
  succs [bb9, bb32]

bb9
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:54-1216:55)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1216:54-1216:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1216:54-1216:55)
      kind: goto -> bb18
  }
  preds [bb8]
  succs [bb18]

bb10
  0: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:26-1217:46)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:38-1217:45)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:38-1217:45)
  3: _13 = const "space"
    SourceInfo(regex-lite/src/hir/parse.rs:1217:38-1217:45)
  4: _12 = &(*_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:38-1217:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1217:26-1217:46)
      kind: _11 = hir::parse::posix_class(move _12) -> [return: bb11, unwind: bb33]
  }
  preds [bb5]
  succs [bb11, bb33]

bb11
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:45-1217:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1217:26-1217:55)
      kind: _7 = core::result::Result::<impl core::iter::Iterator<Item = hir::ClassRange>, error::Error>::unwrap(move _11) -> [return: bb12, unwind: bb31]
  }
  preds [bb10]
  succs [bb12, bb31]

bb12
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:54-1217:55)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1217:54-1217:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1217:54-1217:55)
      kind: goto -> bb18
  }
  preds [bb11]
  succs [bb18]

bb13
  0: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:26-1218:45)
  1: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:38-1218:44)
  2: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:38-1218:44)
  3: _16 = const "word"
    SourceInfo(regex-lite/src/hir/parse.rs:1218:38-1218:44)
  4: _15 = &(*_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:38-1218:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1218:26-1218:45)
      kind: _14 = hir::parse::posix_class(move _15) -> [return: bb14, unwind: bb33]
  }
  preds [bb6]
  succs [bb14, bb33]

bb14
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:44-1218:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1218:26-1218:54)
      kind: _7 = core::result::Result::<impl core::iter::Iterator<Item = hir::ClassRange>, error::Error>::unwrap(move _14) -> [return: bb15, unwind: bb30]
  }
  preds [bb13]
  succs [bb15, bb30]

bb15
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:53-1218:54)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1218:53-1218:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1218:53-1218:54)
      kind: goto -> bb18
  }
  preds [bb14]
  succs [bb18]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:1219:56-1219:57)
  1: _26 = [move _27]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _25 = &_26
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _24 = &(*_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _20 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _21, move _24) -> [return: bb17, unwind: bb33]
  }
  preds [bb3]
  succs [bb17, bb33]

bb17
  0: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _19 = core::panicking::panic_fmt(move _20) -> bb33
  }
  preds [bb16]
  succs [bb33]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1215:25-1220:11)
      kind: _6 = hir::Class::new::<impl core::iter::Iterator<Item = hir::ClassRange>>(move _7) -> [return: bb19, unwind: bb29]
  }
  preds [bb9, bb12, bb15]
  succs [bb19, bb29]

bb19
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1220:10-1220:11)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-lite/src/hir/parse.rs:1215:13-1215:22)
  2: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:1221:9-1223:10)
  3: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:1221:12-1221:35)
  4: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:1221:12-1221:14)
  5: _32 = &_2
    SourceInfo(regex-lite/src/hir/parse.rs:1221:12-1221:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1221:12-1221:35)
      kind: _31 = core::char::methods::<impl char>::is_ascii_uppercase(move _32) -> [return: bb20, unwind: bb28]
  }
  preds [bb18]
  succs [bb20, bb28]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1221:12-1221:35)
      kind: switchInt(move _31) -> [0: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb23]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:1221:34-1221:35)
  1: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:1222:13-1222:27)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:1222:13-1222:18)
  3: _34 = &mut _6
    SourceInfo(regex-lite/src/hir/parse.rs:1222:13-1222:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1222:13-1222:27)
      kind: _33 = hir::Class::negate(move _34) -> [return: bb22, unwind: bb28]
  }
  preds [bb20]
  succs [bb22, bb28]

bb22
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:1222:26-1222:27)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:1222:27-1222:28)
  2: _30 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1221:36-1223:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1221:9-1223:10)
      kind: goto -> bb24
  }
  preds [bb21]
  succs [bb24]

bb23
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:1221:34-1221:35)
  1: _30 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1223:10-1223:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1221:9-1223:10)
      kind: goto -> bb24
  }
  preds [bb20]
  succs [bb24]

bb24
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:1223:9-1223:10)
  1: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:1223:9-1223:10)
  2: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:1224:20-1224:25)
  3: _35 = move _6
    SourceInfo(regex-lite/src/hir/parse.rs:1224:20-1224:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1224:9-1224:26)
      kind: _0 = hir::Hir::class(move _35) -> [return: bb25, unwind: bb27]
  }
  preds [bb22, bb23]
  succs [bb25, bb27]

bb25
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:1224:25-1224:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1225:5-1225:6)
      kind: drop(_6) -> [return: bb26, unwind: bb33]
  }
  preds [bb24]
  succs [bb26, bb33]

bb26
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1225:5-1225:6)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1225:5-1225:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1225:6-1225:6)
      kind: return
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1224:25-1224:26)
      kind: drop(_35) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb24]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1225:5-1225:6)
      kind: drop(_6) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb19, bb21, bb27]
  succs [bb33]

bb29
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1220:10-1220:11)
      kind: drop(_7) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb18]
  succs [bb33]

bb30
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1218:53-1218:54)
      kind: drop(_14) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb33]

bb31
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1217:54-1217:55)
      kind: drop(_11) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb33]

bb32
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1216:54-1216:55)
      kind: drop(_8) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1212:5-1225:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb7, bb10, bb13, bb16, bb17, bb25, bb28, bb29, bb30, bb31, bb32]
  succs []

