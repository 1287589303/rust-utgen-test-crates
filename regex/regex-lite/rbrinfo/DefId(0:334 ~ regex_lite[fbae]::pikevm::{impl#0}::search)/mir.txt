bb0
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:81:9-81:40)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:81:9-81:14)
  2: _9 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:81:9-81:14)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:81:28-81:39)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:81:28-81:33)
  5: _11 = &(*_7)
    SourceInfo(regex-lite/src/pikevm.rs:81:28-81:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:81:28-81:39)
      kind: _10 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::len(move _11) -> [return: bb1, unwind: bb49]
  }
  preds []
  succs [bb1, bb49]

bb1
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:81:38-81:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:81:9-81:40)
      kind: _8 = pikevm::Cache::setup_search(move _9, move _10) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:81:39-81:40)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:81:39-81:40)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:81:40-81:41)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:82:9-84:10)
  4: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:82:12-82:23)
  5: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:82:12-82:17)
  6: _14 = _4
    SourceInfo(regex-lite/src/pikevm.rs:82:12-82:17)
  7: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:82:20-82:23)
  8: _15 = _5
    SourceInfo(regex-lite/src/pikevm.rs:82:20-82:23)
  9: _13 = Gt(move _14, move _15)
    SourceInfo(regex-lite/src/pikevm.rs:82:12-82:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:82:12-82:23)
      kind: switchInt(move _13) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:82:22-82:23)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:82:22-82:23)
  2: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:83:20-83:25)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:84:9-84:10)
  4: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:84:9-84:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:179:6-179:6)
      kind: goto -> bb48
  }
  preds [bb2]
  succs [bb48]

bb4
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:82:22-82:23)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:82:22-82:23)
  2: _12 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:84:10-84:10)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:84:9-84:10)
  4: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:84:9-84:10)
  5: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:91:9-94:10)
  6: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:92:13-92:46)
  7: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:92:13-92:27)
  8: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:92:13-92:21)
  9: _20 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:92:13-92:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:92:13-92:27)
      kind: _19 = core::slice::<impl [u8]>::len(move _20) -> [return: bb5, unwind: bb49]
  }
  preds [bb2]
  succs [bb5, bb49]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:92:26-92:27)
  1: _18 = Lt(move _19, const core::usize::MAX)
    SourceInfo(regex-lite/src/pikevm.rs:92:13-92:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:92:13-92:46)
      kind: switchInt(move _18) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:92:45-92:46)
  1: _17 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:94:10-94:10)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:94:9-94:10)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:94:9-94:10)
  4: PlaceMention(_2)
    SourceInfo(regex-lite/src/pikevm.rs:96:67-96:72)
  5: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:96:21-96:34)
  6: _27 = &mut ((*_2).0: alloc::vec::Vec<pikevm::FollowEpsilon>)
    SourceInfo(regex-lite/src/pikevm.rs:96:21-96:34)
  7: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:96:36-96:48)
  8: _28 = &mut ((*_2).1: pikevm::ActiveStates)
    SourceInfo(regex-lite/src/pikevm.rs:96:36-96:48)
  9: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:96:50-96:62)
  10: _29 = &mut ((*_2).2: pikevm::ActiveStates)
    SourceInfo(regex-lite/src/pikevm.rs:96:50-96:62)
  11: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:97:13-97:21)
  12: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:97:24-97:34)
  13: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:97:24-97:34)
  14: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:97:24-97:28)
  15: _33 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:97:24-97:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:97:24-97:34)
      kind: _32 = pikevm::PikeVM::nfa(move _33) -> [return: bb9, unwind: bb49]
  }
  preds [bb5]
  succs [bb9, bb49]

bb7
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:92:45-92:46)
  1: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  2: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  3: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  4: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  5: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  6: _26 = [const "byte slice lengths must be less than usize MAX"]
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  7: _25 = &_26
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  8: _24 = &(*_25)
    SourceInfo(regex-lite/src/pikevm.rs:93:13-93:61)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _23 = core::fmt::Arguments::<'_>::new_const::<1>(move _24) -> [return: bb8, unwind: bb49]
  }
  preds [bb5]
  succs [bb8, bb49]

bb8
  0: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _22 = core::panicking::panic_fmt(move _23) -> bb49
  }
  preds [bb7]
  succs [bb49]

bb9
  0: _31 = &(*_32)
    SourceInfo(regex-lite/src/pikevm.rs:97:24-97:34)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:97:33-97:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:97:24-97:42)
      kind: _30 = nfa::NFA::start(move _31) -> [return: bb10, unwind: bb49]
  }
  preds [bb6]
  succs [bb10, bb49]

bb10
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:97:41-97:42)
  1: FakeRead(ForLet(None), _30)
    SourceInfo(regex-lite/src/pikevm.rs:97:13-97:21)
  2: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:97:42-97:43)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:98:13-98:21)
  4: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:98:24-98:34)
  5: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:98:24-98:34)
  6: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:98:24-98:28)
  7: _37 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:98:24-98:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:98:24-98:34)
      kind: _36 = pikevm::PikeVM::nfa(move _37) -> [return: bb11, unwind: bb49]
  }
  preds [bb9]
  succs [bb11, bb49]

bb11
  0: _35 = &(*_36)
    SourceInfo(regex-lite/src/pikevm.rs:98:24-98:34)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:98:33-98:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:98:24-98:54)
      kind: _34 = nfa::NFA::is_start_anchored(move _35) -> [return: bb12, unwind: bb49]
  }
  preds [bb10]
  succs [bb12, bb49]

bb12
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:98:53-98:54)
  1: FakeRead(ForLet(None), _34)
    SourceInfo(regex-lite/src/pikevm.rs:98:13-98:21)
  2: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:98:54-98:55)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:99:13-99:24)
  4: _38 = const false
    SourceInfo(regex-lite/src/pikevm.rs:99:27-99:32)
  5: FakeRead(ForLet(None), _38)
    SourceInfo(regex-lite/src/pikevm.rs:99:13-99:24)
  6: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:106:13-106:19)
  7: _39 = _4
    SourceInfo(regex-lite/src/pikevm.rs:106:22-106:27)
  8: FakeRead(ForLet(None), _39)
    SourceInfo(regex-lite/src/pikevm.rs:106:13-106:19)
  9: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
      kind: falseUnwind -> [real: bb14, unwind: bb49]
  }
  preds [bb12, bb44]
  succs [bb14, bb49]

bb14
  0: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:107:15-107:24)
  1: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:107:15-107:17)
  2: _43 = _39
    SourceInfo(regex-lite/src/pikevm.rs:107:15-107:17)
  3: StorageLive(_44)
    SourceInfo(regex-lite/src/pikevm.rs:107:21-107:24)
  4: _44 = _5
    SourceInfo(regex-lite/src/pikevm.rs:107:21-107:24)
  5: _42 = Le(move _43, move _44)
    SourceInfo(regex-lite/src/pikevm.rs:107:15-107:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:107:15-107:24)
      kind: switchInt(move _42) -> [0: bb45, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb45]

bb15
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:107:23-107:24)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:107:23-107:24)
  2: StorageLive(_45)
    SourceInfo(regex-lite/src/pikevm.rs:110:13-121:14)
  3: StorageLive(_46)
    SourceInfo(regex-lite/src/pikevm.rs:110:16-110:35)
  4: StorageLive(_47)
    SourceInfo(regex-lite/src/pikevm.rs:110:16-110:24)
  5: _47 = &((*_28).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:110:16-110:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:110:16-110:35)
      kind: _46 = pikevm::SparseSet::is_empty(move _47) -> [return: bb16, unwind: bb49]
  }
  preds [bb14]
  succs [bb16, bb49]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:110:16-110:35)
      kind: switchInt(move _46) -> [0: bb24, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb24]

bb17
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:110:34-110:35)
  1: StorageLive(_48)
    SourceInfo(regex-lite/src/pikevm.rs:112:17-114:18)
  2: StorageLive(_49)
    SourceInfo(regex-lite/src/pikevm.rs:112:20-112:27)
  3: _49 = _38
    SourceInfo(regex-lite/src/pikevm.rs:112:20-112:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:112:20-112:27)
      kind: switchInt(move _49) -> [0: bb19, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19]

bb18
  0: _40 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:113:21-113:26)
  1: StorageDead(_49)
    SourceInfo(regex-lite/src/pikevm.rs:114:17-114:18)
  2: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:114:17-114:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb17]
  succs [bb46]

bb19
  0: _48 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:114:18-114:18)
  1: StorageDead(_49)
    SourceInfo(regex-lite/src/pikevm.rs:114:17-114:18)
  2: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:114:17-114:18)
  3: StorageLive(_51)
    SourceInfo(regex-lite/src/pikevm.rs:118:20-118:28)
  4: _51 = _34
    SourceInfo(regex-lite/src/pikevm.rs:118:20-118:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:118:20-118:28)
      kind: switchInt(move _51) -> [0: bb23, otherwise: bb20]
  }
  preds [bb17]
  succs [bb20, bb23]

bb20
  0: StorageLive(_52)
    SourceInfo(regex-lite/src/pikevm.rs:118:32-118:42)
  1: StorageLive(_53)
    SourceInfo(regex-lite/src/pikevm.rs:118:32-118:34)
  2: _53 = _39
    SourceInfo(regex-lite/src/pikevm.rs:118:32-118:34)
  3: StorageLive(_54)
    SourceInfo(regex-lite/src/pikevm.rs:118:37-118:42)
  4: _54 = _4
    SourceInfo(regex-lite/src/pikevm.rs:118:37-118:42)
  5: _52 = Gt(move _53, move _54)
    SourceInfo(regex-lite/src/pikevm.rs:118:32-118:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:118:32-118:42)
      kind: switchInt(move _52) -> [0: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:118:41-118:42)
  1: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:118:41-118:42)
  2: _40 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:119:21-119:26)
  3: StorageDead(_52)
    SourceInfo(regex-lite/src/pikevm.rs:120:17-120:18)
  4: StorageDead(_51)
    SourceInfo(regex-lite/src/pikevm.rs:120:17-120:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb20]
  succs [bb46]

bb22
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:118:41-118:42)
  1: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:118:41-118:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb23
  0: _45 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:120:18-120:18)
  1: StorageDead(_52)
    SourceInfo(regex-lite/src/pikevm.rs:120:17-120:18)
  2: StorageDead(_51)
    SourceInfo(regex-lite/src/pikevm.rs:120:17-120:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:110:13-121:14)
      kind: goto -> bb25
  }
  preds [bb19, bb22]
  succs [bb25]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:110:34-110:35)
  1: _45 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:121:14-121:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:110:13-121:14)
      kind: goto -> bb25
  }
  preds [bb16]
  succs [bb25]

bb25
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/pikevm.rs:121:13-121:14)
  1: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:121:13-121:14)
  2: StorageLive(_56)
    SourceInfo(regex-lite/src/pikevm.rs:144:13-162:14)
  3: StorageLive(_57)
    SourceInfo(regex-lite/src/pikevm.rs:144:17-144:24)
  4: _57 = _38
    SourceInfo(regex-lite/src/pikevm.rs:144:17-144:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:144:17-144:24)
      kind: switchInt(move _57) -> [0: bb26, otherwise: bb29]
  }
  preds [bb23, bb24]
  succs [bb26, bb29]

bb26
  0: StorageLive(_58)
    SourceInfo(regex-lite/src/pikevm.rs:158:21-158:26)
  1: StorageLive(_59)
    SourceInfo(regex-lite/src/pikevm.rs:158:29-158:44)
  2: _59 = &mut ((*_29).1: pikevm::SlotTable)
    SourceInfo(regex-lite/src/pikevm.rs:158:29-158:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:158:29-158:57)
      kind: _58 = pikevm::SlotTable::all_absent(move _59) -> [return: bb27, unwind: bb49]
  }
  preds [bb25]
  succs [bb27, bb49]

bb27
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/pikevm.rs:158:56-158:57)
  1: FakeRead(ForLet(None), _58)
    SourceInfo(regex-lite/src/pikevm.rs:158:21-158:26)
  2: StorageLive(_60)
    SourceInfo(regex-lite/src/pikevm.rs:159:17-161:18)
  3: StorageLive(_61)
    SourceInfo(regex-lite/src/pikevm.rs:159:17-159:21)
  4: _61 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:159:17-159:21)
  5: StorageLive(_62)
    SourceInfo(regex-lite/src/pikevm.rs:160:21-160:26)
  6: _62 = &mut (*_27)
    SourceInfo(regex-lite/src/pikevm.rs:160:21-160:26)
  7: StorageLive(_63)
    SourceInfo(regex-lite/src/pikevm.rs:160:28-160:33)
  8: _63 = &mut (*_58)
    SourceInfo(regex-lite/src/pikevm.rs:160:28-160:33)
  9: StorageLive(_64)
    SourceInfo(regex-lite/src/pikevm.rs:160:35-160:39)
  10: _64 = &mut (*_28)
    SourceInfo(regex-lite/src/pikevm.rs:160:35-160:39)
  11: StorageLive(_65)
    SourceInfo(regex-lite/src/pikevm.rs:160:41-160:49)
  12: _65 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:160:41-160:49)
  13: StorageLive(_66)
    SourceInfo(regex-lite/src/pikevm.rs:160:51-160:53)
  14: _66 = _39
    SourceInfo(regex-lite/src/pikevm.rs:160:51-160:53)
  15: StorageLive(_67)
    SourceInfo(regex-lite/src/pikevm.rs:160:55-160:63)
  16: _67 = _30
    SourceInfo(regex-lite/src/pikevm.rs:160:55-160:63)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:159:17-161:18)
      kind: _60 = pikevm::PikeVM::epsilon_closure(move _61, move _62, move _63, move _64, move _65, move _66, move _67) -> [return: bb28, unwind: bb49]
  }
  preds [bb26]
  succs [bb28, bb49]

bb28
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  1: StorageDead(_66)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  2: StorageDead(_65)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  3: StorageDead(_64)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  4: StorageDead(_63)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  5: StorageDead(_62)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  6: StorageDead(_61)
    SourceInfo(regex-lite/src/pikevm.rs:161:17-161:18)
  7: StorageDead(_60)
    SourceInfo(regex-lite/src/pikevm.rs:161:18-161:19)
  8: _56 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:144:25-162:14)
  9: StorageDead(_58)
    SourceInfo(regex-lite/src/pikevm.rs:162:13-162:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:144:13-162:14)
      kind: goto -> bb30
  }
  preds [bb27]
  succs [bb30]

bb29
  0: _56 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:162:14-162:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:144:13-162:14)
      kind: goto -> bb30
  }
  preds [bb25]
  succs [bb30]

bb30
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/pikevm.rs:162:13-162:14)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/pikevm.rs:162:13-162:14)
  2: StorageLive(_70)
    SourceInfo(regex-lite/src/pikevm.rs:163:29-163:64)
  3: StorageLive(_71)
    SourceInfo(regex-lite/src/pikevm.rs:163:48-163:63)
  4: StorageLive(_72)
    SourceInfo(regex-lite/src/pikevm.rs:163:57-163:63)
  5: StorageLive(_73)
    SourceInfo(regex-lite/src/pikevm.rs:163:49-163:57)
  6: _73 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:163:49-163:57)
  7: StorageLive(_74)
    SourceInfo(regex-lite/src/pikevm.rs:163:58-163:62)
  8: StorageLive(_75)
    SourceInfo(regex-lite/src/pikevm.rs:163:58-163:60)
  9: _75 = _39
    SourceInfo(regex-lite/src/pikevm.rs:163:58-163:60)
  10: _74 = core::ops::RangeFrom::<usize> { start: move _75 }
    SourceInfo(regex-lite/src/pikevm.rs:163:58-163:62)
  11: StorageDead(_75)
    SourceInfo(regex-lite/src/pikevm.rs:163:61-163:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:163:57-163:63)
      kind: _72 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _73, move _74) -> [return: bb31, unwind: bb49]
  }
  preds [bb28, bb29]
  succs [bb31, bb49]

bb31
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/pikevm.rs:163:62-163:63)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/pikevm.rs:163:62-163:63)
  2: _71 = &(*_72)
    SourceInfo(regex-lite/src/pikevm.rs:163:48-163:63)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:163:29-163:64)
      kind: _70 = utf8::decode_lossy::<&[u8]>(move _71) -> [return: bb32, unwind: bb49]
  }
  preds [bb30]
  succs [bb32, bb49]

bb32
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/pikevm.rs:163:63-163:64)
  1: PlaceMention(_70)
    SourceInfo(regex-lite/src/pikevm.rs:163:29-163:64)
  2: StorageLive(_68)
    SourceInfo(regex-lite/src/pikevm.rs:163:18-163:20)
  3: _68 = (_70.0: char)
    SourceInfo(regex-lite/src/pikevm.rs:163:18-163:20)
  4: StorageLive(_69)
    SourceInfo(regex-lite/src/pikevm.rs:163:22-163:25)
  5: _69 = (_70.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:163:22-163:25)
  6: StorageDead(_72)
    SourceInfo(regex-lite/src/pikevm.rs:163:64-163:65)
  7: StorageDead(_70)
    SourceInfo(regex-lite/src/pikevm.rs:163:64-163:65)
  8: StorageLive(_76)
    SourceInfo(regex-lite/src/pikevm.rs:164:13-166:14)
  9: StorageLive(_77)
    SourceInfo(regex-lite/src/pikevm.rs:164:16-164:75)
  10: StorageLive(_78)
    SourceInfo(regex-lite/src/pikevm.rs:164:16-164:20)
  11: _78 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:164:16-164:20)
  12: StorageLive(_79)
    SourceInfo(regex-lite/src/pikevm.rs:164:27-164:32)
  13: _79 = &mut (*_27)
    SourceInfo(regex-lite/src/pikevm.rs:164:27-164:32)
  14: StorageLive(_80)
    SourceInfo(regex-lite/src/pikevm.rs:164:34-164:38)
  15: _80 = &mut (*_28)
    SourceInfo(regex-lite/src/pikevm.rs:164:34-164:38)
  16: StorageLive(_81)
    SourceInfo(regex-lite/src/pikevm.rs:164:40-164:44)
  17: _81 = &mut (*_29)
    SourceInfo(regex-lite/src/pikevm.rs:164:40-164:44)
  18: StorageLive(_82)
    SourceInfo(regex-lite/src/pikevm.rs:164:46-164:54)
  19: _82 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:164:46-164:54)
  20: StorageLive(_83)
    SourceInfo(regex-lite/src/pikevm.rs:164:56-164:58)
  21: _83 = _39
    SourceInfo(regex-lite/src/pikevm.rs:164:56-164:58)
  22: StorageLive(_84)
    SourceInfo(regex-lite/src/pikevm.rs:164:60-164:62)
  23: _84 = _68
    SourceInfo(regex-lite/src/pikevm.rs:164:60-164:62)
  24: StorageLive(_85)
    SourceInfo(regex-lite/src/pikevm.rs:164:64-164:67)
  25: _85 = _69
    SourceInfo(regex-lite/src/pikevm.rs:164:64-164:67)
  26: StorageLive(_86)
    SourceInfo(regex-lite/src/pikevm.rs:164:69-164:74)
  27: _86 = &mut (*_7)
    SourceInfo(regex-lite/src/pikevm.rs:164:69-164:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:164:16-164:75)
      kind: _77 = pikevm::PikeVM::nexts(move _78, move _79, move _80, move _81, move _82, move _83, move _84, move _85, move _86) -> [return: bb33, unwind: bb49]
  }
  preds [bb31]
  succs [bb33, bb49]

bb33
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:164:16-164:75)
      kind: switchInt(move _77) -> [0: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35]

bb34
  0: StorageDead(_86)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  1: StorageDead(_85)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  2: StorageDead(_84)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  3: StorageDead(_83)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  4: StorageDead(_82)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  5: StorageDead(_81)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  6: StorageDead(_80)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  7: StorageDead(_79)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  8: StorageDead(_78)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  9: _38 = const true
    SourceInfo(regex-lite/src/pikevm.rs:165:17-165:31)
  10: _76 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:164:76-166:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:164:13-166:14)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb35
  0: StorageDead(_86)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  1: StorageDead(_85)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  2: StorageDead(_84)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  3: StorageDead(_83)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  4: StorageDead(_82)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  5: StorageDead(_81)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  6: StorageDead(_80)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  7: StorageDead(_79)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  8: StorageDead(_78)
    SourceInfo(regex-lite/src/pikevm.rs:164:74-164:75)
  9: _76 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:166:14-166:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:164:13-166:14)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb36
  0: StorageDead(_77)
    SourceInfo(regex-lite/src/pikevm.rs:166:13-166:14)
  1: StorageDead(_76)
    SourceInfo(regex-lite/src/pikevm.rs:166:13-166:14)
  2: StorageLive(_87)
    SourceInfo(regex-lite/src/pikevm.rs:171:13-173:14)
  3: StorageLive(_88)
    SourceInfo(regex-lite/src/pikevm.rs:171:17-171:25)
  4: _88 = _6
    SourceInfo(regex-lite/src/pikevm.rs:171:17-171:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:171:17-171:25)
      kind: switchInt(move _88) -> [0: bb38, otherwise: bb37]
  }
  preds [bb34, bb35]
  succs [bb37, bb38]

bb37
  0: StorageLive(_89)
    SourceInfo(regex-lite/src/pikevm.rs:171:29-171:36)
  1: _89 = _38
    SourceInfo(regex-lite/src/pikevm.rs:171:29-171:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:171:29-171:36)
      kind: switchInt(move _89) -> [0: bb38, otherwise: bb40]
  }
  preds [bb36]
  succs [bb38, bb40]

bb38
  0: StorageLive(_90)
    SourceInfo(regex-lite/src/pikevm.rs:171:41-171:49)
  1: StorageLive(_91)
    SourceInfo(regex-lite/src/pikevm.rs:171:41-171:44)
  2: _91 = _69
    SourceInfo(regex-lite/src/pikevm.rs:171:41-171:44)
  3: _90 = Eq(move _91, const 0_usize)
    SourceInfo(regex-lite/src/pikevm.rs:171:41-171:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:171:41-171:49)
      kind: switchInt(move _90) -> [0: bb41, otherwise: bb39]
  }
  preds [bb36, bb37]
  succs [bb39, bb41]

bb39
  0: StorageDead(_91)
    SourceInfo(regex-lite/src/pikevm.rs:171:48-171:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:171:50-173:14)
      kind: goto -> bb40
  }
  preds [bb38]
  succs [bb40]

bb40
  0: _40 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:172:17-172:22)
  1: StorageDead(_90)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  2: StorageDead(_89)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  3: StorageDead(_88)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  4: StorageDead(_87)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  5: StorageDead(_69)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  6: StorageDead(_68)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb37, bb39]
  succs [bb47]

bb41
  0: StorageDead(_91)
    SourceInfo(regex-lite/src/pikevm.rs:171:48-171:49)
  1: _87 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:173:14-173:14)
  2: StorageDead(_90)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  3: StorageDead(_89)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  4: StorageDead(_88)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  5: StorageDead(_87)
    SourceInfo(regex-lite/src/pikevm.rs:173:13-173:14)
  6: StorageLive(_93)
    SourceInfo(regex-lite/src/pikevm.rs:174:13-174:40)
  7: StorageLive(_94)
    SourceInfo(regex-lite/src/pikevm.rs:174:29-174:33)
  8: _94 = &mut (*_28)
    SourceInfo(regex-lite/src/pikevm.rs:174:29-174:33)
  9: StorageLive(_95)
    SourceInfo(regex-lite/src/pikevm.rs:174:35-174:39)
  10: _95 = &mut (*_29)
    SourceInfo(regex-lite/src/pikevm.rs:174:35-174:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:174:13-174:40)
      kind: _93 = core::mem::swap::<pikevm::ActiveStates>(move _94, move _95) -> [return: bb42, unwind: bb49]
  }
  preds [bb38]
  succs [bb42, bb49]

bb42
  0: StorageDead(_95)
    SourceInfo(regex-lite/src/pikevm.rs:174:39-174:40)
  1: StorageDead(_94)
    SourceInfo(regex-lite/src/pikevm.rs:174:39-174:40)
  2: StorageDead(_93)
    SourceInfo(regex-lite/src/pikevm.rs:174:40-174:41)
  3: StorageLive(_96)
    SourceInfo(regex-lite/src/pikevm.rs:175:13-175:29)
  4: StorageLive(_97)
    SourceInfo(regex-lite/src/pikevm.rs:175:13-175:21)
  5: _97 = &mut ((*_29).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:175:13-175:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:175:13-175:29)
      kind: _96 = pikevm::SparseSet::clear(move _97) -> [return: bb43, unwind: bb49]
  }
  preds [bb41]
  succs [bb43, bb49]

bb43
  0: StorageDead(_97)
    SourceInfo(regex-lite/src/pikevm.rs:175:28-175:29)
  1: StorageDead(_96)
    SourceInfo(regex-lite/src/pikevm.rs:175:29-175:30)
  2: StorageLive(_98)
    SourceInfo(regex-lite/src/pikevm.rs:176:19-176:22)
  3: _98 = _69
    SourceInfo(regex-lite/src/pikevm.rs:176:19-176:22)
  4: _99 = AddWithOverflow(_39, _98)
    SourceInfo(regex-lite/src/pikevm.rs:176:13-176:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:176:13-176:22)
      kind: assert(!move (_99.1: bool), "attempt to compute `{} + {}`, which would overflow", _39, move _98) -> [success: bb44, unwind: bb49]
  }
  preds [bb42]
  succs [bb44, bb49]

bb44
  0: _39 = move (_99.0: usize)
    SourceInfo(regex-lite/src/pikevm.rs:176:13-176:22)
  1: StorageDead(_98)
    SourceInfo(regex-lite/src/pikevm.rs:176:21-176:22)
  2: _41 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:107:25-177:10)
  3: StorageDead(_69)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  4: StorageDead(_68)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  5: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
      kind: goto -> bb13
  }
  preds [bb43]
  succs [bb13]

bb45
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:107:23-107:24)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:107:23-107:24)
  2: StorageLive(_101)
    SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
  3: _40 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:107:9-177:10)
  4: StorageDead(_101)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb14]
  succs [bb47]

bb46
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/pikevm.rs:121:13-121:14)
  1: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:121:13-121:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb18, bb21]
  succs [bb47]

bb47
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  1: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:177:9-177:10)
  2: _0 = _38
    SourceInfo(regex-lite/src/pikevm.rs:178:9-178:16)
  3: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  5: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  6: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  7: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  8: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  9: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:179:5-179:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:179:6-179:6)
      kind: goto -> bb48
  }
  preds [bb40, bb45, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:179:6-179:6)
      kind: return
  }
  preds [bb3, bb47]
  succs []

bb49
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:72:5-179:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb6, bb7, bb8, bb9, bb10, bb11, bb13, bb15, bb26, bb27, bb30, bb31, bb32, bb41, bb42, bb43]
  succs []

