bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:773:9-785:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:773:16-773:27)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:773:16-773:20)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/mod.rs:773:16-773:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:773:16-773:27)
      kind: _3 = hir::Hir::kind(move _4) -> [return: bb1, unwind: bb80]
  }
  preds []
  succs [bb1, bb80]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:773:26-773:27)
  1: PlaceMention((*_3))
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  2: _7 = discriminant((*_3))
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:773:9-773:27)
      kind: switchInt(move _7) -> [0: bb7, 1: bb7, 2: bb7, 3: bb7, 4: bb4, 5: bb3, 6: bb5, 7: bb6, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6, bb7, bb7, bb7, bb7]

bb2
  0: _2 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:784:18-784:20)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:785:9-785:10)
  2: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:785:9-785:10)
  3: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:787:13-787:22)
  4: StorageLive(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  5: StorageLive(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  6: _36 = SizeOf([hir::Hir; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  7: _37 = AlignOf([hir::Hir; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
      kind: _38 = alloc::alloc::exchange_malloc(move _36, move _37) -> [return: bb27, unwind: bb80]
  }
  preds [bb1, bb6, bb13, bb18, bb22, bb26, bb26]
  succs [bb27, bb80]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:778:13-778:36)
      kind: falseEdge -> [real: bb9, imaginary: bb4]
  }
  preds [bb1, bb7]
  succs [bb4, bb9]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:779:13-779:39)
      kind: falseEdge -> [real: bb14, imaginary: bb5]
  }
  preds [bb1, bb3, bb13]
  succs [bb5, bb14]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:782:13-782:35)
      kind: falseEdge -> [real: bb19, imaginary: bb6]
  }
  preds [bb1, bb4, bb18]
  succs [bb6, bb19]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:783:13-783:40)
      kind: falseEdge -> [real: bb23, imaginary: bb2]
  }
  preds [bb1, bb5, bb22]
  succs [bb2, bb23]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:774:13-777:31)
      kind: falseEdge -> [real: bb8, imaginary: bb3]
  }
  preds [bb1, bb1, bb1, bb1]
  succs [bb3, bb8]

bb8
  0: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:777:35-777:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:777:35-777:41)
      kind: goto -> bb65
  }
  preds [bb7]
  succs [bb65]

bb9
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:778:30-778:35)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:778:30-778:35)
  2: _9 = &(((*_3) as Capture).0: hir::Capture)
    SourceInfo(regex-lite/src/hir/mod.rs:778:30-778:35)
  3: _10 = &_9
    SourceInfo(regex-lite/src/hir/mod.rs:778:30-778:35)
  4: _5 = &fake shallow (*_3)
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  5: _6 = &fake shallow _3
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:68)
  7: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:57)
  8: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:57)
  9: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:50)
  10: _14 = &((*((*(*_10)).2: alloc::boxed::Box<hir::Hir>)).0: hir::HirKind)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:57)
      kind: _13 = hir::HirKind::subs(move _14) -> [return: bb10, unwind: bb80]
  }
  preds [bb3]
  succs [bb10, bb80]

bb10
  0: _12 = &(*_13)
    SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:57)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:778:56-778:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:68)
      kind: _11 = core::slice::<impl [hir::Hir]>::is_empty(move _12) -> [return: bb11, unwind: bb80]
  }
  preds [bb9]
  succs [bb11, bb80]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:68)
      kind: switchInt(move _11) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  3: FakeRead(ForMatchGuard, _5)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  4: FakeRead(ForMatchGuard, _6)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  5: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:778:72-778:78)
  6: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:778:77-778:78)
  7: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:778:77-778:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb11]
  succs [bb65]

bb13
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:778:67-778:68)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:778:77-778:78)
  4: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:778:77-778:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:778:40-778:68)
      kind: falseEdge -> [real: bb2, imaginary: bb4]
  }
  preds [bb11]
  succs [bb2, bb4]

bb14
  0: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:779:33-779:38)
  1: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:779:33-779:38)
  2: _16 = &(((*_3) as Repetition).0: hir::Repetition)
    SourceInfo(regex-lite/src/hir/mod.rs:779:33-779:38)
  3: _17 = &_16
    SourceInfo(regex-lite/src/hir/mod.rs:779:33-779:38)
  4: _5 = &fake shallow (*_3)
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  5: _6 = &fake shallow _3
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  6: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:71)
  7: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:60)
  8: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:60)
  9: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:53)
  10: _21 = &((*((*(*_17)).3: alloc::boxed::Box<hir::Hir>)).0: hir::HirKind)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:60)
      kind: _20 = hir::HirKind::subs(move _21) -> [return: bb15, unwind: bb80]
  }
  preds [bb4]
  succs [bb15, bb80]

bb15
  0: _19 = &(*_20)
    SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:60)
  1: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:779:59-779:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:71)
      kind: _18 = core::slice::<impl [hir::Hir]>::is_empty(move _19) -> [return: bb16, unwind: bb80]
  }
  preds [bb14]
  succs [bb16, bb80]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:71)
      kind: switchInt(move _18) -> [0: bb18, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18]

bb17
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  3: FakeRead(ForMatchGuard, _5)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  4: FakeRead(ForMatchGuard, _6)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  5: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:780:17-780:23)
  6: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:781:13-781:14)
  7: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:781:13-781:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb16]
  succs [bb65]

bb18
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:779:70-779:71)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:781:13-781:14)
  4: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:781:13-781:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:779:43-779:71)
      kind: falseEdge -> [real: bb2, imaginary: bb5]
  }
  preds [bb16]
  succs [bb2, bb5]

bb19
  0: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:782:29-782:34)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:782:29-782:34)
  2: _23 = &(((*_3) as Concat).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:782:29-782:34)
  3: _24 = &_23
    SourceInfo(regex-lite/src/hir/mod.rs:782:29-782:34)
  4: _5 = &fake shallow (*_3)
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  5: _6 = &fake shallow _3
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  6: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:51)
  7: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:40)
  8: _26 = &(*(*_24))
    SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:51)
      kind: _25 = alloc::vec::Vec::<hir::Hir>::is_empty(move _26) -> [return: bb20, unwind: bb80]
  }
  preds [bb5]
  succs [bb20, bb80]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:51)
      kind: switchInt(move _25) -> [0: bb22, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22]

bb21
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  2: FakeRead(ForMatchGuard, _5)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  3: FakeRead(ForMatchGuard, _6)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  4: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:782:55-782:61)
  5: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:782:60-782:61)
  6: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:782:60-782:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb20]
  succs [bb65]

bb22
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:782:50-782:51)
  2: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:782:60-782:61)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:782:60-782:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:782:39-782:51)
      kind: falseEdge -> [real: bb2, imaginary: bb6]
  }
  preds [bb20]
  succs [bb2, bb6]

bb23
  0: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:783:34-783:39)
  1: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:783:34-783:39)
  2: _28 = &(((*_3) as Alternation).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:783:34-783:39)
  3: _29 = &_28
    SourceInfo(regex-lite/src/hir/mod.rs:783:34-783:39)
  4: _5 = &fake shallow (*_3)
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  5: _6 = &fake shallow _3
    SourceInfo(regex-lite/src/hir/mod.rs:773:15-773:27)
  6: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:56)
  7: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:45)
  8: _31 = &(*(*_29))
    SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:56)
      kind: _30 = alloc::vec::Vec::<hir::Hir>::is_empty(move _31) -> [return: bb24, unwind: bb80]
  }
  preds [bb6]
  succs [bb24, bb80]

bb24
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:56)
      kind: switchInt(move _30) -> [0: bb26, otherwise: bb25]
  }
  preds [bb23]
  succs [bb25, bb26]

bb25
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  1: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  2: FakeRead(ForMatchGuard, _5)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  3: FakeRead(ForMatchGuard, _6)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  4: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:783:60-783:66)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:783:65-783:66)
  6: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:783:65-783:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb24]
  succs [bb65]

bb26
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  1: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:783:55-783:56)
  2: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:783:65-783:66)
  3: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:783:65-783:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:783:44-783:56)
      kind: falseEdge -> [real: bb2, imaginary: bb2]
  }
  preds [bb24]
  succs [bb2, bb2]

bb27
  0: StorageLive(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  1: _39 = ShallowInitBox(move _38, [hir::Hir; 1])
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:787:30-787:62)
  3: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:787:43-787:47)
  4: _41 = &mut (*_1)
    SourceInfo(regex-lite/src/hir/mod.rs:787:43-787:47)
  5: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:787:49-787:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:787:49-787:61)
      kind: _42 = hir::Hir::empty() -> [return: bb28, unwind: bb79]
  }
  preds [bb2]
  succs [bb28, bb79]

bb28
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:787:30-787:62)
      kind: _40 = core::mem::replace::<hir::Hir>(move _41, move _42) -> [return: bb29, unwind: bb78]
  }
  preds [bb27]
  succs [bb29, bb78]

bb29
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:787:61-787:62)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:787:61-787:62)
  2: (*_39) = [move _40]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:37-54:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
      kind: drop(_40) -> [return: bb30, unwind: bb79]
  }
  preds [bb28]
  succs [bb30, bb79]

bb30
  0: StorageDead(_40)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:45-54:46)
  1: _35 = move _39
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  2: _34 = move _35 as alloc::boxed::Box<[hir::Hir]> (PointerCoercion(Unsize))
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:13-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_35) -> [return: bb31, unwind: bb76]
  }
  preds [bb29]
  succs [bb31, bb76]

bb31
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_39) -> [return: bb32, unwind: bb77]
  }
  preds [bb30]
  succs [bb32, bb77]

bb32
  0: StorageDead(_39)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  1: StorageDead(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:50:9-55:10)
      kind: _33 = alloc::slice::<impl [hir::Hir]>::into_vec::<alloc::alloc::Global>(move _34) -> [return: bb33, unwind: bb77]
  }
  preds [bb31]
  succs [bb33, bb77]

bb33
  0: StorageDead(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
  1: FakeRead(ForLet(None), _33)
    SourceInfo(regex-lite/src/hir/mod.rs:787:13-787:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:9-807:10)
      kind: goto -> bb34
  }
  preds [bb32]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:9-807:10)
      kind: falseUnwind -> [real: bb35, unwind: bb75]
  }
  preds [bb33, bb62]
  succs [bb35, bb75]

bb35
  0: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:47)
  1: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:41)
  2: _45 = &mut _33
    SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:47)
      kind: _44 = alloc::vec::Vec::<hir::Hir>::pop(move _45) -> [return: bb36, unwind: bb75]
  }
  preds [bb34]
  succs [bb36, bb75]

bb36
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:788:46-788:47)
  1: PlaceMention(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:47)
  2: _46 = discriminant(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:788:36-788:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:19-788:33)
      kind: switchInt(move _46) -> [1: bb37, otherwise: bb60]
  }
  preds [bb35]
  succs [bb37, bb60]

bb37
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:19-788:33)
      kind: falseEdge -> [real: bb38, imaginary: bb60]
  }
  preds [bb36]
  succs [bb38, bb60]

bb38
  0: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/mod.rs:788:24-788:32)
  1: _47 = move ((_44 as Some).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/mod.rs:788:24-788:32)
  2: PlaceMention((_47.0: hir::HirKind))
    SourceInfo(regex-lite/src/hir/mod.rs:789:19-789:28)
  3: _48 = discriminant((_47.0: hir::HirKind))
    SourceInfo(regex-lite/src/hir/mod.rs:789:19-789:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:789:13-789:28)
      kind: switchInt(move _48) -> [0: bb44, 1: bb44, 2: bb44, 3: bb44, 4: bb41, 5: bb40, 6: bb42, 7: bb43, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40, bb41, bb42, bb43, bb44, bb44, bb44, bb44]

bb39
  0: FakeRead(ForMatchedPlace(None), (_47.0: hir::HirKind))
    SourceInfo(regex-lite/src/hir/mod.rs:789:19-789:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:789:19-789:28)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:794:17-794:44)
      kind: falseEdge -> [real: bb46, imaginary: bb41]
  }
  preds [bb38, bb44]
  succs [bb41, bb46]

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:797:17-797:47)
      kind: falseEdge -> [real: bb50, imaginary: bb42]
  }
  preds [bb38, bb40]
  succs [bb42, bb50]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:800:17-800:43)
      kind: falseEdge -> [real: bb54, imaginary: bb43]
  }
  preds [bb38, bb41]
  succs [bb43, bb54]

bb43
  0: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/mod.rs:803:38-803:47)
  1: _69 = &mut (((_47.0: hir::HirKind) as Alternation).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:803:38-803:47)
  2: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/mod.rs:804:21-804:46)
  3: StorageLive(_71)
    SourceInfo(regex-lite/src/hir/mod.rs:804:21-804:26)
  4: _71 = &mut _33
    SourceInfo(regex-lite/src/hir/mod.rs:804:21-804:26)
  5: StorageLive(_72)
    SourceInfo(regex-lite/src/hir/mod.rs:804:34-804:45)
  6: StorageLive(_73)
    SourceInfo(regex-lite/src/hir/mod.rs:804:34-804:35)
  7: _73 = &mut (*_69)
    SourceInfo(regex-lite/src/hir/mod.rs:804:34-804:35)
  8: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/mod.rs:804:42-804:44)
  9: _74 = core::ops::RangeFull
    SourceInfo(regex-lite/src/hir/mod.rs:804:42-804:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:804:34-804:45)
      kind: _72 = alloc::vec::Vec::<hir::Hir>::drain::<core::ops::RangeFull>(move _73, move _74) -> [return: bb57, unwind: bb73]
  }
  preds [bb38, bb42]
  succs [bb57, bb73]

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:790:17-793:35)
      kind: falseEdge -> [real: bb45, imaginary: bb40]
  }
  preds [bb38, bb38, bb38, bb38]
  succs [bb40, bb45]

bb45
  0: _43 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:793:39-793:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:793:39-793:41)
      kind: goto -> bb59
  }
  preds [bb44]
  succs [bb59]

bb46
  0: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:794:34-794:43)
  1: _49 = &mut (((_47.0: hir::HirKind) as Capture).0: hir::Capture)
    SourceInfo(regex-lite/src/hir/mod.rs:794:34-794:43)
  2: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:795:21-795:71)
  3: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/mod.rs:795:21-795:26)
  4: _51 = &mut _33
    SourceInfo(regex-lite/src/hir/mod.rs:795:21-795:26)
  5: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/mod.rs:795:32-795:70)
  6: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/mod.rs:795:45-795:55)
  7: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/mod.rs:795:45-795:55)
  8: _54 = &mut ((*_49).2: alloc::boxed::Box<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:795:45-795:55)
  9: _53 = &mut (*(*_54))
    SourceInfo(regex-lite/src/hir/mod.rs:795:45-795:55)
  10: StorageLive(_55)
    SourceInfo(regex-lite/src/hir/mod.rs:795:57-795:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:795:57-795:69)
      kind: _55 = hir::Hir::empty() -> [return: bb47, unwind: bb73]
  }
  preds [bb40]
  succs [bb47, bb73]

bb47
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:795:32-795:70)
      kind: _52 = core::mem::replace::<hir::Hir>(move _53, move _55) -> [return: bb48, unwind: bb72]
  }
  preds [bb46]
  succs [bb48, bb72]

bb48
  0: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/mod.rs:795:69-795:70)
  1: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/mod.rs:795:69-795:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:795:21-795:71)
      kind: _50 = alloc::vec::Vec::<hir::Hir>::push(move _51, move _52) -> [return: bb49, unwind: bb71]
  }
  preds [bb47]
  succs [bb49, bb71]

bb49
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/mod.rs:795:70-795:71)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/mod.rs:795:70-795:71)
  2: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/mod.rs:795:71-795:72)
  3: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:795:71-795:72)
  4: _43 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:794:48-796:18)
  5: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:796:17-796:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:796:17-796:18)
      kind: goto -> bb59
  }
  preds [bb48]
  succs [bb59]

bb50
  0: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/mod.rs:797:37-797:46)
  1: _56 = &mut (((_47.0: hir::HirKind) as Repetition).0: hir::Repetition)
    SourceInfo(regex-lite/src/hir/mod.rs:797:37-797:46)
  2: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/mod.rs:798:21-798:71)
  3: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/mod.rs:798:21-798:26)
  4: _58 = &mut _33
    SourceInfo(regex-lite/src/hir/mod.rs:798:21-798:26)
  5: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/mod.rs:798:32-798:70)
  6: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/mod.rs:798:45-798:55)
  7: StorageLive(_61)
    SourceInfo(regex-lite/src/hir/mod.rs:798:45-798:55)
  8: _61 = &mut ((*_56).3: alloc::boxed::Box<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:798:45-798:55)
  9: _60 = &mut (*(*_61))
    SourceInfo(regex-lite/src/hir/mod.rs:798:45-798:55)
  10: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/mod.rs:798:57-798:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:798:57-798:69)
      kind: _62 = hir::Hir::empty() -> [return: bb51, unwind: bb73]
  }
  preds [bb41]
  succs [bb51, bb73]

bb51
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:798:32-798:70)
      kind: _59 = core::mem::replace::<hir::Hir>(move _60, move _62) -> [return: bb52, unwind: bb70]
  }
  preds [bb50]
  succs [bb52, bb70]

bb52
  0: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/mod.rs:798:69-798:70)
  1: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/mod.rs:798:69-798:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:798:21-798:71)
      kind: _57 = alloc::vec::Vec::<hir::Hir>::push(move _58, move _59) -> [return: bb53, unwind: bb69]
  }
  preds [bb51]
  succs [bb53, bb69]

bb53
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/mod.rs:798:70-798:71)
  1: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/mod.rs:798:70-798:71)
  2: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/mod.rs:798:71-798:72)
  3: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/mod.rs:798:71-798:72)
  4: _43 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:797:51-799:18)
  5: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/mod.rs:799:17-799:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:799:17-799:18)
      kind: goto -> bb59
  }
  preds [bb52]
  succs [bb59]

bb54
  0: StorageLive(_63)
    SourceInfo(regex-lite/src/hir/mod.rs:800:33-800:42)
  1: _63 = &mut (((_47.0: hir::HirKind) as Concat).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/mod.rs:800:33-800:42)
  2: StorageLive(_64)
    SourceInfo(regex-lite/src/hir/mod.rs:801:21-801:46)
  3: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/mod.rs:801:21-801:26)
  4: _65 = &mut _33
    SourceInfo(regex-lite/src/hir/mod.rs:801:21-801:26)
  5: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/mod.rs:801:34-801:45)
  6: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/mod.rs:801:34-801:35)
  7: _67 = &mut (*_63)
    SourceInfo(regex-lite/src/hir/mod.rs:801:34-801:35)
  8: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/mod.rs:801:42-801:44)
  9: _68 = core::ops::RangeFull
    SourceInfo(regex-lite/src/hir/mod.rs:801:42-801:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:801:34-801:45)
      kind: _66 = alloc::vec::Vec::<hir::Hir>::drain::<core::ops::RangeFull>(move _67, move _68) -> [return: bb55, unwind: bb73]
  }
  preds [bb42]
  succs [bb55, bb73]

bb55
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/mod.rs:801:44-801:45)
  1: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/mod.rs:801:44-801:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:801:21-801:46)
      kind: _64 = <alloc::vec::Vec<hir::Hir> as core::iter::Extend<hir::Hir>>::extend::<alloc::vec::Drain<'_, hir::Hir>>(move _65, move _66) -> [return: bb56, unwind: bb68]
  }
  preds [bb54]
  succs [bb56, bb68]

bb56
  0: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/mod.rs:801:45-801:46)
  1: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/mod.rs:801:45-801:46)
  2: StorageDead(_64)
    SourceInfo(regex-lite/src/hir/mod.rs:801:46-801:47)
  3: _43 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:800:47-802:18)
  4: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/mod.rs:802:17-802:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:802:17-802:18)
      kind: goto -> bb59
  }
  preds [bb55]
  succs [bb59]

bb57
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/mod.rs:804:44-804:45)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/mod.rs:804:44-804:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:804:21-804:46)
      kind: _70 = <alloc::vec::Vec<hir::Hir> as core::iter::Extend<hir::Hir>>::extend::<alloc::vec::Drain<'_, hir::Hir>>(move _71, move _72) -> [return: bb58, unwind: bb67]
  }
  preds [bb43]
  succs [bb58, bb67]

bb58
  0: StorageDead(_72)
    SourceInfo(regex-lite/src/hir/mod.rs:804:45-804:46)
  1: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/mod.rs:804:45-804:46)
  2: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/mod.rs:804:46-804:47)
  3: _43 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:803:52-805:18)
  4: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/mod.rs:805:17-805:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:805:17-805:18)
      kind: goto -> bb59
  }
  preds [bb57]
  succs [bb59]

bb59
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
      kind: drop(_47) -> [return: bb61, unwind: bb74]
  }
  preds [bb45, bb49, bb53, bb56, bb58]
  succs [bb61, bb74]

bb60
  0: StorageLive(_76)
    SourceInfo(regex-lite/src/hir/mod.rs:788:9-807:10)
  1: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:788:9-807:10)
  2: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
      kind: drop(_44) -> [return: bb63, unwind: bb75]
  }
  preds [bb36, bb37]
  succs [bb63, bb75]

bb61
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
      kind: drop(_44) -> [return: bb62, unwind: bb75]
  }
  preds [bb59]
  succs [bb62, bb75]

bb62
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:788:9-807:10)
      kind: goto -> bb34
  }
  preds [bb61]
  succs [bb34]

bb63
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:808:5-808:6)
      kind: drop(_33) -> [return: bb64, unwind: bb80]
  }
  preds [bb60]
  succs [bb64, bb80]

bb64
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:808:5-808:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:808:6-808:6)
      kind: goto -> bb66
  }
  preds [bb63]
  succs [bb66]

bb65
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:785:9-785:10)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:785:9-785:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:808:6-808:6)
      kind: goto -> bb66
  }
  preds [bb8, bb12, bb17, bb21, bb25]
  succs [bb66]

bb66
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:808:6-808:6)
      kind: return
  }
  preds [bb64, bb65]
  succs []

bb67
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:804:45-804:46)
      kind: drop(_72) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb57]
  succs [bb73]

bb68
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:801:45-801:46)
      kind: drop(_66) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb55]
  succs [bb73]

bb69
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:798:70-798:71)
      kind: drop(_59) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb52]
  succs [bb73]

bb70
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:798:69-798:70)
      kind: drop(_62) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb73]

bb71
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:795:70-795:71)
      kind: drop(_52) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb48]
  succs [bb73]

bb72
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:795:69-795:70)
      kind: drop(_55) -> [return: bb73, unwind terminate(cleanup)]
  }
  preds [bb47]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
      kind: drop(_47) -> [return: bb74, unwind terminate(cleanup)]
  }
  preds [bb43, bb46, bb50, bb54, bb67, bb68, bb69, bb70, bb71, bb72]
  succs [bb74]

bb74
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:807:9-807:10)
      kind: drop(_44) -> [return: bb75, unwind terminate(cleanup)]
  }
  preds [bb59, bb73]
  succs [bb75]

bb75
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:808:5-808:6)
      kind: drop(_33) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb34, bb35, bb60, bb61, bb74]
  succs [bb80]

bb76
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_39) -> [return: bb77, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb77]

bb77
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:55:9-55:10)
      kind: drop(_34) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb31, bb32, bb76]
  succs [bb80]

bb78
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:787:61-787:62)
      kind: drop(_42) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:54:46-54:47)
      kind: drop(_39) -> [return: bb80, unwind terminate(cleanup)]
  }
  preds [bb27, bb29, bb78]
  succs [bb80]

bb80
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:770:5-808:6)
      kind: resume
  }
  preds [bb0, bb2, bb9, bb10, bb14, bb15, bb19, bb23, bb63, bb75, bb77, bb79]
  succs []

