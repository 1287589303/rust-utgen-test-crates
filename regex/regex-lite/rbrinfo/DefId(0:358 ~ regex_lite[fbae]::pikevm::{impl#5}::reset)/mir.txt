bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:633:9-633:40)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:633:9-633:17)
  2: _4 = &mut ((*_1).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:633:9-633:17)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:39)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:33)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:33)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:27)
  7: _8 = &(*_2)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:633:25-633:33)
      kind: _7 = pikevm::PikeVM::nfa(move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _6 = &(*_7)
    SourceInfo(regex-lite/src/pikevm.rs:633:25-633:33)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:633:32-633:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:633:25-633:39)
      kind: _5 = nfa::NFA::len(move _6) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:633:38-633:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:633:9-633:40)
      kind: _3 = pikevm::SparseSet::resize(move _4, move _5) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:633:39-633:40)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:633:39-633:40)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:633:40-633:41)
  3: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:633:40-633:41)
  4: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:634:9-634:34)
  5: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:634:9-634:24)
  6: _10 = &mut ((*_1).1: pikevm::SlotTable)
    SourceInfo(regex-lite/src/pikevm.rs:634:9-634:24)
  7: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:634:31-634:33)
  8: _11 = &(*_2)
    SourceInfo(regex-lite/src/pikevm.rs:634:31-634:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:634:9-634:34)
      kind: _9 = pikevm::SlotTable::reset(move _10, move _11) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:634:33-634:34)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:634:33-634:34)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:634:34-634:35)
  3: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:632:38-635:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:635:6-635:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:632:5-635:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

