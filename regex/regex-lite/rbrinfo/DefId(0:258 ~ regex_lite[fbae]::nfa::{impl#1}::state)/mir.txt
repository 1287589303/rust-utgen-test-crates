bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/nfa.rs:74:9-74:36)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:74:21-74:36)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/nfa.rs:74:10-74:21)
  3: _5 = &((*_1).1: alloc::vec::Vec<nfa::State>)
    SourceInfo(regex-lite/src/nfa.rs:74:10-74:21)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/nfa.rs:74:22-74:35)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:74:22-74:24)
  6: _7 = _2
    SourceInfo(regex-lite/src/nfa.rs:74:22-74:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:74:22-74:35)
      kind: _6 = <u32 as int::U32>::as_usize(move _7) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:74:34-74:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:74:21-74:36)
      kind: _4 = <alloc::vec::Vec<nfa::State> as core::ops::Index<usize>>::index(move _5, move _6) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:74:35-74:36)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/nfa.rs:74:35-74:36)
  2: _3 = &(*_4)
    SourceInfo(regex-lite/src/nfa.rs:74:9-74:36)
  3: _0 = &(*_3)
    SourceInfo(regex-lite/src/nfa.rs:74:9-74:36)
  4: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:75:5-75:6)
  5: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:75:5-75:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:75:6-75:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:73:5-75:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

