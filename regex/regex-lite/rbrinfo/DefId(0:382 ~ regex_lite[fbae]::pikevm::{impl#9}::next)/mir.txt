bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/pikevm.rs:914:9-914:22)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:914:9-914:15)
  2: _3 = &mut ((*_1).0: core::slice::Iter<'_, u32>)
    SourceInfo(regex-lite/src/pikevm.rs:914:9-914:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:914:9-914:22)
      kind: _2 = <core::slice::Iter<'_, u32> as core::iter::Iterator>::next(move _3) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:914:21-914:22)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:914:27-914:35)
  2: _4 = {closure@regex-lite/src/pikevm.rs:914:27: 914:32}
    SourceInfo(regex-lite/src/pikevm.rs:914:27-914:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:914:9-914:36)
      kind: _0 = core::option::Option::<&u32>::map::<u32, {closure@regex-lite/src/pikevm.rs:914:27: 914:32}>(move _2, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:914:35-914:36)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/pikevm.rs:914:35-914:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:915:6-915:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:913:5-915:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

