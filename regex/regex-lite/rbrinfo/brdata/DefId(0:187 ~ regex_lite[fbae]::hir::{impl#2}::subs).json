{
  "name": "regex_lite::hir::{impl#2}::subs",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:371:5:384:6",
  "doc": "/// Returns a slice of this kind's sub-expressions, if any.\n",
  "code": [
    "fn subs(&self) -> &[Hir] {",
    "    use core::slice::from_ref;",
    "",
    "    match *self {",
    "        HirKind::Empty",
    "        | HirKind::Char(_)",
    "        | HirKind::Class(_)",
    "        | HirKind::Look(_) => &[],",
    "        HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),",
    "        HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),",
    "        HirKind::Concat(ref subs) => subs,",
    "        HirKind::Alternation(ref subs) => subs,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self matches HirKind::Alternation(ref subs)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        5,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self matches HirKind::Concat(ref subs)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Concat(ref subs)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        4,
        12,
        13,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self matches HirKind::Capture(Capture { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Capture(Capture { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        3,
        10,
        11,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self matches HirKind::Repetition(Repetition { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Repetition(Repetition { ref sub, .. })",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        2,
        8,
        9,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self matches HirKind::Look(_)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Char(_) or HirKind::Look(_) or HirKind::Class(_) or HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        6,
        7,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self matches HirKind::Class(_)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Char(_) or HirKind::Look(_) or HirKind::Class(_) or HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        6,
        7,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "*self matches HirKind::Char(_)",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Char(_) or HirKind::Look(_) or HirKind::Class(_) or HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        6,
        7,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "*self matches HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        },
        {
          "cond": "*self matches HirKind::Char(_) or HirKind::Look(_) or HirKind::Class(_) or HirKind::Empty",
          "norm": null,
          "value": "true",
          "line": 374,
          "bound": null
        }
      ],
      "ret": "match *self {\n            HirKind::Empty\n            | HirKind::Char(_)\n            | HirKind::Class(_)\n            | HirKind::Look(_) => &[],\n            HirKind::Repetition(Repetition { ref sub, .. }) => from_ref(sub),\n            HirKind::Capture(Capture { ref sub, .. }) => from_ref(sub),\n            HirKind::Concat(ref subs) => subs,\n            HirKind::Alternation(ref subs) => subs,\n        }",
      "path": [
        0,
        6,
        7,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}