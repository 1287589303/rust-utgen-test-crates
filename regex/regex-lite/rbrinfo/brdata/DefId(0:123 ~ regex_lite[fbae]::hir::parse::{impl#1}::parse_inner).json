{
  "name": "regex_lite::hir::parse::{impl#1}::parse_inner",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:397:5:449:6",
  "doc": "",
  "code": [
    "fn parse_inner(&self) -> Result<Hir, Error> {",
    "    let depth = self.increment_depth()?;",
    "    let mut alternates = vec![];",
    "    let mut concat = vec![];",
    "    loop {",
    "        self.bump_space();",
    "        if self.is_done() {",
    "            break;",
    "        }",
    "        match self.char() {",
    "            '(' => {",
    "                // Save the old flags and reset them only when we close",
    "                // the group.",
    "                let oldflags = *self.flags.borrow();",
    "                if let Some(sub) = self.parse_group()? {",
    "                    concat.push(sub);",
    "                    // We only reset them here because if 'parse_group'",
    "                    // returns None, then that means it handled a flag",
    "                    // directive, e.g., '(?ism)'. And the whole point is",
    "                    // that those flags remain active until either disabled",
    "                    // or the end of the pattern or current group.",
    "                    *self.flags.borrow_mut() = oldflags;",
    "                }",
    "                if self.char.get() != Some(')') {",
    "                    return Err(Error::new(ERR_UNCLOSED_GROUP));",
    "                }",
    "                self.bump();",
    "            }",
    "            ')' => {",
    "                if depth == 0 {",
    "                    return Err(Error::new(ERR_UNOPENED_GROUP));",
    "                }",
    "                break;",
    "            }",
    "            '|' => {",
    "                alternates.push(Hir::concat(core::mem::take(&mut concat)));",
    "                self.bump();",
    "            }",
    "            '[' => concat.push(self.parse_class()?),",
    "            '?' | '*' | '+' => {",
    "                concat = self.parse_uncounted_repetition(concat)?;",
    "            }",
    "            '{' => {",
    "                concat = self.parse_counted_repetition(concat)?;",
    "            }",
    "            _ => concat.push(self.parse_primitive()?),",
    "        }",
    "    }",
    "    self.decrement_depth();",
    "    alternates.push(Hir::concat(concat));",
    "    // N.B. This strips off the \"alternation\" if there's only one branch.",
    "    Ok(Hir::alternation(alternates))",
    "}"
  ],
  "size": {
    "chain": 22,
    "contra": 9,
    "min_set": 16
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Err/None",
          "line": 398,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 425,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '+'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 435,
          "bound": null
        },
        {
          "cond": "self.char() matches '?'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 439,
          "bound": null
        },
        {
          "cond": "self.char() matches '|'",
          "norm": null,
          "value": "true",
          "line": 431,
          "bound": null
        },
        {
          "cond": "self.char() matches '*'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 442,
          "bound": null
        },
        {
          "cond": "self.parse_primitive()?",
          "norm": null,
          "value": "Err/None",
          "line": 442,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        17,
        99,
        100,
        102,
        104,
        105,
        118,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 425,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '+'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 435,
          "bound": null
        },
        {
          "cond": "self.char() matches '?'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 439,
          "bound": null
        },
        {
          "cond": "self.char() matches '|'",
          "norm": null,
          "value": "true",
          "line": 431,
          "bound": null
        },
        {
          "cond": "self.char() matches '*'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 442,
          "bound": null
        },
        {
          "cond": "self.parse_primitive()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 442,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        17,
        99,
        100,
        103,
        106,
        107,
        108,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 439,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_counted_repetition(concat)?",
          "norm": null,
          "value": "Err/None",
          "line": 440,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        22,
        86,
        87,
        88,
        90,
        92,
        93,
        119,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 439,
          "bound": null
        },
        {
          "cond": "self.char() matches '{'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_counted_repetition(concat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 440,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        22,
        86,
        87,
        88,
        91,
        94,
        95,
        97,
        98,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '+'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Err/None",
          "line": 437,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        77,
        79,
        80,
        120,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '+'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 437,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        78,
        81,
        82,
        84,
        85,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '*'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Err/None",
          "line": 437,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        77,
        79,
        80,
        120,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '*'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 437,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        78,
        81,
        82,
        84,
        85,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '?'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Err/None",
          "line": 437,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        77,
        79,
        80,
        120,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '?'",
          "norm": null,
          "value": "true",
          "line": 436,
          "bound": null
        },
        {
          "cond": "self.char() matches '+' or '?' or '*'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_uncounted_repetition(concat)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 437,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        23,
        73,
        74,
        75,
        78,
        81,
        82,
        84,
        85,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 435,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_class()?",
          "norm": null,
          "value": "Err/None",
          "line": 435,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        21,
        62,
        63,
        64,
        66,
        68,
        69,
        121,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 435,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_class()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 435,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        21,
        62,
        63,
        64,
        67,
        70,
        71,
        72,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '|'",
          "norm": null,
          "value": "true",
          "line": 431,
          "bound": null
        },
        {
          "cond": "self.char() matches '|'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        20,
        57,
        58,
        59,
        60,
        61,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 425,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "false",
          "line": 426,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNOPENED_GROUP))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        19,
        53,
        54,
        55,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 425,
          "bound": null
        },
        {
          "cond": "self.char() matches ')'",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "depth == 0",
          "norm": "0 == depth",
          "value": "true",
          "line": 426,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        19,
        53,
        56,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_group()?",
          "norm": null,
          "value": "Err/None",
          "line": 411,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        24,
        25,
        26,
        27,
        28,
        29,
        31,
        33,
        34,
        122,
        123,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_group()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 411,
          "bound": null
        },
        {
          "cond": "let Some(sub) = self.parse_group()?",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "self.char.get() != Some(')')",
          "norm": "Some(')') != self.char.get()",
          "value": "true",
          "line": 420,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        24,
        25,
        26,
        27,
        28,
        29,
        32,
        35,
        36,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        123,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_group()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 411,
          "bound": null
        },
        {
          "cond": "let Some(sub) = self.parse_group()?",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "self.char.get() != Some(')')",
          "norm": "Some(')') != self.char.get()",
          "value": "false",
          "line": 420,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        24,
        25,
        26,
        27,
        28,
        29,
        32,
        35,
        36,
        44,
        45,
        46,
        47,
        48,
        51,
        52,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_group()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 411,
          "bound": null
        },
        {
          "cond": "let Some(sub) = self.parse_group()?",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "self.char.get() != Some(')')",
          "norm": "Some(')') != self.char.get()",
          "value": "true",
          "line": 420,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        24,
        25,
        26,
        27,
        28,
        29,
        32,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        123,
        124,
        125,
        126,
        127,
        128
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self.increment_depth()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 398,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 403,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 407,
          "bound": null
        },
        {
          "cond": "self.char() matches '('",
          "norm": null,
          "value": "true",
          "line": 406,
          "bound": null
        },
        {
          "cond": "self.parse_group()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 411,
          "bound": null
        },
        {
          "cond": "let Some(sub) = self.parse_group()?",
          "norm": null,
          "value": "true",
          "line": 411,
          "bound": null
        },
        {
          "cond": "self.char.get() != Some(')')",
          "norm": "Some(')') != self.char.get()",
          "value": "false",
          "line": 420,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 403,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::alternation(alternates))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        15,
        16,
        18,
        24,
        25,
        26,
        27,
        28,
        29,
        32,
        35,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        51,
        52,
        109,
        10,
        11,
        12,
        13,
        14,
        110,
        111,
        112,
        113,
        114,
        115,
        116,
        117,
        128
      ],
      "may_contra": true,
      "min_set": true
    }
  ]
}