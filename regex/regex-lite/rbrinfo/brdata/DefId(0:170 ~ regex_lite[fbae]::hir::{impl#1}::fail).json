{
  "name": "regex_lite::hir::{impl#1}::fail",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:210:5:218:6",
  "doc": "",
  "code": [
    "fn fail() -> Hir {",
    "    let kind = HirKind::Class(Class { ranges: vec![] });",
    "    Hir {",
    "        kind,",
    "        is_start_anchored: false,",
    "        is_match_empty: false,",
    "        static_explicit_captures_len: Some(0),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Hir {\n            kind,\n            is_start_anchored: false,\n            is_match_empty: false,\n            static_explicit_captures_len: Some(0),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}