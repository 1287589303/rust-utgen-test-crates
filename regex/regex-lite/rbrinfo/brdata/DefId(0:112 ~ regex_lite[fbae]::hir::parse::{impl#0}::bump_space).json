{
  "name": "regex_lite::hir::parse::{impl#0}::bump_space",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:275:5:295:6",
  "doc": "/// If the `x` flag is enabled (i.e., whitespace insensitivity with\n/// comments), then this will advance the parser through all whitespace\n/// and comments to the next non-whitespace non-comment byte.\n///\n/// If the `x` flag is disabled, then this is a no-op.\n///\n/// This should be used selectively throughout the parser where\n/// arbitrary whitespace is permitted when the `x` flag is enabled. For\n/// example, `{   5  , 6}` is equivalent to `{5,6}`.\n",
  "code": [
    "fn bump_space(&self) {",
    "    if !self.flags().ignore_whitespace {",
    "        return;",
    "    }",
    "    while !self.is_done() {",
    "        if self.char().is_whitespace() {",
    "            self.bump();",
    "        } else if self.char() == '#' {",
    "            self.bump();",
    "            while !self.is_done() {",
    "                let c = self.char();",
    "                self.bump();",
    "                if c == '\\n' {",
    "                    break;",
    "                }",
    "            }",
    "        } else {",
    "            break;",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 4,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 279,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "self.char().is_whitespace()",
          "norm": null,
          "value": "true",
          "line": 280,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 279,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        11,
        12,
        28,
        4,
        5,
        6,
        7,
        29,
        30
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "self.char().is_whitespace()",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        },
        {
          "cond": "self.char() == '#'",
          "norm": "'#' == self.char()",
          "value": "false",
          "line": 282,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 279,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        26,
        28,
        4,
        5,
        6,
        7,
        29,
        30
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "self.char().is_whitespace()",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        },
        {
          "cond": "self.char() == '#'",
          "norm": "'#' == self.char()",
          "value": "false",
          "line": 282,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 284,
          "bound": null
        },
        {
          "cond": "c == '\\n'",
          "norm": "'\\n' == c",
          "value": "false",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 279,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        22,
        23,
        24,
        26,
        28,
        4,
        5,
        6,
        7,
        29,
        30
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "self.char().is_whitespace()",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        },
        {
          "cond": "self.char() == '#'",
          "norm": "'#' == self.char()",
          "value": "false",
          "line": 282,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 284,
          "bound": null
        },
        {
          "cond": "c == '\\n'",
          "norm": "'\\n' == c",
          "value": "true",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 284,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 279,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        21,
        22,
        23,
        25,
        17,
        18,
        19,
        20,
        26,
        28,
        4,
        5,
        6,
        7,
        29,
        30
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "true",
          "line": 276,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 279,
          "bound": null
        },
        {
          "cond": "self.char().is_whitespace()",
          "norm": null,
          "value": "false",
          "line": 280,
          "bound": null
        },
        {
          "cond": "self.char() == '#'",
          "norm": "'#' == self.char()",
          "value": "true",
          "line": 282,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        8,
        9,
        10,
        13,
        14,
        27,
        29,
        30
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.flags().ignore_whitespace",
          "norm": null,
          "value": "false",
          "line": 276,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        30
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}