{
  "name": "regex_lite::string::{impl#9}::range",
  "mod_info": {
    "name": "string",
    "loc": "regex-lite/src/lib.rs:884:1:884:12"
  },
  "visible": true,
  "loc": "regex-lite/src/string.rs:1564:5:1566:6",
  "doc": "/// Returns the range over the starting and ending byte offsets of the\n/// match in the haystack.\n///\n/// It is always correct to slice the original haystack searched with this\n/// range. That is, because the offsets are guaranteed to fall on valid\n/// UTF-8 boundaries, the range returned is always valid.\n",
  "code": [
    "pub fn range(&self) -> core::ops::Range<usize> {",
    "    self.start..self.end",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.start..self.end",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}