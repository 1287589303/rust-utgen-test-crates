{
  "name": "regex_lite::pikevm::{impl#6}::for_state",
  "mod_info": {
    "name": "pikevm",
    "loc": "regex-lite/src/lib.rs:881:1:881:12"
  },
  "visible": false,
  "loc": "regex-lite/src/pikevm.rs:718:5:721:6",
  "doc": "/// Return a mutable slice of the slots for the given state.\n///\n/// Note that the length of the slice returned may be less than the total\n/// number of slots available for this state. In particular, the length\n/// always matches the number of slots indicated via `setup_search`.\n",
  "code": [
    "fn for_state(&mut self, sid: StateID) -> &mut [Option<NonMaxUsize>] {",
    "    let i = sid.as_usize() * self.slots_per_state;",
    "    &mut self.table[i..i + self.slots_for_captures]",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "&mut self.table[i..i + self.slots_for_captures]",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}