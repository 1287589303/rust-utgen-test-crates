{
  "name": "regex_lite::pikevm::{impl#5}::new",
  "mod_info": {
    "name": "pikevm",
    "loc": "regex-lite/src/lib.rs:881:1:881:12"
  },
  "visible": false,
  "loc": "regex-lite/src/pikevm.rs:621:5:628:6",
  "doc": "/// Create a new set of active states for the given PikeVM. The active\n/// states returned may only be used with the given PikeVM. (Use 'reset'\n/// to re-purpose the allocation for a different PikeVM.)\n",
  "code": [
    "fn new(re: &PikeVM) -> ActiveStates {",
    "    let mut active = ActiveStates {",
    "        set: SparseSet::new(0),",
    "        slot_table: SlotTable::new(),",
    "    };",
    "    active.reset(re);",
    "    active",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "active",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}