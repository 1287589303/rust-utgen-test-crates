{
  "name": "regex_lite::string::{impl#40}::swap_greed",
  "mod_info": {
    "name": "string",
    "loc": "regex-lite/src/lib.rs:884:1:884:12"
  },
  "visible": true,
  "loc": "regex-lite/src/string.rs:2835:5:2838:6",
  "doc": "/// This configures swap-greed mode for the entire pattern.\n///\n/// When swap-greed mode is enabled, patterns like `a+` will become\n/// non-greedy and patterns like `a+?` will become greedy. In other words,\n/// the meanings of `a+` and `a+?` are switched.\n///\n/// This setting can also be configured using the inline flag `U` in the\n/// pattern.\n///\n/// The default for this is `false`.\n///\n/// # Example\n///\n/// ```\n/// use regex_lite::RegexBuilder;\n///\n/// let re = RegexBuilder::new(r\"a+\")\n///     .swap_greed(true)\n///     .build()\n///     .unwrap();\n/// assert_eq!(Some(\"a\"), re.find(\"aaa\").map(|m| m.as_str()));\n/// ```\n",
  "code": [
    "pub fn swap_greed(&mut self, yes: bool) -> &mut RegexBuilder {",
    "    self.hir_config.flags.swap_greed = yes;",
    "    self",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}