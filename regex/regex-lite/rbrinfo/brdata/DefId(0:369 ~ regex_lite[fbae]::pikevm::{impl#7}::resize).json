{
  "name": "regex_lite::pikevm::{impl#7}::resize",
  "mod_info": {
    "name": "pikevm",
    "loc": "regex-lite/src/lib.rs:881:1:881:12"
  },
  "visible": false,
  "loc": "regex-lite/src/pikevm.rs:822:5:831:6",
  "doc": "/// Resizes this sparse set to have the new capacity given.\n///\n/// This set is automatically cleared.\n///\n/// This panics if the capacity given is bigger than `StateID::LIMIT`.\n",
  "code": [
    "fn resize(&mut self, new_capacity: usize) {",
    "    assert!(",
    "        new_capacity <= u32::MAX.as_usize(),",
    "        \"sparse set capacity cannot excced {:?}\",",
    "        u32::MAX,",
    "    );",
    "    self.clear();",
    "    self.dense.resize(new_capacity, 0);",
    "    self.sparse.resize(new_capacity, 0);",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "new_capacity <= u32::MAX.as_usize()",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": "new_capacity == u32::MAX.as_usize()"
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "new_capacity <= u32::MAX.as_usize()",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}