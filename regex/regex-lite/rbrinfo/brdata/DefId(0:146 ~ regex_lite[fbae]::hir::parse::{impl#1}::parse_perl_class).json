{
  "name": "regex_lite::hir::parse::{impl#1}::parse_perl_class",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:1212:5:1225:6",
  "doc": "/// Parse a Perl character class, e.g., `\\d` or `\\W`. This assumes the\n/// parser is currently at a valid character class name and will be\n/// advanced to the character immediately following the class.\n",
  "code": [
    "fn parse_perl_class(&self) -> Hir {",
    "    let ch = self.char();",
    "    self.bump();",
    "    let mut class = hir::Class::new(match ch {",
    "        'd' | 'D' => posix_class(\"digit\").unwrap(),",
    "        's' | 'S' => posix_class(\"space\").unwrap(),",
    "        'w' | 'W' => posix_class(\"word\").unwrap(),",
    "        unk => unreachable!(\"invalid Perl class \\\\{}\", unk),",
    "    });",
    "    if ch.is_ascii_uppercase() {",
    "        class.negate();",
    "    }",
    "    Hir::class(class)",
    "}"
  ],
  "size": {
    "chain": 13,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "ch matches 'w'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'W'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'S'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 's'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 'd'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "ch matches 'D'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        16,
        17,
        33
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "ch matches 'W'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'w' or 'W'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        13,
        14,
        15,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "ch matches 'W'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'w' or 'W'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        13,
        14,
        15,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "ch matches 'w'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'w' or 'W'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        13,
        14,
        15,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "ch matches 'w'",
          "norm": null,
          "value": "true",
          "line": 1218,
          "bound": null
        },
        {
          "cond": "ch matches 'w' or 'W'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        6,
        13,
        14,
        15,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "ch matches 'S'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 'S' or 's'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "ch matches 'S'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 'S' or 's'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "ch matches 's'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 'S' or 's'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "ch matches 's'",
          "norm": null,
          "value": "true",
          "line": 1217,
          "bound": null
        },
        {
          "cond": "ch matches 'S' or 's'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        10,
        11,
        12,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "ch matches 'D'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "ch matches 'd' or 'D'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "ch matches 'D'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "ch matches 'd' or 'D'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "ch matches 'd'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "ch matches 'd' or 'D'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "true",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "ch matches 'd'",
          "norm": null,
          "value": "true",
          "line": 1216,
          "bound": null
        },
        {
          "cond": "ch matches 'd' or 'D'",
          "norm": null,
          "value": "true",
          "line": 1215,
          "bound": null
        },
        {
          "cond": "ch.is_ascii_uppercase()",
          "norm": null,
          "value": "false",
          "line": 1221,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        7,
        8,
        9,
        18,
        19,
        20,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}