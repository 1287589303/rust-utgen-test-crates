{
  "name": "regex_lite::hir::parse::{impl#1}::parse_group",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:818:5:855:6",
  "doc": "/// Parses the part of a pattern that starts with a `(`. This is usually\n/// a group sub-expression, but might just be a directive that enables\n/// (or disables) certain flags.\n///\n/// This assumes the parser is pointing at the opening `(`.\n",
  "code": [
    "fn parse_group(&self) -> Result<Option<Hir>, Error> {",
    "    assert_eq!(self.char(), '(');",
    "    self.bump_and_bump_space();",
    "    if self.is_lookaround_prefix() {",
    "        return Err(Error::new(ERR_LOOK_UNSUPPORTED));",
    "    }",
    "    if self.bump_if(\"?P<\") || self.bump_if(\"?<\") {",
    "        let index = self.next_capture_index()?;",
    "        let name = Some(Box::from(self.parse_capture_name()?));",
    "        let sub = Box::new(self.parse_inner()?);",
    "        let cap = hir::Capture { index, name, sub };",
    "        Ok(Some(Hir::capture(cap)))",
    "    } else if self.bump_if(\"?\") {",
    "        if self.is_done() {",
    "            return Err(Error::new(ERR_UNCLOSED_GROUP_QUESTION));",
    "        }",
    "        let start = self.pos();",
    "        // The flags get reset in the top-level 'parse' routine.",
    "        *self.flags.borrow_mut() = self.parse_flags()?;",
    "        let consumed = self.pos() - start;",
    "        if self.char() == ')' {",
    "            // We don't allow empty flags, e.g., `(?)`.",
    "            if consumed == 0 {",
    "                return Err(Error::new(ERR_EMPTY_FLAGS));",
    "            }",
    "            Ok(None)",
    "        } else {",
    "            assert_eq!(':', self.char());",
    "            self.bump();",
    "            self.parse_inner().map(Some)",
    "        }",
    "    } else {",
    "        let index = self.next_capture_index()?;",
    "        let sub = Box::new(self.parse_inner()?);",
    "        let cap = hir::Capture { index, name: None, sub };",
    "        Ok(Some(Hir::capture(cap)))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 19,
    "contra": 1,
    "min_set": 14
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "true",
          "line": 821,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_LOOK_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        7,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Err/None",
          "line": 825,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        14,
        15,
        16,
        18,
        20,
        21,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Err/None",
          "line": 826,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        14,
        15,
        16,
        19,
        22,
        23,
        25,
        27,
        28,
        115,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 826,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Err/None",
          "line": 827,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        14,
        15,
        16,
        19,
        22,
        23,
        26,
        29,
        30,
        31,
        32,
        34,
        36,
        37,
        114,
        115,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 826,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 827,
          "bound": null
        }
      ],
      "ret": "Ok(Some(Hir::capture(cap)))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        10,
        14,
        15,
        16,
        19,
        22,
        23,
        26,
        29,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        109,
        118
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Err/None",
          "line": 825,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        18,
        20,
        21,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Err/None",
          "line": 826,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        22,
        23,
        25,
        27,
        28,
        115,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 826,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Err/None",
          "line": 827,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        22,
        23,
        26,
        29,
        30,
        31,
        32,
        34,
        36,
        37,
        114,
        115,
        116,
        117,
        118
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "true",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 825,
          "bound": null
        },
        {
          "cond": "self.parse_capture_name()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 826,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 827,
          "bound": null
        }
      ],
      "ret": "Ok(Some(Hir::capture(cap)))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        13,
        14,
        15,
        16,
        19,
        22,
        23,
        26,
        29,
        30,
        31,
        32,
        35,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        109,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 831,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP_QUESTION))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        53,
        54,
        113,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 831,
          "bound": null
        },
        {
          "cond": "self.parse_flags()?",
          "norm": null,
          "value": "Err/None",
          "line": 836,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        60,
        62,
        63,
        112,
        113,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 831,
          "bound": null
        },
        {
          "cond": "self.parse_flags()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 836,
          "bound": null
        },
        {
          "cond": "self.char() == ')'",
          "norm": "')' == self.char()",
          "value": "false",
          "line": 838,
          "bound": null
        },
        {
          "cond": "consumed == 0",
          "norm": "0 == consumed",
          "value": "false",
          "line": 840,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_EMPTY_FLAGS))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        71,
        72,
        112,
        113,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 831,
          "bound": null
        },
        {
          "cond": "self.parse_flags()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 836,
          "bound": null
        },
        {
          "cond": "self.char() == ')'",
          "norm": "')' == self.char()",
          "value": "false",
          "line": 838,
          "bound": null
        },
        {
          "cond": "consumed == 0",
          "norm": "0 == consumed",
          "value": "true",
          "line": 840,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        66,
        67,
        68,
        69,
        70,
        73,
        74,
        82,
        108,
        109,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 831,
          "bound": null
        },
        {
          "cond": "self.parse_flags()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 836,
          "bound": null
        },
        {
          "cond": "self.char() == ')'",
          "norm": "')' == self.char()",
          "value": "true",
          "line": 838,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        66,
        67,
        68,
        69,
        75,
        76,
        77,
        79,
        80,
        81,
        82,
        108,
        109,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "true",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 831,
          "bound": null
        },
        {
          "cond": "self.parse_flags()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 836,
          "bound": null
        },
        {
          "cond": "self.char() == ')'",
          "norm": "')' == self.char()",
          "value": "true",
          "line": 838,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        64,
        65,
        66,
        67,
        68,
        69,
        75,
        76,
        78,
        138
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "false",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Err/None",
          "line": 850,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        83,
        84,
        85,
        87,
        89,
        90,
        111,
        113,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "false",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 850,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Err/None",
          "line": 851,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        83,
        84,
        85,
        88,
        91,
        92,
        94,
        96,
        97,
        110,
        111,
        113,
        117,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.is_lookaround_prefix()",
          "norm": null,
          "value": "false",
          "line": 821,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?P<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<\")",
          "norm": null,
          "value": "false",
          "line": 824,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?\")",
          "norm": null,
          "value": "false",
          "line": 830,
          "bound": null
        },
        {
          "cond": "self.next_capture_index()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 850,
          "bound": null
        },
        {
          "cond": "self.parse_inner()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 851,
          "bound": null
        }
      ],
      "ret": "Ok(Some(Hir::capture(cap)))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        8,
        9,
        11,
        12,
        49,
        50,
        83,
        84,
        85,
        88,
        91,
        92,
        95,
        98,
        99,
        100,
        101,
        102,
        103,
        104,
        105,
        106,
        107,
        108,
        109,
        118
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        138
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}