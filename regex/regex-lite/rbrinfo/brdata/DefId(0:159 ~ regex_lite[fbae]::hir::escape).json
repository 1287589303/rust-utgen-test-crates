{
  "name": "regex_lite::hir::escape",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": true,
  "loc": "regex-lite/src/hir/mod.rs:11:1:21:2",
  "doc": "/// Escapes all regular expression meta characters in `pattern`.\n///\n/// The string returned may be safely used as a literal in a regular\n/// expression.\n",
  "code": [
    "pub fn escape(pattern: &str) -> String {",
    "    let mut buf = String::new();",
    "    buf.reserve(pattern.len());",
    "    for ch in pattern.chars() {",
    "        if is_meta_character(ch) {",
    "            buf.push('\\\\');",
    "        }",
    "        buf.push(ch);",
    "    }",
    "    buf",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 2,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "ch in pattern.chars()",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": null
        },
        {
          "cond": "is_meta_character(ch)",
          "norm": null,
          "value": "true",
          "line": 15,
          "bound": null
        },
        {
          "cond": "ch in pattern.chars()",
          "norm": null,
          "value": "false",
          "line": 14,
          "bound": null
        }
      ],
      "ret": "buf",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        13,
        14,
        15,
        17,
        18,
        6,
        7,
        8,
        10,
        12,
        19
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "ch in pattern.chars()",
          "norm": null,
          "value": "true",
          "line": 14,
          "bound": null
        },
        {
          "cond": "is_meta_character(ch)",
          "norm": null,
          "value": "false",
          "line": 15,
          "bound": null
        },
        {
          "cond": "ch in pattern.chars()",
          "norm": null,
          "value": "false",
          "line": 14,
          "bound": null
        }
      ],
      "ret": "buf",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        11,
        13,
        16,
        17,
        18,
        6,
        7,
        8,
        10,
        12,
        19
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "ch in pattern.chars()",
          "norm": null,
          "value": "false",
          "line": 14,
          "bound": null
        }
      ],
      "ret": "buf",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        10,
        12,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}