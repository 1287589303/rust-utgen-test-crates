{
  "name": "regex_lite::hir::parse::{impl#1}::parse_class",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:980:5:1059:6",
  "doc": "/// Parse a standard character class consisting primarily of characters or\n/// character ranges.\n///\n/// This assumes the parser is positioned at the opening `[`. If parsing\n/// is successful, then the parser is advanced to the position immediately\n/// following the closing `]`.\n",
  "code": [
    "fn parse_class(&self) -> Result<Hir, Error> {",
    "    assert_eq!(self.char(), '[');",
    "",
    "    let mut union = vec![];",
    "    if !self.bump_and_bump_space() {",
    "        return Err(Error::new(ERR_CLASS_UNCLOSED));",
    "    }",
    "    // Determine whether the class is negated or not.",
    "    let negate = if self.char() != '^' {",
    "        false",
    "    } else {",
    "        if !self.bump_and_bump_space() {",
    "            return Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_NEGATION));",
    "        }",
    "        true",
    "    };",
    "    // Accept any number of `-` as literal `-`.",
    "    while self.char() == '-' {",
    "        union.push(hir::ClassRange { start: '-', end: '-' });",
    "        if !self.bump_and_bump_space() {",
    "            return Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_DASH));",
    "        }",
    "    }",
    "    // If `]` is the *first* char in a set, then interpret it as a literal",
    "    // `]`. That is, an empty class is impossible to write.",
    "    if union.is_empty() && self.char() == ']' {",
    "        union.push(hir::ClassRange { start: ']', end: ']' });",
    "        if !self.bump_and_bump_space() {",
    "            return Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_CLOSING));",
    "        }",
    "    }",
    "    loop {",
    "        self.bump_space();",
    "        if self.is_done() {",
    "            return Err(Error::new(ERR_CLASS_UNCLOSED));",
    "        }",
    "        match self.char() {",
    "            '[' => {",
    "                // Attempt to treat this as the beginning of a POSIX class.",
    "                // If POSIX class parsing fails, then the parser backs up",
    "                // to `[`.",
    "                if let Some(class) = self.maybe_parse_posix_class() {",
    "                    union.extend_from_slice(&class.ranges);",
    "                    continue;",
    "                }",
    "                // ... otherwise we don't support nested classes.",
    "                return Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED));",
    "            }",
    "            ']' => {",
    "                self.bump();",
    "                let mut class = hir::Class::new(union);",
    "                // Note that we must apply case folding before negation!",
    "                // Consider `(?i)[^x]`. If we applied negation first, then",
    "                // the result would be the character class that matched any",
    "                // Unicode scalar value.",
    "                if self.flags().case_insensitive {",
    "                    class.ascii_case_fold();",
    "                }",
    "                if negate {",
    "                    class.negate();",
    "                }",
    "                return Ok(Hir::class(class));",
    "            }",
    "            '&' if self.peek() == Some('&') => {",
    "                return Err(Error::new(",
    "                    ERR_CLASS_INTERSECTION_UNSUPPORTED,",
    "                ));",
    "            }",
    "            '-' if self.peek() == Some('-') => {",
    "                return Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED));",
    "            }",
    "            '~' if self.peek() == Some('~') => {",
    "                return Err(Error::new(",
    "                    ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,",
    "                ));",
    "            }",
    "            _ => self.parse_class_range(&mut union)?,",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 225,
    "contra": 140,
    "min_set": 17
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1007,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_CLOSING))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        34,
        35,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 49,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 50,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 51,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 52,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 53,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 54,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 55,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 56,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 999,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_DASH))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 57,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 58,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 59,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 60,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 61,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 62,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 63,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 64,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 65,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 66,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 67,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 68,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 69,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 70,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 71,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 72,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 73,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 74,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 75,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1007,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_CLOSING))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        34,
        35,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 76,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 77,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 78,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 79,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 80,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 81,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 82,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 83,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 84,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 85,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 86,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 87,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 88,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 89,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 90,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 91,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 92,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 93,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 94,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 95,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 96,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 97,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 98,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 99,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 100,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 101,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 102,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 103,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 104,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 105,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 106,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 107,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 108,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 109,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 110,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 111,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "true",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        10,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 112,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 113,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 114,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 115,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 116,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 117,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 118,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 119,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 120,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 121,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 122,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 123,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 124,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 125,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 126,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 127,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 128,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 129,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 130,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1007,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_CLOSING))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        34,
        35,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 131,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 132,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 133,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 134,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 135,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 136,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 137,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 138,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 139,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 140,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 141,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 142,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 143,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 144,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 145,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 146,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 147,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 148,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 149,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 150,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 151,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 152,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 153,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 154,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 155,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 156,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 157,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 158,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 159,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 160,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 161,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 162,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 163,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 164,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 165,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 166,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 999,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 167,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "false",
          "line": 997,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 999,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_DASH))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        24,
        25,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 168,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 169,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 170,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 171,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 172,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 173,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 174,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 175,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 176,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 177,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 178,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 179,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 180,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 181,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 182,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 183,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 184,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 185,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 1007,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 186,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 1007,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_CLOSING))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        34,
        35,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 187,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 188,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 189,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 190,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 191,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 192,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 193,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 194,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 195,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 196,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 197,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 198,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 199,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 200,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 201,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 202,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 203,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 204,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.char() == ']'",
          "norm": "']' == self.char()",
          "value": "true",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        28,
        29,
        36,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 205,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 206,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 207,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 208,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "true",
          "line": 1051,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        92,
        94,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 209,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 210,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.char() matches '~'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('~')",
          "norm": "Some('~') == self.peek()",
          "value": "false",
          "line": 1051,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        53,
        89,
        90,
        91,
        93,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 211,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "true",
          "line": 1048,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_DIFFERENCE_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        86,
        88,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 212,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 213,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.char() matches '-'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('-')",
          "norm": "Some('-') == self.peek()",
          "value": "false",
          "line": 1048,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        52,
        83,
        84,
        85,
        87,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 214,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "true",
          "line": 1043,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\n                        ERR_CLASS_INTERSECTION_UNSUPPORTED,\n                    ))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        80,
        82,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 215,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Err/None",
          "line": 1056,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        98,
        100,
        101,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 216,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.char() matches '&'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.peek() == Some('&')",
          "norm": "Some('&') == self.peek()",
          "value": "false",
          "line": 1043,
          "bound": null
        },
        {
          "cond": "self.parse_class_range(&mut union)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 1056,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        51,
        77,
        78,
        79,
        81,
        48,
        95,
        96,
        99,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 217,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 218,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "true",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        67,
        68,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 219,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "true",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        71,
        72,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 220,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1028,
          "bound": null
        },
        {
          "cond": "self.char() matches ']'",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "self.flags().case_insensitive",
          "norm": null,
          "value": "false",
          "line": 1035,
          "bound": null
        },
        {
          "cond": "negate",
          "norm": null,
          "value": "false",
          "line": 1038,
          "bound": null
        }
      ],
      "ret": "Ok(Hir::class(class))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        50,
        63,
        64,
        65,
        66,
        69,
        70,
        73,
        74,
        75,
        76,
        104,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 221,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_NEST_UNSUPPORTED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        60,
        61,
        62,
        105,
        106,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 222,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 991,
          "bound": null
        },
        {
          "cond": "self.char() == '-'",
          "norm": "'-' == self.char()",
          "value": "true",
          "line": 997,
          "bound": null
        },
        {
          "cond": "union.is_empty()",
          "norm": null,
          "value": "false",
          "line": 1005,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 1013,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1017,
          "bound": null
        },
        {
          "cond": "self.char() matches '['",
          "norm": null,
          "value": "true",
          "line": 1016,
          "bound": null
        },
        {
          "cond": "let Some(class) = self.maybe_parse_posix_class()",
          "norm": null,
          "value": "true",
          "line": 1021,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 1013,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        13,
        16,
        17,
        18,
        19,
        26,
        27,
        37,
        38,
        39,
        40,
        41,
        42,
        43,
        46,
        47,
        49,
        54,
        55,
        56,
        57,
        58,
        59,
        102,
        103,
        40,
        41,
        42,
        43,
        44,
        45,
        106,
        107,
        108,
        109
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 223,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 984,
          "bound": null
        },
        {
          "cond": "self.char() != '^'",
          "norm": "'^' != self.char()",
          "value": "false",
          "line": 988,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 991,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED_AFTER_NEGATION))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        6,
        9,
        11,
        12,
        14,
        15,
        107,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 224,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 984,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_CLASS_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        4,
        5,
        7,
        8,
        108,
        109
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 225,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        116
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}