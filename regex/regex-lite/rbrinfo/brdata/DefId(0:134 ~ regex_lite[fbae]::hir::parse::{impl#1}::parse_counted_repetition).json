{
  "name": "regex_lite::hir::parse::{impl#1}::parse_counted_repetition",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:756:5:811:6",
  "doc": "/// Parses a counted repetition operation. A counted repetition operator\n/// corresponds to the `{m,n}` syntax, and does not include the `?`, `*` or\n/// `+` operators.\n///\n/// This assumes that the parser is currently at the opening `{` and\n/// advances the parser to the first character after the operator. (Note\n/// that the operator may include a single additional `?`, which makes the\n/// operator ungreedy.)\n///\n/// The caller should include the concatenation that is being built. The\n/// concatenation returned includes the repetition operator applied to the\n/// last expression in the given concatenation.\n///\n/// If the concatenation is empty, then this returns an error.\n",
  "code": [
    "fn parse_counted_repetition(",
    "    &self,",
    "    mut concat: Vec<Hir>,",
    ") -> Result<Vec<Hir>, Error> {",
    "    assert_eq!(self.char(), '{', \"expected opening brace\");",
    "    let sub = match concat.pop() {",
    "        Some(hir) => Box::new(hir),",
    "        None => {",
    "            return Err(Error::new(ERR_COUNTED_REP_SUB_MISSING));",
    "        }",
    "    };",
    "    if !self.bump_and_bump_space() {",
    "        return Err(Error::new(ERR_COUNTED_REP_UNCLOSED));",
    "    }",
    "    let min = self.parse_decimal()?;",
    "    let mut max = Some(min);",
    "    if self.is_done() {",
    "        return Err(Error::new(ERR_COUNTED_REP_MIN_UNCLOSED));",
    "    }",
    "    if self.char() == ',' {",
    "        if !self.bump_and_bump_space() {",
    "            return Err(Error::new(ERR_COUNTED_REP_COMMA_UNCLOSED));",
    "        }",
    "        if self.char() != '}' {",
    "            max = Some(self.parse_decimal()?);",
    "        } else {",
    "            max = None;",
    "        }",
    "        if self.is_done() {",
    "            return Err(Error::new(ERR_COUNTED_REP_MIN_MAX_UNCLOSED));",
    "        }",
    "    }",
    "    if self.char() != '}' {",
    "        return Err(Error::new(ERR_COUNTED_REP_INVALID));",
    "    }",
    "",
    "    let mut greedy = true;",
    "    if self.bump_and_bump_space() && self.char() == '?' {",
    "        greedy = false;",
    "        self.bump();",
    "    }",
    "    if self.flags().swap_greed {",
    "        greedy = !greedy;",
    "    }",
    "",
    "    if max.map_or(false, |max| min > max) {",
    "        return Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE));",
    "    }",
    "    concat.push(Hir::repetition(hir::Repetition {",
    "        min,",
    "        max,",
    "        greedy,",
    "        sub,",
    "    }));",
    "    Ok(concat)",
    "}"
  ],
  "size": {
    "chain": 48,
    "contra": 0,
    "min_set": 12
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Err/None",
          "line": 770,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        21,
        23,
        24,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 772,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_MIN_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        26,
        27,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Err/None",
          "line": 780,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        40,
        42,
        43,
        78,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 784,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_MIN_MAX_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        47,
        48,
        78,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 788,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        53,
        54,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 780,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        38,
        41,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 784,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_MIN_MAX_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        47,
        48,
        78,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 788,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        53,
        54,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 776,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 779,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 784,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        32,
        35,
        44,
        45,
        46,
        49,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "false",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 776,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_COMMA_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        30,
        31,
        33,
        34,
        78,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "true",
          "line": 788,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        53,
        54,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        59,
        60,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.char() == '?'",
          "norm": "'?' == self.char()",
          "value": "true",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        57,
        58,
        61,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "true",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        66,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "true",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_INVALID_RANGE))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        71,
        79,
        80,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 767,
          "bound": null
        },
        {
          "cond": "self.parse_decimal()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 770,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 772,
          "bound": null
        },
        {
          "cond": "self.char() == ','",
          "norm": "',' == self.char()",
          "value": "true",
          "line": 775,
          "bound": null
        },
        {
          "cond": "self.char() != '}'",
          "norm": "'}' != self.char()",
          "value": "false",
          "line": 788,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 793,
          "bound": null
        },
        {
          "cond": "self.flags().swap_greed",
          "norm": null,
          "value": "false",
          "line": 797,
          "bound": null
        },
        {
          "cond": "max.map_or(false, |max| min > max)",
          "norm": null,
          "value": "false",
          "line": 801,
          "bound": null
        }
      ],
      "ret": "Ok(concat)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        15,
        18,
        19,
        22,
        25,
        28,
        29,
        50,
        51,
        52,
        55,
        56,
        62,
        63,
        64,
        65,
        67,
        68,
        69,
        72,
        73,
        74,
        75,
        76,
        77,
        84
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "concat.pop() matches Some(hir)",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 767,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_UNCLOSED))",
      "path": [
        0,
        1,
        2,
        5,
        7,
        9,
        10,
        11,
        13,
        14,
        16,
        17,
        81,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 53,
          "bound": null
        },
        {
          "cond": "concat.pop() matches None",
          "norm": null,
          "value": "true",
          "line": 761,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_COUNTED_REP_SUB_MISSING))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        12,
        82,
        83,
        84
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 53,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        91,
        92
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}