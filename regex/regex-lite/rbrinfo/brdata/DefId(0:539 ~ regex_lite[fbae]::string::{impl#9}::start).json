{
  "name": "regex_lite::string::{impl#9}::start",
  "mod_info": {
    "name": "string",
    "loc": "regex-lite/src/lib.rs:884:1:884:12"
  },
  "visible": true,
  "loc": "regex-lite/src/string.rs:1520:5:1522:6",
  "doc": "/// Returns the byte offset of the start of the match in the haystack. The\n/// start of the match corresponds to the position where the match begins\n/// and includes the first byte in the match.\n///\n/// It is guaranteed that `Match::start() <= Match::end()`.\n///\n/// This is guaranteed to fall on a valid UTF-8 codepoint boundary. That\n/// is, it will never be an offset that appears between the UTF-8 code\n/// units of a UTF-8 encoded Unicode scalar value. Consequently, it is\n/// always safe to slice the corresponding haystack using this offset.\n",
  "code": [
    "pub fn start(&self) -> usize {",
    "    self.start",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "self.start",
      "path": [
        0
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}