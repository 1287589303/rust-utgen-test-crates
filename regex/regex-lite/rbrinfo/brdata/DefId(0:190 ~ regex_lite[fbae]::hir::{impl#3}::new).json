{
  "name": "regex_lite::hir::{impl#3}::new",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:396:5:400:6",
  "doc": "/// Create a new class from the given ranges. The ranges may be provided\n/// in any order or may even overlap. They will be automatically\n/// canonicalized.\n",
  "code": [
    "fn new<I: IntoIterator<Item = ClassRange>>(ranges: I) -> Class {",
    "    let mut class = Class { ranges: ranges.into_iter().collect() };",
    "    class.canonicalize();",
    "    class",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "class",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}