{
  "name": "regex_lite::hir::parse::{impl#1}::parse_hex",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:590:5:608:6",
  "doc": "/// Parse a hex representation of a Unicode codepoint. This handles both\n/// hex notations, i.e., `\\xFF` and `\\x{FFFF}`. This expects the parser to\n/// be positioned at the `x`, `u` or `U` prefix. The parser is advanced to\n/// the first character immediately following the hexadecimal literal.\n",
  "code": [
    "fn parse_hex(&self) -> Result<Hir, Error> {",
    "    let digit_len = match self.char() {",
    "        'x' => 2,",
    "        'u' => 4,",
    "        'U' => 8,",
    "        unk => unreachable!(",
    "            \"invalid start of fixed length hexadecimal number {}\",",
    "            unk",
    "        ),",
    "    };",
    "    if !self.bump_and_bump_space() {",
    "        return Err(Error::new(ERR_HEX_UNEXPECTED_EOF));",
    "    }",
    "    if self.char() == '{' {",
    "        self.parse_hex_brace()",
    "    } else {",
    "        self.parse_hex_digits(digit_len)",
    "    }",
    "}"
  ],
  "size": {
    "chain": 10,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 593,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 592,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 594,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        9,
        10,
        23
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 594,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        8,
        11,
        12,
        13,
        16,
        17,
        18,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 594,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        5,
        8,
        11,
        12,
        13,
        16,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 594,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 600,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_HEX_UNEXPECTED_EOF))",
      "path": [
        0,
        1,
        5,
        8,
        11,
        12,
        14,
        15,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 593,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        11,
        12,
        13,
        16,
        17,
        18,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 593,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        7,
        11,
        12,
        13,
        16,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 593,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 600,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_HEX_UNEXPECTED_EOF))",
      "path": [
        0,
        1,
        4,
        7,
        11,
        12,
        14,
        15,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 592,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "false",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        11,
        12,
        13,
        16,
        17,
        18,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 592,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "true",
          "line": 600,
          "bound": null
        },
        {
          "cond": "self.char() == '{'",
          "norm": "'{' == self.char()",
          "value": "true",
          "line": 603,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        6,
        11,
        12,
        13,
        16,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 592,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 591,
          "bound": null
        },
        {
          "cond": "self.bump_and_bump_space()",
          "norm": null,
          "value": "false",
          "line": 600,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_HEX_UNEXPECTED_EOF))",
      "path": [
        0,
        1,
        3,
        6,
        11,
        12,
        14,
        15,
        22
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}