{
  "name": "regex_lite::hir::parse::{impl#1}::parse_capture_name",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:861:5:889:6",
  "doc": "/// Parses a capture group name. Assumes that the parser is positioned at\n/// the first character in the name following the opening `<` (and may\n/// possibly be EOF). This advances the parser to the first character\n/// following the closing `>`.\n",
  "code": [
    "fn parse_capture_name(&self) -> Result<&str, Error> {",
    "    if self.is_done() {",
    "        return Err(Error::new(ERR_MISSING_GROUP_NAME));",
    "    }",
    "    let start = self.pos();",
    "    loop {",
    "        if self.char() == '>' {",
    "            break;",
    "        }",
    "        if !is_capture_char(self.char(), self.pos() == start) {",
    "            return Err(Error::new(ERR_INVALID_GROUP_NAME));",
    "        }",
    "        if !self.bump() {",
    "            break;",
    "        }",
    "    }",
    "    let end = self.pos();",
    "    if self.is_done() {",
    "        return Err(Error::new(ERR_UNCLOSED_GROUP_NAME));",
    "    }",
    "    assert_eq!(self.char(), '>');",
    "    self.bump();",
    "    let name = &self.pattern()[start..end];",
    "    if name.is_empty() {",
    "        return Err(Error::new(ERR_EMPTY_GROUP_NAME));",
    "    }",
    "    self.add_capture_name(name)?;",
    "    Ok(name)",
    "}"
  ],
  "size": {
    "chain": 17,
    "contra": 5,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 862,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_MISSING_GROUP_NAME))",
      "path": [
        0,
        1,
        2,
        3,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 878,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        23,
        24,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "true",
          "line": 884,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_EMPTY_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        33,
        34,
        43,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Err/None",
          "line": 887,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        41,
        42,
        43,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 887,
          "bound": null
        }
      ],
      "ret": "Ok(name)",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        40,
        46
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        28,
        47
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 878,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        18,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        23,
        24,
        44,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "true",
          "line": 884,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_EMPTY_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        18,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        33,
        34,
        43,
        44,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Err/None",
          "line": 887,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        18,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        41,
        42,
        43,
        44,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 887,
          "bound": null
        }
      ],
      "ret": "Ok(name)",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        18,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        40,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "true",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "false",
          "line": 867,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        18,
        6,
        7,
        8,
        9,
        20,
        21,
        22,
        25,
        26,
        28,
        47
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 878,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_UNCLOSED_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        23,
        24,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "true",
          "line": 884,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_EMPTY_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        33,
        34,
        43,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Err/None",
          "line": 887,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        39,
        41,
        42,
        43,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "name.is_empty()",
          "norm": null,
          "value": "false",
          "line": 884,
          "bound": null
        },
        {
          "cond": "self.add_capture_name(name)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 887,
          "bound": null
        }
      ],
      "ret": "Ok(name)",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        25,
        26,
        27,
        29,
        30,
        31,
        32,
        35,
        36,
        37,
        40,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "true",
          "line": 870,
          "bound": null
        },
        {
          "cond": "self.bump()",
          "norm": null,
          "value": "false",
          "line": 873,
          "bound": null
        },
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 878,
          "bound": null
        },
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        14,
        17,
        19,
        20,
        21,
        22,
        25,
        26,
        28,
        47
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 862,
          "bound": null
        },
        {
          "cond": "self.char() == '>'",
          "norm": "'>' == self.char()",
          "value": "true",
          "line": 867,
          "bound": null
        },
        {
          "cond": "is_capture_char(self.char(), self.pos() == start)",
          "norm": null,
          "value": "false",
          "line": 870,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_INVALID_GROUP_NAME))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        8,
        10,
        11,
        12,
        13,
        15,
        16,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}