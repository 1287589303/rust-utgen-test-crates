{
  "name": "regex_lite::nfa::{impl#6}::new",
  "mod_info": {
    "name": "nfa",
    "loc": "regex-lite/src/lib.rs:880:1:880:9"
  },
  "visible": false,
  "loc": "regex-lite/src/nfa.rs:266:5:279:6",
  "doc": "",
  "code": [
    "fn new(config: Config, pattern: String) -> Compiler {",
    "    let nfa = RefCell::new(NFA {",
    "        pattern,",
    "        states: vec![],",
    "        start: 0,",
    "        is_start_anchored: false,",
    "        is_match_empty: false,",
    "        static_explicit_captures_len: None,",
    "        cap_name_to_index: CaptureNameMap::default(),",
    "        cap_index_to_name: vec![],",
    "        memory_extra: 0,",
    "    });",
    "    Compiler { config, nfa }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Compiler { config, nfa }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}