{
  "name": "regex_lite::nfa::{impl#6}::c_capture",
  "mod_info": {
    "name": "nfa",
    "loc": "regex-lite/src/lib.rs:880:1:880:9"
  },
  "visible": false,
  "loc": "regex-lite/src/nfa.rs:534:5:574:6",
  "doc": "/// Compile the given expression and insert capturing states at the\n/// beginning and end of it. The slot for the capture states is computed\n/// from the index.\n",
  "code": [
    "fn c_capture(",
    "    &self,",
    "    index: u32,",
    "    name: Option<&str>,",
    "    hir: &Hir,",
    ") -> Result<ThompsonRef, Error> {",
    "    // For discontiguous indices, push placeholders for earlier capture",
    "    // groups that weren't explicitly added. This can happen, for example,",
    "    // with patterns like '(a){0}(a)' where '(a){0}' is completely removed",
    "    // from the pattern.",
    "    let existing_groups_len = self.nfa.borrow().cap_index_to_name.len();",
    "    for _ in 0..(index.as_usize().saturating_sub(existing_groups_len)) {",
    "        self.nfa.borrow_mut().cap_index_to_name.push(None);",
    "    }",
    "    if index.as_usize() >= existing_groups_len {",
    "        if let Some(name) = name {",
    "            let name = Arc::from(name);",
    "            let mut nfa = self.nfa.borrow_mut();",
    "            nfa.cap_name_to_index.insert(Arc::clone(&name), index);",
    "            nfa.cap_index_to_name.push(Some(Arc::clone(&name)));",
    "            // This is an approximation.",
    "            nfa.memory_extra += name.len() + size_of::<u32>();",
    "        } else {",
    "            self.nfa.borrow_mut().cap_index_to_name.push(None);",
    "        }",
    "    }",
    "",
    "    let Some(slot) = index.checked_mul(2) else {",
    "        return Err(Error::new(\"capture group slots exhausted\"));",
    "    };",
    "    let start = self.add(State::Capture { target: 0, slot })?;",
    "    let inner = self.c(hir)?;",
    "    let Some(slot) = slot.checked_add(1) else {",
    "        return Err(Error::new(\"capture group slots exhausted\"));",
    "    };",
    "    let end = self.add(State::Capture { target: 0, slot })?;",
    "    self.patch(start, inner.start)?;",
    "    self.patch(inner.end, end)?;",
    "",
    "    Ok(ThompsonRef { start, end })",
    "}"
  ],
  "size": {
    "chain": 48,
    "contra": 24,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "true",
          "line": 545,
          "bound": null
        },
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        13,
        15,
        16,
        17,
        18,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 30,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 31,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 32,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        40,
        41,
        42,
        43,
        44,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 33,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 34,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 35,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 36,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 37,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 38,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 39,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 40,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "true",
          "line": 548,
          "bound": "index.as_usize() == existing_groups_len"
        },
        {
          "cond": "let Some(name) = name",
          "norm": null,
          "value": "true",
          "line": 549,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 41,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        51,
        47,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 42,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 564,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        55,
        57,
        58,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 43,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Err/None",
          "line": 565,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        62,
        64,
        65,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 44,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(\"capture group slots exhausted\"))",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        70,
        66,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 45,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Err/None",
          "line": 569,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        74,
        76,
        77,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 46,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Err/None",
          "line": 570,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        81,
        83,
        84,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 47,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Err/None",
          "line": 571,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        88,
        90,
        91,
        92,
        93,
        94,
        95,
        96
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 48,
      "conds": [
        {
          "cond": "_ in 0..(index.as_usize().saturating_sub(existing_groups_len))",
          "norm": null,
          "value": "false",
          "line": 545,
          "bound": null
        },
        {
          "cond": "index.as_usize() >= existing_groups_len",
          "norm": "existing_groups_len <= index.as_usize()",
          "value": "false",
          "line": 548,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 564,
          "bound": null
        },
        {
          "cond": "self.c(hir)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 565,
          "bound": null
        },
        {
          "cond": "self.add(State::Capture { target: 0, slot })?",
          "norm": null,
          "value": "Ok/Some",
          "line": 569,
          "bound": null
        },
        {
          "cond": "self.patch(start, inner.start)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 570,
          "bound": null
        },
        {
          "cond": "self.patch(inner.end, end)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 571,
          "bound": null
        }
      ],
      "ret": "Ok(ThompsonRef { start, end })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        12,
        14,
        19,
        45,
        46,
        48,
        49,
        50,
        52,
        53,
        56,
        59,
        60,
        63,
        67,
        68,
        69,
        71,
        72,
        75,
        78,
        79,
        82,
        85,
        86,
        89,
        96
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}