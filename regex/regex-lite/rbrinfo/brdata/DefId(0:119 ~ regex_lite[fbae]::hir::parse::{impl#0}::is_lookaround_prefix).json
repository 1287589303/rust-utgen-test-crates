{
  "name": "regex_lite::hir::parse::{impl#0}::is_lookaround_prefix",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:368:5:373:6",
  "doc": "/// Returns true if and only if the parser is positioned at a look-around\n/// prefix. The conditions under which this returns true must always\n/// correspond to a regular expression that would otherwise be consider\n/// invalid.\n///\n/// This should only be called immediately after parsing the opening of\n/// a group or a set of flags.\n",
  "code": [
    "fn is_lookaround_prefix(&self) -> bool {",
    "    self.bump_if(\"?=\")",
    "        || self.bump_if(\"?!\")",
    "        || self.bump_if(\"?<=\")",
    "        || self.bump_if(\"?<!\")",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.bump_if(\"?=\")",
          "norm": null,
          "value": "true",
          "line": 369,
          "bound": null
        }
      ],
      "ret": "self.bump_if(\"?=\")\n            || self.bump_if(\"?!\")\n            || self.bump_if(\"?<=\")\n            || self.bump_if(\"?<!\")",
      "path": [
        0,
        1,
        2,
        9,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.bump_if(\"?=\")",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?!\")",
          "norm": null,
          "value": "true",
          "line": 370,
          "bound": null
        }
      ],
      "ret": "self.bump_if(\"?=\")\n            || self.bump_if(\"?!\")\n            || self.bump_if(\"?<=\")\n            || self.bump_if(\"?<!\")",
      "path": [
        0,
        1,
        3,
        4,
        5,
        9,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.bump_if(\"?=\")",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?!\")",
          "norm": null,
          "value": "false",
          "line": 370,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<=\")",
          "norm": null,
          "value": "true",
          "line": 371,
          "bound": null
        }
      ],
      "ret": "self.bump_if(\"?=\")\n            || self.bump_if(\"?!\")\n            || self.bump_if(\"?<=\")\n            || self.bump_if(\"?<!\")",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        8,
        9,
        12
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.bump_if(\"?=\")",
          "norm": null,
          "value": "false",
          "line": 369,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?!\")",
          "norm": null,
          "value": "false",
          "line": 370,
          "bound": null
        },
        {
          "cond": "self.bump_if(\"?<=\")",
          "norm": null,
          "value": "false",
          "line": 371,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        10,
        11,
        12
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}