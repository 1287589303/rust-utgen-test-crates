{
  "name": "regex_lite::hir::parse::posix_class",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:1344:1:1375:2",
  "doc": "/// Returns an iterator of character class ranges for the given named POSIX\n/// character class. If no such character class exists for the name given, then\n/// an error is returned.\n",
  "code": [
    "fn posix_class(",
    "    kind: &str,",
    ") -> Result<impl Iterator<Item = hir::ClassRange>, Error> {",
    "    let slice: &'static [(u8, u8)] = match kind {",
    "        \"alnum\" => &[(b'0', b'9'), (b'A', b'Z'), (b'a', b'z')],",
    "        \"alpha\" => &[(b'A', b'Z'), (b'a', b'z')],",
    "        \"ascii\" => &[(b'\\x00', b'\\x7F')],",
    "        \"blank\" => &[(b'\\t', b'\\t'), (b' ', b' ')],",
    "        \"cntrl\" => &[(b'\\x00', b'\\x1F'), (b'\\x7F', b'\\x7F')],",
    "        \"digit\" => &[(b'0', b'9')],",
    "        \"graph\" => &[(b'!', b'~')],",
    "        \"lower\" => &[(b'a', b'z')],",
    "        \"print\" => &[(b' ', b'~')],",
    "        \"punct\" => &[(b'!', b'/'), (b':', b'@'), (b'[', b'`'), (b'{', b'~')],",
    "        \"space\" => &[",
    "            (b'\\t', b'\\t'),",
    "            (b'\\n', b'\\n'),",
    "            (b'\\x0B', b'\\x0B'),",
    "            (b'\\x0C', b'\\x0C'),",
    "            (b'\\r', b'\\r'),",
    "            (b' ', b' '),",
    "        ],",
    "        \"upper\" => &[(b'A', b'Z')],",
    "        \"word\" => &[(b'0', b'9'), (b'A', b'Z'), (b'_', b'_'), (b'a', b'z')],",
    "        \"xdigit\" => &[(b'0', b'9'), (b'A', b'F'), (b'a', b'f')],",
    "        _ => return Err(Error::new(ERR_POSIX_CLASS_UNRECOGNIZED)),",
    "    };",
    "    Ok(slice.iter().map(|&(start, end)| hir::ClassRange {",
    "        start: char::from(start),",
    "        end: char::from(end),",
    "    }))",
    "}"
  ],
  "size": {
    "chain": 15,
    "contra": 0,
    "min_set": 15
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "true",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        2,
        43,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "true",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        4,
        44,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "true",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        6,
        45,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "true",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        8,
        46,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "true",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        10,
        47,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "true",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        12,
        48,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "true",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        14,
        49,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "true",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        16,
        50,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "true",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        18,
        51,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "true",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        20,
        52,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "false",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "true",
          "line": 1358,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        21,
        32,
        22,
        53,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "false",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "false",
          "line": 1358,
          "bound": null
        },
        {
          "cond": "kind matches \"upper\"",
          "norm": null,
          "value": "true",
          "line": 1366,
          "bound": null
        },
        {
          "cond": "kind matches \"upper\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        21,
        32,
        23,
        31,
        24,
        54,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "false",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "false",
          "line": 1358,
          "bound": null
        },
        {
          "cond": "kind matches \"upper\"",
          "norm": null,
          "value": "false",
          "line": 1366,
          "bound": null
        },
        {
          "cond": "kind matches \"word\"",
          "norm": null,
          "value": "true",
          "line": 1367,
          "bound": null
        },
        {
          "cond": "kind matches \"word\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        21,
        32,
        23,
        31,
        25,
        30,
        26,
        55,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "false",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "false",
          "line": 1358,
          "bound": null
        },
        {
          "cond": "kind matches \"upper\"",
          "norm": null,
          "value": "false",
          "line": 1366,
          "bound": null
        },
        {
          "cond": "kind matches \"word\"",
          "norm": null,
          "value": "false",
          "line": 1367,
          "bound": null
        },
        {
          "cond": "kind matches \"xdigit\"",
          "norm": null,
          "value": "true",
          "line": 1368,
          "bound": null
        },
        {
          "cond": "kind matches \"xdigit\"",
          "norm": null,
          "value": "true",
          "line": 1347,
          "bound": null
        }
      ],
      "ret": "Ok(slice.iter().map(|&(start, end)| hir::ClassRange {\n        start: char::from(start),\n        end: char::from(end),\n    }))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        21,
        32,
        23,
        31,
        25,
        30,
        27,
        29,
        28,
        56,
        58,
        59,
        60,
        61
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "kind matches \"alnum\"",
          "norm": null,
          "value": "false",
          "line": 1348,
          "bound": null
        },
        {
          "cond": "kind matches \"alpha\"",
          "norm": null,
          "value": "false",
          "line": 1349,
          "bound": null
        },
        {
          "cond": "kind matches \"ascii\"",
          "norm": null,
          "value": "false",
          "line": 1350,
          "bound": null
        },
        {
          "cond": "kind matches \"blank\"",
          "norm": null,
          "value": "false",
          "line": 1351,
          "bound": null
        },
        {
          "cond": "kind matches \"cntrl\"",
          "norm": null,
          "value": "false",
          "line": 1352,
          "bound": null
        },
        {
          "cond": "kind matches \"digit\"",
          "norm": null,
          "value": "false",
          "line": 1353,
          "bound": null
        },
        {
          "cond": "kind matches \"graph\"",
          "norm": null,
          "value": "false",
          "line": 1354,
          "bound": null
        },
        {
          "cond": "kind matches \"lower\"",
          "norm": null,
          "value": "false",
          "line": 1355,
          "bound": null
        },
        {
          "cond": "kind matches \"print\"",
          "norm": null,
          "value": "false",
          "line": 1356,
          "bound": null
        },
        {
          "cond": "kind matches \"punct\"",
          "norm": null,
          "value": "false",
          "line": 1357,
          "bound": null
        },
        {
          "cond": "kind matches \"space\"",
          "norm": null,
          "value": "false",
          "line": 1358,
          "bound": null
        },
        {
          "cond": "kind matches \"upper\"",
          "norm": null,
          "value": "false",
          "line": 1366,
          "bound": null
        },
        {
          "cond": "kind matches \"word\"",
          "norm": null,
          "value": "false",
          "line": 1367,
          "bound": null
        },
        {
          "cond": "kind matches \"xdigit\"",
          "norm": null,
          "value": "false",
          "line": 1368,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_POSIX_CLASS_UNRECOGNIZED))",
      "path": [
        0,
        42,
        3,
        41,
        5,
        40,
        7,
        39,
        9,
        38,
        11,
        37,
        13,
        36,
        15,
        35,
        17,
        34,
        19,
        33,
        21,
        32,
        23,
        31,
        25,
        30,
        27,
        29,
        1,
        57,
        61
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}