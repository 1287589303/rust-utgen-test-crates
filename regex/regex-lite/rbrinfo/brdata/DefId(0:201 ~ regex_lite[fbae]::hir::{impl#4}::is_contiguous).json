{
  "name": "regex_lite::hir::{impl#4}::is_contiguous",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:563:5:567:6",
  "doc": "/// Returns true if and only if the two ranges are contiguous. Two ranges\n/// are contiguous if and only if the ranges are either overlapping or\n/// adjacent.\n",
  "code": [
    "fn is_contiguous(&self, other: &ClassRange) -> bool {",
    "    let (s1, e1) = (u32::from(self.start), u32::from(self.end));",
    "    let (s2, e2) = (u32::from(other.start), u32::from(other.end));",
    "    core::cmp::max(s1, s2) <= core::cmp::min(e1, e2).saturating_add(1)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "core::cmp::max(s1, s2) <= core::cmp::min(e1, e2).saturating_add(1)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}