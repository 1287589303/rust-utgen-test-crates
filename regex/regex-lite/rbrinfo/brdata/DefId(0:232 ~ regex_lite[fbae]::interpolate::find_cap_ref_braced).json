{
  "name": "regex_lite::interpolate::find_cap_ref_braced",
  "mod_info": {
    "name": "interpolate",
    "loc": "regex-lite/src/lib.rs:879:1:879:17"
  },
  "visible": false,
  "loc": "regex-lite/src/interpolate.rs:248:1:272:2",
  "doc": "/// Looks for a braced reference, e.g., `${foo1}`. This assumes that an opening\n/// brace has been found at `i-1` in `rep`. This then looks for a closing\n/// brace and returns the capture reference within the brace.\n",
  "code": [
    "fn find_cap_ref_braced(rep: &[u8], mut i: usize) -> Option<CaptureRef<'_>> {",
    "    assert_eq!(b'{', rep[i.checked_sub(1).unwrap()]);",
    "    let start = i;",
    "    while rep.get(i).map_or(false, |&b| b != b'}') {",
    "        i += 1;",
    "    }",
    "    if !rep.get(i).map_or(false, |&b| b == b'}') {",
    "        return None;",
    "    }",
    "    // When looking at braced names, we don't put any restrictions on the name,",
    "    // so it's possible it could be invalid UTF-8. But a capture group name",
    "    // can never be invalid UTF-8, so if we have invalid UTF-8, then we can",
    "    // safely return None.",
    "    let cap = match core::str::from_utf8(&rep[start..i]) {",
    "        Err(_) => return None,",
    "        Ok(cap) => cap,",
    "    };",
    "    Some(CaptureRef {",
    "        cap: match cap.parse::<usize>() {",
    "            Ok(i) => Ref::Number(i),",
    "            Err(_) => Ref::Named(cap),",
    "        },",
    "        end: i + 1,",
    "    })",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 4,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        20,
        22,
        30,
        31
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Ok(cap)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": "Some(CaptureRef {\n        cap: match cap.parse::<usize>() {\n            Ok(i) => Ref::Number(i),\n            Err(_) => Ref::Named(cap),\n        },\n        end: i + 1,\n    })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        21,
        23,
        26,
        28,
        29,
        31
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Ok(cap)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Ok(i)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Ok(i)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": "Some(CaptureRef {\n        cap: match cap.parse::<usize>() {\n            Ok(i) => Ref::Number(i),\n            Err(_) => Ref::Named(cap),\n        },\n        end: i + 1,\n    })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        21,
        23,
        25,
        27,
        28,
        29,
        31
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "true",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "false",
          "line": 254,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        10,
        11,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        16,
        30,
        31
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        20,
        22,
        30,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Ok(cap)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Err(_)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": "Some(CaptureRef {\n        cap: match cap.parse::<usize>() {\n            Ok(i) => Ref::Number(i),\n            Err(_) => Ref::Named(cap),\n        },\n        end: i + 1,\n    })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        21,
        23,
        26,
        28,
        29,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "true",
          "line": 254,
          "bound": null
        },
        {
          "cond": "core::str::from_utf8(&rep[start..i]) matches Ok(cap)",
          "norm": null,
          "value": "true",
          "line": 261,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Ok(i)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        },
        {
          "cond": "cap.parse::<usize>() matches Ok(i)",
          "norm": null,
          "value": "true",
          "line": 266,
          "bound": null
        }
      ],
      "ret": "Some(CaptureRef {\n        cap: match cap.parse::<usize>() {\n            Ok(i) => Ref::Number(i),\n            Err(_) => Ref::Named(cap),\n        },\n        end: i + 1,\n    })",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        15,
        17,
        18,
        21,
        23,
        25,
        27,
        28,
        29,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "true",
          "line": 40,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b != b'}')",
          "norm": null,
          "value": "false",
          "line": 251,
          "bound": null
        },
        {
          "cond": "rep.get(i).map_or(false, |&b| b == b'}')",
          "norm": null,
          "value": "false",
          "line": 254,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        6,
        7,
        8,
        9,
        12,
        13,
        14,
        16,
        30,
        31
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(*left_val == *right_val)",
          "norm": null,
          "value": "false",
          "line": 40,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        32
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}