{
  "name": "regex_lite::hir::parse::{impl#0}::bump",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:232:5:239:6",
  "doc": "/// Bump the parser to the next Unicode scalar value.\n///\n/// If the end of the input has been reached, then `false` is returned.\n",
  "code": [
    "fn bump(&self) -> bool {",
    "    if self.is_done() {",
    "        return false;",
    "    }",
    "    self.pos.set(self.pos() + self.char().len_utf8());",
    "    self.char.set(self.pattern()[self.pos()..].chars().next());",
    "    self.char.get().is_some()",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "true",
          "line": 233,
          "bound": null
        }
      ],
      "ret": "false",
      "path": [
        0,
        1,
        2,
        17
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.is_done()",
          "norm": null,
          "value": "false",
          "line": 233,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}