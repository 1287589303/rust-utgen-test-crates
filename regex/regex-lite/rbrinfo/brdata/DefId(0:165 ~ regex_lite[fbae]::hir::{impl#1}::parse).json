{
  "name": "regex_lite::hir::{impl#1}::parse",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": true,
  "loc": "regex-lite/src/hir/mod.rs:177:5:179:6",
  "doc": "/// Parses the given pattern string with the given configuration into a\n/// structured representation. If the pattern is invalid, then an error\n/// is returned.\n",
  "code": [
    "pub(crate) fn parse(config: Config, pattern: &str) -> Result<Hir, Error> {",
    "    self::parse::Parser::new(config, pattern).parse()",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}