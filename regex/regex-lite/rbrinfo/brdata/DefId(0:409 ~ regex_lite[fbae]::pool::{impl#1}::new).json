{
  "name": "regex_lite::pool::{impl#1}::new",
  "mod_info": {
    "name": "pool",
    "loc": "regex-lite/src/lib.rs:882:1:882:10"
  },
  "visible": true,
  "loc": "regex-lite/src/pool.rs:48:5:50:6",
  "doc": "/// Create a new pool. The given closure is used to create values in\n/// the pool when necessary.\n",
  "code": [
    "pub(crate) const fn new(create: F) -> Pool<T, F> {",
    "    Pool { stack: Mutex::new(vec![]), create }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Pool { stack: Mutex::new(vec![]), create }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}