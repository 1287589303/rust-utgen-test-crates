{
  "name": "regex_lite::hir::parse::{impl#0}::new",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:157:5:168:6",
  "doc": "/// Build a parser from this configuration with the given pattern.\n",
  "code": [
    "pub(super) fn new(config: Config, pattern: &'a str) -> Parser<'a> {",
    "    Parser {",
    "        config,",
    "        pattern,",
    "        depth: Cell::new(0),",
    "        pos: Cell::new(0),",
    "        char: Cell::new(pattern.chars().next()),",
    "        capture_index: Cell::new(0),",
    "        flags: RefCell::new(config.flags),",
    "        capture_names: RefCell::new(vec![]),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Parser {\n            config,\n            pattern,\n            depth: Cell::new(0),\n            pos: Cell::new(0),\n            char: Cell::new(pattern.chars().next()),\n            capture_index: Cell::new(0),\n            flags: RefCell::new(config.flags),\n            capture_names: RefCell::new(vec![]),\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}