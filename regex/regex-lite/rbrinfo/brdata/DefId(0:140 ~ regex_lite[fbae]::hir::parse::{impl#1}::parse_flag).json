{
  "name": "regex_lite::hir::parse::{impl#1}::parse_flag",
  "mod_info": {
    "name": "hir::parse",
    "loc": "regex-lite/src/hir/mod.rs:5:1:5:11"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/parse.rs:950:5:972:6",
  "doc": "/// Parse the current character as a flag. Do not advance the parser.\n///\n/// This sets the appropriate boolean value in place on the set of flags\n/// given. The boolean is inverted when `negate` is true.\n///\n/// # Errors\n///\n/// If the flag is not recognized, then an error is returned.\n",
  "code": [
    "fn parse_flag(",
    "    &self,",
    "    flags: &mut Flags,",
    "    negate: bool,",
    ") -> Result<(), Error> {",
    "    let enabled = !negate;",
    "    match self.char() {",
    "        'i' => flags.case_insensitive = enabled,",
    "        'm' => flags.multi_line = enabled,",
    "        's' => flags.dot_matches_new_line = enabled,",
    "        'U' => flags.swap_greed = enabled,",
    "        'R' => flags.crlf = enabled,",
    "        'x' => flags.ignore_whitespace = enabled,",
    "        // We make a special exception for this flag where we let it",
    "        // through as a recognized flag, but treat it as a no-op. This in",
    "        // practice retains some compatibility with the regex crate. It is",
    "        // a little suspect to do this, but for example, '(?-u:\\b).+' in",
    "        // the regex crate is equivalent to '\\b.+' in regex-lite.",
    "        'u' => {}",
    "        _ => return Err(Error::new(ERR_FLAG_UNRECOGNIZED)),",
    "    }",
    "    Ok(())",
    "}"
  ],
  "size": {
    "chain": 8,
    "contra": 0,
    "min_set": 8
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.char() matches 'm'",
          "norm": null,
          "value": "true",
          "line": 958,
          "bound": null
        },
        {
          "cond": "self.char() matches 'R'",
          "norm": null,
          "value": "true",
          "line": 961,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 962,
          "bound": null
        },
        {
          "cond": "self.char() matches 's'",
          "norm": null,
          "value": "true",
          "line": 959,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 960,
          "bound": null
        },
        {
          "cond": "self.char() matches 'i'",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 968,
          "bound": null
        },
        {
          "cond": "self.char() matches _",
          "norm": null,
          "value": "true",
          "line": 969,
          "bound": null
        }
      ],
      "ret": "Err(Error::new(ERR_FLAG_UNRECOGNIZED))",
      "path": [
        0,
        1,
        2,
        17,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 968,
          "bound": null
        },
        {
          "cond": "self.char() matches 'u'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        9,
        16,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 962,
          "bound": null
        },
        {
          "cond": "self.char() matches 'x'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        8,
        15,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.char() matches 'R'",
          "norm": null,
          "value": "true",
          "line": 961,
          "bound": null
        },
        {
          "cond": "self.char() matches 'R'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        7,
        14,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 960,
          "bound": null
        },
        {
          "cond": "self.char() matches 'U'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        6,
        13,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self.char() matches 's'",
          "norm": null,
          "value": "true",
          "line": 959,
          "bound": null
        },
        {
          "cond": "self.char() matches 's'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        5,
        12,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self.char() matches 'm'",
          "norm": null,
          "value": "true",
          "line": 958,
          "bound": null
        },
        {
          "cond": "self.char() matches 'm'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        4,
        11,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self.char() matches 'i'",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        },
        {
          "cond": "self.char() matches 'i'",
          "norm": null,
          "value": "true",
          "line": 956,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        3,
        10,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}