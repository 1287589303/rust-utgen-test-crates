{
  "name": "regex_lite::string::{impl#17}::get",
  "mod_info": {
    "name": "string",
    "loc": "regex-lite/src/lib.rs:884:1:884:12"
  },
  "visible": true,
  "loc": "regex-lite/src/string.rs:2105:5:2111:6",
  "doc": "/// Returns the start and end byte offsets of the capture group at index\n/// `i`. This returns `None` if `i` is not a valid capture group or if the\n/// capture group did not match.\n///\n/// # Example\n///\n/// ```\n/// use regex_lite::Regex;\n///\n/// let re = Regex::new(r\"(?<first>\\w+)\\s+(?<last>\\w+)\").unwrap();\n/// let mut locs = re.capture_locations();\n/// re.captures_read(&mut locs, \"Bruce Springsteen\").unwrap();\n/// assert_eq!(Some((0, 17)), locs.get(0));\n/// assert_eq!(Some((0, 5)), locs.get(1));\n/// assert_eq!(Some((6, 17)), locs.get(2));\n/// ```\n",
  "code": [
    "pub fn get(&self, i: usize) -> Option<(usize, usize)> {",
    "    let slot = i.checked_mul(2)?;",
    "    let start = self.0.get(slot).copied()??.get();",
    "    let slot = slot.checked_add(1)?;",
    "    let end = self.0.get(slot).copied()??.get();",
    "    Some((start, end))",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 0,
    "min_set": 7
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Err/None",
          "line": 2106,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Err/None",
          "line": 2107,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        13,
        15,
        16,
        49,
        50,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Err/None",
          "line": 2107,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14,
        17,
        19,
        21,
        22,
        49,
        50,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "slot.checked_add(1)?",
          "norm": null,
          "value": "Err/None",
          "line": 2108,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14,
        17,
        20,
        23,
        24,
        25,
        27,
        29,
        30,
        48,
        50,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "slot.checked_add(1)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2108,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Err/None",
          "line": 2109,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14,
        17,
        20,
        23,
        24,
        25,
        28,
        31,
        32,
        33,
        34,
        36,
        38,
        39,
        47,
        48,
        50,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "slot.checked_add(1)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2108,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2109,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Err/None",
          "line": 2109,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14,
        17,
        20,
        23,
        24,
        25,
        28,
        31,
        32,
        33,
        34,
        37,
        40,
        42,
        44,
        45,
        47,
        48,
        50,
        51,
        52
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "i.checked_mul(2)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Ok/Some",
          "line": 2107,
          "bound": null
        },
        {
          "cond": "slot.checked_add(1)?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2108,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()?",
          "norm": null,
          "value": "Ok/Some",
          "line": 2109,
          "bound": null
        },
        {
          "cond": "self.0.get(slot).copied()??",
          "norm": null,
          "value": "Ok/Some",
          "line": 2109,
          "bound": null
        }
      ],
      "ret": "Some((start, end))",
      "path": [
        0,
        1,
        2,
        5,
        8,
        9,
        10,
        11,
        14,
        17,
        20,
        23,
        24,
        25,
        28,
        31,
        32,
        33,
        34,
        37,
        40,
        43,
        46,
        52
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}