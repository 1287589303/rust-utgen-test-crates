{
  "name": "regex_lite::hir::{impl#1}::concat",
  "mod_info": {
    "name": "hir",
    "loc": "regex-lite/src/lib.rs:877:1:877:9"
  },
  "visible": false,
  "loc": "regex-lite/src/hir/mod.rs:311:5:335:6",
  "doc": "",
  "code": [
    "fn concat(mut subs: Vec<Hir>) -> Hir {",
    "    if subs.is_empty() {",
    "        Hir::empty()",
    "    } else if subs.len() == 1 {",
    "        subs.pop().unwrap()",
    "    } else {",
    "        let is_start_anchored = subs[0].is_start_anchored;",
    "        let mut is_match_empty = true;",
    "        let mut static_explicit_captures_len = Some(0usize);",
    "        for sub in subs.iter() {",
    "            is_match_empty = is_match_empty && sub.is_match_empty;",
    "            static_explicit_captures_len = static_explicit_captures_len",
    "                .and_then(|len1| {",
    "                    Some((len1, sub.static_explicit_captures_len?))",
    "                })",
    "                .and_then(|(len1, len2)| Some(len1.saturating_add(len2)));",
    "        }",
    "        Hir {",
    "            kind: HirKind::Concat(subs),",
    "            is_start_anchored,",
    "            is_match_empty,",
    "            static_explicit_captures_len,",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 5,
    "contra": 2,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "subs.is_empty()",
          "norm": null,
          "value": "true",
          "line": 312,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "subs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 312,
          "bound": null
        },
        {
          "cond": "subs.len() == 1",
          "norm": "1 == subs.len()",
          "value": "false",
          "line": 314,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        7,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "subs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 312,
          "bound": null
        },
        {
          "cond": "subs.len() == 1",
          "norm": "1 == subs.len()",
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "sub in subs.iter()",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        },
        {
          "cond": "is_match_empty",
          "norm": null,
          "value": "true",
          "line": 321,
          "bound": null
        },
        {
          "cond": "sub in subs.iter()",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": "Hir {\n                kind: HirKind::Concat(subs),\n                is_start_anchored,\n                is_match_empty,\n                static_explicit_captures_len,\n            }",
      "path": [
        0,
        1,
        3,
        4,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        20,
        22,
        23,
        24,
        13,
        14,
        15,
        17,
        19,
        25,
        26,
        27,
        28,
        29
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "subs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 312,
          "bound": null
        },
        {
          "cond": "subs.len() == 1",
          "norm": "1 == subs.len()",
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "sub in subs.iter()",
          "norm": null,
          "value": "true",
          "line": 320,
          "bound": null
        },
        {
          "cond": "is_match_empty",
          "norm": null,
          "value": "false",
          "line": 321,
          "bound": null
        },
        {
          "cond": "sub in subs.iter()",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": "Hir {\n                kind: HirKind::Concat(subs),\n                is_start_anchored,\n                is_match_empty,\n                static_explicit_captures_len,\n            }",
      "path": [
        0,
        1,
        3,
        4,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        18,
        21,
        22,
        23,
        24,
        13,
        14,
        15,
        17,
        19,
        25,
        26,
        27,
        28,
        29
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "subs.is_empty()",
          "norm": null,
          "value": "false",
          "line": 312,
          "bound": null
        },
        {
          "cond": "subs.len() == 1",
          "norm": "1 == subs.len()",
          "value": "true",
          "line": 314,
          "bound": null
        },
        {
          "cond": "sub in subs.iter()",
          "norm": null,
          "value": "false",
          "line": 320,
          "bound": null
        }
      ],
      "ret": "Hir {\n                kind: HirKind::Concat(subs),\n                is_start_anchored,\n                is_match_empty,\n                static_explicit_captures_len,\n            }",
      "path": [
        0,
        1,
        3,
        4,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        17,
        19,
        25,
        26,
        27,
        28,
        29
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}