bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:107:9-107:53)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:107:9-107:53)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:107:9-107:31)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:107:9-107:31)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:107:9-107:10)
  5: _7 = &mut (*_2)
    SourceInfo(regex-lite/src/string.rs:107:9-107:10)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:107:23-107:30)
  7: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:107:23-107:30)
  8: _9 = const "Regex"
    SourceInfo(regex-lite/src/string.rs:107:23-107:30)
  9: _8 = &(*_9)
    SourceInfo(regex-lite/src/string.rs:107:23-107:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:107:9-107:31)
      kind: _6 = core::fmt::Formatter::<'_>::debug_tuple(move _7, move _8) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: _5 = &mut _6
    SourceInfo(regex-lite/src/string.rs:107:9-107:31)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:107:30-107:31)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:107:30-107:31)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  5: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  6: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:107:39-107:52)
  7: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:107:39-107:43)
  8: _14 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:107:39-107:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:107:39-107:52)
      kind: _13 = string::Regex::as_str(move _14) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:107:51-107:52)
  1: _12 = &_13
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  2: _11 = &(*_12)
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  3: _10 = move _11 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/string.rs:107:38-107:52)
  4: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:107:51-107:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:107:9-107:53)
      kind: _4 = core::fmt::DebugTuple::<'_, '_>::field(move _5, move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: _3 = &mut (*_4)
    SourceInfo(regex-lite/src/string.rs:107:9-107:53)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:107:52-107:53)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:107:52-107:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:107:9-107:62)
      kind: _0 = core::fmt::DebugTuple::<'_, '_>::finish(move _3) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:107:61-107:62)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:108:5-108:6)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:108:5-108:6)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:108:5-108:6)
  4: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:108:5-108:6)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:108:5-108:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:108:6-108:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:106:5-108:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

