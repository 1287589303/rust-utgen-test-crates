bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/string.rs:2654:13-2654:16)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:61)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:2654:30-2654:45)
  4: _5 = ((*_1).1: hir::Config)
    SourceInfo(regex-lite/src/string.rs:2654:30-2654:45)
  5: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  6: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  7: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  8: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  9: _9 = &((*_1).0: alloc::string::String)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  10: _8 = &(*_9)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
      kind: _7 = <alloc::string::String as core::ops::Deref>::deref(move _8) -> [return: bb1, unwind: bb57]
  }
  preds []
  succs [bb1, bb57]

bb1
  0: _6 = &(*_7)
    SourceInfo(regex-lite/src/string.rs:2654:47-2654:60)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:2654:59-2654:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:19-2654:61)
      kind: _4 = hir::Hir::parse(move _5, move _6) -> [return: bb2, unwind: bb57]
  }
  preds [bb0]
  succs [bb2, bb57]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:2654:60-2654:61)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:2654:60-2654:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
      kind: _3 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _4) -> [return: bb3, unwind: bb56]
  }
  preds [bb1]
  succs [bb3, bb56]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  1: PlaceMention(_3)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  2: _10 = discriminant(_3)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
      kind: switchInt(move _10) -> [0: bb6, 1: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5, bb6]

bb4
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
      kind: unreachable
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
      kind: falseEdge -> [real: bb7, imaginary: bb6]
  }
  preds [bb3]
  succs [bb6, bb7]

bb6
  0: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  1: _14 = move ((_3 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  2: _2 = move _14
    SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
      kind: drop(_14) -> [return: bb9, unwind: bb55]
  }
  preds [bb3, bb5]
  succs [bb9, bb55]

bb7
  0: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  1: _11 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  3: _13 = move _11
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:19-2654:62)
      kind: _0 = <core::result::Result<string::Regex, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _13) -> [return: bb8, unwind: bb55]
  }
  preds [bb5]
  succs [bb8, bb55]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
      kind: drop(_3) -> [return: bb37, unwind: bb57]
  }
  preds [bb7]
  succs [bb37, bb57]

bb9
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/string.rs:2654:13-2654:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
      kind: drop(_3) -> [return: bb10, unwind: bb54]
  }
  preds [bb6]
  succs [bb10, bb54]

bb10
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  3: StorageLive(_15)
    SourceInfo(regex-lite/src/string.rs:2655:13-2655:16)
  4: StorageLive(_16)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  5: StorageLive(_17)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:72)
  6: StorageLive(_18)
    SourceInfo(regex-lite/src/string.rs:2655:28-2655:43)
  7: _18 = ((*_1).2: nfa::Config)
    SourceInfo(regex-lite/src/string.rs:2655:28-2655:43)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/string.rs:2655:45-2655:65)
  9: StorageLive(_20)
    SourceInfo(regex-lite/src/string.rs:2655:45-2655:57)
  10: _20 = &((*_1).0: alloc::string::String)
    SourceInfo(regex-lite/src/string.rs:2655:45-2655:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:45-2655:65)
      kind: _19 = <alloc::string::String as core::clone::Clone>::clone(move _20) -> [return: bb11, unwind: bb54]
  }
  preds [bb9]
  succs [bb11, bb54]

bb11
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/string.rs:2655:64-2655:65)
  1: StorageLive(_21)
    SourceInfo(regex-lite/src/string.rs:2655:67-2655:71)
  2: StorageLive(_22)
    SourceInfo(regex-lite/src/string.rs:2655:67-2655:71)
  3: _22 = &_2
    SourceInfo(regex-lite/src/string.rs:2655:67-2655:71)
  4: _21 = &(*_22)
    SourceInfo(regex-lite/src/string.rs:2655:67-2655:71)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:19-2655:72)
      kind: _17 = nfa::NFA::new(move _18, move _19, move _21) -> [return: bb12, unwind: bb53]
  }
  preds [bb10]
  succs [bb12, bb53]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/string.rs:2655:71-2655:72)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/string.rs:2655:71-2655:72)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/string.rs:2655:71-2655:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
      kind: _16 = <core::result::Result<nfa::NFA, error::Error> as core::ops::Try>::branch(move _17) -> [return: bb13, unwind: bb52]
  }
  preds [bb11]
  succs [bb13, bb52]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  1: PlaceMention(_16)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  2: _23 = discriminant(_16)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
      kind: switchInt(move _23) -> [0: bb16, 1: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15, bb16]

bb14
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
      kind: unreachable
  }
  preds [bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
      kind: falseEdge -> [real: bb17, imaginary: bb16]
  }
  preds [bb13]
  succs [bb16, bb17]

bb16
  0: StorageLive(_27)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  1: _27 = move ((_16 as Continue).0: nfa::NFA)
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  2: _15 = move _27
    SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
      kind: drop(_27) -> [return: bb19, unwind: bb51]
  }
  preds [bb13, bb15]
  succs [bb19, bb51]

bb17
  0: StorageLive(_24)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  1: _24 = move ((_16 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  2: StorageLive(_26)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  3: _26 = move _24
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:19-2655:73)
      kind: _0 = <core::result::Result<string::Regex, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _26) -> [return: bb18, unwind: bb51]
  }
  preds [bb15]
  succs [bb18, bb51]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
      kind: drop(_16) -> [return: bb36, unwind: bb54]
  }
  preds [bb17]
  succs [bb36, bb54]

bb19
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
  1: FakeRead(ForLet(None), _15)
    SourceInfo(regex-lite/src/string.rs:2655:13-2655:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
      kind: drop(_16) -> [return: bb20, unwind: bb50]
  }
  preds [bb16]
  succs [bb20, bb50]

bb20
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/string.rs:2656:13-2656:19)
  3: StorageLive(_29)
    SourceInfo(regex-lite/src/string.rs:2656:31-2656:47)
  4: StorageLive(_30)
    SourceInfo(regex-lite/src/string.rs:2656:43-2656:46)
  5: _30 = move _15
    SourceInfo(regex-lite/src/string.rs:2656:43-2656:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2656:31-2656:47)
      kind: _29 = pikevm::PikeVM::new(move _30) -> [return: bb21, unwind: bb49]
  }
  preds [bb19]
  succs [bb21, bb49]

bb21
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/string.rs:2656:46-2656:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2656:22-2656:48)
      kind: _28 = alloc::sync::Arc::<pikevm::PikeVM>::new(move _29) -> [return: bb22, unwind: bb48]
  }
  preds [bb20]
  succs [bb22, bb48]

bb22
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/string.rs:2656:47-2656:48)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(regex-lite/src/string.rs:2656:13-2656:19)
  2: StorageLive(_31)
    SourceInfo(regex-lite/src/string.rs:2657:13-2657:17)
  3: StorageLive(_32)
    SourceInfo(regex-lite/src/string.rs:2658:17-2658:23)
  4: StorageLive(_33)
    SourceInfo(regex-lite/src/string.rs:2658:37-2658:44)
  5: StorageLive(_34)
    SourceInfo(regex-lite/src/string.rs:2658:37-2658:44)
  6: _34 = &_28
    SourceInfo(regex-lite/src/string.rs:2658:37-2658:44)
  7: _33 = &(*_34)
    SourceInfo(regex-lite/src/string.rs:2658:37-2658:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2658:26-2658:45)
      kind: _32 = <alloc::sync::Arc<pikevm::PikeVM> as core::clone::Clone>::clone(move _33) -> [return: bb23, unwind: bb47]
  }
  preds [bb21]
  succs [bb23, bb47]

bb23
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/string.rs:2658:44-2658:45)
  1: FakeRead(ForLet(None), _32)
    SourceInfo(regex-lite/src/string.rs:2658:17-2658:23)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/string.rs:2658:45-2658:46)
  3: StorageLive(_35)
    SourceInfo(regex-lite/src/string.rs:2659:17-2659:23)
  4: StorageLive(_36)
    SourceInfo(regex-lite/src/string.rs:2659:35-2659:62)
  5: _36 = {closure@regex-lite/src/string.rs:2659:35: 2659:42} { pikevm: move _32 }
    SourceInfo(regex-lite/src/string.rs:2659:35-2659:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2659:26-2659:63)
      kind: _35 = alloc::boxed::Box::<{closure@regex-lite/src/string.rs:2659:35: 2659:42}>::new(move _36) -> [return: bb24, unwind: bb45]
  }
  preds [bb22]
  succs [bb24, bb45]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/string.rs:2659:62-2659:63)
  1: FakeRead(ForLet(None), _35)
    SourceInfo(regex-lite/src/string.rs:2659:17-2659:23)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/string.rs:2660:28-2660:34)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/string.rs:2660:28-2660:34)
  4: _38 = move _35
    SourceInfo(regex-lite/src/string.rs:2660:28-2660:34)
  5: _37 = move _38 as alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe> (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/string.rs:2660:28-2660:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2660:33-2660:34)
      kind: drop(_38) -> [return: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/string.rs:2660:33-2660:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2660:13-2660:35)
      kind: _31 = pool::Pool::<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::new(move _37) -> [return: bb26, unwind: bb43]
  }
  preds [bb24]
  succs [bb26, bb43]

bb26
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/string.rs:2660:34-2660:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
      kind: drop(_35) -> [return: bb27, unwind: bb46]
  }
  preds [bb25]
  succs [bb27, bb46]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
      kind: drop(_32) -> [return: bb28, unwind: bb47]
  }
  preds [bb26]
  succs [bb28, bb47]

bb28
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
  1: FakeRead(ForLet(None), _31)
    SourceInfo(regex-lite/src/string.rs:2657:13-2657:17)
  2: StorageLive(_39)
    SourceInfo(regex-lite/src/string.rs:2662:12-2662:34)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/string.rs:2662:20-2662:26)
  4: _40 = move _28
    SourceInfo(regex-lite/src/string.rs:2662:20-2662:26)
  5: StorageLive(_41)
    SourceInfo(regex-lite/src/string.rs:2662:28-2662:32)
  6: _41 = move _31
    SourceInfo(regex-lite/src/string.rs:2662:28-2662:32)
  7: _39 = string::Regex { pikevm: move _40, pool: move _41 }
    SourceInfo(regex-lite/src/string.rs:2662:12-2662:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2662:33-2662:34)
      kind: drop(_41) -> [return: bb29, unwind: bb40]
  }
  preds [bb27]
  succs [bb29, bb40]

bb29
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/string.rs:2662:33-2662:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2662:33-2662:34)
      kind: drop(_40) -> [return: bb30, unwind: bb41]
  }
  preds [bb28]
  succs [bb30, bb41]

bb30
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/string.rs:2662:33-2662:34)
  1: _0 = core::result::Result::<string::Regex, error::Error>::Ok(move _39)
    SourceInfo(regex-lite/src/string.rs:2662:9-2662:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2662:34-2662:35)
      kind: drop(_39) -> [return: bb31, unwind: bb42]
  }
  preds [bb29]
  succs [bb31, bb42]

bb31
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/string.rs:2662:34-2662:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_31) -> [return: bb32, unwind: bb47]
  }
  preds [bb30]
  succs [bb32, bb47]

bb32
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_28) -> [return: bb33, unwind: bb50]
  }
  preds [bb31]
  succs [bb33, bb50]

bb33
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_15) -> [return: bb34, unwind: bb54]
  }
  preds [bb32]
  succs [bb34, bb54]

bb34
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_2) -> [return: bb35, unwind: bb57]
  }
  preds [bb33]
  succs [bb35, bb57]

bb35
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:6-2663:6)
      kind: goto -> bb39
  }
  preds [bb34]
  succs [bb39]

bb36
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_2) -> [return: bb38, unwind: bb57]
  }
  preds [bb18]
  succs [bb38, bb57]

bb37
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb8]
  succs [bb38]

bb38
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:6-2663:6)
      kind: goto -> bb39
  }
  preds [bb36, bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:6-2663:6)
      kind: return
  }
  preds [bb35, bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2662:33-2662:34)
      kind: drop(_40) -> [return: bb41, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2662:34-2662:35)
      kind: drop(_39) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb29, bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_31) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb30, bb41]
  succs [bb47]

bb43
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2660:34-2660:35)
      kind: drop(_37) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb24, bb25]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
      kind: drop(_35) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb46]

bb45
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2659:62-2659:63)
      kind: drop(_36) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb23]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2661:9-2661:10)
      kind: drop(_32) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb26, bb44, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_28) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb22, bb27, bb31, bb42, bb46]
  succs [bb50]

bb48
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2656:47-2656:48)
      kind: drop(_29) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb50]

bb49
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2656:46-2656:47)
      kind: drop(_30) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_15) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb19, bb32, bb47, bb48, bb49]
  succs [bb54]

bb51
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:73-2655:74)
      kind: drop(_16) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb16, bb17]
  succs [bb54]

bb52
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:72-2655:73)
      kind: drop(_17) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb54]

bb53
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2655:71-2655:72)
      kind: drop(_19) -> [return: bb54, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2663:5-2663:6)
      kind: drop(_2) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb18, bb33, bb50, bb51, bb52, bb53]
  succs [bb57]

bb55
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:62-2654:63)
      kind: drop(_3) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb6, bb7]
  succs [bb57]

bb56
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2654:61-2654:62)
      kind: drop(_4) -> [return: bb57, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb57]

bb57
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2653:5-2663:6)
      kind: resume
  }
  preds [bb0, bb1, bb8, bb34, bb36, bb54, bb55, bb56]
  succs []

