{
  "regex-lite/src/nfa.rs:187:17:187:57": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "ranges.len() * size_of::<(char, char)>()",
          "lhs": "ranges.len()",
          "rhs": "size_of::<(char, char)>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:177:15:177:20": [
    {
      "Match": {
        "match_source": "regex-lite/src/nfa.rs:177:15:177:20",
        "match_str": "*self",
        "match_kind": {
          "Enum": [
            "Char",
            "Ranges",
            "Splits",
            "Goto",
            "Capture",
            "Fail",
            "Match"
          ]
        },
        "arms": {
          "regex-lite/src/nfa.rs:186:13:186:45": {
            "pat": {
              "pat_str": "State::Ranges { ref ranges, .. }",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:186:49:188:14"
          },
          "regex-lite/src/nfa.rs:182:15:182:27": {
            "pat": {
              "pat_str": "State::Match",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:182:31:182:32"
          },
          "regex-lite/src/nfa.rs:178:13:178:31": {
            "pat": {
              "pat_str": "State::Char { .. }",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:182:31:182:32"
          },
          "regex-lite/src/nfa.rs:181:15:181:33": {
            "pat": {
              "pat_str": "State::Fail { .. }",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:182:31:182:32"
          },
          "regex-lite/src/nfa.rs:180:15:180:36": {
            "pat": {
              "pat_str": "State::Capture { .. }",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:182:31:182:32"
          },
          "regex-lite/src/nfa.rs:183:13:183:46": {
            "pat": {
              "pat_str": "State::Splits { ref targets, .. }",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:183:50:185:14"
          },
          "regex-lite/src/nfa.rs:179:15:179:33": {
            "pat": {
              "pat_str": "State::Goto { .. }",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:182:31:182:32"
          }
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:184:17:184:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "targets.len() * size_of::<StateID>()",
          "lhs": "targets.len()",
          "rhs": "size_of::<StateID>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}