bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:492:9-492:28)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:492:17-492:27)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:492:17-492:20)
  3: _5 = (_2.0: usize)
    SourceInfo(regex-lite/src/pikevm.rs:492:17-492:20)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:492:24-492:27)
  5: _6 = (_2.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:492:24-492:27)
  6: _4 = Ge(move _5, move _6)
    SourceInfo(regex-lite/src/pikevm.rs:492:17-492:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:492:17-492:27)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:492:26-492:27)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:492:26-492:27)
  2: _3 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:492:28-492:28)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:492:27-492:28)
  4: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:492:27-492:28)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:493:9-508:10)
  6: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:493:12-493:44)
  7: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:493:12-493:21)
  8: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:493:12-493:21)
  9: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:493:17-493:20)
  10: _12 = (_2.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:493:17-493:20)
  11: _11 = core::option::Option::<usize>::Some(move _12)
    SourceInfo(regex-lite/src/pikevm.rs:493:12-493:21)
  12: _10 = &_11
    SourceInfo(regex-lite/src/pikevm.rs:493:12-493:21)
  13: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:493:20-493:21)
  14: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:493:25-493:44)
  15: _13 = &((*_1).5: core::option::Option<usize>)
    SourceInfo(regex-lite/src/pikevm.rs:493:25-493:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:493:12-493:44)
      kind: _9 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _10, move _13) -> [return: bb3, unwind: bb25]
  }
  preds [bb0]
  succs [bb3, bb25]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:492:26-492:27)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:492:26-492:27)
  2: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:492:9-492:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:492:9-492:28)
      kind: _7 = core::panicking::panic(const "assertion failed: m.0 >= m.1") -> bb25
  }
  preds [bb0]
  succs [bb25]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:493:12-493:44)
      kind: switchInt(move _9) -> [0: bb22, otherwise: bb4]
  }
  preds [bb1]
  succs [bb4, bb22]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:494:17-494:20)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:495:35-495:76)
  5: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:495:35-495:74)
  6: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:495:48-495:73)
  7: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:495:62-495:73)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:495:49-495:62)
  9: _19 = &(*((*_1).2: &[u8]))
    SourceInfo(regex-lite/src/pikevm.rs:495:49-495:62)
  10: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:495:63-495:72)
  11: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:495:63-495:70)
  12: _21 = ((*_1).3: usize)
    SourceInfo(regex-lite/src/pikevm.rs:495:63-495:70)
  13: _20 = core::ops::RangeFrom::<usize> { start: move _21 }
    SourceInfo(regex-lite/src/pikevm.rs:495:63-495:72)
  14: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:495:71-495:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:495:62-495:73)
      kind: _18 = <[u8] as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _19, move _20) -> [return: bb5, unwind: bb25]
  }
  preds [bb3]
  succs [bb5, bb25]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:495:72-495:73)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:495:72-495:73)
  2: _17 = &(*_18)
    SourceInfo(regex-lite/src/pikevm.rs:495:48-495:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:495:35-495:74)
      kind: _16 = utf8::decode::<&[u8]>(move _17) -> [return: bb6, unwind: bb25]
  }
  preds [bb4]
  succs [bb6, bb25]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:495:73-495:74)
  1: _15 = (_16.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:495:35-495:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:495:17-495:77)
      kind: _14 = core::cmp::max::<usize>(const 1_usize, move _15) -> [return: bb7, unwind: bb25]
  }
  preds [bb5]
  succs [bb7, bb25]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:495:76-495:77)
  1: FakeRead(ForLet(None), _14)
    SourceInfo(regex-lite/src/pikevm.rs:494:17-494:20)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:495:77-495:78)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:495:77-495:78)
  4: StorageLive(_22)
    SourceInfo(regex-lite/src/pikevm.rs:496:23-496:56)
  5: StorageLive(_23)
    SourceInfo(regex-lite/src/pikevm.rs:496:23-496:47)
  6: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:496:23-496:30)
  7: _24 = ((*_1).3: usize)
    SourceInfo(regex-lite/src/pikevm.rs:496:23-496:30)
  8: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:496:43-496:46)
  9: _25 = _14
    SourceInfo(regex-lite/src/pikevm.rs:496:43-496:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:496:23-496:47)
      kind: _23 = core::num::<impl usize>::checked_add(move _24, move _25) -> [return: bb8, unwind: bb25]
  }
  preds [bb6]
  succs [bb8, bb25]

bb8
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:496:46-496:47)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:496:46-496:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:496:23-496:56)
      kind: _22 = core::option::Option::<usize>::unwrap(move _23) -> [return: bb9, unwind: bb25]
  }
  preds [bb7]
  succs [bb9, bb25]

bb9
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/pikevm.rs:496:55-496:56)
  1: ((*_1).3: usize) = move _22
    SourceInfo(regex-lite/src/pikevm.rs:496:13-496:56)
  2: StorageDead(_22)
    SourceInfo(regex-lite/src/pikevm.rs:496:55-496:56)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:497:13-506:14)
  4: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:497:17-504:14)
  5: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:497:17-497:28)
  6: _28 = &(*((*_1).0: &pikevm::PikeVM))
    SourceInfo(regex-lite/src/pikevm.rs:497:17-497:28)
  7: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  8: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  9: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  10: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  11: _32 = &mut ((*_1).1: pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  12: _31 = &mut (*_32)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
      kind: _30 = <pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _31) -> [return: bb10, unwind: bb25]
  }
  preds [bb8]
  succs [bb10, bb25]

bb10
  0: _29 = &mut (*_30)
    SourceInfo(regex-lite/src/pikevm.rs:498:17-498:32)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:498:31-498:32)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:499:17-499:30)
  3: _33 = &(*((*_1).2: &[u8]))
    SourceInfo(regex-lite/src/pikevm.rs:499:17-499:30)
  4: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:500:17-500:24)
  5: _34 = ((*_1).3: usize)
    SourceInfo(regex-lite/src/pikevm.rs:500:17-500:24)
  6: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:501:17-501:36)
  7: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:501:17-501:30)
  8: _36 = &(*((*_1).2: &[u8]))
    SourceInfo(regex-lite/src/pikevm.rs:501:17-501:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:501:17-501:36)
      kind: _35 = core::slice::<impl [u8]>::len(move _36) -> [return: bb11, unwind: bb25]
  }
  preds [bb9]
  succs [bb11, bb25]

bb11
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:501:35-501:36)
  1: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  2: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  3: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  4: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  5: _40 = &mut ((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  6: _39 = &mut (*_40)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
      kind: _38 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::DerefMut>::deref_mut(move _39) -> [return: bb12, unwind: bb25]
  }
  preds [bb10]
  succs [bb12, bb25]

bb12
  0: _37 = &mut (*_38)
    SourceInfo(regex-lite/src/pikevm.rs:503:17-503:32)
  1: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:503:31-503:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:497:17-504:14)
      kind: _27 = pikevm::PikeVM::search(move _28, move _29, move _33, move _34, move _35, const false, move _37) -> [return: bb13, unwind: bb25]
  }
  preds [bb11]
  succs [bb13, bb25]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:497:17-504:14)
      kind: switchInt(move _27) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  1: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  3: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  4: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  6: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  7: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  8: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  9: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  10: _26 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:506:14-506:14)
  11: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:506:13-506:14)
  12: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:506:13-506:14)
  13: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:46)
  14: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:40)
  15: StorageLive(_44)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:31)
  16: StorageLive(_45)
    SourceInfo(regex-lite/src/pikevm.rs:507:28-507:31)
  17: StorageLive(_46)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:28)
  18: _46 = &((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:28-507:31)
      kind: _45 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Index<usize>>::index(move _46, const 0_usize) -> [return: bb16, unwind: bb25]
  }
  preds [bb13]
  succs [bb16, bb25]

bb15
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  1: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  3: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  4: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  6: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  7: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  8: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  9: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:504:13-504:14)
  10: _0 = core::option::Option::<(usize, usize)>::None
    SourceInfo(regex-lite/src/pikevm.rs:505:24-505:28)
  11: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:506:13-506:14)
  12: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:506:13-506:14)
  13: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  14: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  15: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:510:6-510:6)
      kind: goto -> bb24
  }
  preds [bb13]
  succs [bb24]

bb16
  0: _44 = (*_45)
    SourceInfo(regex-lite/src/pikevm.rs:507:18-507:31)
  1: StorageDead(_46)
    SourceInfo(regex-lite/src/pikevm.rs:507:30-507:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:18-507:40)
      kind: _43 = core::option::Option::<int::NonMaxUsize>::unwrap(move _44) -> [return: bb17, unwind: bb25]
  }
  preds [bb14]
  succs [bb17, bb25]

bb17
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:507:39-507:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:18-507:46)
      kind: _42 = int::NonMaxUsize::get(move _43) -> [return: bb18, unwind: bb25]
  }
  preds [bb16]
  succs [bb18, bb25]

bb18
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:507:45-507:46)
  1: StorageLive(_47)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:76)
  2: StorageLive(_48)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:70)
  3: StorageLive(_49)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:61)
  4: StorageLive(_50)
    SourceInfo(regex-lite/src/pikevm.rs:507:58-507:61)
  5: StorageLive(_51)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:58)
  6: _51 = &((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:58-507:61)
      kind: _50 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Index<usize>>::index(move _51, const 1_usize) -> [return: bb19, unwind: bb25]
  }
  preds [bb17]
  succs [bb19, bb25]

bb19
  0: _49 = (*_50)
    SourceInfo(regex-lite/src/pikevm.rs:507:48-507:61)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/pikevm.rs:507:60-507:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:48-507:70)
      kind: _48 = core::option::Option::<int::NonMaxUsize>::unwrap(move _49) -> [return: bb20, unwind: bb25]
  }
  preds [bb18]
  succs [bb20, bb25]

bb20
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/pikevm.rs:507:69-507:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:507:48-507:76)
      kind: _47 = int::NonMaxUsize::get(move _48) -> [return: bb21, unwind: bb25]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:507:75-507:76)
  1: _2 = (move _42, move _47)
    SourceInfo(regex-lite/src/pikevm.rs:507:13-507:77)
  2: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:507:76-507:77)
  3: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:507:76-507:77)
  4: StorageDead(_50)
    SourceInfo(regex-lite/src/pikevm.rs:507:77-507:78)
  5: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:507:77-507:78)
  6: _8 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:493:45-508:10)
  7: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:493:9-508:10)
      kind: goto -> bb23
  }
  preds [bb20]
  succs [bb23]

bb22
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:493:43-493:44)
  3: _8 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:508:10-508:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:493:9-508:10)
      kind: goto -> bb23
  }
  preds [bb3]
  succs [bb23]

bb23
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:508:9-508:10)
  2: StorageLive(_52)
    SourceInfo(regex-lite/src/pikevm.rs:509:14-509:15)
  3: _52 = _2
    SourceInfo(regex-lite/src/pikevm.rs:509:14-509:15)
  4: _0 = core::option::Option::<(usize, usize)>::Some(move _52)
    SourceInfo(regex-lite/src/pikevm.rs:509:9-509:16)
  5: StorageDead(_52)
    SourceInfo(regex-lite/src/pikevm.rs:509:15-509:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:510:6-510:6)
      kind: goto -> bb24
  }
  preds [bb21, bb22]
  succs [bb24]

bb24
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:510:6-510:6)
      kind: return
  }
  preds [bb15, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:488:5-510:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb14, bb16, bb17, bb18, bb19, bb20]
  succs []

