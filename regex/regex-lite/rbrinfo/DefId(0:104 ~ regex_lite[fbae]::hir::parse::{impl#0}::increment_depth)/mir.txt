bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:190:13-190:16)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:190:19-190:29)
  2: _3 = &((*_1).2: core::cell::Cell<u32>)
    SourceInfo(regex-lite/src/hir/parse.rs:190:19-190:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:190:19-190:35)
      kind: _2 = core::cell::Cell::<u32>::get(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:190:34-190:35)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:190:13-190:16)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:191:9-193:10)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:191:12-191:40)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:191:12-191:15)
  5: _6 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:191:12-191:15)
  6: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:191:18-191:40)
  7: _7 = (((*_1).0: hir::Config).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:191:18-191:40)
  8: _5 = Gt(move _6, move _7)
    SourceInfo(regex-lite/src/hir/parse.rs:191:12-191:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:191:12-191:40)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:191:39-191:40)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:191:39-191:40)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:192:24-192:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:192:24-192:56)
      kind: _9 = error::Error::new(const hir::parse::ERR_TOO_MUCH_NESTING) -> [return: bb3, unwind: bb9]
  }
  preds [bb1]
  succs [bb3, bb9]

bb3
  0: _0 = core::result::Result::<u32, error::Error>::Err(move _9)
    SourceInfo(regex-lite/src/hir/parse.rs:192:20-192:57)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:192:56-192:57)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:193:9-193:10)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:193:9-193:10)
  4: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:199:5-199:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:199:6-199:6)
      kind: goto -> bb8
  }
  preds [bb2]
  succs [bb8]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:191:39-191:40)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:191:39-191:40)
  2: _4 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:193:10-193:10)
  3: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:193:9-193:10)
  4: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:193:9-193:10)
  5: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:196:13-196:16)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:196:19-196:37)
  7: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:196:19-196:22)
  8: _12 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:196:19-196:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:196:19-196:37)
      kind: _11 = core::num::<impl u32>::checked_add(move _12, const 1_u32) -> [return: bb5, unwind: bb9]
  }
  preds [bb1]
  succs [bb5, bb9]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:196:36-196:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:196:19-196:46)
      kind: _10 = core::option::Option::<u32>::unwrap(move _11) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:196:45-196:46)
  1: FakeRead(ForLet(None), _10)
    SourceInfo(regex-lite/src/hir/parse.rs:196:13-196:16)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:197:9-197:28)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:197:9-197:19)
  4: _14 = &((*_1).2: core::cell::Cell<u32>)
    SourceInfo(regex-lite/src/hir/parse.rs:197:9-197:19)
  5: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:197:24-197:27)
  6: _15 = _10
    SourceInfo(regex-lite/src/hir/parse.rs:197:24-197:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:197:9-197:28)
      kind: _13 = core::cell::Cell::<u32>::set(move _14, move _15) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:197:27-197:28)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:197:27-197:28)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:197:28-197:29)
  3: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:198:12-198:15)
  4: _16 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:198:12-198:15)
  5: _0 = core::result::Result::<u32, error::Error>::Ok(move _16)
    SourceInfo(regex-lite/src/hir/parse.rs:198:9-198:16)
  6: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:198:15-198:16)
  7: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:199:5-199:6)
  8: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:199:5-199:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:199:6-199:6)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:199:6-199:6)
      kind: return
  }
  preds [bb3, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:189:5-199:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5, bb6]
  succs []

