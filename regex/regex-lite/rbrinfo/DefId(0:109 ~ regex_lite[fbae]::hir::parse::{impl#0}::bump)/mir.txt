bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:233:9-235:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:233:12-233:26)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:233:12-233:16)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:233:12-233:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:233:12-233:26)
      kind: _3 = hir::parse::Parser::<'_>::is_done(move _4) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:233:12-233:26)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:233:25-233:26)
  1: _0 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:234:20-234:25)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:235:9-235:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:235:9-235:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:239:6-239:6)
      kind: goto -> bb17
  }
  preds [bb1]
  succs [bb17]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:233:25-233:26)
  1: _2 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:235:10-235:10)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:235:9-235:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:235:9-235:10)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:236:9-236:58)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:236:9-236:17)
  6: _7 = &((*_1).3: core::cell::Cell<usize>)
    SourceInfo(regex-lite/src/hir/parse.rs:236:9-236:17)
  7: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:57)
  8: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:32)
  9: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:26)
  10: _10 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:32)
      kind: _9 = hir::parse::Parser::<'_>::pos(move _10) -> [return: bb4, unwind: bb18]
  }
  preds [bb1]
  succs [bb4, bb18]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:236:31-236:32)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:57)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:46)
  3: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:39)
  4: _13 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:46)
      kind: _12 = hir::parse::Parser::<'_>::char(move _13) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:236:45-236:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:236:35-236:57)
      kind: _11 = core::char::methods::<impl char>::len_utf8(move _12) -> [return: bb6, unwind: bb18]
  }
  preds [bb4]
  succs [bb6, bb18]

bb6
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:236:56-236:57)
  1: _14 = AddWithOverflow(_9, _11)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:57)
      kind: assert(!move (_14.1: bool), "attempt to compute `{} + {}`, which would overflow", move _9, move _11) -> [success: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: _8 = move (_14.0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:236:22-236:57)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:236:56-236:57)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:236:56-236:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:236:9-236:58)
      kind: _6 = core::cell::Cell::<usize>::set(move _7, move _8) -> [return: bb8, unwind: bb18]
  }
  preds [bb6]
  succs [bb8, bb18]

bb8
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:236:57-236:58)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:236:57-236:58)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:236:58-236:59)
  3: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:237:9-237:67)
  4: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:237:9-237:18)
  5: _16 = &((*_1).4: core::cell::Cell<core::option::Option<char>>)
    SourceInfo(regex-lite/src/hir/parse.rs:237:9-237:18)
  6: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:66)
  7: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:59)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:59)
  9: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:51)
  10: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:237:37-237:51)
  11: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:37)
  12: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:37)
  13: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:27)
  14: _24 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:37)
      kind: _23 = hir::parse::Parser::<'_>::pattern(move _24) -> [return: bb9, unwind: bb18]
  }
  preds [bb7]
  succs [bb9, bb18]

bb9
  0: _22 = &(*_23)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:37)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:237:36-237:37)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:50)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:48)
  4: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:42)
  5: _27 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:48)
      kind: _26 = hir::parse::Parser::<'_>::pos(move _27) -> [return: bb10, unwind: bb18]
  }
  preds [bb8]
  succs [bb10, bb18]

bb10
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:237:47-237:48)
  1: _25 = core::ops::RangeFrom::<usize> { start: move _26 }
    SourceInfo(regex-lite/src/hir/parse.rs:237:38-237:50)
  2: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:237:49-237:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:37-237:51)
      kind: _21 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _22, move _25) -> [return: bb11, unwind: bb18]
  }
  preds [bb9]
  succs [bb11, bb18]

bb11
  0: _20 = &(*_21)
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:51)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:237:50-237:51)
  2: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:237:50-237:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:59)
      kind: _19 = core::str::<impl str>::chars(move _20) -> [return: bb12, unwind: bb18]
  }
  preds [bb10]
  succs [bb12, bb18]

bb12
  0: _18 = &mut _19
    SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:59)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:237:58-237:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:23-237:66)
      kind: _17 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _18) -> [return: bb13, unwind: bb18]
  }
  preds [bb11]
  succs [bb13, bb18]

bb13
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:237:65-237:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:237:9-237:67)
      kind: _15 = core::cell::Cell::<core::option::Option<char>>::set(move _16, move _17) -> [return: bb14, unwind: bb18]
  }
  preds [bb12]
  succs [bb14, bb18]

bb14
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:237:66-237:67)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:237:66-237:67)
  2: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:237:67-237:68)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:237:67-237:68)
  4: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:237:67-237:68)
  5: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:237:67-237:68)
  6: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:24)
  7: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:24)
  8: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:18)
  9: _30 = &((*_1).4: core::cell::Cell<core::option::Option<char>>)
    SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:24)
      kind: _29 = core::cell::Cell::<core::option::Option<char>>::get(move _30) -> [return: bb15, unwind: bb18]
  }
  preds [bb13]
  succs [bb15, bb18]

bb15
  0: _28 = &_29
    SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:24)
  1: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:238:23-238:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:238:9-238:34)
      kind: _0 = core::option::Option::<char>::is_some(move _28) -> [return: bb16, unwind: bb18]
  }
  preds [bb14]
  succs [bb16, bb18]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:238:33-238:34)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:239:5-239:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:239:6-239:6)
      kind: goto -> bb17
  }
  preds [bb15]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:239:6-239:6)
      kind: return
  }
  preds [bb2, bb16]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:232:5-239:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15]
  succs []

