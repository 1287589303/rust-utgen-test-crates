bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/nfa.rs:294:16-294:26)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:294:16-294:19)
  2: _4 = &(*_2)
    SourceInfo(regex-lite/src/nfa.rs:294:16-294:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:294:16-294:26)
      kind: _3 = hir::Hir::kind(move _4) -> [return: bb1, unwind: bb34]
  }
  preds []
  succs [bb1, bb34]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:294:25-294:26)
  1: PlaceMention((*_3))
    SourceInfo(regex-lite/src/nfa.rs:294:15-294:26)
  2: _5 = discriminant((*_3))
    SourceInfo(regex-lite/src/nfa.rs:294:15-294:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:294:9-294:26)
      kind: switchInt(move _5) -> [0: bb3, 1: bb4, 2: bb5, 3: bb6, 4: bb7, 5: bb8, 6: bb9, 7: bb10, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_3))
    SourceInfo(regex-lite/src/nfa.rs:294:15-294:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:294:15-294:26)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:295:13-295:27)
      kind: falseEdge -> [real: bb11, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb11]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:296:13-296:30)
      kind: falseEdge -> [real: bb13, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb13]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:297:13-297:38)
      kind: falseEdge -> [real: bb15, imaginary: bb6]
  }
  preds [bb1, bb4]
  succs [bb6, bb15]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:298:13-298:36)
      kind: falseEdge -> [real: bb17, imaginary: bb7]
  }
  preds [bb1, bb5]
  succs [bb7, bb17]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:299:13-299:41)
      kind: falseEdge -> [real: bb19, imaginary: bb8]
  }
  preds [bb1, bb6]
  succs [bb8, bb19]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:300:13-300:38)
      kind: falseEdge -> [real: bb21, imaginary: bb9]
  }
  preds [bb1, bb7]
  succs [bb9, bb21]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:303:13-303:38)
      kind: falseEdge -> [real: bb24, imaginary: bb10]
  }
  preds [bb1, bb8]
  succs [bb10, bb24]

bb10
  0: StorageLive(_35)
    SourceInfo(regex-lite/src/nfa.rs:306:34-306:42)
  1: _35 = &(((*_3) as Alternation).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/nfa.rs:306:34-306:42)
  2: StorageLive(_36)
    SourceInfo(regex-lite/src/nfa.rs:307:17-307:21)
  3: _36 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:307:17-307:21)
  4: StorageLive(_37)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:66)
  5: StorageLive(_38)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:47)
  6: StorageLive(_39)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:40)
  7: StorageLive(_40)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:47)
  8: StorageLive(_41)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:40)
  9: _41 = &(*_35)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:307:36-307:47)
      kind: _40 = <alloc::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _41) -> [return: bb29, unwind: bb34]
  }
  preds [bb1, bb9]
  succs [bb29, bb34]

bb11
  0: StorageLive(_6)
    SourceInfo(regex-lite/src/nfa.rs:295:31-295:35)
  1: _6 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:295:31-295:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:295:31-295:45)
      kind: _0 = nfa::Compiler::c_empty(move _6) -> [return: bb12, unwind: bb34]
  }
  preds [bb3]
  succs [bb12, bb34]

bb12
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:295:44-295:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:295:44-295:45)
      kind: goto -> bb33
  }
  preds [bb11]
  succs [bb33]

bb13
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:296:27-296:29)
  1: _7 = (((*_3) as Char).0: char)
    SourceInfo(regex-lite/src/nfa.rs:296:27-296:29)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/nfa.rs:296:34-296:38)
  3: _8 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:296:34-296:38)
  4: StorageLive(_9)
    SourceInfo(regex-lite/src/nfa.rs:296:46-296:48)
  5: _9 = _7
    SourceInfo(regex-lite/src/nfa.rs:296:46-296:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:296:34-296:49)
      kind: _0 = nfa::Compiler::c_char(move _8, move _9) -> [return: bb14, unwind: bb34]
  }
  preds [bb4]
  succs [bb14, bb34]

bb14
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/nfa.rs:296:48-296:49)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/nfa.rs:296:48-296:49)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:296:48-296:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:296:48-296:49)
      kind: goto -> bb33
  }
  preds [bb13]
  succs [bb33]

bb15
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/nfa.rs:297:28-297:37)
  1: _10 = &(((*_3) as Class).0: hir::Class)
    SourceInfo(regex-lite/src/nfa.rs:297:28-297:37)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/nfa.rs:297:42-297:46)
  3: _11 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:297:42-297:46)
  4: StorageLive(_12)
    SourceInfo(regex-lite/src/nfa.rs:297:55-297:60)
  5: _12 = &(*_10)
    SourceInfo(regex-lite/src/nfa.rs:297:55-297:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:297:42-297:61)
      kind: _0 = nfa::Compiler::c_class(move _11, move _12) -> [return: bb16, unwind: bb34]
  }
  preds [bb5]
  succs [bb16, bb34]

bb16
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/nfa.rs:297:60-297:61)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/nfa.rs:297:60-297:61)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/nfa.rs:297:60-297:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:297:60-297:61)
      kind: goto -> bb33
  }
  preds [bb15]
  succs [bb33]

bb17
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/nfa.rs:298:27-298:35)
  1: _13 = &(((*_3) as Look).0: hir::Look)
    SourceInfo(regex-lite/src/nfa.rs:298:27-298:35)
  2: StorageLive(_14)
    SourceInfo(regex-lite/src/nfa.rs:298:40-298:44)
  3: _14 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:298:40-298:44)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/nfa.rs:298:52-298:56)
  5: _15 = &(*_13)
    SourceInfo(regex-lite/src/nfa.rs:298:52-298:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:298:40-298:57)
      kind: _0 = nfa::Compiler::c_look(move _14, move _15) -> [return: bb18, unwind: bb34]
  }
  preds [bb6]
  succs [bb18, bb34]

bb18
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/nfa.rs:298:56-298:57)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/nfa.rs:298:56-298:57)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/nfa.rs:298:56-298:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:298:56-298:57)
      kind: goto -> bb33
  }
  preds [bb17]
  succs [bb33]

bb19
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/nfa.rs:299:33-299:40)
  1: _16 = &(((*_3) as Repetition).0: hir::Repetition)
    SourceInfo(regex-lite/src/nfa.rs:299:33-299:40)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/nfa.rs:299:45-299:49)
  3: _17 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:299:45-299:49)
  4: StorageLive(_18)
    SourceInfo(regex-lite/src/nfa.rs:299:63-299:66)
  5: _18 = &(*_16)
    SourceInfo(regex-lite/src/nfa.rs:299:63-299:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:299:45-299:67)
      kind: _0 = nfa::Compiler::c_repetition(move _17, move _18) -> [return: bb20, unwind: bb34]
  }
  preds [bb7]
  succs [bb20, bb34]

bb20
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/nfa.rs:299:66-299:67)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/nfa.rs:299:66-299:67)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/nfa.rs:299:66-299:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:299:66-299:67)
      kind: goto -> bb33
  }
  preds [bb19]
  succs [bb33]

bb21
  0: StorageLive(_19)
    SourceInfo(regex-lite/src/nfa.rs:300:30-300:37)
  1: _19 = &(((*_3) as Capture).0: hir::Capture)
    SourceInfo(regex-lite/src/nfa.rs:300:30-300:37)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/nfa.rs:301:17-301:21)
  3: _20 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:301:17-301:21)
  4: StorageLive(_21)
    SourceInfo(regex-lite/src/nfa.rs:301:32-301:41)
  5: _21 = ((*_19).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:301:32-301:41)
  6: StorageLive(_22)
    SourceInfo(regex-lite/src/nfa.rs:301:43-301:62)
  7: StorageLive(_23)
    SourceInfo(regex-lite/src/nfa.rs:301:43-301:51)
  8: _23 = &((*_19).1: core::option::Option<alloc::boxed::Box<str>>)
    SourceInfo(regex-lite/src/nfa.rs:301:43-301:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:301:43-301:62)
      kind: _22 = core::option::Option::<alloc::boxed::Box<str>>::as_deref(move _23) -> [return: bb22, unwind: bb34]
  }
  preds [bb8]
  succs [bb22, bb34]

bb22
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/nfa.rs:301:61-301:62)
  1: StorageLive(_24)
    SourceInfo(regex-lite/src/nfa.rs:301:64-301:72)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/nfa.rs:301:64-301:72)
  3: _25 = &((*_19).2: alloc::boxed::Box<hir::Hir>)
    SourceInfo(regex-lite/src/nfa.rs:301:64-301:72)
  4: _24 = &(*(*_25))
    SourceInfo(regex-lite/src/nfa.rs:301:64-301:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:301:17-301:73)
      kind: _0 = nfa::Compiler::c_capture(move _20, move _21, move _22, move _24) -> [return: bb23, unwind: bb34]
  }
  preds [bb21]
  succs [bb23, bb34]

bb23
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/nfa.rs:301:72-301:73)
  1: StorageDead(_22)
    SourceInfo(regex-lite/src/nfa.rs:301:72-301:73)
  2: StorageDead(_21)
    SourceInfo(regex-lite/src/nfa.rs:301:72-301:73)
  3: StorageDead(_20)
    SourceInfo(regex-lite/src/nfa.rs:301:72-301:73)
  4: StorageDead(_25)
    SourceInfo(regex-lite/src/nfa.rs:302:13-302:14)
  5: StorageDead(_19)
    SourceInfo(regex-lite/src/nfa.rs:302:13-302:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:302:13-302:14)
      kind: goto -> bb33
  }
  preds [bb22]
  succs [bb33]

bb24
  0: StorageLive(_26)
    SourceInfo(regex-lite/src/nfa.rs:303:29-303:37)
  1: _26 = &(((*_3) as Concat).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/nfa.rs:303:29-303:37)
  2: StorageLive(_27)
    SourceInfo(regex-lite/src/nfa.rs:304:17-304:21)
  3: _27 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:304:17-304:21)
  4: StorageLive(_28)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:61)
  5: StorageLive(_29)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:42)
  6: StorageLive(_30)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:35)
  7: StorageLive(_31)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:42)
  8: StorageLive(_32)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:35)
  9: _32 = &(*_26)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:304:31-304:42)
      kind: _31 = <alloc::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _32) -> [return: bb25, unwind: bb34]
  }
  preds [bb9]
  succs [bb25, bb34]

bb25
  0: _30 = &(*_31)
    SourceInfo(regex-lite/src/nfa.rs:304:31-304:35)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/nfa.rs:304:34-304:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:304:31-304:42)
      kind: _29 = core::slice::<impl [hir::Hir]>::iter(move _30) -> [return: bb26, unwind: bb34]
  }
  preds [bb24]
  succs [bb26, bb34]

bb26
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/nfa.rs:304:41-304:42)
  1: StorageLive(_33)
    SourceInfo(regex-lite/src/nfa.rs:304:47-304:60)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/nfa.rs:304:47-304:60)
  3: _34 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:304:47-304:60)
  4: _33 = {closure@regex-lite/src/nfa.rs:304:47: 304:50} { self: move _34 }
    SourceInfo(regex-lite/src/nfa.rs:304:47-304:60)
  5: StorageDead(_34)
    SourceInfo(regex-lite/src/nfa.rs:304:49-304:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:304:31-304:61)
      kind: _28 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::map::<core::result::Result<nfa::ThompsonRef, error::Error>, {closure@regex-lite/src/nfa.rs:304:47: 304:50}>(move _29, move _33) -> [return: bb27, unwind: bb34]
  }
  preds [bb25]
  succs [bb27, bb34]

bb27
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/nfa.rs:304:60-304:61)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/nfa.rs:304:60-304:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:304:17-304:62)
      kind: _0 = nfa::Compiler::c_concat::<core::iter::Map<core::slice::Iter<'_, hir::Hir>, {closure@regex-lite/src/nfa.rs:304:47: 304:50}>>(move _27, move _28) -> [return: bb28, unwind: bb34]
  }
  preds [bb26]
  succs [bb28, bb34]

bb28
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/nfa.rs:304:61-304:62)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/nfa.rs:304:61-304:62)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/nfa.rs:305:13-305:14)
  3: StorageDead(_26)
    SourceInfo(regex-lite/src/nfa.rs:305:13-305:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:305:13-305:14)
      kind: goto -> bb33
  }
  preds [bb27]
  succs [bb33]

bb29
  0: _39 = &(*_40)
    SourceInfo(regex-lite/src/nfa.rs:307:36-307:40)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/nfa.rs:307:39-307:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:307:36-307:47)
      kind: _38 = core::slice::<impl [hir::Hir]>::iter(move _39) -> [return: bb30, unwind: bb34]
  }
  preds [bb10]
  succs [bb30, bb34]

bb30
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/nfa.rs:307:46-307:47)
  1: StorageLive(_42)
    SourceInfo(regex-lite/src/nfa.rs:307:52-307:65)
  2: StorageLive(_43)
    SourceInfo(regex-lite/src/nfa.rs:307:52-307:65)
  3: _43 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:307:52-307:65)
  4: _42 = {closure@regex-lite/src/nfa.rs:307:52: 307:55} { self: move _43 }
    SourceInfo(regex-lite/src/nfa.rs:307:52-307:65)
  5: StorageDead(_43)
    SourceInfo(regex-lite/src/nfa.rs:307:54-307:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:307:36-307:66)
      kind: _37 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::map::<core::result::Result<nfa::ThompsonRef, error::Error>, {closure@regex-lite/src/nfa.rs:307:52: 307:55}>(move _38, move _42) -> [return: bb31, unwind: bb34]
  }
  preds [bb29]
  succs [bb31, bb34]

bb31
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/nfa.rs:307:65-307:66)
  1: StorageDead(_38)
    SourceInfo(regex-lite/src/nfa.rs:307:65-307:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:307:17-307:67)
      kind: _0 = nfa::Compiler::c_alternation::<core::iter::Map<core::slice::Iter<'_, hir::Hir>, {closure@regex-lite/src/nfa.rs:307:52: 307:55}>>(move _36, move _37) -> [return: bb32, unwind: bb34]
  }
  preds [bb30]
  succs [bb32, bb34]

bb32
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/nfa.rs:307:66-307:67)
  1: StorageDead(_36)
    SourceInfo(regex-lite/src/nfa.rs:307:66-307:67)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/nfa.rs:308:13-308:14)
  3: StorageDead(_35)
    SourceInfo(regex-lite/src/nfa.rs:308:13-308:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:308:13-308:14)
      kind: goto -> bb33
  }
  preds [bb31]
  succs [bb33]

bb33
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:310:5-310:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:310:6-310:6)
      kind: return
  }
  preds [bb12, bb14, bb16, bb18, bb20, bb23, bb28, bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:293:5-310:6)
      kind: resume
  }
  preds [bb0, bb10, bb11, bb13, bb15, bb17, bb19, bb21, bb22, bb24, bb25, bb26, bb27, bb29, bb30, bb31]
  succs []

