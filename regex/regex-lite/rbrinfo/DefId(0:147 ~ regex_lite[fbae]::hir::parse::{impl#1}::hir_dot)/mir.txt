bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:45)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:24)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:16)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:24)
      kind: _3 = hir::parse::Parser::<'_>::flags(move _4) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:23-1228:24)
  1: _2 = (_3.2: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1228:12-1228:45)
      kind: switchInt(move _2) -> [0: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:44-1228:45)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1229:24-1232:16)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1229:40-1232:15)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1229:41-1232:14)
  4: _7 = hir::ClassRange { start: const '\0', end: const '\u{10ffff}' }
    SourceInfo(regex-lite/src/hir/parse.rs:1229:41-1232:14)
  5: _6 = [move _7]
    SourceInfo(regex-lite/src/hir/parse.rs:1229:40-1232:15)
  6: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1232:14-1232:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1229:24-1232:16)
      kind: _5 = hir::Class::new::<[hir::ClassRange; 1]>(move _6) -> [return: bb3, unwind: bb18]
  }
  preds [bb1]
  succs [bb3, bb18]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1232:15-1232:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1229:13-1232:17)
      kind: _0 = hir::Hir::class(move _5) -> [return: bb4, unwind: bb17]
  }
  preds [bb2]
  succs [bb4, bb17]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1232:16-1232:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1228:9-1244:10)
      kind: goto -> bb14
  }
  preds [bb3]
  succs [bb14]

bb5
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1228:44-1228:45)
  1: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:36)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:31)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:23)
  4: _10 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:31)
      kind: _9 = hir::parse::Parser::<'_>::flags(move _10) -> [return: bb6, unwind: bb18]
  }
  preds [bb1]
  succs [bb6, bb18]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:30-1233:31)
  1: _8 = (_9.4: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1233:19-1233:36)
      kind: switchInt(move _8) -> [0: bb10, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb10]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:35-1233:36)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1234:24-1238:15)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1234:40-1238:14)
  3: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1235:17-1235:63)
  4: _13 = hir::ClassRange { start: const '\0', end: const '\t' }
    SourceInfo(regex-lite/src/hir/parse.rs:1235:17-1235:63)
  5: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1236:17-1236:63)
  6: _14 = hir::ClassRange { start: const '\u{b}', end: const '\u{c}' }
    SourceInfo(regex-lite/src/hir/parse.rs:1236:17-1236:63)
  7: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1237:17-1237:69)
  8: _15 = hir::ClassRange { start: const '\u{e}', end: const '\u{10ffff}' }
    SourceInfo(regex-lite/src/hir/parse.rs:1237:17-1237:69)
  9: _12 = [move _13, move _14, move _15]
    SourceInfo(regex-lite/src/hir/parse.rs:1234:40-1238:14)
  10: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1238:13-1238:14)
  11: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1238:13-1238:14)
  12: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1238:13-1238:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1234:24-1238:15)
      kind: _11 = hir::Class::new::<[hir::ClassRange; 3]>(move _12) -> [return: bb8, unwind: bb18]
  }
  preds [bb6]
  succs [bb8, bb18]

bb8
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1238:14-1238:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1234:13-1238:16)
      kind: _0 = hir::Hir::class(move _11) -> [return: bb9, unwind: bb16]
  }
  preds [bb7]
  succs [bb9, bb16]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1238:15-1238:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1233:16-1244:10)
      kind: goto -> bb13
  }
  preds [bb8]
  succs [bb13]

bb10
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1233:35-1233:36)
  1: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1240:24-1243:15)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:1240:40-1243:14)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:1241:17-1241:63)
  4: _18 = hir::ClassRange { start: const '\0', end: const '\t' }
    SourceInfo(regex-lite/src/hir/parse.rs:1241:17-1241:63)
  5: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:1242:17-1242:69)
  6: _19 = hir::ClassRange { start: const '\u{b}', end: const '\u{10ffff}' }
    SourceInfo(regex-lite/src/hir/parse.rs:1242:17-1242:69)
  7: _17 = [move _18, move _19]
    SourceInfo(regex-lite/src/hir/parse.rs:1240:40-1243:14)
  8: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:1243:13-1243:14)
  9: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:1243:13-1243:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1240:24-1243:15)
      kind: _16 = hir::Class::new::<[hir::ClassRange; 2]>(move _17) -> [return: bb11, unwind: bb18]
  }
  preds [bb6]
  succs [bb11, bb18]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:1243:14-1243:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1240:13-1243:16)
      kind: _0 = hir::Hir::class(move _16) -> [return: bb12, unwind: bb15]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1243:15-1243:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1233:16-1244:10)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1244:9-1244:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1228:9-1244:10)
      kind: goto -> bb14
  }
  preds [bb9, bb12]
  succs [bb14]

bb14
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1244:9-1244:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1245:6-1245:6)
      kind: return
  }
  preds [bb4, bb13]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1243:15-1243:16)
      kind: drop(_16) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb18]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1238:15-1238:16)
      kind: drop(_11) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb18]

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1232:16-1232:17)
      kind: drop(_5) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1227:5-1245:6)
      kind: resume
  }
  preds [bb0, bb2, bb5, bb7, bb10, bb15, bb16, bb17]
  succs []

