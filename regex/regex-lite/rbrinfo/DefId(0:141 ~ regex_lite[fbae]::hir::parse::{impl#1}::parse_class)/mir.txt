bb0
  0: StorageLive(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:981:20-981:31)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:981:20-981:24)
  5: _6 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:981:20-981:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:981:20-981:31)
      kind: _5 = hir::parse::Parser::<'_>::char(move _6) -> [return: bb1, unwind: bb116]
  }
  preds []
  succs [bb1, bb116]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:981:30-981:31)
  1: _4 = &_5
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  3: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:981:33-981:36)
  4: _8 = const '['
    SourceInfo(regex-lite/src/hir/parse.rs:981:33-981:36)
  5: _7 = &_8
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  6: _3 = (move _4, move _7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  7: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  9: PlaceMention(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  10: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  11: _9 = (_3.0: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  12: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  13: _10 = (_3.1: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  14: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  15: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  16: _12 = (*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  17: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  18: _13 = (*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  19: _11 = Eq(move _12, move _13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _11) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _2 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_2)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:983:13-983:22)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _23 = alloc::vec::Vec::<hir::ClassRange>::new() -> [return: bb4, unwind: bb116]
  }
  preds [bb1]
  succs [bb4, bb116]

bb3
  0: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _15 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _17 = move _15
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _19 = &(*_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _18 = &(*_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _21 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _20 = &(*_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _22 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _16 = core::panicking::assert_failed::<char, char>(move _17, move _18, move _20, move _22) -> bb116
  }
  preds [bb1]
  succs [bb116]

bb4
  0: FakeRead(ForLet(None), _23)
    SourceInfo(regex-lite/src/hir/parse.rs:983:13-983:22)
  1: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:984:9-986:10)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:984:13-984:39)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:984:13-984:17)
  4: _26 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:984:13-984:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:984:13-984:39)
      kind: _25 = hir::parse::Parser::<'_>::bump_and_bump_space(move _26) -> [return: bb5, unwind: bb115]
  }
  preds [bb2]
  succs [bb5, bb115]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:984:13-984:39)
      kind: switchInt(move _25) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:984:38-984:39)
  1: _24 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:986:10-986:10)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:986:9-986:10)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:986:9-986:10)
  4: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:988:13-988:19)
  5: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:43)
  6: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:36)
  7: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:29)
  8: _32 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:36)
      kind: _31 = hir::parse::Parser::<'_>::char(move _32) -> [return: bb9, unwind: bb115]
  }
  preds [bb5]
  succs [bb9, bb115]

bb7
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:984:38-984:39)
  1: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:985:24-985:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:985:24-985:54)
      kind: _28 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED) -> [return: bb8, unwind: bb115]
  }
  preds [bb5]
  succs [bb8, bb115]

bb8
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _28)
    SourceInfo(regex-lite/src/hir/parse.rs:985:20-985:55)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:985:54-985:55)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:986:9-986:10)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:986:9-986:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb108
  }
  preds [bb7]
  succs [bb108]

bb9
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:988:35-988:36)
  1: _30 = Ne(move _31, const '^')
    SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:988:25-988:43)
      kind: switchInt(move _30) -> [0: bb11, otherwise: bb10]
  }
  preds [bb6]
  succs [bb10, bb11]

bb10
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:988:42-988:43)
  1: _29 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:989:13-989:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:988:22-995:10)
      kind: goto -> bb16
  }
  preds [bb9]
  succs [bb16]

bb11
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:988:42-988:43)
  1: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:991:13-993:14)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:991:17-991:43)
  3: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:991:17-991:21)
  4: _35 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:991:17-991:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:991:17-991:43)
      kind: _34 = hir::parse::Parser::<'_>::bump_and_bump_space(move _35) -> [return: bb12, unwind: bb115]
  }
  preds [bb9]
  succs [bb12, bb115]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:991:17-991:43)
      kind: switchInt(move _34) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:991:42-991:43)
  1: _33 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:993:14-993:14)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:993:13-993:14)
  3: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:993:13-993:14)
  4: _29 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:994:13-994:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:988:22-995:10)
      kind: goto -> bb16
  }
  preds [bb12]
  succs [bb16]

bb14
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:991:42-991:43)
  1: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:992:28-992:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:992:28-992:73)
      kind: _37 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED_AFTER_NEGATION) -> [return: bb15, unwind: bb115]
  }
  preds [bb12]
  succs [bb15, bb115]

bb15
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _37)
    SourceInfo(regex-lite/src/hir/parse.rs:992:24-992:74)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:992:73-992:74)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:993:13-993:14)
  3: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:993:13-993:14)
  4: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:995:9-995:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb14]
  succs [bb107]

bb16
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:995:9-995:10)
  1: FakeRead(ForLet(None), _29)
    SourceInfo(regex-lite/src/hir/parse.rs:988:13-988:19)
  2: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
      kind: goto -> bb17
  }
  preds [bb10, bb13]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
      kind: falseUnwind -> [real: bb18, unwind: bb115]
  }
  preds [bb16, bb23]
  succs [bb18, bb115]

bb18
  0: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:33)
  1: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:26)
  2: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:19)
  3: _42 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:26)
      kind: _41 = hir::parse::Parser::<'_>::char(move _42) -> [return: bb19, unwind: bb115]
  }
  preds [bb17]
  succs [bb19, bb115]

bb19
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:997:25-997:26)
  1: _40 = Eq(move _41, const '-')
    SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:997:15-997:33)
      kind: switchInt(move _40) -> [0: bb26, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb26]

bb20
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:997:32-997:33)
  1: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:998:13-998:65)
  2: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:998:13-998:18)
  3: _44 = &mut _23
    SourceInfo(regex-lite/src/hir/parse.rs:998:13-998:18)
  4: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:998:24-998:64)
  5: _45 = hir::ClassRange { start: const '-', end: const '-' }
    SourceInfo(regex-lite/src/hir/parse.rs:998:24-998:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:998:13-998:65)
      kind: _43 = alloc::vec::Vec::<hir::ClassRange>::push(move _44, move _45) -> [return: bb21, unwind: bb115]
  }
  preds [bb19]
  succs [bb21, bb115]

bb21
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:998:64-998:65)
  1: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:998:64-998:65)
  2: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:998:65-998:66)
  3: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:999:17-999:43)
  4: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:999:17-999:21)
  5: _47 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:999:17-999:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:999:17-999:43)
      kind: _46 = hir::parse::Parser::<'_>::bump_and_bump_space(move _47) -> [return: bb22, unwind: bb115]
  }
  preds [bb20]
  succs [bb22, bb115]

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:999:17-999:43)
      kind: switchInt(move _46) -> [0: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24]

bb23
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:999:42-999:43)
  1: _39 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1001:14-1001:14)
  2: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:1001:13-1001:14)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
      kind: goto -> bb17
  }
  preds [bb22]
  succs [bb17]

bb24
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:999:42-999:43)
  1: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:1000:28-1000:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1000:28-1000:69)
      kind: _49 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED_AFTER_DASH) -> [return: bb25, unwind: bb115]
  }
  preds [bb22]
  succs [bb25, bb115]

bb25
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _49)
    SourceInfo(regex-lite/src/hir/parse.rs:1000:24-1000:70)
  1: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:1000:69-1000:70)
  2: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:1001:13-1001:14)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb24]
  succs [bb107]

bb26
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:997:32-997:33)
  1: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
  2: _38 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:997:9-1002:10)
  3: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  4: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  5: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:1002:9-1002:10)
  6: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:9-1010:10)
  7: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:12-1005:28)
  8: StorageLive(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:12-1005:17)
  9: _55 = &_23
    SourceInfo(regex-lite/src/hir/parse.rs:1005:12-1005:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:12-1005:28)
      kind: _54 = alloc::vec::Vec::<hir::ClassRange>::is_empty(move _55) -> [return: bb27, unwind: bb115]
  }
  preds [bb19]
  succs [bb27, bb115]

bb27
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:12-1005:28)
      kind: switchInt(move _54) -> [0: bb37, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb37]

bb28
  0: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:27-1005:28)
  1: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:50)
  2: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:43)
  3: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:36)
  4: _58 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:43)
      kind: _57 = hir::parse::Parser::<'_>::char(move _58) -> [return: bb29, unwind: bb115]
  }
  preds [bb27]
  succs [bb29, bb115]

bb29
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:42-1005:43)
  1: _56 = Eq(move _57, const ']')
    SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:32-1005:50)
      kind: switchInt(move _56) -> [0: bb36, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb36]

bb30
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:49-1005:50)
  1: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:13-1006:65)
  2: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:13-1006:18)
  3: _60 = &mut _23
    SourceInfo(regex-lite/src/hir/parse.rs:1006:13-1006:18)
  4: StorageLive(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:24-1006:64)
  5: _61 = hir::ClassRange { start: const ']', end: const ']' }
    SourceInfo(regex-lite/src/hir/parse.rs:1006:24-1006:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1006:13-1006:65)
      kind: _59 = alloc::vec::Vec::<hir::ClassRange>::push(move _60, move _61) -> [return: bb31, unwind: bb115]
  }
  preds [bb29]
  succs [bb31, bb115]

bb31
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:64-1006:65)
  1: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:64-1006:65)
  2: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:1006:65-1006:66)
  3: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:1007:17-1007:43)
  4: StorageLive(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:1007:17-1007:21)
  5: _63 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1007:17-1007:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1007:17-1007:43)
      kind: _62 = hir::parse::Parser::<'_>::bump_and_bump_space(move _63) -> [return: bb32, unwind: bb115]
  }
  preds [bb30]
  succs [bb32, bb115]

bb32
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1007:17-1007:43)
      kind: switchInt(move _62) -> [0: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34]

bb33
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:1007:42-1007:43)
  1: _53 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1009:14-1009:14)
  2: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:1009:13-1009:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:9-1010:10)
      kind: goto -> bb39
  }
  preds [bb32]
  succs [bb39]

bb34
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:1007:42-1007:43)
  1: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:1008:28-1008:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1008:28-1008:72)
      kind: _65 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED_AFTER_CLOSING) -> [return: bb35, unwind: bb115]
  }
  preds [bb32]
  succs [bb35, bb115]

bb35
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _65)
    SourceInfo(regex-lite/src/hir/parse.rs:1008:24-1008:73)
  1: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:1008:72-1008:73)
  2: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:1009:13-1009:14)
  3: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  4: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  5: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb34]
  succs [bb107]

bb36
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:49-1005:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb29]
  succs [bb38]

bb37
  0: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:1005:27-1005:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb27]
  succs [bb38]

bb38
  0: _53 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1010:10-1010:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1005:9-1010:10)
      kind: goto -> bb39
  }
  preds [bb36, bb37]
  succs [bb39]

bb39
  0: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  1: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  2: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1010:9-1010:10)
  3: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:1011:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1011:9-1058:10)
      kind: goto -> bb40
  }
  preds [bb33, bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1011:9-1058:10)
      kind: falseUnwind -> [real: bb41, unwind: bb115]
  }
  preds [bb39, bb99, bb103]
  succs [bb41, bb115]

bb41
  0: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1012:13-1012:30)
  1: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1012:13-1012:17)
  2: _68 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1012:13-1012:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1012:13-1012:30)
      kind: _67 = hir::parse::Parser::<'_>::bump_space(move _68) -> [return: bb42, unwind: bb115]
  }
  preds [bb40]
  succs [bb42, bb115]

bb42
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1012:29-1012:30)
  1: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1012:30-1012:31)
  2: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:13-1015:14)
  3: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:16-1013:30)
  4: StorageLive(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:16-1013:20)
  5: _71 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:16-1013:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1013:16-1013:30)
      kind: _70 = hir::parse::Parser::<'_>::is_done(move _71) -> [return: bb43, unwind: bb115]
  }
  preds [bb41]
  succs [bb43, bb115]

bb43
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1013:16-1013:30)
      kind: switchInt(move _70) -> [0: bb46, otherwise: bb44]
  }
  preds [bb42]
  succs [bb44, bb46]

bb44
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:29-1013:30)
  1: StorageLive(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:1014:28-1014:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1014:28-1014:58)
      kind: _73 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED) -> [return: bb45, unwind: bb115]
  }
  preds [bb43]
  succs [bb45, bb115]

bb45
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _73)
    SourceInfo(regex-lite/src/hir/parse.rs:1014:24-1014:59)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:1014:58-1014:59)
  2: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:1015:13-1015:14)
  3: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:1015:13-1015:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb44]
  succs [bb106]

bb46
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:1013:29-1013:30)
  1: _69 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1015:14-1015:14)
  2: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:1015:13-1015:14)
  3: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:1015:13-1015:14)
  4: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
  5: StorageLive(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:23)
  6: _75 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
      kind: _74 = hir::parse::Parser::<'_>::char(move _75) -> [return: bb47, unwind: bb115]
  }
  preds [bb43]
  succs [bb47, bb115]

bb47
  0: StorageDead(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:1016:29-1016:30)
  1: PlaceMention(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1016:13-1016:30)
      kind: switchInt(_74) -> [91: bb49, 93: bb50, 38: bb51, 45: bb52, 126: bb53, otherwise: bb48]
  }
  preds [bb46]
  succs [bb48, bb49, bb50, bb51, bb52, bb53]

bb48
  0: StorageLive(_132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  1: StorageLive(_133)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:56)
  2: StorageLive(_134)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:26)
  3: _134 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:26)
  4: StorageLive(_135)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:45-1056:55)
  5: StorageLive(_136)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:45-1056:55)
  6: _136 = &mut _23
    SourceInfo(regex-lite/src/hir/parse.rs:1056:45-1056:55)
  7: _135 = &mut (*_136)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:45-1056:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:56)
      kind: _133 = hir::parse::Parser::<'_>::parse_class_range(move _134, move _135) -> [return: bb95, unwind: bb115]
  }
  preds [bb47, bb53, bb81, bb87, bb93, bb93]
  succs [bb95, bb115]

bb49
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1017:17-1017:20)
      kind: falseEdge -> [real: bb54, imaginary: bb50]
  }
  preds [bb47]
  succs [bb50, bb54]

bb50
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1028:17-1028:20)
      kind: falseEdge -> [real: bb63, imaginary: bb51]
  }
  preds [bb47, bb49]
  succs [bb51, bb63]

bb51
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1043:17-1043:20)
      kind: falseEdge -> [real: bb77, imaginary: bb52]
  }
  preds [bb47, bb50]
  succs [bb52, bb77]

bb52
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1048:17-1048:20)
      kind: falseEdge -> [real: bb83, imaginary: bb53]
  }
  preds [bb47, bb51, bb81]
  succs [bb53, bb83]

bb53
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1051:17-1051:20)
      kind: falseEdge -> [real: bb89, imaginary: bb48]
  }
  preds [bb47, bb52, bb87]
  succs [bb48, bb89]

bb54
  0: StorageLive(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:21-1024:22)
  1: StorageLive(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:72)
  2: StorageLive(_80)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:46)
  3: _80 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:72)
      kind: _79 = hir::parse::Parser::<'_>::maybe_parse_posix_class(move _80) -> [return: bb55, unwind: bb115]
  }
  preds [bb49]
  succs [bb55, bb115]

bb55
  0: StorageDead(_80)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:71-1021:72)
  1: PlaceMention(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:72)
  2: _81 = discriminant(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:42-1021:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1021:28-1021:39)
      kind: switchInt(move _81) -> [1: bb56, otherwise: bb60]
  }
  preds [bb54]
  succs [bb56, bb60]

bb56
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1021:28-1021:39)
      kind: falseEdge -> [real: bb57, imaginary: bb60]
  }
  preds [bb55]
  succs [bb57, bb60]

bb57
  0: StorageLive(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:33-1021:38)
  1: _82 = move ((_79 as Some).0: hir::Class)
    SourceInfo(regex-lite/src/hir/parse.rs:1021:33-1021:38)
  2: StorageLive(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:25-1022:63)
  3: StorageLive(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:25-1022:30)
  4: _85 = &mut _23
    SourceInfo(regex-lite/src/hir/parse.rs:1022:25-1022:30)
  5: StorageLive(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  6: StorageLive(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  7: StorageLive(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  8: StorageLive(_89)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  9: _89 = &(_82.0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  10: _88 = &(*_89)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
      kind: _87 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref(move _88) -> [return: bb58, unwind: bb113]
  }
  preds [bb56]
  succs [bb58, bb113]

bb58
  0: _86 = &(*_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:49-1022:62)
  1: StorageDead(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:61-1022:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1022:25-1022:63)
      kind: _84 = alloc::vec::Vec::<hir::ClassRange>::extend_from_slice(move _85, move _86) -> [return: bb59, unwind: bb113]
  }
  preds [bb57]
  succs [bb59, bb113]

bb59
  0: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:62-1022:63)
  1: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:62-1022:63)
  2: StorageDead(_89)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:63-1022:64)
  3: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:63-1022:64)
  4: StorageDead(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:1022:63-1022:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
      kind: drop(_82) -> [return: bb102, unwind: bb114]
  }
  preds [bb58]
  succs [bb102, bb114]

bb60
  0: _78 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1024:22-1024:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
      kind: drop(_79) -> [return: bb61, unwind: bb115]
  }
  preds [bb55, bb56]
  succs [bb61, bb115]

bb61
  0: StorageDead(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
  1: StorageDead(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
  2: StorageLive(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:1026:32-1026:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1026:32-1026:70)
      kind: _90 = error::Error::new(const hir::parse::ERR_CLASS_NEST_UNSUPPORTED) -> [return: bb62, unwind: bb115]
  }
  preds [bb60]
  succs [bb62, bb115]

bb62
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _90)
    SourceInfo(regex-lite/src/hir/parse.rs:1026:28-1026:71)
  1: StorageDead(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:1026:70-1026:71)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1026:21-1026:71)
      kind: goto -> bb105
  }
  preds [bb61]
  succs [bb105]

bb63
  0: StorageLive(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:1029:21-1029:32)
  1: StorageLive(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:1029:21-1029:25)
  2: _93 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1029:21-1029:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1029:21-1029:32)
      kind: _92 = hir::parse::Parser::<'_>::bump(move _93) -> [return: bb64, unwind: bb115]
  }
  preds [bb50]
  succs [bb64, bb115]

bb64
  0: StorageDead(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:1029:31-1029:32)
  1: StorageDead(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:1029:32-1029:33)
  2: StorageLive(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:1030:25-1030:34)
  3: StorageLive(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:1030:53-1030:58)
  4: _95 = move _23
    SourceInfo(regex-lite/src/hir/parse.rs:1030:53-1030:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1030:37-1030:59)
      kind: _94 = hir::Class::new::<alloc::vec::Vec<hir::ClassRange>>(move _95) -> [return: bb65, unwind: bb112]
  }
  preds [bb63]
  succs [bb65, bb112]

bb65
  0: StorageDead(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:1030:58-1030:59)
  1: FakeRead(ForLet(None), _94)
    SourceInfo(regex-lite/src/hir/parse.rs:1030:25-1030:34)
  2: StorageLive(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:21-1037:22)
  3: StorageLive(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:53)
  4: StorageLive(_98)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:36)
  5: StorageLive(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:28)
  6: _99 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:36)
      kind: _98 = hir::parse::Parser::<'_>::flags(move _99) -> [return: bb66, unwind: bb111]
  }
  preds [bb64]
  succs [bb66, bb111]

bb66
  0: StorageDead(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:35-1035:36)
  1: _97 = (_98.0: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1035:24-1035:53)
      kind: switchInt(move _97) -> [0: bb69, otherwise: bb67]
  }
  preds [bb65]
  succs [bb67, bb69]

bb67
  0: StorageDead(_98)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:52-1035:53)
  1: StorageLive(_100)
    SourceInfo(regex-lite/src/hir/parse.rs:1036:25-1036:48)
  2: StorageLive(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:1036:25-1036:30)
  3: _101 = &mut _94
    SourceInfo(regex-lite/src/hir/parse.rs:1036:25-1036:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1036:25-1036:48)
      kind: _100 = hir::Class::ascii_case_fold(move _101) -> [return: bb68, unwind: bb111]
  }
  preds [bb66]
  succs [bb68, bb111]

bb68
  0: StorageDead(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:1036:47-1036:48)
  1: StorageDead(_100)
    SourceInfo(regex-lite/src/hir/parse.rs:1036:48-1036:49)
  2: _96 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1035:54-1037:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1035:21-1037:22)
      kind: goto -> bb70
  }
  preds [bb67]
  succs [bb70]

bb69
  0: StorageDead(_98)
    SourceInfo(regex-lite/src/hir/parse.rs:1035:52-1035:53)
  1: _96 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1037:22-1037:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1035:21-1037:22)
      kind: goto -> bb70
  }
  preds [bb66]
  succs [bb70]

bb70
  0: StorageDead(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:1037:21-1037:22)
  1: StorageDead(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:1037:21-1037:22)
  2: StorageLive(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:1038:21-1040:22)
  3: StorageLive(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:1038:24-1038:30)
  4: _103 = _29
    SourceInfo(regex-lite/src/hir/parse.rs:1038:24-1038:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1038:24-1038:30)
      kind: switchInt(move _103) -> [0: bb73, otherwise: bb71]
  }
  preds [bb68, bb69]
  succs [bb71, bb73]

bb71
  0: StorageLive(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:1039:25-1039:39)
  1: StorageLive(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:1039:25-1039:30)
  2: _105 = &mut _94
    SourceInfo(regex-lite/src/hir/parse.rs:1039:25-1039:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1039:25-1039:39)
      kind: _104 = hir::Class::negate(move _105) -> [return: bb72, unwind: bb111]
  }
  preds [bb70]
  succs [bb72, bb111]

bb72
  0: StorageDead(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:1039:38-1039:39)
  1: StorageDead(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:1039:39-1039:40)
  2: _102 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1038:31-1040:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1038:21-1040:22)
      kind: goto -> bb74
  }
  preds [bb71]
  succs [bb74]

bb73
  0: _102 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1040:22-1040:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1038:21-1040:22)
      kind: goto -> bb74
  }
  preds [bb70]
  succs [bb74]

bb74
  0: StorageDead(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:1040:21-1040:22)
  1: StorageDead(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:1040:21-1040:22)
  2: StorageLive(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:1041:31-1041:48)
  3: StorageLive(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:1041:42-1041:47)
  4: _107 = move _94
    SourceInfo(regex-lite/src/hir/parse.rs:1041:42-1041:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1041:31-1041:48)
      kind: _106 = hir::Hir::class(move _107) -> [return: bb75, unwind: bb110]
  }
  preds [bb72, bb73]
  succs [bb75, bb110]

bb75
  0: StorageDead(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:1041:47-1041:48)
  1: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _106)
    SourceInfo(regex-lite/src/hir/parse.rs:1041:28-1041:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1041:48-1041:49)
      kind: drop(_106) -> [return: bb76, unwind: bb111]
  }
  preds [bb74]
  succs [bb76, bb111]

bb76
  0: StorageDead(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:1041:48-1041:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1042:17-1042:18)
      kind: drop(_94) -> [return: bb104, unwind: bb115]
  }
  preds [bb75]
  succs [bb104, bb115]

bb77
  0: _76 = &fake shallow _74
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
  1: StorageLive(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:48)
  2: StorageLive(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:35)
  3: StorageLive(_110)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:35)
  4: StorageLive(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:28)
  5: _111 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:35)
      kind: _110 = hir::parse::Parser::<'_>::peek(move _111) -> [return: bb78, unwind: bb115]
  }
  preds [bb51]
  succs [bb78, bb115]

bb78
  0: _109 = &_110
    SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:35)
  1: StorageDead(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:34-1043:35)
  2: StorageLive(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:39-1043:48)
  3: StorageLive(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:39-1043:48)
  4: _113 = core::option::Option::<char>::Some(const '&')
    SourceInfo(regex-lite/src/hir/parse.rs:1043:39-1043:48)
  5: _112 = &_113
    SourceInfo(regex-lite/src/hir/parse.rs:1043:39-1043:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:48)
      kind: _108 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _109, move _112) -> [return: bb79, unwind: bb115]
  }
  preds [bb77]
  succs [bb79, bb115]

bb79
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:48)
      kind: switchInt(move _108) -> [0: bb81, otherwise: bb80]
  }
  preds [bb78]
  succs [bb80, bb81]

bb80
  0: StorageDead(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  1: StorageDead(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  2: StorageDead(_110)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  3: StorageDead(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  4: StorageDead(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  5: FakeRead(ForMatchGuard, _76)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  6: StorageLive(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:1044:32-1046:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1044:32-1046:22)
      kind: _115 = error::Error::new(const hir::parse::ERR_CLASS_INTERSECTION_UNSUPPORTED) -> [return: bb82, unwind: bb115]
  }
  preds [bb79]
  succs [bb82, bb115]

bb81
  0: StorageDead(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  1: StorageDead(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  2: StorageDead(_110)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  3: StorageDead(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  4: StorageDead(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:1043:47-1043:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1043:24-1043:48)
      kind: falseEdge -> [real: bb48, imaginary: bb52]
  }
  preds [bb79]
  succs [bb48, bb52]

bb82
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _115)
    SourceInfo(regex-lite/src/hir/parse.rs:1044:28-1046:23)
  1: StorageDead(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:1046:22-1046:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1044:21-1046:23)
      kind: goto -> bb105
  }
  preds [bb80]
  succs [bb105]

bb83
  0: _76 = &fake shallow _74
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
  1: StorageLive(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:48)
  2: StorageLive(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:35)
  3: StorageLive(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:35)
  4: StorageLive(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:28)
  5: _119 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:35)
      kind: _118 = hir::parse::Parser::<'_>::peek(move _119) -> [return: bb84, unwind: bb115]
  }
  preds [bb52]
  succs [bb84, bb115]

bb84
  0: _117 = &_118
    SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:35)
  1: StorageDead(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:34-1048:35)
  2: StorageLive(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:39-1048:48)
  3: StorageLive(_121)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:39-1048:48)
  4: _121 = core::option::Option::<char>::Some(const '-')
    SourceInfo(regex-lite/src/hir/parse.rs:1048:39-1048:48)
  5: _120 = &_121
    SourceInfo(regex-lite/src/hir/parse.rs:1048:39-1048:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:48)
      kind: _116 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _117, move _120) -> [return: bb85, unwind: bb115]
  }
  preds [bb83]
  succs [bb85, bb115]

bb85
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:48)
      kind: switchInt(move _116) -> [0: bb87, otherwise: bb86]
  }
  preds [bb84]
  succs [bb86, bb87]

bb86
  0: StorageDead(_121)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  1: StorageDead(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  2: StorageDead(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  3: StorageDead(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  4: StorageDead(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  5: FakeRead(ForMatchGuard, _76)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  6: StorageLive(_123)
    SourceInfo(regex-lite/src/hir/parse.rs:1049:32-1049:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1049:32-1049:76)
      kind: _123 = error::Error::new(const hir::parse::ERR_CLASS_DIFFERENCE_UNSUPPORTED) -> [return: bb88, unwind: bb115]
  }
  preds [bb85]
  succs [bb88, bb115]

bb87
  0: StorageDead(_121)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  1: StorageDead(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  2: StorageDead(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  3: StorageDead(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  4: StorageDead(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:1048:47-1048:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1048:24-1048:48)
      kind: falseEdge -> [real: bb48, imaginary: bb53]
  }
  preds [bb85]
  succs [bb48, bb53]

bb88
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _123)
    SourceInfo(regex-lite/src/hir/parse.rs:1049:28-1049:77)
  1: StorageDead(_123)
    SourceInfo(regex-lite/src/hir/parse.rs:1049:76-1049:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1049:21-1049:77)
      kind: goto -> bb105
  }
  preds [bb86]
  succs [bb105]

bb89
  0: _76 = &fake shallow _74
    SourceInfo(regex-lite/src/hir/parse.rs:1016:19-1016:30)
  1: StorageLive(_124)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:48)
  2: StorageLive(_125)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:35)
  3: StorageLive(_126)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:35)
  4: StorageLive(_127)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:28)
  5: _127 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:35)
      kind: _126 = hir::parse::Parser::<'_>::peek(move _127) -> [return: bb90, unwind: bb115]
  }
  preds [bb53]
  succs [bb90, bb115]

bb90
  0: _125 = &_126
    SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:35)
  1: StorageDead(_127)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:34-1051:35)
  2: StorageLive(_128)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:39-1051:48)
  3: StorageLive(_129)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:39-1051:48)
  4: _129 = core::option::Option::<char>::Some(const '~')
    SourceInfo(regex-lite/src/hir/parse.rs:1051:39-1051:48)
  5: _128 = &_129
    SourceInfo(regex-lite/src/hir/parse.rs:1051:39-1051:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:48)
      kind: _124 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _125, move _128) -> [return: bb91, unwind: bb115]
  }
  preds [bb89]
  succs [bb91, bb115]

bb91
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:48)
      kind: switchInt(move _124) -> [0: bb93, otherwise: bb92]
  }
  preds [bb90]
  succs [bb92, bb93]

bb92
  0: StorageDead(_129)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  1: StorageDead(_128)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  2: StorageDead(_126)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  3: StorageDead(_125)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  4: StorageDead(_124)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  5: FakeRead(ForMatchGuard, _76)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  6: StorageLive(_131)
    SourceInfo(regex-lite/src/hir/parse.rs:1052:32-1054:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1052:32-1054:22)
      kind: _131 = error::Error::new(const hir::parse::ERR_CLASS_SYMDIFFERENCE_UNSUPPORTED) -> [return: bb94, unwind: bb115]
  }
  preds [bb91]
  succs [bb94, bb115]

bb93
  0: StorageDead(_129)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  1: StorageDead(_128)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  2: StorageDead(_126)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  3: StorageDead(_125)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  4: StorageDead(_124)
    SourceInfo(regex-lite/src/hir/parse.rs:1051:47-1051:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1051:24-1051:48)
      kind: falseEdge -> [real: bb48, imaginary: bb48]
  }
  preds [bb91]
  succs [bb48, bb48]

bb94
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _131)
    SourceInfo(regex-lite/src/hir/parse.rs:1052:28-1054:23)
  1: StorageDead(_131)
    SourceInfo(regex-lite/src/hir/parse.rs:1054:22-1054:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1052:21-1054:23)
      kind: goto -> bb105
  }
  preds [bb92]
  succs [bb105]

bb95
  0: StorageDead(_135)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:55-1056:56)
  1: StorageDead(_134)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:55-1056:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
      kind: _132 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _133) -> [return: bb96, unwind: bb115]
  }
  preds [bb48]
  succs [bb96, bb115]

bb96
  0: StorageDead(_133)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  1: PlaceMention(_132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  2: _137 = discriminant(_132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
      kind: switchInt(move _137) -> [0: bb99, 1: bb98, otherwise: bb97]
  }
  preds [bb95]
  succs [bb97, bb98, bb99]

bb97
  0: FakeRead(ForMatchedPlace(None), _132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
      kind: unreachable
  }
  preds [bb96]
  succs []

bb98
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
      kind: falseEdge -> [real: bb100, imaginary: bb99]
  }
  preds [bb96]
  succs [bb99, bb100]

bb99
  0: StorageLive(_141)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  1: _141 = ((_132 as Continue).0: ())
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  2: _39 = _141
    SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
  3: StorageDead(_141)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  4: StorageDead(_136)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  5: StorageDead(_132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  6: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1058:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1011:9-1058:10)
      kind: goto -> bb40
  }
  preds [bb96, bb98]
  succs [bb40]

bb100
  0: StorageLive(_138)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  1: _138 = move ((_132 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  2: StorageLive(_140)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  3: _140 = move _138
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1056:22-1056:57)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _140) -> [return: bb101, unwind: bb115]
  }
  preds [bb98]
  succs [bb101, bb115]

bb101
  0: StorageDead(_140)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  1: StorageDead(_138)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  2: StorageDead(_136)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  3: StorageDead(_132)
    SourceInfo(regex-lite/src/hir/parse.rs:1056:56-1056:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb100]
  succs [bb105]

bb102
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
      kind: drop(_79) -> [return: bb103, unwind: bb115]
  }
  preds [bb59]
  succs [bb103, bb115]

bb103
  0: StorageDead(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
  1: StorageDead(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
  2: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1058:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb40
  }
  preds [bb102]
  succs [bb40]

bb104
  0: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:1042:17-1042:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb105
  }
  preds [bb76]
  succs [bb105]

bb105
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1058:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb106
  }
  preds [bb62, bb82, bb88, bb94, bb101, bb104]
  succs [bb106]

bb106
  0: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:1058:9-1058:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb107
  }
  preds [bb45, bb105]
  succs [bb107]

bb107
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1059:5-1059:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb108
  }
  preds [bb15, bb25, bb35, bb106]
  succs [bb108]

bb108
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1059:5-1059:6)
      kind: drop(_23) -> [return: bb109, unwind: bb116]
  }
  preds [bb8, bb107]
  succs [bb109, bb116]

bb109
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:1059:5-1059:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1059:6-1059:6)
      kind: return
  }
  preds [bb108]
  succs []

bb110
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1041:47-1041:48)
      kind: drop(_107) -> [return: bb111, unwind terminate(cleanup)]
  }
  preds [bb74]
  succs [bb111]

bb111
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1042:17-1042:18)
      kind: drop(_94) -> [return: bb115, unwind terminate(cleanup)]
  }
  preds [bb65, bb67, bb71, bb75, bb110]
  succs [bb115]

bb112
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1030:58-1030:59)
      kind: drop(_95) -> [return: bb115, unwind terminate(cleanup)]
  }
  preds [bb64]
  succs [bb115]

bb113
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
      kind: drop(_82) -> [return: bb114, unwind terminate(cleanup)]
  }
  preds [bb57, bb58]
  succs [bb114]

bb114
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1024:21-1024:22)
      kind: drop(_79) -> [return: bb115, unwind terminate(cleanup)]
  }
  preds [bb59, bb113]
  succs [bb115]

bb115
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1059:5-1059:6)
      kind: drop(_23) -> [return: bb116, unwind terminate(cleanup)]
  }
  preds [bb4, bb6, bb7, bb11, bb14, bb17, bb18, bb20, bb21, bb24, bb26, bb28, bb30, bb31, bb34, bb40, bb41, bb42, bb44, bb46, bb48, bb54, bb60, bb61, bb63, bb76, bb77, bb78, bb80, bb83, bb84, bb86, bb89, bb90, bb92, bb95, bb100, bb102, bb111, bb112, bb114]
  succs [bb116]

bb116
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:980:5-1059:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb108, bb115]
  succs []

