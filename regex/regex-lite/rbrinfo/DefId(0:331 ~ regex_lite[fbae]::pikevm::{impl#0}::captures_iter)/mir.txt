bb0
  0: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:54:13-54:16)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:56)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:41)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:29)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:29)
  5: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:23)
  6: _9 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:54:19-54:29)
      kind: _8 = pikevm::PikeVM::nfa(move _9) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  0: _7 = &(*_8)
    SourceInfo(regex-lite/src/pikevm.rs:54:19-54:29)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:54:28-54:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:54:19-54:41)
      kind: _6 = nfa::NFA::group_len(move _7) -> [return: bb2, unwind: bb13]
  }
  preds [bb0]
  succs [bb2, bb13]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:54:40-54:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:54:19-54:56)
      kind: _5 = core::num::<impl usize>::checked_mul(move _6, const 2_usize) -> [return: bb3, unwind: bb13]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:54:55-54:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:54:19-54:65)
      kind: _4 = core::option::Option::<usize>::unwrap(move _5) -> [return: bb4, unwind: bb13]
  }
  preds [bb2]
  succs [bb4, bb13]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:54:64-54:65)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-lite/src/pikevm.rs:54:13-54:16)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:54:65-54:66)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:56:17-63:14)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:57:25-57:29)
  5: _11 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:57:25-57:29)
  6: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:58:17-58:22)
  7: _12 = move _2
    SourceInfo(regex-lite/src/pikevm.rs:58:17-58:22)
  8: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:59:17-59:25)
  9: _13 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:59:17-59:25)
  10: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
  11: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:61:29-61:33)
  12: _15 = core::option::Option::<int::NonMaxUsize>::None
    SourceInfo(regex-lite/src/pikevm.rs:61:29-61:33)
  13: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:61:35-61:38)
  14: _16 = _4
    SourceInfo(regex-lite/src/pikevm.rs:61:35-61:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:9-47:42)
      kind: _14 = alloc::vec::from_elem::<core::option::Option<int::NonMaxUsize>>(move _15, move _16) -> [return: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: StorageDead(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  1: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:47:41-47:42)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:62:33-62:37)
  3: _17 = core::option::Option::<usize>::None
    SourceInfo(regex-lite/src/pikevm.rs:62:33-62:37)
  4: _10 = pikevm::FindMatches::<'_, '_> { pikevm: move _11, cache: move _12, haystack: move _13, at: const 0_usize, slots: move _14, last_match_end: move _17 }
    SourceInfo(regex-lite/src/pikevm.rs:56:17-63:14)
  5: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
      kind: drop(_14) -> [return: bb6, unwind: bb10]
  }
  preds [bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
      kind: drop(_12) -> [return: bb7, unwind: bb11]
  }
  preds [bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
  2: _0 = pikevm::CapturesMatches::<'_, '_> { it: move _10 }
    SourceInfo(regex-lite/src/pikevm.rs:55:9-64:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:64:9-64:10)
      kind: drop(_10) -> [return: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:64:9-64:10)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:65:5-65:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:65:5-65:6)
      kind: drop(_2) -> [return: bb9, unwind: bb14]
  }
  preds [bb7]
  succs [bb9, bb14]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:65:6-65:6)
      kind: return
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
      kind: drop(_12) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:64:9-64:10)
      kind: drop(_10) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb6, bb10]
  succs [bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:63:13-63:14)
      kind: drop(_12) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:65:5-65:6)
      kind: drop(_2) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb11, bb12]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:48:5-65:6)
      kind: resume
  }
  preds [bb8, bb13]
  succs []

