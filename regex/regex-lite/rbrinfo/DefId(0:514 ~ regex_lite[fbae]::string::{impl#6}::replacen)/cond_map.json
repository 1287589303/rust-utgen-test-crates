{
  "regex-lite/src/string.rs:903:16:903:35": [
    {
      "Bool": {
        "Other": "it.peek().is_none()"
      }
    }
  ],
  "regex-lite/src/string.rs:934:16:934:25": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "limit > 0",
          "lhs": "limit",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/string.rs:934:34:934:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "limit - 1",
          "lhs": "limit",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/string.rs:923:12:923:31": [
    {
      "Bool": {
        "Other": "it.peek().is_none()"
      }
    }
  ],
  "regex-lite/src/string.rs:934:29:934:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "i >= limit - 1",
          "lhs": "i",
          "rhs": "limit - 1",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/string.rs:912:20:912:29": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "limit > 0",
          "lhs": "limit",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/string.rs:912:38:912:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "limit - 1",
          "lhs": "limit",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/string.rs:928:25:928:27": [
    {
      "For": {
        "iter_var": "(i, cap)",
        "iter_range": "it"
      }
    }
  ],
  "regex-lite/src/string.rs:901:12:901:46": [
    {
      "Bool": {
        "Other": "let Some(rep) = rep.no_expansion()"
      }
    }
  ],
  "regex-lite/src/string.rs:912:33:912:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ge",
          "expr": "i >= limit - 1",
          "lhs": "i",
          "rhs": "limit - 1",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/string.rs:908:27:908:29": [
    {
      "For": {
        "iter_var": "(i, m)",
        "iter_range": "it"
      }
    }
  ]
}