bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:591:13-591:22)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:591:31-591:42)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:591:31-591:35)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:591:31-591:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:591:31-591:42)
      kind: _3 = hir::parse::Parser::<'_>::char(move _4) -> [return: bb1, unwind: bb23]
  }
  preds []
  succs [bb1, bb23]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:591:41-591:42)
  1: PlaceMention(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:591:31-591:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:591:25-591:42)
      kind: switchInt(_3) -> [120: bb3, 117: bb4, 85: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5]

bb2
  0: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:595:13-595:16)
  1: _5 = _3
    SourceInfo(regex-lite/src/hir/parse.rs:595:13-595:16)
  2: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _11 = [const "internal error: entered unreachable code: invalid start of fixed length hexadecimal number "]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: _10 = &_11
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  9: _9 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  10: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:596:67-596:69)
  14: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:597:17-597:20)
  15: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:597:17-597:20)
  16: _17 = &_5
    SourceInfo(regex-lite/src/hir/parse.rs:597:17-597:20)
  17: _16 = &(*_17)
    SourceInfo(regex-lite/src/hir/parse.rs:597:17-597:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:596:67-596:69)
      kind: _15 = core::fmt::rt::Argument::<'_>::new_display::<char>(move _16) -> [return: bb9, unwind: bb23]
  }
  preds [bb1, bb5]
  succs [bb9, bb23]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:592:13-592:16)
      kind: falseEdge -> [real: bb6, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb6]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:593:13-593:16)
      kind: falseEdge -> [real: bb7, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb7]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:594:13-594:16)
      kind: falseEdge -> [real: bb8, imaginary: bb2]
  }
  preds [bb1, bb4]
  succs [bb2, bb8]

bb6
  0: _2 = const 2_usize
    SourceInfo(regex-lite/src/hir/parse.rs:592:20-592:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:592:20-592:21)
      kind: goto -> bb11
  }
  preds [bb3]
  succs [bb11]

bb7
  0: _2 = const 4_usize
    SourceInfo(regex-lite/src/hir/parse.rs:593:20-593:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:593:20-593:21)
      kind: goto -> bb11
  }
  preds [bb4]
  succs [bb11]

bb8
  0: _2 = const 8_usize
    SourceInfo(regex-lite/src/hir/parse.rs:594:20-594:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:594:20-594:21)
      kind: goto -> bb11
  }
  preds [bb5]
  succs [bb11]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:596:68-596:69)
  1: _14 = [move _15]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _13 = &_14
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _12 = &(*_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _8 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _9, move _12) -> [return: bb10, unwind: bb23]
  }
  preds [bb2]
  succs [bb10, bb23]

bb10
  0: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _7 = core::panicking::panic_fmt(move _8) -> bb23
  }
  preds [bb9]
  succs [bb23]

bb11
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:591:13-591:22)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:599:10-599:11)
  2: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:600:9-602:10)
  3: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:600:13-600:39)
  4: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:600:13-600:17)
  5: _20 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:600:13-600:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:600:13-600:39)
      kind: _19 = hir::parse::Parser::<'_>::bump_and_bump_space(move _20) -> [return: bb12, unwind: bb23]
  }
  preds [bb6, bb7, bb8]
  succs [bb12, bb23]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:600:13-600:39)
      kind: switchInt(move _19) -> [0: bb14, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:600:38-600:39)
  1: _18 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:602:10-602:10)
  2: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:602:9-602:10)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:602:9-602:10)
  4: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:30)
  5: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:23)
  6: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:16)
  7: _25 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:23)
      kind: _24 = hir::parse::Parser::<'_>::char(move _25) -> [return: bb16, unwind: bb23]
  }
  preds [bb12]
  succs [bb16, bb23]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:600:38-600:39)
  1: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:601:24-601:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:601:24-601:58)
      kind: _22 = error::Error::new(const hir::parse::ERR_HEX_UNEXPECTED_EOF) -> [return: bb15, unwind: bb23]
  }
  preds [bb12]
  succs [bb15, bb23]

bb15
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _22)
    SourceInfo(regex-lite/src/hir/parse.rs:601:20-601:59)
  1: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:601:58-601:59)
  2: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:602:9-602:10)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:602:9-602:10)
  4: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:608:5-608:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:608:6-608:6)
      kind: goto -> bb22
  }
  preds [bb14]
  succs [bb22]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:603:22-603:23)
  1: _23 = Eq(move _24, const '{')
    SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:603:12-603:30)
      kind: switchInt(move _23) -> [0: bb19, otherwise: bb17]
  }
  preds [bb13]
  succs [bb17, bb19]

bb17
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:603:29-603:30)
  1: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:604:13-604:17)
  2: _26 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:604:13-604:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:604:13-604:35)
      kind: _0 = hir::parse::Parser::<'_>::parse_hex_brace(move _26) -> [return: bb18, unwind: bb23]
  }
  preds [bb16]
  succs [bb18, bb23]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:604:34-604:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:603:9-607:10)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:603:29-603:30)
  1: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:606:13-606:17)
  2: _27 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:606:13-606:17)
  3: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:606:35-606:44)
  4: _28 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:606:35-606:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:606:13-606:45)
      kind: _0 = hir::parse::Parser::<'_>::parse_hex_digits(move _27, move _28) -> [return: bb20, unwind: bb23]
  }
  preds [bb16]
  succs [bb20, bb23]

bb20
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:606:44-606:45)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:606:44-606:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:603:9-607:10)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:607:9-607:10)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:608:5-608:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:608:6-608:6)
      kind: goto -> bb22
  }
  preds [bb18, bb20]
  succs [bb22]

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:608:6-608:6)
      kind: return
  }
  preds [bb15, bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:590:5-608:6)
      kind: resume
  }
  preds [bb0, bb2, bb9, bb10, bb11, bb13, bb14, bb17, bb19]
  succs []

