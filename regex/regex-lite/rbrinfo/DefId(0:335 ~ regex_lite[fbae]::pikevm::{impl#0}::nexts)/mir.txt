bb0
  0: PlaceMention((*_3))
    SourceInfo(regex-lite/src/pikevm.rs:209:60-209:65)
  1: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:209:28-209:35)
  2: _10 = &((*_3).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:209:28-209:35)
  3: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:209:37-209:55)
  4: _11 = &mut ((*_3).1: pikevm::SlotTable)
    SourceInfo(regex-lite/src/pikevm.rs:209:37-209:55)
  5: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
  6: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  7: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  8: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:23)
  9: _15 = &(*_10)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
      kind: _14 = pikevm::SparseSet::iter(move _15) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:210:29-210:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
      kind: _13 = <pikevm::SparseSetIter<'_> as core::iter::IntoIterator>::into_iter(move _14) -> [return: bb2, unwind: bb16]
  }
  preds [bb0]
  succs [bb2, bb16]

bb2
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:210:29-210:30)
  1: PlaceMention(_13)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  2: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  3: _16 = move _13
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
      kind: falseUnwind -> [real: bb4, unwind: bb16]
  }
  preds [bb2, bb14]
  succs [bb4, bb16]

bb4
  0: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  1: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  3: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  4: _21 = &mut _16
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  5: _20 = &mut (*_21)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
      kind: _19 = <pikevm::SparseSetIter<'_> as core::iter::Iterator>::next(move _20) -> [return: bb5, unwind: bb16]
  }
  preds [bb3]
  succs [bb5, bb16]

bb5
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:210:29-210:30)
  1: PlaceMention(_19)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  2: _22 = discriminant(_19)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
      kind: switchInt(move _22) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:20-210:30)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:210:13-210:16)
  1: _24 = ((_19 as Some).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:210:13-210:16)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:211:16-213:14)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:211:16-211:20)
  4: _26 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:211:16-211:20)
  5: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:212:17-212:22)
  6: _27 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:212:17-212:22)
  7: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:212:24-212:34)
  8: _28 = &mut (*_11)
    SourceInfo(regex-lite/src/pikevm.rs:212:24-212:34)
  9: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:212:36-212:40)
  10: _29 = &mut (*_4)
    SourceInfo(regex-lite/src/pikevm.rs:212:36-212:40)
  11: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:212:42-212:50)
  12: _30 = &(*_5)
    SourceInfo(regex-lite/src/pikevm.rs:212:42-212:50)
  13: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:212:52-212:54)
  14: _31 = _6
    SourceInfo(regex-lite/src/pikevm.rs:212:52-212:54)
  15: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:212:56-212:61)
  16: _32 = _7
    SourceInfo(regex-lite/src/pikevm.rs:212:56-212:61)
  17: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:212:63-212:69)
  18: _33 = _8
    SourceInfo(regex-lite/src/pikevm.rs:212:63-212:69)
  19: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:212:71-212:74)
  20: _34 = _24
    SourceInfo(regex-lite/src/pikevm.rs:212:71-212:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:211:16-213:14)
      kind: _25 = pikevm::PikeVM::next(move _26, move _27, move _28, move _29, move _30, move _31, move _32, move _33, move _34) -> [return: bb10, unwind: bb16]
  }
  preds [bb5, bb7]
  succs [bb10, bb16]

bb9
  0: _12 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
  1: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  2: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  4: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  5: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  6: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  7: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:218:9-218:14)
  8: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:219:5-219:6)
  9: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:219:5-219:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:219:6-219:6)
      kind: goto -> bb15
  }
  preds [bb7]
  succs [bb15]

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:211:16-213:14)
      kind: switchInt(move _25) -> [0: bb14, otherwise: bb11]
  }
  preds [bb8]
  succs [bb11, bb14]

bb11
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  2: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  3: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  4: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  5: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  6: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  7: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  8: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  9: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:214:17-214:65)
  10: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:214:17-214:22)
  11: _37 = &mut (*_9)
    SourceInfo(regex-lite/src/pikevm.rs:214:17-214:22)
  12: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:214:39-214:64)
  13: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:214:39-214:64)
  14: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:214:39-214:49)
  15: _40 = &mut (*_11)
    SourceInfo(regex-lite/src/pikevm.rs:214:39-214:49)
  16: StorageLive(_41)
    SourceInfo(regex-lite/src/pikevm.rs:214:60-214:63)
  17: _41 = _24
    SourceInfo(regex-lite/src/pikevm.rs:214:60-214:63)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:214:39-214:64)
      kind: _39 = pikevm::SlotTable::for_state(move _40, move _41) -> [return: bb12, unwind: bb16]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: _38 = &(*_39)
    SourceInfo(regex-lite/src/pikevm.rs:214:39-214:64)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/pikevm.rs:214:63-214:64)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:214:63-214:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:214:17-214:65)
      kind: _36 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::copy_from_slice(move _37, move _38) -> [return: bb13, unwind: bb16]
  }
  preds [bb11]
  succs [bb13, bb16]

bb13
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:214:64-214:65)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:214:64-214:65)
  2: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:214:65-214:66)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:214:65-214:66)
  4: _0 = const true
    SourceInfo(regex-lite/src/pikevm.rs:215:24-215:28)
  5: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:216:13-216:14)
  6: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  7: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  8: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  9: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  10: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  11: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  12: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  13: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:219:5-219:6)
  14: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:219:5-219:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:219:6-219:6)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  2: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  3: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  4: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  5: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  6: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  7: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  8: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:213:13-213:14)
  9: _18 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:216:14-216:14)
  10: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:216:13-216:14)
  11: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  12: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  13: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  14: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:217:9-217:10)
  15: _17 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:210:9-217:10)
      kind: goto -> bb3
  }
  preds [bb10]
  succs [bb3]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:219:6-219:6)
      kind: return
  }
  preds [bb9, bb13]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:198:5-219:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb11, bb12]
  succs []

