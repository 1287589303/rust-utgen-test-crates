bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:60)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:40)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:246:26-246:40)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:26)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:26)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:16)
  6: _8 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:26)
      kind: _7 = hir::parse::Parser::<'_>::pattern(move _8) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: _6 = &(*_7)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:26)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:246:25-246:26)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:39)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:37)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:31)
  5: _11 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:37)
      kind: _10 = hir::parse::Parser::<'_>::pos(move _11) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:246:36-246:37)
  1: _9 = core::ops::RangeFrom::<usize> { start: move _10 }
    SourceInfo(regex-lite/src/hir/parse.rs:246:27-246:39)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:246:38-246:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:26-246:40)
      kind: _5 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _6, move _9) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: _4 = &(*_5)
    SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:40)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:246:39-246:40)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:246:39-246:40)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:246:53-246:59)
  4: _12 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:246:53-246:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:60)
      kind: _3 = core::str::<impl str>::starts_with::<'_, &str>(move _4, move _12) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:12-246:60)
      kind: switchInt(move _3) -> [0: bb17, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb17]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  4: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
  5: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  6: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  7: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:47)
  8: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:39)
  9: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:31)
  10: _18 = &(*_2)
    SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:39)
      kind: _17 = core::str::<impl str>::chars(move _18) -> [return: bb6, unwind: bb19]
  }
  preds [bb4]
  succs [bb6, bb19]

bb6
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:247:38-247:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:25-247:47)
      kind: _16 = <core::str::Chars<'_> as core::iter::Iterator>::count(move _17) -> [return: bb7, unwind: bb19]
  }
  preds [bb5]
  succs [bb7, bb19]

bb7
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:247:46-247:47)
  1: _15 = core::ops::Range::<usize> { start: const 0_usize, end: move _16 }
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:247:46-247:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
      kind: _14 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _15) -> [return: bb8, unwind: bb19]
  }
  preds [bb6]
  succs [bb8, bb19]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:247:46-247:47)
  1: PlaceMention(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  2: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  3: _19 = move _14
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
      kind: falseUnwind -> [real: bb10, unwind: bb19]
  }
  preds [bb8, bb16]
  succs [bb10, bb19]

bb10
  0: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  1: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  2: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  3: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  4: _24 = &mut _19
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  5: _23 = &mut (*_24)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
      kind: _22 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _23) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:247:46-247:47)
  1: PlaceMention(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  2: _25 = discriminant(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
      kind: switchInt(move _25) -> [0: bb13, 1: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _22)
    SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:22-247:47)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:248:17-248:28)
  1: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:248:17-248:21)
  2: _28 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:248:17-248:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:248:17-248:28)
      kind: _27 = hir::parse::Parser::<'_>::bump(move _28) -> [return: bb16, unwind: bb19]
  }
  preds [bb11, bb13]
  succs [bb16, bb19]

bb15
  0: _13 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  2: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  4: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  5: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  6: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  7: _0 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:250:13-250:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:9-253:10)
      kind: goto -> bb18
  }
  preds [bb13]
  succs [bb18]

bb16
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:248:27-248:28)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:248:28-248:29)
  2: _21 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:247:48-249:14)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  4: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  5: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:249:13-249:14)
  6: _20 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:247:13-249:14)
      kind: goto -> bb9
  }
  preds [bb14]
  succs [bb9]

bb17
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:246:59-246:60)
  4: _0 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:252:13-252:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:246:9-253:10)
      kind: goto -> bb18
  }
  preds [bb4]
  succs [bb18]

bb18
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:253:9-253:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:254:6-254:6)
      kind: return
  }
  preds [bb15, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:245:5-254:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb7, bb9, bb10, bb14]
  succs []

