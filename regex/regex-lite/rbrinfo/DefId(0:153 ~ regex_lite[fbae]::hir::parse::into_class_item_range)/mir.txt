bb0
  0: PlaceMention((_1.0: hir::HirKind))
    SourceInfo(regex-lite/src/hir/parse.rs:1325:11-1325:19)
  1: _2 = discriminant((_1.0: hir::HirKind))
    SourceInfo(regex-lite/src/hir/parse.rs:1325:11-1325:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1325:5-1325:19)
      kind: switchInt(move _2) -> [1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1327:18-1327:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1327:18-1327:58)
      kind: _5 = error::Error::new(const hir::parse::ERR_CLASS_INVALID_RANGE_ITEM) -> [return: bb4, unwind: bb7]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1326:9-1326:26)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:23-1326:25)
  1: _3 = (((_1.0: hir::HirKind) as Char).0: char)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:23-1326:25)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:33-1326:35)
  3: _4 = _3
    SourceInfo(regex-lite/src/hir/parse.rs:1326:33-1326:35)
  4: _0 = core::result::Result::<char, error::Error>::Ok(move _4)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:30-1326:36)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:35-1326:36)
  6: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1326:35-1326:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1326:35-1326:36)
      kind: goto -> bb5
  }
  preds [bb2]
  succs [bb5]

bb4
  0: _0 = core::result::Result::<char, error::Error>::Err(move _5)
    SourceInfo(regex-lite/src/hir/parse.rs:1327:14-1327:59)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1327:58-1327:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1327:58-1327:59)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1329:1-1329:2)
      kind: drop(_1) -> [return: bb6, unwind: bb8]
  }
  preds [bb3, bb4]
  succs [bb6, bb8]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1329:2-1329:2)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1329:1-1329:2)
      kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1324:1-1329:2)
      kind: resume
  }
  preds [bb5, bb7]
  succs []

