bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/nfa.rs:637:9-637:13)
  1: _2 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:637:9-637:13)
  2: StorageLive(_3)
    SourceInfo(regex-lite/src/nfa.rs:637:18-637:55)
  3: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:637:49-637:53)
  4: _4 = core::option::Option::<hir::Look>::None
    SourceInfo(regex-lite/src/nfa.rs:637:49-637:53)
  5: _3 = nfa::State::Goto { target: const 0_u32, look: move _4 }
    SourceInfo(regex-lite/src/nfa.rs:637:18-637:55)
  6: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:637:54-637:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:637:9-637:56)
      kind: _0 = nfa::Compiler::add(move _2, move _3) -> [return: bb1, unwind: bb2]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:637:55-637:56)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/nfa.rs:637:55-637:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:638:6-638:6)
      kind: return
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:637:55-637:56)
      kind: drop(_3) -> [return: bb3, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:636:5-638:6)
      kind: resume
  }
  preds [bb2]
  succs []

