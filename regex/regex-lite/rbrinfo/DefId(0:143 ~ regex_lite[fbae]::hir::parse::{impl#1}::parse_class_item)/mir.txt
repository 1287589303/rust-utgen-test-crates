bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1123:13-1123:15)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1123:18-1123:22)
  2: _3 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1123:18-1123:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1123:18-1123:29)
      kind: _2 = hir::parse::Parser::<'_>::char(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1123:28-1123:29)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:1123:13-1123:15)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1124:9-1124:20)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1124:9-1124:13)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1124:9-1124:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1124:9-1124:20)
      kind: _4 = hir::parse::Parser::<'_>::bump(move _5) -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1124:19-1124:20)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1124:20-1124:21)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1125:12-1125:22)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1125:12-1125:14)
  4: _7 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:1125:12-1125:14)
  5: _6 = Eq(move _7, const '\\')
    SourceInfo(regex-lite/src/hir/parse.rs:1125:12-1125:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1125:12-1125:22)
      kind: switchInt(move _6) -> [0: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1125:21-1125:22)
  1: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1126:13-1126:17)
  2: _8 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1126:13-1126:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1126:13-1126:32)
      kind: _0 = hir::parse::Parser::<'_>::parse_escape(move _8) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1126:31-1126:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1125:9-1129:10)
      kind: goto -> bb8
  }
  preds [bb3]
  succs [bb8]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1125:21-1125:22)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1128:16-1128:29)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1128:26-1128:28)
  3: _10 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:1128:26-1128:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1128:16-1128:29)
      kind: _9 = hir::Hir::char(move _10) -> [return: bb6, unwind: bb9]
  }
  preds [bb2]
  succs [bb6, bb9]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1128:28-1128:29)
  1: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _9)
    SourceInfo(regex-lite/src/hir/parse.rs:1128:13-1128:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1128:29-1128:30)
      kind: drop(_9) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1128:29-1128:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1125:9-1129:10)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1129:9-1129:10)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1130:5-1130:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1130:6-1130:6)
      kind: return
  }
  preds [bb4, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1122:5-1130:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb5, bb6]
  succs []

