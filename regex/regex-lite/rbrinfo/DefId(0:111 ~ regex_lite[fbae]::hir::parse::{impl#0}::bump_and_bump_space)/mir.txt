bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:259:9-261:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:259:13-259:24)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:259:13-259:17)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:259:13-259:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:259:13-259:24)
      kind: _3 = hir::parse::Parser::<'_>::bump(move _4) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:259:13-259:24)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:259:23-259:24)
  1: _2 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:261:10-261:10)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:261:9-261:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:261:9-261:10)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:262:9-262:26)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:262:9-262:13)
  6: _7 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:262:9-262:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:262:9-262:26)
      kind: _6 = hir::parse::Parser::<'_>::bump_space(move _7) -> [return: bb4, unwind: bb7]
  }
  preds [bb1]
  succs [bb4, bb7]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:259:23-259:24)
  1: _0 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:260:20-260:25)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:261:9-261:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:261:9-261:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:264:6-264:6)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:262:25-262:26)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:262:26-262:27)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:263:10-263:24)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:263:10-263:14)
  4: _9 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:263:10-263:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:263:10-263:24)
      kind: _8 = hir::parse::Parser::<'_>::is_done(move _9) -> [return: bb5, unwind: bb7]
  }
  preds [bb2]
  succs [bb5, bb7]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:263:23-263:24)
  1: _0 = Not(move _8)
    SourceInfo(regex-lite/src/hir/parse.rs:263:9-263:24)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:263:23-263:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:264:6-264:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:264:6-264:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:258:5-264:6)
      kind: resume
  }
  preds [bb0, bb2, bb4]
  succs []

