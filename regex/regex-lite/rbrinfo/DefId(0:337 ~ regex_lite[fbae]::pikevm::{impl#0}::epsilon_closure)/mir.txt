bb0
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:316:9-316:48)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:316:9-316:14)
  2: _9 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:316:9-316:14)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:316:20-316:47)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:316:43-316:46)
  5: _11 = _7
    SourceInfo(regex-lite/src/pikevm.rs:316:43-316:46)
  6: _10 = pikevm::FollowEpsilon::Explore(move _11)
    SourceInfo(regex-lite/src/pikevm.rs:316:20-316:47)
  7: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:316:46-316:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:316:9-316:48)
      kind: _8 = alloc::vec::Vec::<pikevm::FollowEpsilon>::push(move _9, move _10) -> [return: bb1, unwind: bb16]
  }
  preds []
  succs [bb1, bb16]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:316:47-316:48)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:316:47-316:48)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:316:48-316:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:9-328:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:9-328:10)
      kind: falseUnwind -> [real: bb3, unwind: bb16]
  }
  preds [bb1, bb14]
  succs [bb3, bb16]

bb3
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:317:33-317:44)
  1: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:317:33-317:38)
  2: _14 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:317:33-317:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:33-317:44)
      kind: _13 = alloc::vec::Vec::<pikevm::FollowEpsilon>::pop(move _14) -> [return: bb4, unwind: bb16]
  }
  preds [bb2]
  succs [bb4, bb16]

bb4
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:317:43-317:44)
  1: PlaceMention(_13)
    SourceInfo(regex-lite/src/pikevm.rs:317:33-317:44)
  2: _15 = discriminant(_13)
    SourceInfo(regex-lite/src/pikevm.rs:317:33-317:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:19-317:30)
      kind: switchInt(move _15) -> [1: bb5, otherwise: bb15]
  }
  preds [bb3]
  succs [bb5, bb15]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:19-317:30)
      kind: falseEdge -> [real: bb6, imaginary: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:317:24-317:29)
  1: _16 = move ((_13 as Some).0: pikevm::FollowEpsilon)
    SourceInfo(regex-lite/src/pikevm.rs:317:24-317:29)
  2: PlaceMention(_16)
    SourceInfo(regex-lite/src/pikevm.rs:318:19-318:24)
  3: _17 = discriminant(_16)
    SourceInfo(regex-lite/src/pikevm.rs:318:19-318:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:318:13-318:24)
      kind: switchInt(move _17) -> [0: bb9, 1: bb8, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb8, bb9]

bb7
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-lite/src/pikevm.rs:318:19-318:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:318:19-318:24)
      kind: unreachable
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:319:17-319:63)
      kind: falseEdge -> [real: bb10, imaginary: bb9]
  }
  preds [bb6]
  succs [bb9, bb10]

bb9
  0: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:322:40-322:43)
  1: _25 = ((_16 as Explore).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:322:40-322:43)
  2: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:323:21-325:22)
  3: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:323:21-323:25)
  4: _27 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:323:21-323:25)
  5: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:324:25-324:30)
  6: _28 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:324:25-324:30)
  7: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:324:32-324:42)
  8: _29 = &mut (*_3)
    SourceInfo(regex-lite/src/pikevm.rs:324:32-324:42)
  9: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:324:44-324:48)
  10: _30 = &mut (*_4)
    SourceInfo(regex-lite/src/pikevm.rs:324:44-324:48)
  11: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:324:50-324:58)
  12: _31 = &(*_5)
    SourceInfo(regex-lite/src/pikevm.rs:324:50-324:58)
  13: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:324:60-324:62)
  14: _32 = _6
    SourceInfo(regex-lite/src/pikevm.rs:324:60-324:62)
  15: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:324:64-324:67)
  16: _33 = _25
    SourceInfo(regex-lite/src/pikevm.rs:324:64-324:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:323:21-325:22)
      kind: _26 = pikevm::PikeVM::epsilon_closure_explore(move _27, move _28, move _29, move _30, move _31, move _32, move _33) -> [return: bb13, unwind: bb16]
  }
  preds [bb6, bb8]
  succs [bb13, bb16]

bb10
  0: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:319:49-319:53)
  1: _18 = ((_16 as RestoreCapture).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:319:49-319:53)
  2: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:319:55-319:61)
  3: _19 = ((_16 as RestoreCapture).1: core::option::Option<int::NonMaxUsize>)
    SourceInfo(regex-lite/src/pikevm.rs:319:55-319:61)
  4: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:320:51-320:57)
  5: _20 = _19
    SourceInfo(regex-lite/src/pikevm.rs:320:51-320:57)
  6: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:320:32-320:47)
  7: StorageLive(_22)
    SourceInfo(regex-lite/src/pikevm.rs:320:32-320:36)
  8: _22 = _18
    SourceInfo(regex-lite/src/pikevm.rs:320:32-320:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:320:32-320:47)
      kind: _21 = <u32 as int::U32>::as_usize(move _22) -> [return: bb11, unwind: bb16]
  }
  preds [bb8]
  succs [bb11, bb16]

bb11
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/pikevm.rs:320:46-320:47)
  1: _23 = Len((*_3))
    SourceInfo(regex-lite/src/pikevm.rs:320:21-320:48)
  2: _24 = Lt(_21, _23)
    SourceInfo(regex-lite/src/pikevm.rs:320:21-320:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:320:21-320:48)
      kind: assert(move _24, "index out of bounds: the length is {} but the index is {}", move _23, _21) -> [success: bb12, unwind: bb16]
  }
  preds [bb10]
  succs [bb12, bb16]

bb12
  0: (*_3)[_21] = move _20
    SourceInfo(regex-lite/src/pikevm.rs:320:21-320:57)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:320:56-320:57)
  2: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:320:57-320:58)
  3: _12 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:319:67-321:18)
  4: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:321:17-321:18)
  5: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:321:17-321:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:321:17-321:18)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  3: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  4: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  6: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:325:21-325:22)
  7: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:325:22-325:23)
  8: _12 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:322:48-326:18)
  9: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:326:17-326:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:326:17-326:18)
      kind: goto -> bb14
  }
  preds [bb9]
  succs [bb14]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:328:9-328:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:328:9-328:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:317:9-328:10)
      kind: goto -> bb2
  }
  preds [bb12, bb13]
  succs [bb2]

bb15
  0: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:317:9-328:10)
  1: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:317:9-328:10)
  2: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:328:9-328:10)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:328:9-328:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:329:6-329:6)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:307:5-329:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb9, bb10, bb11]
  succs []

