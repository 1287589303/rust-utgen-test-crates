bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:9-61:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  2: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:760:20-760:31)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:760:20-760:24)
  5: _7 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:760:20-760:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:760:20-760:31)
      kind: _6 = hir::parse::Parser::<'_>::char(move _7) -> [return: bb1, unwind: bb91]
  }
  preds []
  succs [bb1, bb91]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:760:30-760:31)
  1: _5 = &_6
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:16-51:22)
  2: StorageLive(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:760:33-760:36)
  4: _9 = const '{'
    SourceInfo(regex-lite/src/hir/parse.rs:760:33-760:36)
  5: _8 = &_9
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:24-51:31)
  6: _4 = (move _5, move _8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  7: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  8: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:31-51:32)
  9: PlaceMention(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:51:15-51:32)
  10: StorageLive(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  11: _10 = (_4.0: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:14-52:22)
  12: StorageLive(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  13: _11 = (_4.1: &char)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:52:24-52:33)
  14: StorageLive(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  15: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  16: _13 = (*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:22-53:31)
  17: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  18: _14 = (*_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:35-53:45)
  19: _12 = Eq(move _13, move _14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:21-53:46)
      kind: switchInt(move _12) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:18-59:18)
  3: StorageDead(_12)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:59:17-59:18)
  4: StorageDead(_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  5: StorageDead(_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:60:13-60:14)
  6: StorageDead(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  7: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  9: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:61:9-61:10)
  10: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:761:13-761:16)
  11: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
  12: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:31)
  13: _30 = &mut _2
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
      kind: _29 = alloc::vec::Vec::<hir::Hir>::pop(move _30) -> [return: bb5, unwind: bb91]
  }
  preds [bb1]
  succs [bb5, bb91]

bb3
  0: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  1: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:53:45-53:46)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  3: _16 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:32-54:65)
  4: FakeRead(ForLet(None), _16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:54:25-54:29)
  5: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
  6: StorageLive(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  7: _18 = move _16
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:54-58:58)
  8: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  9: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  10: _20 = &(*_10)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  11: _19 = &(*_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:60-58:70)
  12: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  13: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  14: _22 = &(*_11)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  15: _21 = &(*_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:72-58:83)
  16: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  17: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
  18: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  19: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  20: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  21: _27 = [const "expected opening brace"]
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  22: _26 = &_27
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  23: _25 = &(*_26)
    SourceInfo(regex-lite/src/hir/parse.rs:760:38-760:62)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:114-58:144)
      kind: _24 = core::fmt::Arguments::<'_>::new_const::<1>(move _25) -> [return: bb4, unwind: bb91]
  }
  preds [bb1]
  succs [bb4, bb91]

bb4
  0: StorageDead(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:143-58:144)
  1: _23 = core::option::Option::<core::fmt::Arguments<'_>>::Some(move _24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:85-58:145)
  2: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:144-58:145)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:58:21-58:146)
      kind: _17 = core::panicking::assert_failed::<char, char>(move _18, move _19, move _21, move _23) -> bb91
  }
  preds [bb3]
  succs [bb91]

bb5
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:761:36-761:37)
  1: PlaceMention(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
  2: _31 = discriminant(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:761:19-761:37)
      kind: switchInt(move _31) -> [0: bb8, 1: bb7, otherwise: bb6]
  }
  preds [bb2]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _29)
    SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:761:25-761:37)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:762:13-762:22)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:764:28-764:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:764:28-764:67)
      kind: _35 = error::Error::new(const hir::parse::ERR_COUNTED_REP_SUB_MISSING) -> [return: bb12, unwind: bb90]
  }
  preds [bb5, bb7]
  succs [bb12, bb90]

bb9
  0: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:762:18-762:21)
  1: _32 = move ((_29 as Some).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:762:18-762:21)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:762:35-762:38)
  3: _33 = move _32
    SourceInfo(regex-lite/src/hir/parse.rs:762:35-762:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:762:26-762:39)
      kind: _28 = alloc::boxed::Box::<hir::Hir>::new(move _33) -> [return: bb10, unwind: bb88]
  }
  preds [bb7]
  succs [bb10, bb88]

bb10
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:762:38-762:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:762:38-762:39)
      kind: drop(_32) -> [return: bb11, unwind: bb90]
  }
  preds [bb9]
  succs [bb11, bb90]

bb11
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:762:38-762:39)
  1: FakeRead(ForLet(None), _28)
    SourceInfo(regex-lite/src/hir/parse.rs:761:13-761:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:766:10-766:11)
      kind: drop(_29) -> [return: bb13, unwind: bb87]
  }
  preds [bb10]
  succs [bb13, bb87]

bb12
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _35)
    SourceInfo(regex-lite/src/hir/parse.rs:764:24-764:68)
  1: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:764:67-764:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:766:10-766:11)
      kind: drop(_29) -> [return: bb82, unwind: bb91]
  }
  preds [bb8]
  succs [bb82, bb91]

bb13
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:766:10-766:11)
  1: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:767:9-769:10)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:767:13-767:39)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:767:13-767:17)
  4: _38 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:767:13-767:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:767:13-767:39)
      kind: _37 = hir::parse::Parser::<'_>::bump_and_bump_space(move _38) -> [return: bb14, unwind: bb87]
  }
  preds [bb11]
  succs [bb14, bb87]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:767:13-767:39)
      kind: switchInt(move _37) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:767:38-767:39)
  1: _36 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:769:10-769:10)
  2: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:769:9-769:10)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:769:9-769:10)
  4: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:770:13-770:16)
  5: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  6: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:39)
  7: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:23)
  8: _44 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:39)
      kind: _43 = hir::parse::Parser::<'_>::parse_decimal(move _44) -> [return: bb18, unwind: bb87]
  }
  preds [bb14]
  succs [bb18, bb87]

bb16
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:767:38-767:39)
  1: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:768:24-768:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:768:24-768:60)
      kind: _40 = error::Error::new(const hir::parse::ERR_COUNTED_REP_UNCLOSED) -> [return: bb17, unwind: bb87]
  }
  preds [bb14]
  succs [bb17, bb87]

bb17
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _40)
    SourceInfo(regex-lite/src/hir/parse.rs:768:20-768:61)
  1: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:768:60-768:61)
  2: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:769:9-769:10)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:769:9-769:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb81
  }
  preds [bb16]
  succs [bb81]

bb18
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:770:38-770:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
      kind: _42 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _43) -> [return: bb19, unwind: bb87]
  }
  preds [bb15]
  succs [bb19, bb87]

bb19
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  1: PlaceMention(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  2: _45 = discriminant(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
      kind: switchInt(move _45) -> [0: bb22, 1: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21, bb22]

bb20
  0: FakeRead(ForMatchedPlace(None), _42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
      kind: unreachable
  }
  preds [bb19]
  succs []

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
      kind: falseEdge -> [real: bb23, imaginary: bb22]
  }
  preds [bb19]
  succs [bb22, bb23]

bb22
  0: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  1: _49 = ((_42 as Continue).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  2: _41 = _49
    SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
  3: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  4: FakeRead(ForLet(None), _41)
    SourceInfo(regex-lite/src/hir/parse.rs:770:13-770:16)
  5: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:40-770:41)
  6: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:771:13-771:20)
  7: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:771:28-771:31)
  8: _51 = _41
    SourceInfo(regex-lite/src/hir/parse.rs:771:28-771:31)
  9: _50 = core::option::Option::<u32>::Some(move _51)
    SourceInfo(regex-lite/src/hir/parse.rs:771:23-771:32)
  10: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:771:31-771:32)
  11: FakeRead(ForLet(None), _50)
    SourceInfo(regex-lite/src/hir/parse.rs:771:13-771:20)
  12: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:772:9-774:10)
  13: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:772:12-772:26)
  14: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:772:12-772:16)
  15: _54 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:772:12-772:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:772:12-772:26)
      kind: _53 = hir::parse::Parser::<'_>::is_done(move _54) -> [return: bb25, unwind: bb87]
  }
  preds [bb19, bb21]
  succs [bb25, bb87]

bb23
  0: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  1: _46 = move ((_42 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  2: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  3: _48 = move _46
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:770:19-770:40)
      kind: _0 = <core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _48) -> [return: bb24, unwind: bb87]
  }
  preds [bb21]
  succs [bb24, bb87]

bb24
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  1: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:770:39-770:40)
  2: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:770:40-770:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb23]
  succs [bb80]

bb25
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:772:12-772:26)
      kind: switchInt(move _53) -> [0: bb28, otherwise: bb26]
  }
  preds [bb22]
  succs [bb26, bb28]

bb26
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:772:25-772:26)
  1: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:773:24-773:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:773:24-773:64)
      kind: _56 = error::Error::new(const hir::parse::ERR_COUNTED_REP_MIN_UNCLOSED) -> [return: bb27, unwind: bb87]
  }
  preds [bb25]
  succs [bb27, bb87]

bb27
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _56)
    SourceInfo(regex-lite/src/hir/parse.rs:773:20-773:65)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:773:64-773:65)
  2: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:774:9-774:10)
  3: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:774:9-774:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb26]
  succs [bb79]

bb28
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:772:25-772:26)
  1: _52 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:774:10-774:10)
  2: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:774:9-774:10)
  3: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:774:9-774:10)
  4: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:775:9-787:10)
  5: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:30)
  6: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:23)
  7: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:16)
  8: _60 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:23)
      kind: _59 = hir::parse::Parser::<'_>::char(move _60) -> [return: bb29, unwind: bb87]
  }
  preds [bb25]
  succs [bb29, bb87]

bb29
  0: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:775:22-775:23)
  1: _58 = Eq(move _59, const ',')
    SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:775:12-775:30)
      kind: switchInt(move _58) -> [0: bb50, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb50]

bb30
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:775:29-775:30)
  1: StorageLive(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:776:13-778:14)
  2: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:776:17-776:43)
  3: StorageLive(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:776:17-776:21)
  4: _63 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:776:17-776:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:776:17-776:43)
      kind: _62 = hir::parse::Parser::<'_>::bump_and_bump_space(move _63) -> [return: bb31, unwind: bb87]
  }
  preds [bb29]
  succs [bb31, bb87]

bb31
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:776:17-776:43)
      kind: switchInt(move _62) -> [0: bb33, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb33]

bb32
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:776:42-776:43)
  1: _61 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:778:14-778:14)
  2: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:778:13-778:14)
  3: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:778:13-778:14)
  4: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:779:13-783:14)
  5: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:34)
  6: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:27)
  7: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:20)
  8: _69 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:27)
      kind: _68 = hir::parse::Parser::<'_>::char(move _69) -> [return: bb35, unwind: bb87]
  }
  preds [bb31]
  succs [bb35, bb87]

bb33
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/parse.rs:776:42-776:43)
  1: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:777:28-777:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:777:28-777:70)
      kind: _65 = error::Error::new(const hir::parse::ERR_COUNTED_REP_COMMA_UNCLOSED) -> [return: bb34, unwind: bb87]
  }
  preds [bb31]
  succs [bb34, bb87]

bb34
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _65)
    SourceInfo(regex-lite/src/hir/parse.rs:777:24-777:71)
  1: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:777:70-777:71)
  2: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:778:13-778:14)
  3: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:778:13-778:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb33]
  succs [bb78]

bb35
  0: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:779:26-779:27)
  1: _67 = Ne(move _68, const '}')
    SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:779:16-779:34)
      kind: switchInt(move _67) -> [0: bb44, otherwise: bb36]
  }
  preds [bb32]
  succs [bb36, bb44]

bb36
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:779:33-779:34)
  1: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:780:23-780:50)
  2: StorageLive(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  3: StorageLive(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  4: StorageLive(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:48)
  5: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:32)
  6: _74 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:48)
      kind: _73 = hir::parse::Parser::<'_>::parse_decimal(move _74) -> [return: bb37, unwind: bb87]
  }
  preds [bb35]
  succs [bb37, bb87]

bb37
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:780:47-780:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
      kind: _72 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _73) -> [return: bb38, unwind: bb87]
  }
  preds [bb36]
  succs [bb38, bb87]

bb38
  0: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  1: PlaceMention(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  2: _75 = discriminant(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
      kind: switchInt(move _75) -> [0: bb41, 1: bb40, otherwise: bb39]
  }
  preds [bb37]
  succs [bb39, bb40, bb41]

bb39
  0: FakeRead(ForMatchedPlace(None), _72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
      kind: unreachable
  }
  preds [bb38]
  succs []

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
      kind: falseEdge -> [real: bb42, imaginary: bb41]
  }
  preds [bb38]
  succs [bb41, bb42]

bb41
  0: StorageLive(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  1: _79 = ((_72 as Continue).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  2: _71 = _79
    SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
  3: StorageDead(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  4: _70 = core::option::Option::<u32>::Some(move _71)
    SourceInfo(regex-lite/src/hir/parse.rs:780:23-780:50)
  5: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:780:49-780:50)
  6: _50 = move _70
    SourceInfo(regex-lite/src/hir/parse.rs:780:17-780:50)
  7: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:780:49-780:50)
  8: StorageDead(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:50-780:51)
  9: _66 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:779:35-781:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:779:13-783:14)
      kind: goto -> bb45
  }
  preds [bb38, bb40]
  succs [bb45]

bb42
  0: StorageLive(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  1: _76 = move ((_72 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  2: StorageLive(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  3: _78 = move _76
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:780:28-780:49)
      kind: _0 = <core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _78) -> [return: bb43, unwind: bb87]
  }
  preds [bb40]
  succs [bb43, bb87]

bb43
  0: StorageDead(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  1: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:780:48-780:49)
  2: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:780:49-780:50)
  3: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:780:49-780:50)
  4: StorageDead(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:780:50-780:51)
  5: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:783:13-783:14)
  6: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:783:13-783:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb42]
  succs [bb78]

bb44
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:779:33-779:34)
  1: StorageLive(_80)
    SourceInfo(regex-lite/src/hir/parse.rs:782:23-782:27)
  2: _80 = core::option::Option::<u32>::None
    SourceInfo(regex-lite/src/hir/parse.rs:782:23-782:27)
  3: _50 = move _80
    SourceInfo(regex-lite/src/hir/parse.rs:782:17-782:27)
  4: StorageDead(_80)
    SourceInfo(regex-lite/src/hir/parse.rs:782:26-782:27)
  5: _66 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:781:20-783:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:779:13-783:14)
      kind: goto -> bb45
  }
  preds [bb35]
  succs [bb45]

bb45
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:783:13-783:14)
  1: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:783:13-783:14)
  2: StorageLive(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:784:16-784:30)
  3: StorageLive(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:784:16-784:20)
  4: _82 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:784:16-784:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:784:16-784:30)
      kind: _81 = hir::parse::Parser::<'_>::is_done(move _82) -> [return: bb46, unwind: bb87]
  }
  preds [bb41, bb44]
  succs [bb46, bb87]

bb46
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:784:16-784:30)
      kind: switchInt(move _81) -> [0: bb49, otherwise: bb47]
  }
  preds [bb45]
  succs [bb47, bb49]

bb47
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:784:29-784:30)
  1: StorageLive(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:785:28-785:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:785:28-785:72)
      kind: _84 = error::Error::new(const hir::parse::ERR_COUNTED_REP_MIN_MAX_UNCLOSED) -> [return: bb48, unwind: bb87]
  }
  preds [bb46]
  succs [bb48, bb87]

bb48
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _84)
    SourceInfo(regex-lite/src/hir/parse.rs:785:24-785:73)
  1: StorageDead(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:785:72-785:73)
  2: StorageDead(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:786:13-786:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb47]
  succs [bb78]

bb49
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:784:29-784:30)
  1: _57 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:786:14-786:14)
  2: StorageDead(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:786:13-786:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:775:9-787:10)
      kind: goto -> bb51
  }
  preds [bb46]
  succs [bb51]

bb50
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:775:29-775:30)
  1: _57 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:787:10-787:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:775:9-787:10)
      kind: goto -> bb51
  }
  preds [bb29]
  succs [bb51]

bb51
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:787:9-787:10)
  1: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:787:9-787:10)
  2: StorageLive(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:788:9-790:10)
  3: StorageLive(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:30)
  4: StorageLive(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:23)
  5: StorageLive(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:16)
  6: _88 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:23)
      kind: _87 = hir::parse::Parser::<'_>::char(move _88) -> [return: bb52, unwind: bb87]
  }
  preds [bb49, bb50]
  succs [bb52, bb87]

bb52
  0: StorageDead(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:788:22-788:23)
  1: _86 = Ne(move _87, const '}')
    SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:788:12-788:30)
      kind: switchInt(move _86) -> [0: bb55, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb55]

bb53
  0: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:788:29-788:30)
  1: StorageLive(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:789:24-789:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:789:24-789:59)
      kind: _90 = error::Error::new(const hir::parse::ERR_COUNTED_REP_INVALID) -> [return: bb54, unwind: bb87]
  }
  preds [bb52]
  succs [bb54, bb87]

bb54
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _90)
    SourceInfo(regex-lite/src/hir/parse.rs:789:20-789:60)
  1: StorageDead(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:789:59-789:60)
  2: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:790:9-790:10)
  3: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:790:9-790:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb53]
  succs [bb79]

bb55
  0: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:788:29-788:30)
  1: _85 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:790:10-790:10)
  2: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:790:9-790:10)
  3: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:790:9-790:10)
  4: StorageLive(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:792:13-792:23)
  5: _91 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:792:26-792:30)
  6: FakeRead(ForLet(None), _91)
    SourceInfo(regex-lite/src/hir/parse.rs:792:13-792:23)
  7: StorageLive(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:793:9-796:10)
  8: StorageLive(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:793:12-793:38)
  9: StorageLive(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:793:12-793:16)
  10: _94 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:793:12-793:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:12-793:38)
      kind: _93 = hir::parse::Parser::<'_>::bump_and_bump_space(move _94) -> [return: bb56, unwind: bb87]
  }
  preds [bb52]
  succs [bb56, bb87]

bb56
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:12-793:38)
      kind: switchInt(move _93) -> [0: bb62, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb62]

bb57
  0: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:793:37-793:38)
  1: StorageLive(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:60)
  2: StorageLive(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:53)
  3: StorageLive(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:46)
  4: _97 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:53)
      kind: _96 = hir::parse::Parser::<'_>::char(move _97) -> [return: bb58, unwind: bb87]
  }
  preds [bb56]
  succs [bb58, bb87]

bb58
  0: StorageDead(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:793:52-793:53)
  1: _95 = Eq(move _96, const '?')
    SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:42-793:60)
      kind: switchInt(move _95) -> [0: bb61, otherwise: bb59]
  }
  preds [bb57]
  succs [bb59, bb61]

bb59
  0: StorageDead(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:793:59-793:60)
  1: _91 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:794:13-794:27)
  2: StorageLive(_98)
    SourceInfo(regex-lite/src/hir/parse.rs:795:13-795:24)
  3: StorageLive(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:795:13-795:17)
  4: _99 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:795:13-795:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:795:13-795:24)
      kind: _98 = hir::parse::Parser::<'_>::bump(move _99) -> [return: bb60, unwind: bb87]
  }
  preds [bb58]
  succs [bb60, bb87]

bb60
  0: StorageDead(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:795:23-795:24)
  1: StorageDead(_98)
    SourceInfo(regex-lite/src/hir/parse.rs:795:24-795:25)
  2: _92 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:793:61-796:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:9-796:10)
      kind: goto -> bb64
  }
  preds [bb59]
  succs [bb64]

bb61
  0: StorageDead(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:793:59-793:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb63
  }
  preds [bb58]
  succs [bb63]

bb62
  0: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:793:37-793:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb63
  }
  preds [bb56]
  succs [bb63]

bb63
  0: _92 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:796:10-796:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:793:9-796:10)
      kind: goto -> bb64
  }
  preds [bb61, bb62]
  succs [bb64]

bb64
  0: StorageDead(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:796:9-796:10)
  1: StorageDead(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:796:9-796:10)
  2: StorageDead(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:796:9-796:10)
  3: StorageLive(_100)
    SourceInfo(regex-lite/src/hir/parse.rs:797:9-799:10)
  4: StorageLive(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:35)
  5: StorageLive(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:24)
  6: StorageLive(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:16)
  7: _103 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:24)
      kind: _102 = hir::parse::Parser::<'_>::flags(move _103) -> [return: bb65, unwind: bb87]
  }
  preds [bb60, bb63]
  succs [bb65, bb87]

bb65
  0: StorageDead(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:797:23-797:24)
  1: _101 = (_102.3: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:797:12-797:35)
      kind: switchInt(move _101) -> [0: bb67, otherwise: bb66]
  }
  preds [bb64]
  succs [bb66, bb67]

bb66
  0: StorageDead(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:797:34-797:35)
  1: StorageLive(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:798:23-798:29)
  2: _104 = _91
    SourceInfo(regex-lite/src/hir/parse.rs:798:23-798:29)
  3: _91 = Not(move _104)
    SourceInfo(regex-lite/src/hir/parse.rs:798:13-798:29)
  4: StorageDead(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:798:28-798:29)
  5: _100 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:797:36-799:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:797:9-799:10)
      kind: goto -> bb68
  }
  preds [bb65]
  succs [bb68]

bb67
  0: StorageDead(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:797:34-797:35)
  1: _100 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:799:10-799:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:797:9-799:10)
      kind: goto -> bb68
  }
  preds [bb65]
  succs [bb68]

bb68
  0: StorageDead(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:799:9-799:10)
  1: StorageDead(_100)
    SourceInfo(regex-lite/src/hir/parse.rs:799:9-799:10)
  2: StorageLive(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:801:9-803:10)
  3: StorageLive(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:801:12-801:46)
  4: StorageLive(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:801:12-801:15)
  5: _107 = _50
    SourceInfo(regex-lite/src/hir/parse.rs:801:12-801:15)
  6: StorageLive(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:801:30-801:45)
  7: StorageLive(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:801:30-801:45)
  8: _109 = &_41
    SourceInfo(regex-lite/src/hir/parse.rs:801:30-801:45)
  9: _108 = {closure@regex-lite/src/hir/parse.rs:801:30: 801:35} { min: move _109 }
    SourceInfo(regex-lite/src/hir/parse.rs:801:30-801:45)
  10: StorageDead(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:801:34-801:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:801:12-801:46)
      kind: _106 = core::option::Option::<u32>::map_or::<bool, {closure@regex-lite/src/hir/parse.rs:801:30: 801:35}>(move _107, const false, move _108) -> [return: bb69, unwind: bb87]
  }
  preds [bb66, bb67]
  succs [bb69, bb87]

bb69
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:801:12-801:46)
      kind: switchInt(move _106) -> [0: bb72, otherwise: bb70]
  }
  preds [bb68]
  succs [bb70, bb72]

bb70
  0: StorageDead(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:801:45-801:46)
  1: StorageDead(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:801:45-801:46)
  2: StorageLive(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:802:24-802:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:802:24-802:65)
      kind: _111 = error::Error::new(const hir::parse::ERR_COUNTED_REP_INVALID_RANGE) -> [return: bb71, unwind: bb87]
  }
  preds [bb69]
  succs [bb71, bb87]

bb71
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _111)
    SourceInfo(regex-lite/src/hir/parse.rs:802:20-802:66)
  1: StorageDead(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:802:65-802:66)
  2: StorageDead(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:803:9-803:10)
  3: StorageDead(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:803:9-803:10)
  4: StorageDead(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb70]
  succs [bb79]

bb72
  0: StorageDead(_108)
    SourceInfo(regex-lite/src/hir/parse.rs:801:45-801:46)
  1: StorageDead(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:801:45-801:46)
  2: _105 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:803:10-803:10)
  3: StorageDead(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:803:9-803:10)
  4: StorageDead(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:803:9-803:10)
  5: StorageLive(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:804:9-809:12)
  6: StorageLive(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:804:9-804:15)
  7: _113 = &mut _2
    SourceInfo(regex-lite/src/hir/parse.rs:804:9-804:15)
  8: StorageLive(_114)
    SourceInfo(regex-lite/src/hir/parse.rs:804:21-809:11)
  9: StorageLive(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:804:37-809:10)
  10: StorageLive(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:805:13-805:16)
  11: _116 = _41
    SourceInfo(regex-lite/src/hir/parse.rs:805:13-805:16)
  12: StorageLive(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:806:13-806:16)
  13: _117 = _50
    SourceInfo(regex-lite/src/hir/parse.rs:806:13-806:16)
  14: StorageLive(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:807:13-807:19)
  15: _118 = _91
    SourceInfo(regex-lite/src/hir/parse.rs:807:13-807:19)
  16: StorageLive(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:808:13-808:16)
  17: _119 = move _28
    SourceInfo(regex-lite/src/hir/parse.rs:808:13-808:16)
  18: _115 = hir::Repetition { min: move _116, max: move _117, greedy: move _118, sub: move _119 }
    SourceInfo(regex-lite/src/hir/parse.rs:804:37-809:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:809:9-809:10)
      kind: drop(_119) -> [return: bb73, unwind: bb86]
  }
  preds [bb69]
  succs [bb73, bb86]

bb73
  0: StorageDead(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:809:9-809:10)
  1: StorageDead(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:809:9-809:10)
  2: StorageDead(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:809:9-809:10)
  3: StorageDead(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:809:9-809:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:804:21-809:11)
      kind: _114 = hir::Hir::repetition(move _115) -> [return: bb74, unwind: bb86]
  }
  preds [bb72]
  succs [bb74, bb86]

bb74
  0: StorageDead(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:809:10-809:11)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:804:9-809:12)
      kind: _112 = alloc::vec::Vec::<hir::Hir>::push(move _113, move _114) -> [return: bb75, unwind: bb85]
  }
  preds [bb73]
  succs [bb75, bb85]

bb75
  0: StorageDead(_114)
    SourceInfo(regex-lite/src/hir/parse.rs:809:11-809:12)
  1: StorageDead(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:809:11-809:12)
  2: StorageDead(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:809:12-809:13)
  3: StorageLive(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:810:12-810:18)
  4: _120 = move _2
    SourceInfo(regex-lite/src/hir/parse.rs:810:12-810:18)
  5: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Ok(move _120)
    SourceInfo(regex-lite/src/hir/parse.rs:810:9-810:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:810:18-810:19)
      kind: drop(_120) -> [return: bb76, unwind: bb87]
  }
  preds [bb74]
  succs [bb76, bb87]

bb76
  0: StorageDead(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:810:18-810:19)
  1: StorageDead(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  2: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  3: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_28) -> [return: bb77, unwind: bb91]
  }
  preds [bb75]
  succs [bb77, bb91]

bb77
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_2) -> [return: bb84, unwind: bb92]
  }
  preds [bb76]
  succs [bb84, bb92]

bb78
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:787:9-787:10)
  1: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:787:9-787:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb34, bb43, bb48]
  succs [bb79]

bb79
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb27, bb54, bb71, bb78]
  succs [bb80]

bb80
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb81
  }
  preds [bb24, bb79]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_28) -> [return: bb83, unwind: bb91]
  }
  preds [bb17, bb80]
  succs [bb83, bb91]

bb82
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:766:10-766:11)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb12]
  succs [bb83]

bb83
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_2) -> [return: bb84, unwind: bb92]
  }
  preds [bb81, bb82]
  succs [bb84, bb92]

bb84
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:6-811:6)
      kind: return
  }
  preds [bb77, bb83]
  succs []

bb85
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:809:11-809:12)
      kind: drop(_114) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb74]
  succs [bb87]

bb86
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:809:10-809:11)
      kind: drop(_115) -> [return: bb87, unwind terminate(cleanup)]
  }
  preds [bb72, bb73]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_28) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb11, bb13, bb15, bb16, bb18, bb22, bb23, bb26, bb28, bb30, bb32, bb33, bb36, bb37, bb42, bb45, bb47, bb51, bb53, bb55, bb57, bb59, bb64, bb68, bb70, bb75, bb85, bb86]
  succs [bb91]

bb88
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:762:38-762:39)
      kind: drop(_33) -> [return: bb89, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb89]

bb89
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:762:38-762:39)
      kind: drop(_32) -> [return: bb90, unwind terminate(cleanup)]
  }
  preds [bb88]
  succs [bb90]

bb90
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:766:10-766:11)
      kind: drop(_29) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb8, bb10, bb89]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:811:5-811:6)
      kind: drop(_2) -> [return: bb92, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb4, bb12, bb76, bb81, bb87, bb90]
  succs [bb92]

bb92
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:756:5-811:6)
      kind: resume
  }
  preds [bb77, bb83, bb91]
  succs []

