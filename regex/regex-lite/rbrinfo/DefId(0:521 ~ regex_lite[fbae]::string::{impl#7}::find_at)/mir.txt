bb0
  0: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:1106:13-1106:22)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:1106:25-1106:34)
  2: _5 = &((*_1).1: pool::Pool<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-lite/src/string.rs:1106:25-1106:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1106:25-1106:40)
      kind: _4 = pool::Pool::<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _5) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:1106:39-1106:40)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-lite/src/string.rs:1106:13-1106:22)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:1107:13-1107:22)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:1107:26-1107:30)
  4: _7 = core::option::Option::<int::NonMaxUsize>::None
    SourceInfo(regex-lite/src/string.rs:1107:26-1107:30)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:1107:32-1107:36)
  6: _8 = core::option::Option::<int::NonMaxUsize>::None
    SourceInfo(regex-lite/src/string.rs:1107:32-1107:36)
  7: _6 = [move _7, move _8]
    SourceInfo(regex-lite/src/string.rs:1107:25-1107:37)
  8: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:1107:36-1107:37)
  9: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:1107:36-1107:37)
  10: FakeRead(ForLet(None), _6)
    SourceInfo(regex-lite/src/string.rs:1107:13-1107:22)
  11: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:1108:13-1108:20)
  12: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:1108:23-1108:34)
  13: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:1108:23-1115:10)
  14: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:1108:23-1108:34)
  15: _12 = &((*_1).0: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:1108:23-1108:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1108:23-1115:10)
      kind: _11 = <alloc::sync::Arc<pikevm::PikeVM> as core::ops::Deref>::deref(move _12) -> [return: bb2, unwind: bb19]
  }
  preds [bb0]
  succs [bb2, bb19]

bb2
  0: _10 = &(*_11)
    SourceInfo(regex-lite/src/string.rs:1108:23-1108:34)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:1108:33-1108:34)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  5: StorageLive(_16)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  6: _16 = &mut _4
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  7: _15 = &mut (*_16)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
      kind: _14 = <pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _15) -> [return: bb3, unwind: bb19]
  }
  preds [bb1]
  succs [bb3, bb19]

bb3
  0: _13 = &mut (*_14)
    SourceInfo(regex-lite/src/string.rs:1109:13-1109:23)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:1109:22-1109:23)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/string.rs:1110:13-1110:32)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/string.rs:1110:13-1110:32)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/string.rs:1110:13-1110:21)
  5: _19 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1110:13-1110:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1110:13-1110:32)
      kind: _18 = core::str::<impl str>::as_bytes(move _19) -> [return: bb4, unwind: bb19]
  }
  preds [bb2]
  succs [bb4, bb19]

bb4
  0: _17 = &(*_18)
    SourceInfo(regex-lite/src/string.rs:1110:13-1110:32)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/string.rs:1110:31-1110:32)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/string.rs:1111:13-1111:18)
  3: _20 = _3
    SourceInfo(regex-lite/src/string.rs:1111:13-1111:18)
  4: StorageLive(_21)
    SourceInfo(regex-lite/src/string.rs:1112:13-1112:27)
  5: StorageLive(_22)
    SourceInfo(regex-lite/src/string.rs:1112:13-1112:21)
  6: _22 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1112:13-1112:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1112:13-1112:27)
      kind: _21 = core::str::<impl str>::len(move _22) -> [return: bb5, unwind: bb19]
  }
  preds [bb3]
  succs [bb5, bb19]

bb5
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/string.rs:1112:26-1112:27)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  4: _25 = &mut _6
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  5: _24 = &mut (*_25)
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  6: _23 = move _24 as &mut [core::option::Option<int::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/string.rs:1114:13-1114:23)
  7: StorageDead(_24)
    SourceInfo(regex-lite/src/string.rs:1114:22-1114:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1108:23-1115:10)
      kind: _9 = pikevm::PikeVM::search(move _10, move _13, move _17, move _20, move _21, const false, move _23) -> [return: bb6, unwind: bb19]
  }
  preds [bb4]
  succs [bb6, bb19]

bb6
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  1: StorageDead(_21)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  4: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  5: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:1115:9-1115:10)
  6: FakeRead(ForLet(None), _9)
    SourceInfo(regex-lite/src/string.rs:1108:13-1108:20)
  7: StorageDead(_25)
    SourceInfo(regex-lite/src/string.rs:1115:10-1115:11)
  8: StorageDead(_18)
    SourceInfo(regex-lite/src/string.rs:1115:10-1115:11)
  9: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:1115:10-1115:11)
  10: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:1115:10-1115:11)
  11: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:1115:10-1115:11)
  12: StorageLive(_26)
    SourceInfo(regex-lite/src/string.rs:1116:9-1118:10)
  13: StorageLive(_27)
    SourceInfo(regex-lite/src/string.rs:1116:13-1116:20)
  14: _27 = _9
    SourceInfo(regex-lite/src/string.rs:1116:13-1116:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1116:13-1116:20)
      kind: switchInt(move _27) -> [0: bb7, otherwise: bb8]
  }
  preds [bb5]
  succs [bb7, bb8]

bb7
  0: _0 = core::option::Option::<string::Match<'_>>::None
    SourceInfo(regex-lite/src/string.rs:1117:20-1117:24)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/string.rs:1118:9-1118:10)
  2: StorageDead(_26)
    SourceInfo(regex-lite/src/string.rs:1118:9-1118:10)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  4: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
      kind: drop(_4) -> [return: bb17, unwind: bb20]
  }
  preds [bb6]
  succs [bb17, bb20]

bb8
  0: _26 = const ()
    SourceInfo(regex-lite/src/string.rs:1118:10-1118:10)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/string.rs:1118:9-1118:10)
  2: StorageDead(_26)
    SourceInfo(regex-lite/src/string.rs:1118:9-1118:10)
  3: StorageLive(_31)
    SourceInfo(regex-lite/src/string.rs:1119:28-1119:78)
  4: StorageLive(_32)
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:52)
  5: StorageLive(_33)
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:46)
  6: StorageLive(_34)
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:37)
  7: StorageLive(_35)
    SourceInfo(regex-lite/src/string.rs:1119:35-1119:36)
  8: _35 = const 0_usize
    SourceInfo(regex-lite/src/string.rs:1119:35-1119:36)
  9: _36 = Len(_6)
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:37)
  10: _37 = Lt(_35, _36)
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:29-1119:37)
      kind: assert(move _37, "index out of bounds: the length is {} but the index is {}", move _36, _35) -> [success: bb9, unwind: bb19]
  }
  preds [bb6]
  succs [bb9, bb19]

bb9
  0: _34 = _6[_35]
    SourceInfo(regex-lite/src/string.rs:1119:29-1119:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:29-1119:46)
      kind: _33 = core::option::Option::<int::NonMaxUsize>::unwrap(move _34) -> [return: bb10, unwind: bb19]
  }
  preds [bb8]
  succs [bb10, bb19]

bb10
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/string.rs:1119:45-1119:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:29-1119:52)
      kind: _32 = int::NonMaxUsize::get(move _33) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/string.rs:1119:51-1119:52)
  1: StorageLive(_38)
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:77)
  2: StorageLive(_39)
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:71)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:62)
  4: StorageLive(_41)
    SourceInfo(regex-lite/src/string.rs:1119:60-1119:61)
  5: _41 = const 1_usize
    SourceInfo(regex-lite/src/string.rs:1119:60-1119:61)
  6: _42 = Len(_6)
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:62)
  7: _43 = Lt(_41, _42)
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:54-1119:62)
      kind: assert(move _43, "index out of bounds: the length is {} but the index is {}", move _42, _41) -> [success: bb12, unwind: bb19]
  }
  preds [bb10]
  succs [bb12, bb19]

bb12
  0: _40 = _6[_41]
    SourceInfo(regex-lite/src/string.rs:1119:54-1119:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:54-1119:71)
      kind: _39 = core::option::Option::<int::NonMaxUsize>::unwrap(move _40) -> [return: bb13, unwind: bb19]
  }
  preds [bb11]
  succs [bb13, bb19]

bb13
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/string.rs:1119:70-1119:71)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1119:54-1119:77)
      kind: _38 = int::NonMaxUsize::get(move _39) -> [return: bb14, unwind: bb19]
  }
  preds [bb12]
  succs [bb14, bb19]

bb14
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/string.rs:1119:76-1119:77)
  1: _31 = (move _32, move _38)
    SourceInfo(regex-lite/src/string.rs:1119:28-1119:78)
  2: StorageDead(_38)
    SourceInfo(regex-lite/src/string.rs:1119:77-1119:78)
  3: StorageDead(_32)
    SourceInfo(regex-lite/src/string.rs:1119:77-1119:78)
  4: PlaceMention(_31)
    SourceInfo(regex-lite/src/string.rs:1119:28-1119:78)
  5: StorageLive(_29)
    SourceInfo(regex-lite/src/string.rs:1119:14-1119:19)
  6: _29 = (_31.0: usize)
    SourceInfo(regex-lite/src/string.rs:1119:14-1119:19)
  7: StorageLive(_30)
    SourceInfo(regex-lite/src/string.rs:1119:21-1119:24)
  8: _30 = (_31.1: usize)
    SourceInfo(regex-lite/src/string.rs:1119:21-1119:24)
  9: StorageDead(_41)
    SourceInfo(regex-lite/src/string.rs:1119:78-1119:79)
  10: StorageDead(_35)
    SourceInfo(regex-lite/src/string.rs:1119:78-1119:79)
  11: StorageDead(_31)
    SourceInfo(regex-lite/src/string.rs:1119:78-1119:79)
  12: StorageLive(_44)
    SourceInfo(regex-lite/src/string.rs:1120:14-1120:46)
  13: StorageLive(_45)
    SourceInfo(regex-lite/src/string.rs:1120:25-1120:33)
  14: _45 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1120:25-1120:33)
  15: StorageLive(_46)
    SourceInfo(regex-lite/src/string.rs:1120:35-1120:40)
  16: _46 = _29
    SourceInfo(regex-lite/src/string.rs:1120:35-1120:40)
  17: StorageLive(_47)
    SourceInfo(regex-lite/src/string.rs:1120:42-1120:45)
  18: _47 = _30
    SourceInfo(regex-lite/src/string.rs:1120:42-1120:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1120:14-1120:46)
      kind: _44 = string::Match::<'_>::new(move _45, move _46, move _47) -> [return: bb15, unwind: bb19]
  }
  preds [bb13]
  succs [bb15, bb19]

bb15
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/string.rs:1120:45-1120:46)
  1: StorageDead(_46)
    SourceInfo(regex-lite/src/string.rs:1120:45-1120:46)
  2: StorageDead(_45)
    SourceInfo(regex-lite/src/string.rs:1120:45-1120:46)
  3: _0 = core::option::Option::<string::Match<'_>>::Some(move _44)
    SourceInfo(regex-lite/src/string.rs:1120:9-1120:47)
  4: StorageDead(_44)
    SourceInfo(regex-lite/src/string.rs:1120:46-1120:47)
  5: StorageDead(_30)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  6: StorageDead(_29)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  7: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  8: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
      kind: drop(_4) -> [return: bb16, unwind: bb20]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:6-1121:6)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb17
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:6-1121:6)
      kind: goto -> bb18
  }
  preds [bb7]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:6-1121:6)
      kind: return
  }
  preds [bb16, bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1121:5-1121:6)
      kind: drop(_4) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb4, bb5, bb8, bb9, bb10, bb11, bb12, bb13, bb14]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1101:5-1121:6)
      kind: resume
  }
  preds [bb0, bb7, bb15, bb19]
  succs []

