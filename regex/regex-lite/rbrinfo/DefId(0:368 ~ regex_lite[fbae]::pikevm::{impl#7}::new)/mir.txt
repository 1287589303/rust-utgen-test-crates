bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/pikevm.rs:812:13-812:20)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _3 = alloc::vec::Vec::<u32>::new() -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _4 = alloc::vec::Vec::<u32>::new() -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: _2 = pikevm::SparseSet { len: const 0_usize, dense: move _3, sparse: move _4 }
    SourceInfo(regex-lite/src/pikevm.rs:812:23-812:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:812:73-812:74)
      kind: drop(_4) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:812:73-812:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:812:73-812:74)
      kind: drop(_3) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:812:73-812:74)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/pikevm.rs:812:13-812:20)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:813:9-813:29)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:813:9-813:12)
  4: _6 = &mut _2
    SourceInfo(regex-lite/src/pikevm.rs:813:9-813:12)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:813:20-813:28)
  6: _7 = _1
    SourceInfo(regex-lite/src/pikevm.rs:813:20-813:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:813:9-813:29)
      kind: _5 = pikevm::SparseSet::resize(move _6, move _7) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:813:28-813:29)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:813:28-813:29)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:813:29-813:30)
  3: _0 = move _2
    SourceInfo(regex-lite/src/pikevm.rs:814:9-814:12)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:815:5-815:6)
      kind: drop(_2) -> [return: bb6, unwind: bb9]
  }
  preds [bb4]
  succs [bb6, bb9]

bb6
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/pikevm.rs:815:5-815:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:815:6-815:6)
      kind: return
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:815:5-815:6)
      kind: drop(_2) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb9]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:812:73-812:74)
      kind: drop(_3) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:811:5-815:6)
      kind: resume
  }
  preds [bb0, bb3, bb5, bb7, bb8]
  succs []

