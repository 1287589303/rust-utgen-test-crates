bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:13-1076:18)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:44)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:25)
  4: _6 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:44)
      kind: _5 = hir::parse::Parser::<'_>::parse_class_item(move _6) -> [return: bb1, unwind: bb94]
  }
  preds []
  succs [bb1, bb94]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:43-1076:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
      kind: _4 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb93]
  }
  preds [bb0]
  succs [bb2, bb93]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  1: PlaceMention(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  2: _7 = discriminant(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  1: _11 = move ((_4 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  2: _3 = move _11
    SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
      kind: drop(_11) -> [return: bb8, unwind: bb92]
  }
  preds [bb2, bb4]
  succs [bb8, bb92]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  1: _8 = move ((_4 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  3: _10 = move _8
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:21-1076:45)
      kind: _0 = <core::result::Result<(), error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _10) -> [return: bb7, unwind: bb92]
  }
  preds [bb4]
  succs [bb7, bb92]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:45-1076:46)
      kind: drop(_4) -> [return: bb79, unwind: bb94]
  }
  preds [bb6]
  succs [bb79, bb94]

bb8
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:13-1076:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:45-1076:46)
      kind: drop(_4) -> [return: bb9, unwind: bb91]
  }
  preds [bb5]
  succs [bb9, bb91]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:45-1076:46)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1077:9-1077:26)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1077:9-1077:13)
  3: _13 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1077:9-1077:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1077:9-1077:26)
      kind: _12 = hir::parse::Parser::<'_>::bump_space(move _13) -> [return: bb10, unwind: bb91]
  }
  preds [bb8]
  succs [bb10, bb91]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:1077:25-1077:26)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1077:26-1077:27)
  2: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:9-1080:10)
  3: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:12-1078:26)
  4: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:12-1078:16)
  5: _16 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:12-1078:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1078:12-1078:26)
      kind: _15 = hir::parse::Parser::<'_>::is_done(move _16) -> [return: bb11, unwind: bb91]
  }
  preds [bb9]
  succs [bb11, bb91]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1078:12-1078:26)
      kind: switchInt(move _15) -> [0: bb14, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:25-1078:26)
  1: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:1079:24-1079:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1079:24-1079:65)
      kind: _18 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED_AFTER_ITEM) -> [return: bb13, unwind: bb91]
  }
  preds [bb11]
  succs [bb13, bb91]

bb13
  0: _0 = core::result::Result::<(), error::Error>::Err(move _18)
    SourceInfo(regex-lite/src/hir/parse.rs:1079:20-1079:66)
  1: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:1079:65-1079:66)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1080:9-1080:10)
  3: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1080:9-1080:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb12]
  succs [bb78]

bb14
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:1078:25-1078:26)
  1: _14 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1080:10-1080:10)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:1080:9-1080:10)
  3: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:1080:9-1080:10)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:9-1094:10)
  5: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:30)
  6: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:23)
  7: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:16)
  8: _22 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:23)
      kind: _21 = hir::parse::Parser::<'_>::char(move _22) -> [return: bb15, unwind: bb91]
  }
  preds [bb11]
  succs [bb15, bb91]

bb15
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:22-1088:23)
  1: _20 = Ne(move _21, const '-')
    SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1088:12-1088:30)
      kind: switchInt(move _20) -> [0: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:29-1088:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1091:9-1094:10)
      kind: goto -> bb25
  }
  preds [bb15]
  succs [bb25]

bb17
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:1088:29-1088:30)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:46)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:33)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:33)
  4: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:20)
  5: _26 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:33)
      kind: _25 = hir::parse::Parser::<'_>::peek_space(move _26) -> [return: bb18, unwind: bb91]
  }
  preds [bb15]
  succs [bb18, bb91]

bb18
  0: _24 = &_25
    SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:33)
  1: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:32-1089:33)
  2: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:37-1089:46)
  3: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:37-1089:46)
  4: _28 = core::option::Option::<char>::Some(const ']')
    SourceInfo(regex-lite/src/hir/parse.rs:1089:37-1089:46)
  5: _27 = &_28
    SourceInfo(regex-lite/src/hir/parse.rs:1089:37-1089:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:46)
      kind: _23 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _24, move _27) -> [return: bb19, unwind: bb91]
  }
  preds [bb17]
  succs [bb19, bb91]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1089:16-1089:46)
      kind: switchInt(move _23) -> [0: bb21, otherwise: bb20]
  }
  preds [bb18]
  succs [bb20, bb21]

bb20
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1091:9-1094:10)
      kind: goto -> bb25
  }
  preds [bb19]
  succs [bb25]

bb21
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:1089:45-1089:46)
  4: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:46)
  5: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:33)
  6: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:33)
  7: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:20)
  8: _32 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:33)
      kind: _31 = hir::parse::Parser::<'_>::peek_space(move _32) -> [return: bb22, unwind: bb91]
  }
  preds [bb19]
  succs [bb22, bb91]

bb22
  0: _30 = &_31
    SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:33)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:32-1090:33)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:37-1090:46)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:37-1090:46)
  4: _34 = core::option::Option::<char>::Some(const '-')
    SourceInfo(regex-lite/src/hir/parse.rs:1090:37-1090:46)
  5: _33 = &_34
    SourceInfo(regex-lite/src/hir/parse.rs:1090:37-1090:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:46)
      kind: _29 = <core::option::Option<char> as core::cmp::PartialEq>::eq(move _30, move _33) -> [return: bb23, unwind: bb91]
  }
  preds [bb21]
  succs [bb23, bb91]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1090:16-1090:46)
      kind: switchInt(move _29) -> [0: bb38, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb38]

bb24
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  3: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1091:9-1094:10)
      kind: goto -> bb25
  }
  preds [bb23]
  succs [bb25]

bb25
  0: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:13-1092:69)
  1: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:13-1092:18)
  2: _37 = &mut (*_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:13-1092:18)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  4: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  5: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  6: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  7: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  8: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  9: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:67)
  10: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:61-1092:66)
  11: _45 = move _3
    SourceInfo(regex-lite/src/hir/parse.rs:1092:61-1092:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:67)
      kind: _44 = hir::parse::into_class_item_ranges(move _45) -> [return: bb26, unwind: bb90]
  }
  preds [bb16, bb20, bb24]
  succs [bb26, bb90]

bb26
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:66-1092:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
      kind: _43 = <core::result::Result<alloc::vec::Vec<hir::ClassRange>, error::Error> as core::ops::Try>::branch(move _44) -> [return: bb27, unwind: bb89]
  }
  preds [bb25]
  succs [bb27, bb89]

bb27
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  1: PlaceMention(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  2: _46 = discriminant(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
      kind: switchInt(move _46) -> [0: bb30, 1: bb29, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29, bb30]

bb28
  0: FakeRead(ForMatchedPlace(None), _43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
      kind: unreachable
  }
  preds [bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
      kind: falseEdge -> [real: bb31, imaginary: bb30]
  }
  preds [bb27]
  succs [bb30, bb31]

bb30
  0: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  1: _50 = move ((_43 as Continue).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  2: _42 = move _50
    SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
      kind: drop(_50) -> [return: bb33, unwind: bb88]
  }
  preds [bb27, bb29]
  succs [bb33, bb88]

bb31
  0: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  1: _47 = move ((_43 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  2: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  3: _49 = move _47
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:38-1092:68)
      kind: _0 = <core::result::Result<(), error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _49) -> [return: bb32, unwind: bb88]
  }
  preds [bb29]
  succs [bb32, bb88]

bb32
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  1: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  3: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:68-1092:69)
  4: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:68-1092:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
      kind: drop(_43) -> [return: bb76, unwind: bb91]
  }
  preds [bb31]
  succs [bb76, bb91]

bb33
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  1: _41 = &_42
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  2: _40 = &(*_41)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
      kind: _39 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Deref>::deref(move _40) -> [return: bb34, unwind: bb87]
  }
  preds [bb30]
  succs [bb34, bb87]

bb34
  0: _38 = &(*_39)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:37-1092:68)
  1: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:13-1092:69)
      kind: _36 = alloc::vec::Vec::<hir::ClassRange>::extend_from_slice(move _37, move _38) -> [return: bb35, unwind: bb87]
  }
  preds [bb33]
  succs [bb35, bb87]

bb35
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:68-1092:69)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:68-1092:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
      kind: drop(_42) -> [return: bb36, unwind: bb88]
  }
  preds [bb34]
  succs [bb36, bb88]

bb36
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
      kind: drop(_43) -> [return: bb37, unwind: bb91]
  }
  preds [bb35]
  succs [bb37, bb91]

bb37
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  1: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  2: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  3: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  4: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  5: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:1093:23-1093:25)
  6: _51 = ()
    SourceInfo(regex-lite/src/hir/parse.rs:1093:23-1093:25)
  7: _0 = core::result::Result::<(), error::Error>::Ok(move _51)
    SourceInfo(regex-lite/src/hir/parse.rs:1093:20-1093:26)
  8: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:1093:25-1093:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1093:13-1093:26)
      kind: goto -> bb77
  }
  preds [bb36]
  succs [bb77]

bb38
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  3: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:1090:45-1090:46)
  4: _19 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1094:10-1094:10)
  5: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  6: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  7: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  8: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  9: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:9-1099:10)
  10: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:13-1097:39)
  11: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:13-1097:17)
  12: _54 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:13-1097:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1097:13-1097:39)
      kind: _53 = hir::parse::Parser::<'_>::bump_and_bump_space(move _54) -> [return: bb39, unwind: bb91]
  }
  preds [bb23]
  succs [bb39, bb91]

bb39
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1097:13-1097:39)
      kind: switchInt(move _53) -> [0: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41]

bb40
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:38-1097:39)
  1: _52 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1099:10-1099:10)
  2: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1099:9-1099:10)
  3: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:1099:9-1099:10)
  4: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:13-1100:18)
  5: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  6: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:44)
  7: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:25)
  8: _60 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:44)
      kind: _59 = hir::parse::Parser::<'_>::parse_class_item(move _60) -> [return: bb43, unwind: bb91]
  }
  preds [bb39]
  succs [bb43, bb91]

bb41
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:1097:38-1097:39)
  1: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:1098:24-1098:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1098:24-1098:65)
      kind: _56 = error::Error::new(const hir::parse::ERR_CLASS_UNCLOSED_AFTER_DASH) -> [return: bb42, unwind: bb91]
  }
  preds [bb39]
  succs [bb42, bb91]

bb42
  0: _0 = core::result::Result::<(), error::Error>::Err(move _56)
    SourceInfo(regex-lite/src/hir/parse.rs:1098:20-1098:66)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:1098:65-1098:66)
  2: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:1099:9-1099:10)
  3: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:1099:9-1099:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb41]
  succs [bb78]

bb43
  0: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:43-1100:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
      kind: _58 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _59) -> [return: bb44, unwind: bb86]
  }
  preds [bb40]
  succs [bb44, bb86]

bb44
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  1: PlaceMention(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  2: _61 = discriminant(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
      kind: switchInt(move _61) -> [0: bb47, 1: bb46, otherwise: bb45]
  }
  preds [bb43]
  succs [bb45, bb46, bb47]

bb45
  0: FakeRead(ForMatchedPlace(None), _58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
      kind: unreachable
  }
  preds [bb44]
  succs []

bb46
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
      kind: falseEdge -> [real: bb48, imaginary: bb47]
  }
  preds [bb44]
  succs [bb47, bb48]

bb47
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  1: _65 = move ((_58 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  2: _57 = move _65
    SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
      kind: drop(_65) -> [return: bb50, unwind: bb85]
  }
  preds [bb44, bb46]
  succs [bb50, bb85]

bb48
  0: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  1: _62 = move ((_58 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  2: StorageLive(_64)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  3: _64 = move _62
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:21-1100:45)
      kind: _0 = <core::result::Result<(), error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _64) -> [return: bb49, unwind: bb85]
  }
  preds [bb46]
  succs [bb49, bb85]

bb49
  0: StorageDead(_64)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  1: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:45-1100:46)
      kind: drop(_58) -> [return: bb74, unwind: bb91]
  }
  preds [bb48]
  succs [bb74, bb91]

bb50
  0: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
  1: FakeRead(ForLet(None), _57)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:13-1100:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:45-1100:46)
      kind: drop(_58) -> [return: bb51, unwind: bb84]
  }
  preds [bb47]
  succs [bb51, bb84]

bb51
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:45-1100:46)
  1: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:1101:13-1101:18)
  2: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  3: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  4: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:48)
  5: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:42-1102:47)
  6: _70 = move _3
    SourceInfo(regex-lite/src/hir/parse.rs:1102:42-1102:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:48)
      kind: _69 = hir::parse::into_class_item_range(move _70) -> [return: bb52, unwind: bb83]
  }
  preds [bb50]
  succs [bb52, bb83]

bb52
  0: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:47-1102:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
      kind: _68 = <core::result::Result<char, error::Error> as core::ops::Try>::branch(move _69) -> [return: bb53, unwind: bb84]
  }
  preds [bb51]
  succs [bb53, bb84]

bb53
  0: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  1: PlaceMention(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  2: _71 = discriminant(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
      kind: switchInt(move _71) -> [0: bb56, 1: bb55, otherwise: bb54]
  }
  preds [bb52]
  succs [bb54, bb55, bb56]

bb54
  0: FakeRead(ForMatchedPlace(None), _68)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
      kind: unreachable
  }
  preds [bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
      kind: falseEdge -> [real: bb57, imaginary: bb56]
  }
  preds [bb53]
  succs [bb56, bb57]

bb56
  0: StorageLive(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  1: _75 = ((_68 as Continue).0: char)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  2: _67 = _75
    SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
  3: StorageDead(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  4: StorageLive(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  5: StorageLive(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  6: StorageLive(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:46)
  7: StorageLive(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:40-1103:45)
  8: _79 = move _57
    SourceInfo(regex-lite/src/hir/parse.rs:1103:40-1103:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:46)
      kind: _78 = hir::parse::into_class_item_range(move _79) -> [return: bb59, unwind: bb82]
  }
  preds [bb53, bb55]
  succs [bb59, bb82]

bb57
  0: StorageLive(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  1: _72 = move ((_68 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  2: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  3: _74 = move _72
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:20-1102:49)
      kind: _0 = <core::result::Result<(), error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _74) -> [return: bb58, unwind: bb84]
  }
  preds [bb55]
  succs [bb58, bb84]

bb58
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  1: StorageDead(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:1102:48-1102:49)
  2: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:9-1104:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb57]
  succs [bb72]

bb59
  0: StorageDead(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:45-1103:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
      kind: _77 = <core::result::Result<char, error::Error> as core::ops::Try>::branch(move _78) -> [return: bb60, unwind: bb84]
  }
  preds [bb56]
  succs [bb60, bb84]

bb60
  0: StorageDead(_78)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  1: PlaceMention(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  2: _80 = discriminant(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
      kind: switchInt(move _80) -> [0: bb63, 1: bb62, otherwise: bb61]
  }
  preds [bb59]
  succs [bb61, bb62, bb63]

bb61
  0: FakeRead(ForMatchedPlace(None), _77)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
      kind: unreachable
  }
  preds [bb60]
  succs []

bb62
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
      kind: falseEdge -> [real: bb64, imaginary: bb63]
  }
  preds [bb60]
  succs [bb63, bb64]

bb63
  0: StorageLive(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  1: _84 = ((_77 as Continue).0: char)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  2: _76 = _84
    SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
  3: StorageDead(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  4: _66 = hir::ClassRange { start: move _67, end: move _76 }
    SourceInfo(regex-lite/src/hir/parse.rs:1101:21-1104:10)
  5: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:9-1104:10)
  6: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:9-1104:10)
  7: FakeRead(ForLet(None), _66)
    SourceInfo(regex-lite/src/hir/parse.rs:1101:13-1101:18)
  8: StorageDead(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:10-1104:11)
  9: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:10-1104:11)
  10: StorageLive(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:9-1107:10)
  11: StorageLive(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:12-1105:35)
  12: StorageLive(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:12-1105:23)
  13: _87 = (_66.0: char)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:12-1105:23)
  14: StorageLive(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:26-1105:35)
  15: _88 = (_66.1: char)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:26-1105:35)
  16: _86 = Gt(move _87, move _88)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:12-1105:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1105:12-1105:35)
      kind: switchInt(move _86) -> [0: bb67, otherwise: bb66]
  }
  preds [bb60, bb62]
  succs [bb66, bb67]

bb64
  0: StorageLive(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  1: _81 = move ((_77 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  2: StorageLive(_83)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  3: _83 = move _81
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:18-1103:47)
      kind: _0 = <core::result::Result<(), error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _83) -> [return: bb65, unwind: bb84]
  }
  preds [bb62]
  succs [bb65, bb84]

bb65
  0: StorageDead(_83)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  1: StorageDead(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:1103:46-1103:47)
  2: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:9-1104:10)
  3: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:9-1104:10)
  4: StorageDead(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:10-1104:11)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb64]
  succs [bb72]

bb66
  0: StorageDead(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:34-1105:35)
  1: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:34-1105:35)
  2: StorageLive(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:1106:24-1106:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1106:24-1106:59)
      kind: _90 = error::Error::new(const hir::parse::ERR_CLASS_INVALID_RANGE) -> [return: bb68, unwind: bb84]
  }
  preds [bb63]
  succs [bb68, bb84]

bb67
  0: StorageDead(_88)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:34-1105:35)
  1: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:1105:34-1105:35)
  2: _85 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:1107:10-1107:10)
  3: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:1107:9-1107:10)
  4: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:1107:9-1107:10)
  5: StorageLive(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:9-1108:26)
  6: StorageLive(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:9-1108:14)
  7: _92 = &mut (*_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:9-1108:14)
  8: StorageLive(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:20-1108:25)
  9: _93 = _66
    SourceInfo(regex-lite/src/hir/parse.rs:1108:20-1108:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1108:9-1108:26)
      kind: _91 = alloc::vec::Vec::<hir::ClassRange>::push(move _92, move _93) -> [return: bb69, unwind: bb84]
  }
  preds [bb63]
  succs [bb69, bb84]

bb68
  0: _0 = core::result::Result::<(), error::Error>::Err(move _90)
    SourceInfo(regex-lite/src/hir/parse.rs:1106:20-1106:60)
  1: StorageDead(_90)
    SourceInfo(regex-lite/src/hir/parse.rs:1106:59-1106:60)
  2: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:1107:9-1107:10)
  3: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:1107:9-1107:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb66]
  succs [bb73]

bb69
  0: StorageDead(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:25-1108:26)
  1: StorageDead(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:25-1108:26)
  2: StorageDead(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:1108:26-1108:27)
  3: StorageLive(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:1109:12-1109:14)
  4: _94 = ()
    SourceInfo(regex-lite/src/hir/parse.rs:1109:12-1109:14)
  5: _0 = core::result::Result::<(), error::Error>::Ok(move _94)
    SourceInfo(regex-lite/src/hir/parse.rs:1109:9-1109:15)
  6: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:1109:14-1109:15)
  7: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_57) -> [return: bb70, unwind: bb91]
  }
  preds [bb67]
  succs [bb70, bb91]

bb70
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_3) -> [return: bb71, unwind: bb94]
  }
  preds [bb69]
  succs [bb71, bb94]

bb71
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:6-1110:6)
      kind: goto -> bb81
  }
  preds [bb70]
  succs [bb81]

bb72
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:1104:10-1104:11)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb58, bb65]
  succs [bb73]

bb73
  0: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_57) -> [return: bb75, unwind: bb91]
  }
  preds [bb68, bb72]
  succs [bb75, bb91]

bb74
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:1100:45-1100:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb75
  }
  preds [bb49]
  succs [bb75]

bb75
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb73, bb74]
  succs [bb78]

bb76
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  1: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  2: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  3: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  4: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb32]
  succs [bb77]

bb77
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  3: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:1094:9-1094:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb78
  }
  preds [bb37, bb76]
  succs [bb78]

bb78
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_3) -> [return: bb80, unwind: bb94]
  }
  preds [bb13, bb42, bb75, bb77]
  succs [bb80, bb94]

bb79
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1076:45-1076:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb80
  }
  preds [bb7]
  succs [bb80]

bb80
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:6-1110:6)
      kind: goto -> bb81
  }
  preds [bb78, bb79]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:6-1110:6)
      kind: return
  }
  preds [bb71, bb80]
  succs []

bb82
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1103:45-1103:46)
      kind: drop(_79) -> [return: bb84, unwind terminate(cleanup)]
  }
  preds [bb56]
  succs [bb84]

bb83
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1102:47-1102:48)
      kind: drop(_70) -> [return: bb84, unwind terminate(cleanup)]
  }
  preds [bb51]
  succs [bb84]

bb84
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_57) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb50, bb52, bb57, bb59, bb64, bb66, bb67, bb82, bb83]
  succs [bb91]

bb85
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:45-1100:46)
      kind: drop(_58) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb47, bb48]
  succs [bb91]

bb86
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1100:44-1100:45)
      kind: drop(_59) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb91]

bb87
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
      kind: drop(_42) -> [return: bb88, unwind terminate(cleanup)]
  }
  preds [bb33, bb34]
  succs [bb88]

bb88
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:69-1092:70)
      kind: drop(_43) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb30, bb31, bb35, bb87]
  succs [bb91]

bb89
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:67-1092:68)
      kind: drop(_44) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb91]

bb90
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1092:66-1092:67)
      kind: drop(_45) -> [return: bb91, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb91]

bb91
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1110:5-1110:6)
      kind: drop(_3) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb12, bb14, bb17, bb18, bb21, bb22, bb32, bb36, bb38, bb40, bb41, bb49, bb69, bb73, bb84, bb85, bb86, bb88, bb89, bb90]
  succs [bb94]

bb92
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:45-1076:46)
      kind: drop(_4) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb94]

bb93
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1076:44-1076:45)
      kind: drop(_5) -> [return: bb94, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb94]

bb94
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1072:5-1110:6)
      kind: resume
  }
  preds [bb0, bb7, bb70, bb78, bb91, bb92, bb93]
  succs []

