bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/nfa.rs:267:13-267:16)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:267:32-277:10)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/nfa.rs:268:13-268:20)
  3: _5 = move _2
    SourceInfo(regex-lite/src/nfa.rs:268:13-268:20)
  4: StorageLive(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _6 = alloc::vec::Vec::<nfa::State>::new() -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:273:43-273:47)
  1: _7 = core::option::Option::<usize>::None
    SourceInfo(regex-lite/src/nfa.rs:273:43-273:47)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/nfa.rs:274:32-274:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:274:32-274:57)
      kind: _8 = <std::collections::HashMap<alloc::sync::Arc<str>, u32> as core::default::Default>::default() -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _9 = alloc::vec::Vec::<core::option::Option<alloc::sync::Arc<str>>>::new() -> [return: bb3, unwind: bb17]
  }
  preds [bb1]
  succs [bb3, bb17]

bb3
  0: _4 = nfa::NFA { pattern: move _5, states: move _6, start: const 0_u32, is_start_anchored: const false, is_match_empty: const false, static_explicit_captures_len: move _7, cap_name_to_index: move _8, cap_index_to_name: move _9, memory_extra: const 0_usize }
    SourceInfo(regex-lite/src/nfa.rs:267:32-277:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_9) -> [return: bb4, unwind: bb13]
  }
  preds [bb2]
  succs [bb4, bb13]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_8) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_6) -> [return: bb6, unwind: bb15]
  }
  preds [bb4]
  succs [bb6, bb15]

bb6
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_5) -> [return: bb7, unwind: bb16]
  }
  preds [bb5]
  succs [bb7, bb16]

bb7
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:267:19-277:11)
      kind: _3 = core::cell::RefCell::<nfa::NFA>::new(move _4) -> [return: bb8, unwind: bb16]
  }
  preds [bb6]
  succs [bb8, bb16]

bb8
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:277:10-277:11)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/nfa.rs:267:13-267:16)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/nfa.rs:278:20-278:26)
  3: _10 = _1
    SourceInfo(regex-lite/src/nfa.rs:278:20-278:26)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/nfa.rs:278:28-278:31)
  5: _11 = move _3
    SourceInfo(regex-lite/src/nfa.rs:278:28-278:31)
  6: _0 = nfa::Compiler { config: move _10, nfa: move _11 }
    SourceInfo(regex-lite/src/nfa.rs:278:9-278:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:278:32-278:33)
      kind: drop(_11) -> [return: bb9, unwind: bb12]
  }
  preds [bb7]
  succs [bb9, bb12]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/nfa.rs:278:32-278:33)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/nfa.rs:278:32-278:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:279:5-279:6)
      kind: drop(_3) -> [return: bb10, unwind: bb20]
  }
  preds [bb8]
  succs [bb10, bb20]

bb10
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/nfa.rs:279:5-279:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:279:5-279:6)
      kind: drop(_2) -> [return: bb11, unwind: bb21]
  }
  preds [bb9]
  succs [bb11, bb21]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:279:6-279:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:279:5-279:6)
      kind: drop(_3) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb20]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_8) -> [return: bb14, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb14]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_6) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb4, bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_5) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb5, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:10-277:11)
      kind: drop(_4) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb6, bb7, bb15]
  succs [bb20]

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_8) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_6) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb1, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:277:9-277:10)
      kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)]
  }
  preds [bb0, bb18]
  succs [bb20]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:279:5-279:6)
      kind: drop(_2) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb9, bb12, bb16, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:266:5-279:6)
      kind: resume
  }
  preds [bb10, bb20]
  succs []

