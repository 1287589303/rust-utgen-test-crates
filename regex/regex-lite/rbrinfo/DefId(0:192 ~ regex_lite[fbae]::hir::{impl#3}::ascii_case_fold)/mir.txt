bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:405:13-405:16)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:405:19-405:30)
  2: _3 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:405:19-405:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:405:19-405:36)
      kind: _2 = alloc::vec::Vec::<hir::ClassRange>::len(move _3) -> [return: bb1, unwind: bb18]
  }
  preds []
  succs [bb1, bb18]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:405:35-405:36)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/mod.rs:405:13-405:16)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:406:21-406:24)
  6: _7 = _2
    SourceInfo(regex-lite/src/hir/mod.rs:406:21-406:24)
  7: _6 = core::ops::Range::<usize> { start: const 0_usize, end: move _7 }
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  8: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:406:23-406:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
      kind: _5 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:406:23-406:24)
  1: PlaceMention(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  3: _8 = move _5
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
      kind: falseUnwind -> [real: bb4, unwind: bb18]
  }
  preds [bb2, bb16]
  succs [bb4, bb18]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  3: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  4: _13 = &mut _8
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  5: _12 = &mut (*_13)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
      kind: _11 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _12) -> [return: bb5, unwind: bb18]
  }
  preds [bb3]
  succs [bb5, bb18]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:406:23-406:24)
  1: PlaceMention(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  2: _14 = discriminant(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
      kind: switchInt(move _14) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:18-406:24)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:406:13-406:14)
  1: _16 = ((_11 as Some).0: usize)
    SourceInfo(regex-lite/src/hir/mod.rs:406:13-406:14)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:67)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:49)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:407:46-407:49)
  5: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:46)
  6: _20 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:46)
  7: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:407:47-407:48)
  8: _21 = _16
    SourceInfo(regex-lite/src/hir/mod.rs:407:47-407:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:46-407:49)
      kind: _19 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _20, move _21) -> [return: bb10, unwind: bb18]
  }
  preds [bb5, bb7]
  succs [bb10, bb18]

bb9
  0: _4 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  4: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  5: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  6: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  7: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:411:9-411:28)
  8: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:411:9-411:13)
  9: _28 = &mut (*_1)
    SourceInfo(regex-lite/src/hir/mod.rs:411:9-411:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:411:9-411:28)
      kind: _27 = hir::Class::canonicalize(move _28) -> [return: bb17, unwind: bb18]
  }
  preds [bb7]
  succs [bb17, bb18]

bb10
  0: _18 = &(*_19)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:49)
  1: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:407:48-407:49)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:407:48-407:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:67)
      kind: _17 = hir::ClassRange::ascii_case_fold(move _18) -> [return: bb11, unwind: bb18]
  }
  preds [bb8]
  succs [bb11, bb18]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:407:66-407:67)
  1: PlaceMention(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:67)
  2: _22 = discriminant(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:407:35-407:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:20-407:32)
      kind: switchInt(move _22) -> [1: bb12, otherwise: bb15]
  }
  preds [bb10]
  succs [bb12, bb15]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:20-407:32)
      kind: falseEdge -> [real: bb13, imaginary: bb15]
  }
  preds [bb11]
  succs [bb13, bb15]

bb13
  0: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:407:25-407:31)
  1: _23 = ((_17 as Some).0: hir::ClassRange)
    SourceInfo(regex-lite/src/hir/mod.rs:407:25-407:31)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:408:17-408:41)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:408:17-408:28)
  4: _25 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:408:17-408:28)
  5: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:408:34-408:40)
  6: _26 = _23
    SourceInfo(regex-lite/src/hir/mod.rs:408:34-408:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:408:17-408:41)
      kind: _24 = alloc::vec::Vec::<hir::ClassRange>::push(move _25, move _26) -> [return: bb14, unwind: bb18]
  }
  preds [bb12]
  succs [bb14, bb18]

bb14
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:408:40-408:41)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:408:40-408:41)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:408:41-408:42)
  3: _10 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:407:68-409:14)
  4: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:409:13-409:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:13-409:14)
      kind: goto -> bb16
  }
  preds [bb13]
  succs [bb16]

bb15
  0: _10 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:409:14-409:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:407:13-409:14)
      kind: goto -> bb16
  }
  preds [bb11, bb12]
  succs [bb16]

bb16
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  4: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  5: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:410:9-410:10)
  6: _9 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:406:9-410:10)
      kind: goto -> bb3
  }
  preds [bb14, bb15]
  succs [bb3]

bb17
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:411:27-411:28)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:411:28-411:29)
  2: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:404:35-412:6)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:412:5-412:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:412:6-412:6)
      kind: return
  }
  preds [bb9]
  succs []

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:404:5-412:6)
      kind: resume
  }
  preds [bb0, bb1, bb3, bb4, bb8, bb9, bb10, bb13]
  succs []

