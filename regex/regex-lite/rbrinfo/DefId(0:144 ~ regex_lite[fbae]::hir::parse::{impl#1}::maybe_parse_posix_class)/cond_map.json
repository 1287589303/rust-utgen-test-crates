{
  "regex-lite/src/hir/parse.rs:1172:28:1172:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.char() != ':'",
          "lhs": "self.char()",
          "rhs": "':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1182:17:1182:28": [
    {
      "Bool": {
        "Other": "self.bump()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1188:15:1188:33": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.char() != ':'",
          "lhs": "self.char()",
          "rhs": "':'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1189:12:1189:26": [
    {
      "Bool": {
        "Other": "self.is_done()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1180:12:1180:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "self.char() == '^'",
          "lhs": "self.char()",
          "rhs": "'^'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1198:12:1198:46": [
    {
      "Bool": {
        "Other": "let Ok(ranges) = posix_class(name)"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1176:13:1176:24": [
    {
      "Bool": {
        "Other": "self.bump()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1200:16:1200:23": [
    {
      "Bool": {
        "Other": "negated"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1194:13:1194:31": [
    {
      "Bool": {
        "Other": "self.bump_if(\":]\")"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1172:13:1172:24": [
    {
      "Bool": {
        "Other": "self.bump()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:1188:37:1188:48": [
    {
      "Bool": {
        "Other": "self.bump()"
      }
    }
  ]
}