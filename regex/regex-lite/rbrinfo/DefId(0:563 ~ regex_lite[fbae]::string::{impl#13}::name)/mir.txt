bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:1711:13-1711:14)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:49)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:28)
  6: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
  7: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:28)
  8: _10 = &((*_1).2: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
      kind: _9 = <alloc::sync::Arc<pikevm::PikeVM> as core::ops::Deref>::deref(move _10) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: _8 = &(*_9)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:28)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:1711:27-1711:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
      kind: _7 = pikevm::PikeVM::nfa(move _8) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: _6 = &(*_7)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:34)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:1711:33-1711:34)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:1711:44-1711:48)
  3: _11 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1711:44-1711:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:49)
      kind: _5 = nfa::NFA::to_index(move _6, move _11) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:1711:48-1711:49)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:1711:48-1711:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
      kind: _4 = <core::option::Option<usize> as core::ops::Try>::branch(move _5) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  1: PlaceMention(_4)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  2: _12 = discriminant(_4)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
      kind: switchInt(move _12) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  1: _16 = ((_4 as Continue).0: usize)
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  2: _3 = _16
    SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/string.rs:1711:13-1711:14)
  5: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  6: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  7: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  8: StorageLive(_17)
    SourceInfo(regex-lite/src/string.rs:1712:9-1712:13)
  9: _17 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:1712:9-1712:13)
  10: StorageLive(_18)
    SourceInfo(regex-lite/src/string.rs:1712:18-1712:19)
  11: _18 = _3
    SourceInfo(regex-lite/src/string.rs:1712:18-1712:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1712:9-1712:20)
      kind: _0 = string::Captures::<'_>::get(move _17, move _18) -> [return: bb10, unwind: bb12]
  }
  preds [bb4, bb6]
  succs [bb10, bb12]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  1: _13 = ((_4 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  2: StorageLive(_15)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  3: _15 = _13
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1711:17-1711:50)
      kind: _0 = <core::option::Option<string::Match<'_>> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _15) -> [return: bb9, unwind: bb12]
  }
  preds [bb6]
  succs [bb9, bb12]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:1711:49-1711:50)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  3: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  4: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1711:50-1711:51)
  5: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:1713:5-1713:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1713:6-1713:6)
      kind: goto -> bb11
  }
  preds [bb8]
  succs [bb11]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/string.rs:1712:19-1712:20)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/string.rs:1712:19-1712:20)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:1713:5-1713:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1713:6-1713:6)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1713:6-1713:6)
      kind: return
  }
  preds [bb9, bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1710:5-1713:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb7, bb8]
  succs []

