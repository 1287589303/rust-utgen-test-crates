bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:301:9-303:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:301:12-301:26)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:301:12-301:16)
  3: _4 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:301:12-301:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:301:12-301:26)
      kind: _3 = hir::parse::Parser::<'_>::is_done(move _4) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:301:12-301:26)
      kind: switchInt(move _3) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:301:25-301:26)
  1: _0 = core::option::Option::<char>::None
    SourceInfo(regex-lite/src/hir/parse.rs:302:20-302:24)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:303:9-303:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:303:9-303:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:305:6-305:6)
      kind: goto -> bb12
  }
  preds [bb1]
  succs [bb12]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:301:25-301:26)
  1: _2 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:303:10-303:10)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:303:9-303:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:303:9-303:10)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:70)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:70)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:62)
  7: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:304:23-304:62)
  8: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:23)
  9: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:23)
  10: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:13)
  11: _12 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:23)
      kind: _11 = hir::parse::Parser::<'_>::pattern(move _12) -> [return: bb4, unwind: bb13]
  }
  preds [bb1]
  succs [bb4, bb13]

bb4
  0: _10 = &(*_11)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:23)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:304:22-304:23)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:61)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:59)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:34)
  5: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:28)
  6: _16 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:34)
      kind: _15 = hir::parse::Parser::<'_>::pos(move _16) -> [return: bb5, unwind: bb13]
  }
  preds [bb3]
  succs [bb5, bb13]

bb5
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:304:33-304:34)
  1: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:59)
  2: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:48)
  3: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:41)
  4: _19 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:48)
      kind: _18 = hir::parse::Parser::<'_>::char(move _19) -> [return: bb6, unwind: bb13]
  }
  preds [bb4]
  succs [bb6, bb13]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:304:47-304:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:37-304:59)
      kind: _17 = core::char::methods::<impl char>::len_utf8(move _18) -> [return: bb7, unwind: bb13]
  }
  preds [bb5]
  succs [bb7, bb13]

bb7
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:304:58-304:59)
  1: _20 = AddWithOverflow(_15, _17)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:59)
      kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", move _15, move _17) -> [success: bb8, unwind: bb13]
  }
  preds [bb6]
  succs [bb8, bb13]

bb8
  0: _14 = move (_20.0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:59)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:304:58-304:59)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:304:58-304:59)
  3: _13 = core::ops::RangeFrom::<usize> { start: move _14 }
    SourceInfo(regex-lite/src/hir/parse.rs:304:24-304:61)
  4: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:304:60-304:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:23-304:62)
      kind: _9 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _10, move _13) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: _8 = &(*_9)
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:62)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:304:61-304:62)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:304:61-304:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:70)
      kind: _7 = core::str::<impl str>::chars(move _8) -> [return: bb10, unwind: bb13]
  }
  preds [bb8]
  succs [bb10, bb13]

bb10
  0: _6 = &mut _7
    SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:70)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:304:69-304:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:304:9-304:77)
      kind: _0 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _6) -> [return: bb11, unwind: bb13]
  }
  preds [bb9]
  succs [bb11, bb13]

bb11
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:304:76-304:77)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:305:5-305:6)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:305:5-305:6)
  3: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:305:5-305:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:305:6-305:6)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:305:6-305:6)
      kind: return
  }
  preds [bb2, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:300:5-305:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10]
  succs []

