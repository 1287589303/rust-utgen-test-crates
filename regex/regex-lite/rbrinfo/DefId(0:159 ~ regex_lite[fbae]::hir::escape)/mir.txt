bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:12:9-12:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:12:19-12:32)
      kind: _2 = alloc::string::String::new() -> [return: bb1, unwind: bb21]
  }
  preds []
  succs [bb1, bb21]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/mod.rs:12:9-12:16)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:13:5-13:31)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:13:5-13:8)
  3: _4 = &mut _2
    SourceInfo(regex-lite/src/hir/mod.rs:13:5-13:8)
  4: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:13:17-13:30)
  5: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:13:17-13:24)
  6: _6 = &(*_1)
    SourceInfo(regex-lite/src/hir/mod.rs:13:17-13:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:13:17-13:30)
      kind: _5 = core::str::<impl str>::len(move _6) -> [return: bb2, unwind: bb20]
  }
  preds [bb0]
  succs [bb2, bb20]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:13:29-13:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:13:5-13:31)
      kind: _3 = alloc::string::String::reserve(move _4, move _5) -> [return: bb3, unwind: bb20]
  }
  preds [bb1]
  succs [bb3, bb20]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:13:30-13:31)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:13:30-13:31)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:13:31-13:32)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  5: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  6: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:22)
  7: _10 = &(*_1)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
      kind: _9 = core::str::<impl str>::chars(move _10) -> [return: bb4, unwind: bb20]
  }
  preds [bb2]
  succs [bb4, bb20]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:14:29-14:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
      kind: _8 = <core::str::Chars<'_> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:14:29-14:30)
  1: PlaceMention(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  3: _11 = move _8
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
      kind: falseUnwind -> [real: bb7, unwind: bb20]
  }
  preds [bb5, bb18]
  succs [bb7, bb20]

bb7
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  1: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  2: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  3: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  4: _16 = &mut _11
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  5: _15 = &mut (*_16)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
      kind: _14 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _15) -> [return: bb8, unwind: bb20]
  }
  preds [bb6]
  succs [bb8, bb20]

bb8
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:14:29-14:30)
  1: PlaceMention(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  2: _17 = discriminant(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
      kind: switchInt(move _17) -> [0: bb10, 1: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10, bb11]

bb9
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:15-14:30)
      kind: unreachable
  }
  preds [bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
      kind: falseEdge -> [real: bb12, imaginary: bb11]
  }
  preds [bb8]
  succs [bb11, bb12]

bb11
  0: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:14:9-14:11)
  1: _19 = ((_14 as Some).0: char)
    SourceInfo(regex-lite/src/hir/mod.rs:14:9-14:11)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:15:9-17:10)
  3: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:15:12-15:33)
  4: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:15:30-15:32)
  5: _22 = _19
    SourceInfo(regex-lite/src/hir/mod.rs:15:30-15:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:15:12-15:33)
      kind: _21 = hir::is_meta_character(move _22) -> [return: bb13, unwind: bb20]
  }
  preds [bb8, bb10]
  succs [bb13, bb20]

bb12
  0: _7 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  2: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  4: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  5: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  6: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  7: _0 = move _2
    SourceInfo(regex-lite/src/hir/mod.rs:20:5-20:8)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:21:1-21:2)
      kind: drop(_2) -> [return: bb19, unwind: bb21]
  }
  preds [bb10]
  succs [bb19, bb21]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:15:12-15:33)
      kind: switchInt(move _21) -> [0: bb16, otherwise: bb14]
  }
  preds [bb11]
  succs [bb14, bb16]

bb14
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:15:32-15:33)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:16:13-16:27)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:16:13-16:16)
  3: _24 = &mut _2
    SourceInfo(regex-lite/src/hir/mod.rs:16:13-16:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:16:13-16:27)
      kind: _23 = alloc::string::String::push(move _24, const '\\') -> [return: bb15, unwind: bb20]
  }
  preds [bb13]
  succs [bb15, bb20]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:16:26-16:27)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:16:27-16:28)
  2: _20 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:15:34-17:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:15:9-17:10)
      kind: goto -> bb17
  }
  preds [bb14]
  succs [bb17]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:15:32-15:33)
  1: _20 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:17:10-17:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:15:9-17:10)
      kind: goto -> bb17
  }
  preds [bb13]
  succs [bb17]

bb17
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:17:9-17:10)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:17:9-17:10)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:18:9-18:21)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:18:9-18:12)
  4: _26 = &mut _2
    SourceInfo(regex-lite/src/hir/mod.rs:18:9-18:12)
  5: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:18:18-18:20)
  6: _27 = _19
    SourceInfo(regex-lite/src/hir/mod.rs:18:18-18:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:18:9-18:21)
      kind: _25 = alloc::string::String::push(move _26, move _27) -> [return: bb18, unwind: bb20]
  }
  preds [bb15, bb16]
  succs [bb18, bb20]

bb18
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:18:20-18:21)
  1: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:18:20-18:21)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:18:21-18:22)
  3: _13 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:14:31-19:6)
  4: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  5: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  6: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  7: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:19:5-19:6)
  8: _12 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:14:5-19:6)
      kind: goto -> bb6
  }
  preds [bb17]
  succs [bb6]

bb19
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:21:1-21:2)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:21:2-21:2)
      kind: return
  }
  preds [bb12]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:21:1-21:2)
      kind: drop(_2) -> [return: bb21, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb4, bb6, bb7, bb11, bb14, bb17]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:11:1-21:2)
      kind: resume
  }
  preds [bb0, bb12, bb20]
  succs []

