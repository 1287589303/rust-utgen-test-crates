bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:338:12-338:27)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:338:12-338:16)
  2: _3 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:338:12-338:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:338:12-338:27)
      kind: _2 = alloc::vec::Vec::<hir::Hir>::is_empty(move _3) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:338:12-338:27)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:338:26-338:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:339:13-339:24)
      kind: _0 = hir::Hir::fail() -> [return: bb39, unwind: bb43]
  }
  preds [bb1]
  succs [bb39, bb43]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:338:26-338:27)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:34)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:29)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:23)
  4: _6 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:29)
      kind: _5 = alloc::vec::Vec::<hir::Hir>::len(move _6) -> [return: bb4, unwind: bb43]
  }
  preds [bb1]
  succs [bb4, bb43]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:340:28-340:29)
  1: _4 = Eq(move _5, const 1_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:340:19-340:34)
      kind: switchInt(move _4) -> [0: bb8, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:340:33-340:34)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:341:13-341:23)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:341:13-341:17)
  3: _8 = &mut _1
    SourceInfo(regex-lite/src/hir/mod.rs:341:13-341:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:341:13-341:23)
      kind: _7 = alloc::vec::Vec::<hir::Hir>::pop(move _8) -> [return: bb6, unwind: bb43]
  }
  preds [bb4]
  succs [bb6, bb43]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:341:22-341:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:341:13-341:32)
      kind: _0 = core::option::Option::<hir::Hir>::unwrap(move _7) -> [return: bb7, unwind: bb42]
  }
  preds [bb5]
  succs [bb7, bb42]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:341:31-341:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:340:16-365:10)
      kind: goto -> bb38
  }
  preds [bb6]
  succs [bb38]

bb8
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:340:33-340:34)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:343:17-343:23)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:37)
  3: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:30)
  4: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:37)
  5: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:30)
  6: _13 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:37)
      kind: _12 = <alloc::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _13) -> [return: bb9, unwind: bb43]
  }
  preds [bb4]
  succs [bb9, bb43]

bb9
  0: _11 = &(*_12)
    SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:30)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:343:29-343:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:37)
      kind: _10 = core::slice::<impl [hir::Hir]>::iter(move _11) -> [return: bb10, unwind: bb43]
  }
  preds [bb8]
  succs [bb10, bb43]

bb10
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:343:36-343:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:343:26-343:48)
      kind: _9 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::peekable(move _10) -> [return: bb11, unwind: bb43]
  }
  preds [bb9]
  succs [bb11, bb43]

bb11
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:343:47-343:48)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-lite/src/hir/mod.rs:343:17-343:23)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:343:48-343:49)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:344:17-344:38)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:345:17-345:26)
  5: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:345:17-345:19)
  6: _16 = &mut _9
    SourceInfo(regex-lite/src/hir/mod.rs:345:17-345:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:345:17-345:26)
      kind: _15 = core::iter::Peekable::<core::slice::Iter<'_, hir::Hir>>::peek(move _16) -> [return: bb12, unwind: bb43]
  }
  preds [bb10]
  succs [bb12, bb43]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:345:25-345:26)
  1: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:345:41-345:68)
  2: _17 = {closure@regex-lite/src/hir/mod.rs:345:41: 345:46}
    SourceInfo(regex-lite/src/hir/mod.rs:345:41-345:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:345:17-345:69)
      kind: _14 = core::option::Option::<&&hir::Hir>::map_or::<bool, {closure@regex-lite/src/hir/mod.rs:345:41: 345:46}>(move _15, const false, move _17) -> [return: bb13, unwind: bb43]
  }
  preds [bb11]
  succs [bb13, bb43]

bb13
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:345:68-345:69)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:345:68-345:69)
  2: FakeRead(ForLet(None), _14)
    SourceInfo(regex-lite/src/hir/mod.rs:344:17-344:38)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:346:17-346:35)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:347:17-347:26)
  5: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:347:17-347:19)
  6: _20 = &mut _9
    SourceInfo(regex-lite/src/hir/mod.rs:347:17-347:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:347:17-347:26)
      kind: _19 = core::iter::Peekable::<core::slice::Iter<'_, hir::Hir>>::peek(move _20) -> [return: bb14, unwind: bb43]
  }
  preds [bb12]
  succs [bb14, bb43]

bb14
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:347:25-347:26)
  1: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:347:41-347:65)
  2: _21 = {closure@regex-lite/src/hir/mod.rs:347:41: 347:46}
    SourceInfo(regex-lite/src/hir/mod.rs:347:41-347:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:347:17-347:66)
      kind: _18 = core::option::Option::<&&hir::Hir>::map_or::<bool, {closure@regex-lite/src/hir/mod.rs:347:41: 347:46}>(move _19, const false, move _21) -> [return: bb15, unwind: bb43]
  }
  preds [bb13]
  succs [bb15, bb43]

bb15
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:347:65-347:66)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:347:65-347:66)
  2: FakeRead(ForLet(None), _18)
    SourceInfo(regex-lite/src/hir/mod.rs:346:17-346:35)
  3: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:348:17-348:49)
  4: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:349:17-349:26)
  5: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:349:17-349:19)
  6: _24 = &mut _9
    SourceInfo(regex-lite/src/hir/mod.rs:349:17-349:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:349:17-349:26)
      kind: _23 = core::iter::Peekable::<core::slice::Iter<'_, hir::Hir>>::peek(move _24) -> [return: bb16, unwind: bb43]
  }
  preds [bb14]
  succs [bb16, bb43]

bb16
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:349:25-349:26)
  1: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:349:36-349:74)
  2: _25 = {closure@regex-lite/src/hir/mod.rs:349:36: 349:41}
    SourceInfo(regex-lite/src/hir/mod.rs:349:36-349:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:349:17-349:75)
      kind: _22 = core::option::Option::<&&hir::Hir>::and_then::<usize, {closure@regex-lite/src/hir/mod.rs:349:36: 349:41}>(move _23, move _25) -> [return: bb17, unwind: bb43]
  }
  preds [bb15]
  succs [bb17, bb43]

bb17
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:349:74-349:75)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:349:74-349:75)
  2: FakeRead(ForLet(None), _22)
    SourceInfo(regex-lite/src/hir/mod.rs:348:17-348:49)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
  4: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  5: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  6: _28 = move _9
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
      kind: _27 = <core::iter::Peekable<core::slice::Iter<'_, hir::Hir>> as core::iter::IntoIterator>::into_iter(move _28) -> [return: bb18, unwind: bb43]
  }
  preds [bb16]
  succs [bb18, bb43]

bb18
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:350:25-350:26)
  1: PlaceMention(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  2: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  3: _29 = move _27
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
      kind: falseUnwind -> [real: bb20, unwind: bb43]
  }
  preds [bb18, bb35]
  succs [bb20, bb43]

bb20
  0: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  1: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  4: _34 = &mut _29
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  5: _33 = &mut (*_34)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
      kind: _32 = <core::iter::Peekable<core::slice::Iter<'_, hir::Hir>> as core::iter::Iterator>::next(move _33) -> [return: bb21, unwind: bb43]
  }
  preds [bb19]
  succs [bb21, bb43]

bb21
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:350:25-350:26)
  1: PlaceMention(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  2: _35 = discriminant(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
      kind: switchInt(move _35) -> [0: bb23, 1: bb24, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23, bb24]

bb22
  0: FakeRead(ForMatchedPlace(None), _32)
    SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:24-350:26)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
      kind: falseEdge -> [real: bb25, imaginary: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:350:17-350:20)
  1: _37 = ((_32 as Some).0: &hir::Hir)
    SourceInfo(regex-lite/src/hir/mod.rs:350:17-350:20)
  2: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:79)
  3: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:54)
  4: _39 = _14
    SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:54)
      kind: switchInt(move _39) -> [0: bb27, otherwise: bb26]
  }
  preds [bb21, bb23]
  succs [bb26, bb27]

bb25
  0: _26 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  2: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  3: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  4: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  5: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  6: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  7: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/mod.rs:360:23-360:49)
  8: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/mod.rs:360:44-360:48)
  9: _47 = move _1
    SourceInfo(regex-lite/src/hir/mod.rs:360:44-360:48)
  10: _46 = hir::HirKind::Alternation(move _47)
    SourceInfo(regex-lite/src/hir/mod.rs:360:23-360:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:360:48-360:49)
      kind: drop(_47) -> [return: bb36, unwind: bb41]
  }
  preds [bb23]
  succs [bb36, bb41]

bb26
  0: _38 = ((*_37).1: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:351:58-351:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:79)
      kind: goto -> bb28
  }
  preds [bb24]
  succs [bb28]

bb27
  0: _38 = const false
    SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:351:37-351:79)
      kind: goto -> bb28
  }
  preds [bb24]
  succs [bb28]

bb28
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:351:78-351:79)
  1: _14 = move _38
    SourceInfo(regex-lite/src/hir/mod.rs:351:17-351:79)
  2: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:351:78-351:79)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:70)
  4: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:48)
  5: _41 = _18
    SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:48)
      kind: switchInt(move _41) -> [0: bb30, otherwise: bb29]
  }
  preds [bb26, bb27]
  succs [bb29, bb30]

bb29
  0: _40 = const true
    SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:70)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb30
  0: _40 = ((*_37).2: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:352:52-352:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:352:34-352:70)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb31
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:352:69-352:70)
  1: _18 = move _40
    SourceInfo(regex-lite/src/hir/mod.rs:352:17-352:70)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:352:69-352:70)
  3: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:353:20-354:56)
  4: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/mod.rs:353:20-353:48)
  5: _43 = &_22
    SourceInfo(regex-lite/src/hir/mod.rs:353:20-353:48)
  6: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:354:24-354:56)
  7: _44 = &((*_37).3: core::option::Option<usize>)
    SourceInfo(regex-lite/src/hir/mod.rs:354:24-354:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:353:20-354:56)
      kind: _42 = <core::option::Option<usize> as core::cmp::PartialEq>::ne(move _43, move _44) -> [return: bb32, unwind: bb43]
  }
  preds [bb29, bb30]
  succs [bb32, bb43]

bb32
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:353:20-354:56)
      kind: switchInt(move _42) -> [0: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34]

bb33
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:354:55-354:56)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/mod.rs:354:55-354:56)
  2: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:356:52-356:56)
  3: _45 = core::option::Option::<usize>::None
    SourceInfo(regex-lite/src/hir/mod.rs:356:52-356:56)
  4: _22 = move _45
    SourceInfo(regex-lite/src/hir/mod.rs:356:21-356:56)
  5: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:356:55-356:56)
  6: _31 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:355:17-357:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:353:17-357:18)
      kind: goto -> bb35
  }
  preds [bb32]
  succs [bb35]

bb34
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:354:55-354:56)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/mod.rs:354:55-354:56)
  2: _31 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:357:18-357:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:353:17-357:18)
      kind: goto -> bb35
  }
  preds [bb32]
  succs [bb35]

bb35
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:357:17-357:18)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  3: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  4: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:358:13-358:14)
  5: _30 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:350:13-358:14)
      kind: goto -> bb19
  }
  preds [bb33, bb34]
  succs [bb19]

bb36
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/mod.rs:360:48-360:49)
  1: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/mod.rs:361:17-361:34)
  2: _48 = _14
    SourceInfo(regex-lite/src/hir/mod.rs:361:17-361:34)
  3: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:362:17-362:31)
  4: _49 = _18
    SourceInfo(regex-lite/src/hir/mod.rs:362:17-362:31)
  5: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:363:17-363:45)
  6: _50 = _22
    SourceInfo(regex-lite/src/hir/mod.rs:363:17-363:45)
  7: _0 = hir::Hir { kind: move _46, is_start_anchored: move _48, is_match_empty: move _49, static_explicit_captures_len: move _50 }
    SourceInfo(regex-lite/src/hir/mod.rs:359:13-364:14)
  8: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
  9: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
  10: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
      kind: drop(_46) -> [return: bb37, unwind: bb43]
  }
  preds [bb25]
  succs [bb37, bb43]

bb37
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
  1: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  3: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  4: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:340:16-365:10)
      kind: goto -> bb38
  }
  preds [bb36]
  succs [bb38]

bb38
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:338:9-365:10)
      kind: goto -> bb39
  }
  preds [bb7, bb37]
  succs [bb39]

bb39
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:365:9-365:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:366:5-366:6)
      kind: drop(_1) -> [return: bb40, unwind: bb44]
  }
  preds [bb2, bb38]
  succs [bb40, bb44]

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:366:6-366:6)
      kind: return
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:364:13-364:14)
      kind: drop(_46) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb43]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:341:31-341:32)
      kind: drop(_7) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:366:5-366:6)
      kind: drop(_1) -> [return: bb44, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb5, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb19, bb20, bb31, bb36, bb41, bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:337:5-366:6)
      kind: resume
  }
  preds [bb39, bb43]
  succs []

