bb0
  0: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:630:26-630:46)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:630:26-630:30)
  2: _5 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:630:26-630:30)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:630:37-630:45)
  4: _6 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:630:37-630:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:630:26-630:46)
      kind: _4 = string::Regex::split(move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:630:45-630:46)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:630:45-630:46)
  2: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:630:48-630:53)
  3: _7 = _3
    SourceInfo(regex-lite/src/string.rs:630:48-630:53)
  4: _0 = string::SplitN::<'_, '_> { splits: move _4, limit: move _7 }
    SourceInfo(regex-lite/src/string.rs:630:9-630:55)
  5: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:630:54-630:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:630:54-630:55)
      kind: drop(_4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:630:54-630:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:631:6-631:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:625:5-631:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

