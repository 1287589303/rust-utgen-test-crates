bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:618:13-618:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:618:27-618:40)
      kind: _3 = alloc::string::String::new() -> [return: bb1, unwind: bb42]
  }
  preds []
  succs [bb1, bb42]

bb1
  0: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/hir/parse.rs:618:13-618:24)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:619:21-619:30)
  5: _7 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:619:21-619:30)
  6: _6 = core::ops::Range::<usize> { start: const 0_usize, end: move _7 }
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  7: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:619:29-619:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
      kind: _5 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb2, unwind: bb41]
  }
  preds [bb0]
  succs [bb2, bb41]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:619:29-619:30)
  1: PlaceMention(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  3: _8 = move _5
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
      kind: goto -> bb3
  }
  preds [bb1]
  succs [bb3]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
      kind: falseUnwind -> [real: bb4, unwind: bb41]
  }
  preds [bb2, bb23]
  succs [bb4, bb41]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  3: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  4: _13 = &mut _8
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  5: _12 = &mut (*_13)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
      kind: _11 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _12) -> [return: bb5, unwind: bb41]
  }
  preds [bb3]
  succs [bb5, bb41]

bb5
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:619:29-619:30)
  1: PlaceMention(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  2: _14 = discriminant(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
      kind: switchInt(move _14) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:18-619:30)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:619:13-619:14)
  1: _16 = ((_11 as Some).0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:619:13-619:14)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:620:13-622:14)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:620:16-620:21)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:620:16-620:17)
  5: _19 = _16
    SourceInfo(regex-lite/src/hir/parse.rs:620:16-620:17)
  6: _18 = Gt(move _19, const 0_usize)
    SourceInfo(regex-lite/src/hir/parse.rs:620:16-620:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:620:16-620:21)
      kind: switchInt(move _18) -> [0: bb15, otherwise: bb10]
  }
  preds [bb5, bb7]
  succs [bb10, bb15]

bb9
  0: _4 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  4: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  5: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  6: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  7: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:630:9-630:35)
  8: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:630:9-630:13)
  9: _35 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:630:9-630:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:630:9-630:35)
      kind: _34 = hir::parse::Parser::<'_>::bump_and_bump_space(move _35) -> [return: bb24, unwind: bb41]
  }
  preds [bb7]
  succs [bb24, bb41]

bb10
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:620:20-620:21)
  1: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:620:26-620:52)
  2: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:620:26-620:30)
  3: _21 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:620:26-620:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:620:26-620:52)
      kind: _20 = hir::parse::Parser::<'_>::bump_and_bump_space(move _21) -> [return: bb11, unwind: bb41]
  }
  preds [bb8]
  succs [bb11, bb41]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:620:26-620:52)
      kind: switchInt(move _20) -> [0: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:620:51-620:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:620:53-622:14)
      kind: goto -> bb16
  }
  preds [bb11]
  succs [bb16]

bb13
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:620:51-620:52)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:621:28-621:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:621:28-621:68)
      kind: _23 = error::Error::new(const hir::parse::ERR_HEX_FIXED_UNEXPECTED_EOF) -> [return: bb14, unwind: bb41]
  }
  preds [bb11]
  succs [bb14, bb41]

bb14
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _23)
    SourceInfo(regex-lite/src/hir/parse.rs:621:24-621:69)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:621:68-621:69)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  4: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb13]
  succs [bb38]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:620:20-620:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb8]
  succs [bb16]

bb16
  0: _17 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:622:14-622:14)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:622:13-622:14)
  4: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:623:13-625:14)
  5: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:623:17-623:36)
  6: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:623:24-623:35)
  7: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:623:24-623:28)
  8: _27 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:623:24-623:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:623:24-623:35)
      kind: _26 = hir::parse::Parser::<'_>::char(move _27) -> [return: bb17, unwind: bb41]
  }
  preds [bb12, bb15]
  succs [bb17, bb41]

bb17
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:623:34-623:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:623:17-623:36)
      kind: _25 = hir::parse::is_hex(move _26) -> [return: bb18, unwind: bb41]
  }
  preds [bb16]
  succs [bb18, bb41]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:623:17-623:36)
      kind: switchInt(move _25) -> [0: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20]

bb19
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:623:35-623:36)
  1: _24 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:625:14-625:14)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:625:13-625:14)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:625:13-625:14)
  4: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:626:13-626:38)
  5: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:626:13-626:20)
  6: _31 = &mut _3
    SourceInfo(regex-lite/src/hir/parse.rs:626:13-626:20)
  7: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:626:26-626:37)
  8: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:626:26-626:30)
  9: _33 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:626:26-626:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:626:26-626:37)
      kind: _32 = hir::parse::Parser::<'_>::char(move _33) -> [return: bb22, unwind: bb41]
  }
  preds [bb18]
  succs [bb22, bb41]

bb20
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:623:35-623:36)
  1: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:624:28-624:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:624:28-624:67)
      kind: _29 = error::Error::new(const hir::parse::ERR_HEX_FIXED_INVALID_DIGIT) -> [return: bb21, unwind: bb41]
  }
  preds [bb18]
  succs [bb21, bb41]

bb21
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _29)
    SourceInfo(regex-lite/src/hir/parse.rs:624:24-624:68)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:624:67-624:68)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:625:13-625:14)
  3: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:625:13-625:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb20]
  succs [bb38]

bb22
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:626:36-626:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:626:13-626:38)
      kind: _30 = alloc::string::String::push(move _31, move _32) -> [return: bb23, unwind: bb41]
  }
  preds [bb19]
  succs [bb23, bb41]

bb23
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:626:37-626:38)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:626:37-626:38)
  2: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:626:38-626:39)
  3: _10 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:619:31-627:10)
  4: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  5: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  6: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  7: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  8: _9 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:619:9-627:10)
      kind: goto -> bb3
  }
  preds [bb22]
  succs [bb3]

bb24
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:630:34-630:35)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:630:35-630:36)
  2: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
  3: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:53)
  4: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:48)
  5: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  6: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  7: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  8: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  9: _42 = &_3
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  10: _41 = &(*_42)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
      kind: _40 = <alloc::string::String as core::ops::Deref>::deref(move _41) -> [return: bb25, unwind: bb41]
  }
  preds [bb9]
  succs [bb25, bb41]

bb25
  0: _39 = &(*_40)
    SourceInfo(regex-lite/src/hir/parse.rs:631:35-631:43)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:631:42-631:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:48)
      kind: _38 = core::num::<impl u32>::from_str_radix(move _39, const 16_u32) -> [return: bb26, unwind: bb41]
  }
  preds [bb24]
  succs [bb26, bb41]

bb26
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:631:47-631:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:53)
      kind: _37 = core::result::Result::<u32, core::num::ParseIntError>::ok(move _38) -> [return: bb27, unwind: bb41]
  }
  preds [bb25]
  succs [bb27, bb41]

bb27
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:631:52-631:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
      kind: _36 = core::option::Option::<u32>::and_then::<char, fn(u32) -> core::option::Option<char> {core::char::methods::<impl char>::from_u32}>(move _37, core::char::methods::<impl char>::from_u32) -> [return: bb28, unwind: bb41]
  }
  preds [bb26]
  succs [bb28, bb41]

bb28
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:631:77-631:78)
  1: PlaceMention(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
  2: _43 = discriminant(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:9-631:78)
      kind: switchInt(move _43) -> [0: bb30, 1: bb31, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _36)
    SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:631:15-631:78)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:632:13-632:17)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:633:18-633:20)
  1: _45 = ((_36 as Some).0: char)
    SourceInfo(regex-lite/src/hir/parse.rs:633:18-633:20)
  2: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:633:28-633:45)
  3: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:633:28-633:32)
  4: _47 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:633:28-633:32)
  5: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:633:42-633:44)
  6: _48 = _45
    SourceInfo(regex-lite/src/hir/parse.rs:633:42-633:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:633:28-633:45)
      kind: _46 = hir::parse::Parser::<'_>::hir_char(move _47, move _48) -> [return: bb34, unwind: bb41]
  }
  preds [bb28, bb30]
  succs [bb34, bb41]

bb32
  0: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:632:25-632:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:632:25-632:58)
      kind: _44 = error::Error::new(const hir::parse::ERR_HEX_FIXED_INVALID) -> [return: bb33, unwind: bb41]
  }
  preds [bb30]
  succs [bb33, bb41]

bb33
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _44)
    SourceInfo(regex-lite/src/hir/parse.rs:632:21-632:59)
  1: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:632:58-632:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:632:58-632:59)
      kind: goto -> bb36
  }
  preds [bb32]
  succs [bb36]

bb34
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:633:44-633:45)
  1: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:633:44-633:45)
  2: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _46)
    SourceInfo(regex-lite/src/hir/parse.rs:633:25-633:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:633:45-633:46)
      kind: drop(_46) -> [return: bb35, unwind: bb41]
  }
  preds [bb31]
  succs [bb35, bb41]

bb35
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:633:45-633:46)
  1: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:633:45-633:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:633:45-633:46)
      kind: goto -> bb36
  }
  preds [bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
      kind: drop(_3) -> [return: bb37, unwind: bb42]
  }
  preds [bb33, bb35]
  succs [bb37, bb42]

bb37
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
  1: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:6-635:6)
      kind: goto -> bb40
  }
  preds [bb36]
  succs [bb40]

bb38
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  4: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  5: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  6: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:627:9-627:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
      kind: drop(_3) -> [return: bb39, unwind: bb42]
  }
  preds [bb14, bb21]
  succs [bb39, bb42]

bb39
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:6-635:6)
      kind: goto -> bb40
  }
  preds [bb38]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:6-635:6)
      kind: return
  }
  preds [bb37, bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:635:5-635:6)
      kind: drop(_3) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb1, bb3, bb4, bb9, bb10, bb13, bb16, bb17, bb19, bb20, bb22, bb24, bb25, bb26, bb27, bb31, bb32, bb34]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:617:5-635:6)
      kind: resume
  }
  preds [bb0, bb36, bb38, bb41]
  succs []

