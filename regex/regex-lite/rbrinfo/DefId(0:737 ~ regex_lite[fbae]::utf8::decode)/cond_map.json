{
  "regex-lite/src/utf8.rs:77:19:77:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "state == REJECT",
          "lhs": "state",
          "rhs": "REJECT",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/utf8.rs:58:11:58:23": [
    {
      "Match": {
        "match_source": "regex-lite/src/utf8.rs:58:11:58:23",
        "match_str": "slice.get(0)",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-lite/src/utf8.rs:60:9:60:17": {
            "pat": {
              "pat_str": "Some(&b)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": {
              "regex-lite/src/utf8.rs:60:21:60:30": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Le",
                      "expr": "b <= 0x7F",
                      "lhs": "b",
                      "rhs": "0x7F",
                      "cmp_with_int": true
                    }
                  }
                }
              ]
            },
            "body_source": "regex-lite/src/utf8.rs:60:34:60:61"
          },
          "regex-lite/src/utf8.rs:61:9:61:10": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-lite/src/utf8.rs:61:14:61:16"
          },
          "regex-lite/src/utf8.rs:59:9:59:13": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/utf8.rs:59:17:59:33"
          }
        }
      }
    }
  ],
  "regex-lite/src/utf8.rs:65:11:65:26": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "i < slice.len()",
          "lhs": "i",
          "rhs": "slice.len()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/utf8.rs:69:12:69:27": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "state == ACCEPT",
          "lhs": "state",
          "rhs": "ACCEPT",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/utf8.rs:60:21:60:30": [
    {
      "Bool": {
        "Binary": {
          "kind": "Le",
          "expr": "b <= 0x7F",
          "lhs": "b",
          "rhs": "0x7F",
          "cmp_with_int": true
        }
      }
    }
  ]
}