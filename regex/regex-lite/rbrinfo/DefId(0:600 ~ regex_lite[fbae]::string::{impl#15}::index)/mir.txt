bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:2014:9-2016:68)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:2014:9-2015:33)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:2014:9-2014:20)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:2014:9-2014:13)
  4: _6 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:2014:9-2014:13)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:2014:18-2014:19)
  6: _7 = _2
    SourceInfo(regex-lite/src/string.rs:2014:18-2014:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2014:9-2014:20)
      kind: _5 = string::Captures::<'_>::get(move _6, move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:2014:19-2014:20)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:2014:19-2014:20)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:2015:18-2015:32)
  3: _8 = {closure@regex-lite/src/string.rs:2015:18: 2015:21}
    SourceInfo(regex-lite/src/string.rs:2015:18-2015:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2014:9-2015:33)
      kind: _4 = core::option::Option::<string::Match<'_>>::map::<&str, {closure@regex-lite/src/string.rs:2015:18: 2015:21}>(move _5, move _8) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:2015:32-2015:33)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:2015:32-2015:33)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:2016:29-2016:67)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:2016:29-2016:67)
  4: _10 = &_2
    SourceInfo(regex-lite/src/string.rs:2016:29-2016:67)
  5: _9 = {closure@regex-lite/src/string.rs:2016:29: 2016:31} { i: move _10 }
    SourceInfo(regex-lite/src/string.rs:2016:29-2016:67)
  6: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:2016:30-2016:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2014:9-2016:68)
      kind: _3 = core::option::Option::<&str>::unwrap_or_else::<{closure@regex-lite/src/string.rs:2016:29: 2016:31}>(move _4, move _9) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: _0 = &(*_3)
    SourceInfo(regex-lite/src/string.rs:2014:9-2016:68)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:2016:67-2016:68)
  2: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:2016:67-2016:68)
  3: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2017:5-2017:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2017:6-2017:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2013:5-2017:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

