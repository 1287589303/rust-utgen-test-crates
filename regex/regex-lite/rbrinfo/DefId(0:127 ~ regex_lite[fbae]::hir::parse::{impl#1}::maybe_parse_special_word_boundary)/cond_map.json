{
  "regex-lite/src/hir/parse.rs:574:26:574:42": [
    {
      "Match": {
        "match_source": "regex-lite/src/hir/parse.rs:574:26:574:42",
        "match_str": "scratch.as_str()",
        "match_kind": "Other",
        "arms": {
          "regex-lite/src/hir/parse.rs:575:13:575:20": {
            "pat": {
              "pat_str": "\"start\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/hir/parse.rs:575:24:575:44"
          },
          "regex-lite/src/hir/parse.rs:579:13:579:14": {
            "pat": {
              "pat_str": "_",
              "kind": "Wild"
            },
            "guard": null,
            "body_source": "regex-lite/src/hir/parse.rs:579:18:581:14"
          },
          "regex-lite/src/hir/parse.rs:577:13:577:25": {
            "pat": {
              "pat_str": "\"start-half\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/hir/parse.rs:577:29:577:53"
          },
          "regex-lite/src/hir/parse.rs:576:13:576:18": {
            "pat": {
              "pat_str": "\"end\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/hir/parse.rs:576:22:576:40"
          },
          "regex-lite/src/hir/parse.rs:578:13:578:23": {
            "pat": {
              "pat_str": "\"end-half\"",
              "kind": {
                "Other": null
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/hir/parse.rs:578:27:578:49"
          }
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:566:16:566:30": [
    {
      "Bool": {
        "Other": "self.is_done()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21:40:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "(*left_val == *right_val)",
          "lhs": "*left_val",
          "rhs": "*right_val",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:551:13:551:39": [
    {
      "Bool": {
        "Other": "self.bump_and_bump_space()"
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9:48:10": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:570:12:570:26": [
    {
      "Bool": {
        "Other": "self.is_done()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:558:13:558:39": [
    {
      "Bool": {
        "Other": "is_valid_char(self.char())"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:566:34:566:60": [
    {
      "Bool": {
        "Other": "is_valid_char(self.char())"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:570:30:570:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "self.char() != '}'",
          "lhs": "self.char()",
          "rhs": "'}'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32": [
    {
      "Match": {
        "match_source": "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15:38:32",
        "match_str": "(&$left, &$right)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:13:39:34": {
            "pat": {
              "pat_str": "(left_val, right_val)",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14:39:22"
                  ],
                  "1": [
                    null,
                    "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24:39:33"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": null
          }
        }
      }
    }
  ]
}