{
  "regex-lite/src/interpolate.rs:73:12:73:34": [
    {
      "Bool": {
        "Other": "replacement.is_empty()"
      }
    }
  ],
  "regex-lite/src/interpolate.rs:87:24:87:46": [
    {
      "Bool": {
        "Other": "replacement.is_empty()"
      }
    }
  ],
  "regex-lite/src/interpolate.rs:97:15:97:26": [
    {
      "Match": {
        "match_source": "regex-lite/src/interpolate.rs:97:15:97:26",
        "match_str": "cap_ref.cap",
        "match_kind": {
          "Enum": [
            "Named",
            "Number"
          ]
        },
        "arms": {
          "regex-lite/src/interpolate.rs:98:13:98:27": {
            "pat": {
              "pat_str": "Ref::Number(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:98:31:98:45"
          },
          "regex-lite/src/interpolate.rs:99:13:99:29": {
            "pat": {
              "pat_str": "Ref::Named(name)",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:99:33:103:14"
          }
        }
      }
    }
  ],
  "/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12:316:42": [
    {
      "Bool": {
        "Other": "$crate::cfg!(debug_assertions)"
      }
    }
  ],
  "regex-lite/src/interpolate.rs:74:15:74:36": [
    {
      "Match": {
        "match_source": "regex-lite/src/interpolate.rs:74:15:74:36",
        "match_str": "replacement.find('$')",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-lite/src/interpolate.rs:75:13:75:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:75:21:75:26"
          },
          "regex-lite/src/interpolate.rs:76:13:76:20": {
            "pat": {
              "pat_str": "Some(i)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:76:24:79:14"
          }
        }
      }
    }
  ],
  "regex-lite/src/interpolate.rs:100:20:100:53": [
    {
      "Bool": {
        "Other": "let Some(i) = name_to_index(name)"
      }
    }
  ],
  "regex-lite/src/interpolate.rs:88:29:88:65": [
    {
      "Match": {
        "match_source": "regex-lite/src/interpolate.rs:88:29:88:65",
        "match_str": "find_cap_ref(replacement.as_bytes())",
        "match_kind": {
          "Enum": [
            "None",
            "Some"
          ]
        },
        "arms": {
          "regex-lite/src/interpolate.rs:89:13:89:26": {
            "pat": {
              "pat_str": "Some(cap_ref)",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:89:30:89:37"
          },
          "regex-lite/src/interpolate.rs:90:13:90:17": {
            "pat": {
              "pat_str": "None",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/interpolate.rs:90:21:94:14"
          }
        }
      }
    }
  ],
  "regex-lite/src/interpolate.rs:82:12:82:71": [
    {
      "Bool": {
        "Other": "replacement.as_bytes().get(1).map_or(false, |&b| b == b'$')"
      }
    }
  ]
}