Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).1),
            pat: Pat {
                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).2),
                    config#0,
                    None,
                ),
                span: regex-lite/src/hir/mod.rs:177:25: 177:31 (#0),
                default_binding_modes: true,
            },
            ty_span: regex-lite/src/hir/mod.rs:177:33: 177:39 (#0),
            span: regex-lite/src/hir/mod.rs:177:25: 177:39 (#0),
        },
        Param {
            hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).3),
            pat: Pat {
                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).4),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).4),
                    pattern#0,
                    None,
                ),
                span: regex-lite/src/hir/mod.rs:177:41: 177:48 (#0),
                default_binding_modes: true,
            },
            ty_span: regex-lite/src/hir/mod.rs:177:50: 177:54 (#0),
            span: regex-lite/src/hir/mod.rs:177:41: 177:54 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).20),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).5),
                        kind: MethodCall(
                            PathSegment {
                                ident: parse#0,
                                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).6),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).7),
                                kind: Call(
                                    Expr {
                                        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).8),
                                        kind: Path(
                                            TypeRelative(
                                                Ty {
                                                    hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).13),
                                                    kind: Path(
                                                        Resolved(
                                                            None,
                                                            Path {
                                                                span: regex-lite/src/hir/mod.rs:178:9: 178:28 (#0),
                                                                res: Def(
                                                                    Struct,
                                                                    DefId(0:751 ~ regex_lite[fbae]::hir::parse::Parser),
                                                                ),
                                                                segments: [
                                                                    PathSegment {
                                                                        ident: self#0,
                                                                        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).9),
                                                                        res: Err,
                                                                        args: None,
                                                                        infer_args: true,
                                                                    },
                                                                    PathSegment {
                                                                        ident: parse#0,
                                                                        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).10),
                                                                        res: Def(
                                                                            Mod,
                                                                            DefId(0:25 ~ regex_lite[fbae]::hir::parse),
                                                                        ),
                                                                        args: None,
                                                                        infer_args: true,
                                                                    },
                                                                    PathSegment {
                                                                        ident: Parser#0,
                                                                        hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).12),
                                                                        res: Def(
                                                                            Struct,
                                                                            DefId(0:751 ~ regex_lite[fbae]::hir::parse::Parser),
                                                                        ),
                                                                        args: Some(
                                                                            GenericArgs {
                                                                                args: [
                                                                                    Lifetime(
                                                                                        Lifetime {
                                                                                            hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).11),
                                                                                            ident: #0,
                                                                                            res: Infer,
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                constraints: [],
                                                                                parenthesized: No,
                                                                                span_ext: regex-lite/src/hir/mod.rs:178:33: 178:33 (#0),
                                                                            },
                                                                        ),
                                                                        infer_args: true,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    span: regex-lite/src/hir/mod.rs:178:9: 178:28 (#0),
                                                },
                                                PathSegment {
                                                    ident: new#0,
                                                    hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).14),
                                                    res: Err,
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ),
                                        ),
                                        span: regex-lite/src/hir/mod.rs:178:9: 178:33 (#0),
                                    },
                                    [
                                        Expr {
                                            hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).15),
                                            kind: Path(
                                                Resolved(
                                                    None,
                                                    Path {
                                                        span: regex-lite/src/hir/mod.rs:178:34: 178:40 (#0),
                                                        res: Local(
                                                            HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).2),
                                                        ),
                                                        segments: [
                                                            PathSegment {
                                                                ident: config#0,
                                                                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).16),
                                                                res: Local(
                                                                    HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).2),
                                                                ),
                                                                args: None,
                                                                infer_args: true,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            ),
                                            span: regex-lite/src/hir/mod.rs:178:34: 178:40 (#0),
                                        },
                                        Expr {
                                            hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).17),
                                            kind: Path(
                                                Resolved(
                                                    None,
                                                    Path {
                                                        span: regex-lite/src/hir/mod.rs:178:42: 178:49 (#0),
                                                        res: Local(
                                                            HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).4),
                                                        ),
                                                        segments: [
                                                            PathSegment {
                                                                ident: pattern#0,
                                                                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).18),
                                                                res: Local(
                                                                    HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).4),
                                                                ),
                                                                args: None,
                                                                infer_args: true,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            ),
                                            span: regex-lite/src/hir/mod.rs:178:42: 178:49 (#0),
                                        },
                                    ],
                                ),
                                span: regex-lite/src/hir/mod.rs:178:9: 178:50 (#0),
                            },
                            [],
                            regex-lite/src/hir/mod.rs:178:51: 178:58 (#0),
                        ),
                        span: regex-lite/src/hir/mod.rs:178:9: 178:58 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:165 ~ regex_lite[fbae]::hir::{impl#1}::parse).19),
                rules: DefaultBlock,
                span: regex-lite/src/hir/mod.rs:177:78: 179:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-lite/src/hir/mod.rs:177:78: 179:6 (#0),
    },
}