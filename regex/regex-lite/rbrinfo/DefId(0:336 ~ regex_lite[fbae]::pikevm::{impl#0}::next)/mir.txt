bb0
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:252:16-252:35)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:252:16-252:24)
  2: _11 = &((*_1).0: nfa::NFA)
    SourceInfo(regex-lite/src/pikevm.rs:252:16-252:24)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:252:31-252:34)
  4: _12 = _9
    SourceInfo(regex-lite/src/pikevm.rs:252:31-252:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:252:16-252:35)
      kind: _10 = nfa::NFA::state(move _11, move _12) -> [return: bb1, unwind: bb46]
  }
  preds []
  succs [bb1, bb46]

bb1
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:252:34-252:35)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:252:34-252:35)
  2: PlaceMention((*_10))
    SourceInfo(regex-lite/src/pikevm.rs:252:15-252:35)
  3: _13 = discriminant((*_10))
    SourceInfo(regex-lite/src/pikevm.rs:252:15-252:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:252:9-252:35)
      kind: switchInt(move _13) -> [0: bb3, 1: bb4, 2: bb6, 3: bb6, 4: bb6, 5: bb6, 6: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4, bb5, bb6, bb6, bb6, bb6]

bb2
  0: FakeRead(ForMatchedPlace(None), (*_10))
    SourceInfo(regex-lite/src/pikevm.rs:252:15-252:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:252:15-252:35)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:257:13-257:39)
      kind: falseEdge -> [real: bb8, imaginary: bb4]
  }
  preds [bb1, bb6]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:270:13-270:49)
      kind: falseEdge -> [real: bb18, imaginary: bb5]
  }
  preds [bb1, bb3]
  succs [bb5, bb18]

bb5
  0: _0 = const true
    SourceInfo(regex-lite/src/pikevm.rs:290:29-290:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:290:29-290:33)
      kind: goto -> bb44
  }
  preds [bb1, bb4]
  succs [bb44]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:253:13-256:36)
      kind: falseEdge -> [real: bb7, imaginary: bb3]
  }
  preds [bb1, bb1, bb1, bb1]
  succs [bb3, bb7]

bb7
  0: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:256:40-256:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:256:40-256:45)
      kind: goto -> bb44
  }
  preds [bb6]
  succs [bb44]

bb8
  0: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:257:27-257:33)
  1: _14 = (((*_10) as Char).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:257:27-257:33)
  2: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:257:35-257:37)
  3: _15 = (((*_10) as Char).1: char)
    SourceInfo(regex-lite/src/pikevm.rs:257:35-257:37)
  4: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:258:17-267:18)
  5: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:258:20-258:31)
  6: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:258:20-258:25)
  7: _18 = _7
    SourceInfo(regex-lite/src/pikevm.rs:258:20-258:25)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:258:29-258:31)
  9: _19 = _15
    SourceInfo(regex-lite/src/pikevm.rs:258:29-258:31)
  10: _17 = Eq(move _18, move _19)
    SourceInfo(regex-lite/src/pikevm.rs:258:20-258:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:258:20-258:31)
      kind: switchInt(move _17) -> [0: bb15, otherwise: bb9]
  }
  preds [bb3]
  succs [bb9, bb15]

bb9
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:258:30-258:31)
  1: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:258:30-258:31)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:258:35-258:45)
  3: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:258:35-258:41)
  4: _21 = _8
    SourceInfo(regex-lite/src/pikevm.rs:258:35-258:41)
  5: _20 = Gt(move _21, const 0_usize)
    SourceInfo(regex-lite/src/pikevm.rs:258:35-258:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:258:35-258:45)
      kind: switchInt(move _20) -> [0: bb14, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb14]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:258:44-258:45)
  1: StorageLive(_22)
    SourceInfo(regex-lite/src/pikevm.rs:259:25-259:30)
  2: StorageLive(_23)
    SourceInfo(regex-lite/src/pikevm.rs:259:33-259:48)
  3: _23 = &mut (*_3)
    SourceInfo(regex-lite/src/pikevm.rs:259:33-259:48)
  4: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:259:59-259:62)
  5: _24 = _9
    SourceInfo(regex-lite/src/pikevm.rs:259:59-259:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:259:33-259:63)
      kind: _22 = pikevm::SlotTable::for_state(move _23, move _24) -> [return: bb11, unwind: bb46]
  }
  preds [bb9]
  succs [bb11, bb46]

bb11
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:259:62-259:63)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/pikevm.rs:259:62-259:63)
  2: FakeRead(ForLet(None), _22)
    SourceInfo(regex-lite/src/pikevm.rs:259:25-259:30)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:263:25-263:27)
  4: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:263:30-263:32)
  5: _26 = _6
    SourceInfo(regex-lite/src/pikevm.rs:263:30-263:32)
  6: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:263:46-263:52)
  7: _27 = _8
    SourceInfo(regex-lite/src/pikevm.rs:263:46-263:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:263:30-263:53)
      kind: _25 = core::num::<impl usize>::wrapping_add(move _26, move _27) -> [return: bb12, unwind: bb46]
  }
  preds [bb10]
  succs [bb12, bb46]

bb12
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:263:52-263:53)
  1: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:263:52-263:53)
  2: FakeRead(ForLet(None), _25)
    SourceInfo(regex-lite/src/pikevm.rs:263:25-263:27)
  3: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:264:21-266:22)
  4: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:264:21-264:25)
  5: _29 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:264:21-264:25)
  6: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:265:25-265:30)
  7: _30 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:265:25-265:30)
  8: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:265:32-265:37)
  9: _31 = &mut (*_22)
    SourceInfo(regex-lite/src/pikevm.rs:265:32-265:37)
  10: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:265:39-265:43)
  11: _32 = &mut (*_4)
    SourceInfo(regex-lite/src/pikevm.rs:265:39-265:43)
  12: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:265:45-265:53)
  13: _33 = &(*_5)
    SourceInfo(regex-lite/src/pikevm.rs:265:45-265:53)
  14: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:265:55-265:57)
  15: _34 = _25
    SourceInfo(regex-lite/src/pikevm.rs:265:55-265:57)
  16: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:265:59-265:65)
  17: _35 = _14
    SourceInfo(regex-lite/src/pikevm.rs:265:59-265:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:264:21-266:22)
      kind: _28 = pikevm::PikeVM::epsilon_closure(move _29, move _30, move _31, move _32, move _33, move _34, move _35) -> [return: bb13, unwind: bb46]
  }
  preds [bb11]
  succs [bb13, bb46]

bb13
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  2: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  3: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  4: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  5: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  6: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:266:21-266:22)
  7: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:266:22-266:23)
  8: _16 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:258:46-267:18)
  9: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:267:17-267:18)
  10: StorageDead(_22)
    SourceInfo(regex-lite/src/pikevm.rs:267:17-267:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:258:17-267:18)
      kind: goto -> bb17
  }
  preds [bb12]
  succs [bb17]

bb14
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:258:44-258:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb9]
  succs [bb16]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:258:30-258:31)
  1: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:258:30-258:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb8]
  succs [bb16]

bb16
  0: _16 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:267:18-267:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:258:17-267:18)
      kind: goto -> bb17
  }
  preds [bb14, bb15]
  succs [bb17]

bb17
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:267:17-267:18)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:267:17-267:18)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:267:17-267:18)
  3: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:268:17-268:22)
  4: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:269:13-269:14)
  5: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:269:13-269:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:269:13-269:14)
      kind: goto -> bb44
  }
  preds [bb13, bb16]
  succs [bb44]

bb18
  0: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:270:29-270:35)
  1: _36 = (((*_10) as Ranges).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:270:29-270:35)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:270:37-270:47)
  3: _37 = &(((*_10) as Ranges).1: alloc::vec::Vec<(char, char)>)
    SourceInfo(regex-lite/src/pikevm.rs:270:37-270:47)
  4: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
  5: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  6: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  7: StorageLive(_41)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:50)
  8: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:43)
  9: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:50)
  10: StorageLive(_44)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:43)
  11: _44 = &(*_37)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:50)
      kind: _43 = <alloc::vec::Vec<(char, char)> as core::ops::Deref>::deref(move _44) -> [return: bb19, unwind: bb46]
  }
  preds [bb4]
  succs [bb19, bb46]

bb19
  0: _42 = &(*_43)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:43)
  1: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:271:42-271:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:50)
      kind: _41 = core::slice::<impl [(char, char)]>::iter(move _42) -> [return: bb20, unwind: bb46]
  }
  preds [bb18]
  succs [bb20, bb46]

bb20
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:271:49-271:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
      kind: _40 = <core::slice::Iter<'_, (char, char)> as core::iter::Iterator>::copied::<'_, (char, char)>(move _41) -> [return: bb21, unwind: bb46]
  }
  preds [bb19]
  succs [bb21, bb46]

bb21
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/pikevm.rs:271:58-271:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
      kind: _39 = <core::iter::Copied<core::slice::Iter<'_, (char, char)>> as core::iter::IntoIterator>::into_iter(move _40) -> [return: bb22, unwind: bb46]
  }
  preds [bb20]
  succs [bb22, bb46]

bb22
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:271:58-271:59)
  1: PlaceMention(_39)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  2: StorageLive(_45)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  3: _45 = move _39
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
      kind: falseUnwind -> [real: bb24, unwind: bb46]
  }
  preds [bb22, bb42]
  succs [bb24, bb46]

bb24
  0: StorageLive(_47)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  1: StorageLive(_48)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  2: StorageLive(_49)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  3: StorageLive(_50)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  4: _50 = &mut _45
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  5: _49 = &mut (*_50)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
      kind: _48 = <core::iter::Copied<core::slice::Iter<'_, (char, char)>> as core::iter::Iterator>::next(move _49) -> [return: bb25, unwind: bb46]
  }
  preds [bb23]
  succs [bb25, bb46]

bb25
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/pikevm.rs:271:58-271:59)
  1: PlaceMention(_48)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  2: _51 = discriminant(_48)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
      kind: switchInt(move _51) -> [0: bb27, 1: bb28, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _48)
    SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:37-271:59)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_53)
    SourceInfo(regex-lite/src/pikevm.rs:271:22-271:27)
  1: _53 = (((_48 as Some).0: (char, char)).0: char)
    SourceInfo(regex-lite/src/pikevm.rs:271:22-271:27)
  2: StorageLive(_54)
    SourceInfo(regex-lite/src/pikevm.rs:271:29-271:32)
  3: _54 = (((_48 as Some).0: (char, char)).1: char)
    SourceInfo(regex-lite/src/pikevm.rs:271:29-271:32)
  4: StorageLive(_55)
    SourceInfo(regex-lite/src/pikevm.rs:272:24-272:37)
  5: StorageLive(_56)
    SourceInfo(regex-lite/src/pikevm.rs:272:24-272:29)
  6: _56 = _53
    SourceInfo(regex-lite/src/pikevm.rs:272:24-272:29)
  7: StorageLive(_57)
    SourceInfo(regex-lite/src/pikevm.rs:272:32-272:37)
  8: _57 = _7
    SourceInfo(regex-lite/src/pikevm.rs:272:32-272:37)
  9: _55 = Gt(move _56, move _57)
    SourceInfo(regex-lite/src/pikevm.rs:272:24-272:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:272:24-272:37)
      kind: switchInt(move _55) -> [0: bb31, otherwise: bb30]
  }
  preds [bb25, bb27]
  succs [bb30, bb31]

bb29
  0: _38 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
      kind: goto -> bb43
  }
  preds [bb27]
  succs [bb43]

bb30
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/pikevm.rs:272:36-272:37)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/pikevm.rs:272:36-272:37)
  2: _38 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:273:25-273:30)
  3: StorageDead(_55)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  4: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  5: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb43
  }
  preds [bb28]
  succs [bb43]

bb31
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/pikevm.rs:272:36-272:37)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/pikevm.rs:272:36-272:37)
  2: StorageLive(_59)
    SourceInfo(regex-lite/src/pikevm.rs:274:31-274:45)
  3: StorageLive(_60)
    SourceInfo(regex-lite/src/pikevm.rs:274:31-274:36)
  4: _60 = _53
    SourceInfo(regex-lite/src/pikevm.rs:274:31-274:36)
  5: StorageLive(_61)
    SourceInfo(regex-lite/src/pikevm.rs:274:40-274:45)
  6: _61 = _7
    SourceInfo(regex-lite/src/pikevm.rs:274:40-274:45)
  7: _59 = Le(move _60, move _61)
    SourceInfo(regex-lite/src/pikevm.rs:274:31-274:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:274:31-274:45)
      kind: switchInt(move _59) -> [0: bb40, otherwise: bb32]
  }
  preds [bb28]
  succs [bb32, bb40]

bb32
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/pikevm.rs:274:44-274:45)
  1: StorageDead(_60)
    SourceInfo(regex-lite/src/pikevm.rs:274:44-274:45)
  2: StorageLive(_62)
    SourceInfo(regex-lite/src/pikevm.rs:274:49-274:61)
  3: StorageLive(_63)
    SourceInfo(regex-lite/src/pikevm.rs:274:49-274:54)
  4: _63 = _7
    SourceInfo(regex-lite/src/pikevm.rs:274:49-274:54)
  5: StorageLive(_64)
    SourceInfo(regex-lite/src/pikevm.rs:274:58-274:61)
  6: _64 = _54
    SourceInfo(regex-lite/src/pikevm.rs:274:58-274:61)
  7: _62 = Le(move _63, move _64)
    SourceInfo(regex-lite/src/pikevm.rs:274:49-274:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:274:49-274:61)
      kind: switchInt(move _62) -> [0: bb39, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb39]

bb33
  0: StorageDead(_64)
    SourceInfo(regex-lite/src/pikevm.rs:274:60-274:61)
  1: StorageDead(_63)
    SourceInfo(regex-lite/src/pikevm.rs:274:60-274:61)
  2: StorageLive(_65)
    SourceInfo(regex-lite/src/pikevm.rs:275:25-277:26)
  3: StorageLive(_66)
    SourceInfo(regex-lite/src/pikevm.rs:275:28-275:39)
  4: StorageLive(_67)
    SourceInfo(regex-lite/src/pikevm.rs:275:28-275:34)
  5: _67 = _8
    SourceInfo(regex-lite/src/pikevm.rs:275:28-275:34)
  6: _66 = Eq(move _67, const 0_usize)
    SourceInfo(regex-lite/src/pikevm.rs:275:28-275:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:275:28-275:39)
      kind: switchInt(move _66) -> [0: bb35, otherwise: bb34]
  }
  preds [bb32]
  succs [bb34, bb35]

bb34
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/pikevm.rs:275:38-275:39)
  1: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:276:36-276:41)
  2: StorageDead(_66)
    SourceInfo(regex-lite/src/pikevm.rs:277:25-277:26)
  3: StorageDead(_65)
    SourceInfo(regex-lite/src/pikevm.rs:277:25-277:26)
  4: StorageDead(_62)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  5: StorageDead(_59)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  6: StorageDead(_55)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  7: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  8: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  9: StorageDead(_50)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  10: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  11: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  12: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  13: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  14: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  15: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  16: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:289:13-289:14)
  17: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:289:13-289:14)
  18: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:292:5-292:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:292:6-292:6)
      kind: goto -> bb45
  }
  preds [bb33]
  succs [bb45]

bb35
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/pikevm.rs:275:38-275:39)
  1: _65 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:277:26-277:26)
  2: StorageDead(_66)
    SourceInfo(regex-lite/src/pikevm.rs:277:25-277:26)
  3: StorageDead(_65)
    SourceInfo(regex-lite/src/pikevm.rs:277:25-277:26)
  4: StorageLive(_69)
    SourceInfo(regex-lite/src/pikevm.rs:278:29-278:34)
  5: StorageLive(_70)
    SourceInfo(regex-lite/src/pikevm.rs:278:37-278:52)
  6: _70 = &mut (*_3)
    SourceInfo(regex-lite/src/pikevm.rs:278:37-278:52)
  7: StorageLive(_71)
    SourceInfo(regex-lite/src/pikevm.rs:278:63-278:66)
  8: _71 = _9
    SourceInfo(regex-lite/src/pikevm.rs:278:63-278:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:278:37-278:67)
      kind: _69 = pikevm::SlotTable::for_state(move _70, move _71) -> [return: bb36, unwind: bb46]
  }
  preds [bb33]
  succs [bb36, bb46]

bb36
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/pikevm.rs:278:66-278:67)
  1: StorageDead(_70)
    SourceInfo(regex-lite/src/pikevm.rs:278:66-278:67)
  2: FakeRead(ForLet(None), _69)
    SourceInfo(regex-lite/src/pikevm.rs:278:29-278:34)
  3: StorageLive(_72)
    SourceInfo(regex-lite/src/pikevm.rs:282:29-282:31)
  4: StorageLive(_73)
    SourceInfo(regex-lite/src/pikevm.rs:282:34-282:36)
  5: _73 = _6
    SourceInfo(regex-lite/src/pikevm.rs:282:34-282:36)
  6: StorageLive(_74)
    SourceInfo(regex-lite/src/pikevm.rs:282:50-282:56)
  7: _74 = _8
    SourceInfo(regex-lite/src/pikevm.rs:282:50-282:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:282:34-282:57)
      kind: _72 = core::num::<impl usize>::wrapping_add(move _73, move _74) -> [return: bb37, unwind: bb46]
  }
  preds [bb35]
  succs [bb37, bb46]

bb37
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/pikevm.rs:282:56-282:57)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/pikevm.rs:282:56-282:57)
  2: FakeRead(ForLet(None), _72)
    SourceInfo(regex-lite/src/pikevm.rs:282:29-282:31)
  3: StorageLive(_75)
    SourceInfo(regex-lite/src/pikevm.rs:283:25-285:26)
  4: StorageLive(_76)
    SourceInfo(regex-lite/src/pikevm.rs:283:25-283:29)
  5: _76 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:283:25-283:29)
  6: StorageLive(_77)
    SourceInfo(regex-lite/src/pikevm.rs:284:29-284:34)
  7: _77 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:284:29-284:34)
  8: StorageLive(_78)
    SourceInfo(regex-lite/src/pikevm.rs:284:36-284:41)
  9: _78 = &mut (*_69)
    SourceInfo(regex-lite/src/pikevm.rs:284:36-284:41)
  10: StorageLive(_79)
    SourceInfo(regex-lite/src/pikevm.rs:284:43-284:47)
  11: _79 = &mut (*_4)
    SourceInfo(regex-lite/src/pikevm.rs:284:43-284:47)
  12: StorageLive(_80)
    SourceInfo(regex-lite/src/pikevm.rs:284:49-284:57)
  13: _80 = &(*_5)
    SourceInfo(regex-lite/src/pikevm.rs:284:49-284:57)
  14: StorageLive(_81)
    SourceInfo(regex-lite/src/pikevm.rs:284:59-284:61)
  15: _81 = _72
    SourceInfo(regex-lite/src/pikevm.rs:284:59-284:61)
  16: StorageLive(_82)
    SourceInfo(regex-lite/src/pikevm.rs:284:63-284:69)
  17: _82 = _36
    SourceInfo(regex-lite/src/pikevm.rs:284:63-284:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:283:25-285:26)
      kind: _75 = pikevm::PikeVM::epsilon_closure(move _76, move _77, move _78, move _79, move _80, move _81, move _82) -> [return: bb38, unwind: bb46]
  }
  preds [bb36]
  succs [bb38, bb46]

bb38
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  1: StorageDead(_81)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  2: StorageDead(_80)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  3: StorageDead(_79)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  4: StorageDead(_78)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  5: StorageDead(_77)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  6: StorageDead(_76)
    SourceInfo(regex-lite/src/pikevm.rs:285:25-285:26)
  7: StorageDead(_75)
    SourceInfo(regex-lite/src/pikevm.rs:285:26-285:27)
  8: _47 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:274:62-286:22)
  9: StorageDead(_72)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  10: StorageDead(_69)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:274:28-286:22)
      kind: goto -> bb42
  }
  preds [bb37]
  succs [bb42]

bb39
  0: StorageDead(_64)
    SourceInfo(regex-lite/src/pikevm.rs:274:60-274:61)
  1: StorageDead(_63)
    SourceInfo(regex-lite/src/pikevm.rs:274:60-274:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb32]
  succs [bb41]

bb40
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/pikevm.rs:274:44-274:45)
  1: StorageDead(_60)
    SourceInfo(regex-lite/src/pikevm.rs:274:44-274:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb31]
  succs [bb41]

bb41
  0: _47 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:286:22-286:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:274:28-286:22)
      kind: goto -> bb42
  }
  preds [bb39, bb40]
  succs [bb42]

bb42
  0: StorageDead(_62)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  1: StorageDead(_59)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  2: StorageDead(_55)
    SourceInfo(regex-lite/src/pikevm.rs:286:21-286:22)
  3: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  4: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  5: StorageDead(_50)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  6: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  7: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  8: _46 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:271:17-287:18)
      kind: goto -> bb23
  }
  preds [bb38, bb41]
  succs [bb23]

bb43
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  1: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  2: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  3: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  4: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  5: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  6: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:287:17-287:18)
  7: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:288:17-288:22)
  8: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:289:13-289:14)
  9: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:289:13-289:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:289:13-289:14)
      kind: goto -> bb44
  }
  preds [bb29, bb30]
  succs [bb44]

bb44
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:292:5-292:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:292:6-292:6)
      kind: goto -> bb45
  }
  preds [bb5, bb7, bb17, bb43]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:292:6-292:6)
      kind: return
  }
  preds [bb34, bb44]
  succs []

bb46
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:241:5-292:6)
      kind: resume
  }
  preds [bb0, bb10, bb11, bb12, bb18, bb19, bb20, bb21, bb23, bb24, bb35, bb36, bb37]
  succs []

