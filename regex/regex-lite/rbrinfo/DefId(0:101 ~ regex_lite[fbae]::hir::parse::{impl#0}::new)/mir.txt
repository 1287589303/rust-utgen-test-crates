bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:159:13-159:19)
  1: _3 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:159:13-159:19)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:160:13-160:20)
  3: _4 = &(*_2)
    SourceInfo(regex-lite/src/hir/parse.rs:160:13-160:20)
  4: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:161:20-161:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:161:20-161:32)
      kind: _5 = core::cell::Cell::<u32>::new(const 0_u32) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:162:18-162:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:162:18-162:30)
      kind: _6 = core::cell::Cell::<usize>::new(const 0_usize) -> [return: bb2, unwind: bb12]
  }
  preds [bb0]
  succs [bb2, bb12]

bb2
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:163:19-163:52)
  1: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:51)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:44)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:44)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:36)
  5: _11 = &(*_2)
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:44)
      kind: _10 = core::str::<impl str>::chars(move _11) -> [return: bb3, unwind: bb12]
  }
  preds [bb1]
  succs [bb3, bb12]

bb3
  0: _9 = &mut _10
    SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:44)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:163:43-163:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:163:29-163:51)
      kind: _8 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _9) -> [return: bb4, unwind: bb12]
  }
  preds [bb2]
  succs [bb4, bb12]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:163:50-163:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:163:19-163:52)
      kind: _7 = core::cell::Cell::<core::option::Option<char>>::new(move _8) -> [return: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:163:51-163:52)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:164:28-164:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:164:28-164:40)
      kind: _12 = core::cell::Cell::<u32>::new(const 0_u32) -> [return: bb6, unwind: bb12]
  }
  preds [bb4]
  succs [bb6, bb12]

bb6
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:165:20-165:46)
  1: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:165:33-165:45)
  2: _14 = (_1.1: hir::Flags)
    SourceInfo(regex-lite/src/hir/parse.rs:165:33-165:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:165:20-165:46)
      kind: _13 = core::cell::RefCell::<hir::Flags>::new(move _14) -> [return: bb7, unwind: bb12]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:165:45-165:46)
  1: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:166:28-166:48)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _16 = alloc::vec::Vec::<alloc::string::String>::new() -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:166:28-166:48)
      kind: _15 = core::cell::RefCell::<alloc::vec::Vec<alloc::string::String>>::new(move _16) -> [return: bb9, unwind: bb11]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:166:47-166:48)
  1: _0 = hir::parse::Parser::<'_> { config: move _3, pattern: move _4, depth: move _5, pos: move _6, char: move _7, capture_index: move _12, flags: move _13, capture_names: move _15 }
    SourceInfo(regex-lite/src/hir/parse.rs:158:9-167:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
      kind: drop(_15) -> [return: bb10, unwind: bb12]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  3: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  4: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  5: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  6: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  7: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:167:9-167:10)
  8: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:168:5-168:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:168:6-168:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:166:47-166:48)
      kind: drop(_16) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:157:5-168:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb9, bb11]
  succs []

