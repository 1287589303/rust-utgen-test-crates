bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:6-1379:14)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:13-1379:14)
  2: _3 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:13-1379:14)
  3: _2 = Le(const '0', move _3)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:6-1379:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:6-1379:14)
      kind: switchInt(move _2) -> [0: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:13-1379:14)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:18-1379:26)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:18-1379:19)
  3: _5 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:18-1379:19)
  4: _4 = Le(move _5, const '9')
    SourceInfo(regex-lite/src/hir/parse.rs:1379:18-1379:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:18-1379:26)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:25-1379:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:5-1379:79)
      kind: goto -> bb8
  }
  preds [bb1]
  succs [bb8]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:25-1379:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb1]
  succs [bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:13-1379:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb0]
  succs [bb5]

bb5
  0: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:32-1379:40)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:39-1379:40)
  2: _7 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:39-1379:40)
  3: _6 = Le(const 'a', move _7)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:32-1379:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:32-1379:40)
      kind: switchInt(move _6) -> [0: bb10, otherwise: bb6]
  }
  preds [bb3, bb4]
  succs [bb6, bb10]

bb6
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:39-1379:40)
  1: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:44-1379:52)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:44-1379:45)
  3: _9 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:44-1379:45)
  4: _8 = Le(move _9, const 'f')
    SourceInfo(regex-lite/src/hir/parse.rs:1379:44-1379:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:44-1379:52)
      kind: switchInt(move _8) -> [0: bb9, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:51-1379:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:5-1379:79)
      kind: goto -> bb8
  }
  preds [bb6]
  succs [bb8]

bb8
  0: _0 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:1379:5-1379:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:5-1379:79)
      kind: goto -> bb15
  }
  preds [bb2, bb7]
  succs [bb15]

bb9
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:51-1379:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb6]
  succs [bb11]

bb10
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:39-1379:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb11
  }
  preds [bb5]
  succs [bb11]

bb11
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:58-1379:66)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:65-1379:66)
  2: _11 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:65-1379:66)
  3: _10 = Le(const 'A', move _11)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:58-1379:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:58-1379:66)
      kind: switchInt(move _10) -> [0: bb13, otherwise: bb12]
  }
  preds [bb9, bb10]
  succs [bb12, bb13]

bb12
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:65-1379:66)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:70-1379:71)
  2: _12 = _1
    SourceInfo(regex-lite/src/hir/parse.rs:1379:70-1379:71)
  3: _0 = Le(move _12, const 'F')
    SourceInfo(regex-lite/src/hir/parse.rs:1379:70-1379:78)
  4: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:77-1379:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:57-1379:79)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb13
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:65-1379:66)
  1: _0 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:1379:57-1379:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:57-1379:79)
      kind: goto -> bb14
  }
  preds [bb11]
  succs [bb14]

bb14
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:78-1379:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1379:5-1379:79)
      kind: goto -> bb15
  }
  preds [bb12, bb13]
  succs [bb15]

bb15
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:78-1379:79)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:78-1379:79)
  2: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:78-1379:79)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:1379:78-1379:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:1380:2-1380:2)
      kind: return
  }
  preds [bb8, bb14]
  succs []

