bb0
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:370:9-435:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:370:9-435:10)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:370:9-435:10)
      kind: falseUnwind -> [real: bb2, unwind: bb66]
  }
  preds [bb0, bb63]
  succs [bb2, bb66]

bb2
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:373:13-375:14)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:373:17-373:37)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:373:17-373:25)
  3: _12 = &mut ((*_4).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:373:17-373:25)
  4: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:373:33-373:36)
  5: _13 = _7
    SourceInfo(regex-lite/src/pikevm.rs:373:33-373:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:373:17-373:37)
      kind: _11 = pikevm::SparseSet::insert(move _12, move _13) -> [return: bb3, unwind: bb66]
  }
  preds [bb1]
  succs [bb3, bb66]

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:373:17-373:37)
      kind: switchInt(move _11) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:373:36-373:37)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:373:36-373:37)
  2: _10 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:375:14-375:14)
  3: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:375:13-375:14)
  4: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:375:13-375:14)
  5: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:376:20-376:39)
  6: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:376:20-376:28)
  7: _16 = &((*_1).0: nfa::NFA)
    SourceInfo(regex-lite/src/pikevm.rs:376:20-376:28)
  8: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:376:35-376:38)
  9: _17 = _7
    SourceInfo(regex-lite/src/pikevm.rs:376:35-376:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:376:20-376:39)
      kind: _15 = nfa::NFA::state(move _16, move _17) -> [return: bb6, unwind: bb66]
  }
  preds [bb3]
  succs [bb6, bb66]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:373:36-373:37)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:373:36-373:37)
  2: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:374:17-374:23)
  3: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:375:13-375:14)
  4: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:375:13-375:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb3]
  succs [bb65]

bb6
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:376:38-376:39)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:376:38-376:39)
  2: PlaceMention((*_15))
    SourceInfo(regex-lite/src/pikevm.rs:376:19-376:39)
  3: _19 = discriminant((*_15))
    SourceInfo(regex-lite/src/pikevm.rs:376:19-376:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:376:13-376:39)
      kind: switchInt(move _19) -> [0: bb15, 1: bb15, 2: bb11, 3: bb8, 4: bb14, 5: bb15, 6: bb15, otherwise: bb7]
  }
  preds [bb4]
  succs [bb7, bb8, bb11, bb14, bb15, bb15, bb15, bb15]

bb7
  0: FakeRead(ForMatchedPlace(None), (*_15))
    SourceInfo(regex-lite/src/pikevm.rs:376:19-376:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:376:19-376:39)
      kind: unreachable
  }
  preds [bb6, bb8]
  succs []

bb8
  0: _18 = discriminant((((*_15) as Goto).1: core::option::Option<hir::Look>))
    SourceInfo(regex-lite/src/pikevm.rs:376:19-376:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:376:13-376:39)
      kind: switchInt(move _18) -> [0: bb9, 1: bb10, otherwise: bb7]
  }
  preds [bb6, bb15]
  succs [bb7, bb9, bb10]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:384:17-384:51)
      kind: falseEdge -> [real: bb19, imaginary: bb10]
  }
  preds [bb8]
  succs [bb10, bb19]

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:387:17-387:57)
      kind: falseEdge -> [real: bb20, imaginary: bb11]
  }
  preds [bb8, bb9]
  succs [bb11, bb20]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:376:13-376:39)
      kind: switchInt((((*_15) as Splits).1: bool)) -> [0: bb12, otherwise: bb13]
  }
  preds [bb6, bb10]
  succs [bb12, bb13]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:393:17-393:62)
      kind: falseEdge -> [real: bb24, imaginary: bb13]
  }
  preds [bb11]
  succs [bb13, bb24]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:406:17-406:61)
      kind: falseEdge -> [real: bb37, imaginary: bb14]
  }
  preds [bb11, bb12]
  succs [bb14, bb37]

bb14
  0: StorageLive(_79)
    SourceInfo(regex-lite/src/pikevm.rs:418:34-418:40)
  1: _79 = (((*_15) as Capture).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:418:34-418:40)
  2: StorageLive(_80)
    SourceInfo(regex-lite/src/pikevm.rs:418:42-418:46)
  3: _80 = (((*_15) as Capture).1: u32)
    SourceInfo(regex-lite/src/pikevm.rs:418:42-418:46)
  4: StorageLive(_81)
    SourceInfo(regex-lite/src/pikevm.rs:423:21-431:22)
  5: StorageLive(_82)
    SourceInfo(regex-lite/src/pikevm.rs:423:24-423:58)
  6: StorageLive(_83)
    SourceInfo(regex-lite/src/pikevm.rs:423:24-423:39)
  7: StorageLive(_84)
    SourceInfo(regex-lite/src/pikevm.rs:423:24-423:28)
  8: _84 = _80
    SourceInfo(regex-lite/src/pikevm.rs:423:24-423:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:423:24-423:39)
      kind: _83 = <u32 as int::U32>::as_usize(move _84) -> [return: bb51, unwind: bb66]
  }
  preds [bb6, bb13]
  succs [bb51, bb66]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:377:17-380:39)
      kind: falseEdge -> [real: bb16, imaginary: bb8]
  }
  preds [bb6, bb6, bb6, bb6]
  succs [bb8, bb16]

bb16
  0: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:79)
  1: StorageLive(_22)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:51)
  2: StorageLive(_23)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:51)
  3: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:36)
  4: _24 = &mut ((*_4).1: pikevm::SlotTable)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:36)
  5: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:381:47-381:50)
  6: _25 = _7
    SourceInfo(regex-lite/src/pikevm.rs:381:47-381:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:381:21-381:51)
      kind: _23 = pikevm::SlotTable::for_state(move _24, move _25) -> [return: bb17, unwind: bb66]
  }
  preds [bb15]
  succs [bb17, bb66]

bb17
  0: _22 = &mut (*_23)
    SourceInfo(regex-lite/src/pikevm.rs:381:21-381:51)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:381:50-381:51)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:381:50-381:51)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:381:68-381:78)
  4: _26 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:381:68-381:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:381:21-381:79)
      kind: _21 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::copy_from_slice(move _22, move _26) -> [return: bb18, unwind: bb66]
  }
  preds [bb16]
  succs [bb18, bb66]

bb18
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:381:78-381:79)
  1: StorageDead(_22)
    SourceInfo(regex-lite/src/pikevm.rs:381:78-381:79)
  2: StorageDead(_23)
    SourceInfo(regex-lite/src/pikevm.rs:381:79-381:80)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:381:79-381:80)
  4: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:382:21-382:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:382:21-382:27)
      kind: goto -> bb64
  }
  preds [bb17]
  succs [bb64]

bb19
  0: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:384:31-384:37)
  1: _27 = (((*_15) as Goto).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:384:31-384:37)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:385:27-385:33)
  3: _28 = _27
    SourceInfo(regex-lite/src/pikevm.rs:385:27-385:33)
  4: _7 = move _28
    SourceInfo(regex-lite/src/pikevm.rs:385:21-385:33)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:385:32-385:33)
  6: _9 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:384:55-386:18)
  7: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:386:17-386:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:386:17-386:18)
      kind: goto -> bb63
  }
  preds [bb9]
  succs [bb63]

bb20
  0: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:387:31-387:37)
  1: _29 = (((*_15) as Goto).0: u32)
    SourceInfo(regex-lite/src/pikevm.rs:387:31-387:37)
  2: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:387:50-387:54)
  3: _30 = (((((*_15) as Goto).1: core::option::Option<hir::Look>) as Some).0: hir::Look)
    SourceInfo(regex-lite/src/pikevm.rs:387:50-387:54)
  4: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:388:21-390:22)
  5: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:388:25-388:52)
  6: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:388:25-388:29)
  7: _33 = &_30
    SourceInfo(regex-lite/src/pikevm.rs:388:25-388:29)
  8: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:388:39-388:47)
  9: _34 = &(*_5)
    SourceInfo(regex-lite/src/pikevm.rs:388:39-388:47)
  10: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:388:49-388:51)
  11: _35 = _6
    SourceInfo(regex-lite/src/pikevm.rs:388:49-388:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:388:25-388:52)
      kind: _32 = hir::Look::is_match(move _33, move _34, move _35) -> [return: bb21, unwind: bb66]
  }
  preds [bb10]
  succs [bb21, bb66]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:388:25-388:52)
      kind: switchInt(move _32) -> [0: bb23, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb23]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  2: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  3: _31 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:390:22-390:22)
  4: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:390:21-390:22)
  5: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:390:21-390:22)
  6: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:391:27-391:33)
  7: _37 = _29
    SourceInfo(regex-lite/src/pikevm.rs:391:27-391:33)
  8: _7 = move _37
    SourceInfo(regex-lite/src/pikevm.rs:391:21-391:33)
  9: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:391:32-391:33)
  10: _9 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:387:61-392:18)
  11: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:392:17-392:18)
  12: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:392:17-392:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:392:17-392:18)
      kind: goto -> bb63
  }
  preds [bb21]
  succs [bb63]

bb23
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  2: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:388:51-388:52)
  3: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:389:25-389:31)
  4: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:390:21-390:22)
  5: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:390:21-390:22)
  6: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:392:17-392:18)
  7: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:392:17-392:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb64
  }
  preds [bb21]
  succs [bb64]

bb24
  0: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:393:33-393:44)
  1: _38 = &(((*_15) as Splits).0: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:393:33-393:44)
  2: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:394:27-397:22)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
  4: StorageLive(_41)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:40)
  5: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
  6: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:40)
  7: _43 = &(*_38)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
      kind: _42 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _43) -> [return: bb25, unwind: bb66]
  }
  preds [bb12]
  succs [bb25, bb66]

bb25
  0: _41 = &(*_42)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:40)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:394:39-394:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
      kind: _40 = core::slice::<impl [u32]>::get::<usize>(move _41, const 0_usize) -> [return: bb26, unwind: bb66]
  }
  preds [bb24]
  succs [bb26, bb66]

bb26
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/pikevm.rs:394:46-394:47)
  1: PlaceMention(_40)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
  2: _44 = discriminant(_40)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:394:27-394:47)
      kind: switchInt(move _44) -> [0: bb28, 1: bb29, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28, bb29]

bb27
  0: FakeRead(ForMatchedPlace(None), _40)
    SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:394:33-394:47)
      kind: unreachable
  }
  preds [bb26]
  succs []

bb28
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:395:25-395:29)
      kind: falseEdge -> [real: bb30, imaginary: bb29]
  }
  preds [bb26]
  succs [bb29, bb30]

bb29
  0: StorageLive(_46)
    SourceInfo(regex-lite/src/pikevm.rs:396:31-396:34)
  1: _46 = (*((_40 as Some).0: &u32))
    SourceInfo(regex-lite/src/pikevm.rs:396:31-396:34)
  2: _39 = _46
    SourceInfo(regex-lite/src/pikevm.rs:396:39-396:42)
  3: StorageDead(_46)
    SourceInfo(regex-lite/src/pikevm.rs:396:41-396:42)
  4: _7 = move _39
    SourceInfo(regex-lite/src/pikevm.rs:394:21-397:22)
  5: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:397:21-397:22)
  6: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:397:22-397:23)
  7: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:397:22-397:23)
  8: StorageLive(_47)
    SourceInfo(regex-lite/src/pikevm.rs:398:21-404:22)
  9: StorageLive(_48)
    SourceInfo(regex-lite/src/pikevm.rs:398:21-398:26)
  10: _48 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:398:21-398:26)
  11: StorageLive(_49)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-403:57)
  12: StorageLive(_50)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-402:35)
  13: StorageLive(_51)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-401:38)
  14: StorageLive(_52)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-400:36)
  15: StorageLive(_53)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-399:37)
  16: StorageLive(_54)
    SourceInfo(regex-lite/src/pikevm.rs:399:32-399:37)
  17: StorageLive(_55)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-399:32)
  18: _55 = &(*_38)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-399:32)
  19: StorageLive(_56)
    SourceInfo(regex-lite/src/pikevm.rs:399:33-399:36)
  20: _56 = core::ops::RangeFrom::<usize> { start: const 1_usize }
    SourceInfo(regex-lite/src/pikevm.rs:399:33-399:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:399:32-399:37)
      kind: _54 = <alloc::vec::Vec<u32> as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _55, move _56) -> [return: bb31, unwind: bb66]
  }
  preds [bb26, bb28]
  succs [bb31, bb66]

bb30
  0: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:395:33-395:39)
  1: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:397:21-397:22)
  2: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:397:22-397:23)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:397:22-397:23)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:405:17-405:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb64
  }
  preds [bb28]
  succs [bb64]

bb31
  0: _53 = &(*_54)
    SourceInfo(regex-lite/src/pikevm.rs:399:25-399:37)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/pikevm.rs:399:36-399:37)
  2: StorageDead(_55)
    SourceInfo(regex-lite/src/pikevm.rs:399:36-399:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:399:25-400:36)
      kind: _52 = core::slice::<impl [u32]>::iter(move _53) -> [return: bb32, unwind: bb66]
  }
  preds [bb29]
  succs [bb32, bb66]

bb32
  0: StorageDead(_53)
    SourceInfo(regex-lite/src/pikevm.rs:400:35-400:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:399:25-401:38)
      kind: _51 = <core::slice::Iter<'_, u32> as core::iter::Iterator>::copied::<'_, u32>(move _52) -> [return: bb33, unwind: bb66]
  }
  preds [bb31]
  succs [bb33, bb66]

bb33
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/pikevm.rs:401:37-401:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:399:25-402:35)
      kind: _50 = <core::iter::Copied<core::slice::Iter<'_, u32>> as core::iter::Iterator>::rev(move _51) -> [return: bb34, unwind: bb66]
  }
  preds [bb32]
  succs [bb34, bb66]

bb34
  0: StorageDead(_51)
    SourceInfo(regex-lite/src/pikevm.rs:402:34-402:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:399:25-403:57)
      kind: _49 = <core::iter::Rev<core::iter::Copied<core::slice::Iter<'_, u32>>> as core::iter::Iterator>::map::<pikevm::FollowEpsilon, fn(u32) -> pikevm::FollowEpsilon {pikevm::FollowEpsilon::Explore}>(move _50, pikevm::FollowEpsilon::Explore) -> [return: bb35, unwind: bb66]
  }
  preds [bb33]
  succs [bb35, bb66]

bb35
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/pikevm.rs:403:56-403:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:398:21-404:22)
      kind: _47 = <alloc::vec::Vec<pikevm::FollowEpsilon> as core::iter::Extend<pikevm::FollowEpsilon>>::extend::<core::iter::Map<core::iter::Rev<core::iter::Copied<core::slice::Iter<'_, u32>>>, fn(u32) -> pikevm::FollowEpsilon {pikevm::FollowEpsilon::Explore}>>(move _48, move _49) -> [return: bb36, unwind: bb66]
  }
  preds [bb34]
  succs [bb36, bb66]

bb36
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/pikevm.rs:404:21-404:22)
  1: StorageDead(_48)
    SourceInfo(regex-lite/src/pikevm.rs:404:21-404:22)
  2: StorageDead(_54)
    SourceInfo(regex-lite/src/pikevm.rs:404:22-404:23)
  3: StorageDead(_47)
    SourceInfo(regex-lite/src/pikevm.rs:404:22-404:23)
  4: _9 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:393:66-405:18)
  5: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:405:17-405:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:405:17-405:18)
      kind: goto -> bb63
  }
  preds [bb35]
  succs [bb63]

bb37
  0: StorageLive(_57)
    SourceInfo(regex-lite/src/pikevm.rs:406:33-406:44)
  1: _57 = &(((*_15) as Splits).0: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:406:33-406:44)
  2: StorageLive(_58)
    SourceInfo(regex-lite/src/pikevm.rs:407:27-410:22)
  3: StorageLive(_59)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
  4: StorageLive(_60)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:40)
  5: StorageLive(_61)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
  6: StorageLive(_62)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:40)
  7: _62 = &(*_57)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
      kind: _61 = <alloc::vec::Vec<u32> as core::ops::Deref>::deref(move _62) -> [return: bb38, unwind: bb66]
  }
  preds [bb13]
  succs [bb38, bb66]

bb38
  0: _60 = &(*_61)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:40)
  1: StorageDead(_62)
    SourceInfo(regex-lite/src/pikevm.rs:407:39-407:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
      kind: _59 = core::slice::<impl [u32]>::last(move _60) -> [return: bb39, unwind: bb66]
  }
  preds [bb37]
  succs [bb39, bb66]

bb39
  0: StorageDead(_60)
    SourceInfo(regex-lite/src/pikevm.rs:407:46-407:47)
  1: PlaceMention(_59)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
  2: _63 = discriminant(_59)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:407:27-407:47)
      kind: switchInt(move _63) -> [0: bb41, 1: bb42, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:407:33-407:47)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:408:25-408:29)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/pikevm.rs:409:31-409:34)
  1: _65 = (*((_59 as Some).0: &u32))
    SourceInfo(regex-lite/src/pikevm.rs:409:31-409:34)
  2: _58 = _65
    SourceInfo(regex-lite/src/pikevm.rs:409:39-409:42)
  3: StorageDead(_65)
    SourceInfo(regex-lite/src/pikevm.rs:409:41-409:42)
  4: _7 = move _58
    SourceInfo(regex-lite/src/pikevm.rs:407:21-410:22)
  5: StorageDead(_58)
    SourceInfo(regex-lite/src/pikevm.rs:410:21-410:22)
  6: StorageDead(_61)
    SourceInfo(regex-lite/src/pikevm.rs:410:22-410:23)
  7: StorageDead(_59)
    SourceInfo(regex-lite/src/pikevm.rs:410:22-410:23)
  8: StorageLive(_66)
    SourceInfo(regex-lite/src/pikevm.rs:411:21-416:22)
  9: StorageLive(_67)
    SourceInfo(regex-lite/src/pikevm.rs:411:21-411:26)
  10: _67 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:411:21-411:26)
  11: StorageLive(_68)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-415:57)
  12: StorageLive(_69)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-414:38)
  13: StorageLive(_70)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-413:36)
  14: StorageLive(_71)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-412:53)
  15: StorageLive(_72)
    SourceInfo(regex-lite/src/pikevm.rs:412:32-412:53)
  16: StorageLive(_73)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-412:32)
  17: _73 = &(*_57)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-412:32)
  18: StorageLive(_74)
    SourceInfo(regex-lite/src/pikevm.rs:412:33-412:52)
  19: StorageLive(_75)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:52)
  20: StorageLive(_76)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:48)
  21: StorageLive(_77)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:42)
  22: _77 = &(*_57)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:35-412:48)
      kind: _76 = alloc::vec::Vec::<u32>::len(move _77) -> [return: bb44, unwind: bb66]
  }
  preds [bb39, bb41]
  succs [bb44, bb66]

bb43
  0: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:408:33-408:39)
  1: StorageDead(_58)
    SourceInfo(regex-lite/src/pikevm.rs:410:21-410:22)
  2: StorageDead(_61)
    SourceInfo(regex-lite/src/pikevm.rs:410:22-410:23)
  3: StorageDead(_59)
    SourceInfo(regex-lite/src/pikevm.rs:410:22-410:23)
  4: StorageDead(_57)
    SourceInfo(regex-lite/src/pikevm.rs:417:17-417:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb64
  }
  preds [bb41]
  succs [bb64]

bb44
  0: StorageDead(_77)
    SourceInfo(regex-lite/src/pikevm.rs:412:47-412:48)
  1: _78 = SubWithOverflow(_76, const 1_usize)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:35-412:52)
      kind: assert(!move (_78.1: bool), "attempt to compute `{} - {}`, which would overflow", move _76, const 1_usize) -> [success: bb45, unwind: bb66]
  }
  preds [bb42]
  succs [bb45, bb66]

bb45
  0: _75 = move (_78.0: usize)
    SourceInfo(regex-lite/src/pikevm.rs:412:35-412:52)
  1: StorageDead(_76)
    SourceInfo(regex-lite/src/pikevm.rs:412:51-412:52)
  2: _74 = core::ops::RangeTo::<usize> { end: move _75 }
    SourceInfo(regex-lite/src/pikevm.rs:412:33-412:52)
  3: StorageDead(_75)
    SourceInfo(regex-lite/src/pikevm.rs:412:51-412:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:32-412:53)
      kind: _72 = <alloc::vec::Vec<u32> as core::ops::Index<core::ops::RangeTo<usize>>>::index(move _73, move _74) -> [return: bb46, unwind: bb66]
  }
  preds [bb44]
  succs [bb46, bb66]

bb46
  0: _71 = &(*_72)
    SourceInfo(regex-lite/src/pikevm.rs:412:25-412:53)
  1: StorageDead(_74)
    SourceInfo(regex-lite/src/pikevm.rs:412:52-412:53)
  2: StorageDead(_73)
    SourceInfo(regex-lite/src/pikevm.rs:412:52-412:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:25-413:36)
      kind: _70 = core::slice::<impl [u32]>::iter(move _71) -> [return: bb47, unwind: bb66]
  }
  preds [bb45]
  succs [bb47, bb66]

bb47
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/pikevm.rs:413:35-413:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:25-414:38)
      kind: _69 = <core::slice::Iter<'_, u32> as core::iter::Iterator>::copied::<'_, u32>(move _70) -> [return: bb48, unwind: bb66]
  }
  preds [bb46]
  succs [bb48, bb66]

bb48
  0: StorageDead(_70)
    SourceInfo(regex-lite/src/pikevm.rs:414:37-414:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:412:25-415:57)
      kind: _68 = <core::iter::Copied<core::slice::Iter<'_, u32>> as core::iter::Iterator>::map::<pikevm::FollowEpsilon, fn(u32) -> pikevm::FollowEpsilon {pikevm::FollowEpsilon::Explore}>(move _69, pikevm::FollowEpsilon::Explore) -> [return: bb49, unwind: bb66]
  }
  preds [bb47]
  succs [bb49, bb66]

bb49
  0: StorageDead(_69)
    SourceInfo(regex-lite/src/pikevm.rs:415:56-415:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:411:21-416:22)
      kind: _66 = <alloc::vec::Vec<pikevm::FollowEpsilon> as core::iter::Extend<pikevm::FollowEpsilon>>::extend::<core::iter::Map<core::iter::Copied<core::slice::Iter<'_, u32>>, fn(u32) -> pikevm::FollowEpsilon {pikevm::FollowEpsilon::Explore}>>(move _67, move _68) -> [return: bb50, unwind: bb66]
  }
  preds [bb48]
  succs [bb50, bb66]

bb50
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/pikevm.rs:416:21-416:22)
  1: StorageDead(_67)
    SourceInfo(regex-lite/src/pikevm.rs:416:21-416:22)
  2: StorageDead(_72)
    SourceInfo(regex-lite/src/pikevm.rs:416:22-416:23)
  3: StorageDead(_66)
    SourceInfo(regex-lite/src/pikevm.rs:416:22-416:23)
  4: _9 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:406:65-417:18)
  5: StorageDead(_57)
    SourceInfo(regex-lite/src/pikevm.rs:417:17-417:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:417:17-417:18)
      kind: goto -> bb63
  }
  preds [bb49]
  succs [bb63]

bb51
  0: StorageDead(_84)
    SourceInfo(regex-lite/src/pikevm.rs:423:38-423:39)
  1: StorageLive(_85)
    SourceInfo(regex-lite/src/pikevm.rs:423:42-423:58)
  2: StorageLive(_86)
    SourceInfo(regex-lite/src/pikevm.rs:423:42-423:52)
  3: _86 = &(*_3)
    SourceInfo(regex-lite/src/pikevm.rs:423:42-423:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:423:42-423:58)
      kind: _85 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::len(move _86) -> [return: bb52, unwind: bb66]
  }
  preds [bb14]
  succs [bb52, bb66]

bb52
  0: StorageDead(_86)
    SourceInfo(regex-lite/src/pikevm.rs:423:57-423:58)
  1: _82 = Lt(move _83, move _85)
    SourceInfo(regex-lite/src/pikevm.rs:423:24-423:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:423:24-423:58)
      kind: switchInt(move _82) -> [0: bb61, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb61]

bb53
  0: StorageDead(_85)
    SourceInfo(regex-lite/src/pikevm.rs:423:57-423:58)
  1: StorageDead(_83)
    SourceInfo(regex-lite/src/pikevm.rs:423:57-423:58)
  2: StorageLive(_87)
    SourceInfo(regex-lite/src/pikevm.rs:424:25-427:27)
  3: StorageLive(_88)
    SourceInfo(regex-lite/src/pikevm.rs:424:25-424:30)
  4: _88 = &mut (*_2)
    SourceInfo(regex-lite/src/pikevm.rs:424:25-424:30)
  5: StorageLive(_89)
    SourceInfo(regex-lite/src/pikevm.rs:424:36-427:26)
  6: StorageLive(_90)
    SourceInfo(regex-lite/src/pikevm.rs:425:29-425:33)
  7: _90 = _80
    SourceInfo(regex-lite/src/pikevm.rs:425:29-425:33)
  8: StorageLive(_91)
    SourceInfo(regex-lite/src/pikevm.rs:426:37-426:64)
  9: StorageLive(_92)
    SourceInfo(regex-lite/src/pikevm.rs:426:48-426:63)
  10: StorageLive(_93)
    SourceInfo(regex-lite/src/pikevm.rs:426:48-426:52)
  11: _93 = _80
    SourceInfo(regex-lite/src/pikevm.rs:426:48-426:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:426:48-426:63)
      kind: _92 = <u32 as int::U32>::as_usize(move _93) -> [return: bb54, unwind: bb66]
  }
  preds [bb52]
  succs [bb54, bb66]

bb54
  0: StorageDead(_93)
    SourceInfo(regex-lite/src/pikevm.rs:426:62-426:63)
  1: _94 = Len((*_3))
    SourceInfo(regex-lite/src/pikevm.rs:426:37-426:64)
  2: _95 = Lt(_92, _94)
    SourceInfo(regex-lite/src/pikevm.rs:426:37-426:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:426:37-426:64)
      kind: assert(move _95, "index out of bounds: the length is {} but the index is {}", move _94, _92) -> [success: bb55, unwind: bb66]
  }
  preds [bb53]
  succs [bb55, bb66]

bb55
  0: _91 = (*_3)[_92]
    SourceInfo(regex-lite/src/pikevm.rs:426:37-426:64)
  1: _89 = pikevm::FollowEpsilon::RestoreCapture { slot: move _90, offset: move _91 }
    SourceInfo(regex-lite/src/pikevm.rs:424:36-427:26)
  2: StorageDead(_91)
    SourceInfo(regex-lite/src/pikevm.rs:427:25-427:26)
  3: StorageDead(_90)
    SourceInfo(regex-lite/src/pikevm.rs:427:25-427:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:424:25-427:27)
      kind: _87 = alloc::vec::Vec::<pikevm::FollowEpsilon>::push(move _88, move _89) -> [return: bb56, unwind: bb66]
  }
  preds [bb54]
  succs [bb56, bb66]

bb56
  0: StorageDead(_89)
    SourceInfo(regex-lite/src/pikevm.rs:427:26-427:27)
  1: StorageDead(_88)
    SourceInfo(regex-lite/src/pikevm.rs:427:26-427:27)
  2: StorageDead(_92)
    SourceInfo(regex-lite/src/pikevm.rs:427:27-427:28)
  3: StorageDead(_87)
    SourceInfo(regex-lite/src/pikevm.rs:427:27-427:28)
  4: StorageLive(_96)
    SourceInfo(regex-lite/src/pikevm.rs:430:29-430:64)
  5: StorageLive(_97)
    SourceInfo(regex-lite/src/pikevm.rs:430:34-430:63)
  6: StorageLive(_98)
    SourceInfo(regex-lite/src/pikevm.rs:430:34-430:54)
  7: StorageLive(_99)
    SourceInfo(regex-lite/src/pikevm.rs:430:51-430:53)
  8: _99 = _6
    SourceInfo(regex-lite/src/pikevm.rs:430:51-430:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:430:34-430:54)
      kind: _98 = int::NonMaxUsize::new(move _99) -> [return: bb57, unwind: bb66]
  }
  preds [bb55]
  succs [bb57, bb66]

bb57
  0: StorageDead(_99)
    SourceInfo(regex-lite/src/pikevm.rs:430:53-430:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:430:34-430:63)
      kind: _97 = core::option::Option::<int::NonMaxUsize>::unwrap(move _98) -> [return: bb58, unwind: bb66]
  }
  preds [bb56]
  succs [bb58, bb66]

bb58
  0: StorageDead(_98)
    SourceInfo(regex-lite/src/pikevm.rs:430:62-430:63)
  1: _96 = core::option::Option::<int::NonMaxUsize>::Some(move _97)
    SourceInfo(regex-lite/src/pikevm.rs:430:29-430:64)
  2: StorageDead(_97)
    SourceInfo(regex-lite/src/pikevm.rs:430:63-430:64)
  3: StorageLive(_100)
    SourceInfo(regex-lite/src/pikevm.rs:429:36-429:51)
  4: StorageLive(_101)
    SourceInfo(regex-lite/src/pikevm.rs:429:36-429:40)
  5: _101 = _80
    SourceInfo(regex-lite/src/pikevm.rs:429:36-429:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:429:36-429:51)
      kind: _100 = <u32 as int::U32>::as_usize(move _101) -> [return: bb59, unwind: bb66]
  }
  preds [bb57]
  succs [bb59, bb66]

bb59
  0: StorageDead(_101)
    SourceInfo(regex-lite/src/pikevm.rs:429:50-429:51)
  1: _102 = Len((*_3))
    SourceInfo(regex-lite/src/pikevm.rs:429:25-429:52)
  2: _103 = Lt(_100, _102)
    SourceInfo(regex-lite/src/pikevm.rs:429:25-429:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:429:25-429:52)
      kind: assert(move _103, "index out of bounds: the length is {} but the index is {}", move _102, _100) -> [success: bb60, unwind: bb66]
  }
  preds [bb58]
  succs [bb60, bb66]

bb60
  0: (*_3)[_100] = move _96
    SourceInfo(regex-lite/src/pikevm.rs:429:25-430:64)
  1: StorageDead(_96)
    SourceInfo(regex-lite/src/pikevm.rs:430:63-430:64)
  2: StorageDead(_100)
    SourceInfo(regex-lite/src/pikevm.rs:430:64-430:65)
  3: _81 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:423:59-431:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:423:21-431:22)
      kind: goto -> bb62
  }
  preds [bb59]
  succs [bb62]

bb61
  0: StorageDead(_85)
    SourceInfo(regex-lite/src/pikevm.rs:423:57-423:58)
  1: StorageDead(_83)
    SourceInfo(regex-lite/src/pikevm.rs:423:57-423:58)
  2: _81 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:431:22-431:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:423:21-431:22)
      kind: goto -> bb62
  }
  preds [bb52]
  succs [bb62]

bb62
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/pikevm.rs:431:21-431:22)
  1: StorageDead(_81)
    SourceInfo(regex-lite/src/pikevm.rs:431:21-431:22)
  2: StorageLive(_104)
    SourceInfo(regex-lite/src/pikevm.rs:432:27-432:33)
  3: _104 = _79
    SourceInfo(regex-lite/src/pikevm.rs:432:27-432:33)
  4: _7 = move _104
    SourceInfo(regex-lite/src/pikevm.rs:432:21-432:33)
  5: StorageDead(_104)
    SourceInfo(regex-lite/src/pikevm.rs:432:32-432:33)
  6: _9 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:418:52-433:18)
  7: StorageDead(_80)
    SourceInfo(regex-lite/src/pikevm.rs:433:17-433:18)
  8: StorageDead(_79)
    SourceInfo(regex-lite/src/pikevm.rs:433:17-433:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:433:17-433:18)
      kind: goto -> bb63
  }
  preds [bb60, bb61]
  succs [bb63]

bb63
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:435:9-435:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:370:9-435:10)
      kind: goto -> bb1
  }
  preds [bb19, bb22, bb36, bb50, bb62]
  succs [bb1]

bb64
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:435:9-435:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb65
  }
  preds [bb18, bb23, bb30, bb43]
  succs [bb65]

bb65
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:435:9-435:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:436:6-436:6)
      kind: return
  }
  preds [bb5, bb64]
  succs []

bb66
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:355:5-436:6)
      kind: resume
  }
  preds [bb1, bb2, bb4, bb14, bb16, bb17, bb20, bb24, bb25, bb29, bb31, bb32, bb33, bb34, bb35, bb37, bb38, bb42, bb44, bb45, bb46, bb47, bb48, bb49, bb51, bb53, bb54, bb55, bb56, bb57, bb58, bb59]
  succs []

