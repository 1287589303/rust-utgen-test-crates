bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:713:13-713:16)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:31)
  3: _5 = &mut _2
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
      kind: _4 = alloc::vec::Vec::<hir::Hir>::pop(move _5) -> [return: bb1, unwind: bb47]
  }
  preds []
  succs [bb1, bb47]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:713:36-713:37)
  1: PlaceMention(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
  2: _6 = discriminant(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:713:19-713:37)
      kind: switchInt(move _6) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:713:25-713:37)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:714:13-714:22)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:716:28-716:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:716:28-716:69)
      kind: _10 = error::Error::new(const hir::parse::ERR_UNCOUNTED_REP_SUB_MISSING) -> [return: bb8, unwind: bb46]
  }
  preds [bb1, bb3]
  succs [bb8, bb46]

bb5
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:714:18-714:21)
  1: _7 = move ((_4 as Some).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:714:18-714:21)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:714:35-714:38)
  3: _8 = move _7
    SourceInfo(regex-lite/src/hir/parse.rs:714:35-714:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:714:26-714:39)
      kind: _3 = alloc::boxed::Box::<hir::Hir>::new(move _8) -> [return: bb6, unwind: bb44]
  }
  preds [bb3]
  succs [bb6, bb44]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:714:38-714:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:714:38-714:39)
      kind: drop(_7) -> [return: bb7, unwind: bb46]
  }
  preds [bb5]
  succs [bb7, bb46]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:714:38-714:39)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/hir/parse.rs:713:13-713:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:718:10-718:11)
      kind: drop(_4) -> [return: bb9, unwind: bb43]
  }
  preds [bb6]
  succs [bb9, bb43]

bb8
  0: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Err(move _10)
    SourceInfo(regex-lite/src/hir/parse.rs:716:24-716:70)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:716:69-716:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:718:10-718:11)
      kind: drop(_4) -> [return: bb39, unwind: bb47]
  }
  preds [bb4]
  succs [bb39, bb47]

bb9
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:718:10-718:11)
  1: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:719:26-724:10)
  2: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:719:32-719:43)
  3: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:719:32-719:36)
  4: _15 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:719:32-719:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:719:32-719:43)
      kind: _14 = hir::parse::Parser::<'_>::char(move _15) -> [return: bb10, unwind: bb43]
  }
  preds [bb7]
  succs [bb10, bb43]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:719:42-719:43)
  1: PlaceMention(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:719:32-719:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:719:26-719:43)
      kind: switchInt(_14) -> [63: bb12, 42: bb13, 43: bb14, otherwise: bb11]
  }
  preds [bb9]
  succs [bb11, bb12, bb13, bb14]

bb11
  0: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:723:13-723:16)
  1: _19 = _14
    SourceInfo(regex-lite/src/hir/parse.rs:723:13-723:16)
  2: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  5: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  6: StorageLive(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  7: _25 = [const "internal error: entered unreachable code: unrecognized repetition operator '", const "'"]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  8: _24 = &_25
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  9: _23 = &(*_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:140:24-140:70)
  10: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:723:68-723:70)
  14: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:723:74-723:77)
  15: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:723:74-723:77)
  16: _31 = &_19
    SourceInfo(regex-lite/src/hir/parse.rs:723:74-723:77)
  17: _30 = &(*_31)
    SourceInfo(regex-lite/src/hir/parse.rs:723:74-723:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:723:68-723:70)
      kind: _29 = core::fmt::rt::Argument::<'_>::new_display::<char>(move _30) -> [return: bb18, unwind: bb43]
  }
  preds [bb10, bb14]
  succs [bb18, bb43]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:720:13-720:16)
      kind: falseEdge -> [real: bb15, imaginary: bb13]
  }
  preds [bb10]
  succs [bb13, bb15]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:721:13-721:16)
      kind: falseEdge -> [real: bb16, imaginary: bb14]
  }
  preds [bb10, bb12]
  succs [bb14, bb16]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:722:13-722:16)
      kind: falseEdge -> [real: bb17, imaginary: bb11]
  }
  preds [bb10, bb13]
  succs [bb11, bb17]

bb15
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:720:24-720:31)
  1: _16 = core::option::Option::<u32>::Some(const 1_u32)
    SourceInfo(regex-lite/src/hir/parse.rs:720:24-720:31)
  2: _13 = (const 0_u32, move _16)
    SourceInfo(regex-lite/src/hir/parse.rs:720:20-720:32)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:720:31-720:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:720:31-720:32)
      kind: goto -> bb20
  }
  preds [bb12]
  succs [bb20]

bb16
  0: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:721:24-721:28)
  1: _17 = core::option::Option::<u32>::None
    SourceInfo(regex-lite/src/hir/parse.rs:721:24-721:28)
  2: _13 = (const 0_u32, move _17)
    SourceInfo(regex-lite/src/hir/parse.rs:721:20-721:29)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:721:28-721:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:721:28-721:29)
      kind: goto -> bb20
  }
  preds [bb13]
  succs [bb20]

bb17
  0: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:722:24-722:28)
  1: _18 = core::option::Option::<u32>::None
    SourceInfo(regex-lite/src/hir/parse.rs:722:24-722:28)
  2: _13 = (const 1_u32, move _18)
    SourceInfo(regex-lite/src/hir/parse.rs:722:20-722:29)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:722:28-722:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:722:28-722:29)
      kind: goto -> bb20
  }
  preds [bb14]
  succs [bb20]

bb18
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:723:69-723:70)
  1: _28 = [move _29]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_29)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: _27 = &_28
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: _26 = &(*_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _22 = core::fmt::Arguments::<'_>::new_v1::<2, 1>(move _23, move _26) -> [return: bb19, unwind: bb43]
  }
  preds [bb11]
  succs [bb19, bb43]

bb19
  0: StorageDead(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _21 = core::panicking::panic_fmt(move _22) -> bb43
  }
  preds [bb18]
  succs [bb43]

bb20
  0: PlaceMention(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:719:26-724:10)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:719:14-719:17)
  2: _11 = (_13.0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:719:14-719:17)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:719:19-719:22)
  4: _12 = (_13.1: core::option::Option<u32>)
    SourceInfo(regex-lite/src/hir/parse.rs:719:19-719:22)
  5: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:724:10-724:11)
  6: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:724:10-724:11)
  7: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:725:13-725:23)
  8: _32 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:725:26-725:30)
  9: FakeRead(ForLet(None), _32)
    SourceInfo(regex-lite/src/hir/parse.rs:725:13-725:23)
  10: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:726:9-729:10)
  11: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:726:12-726:23)
  12: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:726:12-726:16)
  13: _35 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:726:12-726:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:12-726:23)
      kind: _34 = hir::parse::Parser::<'_>::bump(move _35) -> [return: bb21, unwind: bb43]
  }
  preds [bb15, bb16, bb17]
  succs [bb21, bb43]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:12-726:23)
      kind: switchInt(move _34) -> [0: bb27, otherwise: bb22]
  }
  preds [bb20]
  succs [bb22, bb27]

bb22
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:726:22-726:23)
  1: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:45)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:38)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:31)
  4: _38 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:38)
      kind: _37 = hir::parse::Parser::<'_>::char(move _38) -> [return: bb23, unwind: bb43]
  }
  preds [bb21]
  succs [bb23, bb43]

bb23
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:726:37-726:38)
  1: _36 = Eq(move _37, const '?')
    SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:27-726:45)
      kind: switchInt(move _36) -> [0: bb26, otherwise: bb24]
  }
  preds [bb22]
  succs [bb24, bb26]

bb24
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:726:44-726:45)
  1: _32 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:727:13-727:27)
  2: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:728:13-728:24)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:728:13-728:17)
  4: _40 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:728:13-728:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:728:13-728:24)
      kind: _39 = hir::parse::Parser::<'_>::bump(move _40) -> [return: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:728:23-728:24)
  1: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:728:24-728:25)
  2: _33 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:726:46-729:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:9-729:10)
      kind: goto -> bb29
  }
  preds [bb24]
  succs [bb29]

bb26
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:726:44-726:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb23]
  succs [bb28]

bb27
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:726:22-726:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb21]
  succs [bb28]

bb28
  0: _33 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:729:10-729:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:726:9-729:10)
      kind: goto -> bb29
  }
  preds [bb26, bb27]
  succs [bb29]

bb29
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:729:9-729:10)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:729:9-729:10)
  2: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:729:9-729:10)
  3: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:730:9-732:10)
  4: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:35)
  5: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:24)
  6: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:16)
  7: _44 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:24)
      kind: _43 = hir::parse::Parser::<'_>::flags(move _44) -> [return: bb30, unwind: bb43]
  }
  preds [bb25, bb28]
  succs [bb30, bb43]

bb30
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:730:23-730:24)
  1: _42 = (_43.3: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:730:12-730:35)
      kind: switchInt(move _42) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:730:34-730:35)
  1: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:731:23-731:29)
  2: _45 = _32
    SourceInfo(regex-lite/src/hir/parse.rs:731:23-731:29)
  3: _32 = Not(move _45)
    SourceInfo(regex-lite/src/hir/parse.rs:731:13-731:29)
  4: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:731:28-731:29)
  5: _41 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:730:36-732:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:730:9-732:10)
      kind: goto -> bb33
  }
  preds [bb30]
  succs [bb33]

bb32
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:730:34-730:35)
  1: _41 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:732:10-732:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:730:9-732:10)
      kind: goto -> bb33
  }
  preds [bb30]
  succs [bb33]

bb33
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:732:9-732:10)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:732:9-732:10)
  2: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:733:9-738:12)
  3: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:733:9-733:15)
  4: _47 = &mut _2
    SourceInfo(regex-lite/src/hir/parse.rs:733:9-733:15)
  5: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:733:21-738:11)
  6: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:733:37-738:10)
  7: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:734:13-734:16)
  8: _50 = _11
    SourceInfo(regex-lite/src/hir/parse.rs:734:13-734:16)
  9: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:735:13-735:16)
  10: _51 = _12
    SourceInfo(regex-lite/src/hir/parse.rs:735:13-735:16)
  11: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:736:13-736:19)
  12: _52 = _32
    SourceInfo(regex-lite/src/hir/parse.rs:736:13-736:19)
  13: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:737:13-737:16)
  14: _53 = move _3
    SourceInfo(regex-lite/src/hir/parse.rs:737:13-737:16)
  15: _49 = hir::Repetition { min: move _50, max: move _51, greedy: move _52, sub: move _53 }
    SourceInfo(regex-lite/src/hir/parse.rs:733:37-738:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:738:9-738:10)
      kind: drop(_53) -> [return: bb34, unwind: bb42]
  }
  preds [bb31, bb32]
  succs [bb34, bb42]

bb34
  0: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:738:9-738:10)
  1: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:738:9-738:10)
  2: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:738:9-738:10)
  3: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:738:9-738:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:733:21-738:11)
      kind: _48 = hir::Hir::repetition(move _49) -> [return: bb35, unwind: bb42]
  }
  preds [bb33]
  succs [bb35, bb42]

bb35
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:738:10-738:11)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:733:9-738:12)
      kind: _46 = alloc::vec::Vec::<hir::Hir>::push(move _47, move _48) -> [return: bb36, unwind: bb41]
  }
  preds [bb34]
  succs [bb36, bb41]

bb36
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:738:11-738:12)
  1: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:738:11-738:12)
  2: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:738:12-738:13)
  3: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:739:12-739:18)
  4: _54 = move _2
    SourceInfo(regex-lite/src/hir/parse.rs:739:12-739:18)
  5: _0 = core::result::Result::<alloc::vec::Vec<hir::Hir>, error::Error>::Ok(move _54)
    SourceInfo(regex-lite/src/hir/parse.rs:739:9-739:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:739:18-739:19)
      kind: drop(_54) -> [return: bb37, unwind: bb43]
  }
  preds [bb35]
  succs [bb37, bb43]

bb37
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:739:18-739:19)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
  3: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
      kind: drop(_3) -> [return: bb38, unwind: bb47]
  }
  preds [bb36]
  succs [bb38, bb47]

bb38
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
      kind: drop(_2) -> [return: bb40, unwind: bb48]
  }
  preds [bb37]
  succs [bb40, bb48]

bb39
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:718:10-718:11)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
      kind: drop(_2) -> [return: bb40, unwind: bb48]
  }
  preds [bb8]
  succs [bb40, bb48]

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:6-740:6)
      kind: return
  }
  preds [bb38, bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:738:11-738:12)
      kind: drop(_48) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb35]
  succs [bb43]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:738:10-738:11)
      kind: drop(_49) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb33, bb34]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
      kind: drop(_3) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb7, bb9, bb11, bb18, bb19, bb20, bb22, bb24, bb29, bb36, bb41, bb42]
  succs [bb47]

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:714:38-714:39)
      kind: drop(_8) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:714:38-714:39)
      kind: drop(_7) -> [return: bb46, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:718:10-718:11)
      kind: drop(_4) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb4, bb6, bb45]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:740:5-740:6)
      kind: drop(_2) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb0, bb8, bb37, bb43, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:709:5-740:6)
      kind: resume
  }
  preds [bb38, bb39, bb47]
  succs []

