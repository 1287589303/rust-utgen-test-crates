bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:20)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:20)
  5: _6 = &((*_1).2: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
      kind: _5 = <alloc::sync::Arc<pikevm::PikeVM> as core::ops::Deref>::deref(move _6) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _4 = &(*_5)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:20)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:1930:19-1930:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
      kind: _3 = pikevm::PikeVM::nfa(move _4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _2 = &(*_3)
    SourceInfo(regex-lite/src/string.rs:1930:9-1930:26)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1930:25-1930:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1930:9-1930:38)
      kind: _0 = nfa::NFA::group_len(move _2) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/string.rs:1930:37-1930:38)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:1931:5-1931:6)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:1931:5-1931:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1931:6-1931:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1929:5-1931:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

