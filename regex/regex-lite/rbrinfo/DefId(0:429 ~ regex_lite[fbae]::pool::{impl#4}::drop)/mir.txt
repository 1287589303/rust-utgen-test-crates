bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/pool.rs:90:30-90:47)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/pool.rs:90:30-90:40)
  2: _3 = &mut ((*_1).1: core::option::Option<alloc::boxed::Box<T>>)
    SourceInfo(regex-lite/src/pool.rs:90:30-90:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:90:30-90:47)
      kind: _2 = core::option::Option::<alloc::boxed::Box<T>>::take(move _3) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/pool.rs:90:46-90:47)
  1: PlaceMention(_2)
    SourceInfo(regex-lite/src/pool.rs:90:30-90:47)
  2: _4 = discriminant(_2)
    SourceInfo(regex-lite/src/pool.rs:90:30-90:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:90:16-90:27)
      kind: switchInt(move _4) -> [1: bb2, otherwise: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:90:16-90:27)
      kind: falseEdge -> [real: bb3, imaginary: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageLive(_5)
    SourceInfo(regex-lite/src/pool.rs:90:21-90:26)
  1: _5 = move ((_2 as Some).0: alloc::boxed::Box<T>)
    SourceInfo(regex-lite/src/pool.rs:90:21-90:26)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/pool.rs:91:13-91:39)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/pool.rs:91:13-91:22)
  4: _7 = &(*((*_1).0: &pool::Pool<T, F>))
    SourceInfo(regex-lite/src/pool.rs:91:13-91:22)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/pool.rs:91:33-91:38)
  6: _8 = move _5
    SourceInfo(regex-lite/src/pool.rs:91:33-91:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:91:13-91:39)
      kind: _6 = pool::Pool::<T, F>::put_value(move _7, move _8) -> [return: bb4, unwind: bb9]
  }
  preds [bb2]
  succs [bb4, bb9]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/pool.rs:91:38-91:39)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/pool.rs:91:38-91:39)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/pool.rs:91:39-91:40)
  3: _0 = const ()
    SourceInfo(regex-lite/src/pool.rs:90:48-92:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:92:9-92:10)
      kind: drop(_5) -> [return: bb6, unwind: bb11]
  }
  preds [bb3]
  succs [bb6, bb11]

bb5
  0: _0 = const ()
    SourceInfo(regex-lite/src/pool.rs:92:10-92:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:90:9-92:10)
      kind: goto -> bb7
  }
  preds [bb1, bb2]
  succs [bb7]

bb6
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/pool.rs:92:9-92:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:90:9-92:10)
      kind: goto -> bb7
  }
  preds [bb4]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:93:5-93:6)
      kind: drop(_2) -> [return: bb8, unwind: bb12]
  }
  preds [bb5, bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/pool.rs:93:5-93:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:93:6-93:6)
      kind: return
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:91:38-91:39)
      kind: drop(_8) -> [return: bb10, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:92:9-92:10)
      kind: drop(_5) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:93:5-93:6)
      kind: drop(_2) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb4, bb10]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:89:5-93:6)
      kind: resume
  }
  preds [bb0, bb7, bb11]
  succs []

