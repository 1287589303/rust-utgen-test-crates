bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:254:13-254:21)
  1: _3 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:254:13-254:21)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:255:17-255:76)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:255:17-255:28)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:255:17-255:76)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:255:17-255:28)
  6: _7 = &((*_1).0: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:255:17-255:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:255:17-255:76)
      kind: _6 = <alloc::sync::Arc<pikevm::PikeVM> as core::ops::Deref>::deref(move _7) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: _5 = &(*_6)
    SourceInfo(regex-lite/src/string.rs:255:17-255:28)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:255:27-255:28)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:255:39-255:54)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:255:39-255:48)
  4: _9 = &((*_1).1: pool::Pool<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-lite/src/string.rs:255:39-255:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:255:39-255:54)
      kind: _8 = pool::Pool::<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _9) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:255:53-255:54)
  1: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:255:56-255:75)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:255:56-255:75)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:255:56-255:64)
  4: _12 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:255:56-255:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:255:56-255:75)
      kind: _11 = core::str::<impl str>::as_bytes(move _12) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: _10 = &(*_11)
    SourceInfo(regex-lite/src/string.rs:255:56-255:75)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:255:74-255:75)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:255:17-255:76)
      kind: _4 = pikevm::PikeVM::find_iter(move _5, move _8, move _10) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:255:75-255:76)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:255:75-255:76)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:255:75-255:76)
  3: _0 = string::Matches::<'_, '_> { haystack: move _3, it: move _4 }
    SourceInfo(regex-lite/src/string.rs:253:9-256:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:256:9-256:10)
      kind: drop(_4) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:256:9-256:10)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:256:9-256:10)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:257:5-257:6)
  3: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:257:5-257:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:257:6-257:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:255:75-255:76)
      kind: drop(_8) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2, bb3]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:252:5-257:6)
      kind: resume
  }
  preds [bb0, bb1, bb4, bb6]
  succs []

