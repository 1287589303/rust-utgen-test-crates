{
  "regex-lite/src/nfa.rs:688:13:688:37": [
    {
      "Try": "self.check_size_limit()?"
    }
  ],
  "regex-lite/src/nfa.rs:686:12:686:62": [
    {
      "Bool": {
        "Binary": {
          "kind": "Ne",
          "expr": "new_memory_extra != self.nfa.borrow().memory_extra",
          "lhs": "new_memory_extra",
          "rhs": "self.nfa.borrow().memory_extra",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:667:15:667:60": [
    {
      "Match": {
        "match_source": "regex-lite/src/nfa.rs:667:15:667:60",
        "match_str": "self.nfa.borrow_mut().states[from.as_usize()]",
        "match_kind": {
          "Enum": [
            "Char",
            "Ranges",
            "Splits",
            "Goto",
            "Capture",
            "Fail",
            "Match"
          ]
        },
        "arms": {
          "regex-lite/src/nfa.rs:678:13:678:47": {
            "pat": {
              "pat_str": "State::Goto { ref mut target, .. }",
              "kind": {
                "Enum": 3
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:678:51:680:14"
          },
          "regex-lite/src/nfa.rs:681:13:681:50": {
            "pat": {
              "pat_str": "State::Capture { ref mut target, .. }",
              "kind": {
                "Enum": 4
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:681:54:683:14"
          },
          "regex-lite/src/nfa.rs:684:27:684:39": {
            "pat": {
              "pat_str": "State::Match",
              "kind": {
                "Enum": 6
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:684:43:684:45"
          },
          "regex-lite/src/nfa.rs:684:13:684:24": {
            "pat": {
              "pat_str": "State::Fail",
              "kind": {
                "Enum": 5
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:684:43:684:45"
          },
          "regex-lite/src/nfa.rs:671:13:671:49": {
            "pat": {
              "pat_str": "State::Ranges { ref mut target, .. }",
              "kind": {
                "Enum": 1
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:671:53:673:14"
          },
          "regex-lite/src/nfa.rs:668:13:668:47": {
            "pat": {
              "pat_str": "State::Char { ref mut target, .. }",
              "kind": {
                "Enum": 0
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:668:51:670:14"
          },
          "regex-lite/src/nfa.rs:674:13:674:50": {
            "pat": {
              "pat_str": "State::Splits { ref mut targets, .. }",
              "kind": {
                "Enum": 2
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:674:54:677:14"
          }
        }
      }
    }
  ]
}