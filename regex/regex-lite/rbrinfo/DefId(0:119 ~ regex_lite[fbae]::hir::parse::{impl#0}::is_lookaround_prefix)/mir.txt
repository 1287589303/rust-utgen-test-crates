bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:369:9-369:27)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:369:9-369:13)
  2: _3 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:369:9-369:13)
  3: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:369:22-369:26)
  4: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:369:22-369:26)
  5: _5 = const "?="
    SourceInfo(regex-lite/src/hir/parse.rs:369:22-369:26)
  6: _4 = &(*_5)
    SourceInfo(regex-lite/src/hir/parse.rs:369:22-369:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-369:27)
      kind: _2 = hir::parse::Parser::<'_>::bump_if(move _3, move _4) -> [return: bb1, unwind: bb13]
  }
  preds []
  succs [bb1, bb13]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-369:27)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
      kind: goto -> bb9
  }
  preds [bb1]
  succs [bb9]

bb3
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:369:26-369:27)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:370:16-370:34)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:370:16-370:20)
  5: _7 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:370:16-370:20)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:370:29-370:33)
  7: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:370:29-370:33)
  8: _9 = const "?!"
    SourceInfo(regex-lite/src/hir/parse.rs:370:29-370:33)
  9: _8 = &(*_9)
    SourceInfo(regex-lite/src/hir/parse.rs:370:29-370:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:370:16-370:34)
      kind: _6 = hir::parse::Parser::<'_>::bump_if(move _7, move _8) -> [return: bb4, unwind: bb13]
  }
  preds [bb1]
  succs [bb4, bb13]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:370:16-370:34)
      kind: switchInt(move _6) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:370:33-370:34)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:371:16-371:35)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:371:16-371:20)
  5: _11 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:371:16-371:20)
  6: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:371:29-371:34)
  7: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:371:29-371:34)
  8: _13 = const "?<="
    SourceInfo(regex-lite/src/hir/parse.rs:371:29-371:34)
  9: _12 = &(*_13)
    SourceInfo(regex-lite/src/hir/parse.rs:371:29-371:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:371:16-371:35)
      kind: _10 = hir::parse::Parser::<'_>::bump_if(move _11, move _12) -> [return: bb7, unwind: bb13]
  }
  preds [bb4]
  succs [bb7, bb13]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:371:16-371:35)
      kind: switchInt(move _10) -> [0: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: _0 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
      kind: goto -> bb12
  }
  preds [bb2, bb5, bb8]
  succs [bb12]

bb10
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:371:34-371:35)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:372:16-372:20)
  4: _14 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:372:16-372:20)
  5: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:372:29-372:34)
  6: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:372:29-372:34)
  7: _16 = const "?<!"
    SourceInfo(regex-lite/src/hir/parse.rs:372:29-372:34)
  8: _15 = &(*_16)
    SourceInfo(regex-lite/src/hir/parse.rs:372:29-372:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:372:16-372:35)
      kind: _0 = hir::parse::Parser::<'_>::bump_if(move _14, move _15) -> [return: bb11, unwind: bb13]
  }
  preds [bb7]
  succs [bb11, bb13]

bb11
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  2: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:369:9-372:35)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  2: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:372:34-372:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:373:6-373:6)
      kind: return
  }
  preds [bb9, bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:368:5-373:6)
      kind: resume
  }
  preds [bb0, bb3, bb6, bb10]
  succs []

