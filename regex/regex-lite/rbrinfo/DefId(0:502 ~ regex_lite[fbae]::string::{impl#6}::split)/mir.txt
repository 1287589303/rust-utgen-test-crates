bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:551:17-551:25)
  1: _3 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:551:17-551:25)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:551:35-551:59)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:551:35-551:39)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:551:35-551:39)
  5: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:551:50-551:58)
  6: _6 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:551:50-551:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:551:35-551:59)
      kind: _4 = string::Regex::find_iter(move _5, move _6) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:551:58-551:59)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:551:58-551:59)
  2: _0 = string::Split::<'_, '_> { haystack: move _3, finder: move _4, last: const 0_usize }
    SourceInfo(regex-lite/src/string.rs:551:9-551:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:551:69-551:70)
      kind: drop(_4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:551:69-551:70)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:551:69-551:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:552:6-552:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:550:5-552:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

