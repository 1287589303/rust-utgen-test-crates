bb0
  0: StorageLive(_4)
    SourceInfo(regex-lite/src/nfa.rs:516:13-516:19)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:74)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:17)
  4: _7 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:17)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/nfa.rs:517:22-517:73)
  6: StorageLive(_9)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _9 = alloc::vec::Vec::<u32>::new() -> [return: bb1, unwind: bb50]
  }
  preds []
  succs [bb1, bb50]

bb1
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/nfa.rs:517:64-517:71)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/nfa.rs:517:65-517:71)
  2: _11 = _3
    SourceInfo(regex-lite/src/nfa.rs:517:65-517:71)
  3: _10 = Not(move _11)
    SourceInfo(regex-lite/src/nfa.rs:517:64-517:71)
  4: StorageDead(_11)
    SourceInfo(regex-lite/src/nfa.rs:517:70-517:71)
  5: _8 = nfa::State::Splits { targets: move _9, reverse: move _10 }
    SourceInfo(regex-lite/src/nfa.rs:517:22-517:73)
  6: StorageDead(_10)
    SourceInfo(regex-lite/src/nfa.rs:517:72-517:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:72-517:73)
      kind: drop(_9) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/nfa.rs:517:72-517:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:13-517:74)
      kind: _6 = nfa::Compiler::add(move _7, move _8) -> [return: bb3, unwind: bb49]
  }
  preds [bb1]
  succs [bb3, bb49]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/nfa.rs:517:73-517:74)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:517:73-517:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
      kind: _5 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _6) -> [return: bb4, unwind: bb50]
  }
  preds [bb2]
  succs [bb4, bb50]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  1: PlaceMention(_5)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  2: _12 = discriminant(_5)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
      kind: switchInt(move _12) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  1: _16 = ((_5 as Continue).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  2: _4 = _16
    SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  4: FakeRead(ForLet(None), _4)
    SourceInfo(regex-lite/src/nfa.rs:516:13-516:19)
  5: StorageDead(_5)
    SourceInfo(regex-lite/src/nfa.rs:517:75-517:76)
  6: StorageLive(_17)
    SourceInfo(regex-lite/src/nfa.rs:518:13-518:21)
  7: StorageLive(_18)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:35)
  9: StorageLive(_20)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:28)
  10: _20 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:28)
  11: StorageLive(_21)
    SourceInfo(regex-lite/src/nfa.rs:518:31-518:34)
  12: _21 = &(*_2)
    SourceInfo(regex-lite/src/nfa.rs:518:31-518:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:24-518:35)
      kind: _19 = nfa::Compiler::c(move _20, move _21) -> [return: bb10, unwind: bb50]
  }
  preds [bb4, bb6]
  succs [bb10, bb50]

bb8
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  1: _13 = move ((_5 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  2: StorageLive(_15)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  3: _15 = move _13
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:13-517:75)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _15) -> [return: bb9, unwind: bb50]
  }
  preds [bb6]
  succs [bb9, bb50]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/nfa.rs:517:74-517:75)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/nfa.rs:517:75-517:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb8]
  succs [bb47]

bb10
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/nfa.rs:518:34-518:35)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/nfa.rs:518:34-518:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
      kind: _18 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::Try>::branch(move _19) -> [return: bb11, unwind: bb50]
  }
  preds [bb7]
  succs [bb11, bb50]

bb11
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  1: PlaceMention(_18)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  2: _22 = discriminant(_18)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
      kind: switchInt(move _22) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _18)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_26)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  1: _26 = ((_18 as Continue).0: nfa::ThompsonRef)
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  2: _17 = _26
    SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
  3: StorageDead(_26)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  4: FakeRead(ForLet(None), _17)
    SourceInfo(regex-lite/src/nfa.rs:518:13-518:21)
  5: StorageDead(_18)
    SourceInfo(regex-lite/src/nfa.rs:518:36-518:37)
  6: StorageLive(_27)
    SourceInfo(regex-lite/src/nfa.rs:519:13-519:18)
  7: StorageLive(_28)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  8: StorageLive(_29)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:37)
  9: StorageLive(_30)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:25)
  10: _30 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:21-519:37)
      kind: _29 = nfa::Compiler::add_empty(move _30) -> [return: bb17, unwind: bb50]
  }
  preds [bb11, bb13]
  succs [bb17, bb50]

bb15
  0: StorageLive(_23)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  1: _23 = move ((_18 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  3: _25 = move _23
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:518:24-518:36)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _25) -> [return: bb16, unwind: bb50]
  }
  preds [bb13]
  succs [bb16, bb50]

bb16
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/nfa.rs:518:35-518:36)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/nfa.rs:518:36-518:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb15]
  succs [bb46]

bb17
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/nfa.rs:519:36-519:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
      kind: _28 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _29) -> [return: bb18, unwind: bb50]
  }
  preds [bb14]
  succs [bb18, bb50]

bb18
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  1: PlaceMention(_28)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  2: _31 = discriminant(_28)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
      kind: switchInt(move _31) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _28)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_35)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  1: _35 = ((_28 as Continue).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  2: _27 = _35
    SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
  3: StorageDead(_35)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  4: FakeRead(ForLet(None), _27)
    SourceInfo(regex-lite/src/nfa.rs:519:13-519:18)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/nfa.rs:519:38-519:39)
  6: StorageLive(_36)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  7: StorageLive(_37)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  8: StorageLive(_38)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:43)
  9: StorageLive(_39)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:13)
  10: _39 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:13)
  11: StorageLive(_40)
    SourceInfo(regex-lite/src/nfa.rs:520:20-520:26)
  12: _40 = _4
    SourceInfo(regex-lite/src/nfa.rs:520:20-520:26)
  13: StorageLive(_41)
    SourceInfo(regex-lite/src/nfa.rs:520:28-520:42)
  14: _41 = (_17.0: u32)
    SourceInfo(regex-lite/src/nfa.rs:520:28-520:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:9-520:43)
      kind: _38 = nfa::Compiler::patch(move _39, move _40, move _41) -> [return: bb24, unwind: bb50]
  }
  preds [bb18, bb20]
  succs [bb24, bb50]

bb22
  0: StorageLive(_32)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  1: _32 = move ((_28 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  3: _34 = move _32
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:519:21-519:38)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _34) -> [return: bb23, unwind: bb50]
  }
  preds [bb20]
  succs [bb23, bb50]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/nfa.rs:519:37-519:38)
  2: StorageDead(_28)
    SourceInfo(regex-lite/src/nfa.rs:519:38-519:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb22]
  succs [bb45]

bb24
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/nfa.rs:520:42-520:43)
  1: StorageDead(_40)
    SourceInfo(regex-lite/src/nfa.rs:520:42-520:43)
  2: StorageDead(_39)
    SourceInfo(regex-lite/src/nfa.rs:520:42-520:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
      kind: _37 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _38) -> [return: bb25, unwind: bb50]
  }
  preds [bb21]
  succs [bb25, bb50]

bb25
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  1: PlaceMention(_37)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  2: _42 = discriminant(_37)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
      kind: switchInt(move _42) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _37)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_46)
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  1: _46 = ((_37 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  2: _36 = _46
    SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
  3: StorageDead(_46)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  4: StorageDead(_37)
    SourceInfo(regex-lite/src/nfa.rs:520:44-520:45)
  5: StorageDead(_36)
    SourceInfo(regex-lite/src/nfa.rs:520:44-520:45)
  6: StorageLive(_47)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  7: StorageLive(_48)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  8: StorageLive(_49)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:34)
  9: StorageLive(_50)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:13)
  10: _50 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:13)
  11: StorageLive(_51)
    SourceInfo(regex-lite/src/nfa.rs:521:20-521:26)
  12: _51 = _4
    SourceInfo(regex-lite/src/nfa.rs:521:20-521:26)
  13: StorageLive(_52)
    SourceInfo(regex-lite/src/nfa.rs:521:28-521:33)
  14: _52 = _27
    SourceInfo(regex-lite/src/nfa.rs:521:28-521:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:9-521:34)
      kind: _49 = nfa::Compiler::patch(move _50, move _51, move _52) -> [return: bb31, unwind: bb50]
  }
  preds [bb25, bb27]
  succs [bb31, bb50]

bb29
  0: StorageLive(_43)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  1: _43 = move ((_37 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  2: StorageLive(_45)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  3: _45 = move _43
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:520:9-520:44)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _45) -> [return: bb30, unwind: bb50]
  }
  preds [bb27]
  succs [bb30, bb50]

bb30
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/nfa.rs:520:43-520:44)
  2: StorageDead(_37)
    SourceInfo(regex-lite/src/nfa.rs:520:44-520:45)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/nfa.rs:520:44-520:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb29]
  succs [bb45]

bb31
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/nfa.rs:521:33-521:34)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/nfa.rs:521:33-521:34)
  2: StorageDead(_50)
    SourceInfo(regex-lite/src/nfa.rs:521:33-521:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
      kind: _48 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _49) -> [return: bb32, unwind: bb50]
  }
  preds [bb28]
  succs [bb32, bb50]

bb32
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  1: PlaceMention(_48)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  2: _53 = discriminant(_48)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
      kind: switchInt(move _53) -> [0: bb35, 1: bb34, otherwise: bb33]
  }
  preds [bb31]
  succs [bb33, bb34, bb35]

bb33
  0: FakeRead(ForMatchedPlace(None), _48)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
      kind: unreachable
  }
  preds [bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
      kind: falseEdge -> [real: bb36, imaginary: bb35]
  }
  preds [bb32]
  succs [bb35, bb36]

bb35
  0: StorageLive(_57)
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  1: _57 = ((_48 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  2: _47 = _57
    SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
  3: StorageDead(_57)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  4: StorageDead(_48)
    SourceInfo(regex-lite/src/nfa.rs:521:35-521:36)
  5: StorageDead(_47)
    SourceInfo(regex-lite/src/nfa.rs:521:35-521:36)
  6: StorageLive(_58)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  7: StorageLive(_59)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  8: StorageLive(_60)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:40)
  9: StorageLive(_61)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:13)
  10: _61 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:13)
  11: StorageLive(_62)
    SourceInfo(regex-lite/src/nfa.rs:522:20-522:32)
  12: _62 = (_17.1: u32)
    SourceInfo(regex-lite/src/nfa.rs:522:20-522:32)
  13: StorageLive(_63)
    SourceInfo(regex-lite/src/nfa.rs:522:34-522:39)
  14: _63 = _27
    SourceInfo(regex-lite/src/nfa.rs:522:34-522:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:9-522:40)
      kind: _60 = nfa::Compiler::patch(move _61, move _62, move _63) -> [return: bb38, unwind: bb50]
  }
  preds [bb32, bb34]
  succs [bb38, bb50]

bb36
  0: StorageLive(_54)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  1: _54 = move ((_48 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  2: StorageLive(_56)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  3: _56 = move _54
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:521:9-521:35)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _56) -> [return: bb37, unwind: bb50]
  }
  preds [bb34]
  succs [bb37, bb50]

bb37
  0: StorageDead(_56)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  1: StorageDead(_54)
    SourceInfo(regex-lite/src/nfa.rs:521:34-521:35)
  2: StorageDead(_48)
    SourceInfo(regex-lite/src/nfa.rs:521:35-521:36)
  3: StorageDead(_47)
    SourceInfo(regex-lite/src/nfa.rs:521:35-521:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb36]
  succs [bb45]

bb38
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/nfa.rs:522:39-522:40)
  1: StorageDead(_62)
    SourceInfo(regex-lite/src/nfa.rs:522:39-522:40)
  2: StorageDead(_61)
    SourceInfo(regex-lite/src/nfa.rs:522:39-522:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
      kind: _59 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _60) -> [return: bb39, unwind: bb50]
  }
  preds [bb35]
  succs [bb39, bb50]

bb39
  0: StorageDead(_60)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  1: PlaceMention(_59)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  2: _64 = discriminant(_59)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
      kind: switchInt(move _64) -> [0: bb42, 1: bb41, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _59)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_68)
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  1: _68 = ((_59 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  2: _58 = _68
    SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
  3: StorageDead(_68)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  4: StorageDead(_59)
    SourceInfo(regex-lite/src/nfa.rs:522:41-522:42)
  5: StorageDead(_58)
    SourceInfo(regex-lite/src/nfa.rs:522:41-522:42)
  6: StorageLive(_69)
    SourceInfo(regex-lite/src/nfa.rs:523:12-523:53)
  7: StorageLive(_70)
    SourceInfo(regex-lite/src/nfa.rs:523:33-523:39)
  8: _70 = _4
    SourceInfo(regex-lite/src/nfa.rs:523:33-523:39)
  9: StorageLive(_71)
    SourceInfo(regex-lite/src/nfa.rs:523:46-523:51)
  10: _71 = _27
    SourceInfo(regex-lite/src/nfa.rs:523:46-523:51)
  11: _69 = nfa::ThompsonRef { start: move _70, end: move _71 }
    SourceInfo(regex-lite/src/nfa.rs:523:12-523:53)
  12: StorageDead(_71)
    SourceInfo(regex-lite/src/nfa.rs:523:52-523:53)
  13: StorageDead(_70)
    SourceInfo(regex-lite/src/nfa.rs:523:52-523:53)
  14: _0 = core::result::Result::<nfa::ThompsonRef, error::Error>::Ok(move _69)
    SourceInfo(regex-lite/src/nfa.rs:523:9-523:54)
  15: StorageDead(_69)
    SourceInfo(regex-lite/src/nfa.rs:523:53-523:54)
  16: StorageDead(_27)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  17: StorageDead(_17)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  18: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:524:6-524:6)
      kind: goto -> bb48
  }
  preds [bb39, bb41]
  succs [bb48]

bb43
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  1: _65 = move ((_59 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  2: StorageLive(_67)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  3: _67 = move _65
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:522:9-522:41)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _67) -> [return: bb44, unwind: bb50]
  }
  preds [bb41]
  succs [bb44, bb50]

bb44
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  1: StorageDead(_65)
    SourceInfo(regex-lite/src/nfa.rs:522:40-522:41)
  2: StorageDead(_59)
    SourceInfo(regex-lite/src/nfa.rs:522:41-522:42)
  3: StorageDead(_58)
    SourceInfo(regex-lite/src/nfa.rs:522:41-522:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb43]
  succs [bb45]

bb45
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb46
  }
  preds [bb23, bb30, bb37, bb44]
  succs [bb46]

bb46
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb16, bb45]
  succs [bb47]

bb47
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/nfa.rs:524:5-524:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:524:6-524:6)
      kind: goto -> bb48
  }
  preds [bb9, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:524:6-524:6)
      kind: return
  }
  preds [bb42, bb47]
  succs []

bb49
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:517:73-517:74)
      kind: drop(_8) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb1, bb2]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:511:5-524:6)
      kind: resume
  }
  preds [bb0, bb3, bb7, bb8, bb10, bb14, bb15, bb17, bb21, bb22, bb24, bb28, bb29, bb31, bb35, bb36, bb38, bb43, bb49]
  succs []

