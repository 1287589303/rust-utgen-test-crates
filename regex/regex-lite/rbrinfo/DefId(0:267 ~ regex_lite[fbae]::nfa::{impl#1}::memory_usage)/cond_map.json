{
  "regex-lite/src/nfa.rs:128:9:130:32": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.states.len() * size_of::<State>())\n            + (self.cap_index_to_name.len() * size_of::<Option<Arc<str>>>())\n            + self.memory_extra",
          "lhs": "(self.states.len() * size_of::<State>())\n            + (self.cap_index_to_name.len() * size_of::<Option<Arc<str>>>())",
          "rhs": "self.memory_extra",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:128:9:129:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.states.len() * size_of::<State>())\n            + (self.cap_index_to_name.len() * size_of::<Option<Arc<str>>>())",
          "lhs": "(self.states.len() * size_of::<State>())",
          "rhs": "(self.cap_index_to_name.len() * size_of::<Option<Arc<str>>>())",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:129:15:129:77": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.cap_index_to_name.len() * size_of::<Option<Arc<str>>>())",
          "lhs": "self.cap_index_to_name.len()",
          "rhs": "size_of::<Option<Arc<str>>>()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:128:9:128:49": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "(self.states.len() * size_of::<State>())",
          "lhs": "self.states.len()",
          "rhs": "size_of::<State>()",
          "cmp_with_int": false
        }
      }
    }
  ]
}