bb0
  0: StorageLive(_6)
    SourceInfo(regex-lite/src/nfa.rs:387:13-387:19)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:46)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:26)
  4: _9 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:26)
  5: StorageLive(_10)
    SourceInfo(regex-lite/src/nfa.rs:387:37-387:40)
  6: _10 = &(*_2)
    SourceInfo(regex-lite/src/nfa.rs:387:37-387:40)
  7: StorageLive(_11)
    SourceInfo(regex-lite/src/nfa.rs:387:42-387:45)
  8: _11 = _4
    SourceInfo(regex-lite/src/nfa.rs:387:42-387:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:22-387:46)
      kind: _8 = nfa::Compiler::c_exactly(move _9, move _10, move _11) -> [return: bb1, unwind: bb76]
  }
  preds []
  succs [bb1, bb76]

bb1
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/nfa.rs:387:45-387:46)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/nfa.rs:387:45-387:46)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/nfa.rs:387:45-387:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
      kind: _7 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::Try>::branch(move _8) -> [return: bb2, unwind: bb76]
  }
  preds [bb0]
  succs [bb2, bb76]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  1: PlaceMention(_7)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  2: _12 = discriminant(_7)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
      kind: switchInt(move _12) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _7)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  1: _16 = ((_7 as Continue).0: nfa::ThompsonRef)
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  2: _6 = _16
    SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(regex-lite/src/nfa.rs:387:13-387:19)
  5: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:387:47-387:48)
  6: StorageLive(_17)
    SourceInfo(regex-lite/src/nfa.rs:388:9-390:10)
  7: StorageLive(_18)
    SourceInfo(regex-lite/src/nfa.rs:388:12-388:22)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/nfa.rs:388:12-388:15)
  9: _19 = _4
    SourceInfo(regex-lite/src/nfa.rs:388:12-388:15)
  10: StorageLive(_20)
    SourceInfo(regex-lite/src/nfa.rs:388:19-388:22)
  11: _20 = _5
    SourceInfo(regex-lite/src/nfa.rs:388:19-388:22)
  12: _18 = Eq(move _19, move _20)
    SourceInfo(regex-lite/src/nfa.rs:388:12-388:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:388:12-388:22)
      kind: switchInt(move _18) -> [0: bb9, otherwise: bb8]
  }
  preds [bb2, bb4]
  succs [bb8, bb9]

bb6
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  1: _13 = move ((_7 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  2: StorageLive(_15)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  3: _15 = move _13
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:387:22-387:47)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _15) -> [return: bb7, unwind: bb76]
  }
  preds [bb4]
  succs [bb7, bb76]

bb7
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/nfa.rs:387:46-387:47)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/nfa.rs:387:47-387:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb6]
  succs [bb73]

bb8
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/nfa.rs:388:21-388:22)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/nfa.rs:388:21-388:22)
  2: StorageLive(_22)
    SourceInfo(regex-lite/src/nfa.rs:389:23-389:29)
  3: _22 = _6
    SourceInfo(regex-lite/src/nfa.rs:389:23-389:29)
  4: _0 = core::result::Result::<nfa::ThompsonRef, error::Error>::Ok(move _22)
    SourceInfo(regex-lite/src/nfa.rs:389:20-389:30)
  5: StorageDead(_22)
    SourceInfo(regex-lite/src/nfa.rs:389:29-389:30)
  6: StorageDead(_18)
    SourceInfo(regex-lite/src/nfa.rs:390:9-390:10)
  7: StorageDead(_17)
    SourceInfo(regex-lite/src/nfa.rs:390:9-390:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb5]
  succs [bb73]

bb9
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/nfa.rs:388:21-388:22)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/nfa.rs:388:21-388:22)
  2: _17 = const ()
    SourceInfo(regex-lite/src/nfa.rs:390:10-390:10)
  3: StorageDead(_18)
    SourceInfo(regex-lite/src/nfa.rs:390:9-390:10)
  4: StorageDead(_17)
    SourceInfo(regex-lite/src/nfa.rs:390:9-390:10)
  5: StorageLive(_23)
    SourceInfo(regex-lite/src/nfa.rs:421:13-421:18)
  6: StorageLive(_24)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  7: StorageLive(_25)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:37)
  8: StorageLive(_26)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:25)
  9: _26 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:21-421:37)
      kind: _25 = nfa::Compiler::add_empty(move _26) -> [return: bb10, unwind: bb76]
  }
  preds [bb5]
  succs [bb10, bb76]

bb10
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/nfa.rs:421:36-421:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
      kind: _24 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _25) -> [return: bb11, unwind: bb76]
  }
  preds [bb9]
  succs [bb11, bb76]

bb11
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  1: PlaceMention(_24)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  2: _27 = discriminant(_24)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
      kind: switchInt(move _27) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _24)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_31)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  1: _31 = ((_24 as Continue).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  2: _23 = _31
    SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
  3: StorageDead(_31)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  4: FakeRead(ForLet(None), _23)
    SourceInfo(regex-lite/src/nfa.rs:421:13-421:18)
  5: StorageDead(_24)
    SourceInfo(regex-lite/src/nfa.rs:421:38-421:39)
  6: StorageLive(_32)
    SourceInfo(regex-lite/src/nfa.rs:422:13-422:25)
  7: _32 = (_6.1: u32)
    SourceInfo(regex-lite/src/nfa.rs:422:28-422:38)
  8: FakeRead(ForLet(None), _32)
    SourceInfo(regex-lite/src/nfa.rs:422:13-422:25)
  9: StorageLive(_33)
    SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
  10: StorageLive(_34)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  11: StorageLive(_35)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  12: StorageLive(_36)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:21)
  13: _36 = _4
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:21)
  14: StorageLive(_37)
    SourceInfo(regex-lite/src/nfa.rs:423:23-423:26)
  15: _37 = _5
    SourceInfo(regex-lite/src/nfa.rs:423:23-423:26)
  16: _35 = core::ops::Range::<u32> { start: move _36, end: move _37 }
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  17: StorageDead(_37)
    SourceInfo(regex-lite/src/nfa.rs:423:25-423:26)
  18: StorageDead(_36)
    SourceInfo(regex-lite/src/nfa.rs:423:25-423:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
      kind: _34 = <core::ops::Range<u32> as core::iter::IntoIterator>::into_iter(move _35) -> [return: bb17, unwind: bb76]
  }
  preds [bb11, bb13]
  succs [bb17, bb76]

bb15
  0: StorageLive(_28)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  1: _28 = move ((_24 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  2: StorageLive(_30)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  3: _30 = move _28
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:421:21-421:38)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _30) -> [return: bb16, unwind: bb76]
  }
  preds [bb13]
  succs [bb16, bb76]

bb16
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/nfa.rs:421:37-421:38)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/nfa.rs:421:38-421:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb15]
  succs [bb72]

bb17
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/nfa.rs:423:25-423:26)
  1: PlaceMention(_34)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  2: StorageLive(_38)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  3: _38 = move _34
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
      kind: goto -> bb18
  }
  preds [bb14]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
      kind: falseUnwind -> [real: bb19, unwind: bb76]
  }
  preds [bb17, bb59]
  succs [bb19, bb76]

bb19
  0: StorageLive(_40)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  1: StorageLive(_41)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  2: StorageLive(_42)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  3: StorageLive(_43)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  4: _43 = &mut _38
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  5: _42 = &mut (*_43)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
      kind: _41 = <core::ops::Range<u32> as core::iter::Iterator>::next(move _42) -> [return: bb20, unwind: bb76]
  }
  preds [bb18]
  succs [bb20, bb76]

bb20
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/nfa.rs:423:25-423:26)
  1: PlaceMention(_41)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  2: _44 = discriminant(_41)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
      kind: switchInt(move _44) -> [0: bb22, 1: bb23, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb22, bb23]

bb21
  0: FakeRead(ForMatchedPlace(None), _41)
    SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:18-423:26)
      kind: unreachable
  }
  preds [bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
      kind: falseEdge -> [real: bb24, imaginary: bb23]
  }
  preds [bb20]
  succs [bb23, bb24]

bb23
  0: StorageLive(_46)
    SourceInfo(regex-lite/src/nfa.rs:424:17-424:23)
  1: StorageLive(_47)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  2: StorageLive(_48)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:78)
  3: StorageLive(_49)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:21)
  4: _49 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:21)
  5: StorageLive(_50)
    SourceInfo(regex-lite/src/nfa.rs:425:26-425:77)
  6: StorageLive(_51)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _51 = alloc::vec::Vec::<u32>::new() -> [return: bb25, unwind: bb76]
  }
  preds [bb20, bb22]
  succs [bb25, bb76]

bb24
  0: _33 = const ()
    SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  2: StorageDead(_41)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  5: StorageDead(_34)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  6: StorageDead(_33)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  7: StorageLive(_103)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  8: StorageLive(_104)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  9: StorageLive(_105)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:36)
  10: StorageLive(_106)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:13)
  11: _106 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:13)
  12: StorageLive(_107)
    SourceInfo(regex-lite/src/nfa.rs:432:20-432:28)
  13: _107 = _32
    SourceInfo(regex-lite/src/nfa.rs:432:20-432:28)
  14: StorageLive(_108)
    SourceInfo(regex-lite/src/nfa.rs:432:30-432:35)
  15: _108 = _23
    SourceInfo(regex-lite/src/nfa.rs:432:30-432:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:9-432:36)
      kind: _105 = nfa::Compiler::patch(move _106, move _107, move _108) -> [return: bb62, unwind: bb76]
  }
  preds [bb22]
  succs [bb62, bb76]

bb25
  0: StorageLive(_52)
    SourceInfo(regex-lite/src/nfa.rs:425:68-425:75)
  1: StorageLive(_53)
    SourceInfo(regex-lite/src/nfa.rs:425:69-425:75)
  2: _53 = _3
    SourceInfo(regex-lite/src/nfa.rs:425:69-425:75)
  3: _52 = Not(move _53)
    SourceInfo(regex-lite/src/nfa.rs:425:68-425:75)
  4: StorageDead(_53)
    SourceInfo(regex-lite/src/nfa.rs:425:74-425:75)
  5: _50 = nfa::State::Splits { targets: move _51, reverse: move _52 }
    SourceInfo(regex-lite/src/nfa.rs:425:26-425:77)
  6: StorageDead(_52)
    SourceInfo(regex-lite/src/nfa.rs:425:76-425:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:76-425:77)
      kind: drop(_51) -> [return: bb26, unwind: bb75]
  }
  preds [bb23]
  succs [bb26, bb75]

bb26
  0: StorageDead(_51)
    SourceInfo(regex-lite/src/nfa.rs:425:76-425:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:17-425:78)
      kind: _48 = nfa::Compiler::add(move _49, move _50) -> [return: bb27, unwind: bb75]
  }
  preds [bb25]
  succs [bb27, bb75]

bb27
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/nfa.rs:425:77-425:78)
  1: StorageDead(_49)
    SourceInfo(regex-lite/src/nfa.rs:425:77-425:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
      kind: _47 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _48) -> [return: bb28, unwind: bb76]
  }
  preds [bb26]
  succs [bb28, bb76]

bb28
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  1: PlaceMention(_47)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  2: _54 = discriminant(_47)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
      kind: switchInt(move _54) -> [0: bb31, 1: bb30, otherwise: bb29]
  }
  preds [bb27]
  succs [bb29, bb30, bb31]

bb29
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
      kind: unreachable
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
      kind: falseEdge -> [real: bb32, imaginary: bb31]
  }
  preds [bb28]
  succs [bb31, bb32]

bb31
  0: StorageLive(_58)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  1: _58 = ((_47 as Continue).0: u32)
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  2: _46 = _58
    SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
  3: StorageDead(_58)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  4: FakeRead(ForLet(None), _46)
    SourceInfo(regex-lite/src/nfa.rs:424:17-424:23)
  5: StorageDead(_47)
    SourceInfo(regex-lite/src/nfa.rs:425:79-425:80)
  6: StorageLive(_59)
    SourceInfo(regex-lite/src/nfa.rs:426:17-426:25)
  7: StorageLive(_60)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  8: StorageLive(_61)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:39)
  9: StorageLive(_62)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:32)
  10: _62 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:32)
  11: StorageLive(_63)
    SourceInfo(regex-lite/src/nfa.rs:426:35-426:38)
  12: _63 = &(*_2)
    SourceInfo(regex-lite/src/nfa.rs:426:35-426:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:28-426:39)
      kind: _61 = nfa::Compiler::c(move _62, move _63) -> [return: bb34, unwind: bb76]
  }
  preds [bb28, bb30]
  succs [bb34, bb76]

bb32
  0: StorageLive(_55)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  1: _55 = move ((_47 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  2: StorageLive(_57)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  3: _57 = move _55
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:17-425:79)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _57) -> [return: bb33, unwind: bb76]
  }
  preds [bb30]
  succs [bb33, bb76]

bb33
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  1: StorageDead(_55)
    SourceInfo(regex-lite/src/nfa.rs:425:78-425:79)
  2: StorageDead(_47)
    SourceInfo(regex-lite/src/nfa.rs:425:79-425:80)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb32]
  succs [bb70]

bb34
  0: StorageDead(_63)
    SourceInfo(regex-lite/src/nfa.rs:426:38-426:39)
  1: StorageDead(_62)
    SourceInfo(regex-lite/src/nfa.rs:426:38-426:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
      kind: _60 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::Try>::branch(move _61) -> [return: bb35, unwind: bb76]
  }
  preds [bb31]
  succs [bb35, bb76]

bb35
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  1: PlaceMention(_60)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  2: _64 = discriminant(_60)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
      kind: switchInt(move _64) -> [0: bb38, 1: bb37, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38]

bb36
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
      kind: falseEdge -> [real: bb39, imaginary: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageLive(_68)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  1: _68 = ((_60 as Continue).0: nfa::ThompsonRef)
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  2: _59 = _68
    SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
  3: StorageDead(_68)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  4: FakeRead(ForLet(None), _59)
    SourceInfo(regex-lite/src/nfa.rs:426:17-426:25)
  5: StorageDead(_60)
    SourceInfo(regex-lite/src/nfa.rs:426:40-426:41)
  6: StorageLive(_69)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  7: StorageLive(_70)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  8: StorageLive(_71)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:41)
  9: StorageLive(_72)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:17)
  10: _72 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:17)
  11: StorageLive(_73)
    SourceInfo(regex-lite/src/nfa.rs:427:24-427:32)
  12: _73 = _32
    SourceInfo(regex-lite/src/nfa.rs:427:24-427:32)
  13: StorageLive(_74)
    SourceInfo(regex-lite/src/nfa.rs:427:34-427:40)
  14: _74 = _46
    SourceInfo(regex-lite/src/nfa.rs:427:34-427:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:13-427:41)
      kind: _71 = nfa::Compiler::patch(move _72, move _73, move _74) -> [return: bb41, unwind: bb76]
  }
  preds [bb35, bb37]
  succs [bb41, bb76]

bb39
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  1: _65 = move ((_60 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  2: StorageLive(_67)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  3: _67 = move _65
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:426:28-426:40)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _67) -> [return: bb40, unwind: bb76]
  }
  preds [bb37]
  succs [bb40, bb76]

bb40
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  1: StorageDead(_65)
    SourceInfo(regex-lite/src/nfa.rs:426:39-426:40)
  2: StorageDead(_60)
    SourceInfo(regex-lite/src/nfa.rs:426:40-426:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb39]
  succs [bb69]

bb41
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/nfa.rs:427:40-427:41)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/nfa.rs:427:40-427:41)
  2: StorageDead(_72)
    SourceInfo(regex-lite/src/nfa.rs:427:40-427:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
      kind: _70 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _71) -> [return: bb42, unwind: bb76]
  }
  preds [bb38]
  succs [bb42, bb76]

bb42
  0: StorageDead(_71)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  1: PlaceMention(_70)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  2: _75 = discriminant(_70)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
      kind: switchInt(move _75) -> [0: bb45, 1: bb44, otherwise: bb43]
  }
  preds [bb41]
  succs [bb43, bb44, bb45]

bb43
  0: FakeRead(ForMatchedPlace(None), _70)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
      kind: unreachable
  }
  preds [bb42]
  succs []

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
      kind: falseEdge -> [real: bb46, imaginary: bb45]
  }
  preds [bb42]
  succs [bb45, bb46]

bb45
  0: StorageLive(_79)
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  1: _79 = ((_70 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  2: _69 = _79
    SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
  3: StorageDead(_79)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  4: StorageDead(_70)
    SourceInfo(regex-lite/src/nfa.rs:427:42-427:43)
  5: StorageDead(_69)
    SourceInfo(regex-lite/src/nfa.rs:427:42-427:43)
  6: StorageLive(_80)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  7: StorageLive(_81)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  8: StorageLive(_82)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:47)
  9: StorageLive(_83)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:17)
  10: _83 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:17)
  11: StorageLive(_84)
    SourceInfo(regex-lite/src/nfa.rs:428:24-428:30)
  12: _84 = _46
    SourceInfo(regex-lite/src/nfa.rs:428:24-428:30)
  13: StorageLive(_85)
    SourceInfo(regex-lite/src/nfa.rs:428:32-428:46)
  14: _85 = (_59.0: u32)
    SourceInfo(regex-lite/src/nfa.rs:428:32-428:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:13-428:47)
      kind: _82 = nfa::Compiler::patch(move _83, move _84, move _85) -> [return: bb48, unwind: bb76]
  }
  preds [bb42, bb44]
  succs [bb48, bb76]

bb46
  0: StorageLive(_76)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  1: _76 = move ((_70 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  2: StorageLive(_78)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  3: _78 = move _76
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:427:13-427:42)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _78) -> [return: bb47, unwind: bb76]
  }
  preds [bb44]
  succs [bb47, bb76]

bb47
  0: StorageDead(_78)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  1: StorageDead(_76)
    SourceInfo(regex-lite/src/nfa.rs:427:41-427:42)
  2: StorageDead(_70)
    SourceInfo(regex-lite/src/nfa.rs:427:42-427:43)
  3: StorageDead(_69)
    SourceInfo(regex-lite/src/nfa.rs:427:42-427:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb46]
  succs [bb69]

bb48
  0: StorageDead(_85)
    SourceInfo(regex-lite/src/nfa.rs:428:46-428:47)
  1: StorageDead(_84)
    SourceInfo(regex-lite/src/nfa.rs:428:46-428:47)
  2: StorageDead(_83)
    SourceInfo(regex-lite/src/nfa.rs:428:46-428:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
      kind: _81 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _82) -> [return: bb49, unwind: bb76]
  }
  preds [bb45]
  succs [bb49, bb76]

bb49
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  1: PlaceMention(_81)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  2: _86 = discriminant(_81)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
      kind: switchInt(move _86) -> [0: bb52, 1: bb51, otherwise: bb50]
  }
  preds [bb48]
  succs [bb50, bb51, bb52]

bb50
  0: FakeRead(ForMatchedPlace(None), _81)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
      kind: unreachable
  }
  preds [bb49]
  succs []

bb51
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
      kind: falseEdge -> [real: bb53, imaginary: bb52]
  }
  preds [bb49]
  succs [bb52, bb53]

bb52
  0: StorageLive(_90)
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  1: _90 = ((_81 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  2: _80 = _90
    SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
  3: StorageDead(_90)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  4: StorageDead(_81)
    SourceInfo(regex-lite/src/nfa.rs:428:48-428:49)
  5: StorageDead(_80)
    SourceInfo(regex-lite/src/nfa.rs:428:48-428:49)
  6: StorageLive(_91)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  7: StorageLive(_92)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  8: StorageLive(_93)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:38)
  9: StorageLive(_94)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:17)
  10: _94 = &(*_1)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:17)
  11: StorageLive(_95)
    SourceInfo(regex-lite/src/nfa.rs:429:24-429:30)
  12: _95 = _46
    SourceInfo(regex-lite/src/nfa.rs:429:24-429:30)
  13: StorageLive(_96)
    SourceInfo(regex-lite/src/nfa.rs:429:32-429:37)
  14: _96 = _23
    SourceInfo(regex-lite/src/nfa.rs:429:32-429:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:13-429:38)
      kind: _93 = nfa::Compiler::patch(move _94, move _95, move _96) -> [return: bb55, unwind: bb76]
  }
  preds [bb49, bb51]
  succs [bb55, bb76]

bb53
  0: StorageLive(_87)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  1: _87 = move ((_81 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  2: StorageLive(_89)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  3: _89 = move _87
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:428:13-428:48)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _89) -> [return: bb54, unwind: bb76]
  }
  preds [bb51]
  succs [bb54, bb76]

bb54
  0: StorageDead(_89)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  1: StorageDead(_87)
    SourceInfo(regex-lite/src/nfa.rs:428:47-428:48)
  2: StorageDead(_81)
    SourceInfo(regex-lite/src/nfa.rs:428:48-428:49)
  3: StorageDead(_80)
    SourceInfo(regex-lite/src/nfa.rs:428:48-428:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb53]
  succs [bb69]

bb55
  0: StorageDead(_96)
    SourceInfo(regex-lite/src/nfa.rs:429:37-429:38)
  1: StorageDead(_95)
    SourceInfo(regex-lite/src/nfa.rs:429:37-429:38)
  2: StorageDead(_94)
    SourceInfo(regex-lite/src/nfa.rs:429:37-429:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
      kind: _92 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _93) -> [return: bb56, unwind: bb76]
  }
  preds [bb52]
  succs [bb56, bb76]

bb56
  0: StorageDead(_93)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  1: PlaceMention(_92)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  2: _97 = discriminant(_92)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
      kind: switchInt(move _97) -> [0: bb59, 1: bb58, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb58, bb59]

bb57
  0: FakeRead(ForMatchedPlace(None), _92)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
      kind: unreachable
  }
  preds [bb56]
  succs []

bb58
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
      kind: falseEdge -> [real: bb60, imaginary: bb59]
  }
  preds [bb56]
  succs [bb59, bb60]

bb59
  0: StorageLive(_101)
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  1: _101 = ((_92 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  2: _91 = _101
    SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
  3: StorageDead(_101)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  4: StorageDead(_92)
    SourceInfo(regex-lite/src/nfa.rs:429:39-429:40)
  5: StorageDead(_91)
    SourceInfo(regex-lite/src/nfa.rs:429:39-429:40)
  6: StorageLive(_102)
    SourceInfo(regex-lite/src/nfa.rs:430:24-430:36)
  7: _102 = (_59.1: u32)
    SourceInfo(regex-lite/src/nfa.rs:430:24-430:36)
  8: _32 = move _102
    SourceInfo(regex-lite/src/nfa.rs:430:13-430:36)
  9: StorageDead(_102)
    SourceInfo(regex-lite/src/nfa.rs:430:35-430:36)
  10: _40 = const ()
    SourceInfo(regex-lite/src/nfa.rs:423:27-431:10)
  11: StorageDead(_59)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  12: StorageDead(_46)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  13: StorageDead(_43)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  14: StorageDead(_41)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  15: StorageDead(_40)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  16: _39 = const ()
    SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:423:9-431:10)
      kind: goto -> bb18
  }
  preds [bb56, bb58]
  succs [bb18]

bb60
  0: StorageLive(_98)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  1: _98 = move ((_92 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  2: StorageLive(_100)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  3: _100 = move _98
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:429:13-429:39)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _100) -> [return: bb61, unwind: bb76]
  }
  preds [bb58]
  succs [bb61, bb76]

bb61
  0: StorageDead(_100)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  1: StorageDead(_98)
    SourceInfo(regex-lite/src/nfa.rs:429:38-429:39)
  2: StorageDead(_92)
    SourceInfo(regex-lite/src/nfa.rs:429:39-429:40)
  3: StorageDead(_91)
    SourceInfo(regex-lite/src/nfa.rs:429:39-429:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb69
  }
  preds [bb60]
  succs [bb69]

bb62
  0: StorageDead(_108)
    SourceInfo(regex-lite/src/nfa.rs:432:35-432:36)
  1: StorageDead(_107)
    SourceInfo(regex-lite/src/nfa.rs:432:35-432:36)
  2: StorageDead(_106)
    SourceInfo(regex-lite/src/nfa.rs:432:35-432:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
      kind: _104 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _105) -> [return: bb63, unwind: bb76]
  }
  preds [bb24]
  succs [bb63, bb76]

bb63
  0: StorageDead(_105)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  1: PlaceMention(_104)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  2: _109 = discriminant(_104)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
      kind: switchInt(move _109) -> [0: bb66, 1: bb65, otherwise: bb64]
  }
  preds [bb62]
  succs [bb64, bb65, bb66]

bb64
  0: FakeRead(ForMatchedPlace(None), _104)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
      kind: unreachable
  }
  preds [bb63]
  succs []

bb65
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
      kind: falseEdge -> [real: bb67, imaginary: bb66]
  }
  preds [bb63]
  succs [bb66, bb67]

bb66
  0: StorageLive(_113)
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  1: _113 = ((_104 as Continue).0: ())
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  2: _103 = _113
    SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
  3: StorageDead(_113)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  4: StorageDead(_104)
    SourceInfo(regex-lite/src/nfa.rs:432:37-432:38)
  5: StorageDead(_103)
    SourceInfo(regex-lite/src/nfa.rs:432:37-432:38)
  6: StorageLive(_114)
    SourceInfo(regex-lite/src/nfa.rs:433:12-433:59)
  7: StorageLive(_115)
    SourceInfo(regex-lite/src/nfa.rs:433:33-433:45)
  8: _115 = (_6.0: u32)
    SourceInfo(regex-lite/src/nfa.rs:433:33-433:45)
  9: StorageLive(_116)
    SourceInfo(regex-lite/src/nfa.rs:433:52-433:57)
  10: _116 = _23
    SourceInfo(regex-lite/src/nfa.rs:433:52-433:57)
  11: _114 = nfa::ThompsonRef { start: move _115, end: move _116 }
    SourceInfo(regex-lite/src/nfa.rs:433:12-433:59)
  12: StorageDead(_116)
    SourceInfo(regex-lite/src/nfa.rs:433:58-433:59)
  13: StorageDead(_115)
    SourceInfo(regex-lite/src/nfa.rs:433:58-433:59)
  14: _0 = core::result::Result::<nfa::ThompsonRef, error::Error>::Ok(move _114)
    SourceInfo(regex-lite/src/nfa.rs:433:9-433:60)
  15: StorageDead(_114)
    SourceInfo(regex-lite/src/nfa.rs:433:59-433:60)
  16: StorageDead(_32)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  17: StorageDead(_23)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  18: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:434:6-434:6)
      kind: goto -> bb74
  }
  preds [bb63, bb65]
  succs [bb74]

bb67
  0: StorageLive(_110)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  1: _110 = move ((_104 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  2: StorageLive(_112)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  3: _112 = move _110
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:432:9-432:37)
      kind: _0 = <core::result::Result<nfa::ThompsonRef, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _112) -> [return: bb68, unwind: bb76]
  }
  preds [bb65]
  succs [bb68, bb76]

bb68
  0: StorageDead(_112)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  1: StorageDead(_110)
    SourceInfo(regex-lite/src/nfa.rs:432:36-432:37)
  2: StorageDead(_104)
    SourceInfo(regex-lite/src/nfa.rs:432:37-432:38)
  3: StorageDead(_103)
    SourceInfo(regex-lite/src/nfa.rs:432:37-432:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb67]
  succs [bb71]

bb69
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb40, bb47, bb54, bb61]
  succs [bb70]

bb70
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  2: StorageDead(_41)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  5: StorageDead(_34)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  6: StorageDead(_33)
    SourceInfo(regex-lite/src/nfa.rs:431:9-431:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb71
  }
  preds [bb33, bb69]
  succs [bb71]

bb71
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb68, bb70]
  succs [bb72]

bb72
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb16, bb71]
  succs [bb73]

bb73
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/nfa.rs:434:5-434:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:434:6-434:6)
      kind: goto -> bb74
  }
  preds [bb7, bb8, bb72]
  succs [bb74]

bb74
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:434:6-434:6)
      kind: return
  }
  preds [bb66, bb73]
  succs []

bb75
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:425:77-425:78)
      kind: drop(_50) -> [return: bb76, unwind terminate(cleanup)]
  }
  preds [bb25, bb26]
  succs [bb76]

bb76
  Terminator {
      source_info: SourceInfo(regex-lite/src/nfa.rs:380:5-434:6)
      kind: resume
  }
  preds [bb0, bb1, bb6, bb9, bb10, bb14, bb15, bb18, bb19, bb23, bb24, bb27, bb31, bb32, bb34, bb38, bb39, bb41, bb45, bb46, bb48, bb52, bb53, bb55, bb60, bb62, bb67, bb75]
  succs []

