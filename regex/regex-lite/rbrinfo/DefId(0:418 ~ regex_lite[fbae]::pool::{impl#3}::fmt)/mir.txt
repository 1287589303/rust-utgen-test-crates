bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:59)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:59)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:31)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:31)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:10)
  5: _7 = &mut (*_2)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:10)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/pool.rs:76:24-76:30)
  7: StorageLive(_9)
    SourceInfo(regex-lite/src/pool.rs:76:24-76:30)
  8: _9 = const "Pool"
    SourceInfo(regex-lite/src/pool.rs:76:24-76:30)
  9: _8 = &(*_9)
    SourceInfo(regex-lite/src/pool.rs:76:24-76:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:76:9-76:31)
      kind: _6 = core::fmt::Formatter::<'_>::debug_struct(move _7, move _8) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: _5 = &mut _6
    SourceInfo(regex-lite/src/pool.rs:76:9-76:31)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/pool.rs:76:30-76:31)
  2: StorageDead(_7)
    SourceInfo(regex-lite/src/pool.rs:76:30-76:31)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/pool.rs:76:38-76:45)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/pool.rs:76:38-76:45)
  5: _11 = const "stack"
    SourceInfo(regex-lite/src/pool.rs:76:38-76:45)
  6: _10 = &(*_11)
    SourceInfo(regex-lite/src/pool.rs:76:38-76:45)
  7: StorageLive(_12)
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  8: StorageLive(_13)
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  9: StorageLive(_14)
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  10: _14 = &((*_1).0: std::sync::Mutex<alloc::vec::Vec<alloc::boxed::Box<T>>>)
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  11: _13 = &(*_14)
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  12: _12 = move _13 as &dyn core::fmt::Debug (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/pool.rs:76:47-76:58)
  13: StorageDead(_13)
    SourceInfo(regex-lite/src/pool.rs:76:57-76:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:76:9-76:59)
      kind: _4 = core::fmt::DebugStruct::<'_, '_>::field(move _5, move _10, move _12) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: _3 = &mut (*_4)
    SourceInfo(regex-lite/src/pool.rs:76:9-76:59)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/pool.rs:76:58-76:59)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/pool.rs:76:58-76:59)
  3: StorageDead(_5)
    SourceInfo(regex-lite/src/pool.rs:76:58-76:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:76:9-76:68)
      kind: _0 = core::fmt::DebugStruct::<'_, '_>::finish(move _3) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/pool.rs:76:67-76:68)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/pool.rs:77:5-77:6)
  2: StorageDead(_11)
    SourceInfo(regex-lite/src/pool.rs:77:5-77:6)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/pool.rs:77:5-77:6)
  4: StorageDead(_6)
    SourceInfo(regex-lite/src/pool.rs:77:5-77:6)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/pool.rs:77:5-77:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:77:6-77:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:75:5-77:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

