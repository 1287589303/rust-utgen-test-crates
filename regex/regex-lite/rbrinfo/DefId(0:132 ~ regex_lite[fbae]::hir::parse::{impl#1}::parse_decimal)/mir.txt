bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:673:13-673:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:673:27-673:40)
      kind: _2 = alloc::string::String::new() -> [return: bb1, unwind: bb56]
  }
  preds []
  succs [bb1, bb56]

bb1
  0: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:673:13-673:24)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
      kind: falseUnwind -> [real: bb3, unwind: bb55]
  }
  preds [bb1, bb10]
  succs [bb3, bb55]

bb3
  0: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:674:16-674:30)
  1: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:674:16-674:20)
  2: _6 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:674:16-674:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:16-674:30)
      kind: _5 = hir::parse::Parser::<'_>::is_done(move _6) -> [return: bb4, unwind: bb55]
  }
  preds [bb2]
  succs [bb4, bb55]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:16-674:30)
      kind: switchInt(move _5) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:674:29-674:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:62-676:10)
      kind: goto -> bb12
  }
  preds [bb4]
  succs [bb12]

bb6
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/parse.rs:674:29-674:30)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:61)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:45)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:38)
  4: _9 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:45)
      kind: _8 = hir::parse::Parser::<'_>::char(move _9) -> [return: bb7, unwind: bb55]
  }
  preds [bb4]
  succs [bb7, bb55]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:674:44-674:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:61)
      kind: _7 = core::char::methods::<impl char>::is_whitespace(move _8) -> [return: bb8, unwind: bb55]
  }
  preds [bb6]
  succs [bb8, bb55]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:34-674:61)
      kind: switchInt(move _7) -> [0: bb11, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb11]

bb9
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:674:60-674:61)
  1: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:675:13-675:24)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:675:13-675:17)
  3: _11 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:675:13-675:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:675:13-675:24)
      kind: _10 = hir::parse::Parser::<'_>::bump(move _11) -> [return: bb10, unwind: bb55]
  }
  preds [bb8]
  succs [bb10, bb55]

bb10
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:675:23-675:24)
  1: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:675:24-675:25)
  2: _4 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:674:62-676:10)
  3: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  4: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
      kind: goto -> bb2
  }
  preds [bb9]
  succs [bb2]

bb11
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:674:60-674:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb12
  0: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
  1: _3 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:674:9-676:10)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  3: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  4: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  5: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:676:9-676:10)
  6: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
      kind: goto -> bb13
  }
  preds [bb5, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
      kind: falseUnwind -> [real: bb14, unwind: bb55]
  }
  preds [bb12, bb24]
  succs [bb14, bb55]

bb14
  0: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:677:16-677:30)
  1: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:677:16-677:20)
  2: _17 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:677:16-677:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:16-677:30)
      kind: _16 = hir::parse::Parser::<'_>::is_done(move _17) -> [return: bb15, unwind: bb55]
  }
  preds [bb13]
  succs [bb15, bb55]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:16-677:30)
      kind: switchInt(move _16) -> [0: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:677:29-677:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:75-680:10)
      kind: goto -> bb27
  }
  preds [bb15]
  succs [bb27]

bb17
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:677:29-677:30)
  1: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:677:34-677:52)
  2: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:677:41-677:52)
  3: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:677:41-677:45)
  4: _20 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:677:41-677:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:41-677:52)
      kind: _19 = hir::parse::Parser::<'_>::char(move _20) -> [return: bb18, unwind: bb55]
  }
  preds [bb15]
  succs [bb18, bb55]

bb18
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:677:51-677:52)
  1: _18 = Le(const '0', move _19)
    SourceInfo(regex-lite/src/hir/parse.rs:677:34-677:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:34-677:52)
      kind: switchInt(move _18) -> [0: bb26, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb26]

bb19
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:677:51-677:52)
  1: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:74)
  2: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:67)
  3: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:60)
  4: _23 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:67)
      kind: _22 = hir::parse::Parser::<'_>::char(move _23) -> [return: bb20, unwind: bb55]
  }
  preds [bb18]
  succs [bb20, bb55]

bb20
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:677:66-677:67)
  1: _21 = Le(move _22, const '9')
    SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:56-677:74)
      kind: switchInt(move _21) -> [0: bb25, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb25]

bb21
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:677:73-677:74)
  1: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:678:13-678:38)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:678:13-678:20)
  3: _25 = &mut _2
    SourceInfo(regex-lite/src/hir/parse.rs:678:13-678:20)
  4: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:678:26-678:37)
  5: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:678:26-678:30)
  6: _27 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:678:26-678:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:678:26-678:37)
      kind: _26 = hir::parse::Parser::<'_>::char(move _27) -> [return: bb22, unwind: bb55]
  }
  preds [bb20]
  succs [bb22, bb55]

bb22
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:678:36-678:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:678:13-678:38)
      kind: _24 = alloc::string::String::push(move _25, move _26) -> [return: bb23, unwind: bb55]
  }
  preds [bb21]
  succs [bb23, bb55]

bb23
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:678:37-678:38)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:678:37-678:38)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:678:38-678:39)
  3: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:679:13-679:39)
  4: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:679:13-679:17)
  5: _29 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:679:13-679:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:679:13-679:39)
      kind: _28 = hir::parse::Parser::<'_>::bump_and_bump_space(move _29) -> [return: bb24, unwind: bb55]
  }
  preds [bb22]
  succs [bb24, bb55]

bb24
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:679:38-679:39)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:679:39-679:40)
  2: _4 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:677:75-680:10)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  4: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  5: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
      kind: goto -> bb13
  }
  preds [bb23]
  succs [bb13]

bb25
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:677:73-677:74)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb20]
  succs [bb27]

bb26
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:677:51-677:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb18]
  succs [bb27]

bb27
  0: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
  1: _15 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:677:9-680:10)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  4: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  5: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  6: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:680:9-680:10)
  7: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
      kind: goto -> bb28
  }
  preds [bb16, bb25, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
      kind: falseUnwind -> [real: bb29, unwind: bb55]
  }
  preds [bb27, bb36]
  succs [bb29, bb55]

bb29
  0: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:681:16-681:30)
  1: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:681:16-681:20)
  2: _35 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:681:16-681:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:16-681:30)
      kind: _34 = hir::parse::Parser::<'_>::is_done(move _35) -> [return: bb30, unwind: bb55]
  }
  preds [bb28]
  succs [bb30, bb55]

bb30
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:16-681:30)
      kind: switchInt(move _34) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:681:29-681:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:62-683:10)
      kind: goto -> bb38
  }
  preds [bb30]
  succs [bb38]

bb32
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:681:29-681:30)
  1: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:61)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:45)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:38)
  4: _38 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:45)
      kind: _37 = hir::parse::Parser::<'_>::char(move _38) -> [return: bb33, unwind: bb55]
  }
  preds [bb30]
  succs [bb33, bb55]

bb33
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:681:44-681:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:61)
      kind: _36 = core::char::methods::<impl char>::is_whitespace(move _37) -> [return: bb34, unwind: bb55]
  }
  preds [bb32]
  succs [bb34, bb55]

bb34
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:34-681:61)
      kind: switchInt(move _36) -> [0: bb37, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb37]

bb35
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:681:60-681:61)
  1: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:682:13-682:39)
  2: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:682:13-682:17)
  3: _40 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:682:13-682:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:682:13-682:39)
      kind: _39 = hir::parse::Parser::<'_>::bump_and_bump_space(move _40) -> [return: bb36, unwind: bb55]
  }
  preds [bb34]
  succs [bb36, bb55]

bb36
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:682:38-682:39)
  1: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:682:39-682:40)
  2: _4 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:681:62-683:10)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  4: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
      kind: goto -> bb28
  }
  preds [bb35]
  succs [bb28]

bb37
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:681:60-681:61)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb38
  }
  preds [bb34]
  succs [bb38]

bb38
  0: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
  1: _33 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:681:9-683:10)
  2: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  3: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  4: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  5: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:683:9-683:10)
  6: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:684:13-684:19)
  7: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:684:22-684:29)
  8: _45 = &_2
    SourceInfo(regex-lite/src/hir/parse.rs:684:22-684:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:684:22-684:38)
      kind: _44 = alloc::string::String::as_str(move _45) -> [return: bb39, unwind: bb55]
  }
  preds [bb31, bb37]
  succs [bb39, bb55]

bb39
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:684:37-684:38)
  1: FakeRead(ForLet(None), _44)
    SourceInfo(regex-lite/src/hir/parse.rs:684:13-684:19)
  2: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:685:9-687:10)
  3: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:685:12-685:29)
  4: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:685:12-685:18)
  5: _48 = &(*_44)
    SourceInfo(regex-lite/src/hir/parse.rs:685:12-685:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:685:12-685:29)
      kind: _47 = core::str::<impl str>::is_empty(move _48) -> [return: bb40, unwind: bb55]
  }
  preds [bb38]
  succs [bb40, bb55]

bb40
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:685:12-685:29)
      kind: switchInt(move _47) -> [0: bb43, otherwise: bb41]
  }
  preds [bb39]
  succs [bb41, bb43]

bb41
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:685:28-685:29)
  1: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:686:24-686:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:686:24-686:57)
      kind: _50 = error::Error::new(const hir::parse::ERR_DECIMAL_NO_DIGITS) -> [return: bb42, unwind: bb55]
  }
  preds [bb40]
  succs [bb42, bb55]

bb42
  0: _0 = core::result::Result::<u32, error::Error>::Err(move _50)
    SourceInfo(regex-lite/src/hir/parse.rs:686:20-686:58)
  1: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:686:57-686:58)
  2: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:687:9-687:10)
  3: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:687:9-687:10)
  4: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
      kind: drop(_2) -> [return: bb53, unwind: bb56]
  }
  preds [bb41]
  succs [bb53, bb56]

bb43
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:685:28-685:29)
  1: _46 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:687:10-687:10)
  2: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:687:9-687:10)
  3: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:687:9-687:10)
  4: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
  5: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:46)
  6: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:688:35-688:41)
  7: _53 = &(*_44)
    SourceInfo(regex-lite/src/hir/parse.rs:688:35-688:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:46)
      kind: _52 = core::num::<impl u32>::from_str_radix(move _53, const 10_u32) -> [return: bb44, unwind: bb55]
  }
  preds [bb40]
  succs [bb44, bb55]

bb44
  0: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:688:45-688:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
      kind: _51 = core::result::Result::<u32, core::num::ParseIntError>::ok(move _52) -> [return: bb45, unwind: bb55]
  }
  preds [bb43]
  succs [bb45, bb55]

bb45
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:688:50-688:51)
  1: PlaceMention(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
  2: _54 = discriminant(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:688:9-688:51)
      kind: switchInt(move _54) -> [0: bb48, 1: bb47, otherwise: bb46]
  }
  preds [bb44]
  succs [bb46, bb47, bb48]

bb46
  0: FakeRead(ForMatchedPlace(None), _51)
    SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:688:15-688:51)
      kind: unreachable
  }
  preds [bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:689:13-689:20)
      kind: falseEdge -> [real: bb49, imaginary: bb48]
  }
  preds [bb45]
  succs [bb48, bb49]

bb48
  0: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:690:25-690:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:690:25-690:56)
      kind: _57 = error::Error::new(const hir::parse::ERR_DECIMAL_INVALID) -> [return: bb50, unwind: bb55]
  }
  preds [bb45, bb47]
  succs [bb50, bb55]

bb49
  0: StorageLive(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:689:18-689:19)
  1: _55 = ((_51 as Some).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:689:18-689:19)
  2: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:689:27-689:28)
  3: _56 = _55
    SourceInfo(regex-lite/src/hir/parse.rs:689:27-689:28)
  4: _0 = core::result::Result::<u32, error::Error>::Ok(move _56)
    SourceInfo(regex-lite/src/hir/parse.rs:689:24-689:29)
  5: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:689:28-689:29)
  6: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:689:28-689:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:689:28-689:29)
      kind: goto -> bb51
  }
  preds [bb47]
  succs [bb51]

bb50
  0: _0 = core::result::Result::<u32, error::Error>::Err(move _57)
    SourceInfo(regex-lite/src/hir/parse.rs:690:21-690:57)
  1: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:690:56-690:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:690:56-690:57)
      kind: goto -> bb51
  }
  preds [bb48]
  succs [bb51]

bb51
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
      kind: drop(_2) -> [return: bb52, unwind: bb56]
  }
  preds [bb49, bb50]
  succs [bb52, bb56]

bb52
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:6-692:6)
      kind: goto -> bb54
  }
  preds [bb51]
  succs [bb54]

bb53
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:6-692:6)
      kind: goto -> bb54
  }
  preds [bb42]
  succs [bb54]

bb54
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:6-692:6)
      kind: return
  }
  preds [bb52, bb53]
  succs []

bb55
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:692:5-692:6)
      kind: drop(_2) -> [return: bb56, unwind terminate(cleanup)]
  }
  preds [bb2, bb3, bb6, bb7, bb9, bb13, bb14, bb17, bb19, bb21, bb22, bb23, bb28, bb29, bb32, bb33, bb35, bb38, bb39, bb41, bb43, bb44, bb48]
  succs [bb56]

bb56
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:672:5-692:6)
      kind: resume
  }
  preds [bb0, bb42, bb51, bb55]
  succs []

