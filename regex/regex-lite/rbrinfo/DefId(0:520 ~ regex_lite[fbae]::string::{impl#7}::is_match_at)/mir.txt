bb0
  0: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:1062:13-1062:22)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:1062:25-1062:34)
  2: _5 = &((*_1).1: pool::Pool<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-lite/src/string.rs:1062:25-1062:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1062:25-1062:40)
      kind: _4 = pool::Pool::<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::get(move _5) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:1062:39-1062:40)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(regex-lite/src/string.rs:1062:13-1062:22)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:1063:9-1063:20)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:1063:9-1070:10)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:1063:9-1063:20)
  5: _8 = &((*_1).0: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:1063:9-1063:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1063:9-1070:10)
      kind: _7 = <alloc::sync::Arc<pikevm::PikeVM> as core::ops::Deref>::deref(move _8) -> [return: bb2, unwind: bb8]
  }
  preds [bb0]
  succs [bb2, bb8]

bb2
  0: _6 = &(*_7)
    SourceInfo(regex-lite/src/string.rs:1063:9-1063:20)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:1063:19-1063:20)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  3: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  4: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  5: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  6: _12 = &mut _4
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  7: _11 = &mut (*_12)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
      kind: _10 = <pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _11) -> [return: bb3, unwind: bb8]
  }
  preds [bb1]
  succs [bb3, bb8]

bb3
  0: _9 = &mut (*_10)
    SourceInfo(regex-lite/src/string.rs:1064:13-1064:23)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:1064:22-1064:23)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:1065:13-1065:32)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:1065:13-1065:32)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/string.rs:1065:13-1065:21)
  5: _15 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1065:13-1065:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1065:13-1065:32)
      kind: _14 = core::str::<impl str>::as_bytes(move _15) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: _13 = &(*_14)
    SourceInfo(regex-lite/src/string.rs:1065:13-1065:32)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:1065:31-1065:32)
  2: StorageLive(_16)
    SourceInfo(regex-lite/src/string.rs:1066:13-1066:18)
  3: _16 = _3
    SourceInfo(regex-lite/src/string.rs:1066:13-1066:18)
  4: StorageLive(_17)
    SourceInfo(regex-lite/src/string.rs:1067:13-1067:27)
  5: StorageLive(_18)
    SourceInfo(regex-lite/src/string.rs:1067:13-1067:21)
  6: _18 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:1067:13-1067:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1067:13-1067:27)
      kind: _17 = core::str::<impl str>::len(move _18) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/string.rs:1067:26-1067:27)
  1: StorageLive(_19)
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  3: StorageLive(_21)
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  4: StorageLive(_22)
    SourceInfo(regex-lite/src/string.rs:1069:18-1069:20)
  5: _22 = []
    SourceInfo(regex-lite/src/string.rs:1069:18-1069:20)
  6: _21 = &mut _22
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  7: _20 = &mut (*_21)
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  8: _19 = move _20 as &mut [core::option::Option<int::NonMaxUsize>] (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/string.rs:1069:13-1069:20)
  9: StorageDead(_20)
    SourceInfo(regex-lite/src/string.rs:1069:19-1069:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1063:9-1070:10)
      kind: _0 = pikevm::PikeVM::search(move _6, move _9, move _13, move _16, move _17, const true, move _19) -> [return: bb6, unwind: bb8]
  }
  preds [bb4]
  succs [bb6, bb8]

bb6
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  3: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  4: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  5: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:1070:9-1070:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
      kind: drop(_4) -> [return: bb7, unwind: bb9]
  }
  preds [bb5]
  succs [bb7, bb9]

bb7
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  1: StorageDead(_22)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  2: StorageDead(_21)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  3: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  4: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  5: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  6: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1071:6-1071:6)
      kind: return
  }
  preds [bb6]
  succs []

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1071:5-1071:6)
      kind: drop(_4) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb1, bb2, bb3, bb4, bb5]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:1061:5-1071:6)
      kind: resume
  }
  preds [bb0, bb6, bb8]
  succs []

