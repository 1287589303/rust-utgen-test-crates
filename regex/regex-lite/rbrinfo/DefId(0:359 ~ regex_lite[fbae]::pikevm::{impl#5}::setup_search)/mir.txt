bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:641:9-641:25)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:641:9-641:17)
  2: _4 = &mut ((*_1).0: pikevm::SparseSet)
    SourceInfo(regex-lite/src/pikevm.rs:641:9-641:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:641:9-641:25)
      kind: _3 = pikevm::SparseSet::clear(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:641:24-641:25)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:641:25-641:26)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:642:9-642:56)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:642:9-642:24)
  4: _6 = &mut ((*_1).1: pikevm::SlotTable)
    SourceInfo(regex-lite/src/pikevm.rs:642:9-642:24)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:642:38-642:55)
  6: _7 = _2
    SourceInfo(regex-lite/src/pikevm.rs:642:38-642:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:642:9-642:56)
      kind: _5 = pikevm::SlotTable::setup_search(move _6, move _7) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:642:55-642:56)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:642:55-642:56)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:642:56-642:57)
  3: _0 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:640:58-643:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:643:6-643:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:640:5-643:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

