bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:398:13-398:18)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:43)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:25)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:43)
      kind: _4 = hir::parse::Parser::<'_>::increment_depth(move _5) -> [return: bb1, unwind: bb155]
  }
  preds []
  succs [bb1, bb155]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:398:42-398:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
      kind: _3 = <core::result::Result<u32, error::Error> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb155]
  }
  preds [bb0]
  succs [bb2, bb155]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  1: PlaceMention(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  2: _6 = discriminant(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  1: _10 = ((_3 as Continue).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  2: _2 = _10
    SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  4: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:398:13-398:18)
  5: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:44-398:45)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:399:13-399:27)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _11 = alloc::vec::Vec::<hir::Hir>::new() -> [return: bb8, unwind: bb155]
  }
  preds [bb2, bb4]
  succs [bb8, bb155]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  1: _7 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  3: _9 = move _7
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:398:21-398:44)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _9) -> [return: bb7, unwind: bb155]
  }
  preds [bb4]
  succs [bb7, bb155]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:398:43-398:44)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:398:44-398:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb6]
  succs [bb127]

bb8
  0: FakeRead(ForLet(None), _11)
    SourceInfo(regex-lite/src/hir/parse.rs:399:13-399:27)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:400:13-400:23)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _12 = alloc::vec::Vec::<hir::Hir>::new() -> [return: bb9, unwind: bb154]
  }
  preds [bb5]
  succs [bb9, bb154]

bb9
  0: FakeRead(ForLet(None), _12)
    SourceInfo(regex-lite/src/hir/parse.rs:400:13-400:23)
  1: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:401:9-444:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:401:9-444:10)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:401:9-444:10)
      kind: falseUnwind -> [real: bb11, unwind: bb153]
  }
  preds [bb9, bb109]
  succs [bb11, bb153]

bb11
  0: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:402:13-402:30)
  1: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:402:13-402:17)
  2: _16 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:402:13-402:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:402:13-402:30)
      kind: _15 = hir::parse::Parser::<'_>::bump_space(move _16) -> [return: bb12, unwind: bb153]
  }
  preds [bb10]
  succs [bb12, bb153]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:402:29-402:30)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:402:30-402:31)
  2: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:403:13-405:14)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:403:16-403:30)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:403:16-403:20)
  5: _19 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:403:16-403:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:403:16-403:30)
      kind: _18 = hir::parse::Parser::<'_>::is_done(move _19) -> [return: bb13, unwind: bb153]
  }
  preds [bb11]
  succs [bb13, bb153]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:403:16-403:30)
      kind: switchInt(move _18) -> [0: bb15, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb15]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:403:29-403:30)
  1: _13 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:404:17-404:22)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:405:13-405:14)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:405:13-405:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb110
  }
  preds [bb13]
  succs [bb110]

bb15
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:403:29-403:30)
  1: _17 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:405:14-405:14)
  2: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:405:13-405:14)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:405:13-405:14)
  4: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:406:19-406:30)
  5: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:406:19-406:23)
  6: _22 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:406:19-406:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:406:19-406:30)
      kind: _21 = hir::parse::Parser::<'_>::char(move _22) -> [return: bb16, unwind: bb153]
  }
  preds [bb13]
  succs [bb16, bb153]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:406:29-406:30)
  1: PlaceMention(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:406:19-406:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:406:13-406:30)
      kind: switchInt(_21) -> [40: bb18, 41: bb19, 124: bb20, 91: bb21, 63: bb23, 42: bb23, 43: bb23, 123: bb22, otherwise: bb17]
  }
  preds [bb15]
  succs [bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb23, bb23]

bb17
  0: StorageLive(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:442:22-442:28)
  1: _103 = &mut _12
    SourceInfo(regex-lite/src/hir/parse.rs:442:22-442:28)
  2: StorageLive(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  3: StorageLive(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  4: StorageLive(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:56)
  5: StorageLive(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:38)
  6: _107 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:56)
      kind: _106 = hir::parse::Parser::<'_>::parse_primitive(move _107) -> [return: bb99, unwind: bb153]
  }
  preds [bb16, bb22]
  succs [bb99, bb153]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:407:17-407:20)
      kind: falseEdge -> [real: bb24, imaginary: bb19]
  }
  preds [bb16]
  succs [bb19, bb24]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:425:17-425:20)
      kind: falseEdge -> [real: bb53, imaginary: bb20]
  }
  preds [bb16, bb18]
  succs [bb20, bb53]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:431:17-431:20)
      kind: falseEdge -> [real: bb57, imaginary: bb21]
  }
  preds [bb16, bb19]
  succs [bb21, bb57]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:17-435:20)
      kind: falseEdge -> [real: bb62, imaginary: bb23]
  }
  preds [bb16, bb20]
  succs [bb23, bb62]

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:439:17-439:20)
      kind: falseEdge -> [real: bb86, imaginary: bb17]
  }
  preds [bb16, bb23]
  succs [bb17, bb86]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:436:17-436:32)
      kind: falseEdge -> [real: bb73, imaginary: bb22]
  }
  preds [bb16, bb16, bb16, bb21]
  succs [bb22, bb73]

bb24
  0: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:410:25-410:33)
  1: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:410:36-410:56)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:56)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:56)
  4: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:47)
  5: _27 = &((*_1).6: core::cell::RefCell<hir::Flags>)
    SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:56)
      kind: _26 = core::cell::RefCell::<hir::Flags>::borrow(move _27) -> [return: bb25, unwind: bb153]
  }
  preds [bb18]
  succs [bb25, bb153]

bb25
  0: _25 = &_26
    SourceInfo(regex-lite/src/hir/parse.rs:410:37-410:56)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:410:55-410:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:410:36-410:56)
      kind: _24 = <core::cell::Ref<'_, hir::Flags> as core::ops::Deref>::deref(move _25) -> [return: bb26, unwind: bb152]
  }
  preds [bb24]
  succs [bb26, bb152]

bb26
  0: _23 = (*_24)
    SourceInfo(regex-lite/src/hir/parse.rs:410:36-410:56)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:410:55-410:56)
  2: FakeRead(ForLet(None), _23)
    SourceInfo(regex-lite/src/hir/parse.rs:410:25-410:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:410:56-410:57)
      kind: drop(_26) -> [return: bb27, unwind: bb153]
  }
  preds [bb25]
  succs [bb27, bb153]

bb27
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:410:56-410:57)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:410:56-410:57)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:411:21-419:22)
  3: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  4: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  5: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:58)
  6: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:44)
  7: _32 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:58)
      kind: _31 = hir::parse::Parser::<'_>::parse_group(move _32) -> [return: bb28, unwind: bb153]
  }
  preds [bb26]
  succs [bb28, bb153]

bb28
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:411:57-411:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
      kind: _30 = <core::result::Result<core::option::Option<hir::Hir>, error::Error> as core::ops::Try>::branch(move _31) -> [return: bb29, unwind: bb151]
  }
  preds [bb27]
  succs [bb29, bb151]

bb29
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  1: PlaceMention(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  2: _33 = discriminant(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
      kind: switchInt(move _33) -> [0: bb32, 1: bb31, otherwise: bb30]
  }
  preds [bb28]
  succs [bb30, bb31, bb32]

bb30
  0: FakeRead(ForMatchedPlace(None), _30)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
      kind: unreachable
  }
  preds [bb29]
  succs []

bb31
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
      kind: falseEdge -> [real: bb33, imaginary: bb32]
  }
  preds [bb29]
  succs [bb32, bb33]

bb32
  0: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  1: _37 = move ((_30 as Continue).0: core::option::Option<hir::Hir>)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  2: _29 = move _37
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
      kind: drop(_37) -> [return: bb35, unwind: bb150]
  }
  preds [bb29, bb31]
  succs [bb35, bb150]

bb33
  0: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  1: _34 = move ((_30 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  2: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  3: _36 = move _34
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _36) -> [return: bb34, unwind: bb150]
  }
  preds [bb31]
  succs [bb34, bb150]

bb34
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  1: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_30) -> [return: bb122, unwind: bb153]
  }
  preds [bb33]
  succs [bb122, bb153]

bb35
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
  1: PlaceMention(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  2: _38 = discriminant(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:411:40-411:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:28-411:37)
      kind: switchInt(move _38) -> [1: bb37, otherwise: bb36]
  }
  preds [bb32]
  succs [bb36, bb37]

bb36
  0: _28 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:419:22-419:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:21-419:22)
      kind: goto -> bb44
  }
  preds [bb35, bb37]
  succs [bb44]

bb37
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:28-411:37)
      kind: falseEdge -> [real: bb38, imaginary: bb36]
  }
  preds [bb35]
  succs [bb36, bb38]

bb38
  0: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:411:33-411:36)
  1: _39 = move ((_29 as Some).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:411:33-411:36)
  2: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:412:25-412:41)
  3: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:412:25-412:31)
  4: _41 = &mut _12
    SourceInfo(regex-lite/src/hir/parse.rs:412:25-412:31)
  5: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:412:37-412:40)
  6: _42 = move _39
    SourceInfo(regex-lite/src/hir/parse.rs:412:37-412:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:412:25-412:41)
      kind: _40 = alloc::vec::Vec::<hir::Hir>::push(move _41, move _42) -> [return: bb39, unwind: bb147]
  }
  preds [bb37]
  succs [bb39, bb147]

bb39
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/parse.rs:412:40-412:41)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:412:40-412:41)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:412:41-412:42)
  3: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:418:52-418:60)
  4: _43 = _23
    SourceInfo(regex-lite/src/hir/parse.rs:418:52-418:60)
  5: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:418:25-418:49)
  6: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:49)
  7: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:49)
  8: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:36)
  9: _47 = &((*_1).6: core::cell::RefCell<hir::Flags>)
    SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:49)
      kind: _46 = core::cell::RefCell::<hir::Flags>::borrow_mut(move _47) -> [return: bb40, unwind: bb148]
  }
  preds [bb38]
  succs [bb40, bb148]

bb40
  0: _45 = &mut _46
    SourceInfo(regex-lite/src/hir/parse.rs:418:26-418:49)
  1: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:418:48-418:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:418:25-418:49)
      kind: _44 = <core::cell::RefMut<'_, hir::Flags> as core::ops::DerefMut>::deref_mut(move _45) -> [return: bb41, unwind: bb146]
  }
  preds [bb39]
  succs [bb41, bb146]

bb41
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:418:48-418:49)
  1: (*_44) = move _43
    SourceInfo(regex-lite/src/hir/parse.rs:418:25-418:60)
  2: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:418:59-418:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:418:60-418:61)
      kind: drop(_46) -> [return: bb42, unwind: bb148]
  }
  preds [bb40]
  succs [bb42, bb148]

bb42
  0: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:418:60-418:61)
  1: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:418:60-418:61)
  2: _28 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:411:60-419:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_39) -> [return: bb43, unwind: bb149]
  }
  preds [bb41]
  succs [bb43, bb149]

bb43
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:21-419:22)
      kind: goto -> bb44
  }
  preds [bb42]
  succs [bb44]

bb44
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_29) -> [return: bb45, unwind: bb150]
  }
  preds [bb36, bb43]
  succs [bb45, bb150]

bb45
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_30) -> [return: bb46, unwind: bb153]
  }
  preds [bb44]
  succs [bb46, bb153]

bb46
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  2: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  3: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:420:21-422:22)
  4: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:52)
  5: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:39)
  6: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:39)
  7: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:33)
  8: _52 = &((*_1).4: core::cell::Cell<core::option::Option<char>>)
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:39)
      kind: _51 = core::cell::Cell::<core::option::Option<char>>::get(move _52) -> [return: bb47, unwind: bb153]
  }
  preds [bb45]
  succs [bb47, bb153]

bb47
  0: _50 = &_51
    SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:39)
  1: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:420:38-420:39)
  2: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:420:43-420:52)
  3: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:420:43-420:52)
  4: _54 = core::option::Option::<char>::Some(const ')')
    SourceInfo(regex-lite/src/hir/parse.rs:420:43-420:52)
  5: _53 = &_54
    SourceInfo(regex-lite/src/hir/parse.rs:420:43-420:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:52)
      kind: _49 = <core::option::Option<char> as core::cmp::PartialEq>::ne(move _50, move _53) -> [return: bb48, unwind: bb153]
  }
  preds [bb46]
  succs [bb48, bb153]

bb48
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:420:24-420:52)
      kind: switchInt(move _49) -> [0: bb51, otherwise: bb49]
  }
  preds [bb47]
  succs [bb49, bb51]

bb49
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  1: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  2: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  3: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  4: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:421:36-421:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:421:36-421:66)
      kind: _56 = error::Error::new(const hir::parse::ERR_UNCLOSED_GROUP) -> [return: bb50, unwind: bb153]
  }
  preds [bb48]
  succs [bb50, bb153]

bb50
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _56)
    SourceInfo(regex-lite/src/hir/parse.rs:421:32-421:67)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:421:66-421:67)
  2: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:422:21-422:22)
  3: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:422:21-422:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb123
  }
  preds [bb49]
  succs [bb123]

bb51
  0: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  1: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  2: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  3: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:420:51-420:52)
  4: _48 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:422:22-422:22)
  5: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/parse.rs:422:21-422:22)
  6: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:422:21-422:22)
  7: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:423:21-423:32)
  8: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:423:21-423:25)
  9: _58 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:423:21-423:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:423:21-423:32)
      kind: _57 = hir::parse::Parser::<'_>::bump(move _58) -> [return: bb52, unwind: bb153]
  }
  preds [bb48]
  succs [bb52, bb153]

bb52
  0: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:423:31-423:32)
  1: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:423:32-423:33)
  2: _14 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:407:24-424:18)
  3: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:424:17-424:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:424:17-424:18)
      kind: goto -> bb109
  }
  preds [bb51]
  succs [bb109]

bb53
  0: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:426:21-428:22)
  1: StorageLive(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:426:24-426:34)
  2: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:426:24-426:29)
  3: _62 = _2
    SourceInfo(regex-lite/src/hir/parse.rs:426:24-426:29)
  4: _61 = Eq(move _62, const 0_u32)
    SourceInfo(regex-lite/src/hir/parse.rs:426:24-426:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:426:24-426:34)
      kind: switchInt(move _61) -> [0: bb56, otherwise: bb54]
  }
  preds [bb19]
  succs [bb54, bb56]

bb54
  0: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:426:33-426:34)
  1: StorageLive(_64)
    SourceInfo(regex-lite/src/hir/parse.rs:427:36-427:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:427:36-427:66)
      kind: _64 = error::Error::new(const hir::parse::ERR_UNOPENED_GROUP) -> [return: bb55, unwind: bb153]
  }
  preds [bb53]
  succs [bb55, bb153]

bb55
  0: _0 = core::result::Result::<hir::Hir, error::Error>::Err(move _64)
    SourceInfo(regex-lite/src/hir/parse.rs:427:32-427:67)
  1: StorageDead(_64)
    SourceInfo(regex-lite/src/hir/parse.rs:427:66-427:67)
  2: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:428:21-428:22)
  3: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:428:21-428:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb54]
  succs [bb124]

bb56
  0: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/parse.rs:426:33-426:34)
  1: _60 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:428:22-428:22)
  2: StorageDead(_61)
    SourceInfo(regex-lite/src/hir/parse.rs:428:21-428:22)
  3: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:428:21-428:22)
  4: _13 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:429:21-429:26)
  5: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:444:9-444:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb110
  }
  preds [bb53]
  succs [bb110]

bb57
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:432:21-432:79)
  1: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:432:21-432:31)
  2: _66 = &mut _11
    SourceInfo(regex-lite/src/hir/parse.rs:432:21-432:31)
  3: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:432:37-432:78)
  4: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:432:49-432:77)
  5: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:432:65-432:76)
  6: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:432:65-432:76)
  7: _70 = &mut _12
    SourceInfo(regex-lite/src/hir/parse.rs:432:65-432:76)
  8: _69 = &mut (*_70)
    SourceInfo(regex-lite/src/hir/parse.rs:432:65-432:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:432:49-432:77)
      kind: _68 = core::mem::take::<alloc::vec::Vec<hir::Hir>>(move _69) -> [return: bb58, unwind: bb153]
  }
  preds [bb20]
  succs [bb58, bb153]

bb58
  0: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/parse.rs:432:76-432:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:432:37-432:78)
      kind: _67 = hir::Hir::concat(move _68) -> [return: bb59, unwind: bb145]
  }
  preds [bb57]
  succs [bb59, bb145]

bb59
  0: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/parse.rs:432:77-432:78)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:432:21-432:79)
      kind: _65 = alloc::vec::Vec::<hir::Hir>::push(move _66, move _67) -> [return: bb60, unwind: bb144]
  }
  preds [bb58]
  succs [bb60, bb144]

bb60
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/parse.rs:432:78-432:79)
  1: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/parse.rs:432:78-432:79)
  2: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/parse.rs:432:79-432:80)
  3: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/parse.rs:432:79-432:80)
  4: StorageLive(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:433:21-433:32)
  5: StorageLive(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:433:21-433:25)
  6: _72 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:433:21-433:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:433:21-433:32)
      kind: _71 = hir::parse::Parser::<'_>::bump(move _72) -> [return: bb61, unwind: bb153]
  }
  preds [bb59]
  succs [bb61, bb153]

bb61
  0: StorageDead(_72)
    SourceInfo(regex-lite/src/hir/parse.rs:433:31-433:32)
  1: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/parse.rs:433:32-433:33)
  2: _14 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:431:24-434:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:431:24-434:18)
      kind: goto -> bb109
  }
  preds [bb60]
  succs [bb109]

bb62
  0: StorageLive(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:435:24-435:30)
  1: _73 = &mut _12
    SourceInfo(regex-lite/src/hir/parse.rs:435:24-435:30)
  2: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  3: StorageLive(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  4: StorageLive(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:54)
  5: StorageLive(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:40)
  6: _77 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:54)
      kind: _76 = hir::parse::Parser::<'_>::parse_class(move _77) -> [return: bb63, unwind: bb153]
  }
  preds [bb21]
  succs [bb63, bb153]

bb63
  0: StorageDead(_77)
    SourceInfo(regex-lite/src/hir/parse.rs:435:53-435:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
      kind: _75 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _76) -> [return: bb64, unwind: bb143]
  }
  preds [bb62]
  succs [bb64, bb143]

bb64
  0: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  1: PlaceMention(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  2: _78 = discriminant(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
      kind: switchInt(move _78) -> [0: bb67, 1: bb66, otherwise: bb65]
  }
  preds [bb63]
  succs [bb65, bb66, bb67]

bb65
  0: FakeRead(ForMatchedPlace(None), _75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
      kind: unreachable
  }
  preds [bb64]
  succs []

bb66
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
      kind: falseEdge -> [real: bb68, imaginary: bb67]
  }
  preds [bb64]
  succs [bb67, bb68]

bb67
  0: StorageLive(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  1: _82 = move ((_75 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  2: _74 = move _82
    SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
      kind: drop(_82) -> [return: bb70, unwind: bb142]
  }
  preds [bb64, bb66]
  succs [bb70, bb142]

bb68
  0: StorageLive(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  1: _79 = move ((_75 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  2: StorageLive(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  3: _81 = move _79
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:36-435:55)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _81) -> [return: bb69, unwind: bb142]
  }
  preds [bb66]
  succs [bb69, bb142]

bb69
  0: StorageDead(_81)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  1: StorageDead(_79)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  2: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  3: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
      kind: drop(_75) -> [return: bb121, unwind: bb153]
  }
  preds [bb68]
  succs [bb121, bb153]

bb70
  0: StorageDead(_82)
    SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:24-435:56)
      kind: _14 = alloc::vec::Vec::<hir::Hir>::push(move _73, move _74) -> [return: bb71, unwind: bb141]
  }
  preds [bb67]
  succs [bb71, bb141]

bb71
  0: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  1: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
      kind: drop(_75) -> [return: bb72, unwind: bb153]
  }
  preds [bb70]
  succs [bb72, bb153]

bb72
  0: StorageDead(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
      kind: goto -> bb109
  }
  preds [bb71]
  succs [bb109]

bb73
  0: StorageLive(_83)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  1: StorageLive(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  2: StorageLive(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:69)
  3: StorageLive(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:34)
  4: _86 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:34)
  5: StorageLive(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:437:62-437:68)
  6: _87 = move _12
    SourceInfo(regex-lite/src/hir/parse.rs:437:62-437:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:69)
      kind: _85 = hir::parse::Parser::<'_>::parse_uncounted_repetition(move _86, move _87) -> [return: bb74, unwind: bb140]
  }
  preds [bb23]
  succs [bb74, bb140]

bb74
  0: StorageDead(_87)
    SourceInfo(regex-lite/src/hir/parse.rs:437:68-437:69)
  1: StorageDead(_86)
    SourceInfo(regex-lite/src/hir/parse.rs:437:68-437:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
      kind: _84 = <core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch(move _85) -> [return: bb75, unwind: bb139]
  }
  preds [bb73]
  succs [bb75, bb139]

bb75
  0: StorageDead(_85)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  1: PlaceMention(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  2: _88 = discriminant(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
      kind: switchInt(move _88) -> [0: bb78, 1: bb77, otherwise: bb76]
  }
  preds [bb74]
  succs [bb76, bb77, bb78]

bb76
  0: FakeRead(ForMatchedPlace(None), _84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
      kind: unreachable
  }
  preds [bb75]
  succs []

bb77
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
      kind: falseEdge -> [real: bb79, imaginary: bb78]
  }
  preds [bb75]
  succs [bb78, bb79]

bb78
  0: StorageLive(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  1: _92 = move ((_84 as Continue).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  2: _83 = move _92
    SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
      kind: drop(_92) -> [return: bb81, unwind: bb138]
  }
  preds [bb75, bb77]
  succs [bb81, bb138]

bb79
  0: StorageLive(_89)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  1: _89 = move ((_84 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  2: StorageLive(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  3: _91 = move _89
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:30-437:70)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _91) -> [return: bb80, unwind: bb138]
  }
  preds [bb77]
  succs [bb80, bb138]

bb80
  0: StorageDead(_91)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  1: StorageDead(_89)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  2: StorageDead(_83)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:70-437:71)
      kind: drop(_84) -> [return: bb120, unwind: bb153]
  }
  preds [bb79]
  succs [bb120, bb153]

bb81
  0: StorageDead(_92)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:21-437:27)
      kind: drop(_12) -> [return: bb82, unwind: bb83]
  }
  preds [bb78]
  succs [bb82, bb83]

bb82
  0: _12 = move _83
    SourceInfo(regex-lite/src/hir/parse.rs:437:21-437:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
      kind: drop(_83) -> [return: bb84, unwind: bb138]
  }
  preds [bb81]
  succs [bb84, bb138]

bb83
  0: _12 = move _83
    SourceInfo(regex-lite/src/hir/parse.rs:437:21-437:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
      kind: drop(_83) -> [return: bb138, unwind terminate(cleanup)]
  }
  preds [bb81]
  succs [bb138]

bb84
  0: StorageDead(_83)
    SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:70-437:71)
      kind: drop(_84) -> [return: bb85, unwind: bb153]
  }
  preds [bb82]
  succs [bb85, bb153]

bb85
  0: StorageDead(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:70-437:71)
  1: _14 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:436:36-438:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:436:36-438:18)
      kind: goto -> bb109
  }
  preds [bb84]
  succs [bb109]

bb86
  0: StorageLive(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  1: StorageLive(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  2: StorageLive(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:67)
  3: StorageLive(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:34)
  4: _96 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:34)
  5: StorageLive(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:440:60-440:66)
  6: _97 = move _12
    SourceInfo(regex-lite/src/hir/parse.rs:440:60-440:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:67)
      kind: _95 = hir::parse::Parser::<'_>::parse_counted_repetition(move _96, move _97) -> [return: bb87, unwind: bb137]
  }
  preds [bb22]
  succs [bb87, bb137]

bb87
  0: StorageDead(_97)
    SourceInfo(regex-lite/src/hir/parse.rs:440:66-440:67)
  1: StorageDead(_96)
    SourceInfo(regex-lite/src/hir/parse.rs:440:66-440:67)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
      kind: _94 = <core::result::Result<alloc::vec::Vec<hir::Hir>, error::Error> as core::ops::Try>::branch(move _95) -> [return: bb88, unwind: bb136]
  }
  preds [bb86]
  succs [bb88, bb136]

bb88
  0: StorageDead(_95)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  1: PlaceMention(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  2: _98 = discriminant(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
      kind: switchInt(move _98) -> [0: bb91, 1: bb90, otherwise: bb89]
  }
  preds [bb87]
  succs [bb89, bb90, bb91]

bb89
  0: FakeRead(ForMatchedPlace(None), _94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
      kind: unreachable
  }
  preds [bb88]
  succs []

bb90
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
      kind: falseEdge -> [real: bb92, imaginary: bb91]
  }
  preds [bb88]
  succs [bb91, bb92]

bb91
  0: StorageLive(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  1: _102 = move ((_94 as Continue).0: alloc::vec::Vec<hir::Hir>)
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  2: _93 = move _102
    SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
      kind: drop(_102) -> [return: bb94, unwind: bb135]
  }
  preds [bb88, bb90]
  succs [bb94, bb135]

bb92
  0: StorageLive(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  1: _99 = move ((_94 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  2: StorageLive(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  3: _101 = move _99
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:30-440:68)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _101) -> [return: bb93, unwind: bb135]
  }
  preds [bb90]
  succs [bb93, bb135]

bb93
  0: StorageDead(_101)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  1: StorageDead(_99)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  2: StorageDead(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:68-440:69)
      kind: drop(_94) -> [return: bb119, unwind: bb153]
  }
  preds [bb92]
  succs [bb119, bb153]

bb94
  0: StorageDead(_102)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:21-440:27)
      kind: drop(_12) -> [return: bb95, unwind: bb96]
  }
  preds [bb91]
  succs [bb95, bb96]

bb95
  0: _12 = move _93
    SourceInfo(regex-lite/src/hir/parse.rs:440:21-440:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
      kind: drop(_93) -> [return: bb97, unwind: bb135]
  }
  preds [bb94]
  succs [bb97, bb135]

bb96
  0: _12 = move _93
    SourceInfo(regex-lite/src/hir/parse.rs:440:21-440:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
      kind: drop(_93) -> [return: bb135, unwind terminate(cleanup)]
  }
  preds [bb94]
  succs [bb135]

bb97
  0: StorageDead(_93)
    SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:68-440:69)
      kind: drop(_94) -> [return: bb98, unwind: bb153]
  }
  preds [bb95]
  succs [bb98, bb153]

bb98
  0: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:68-440:69)
  1: _14 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:439:24-441:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:439:24-441:18)
      kind: goto -> bb109
  }
  preds [bb97]
  succs [bb109]

bb99
  0: StorageDead(_107)
    SourceInfo(regex-lite/src/hir/parse.rs:442:55-442:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
      kind: _105 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _106) -> [return: bb100, unwind: bb134]
  }
  preds [bb17]
  succs [bb100, bb134]

bb100
  0: StorageDead(_106)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  1: PlaceMention(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  2: _108 = discriminant(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
      kind: switchInt(move _108) -> [0: bb103, 1: bb102, otherwise: bb101]
  }
  preds [bb99]
  succs [bb101, bb102, bb103]

bb101
  0: FakeRead(ForMatchedPlace(None), _105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
      kind: unreachable
  }
  preds [bb100]
  succs []

bb102
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
      kind: falseEdge -> [real: bb104, imaginary: bb103]
  }
  preds [bb100]
  succs [bb103, bb104]

bb103
  0: StorageLive(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  1: _112 = move ((_105 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  2: _104 = move _112
    SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
      kind: drop(_112) -> [return: bb106, unwind: bb133]
  }
  preds [bb100, bb102]
  succs [bb106, bb133]

bb104
  0: StorageLive(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  1: _109 = move ((_105 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  2: StorageLive(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  3: _111 = move _109
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:34-442:57)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _111) -> [return: bb105, unwind: bb133]
  }
  preds [bb102]
  succs [bb105, bb133]

bb105
  0: StorageDead(_111)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  1: StorageDead(_109)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  2: StorageDead(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  3: StorageDead(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
      kind: drop(_105) -> [return: bb118, unwind: bb153]
  }
  preds [bb104]
  succs [bb118, bb153]

bb106
  0: StorageDead(_112)
    SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:22-442:58)
      kind: _14 = alloc::vec::Vec::<hir::Hir>::push(move _103, move _104) -> [return: bb107, unwind: bb132]
  }
  preds [bb103]
  succs [bb107, bb132]

bb107
  0: StorageDead(_104)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  1: StorageDead(_103)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
      kind: drop(_105) -> [return: bb108, unwind: bb153]
  }
  preds [bb106]
  succs [bb108, bb153]

bb108
  0: StorageDead(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
      kind: goto -> bb109
  }
  preds [bb107]
  succs [bb109]

bb109
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:444:9-444:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:401:9-444:10)
      kind: goto -> bb10
  }
  preds [bb52, bb61, bb72, bb85, bb98, bb108]
  succs [bb10]

bb110
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:444:9-444:10)
  1: StorageLive(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:445:9-445:31)
  2: StorageLive(_114)
    SourceInfo(regex-lite/src/hir/parse.rs:445:9-445:13)
  3: _114 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:445:9-445:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:445:9-445:31)
      kind: _113 = hir::parse::Parser::<'_>::decrement_depth(move _114) -> [return: bb111, unwind: bb153]
  }
  preds [bb14, bb56]
  succs [bb111, bb153]

bb111
  0: StorageDead(_114)
    SourceInfo(regex-lite/src/hir/parse.rs:445:30-445:31)
  1: StorageDead(_113)
    SourceInfo(regex-lite/src/hir/parse.rs:445:31-445:32)
  2: StorageLive(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:446:9-446:45)
  3: StorageLive(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:446:9-446:19)
  4: _116 = &mut _11
    SourceInfo(regex-lite/src/hir/parse.rs:446:9-446:19)
  5: StorageLive(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:446:25-446:44)
  6: StorageLive(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:446:37-446:43)
  7: _118 = move _12
    SourceInfo(regex-lite/src/hir/parse.rs:446:37-446:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:446:25-446:44)
      kind: _117 = hir::Hir::concat(move _118) -> [return: bb112, unwind: bb131]
  }
  preds [bb110]
  succs [bb112, bb131]

bb112
  0: StorageDead(_118)
    SourceInfo(regex-lite/src/hir/parse.rs:446:43-446:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:446:9-446:45)
      kind: _115 = alloc::vec::Vec::<hir::Hir>::push(move _116, move _117) -> [return: bb113, unwind: bb130]
  }
  preds [bb111]
  succs [bb113, bb130]

bb113
  0: StorageDead(_117)
    SourceInfo(regex-lite/src/hir/parse.rs:446:44-446:45)
  1: StorageDead(_116)
    SourceInfo(regex-lite/src/hir/parse.rs:446:44-446:45)
  2: StorageDead(_115)
    SourceInfo(regex-lite/src/hir/parse.rs:446:45-446:46)
  3: StorageLive(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:448:12-448:40)
  4: StorageLive(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:448:29-448:39)
  5: _120 = move _11
    SourceInfo(regex-lite/src/hir/parse.rs:448:29-448:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:448:12-448:40)
      kind: _119 = hir::Hir::alternation(move _120) -> [return: bb114, unwind: bb129]
  }
  preds [bb112]
  succs [bb114, bb129]

bb114
  0: StorageDead(_120)
    SourceInfo(regex-lite/src/hir/parse.rs:448:39-448:40)
  1: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _119)
    SourceInfo(regex-lite/src/hir/parse.rs:448:9-448:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:448:40-448:41)
      kind: drop(_119) -> [return: bb115, unwind: bb153]
  }
  preds [bb113]
  succs [bb115, bb153]

bb115
  0: StorageDead(_119)
    SourceInfo(regex-lite/src/hir/parse.rs:448:40-448:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_12) -> [return: bb116, unwind: bb154]
  }
  preds [bb114]
  succs [bb116, bb154]

bb116
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_11) -> [return: bb117, unwind: bb155]
  }
  preds [bb115]
  succs [bb117, bb155]

bb117
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  1: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:6-449:6)
      kind: goto -> bb128
  }
  preds [bb116]
  succs [bb128]

bb118
  0: StorageDead(_105)
    SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb105]
  succs [bb124]

bb119
  0: StorageDead(_94)
    SourceInfo(regex-lite/src/hir/parse.rs:440:68-440:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb93]
  succs [bb124]

bb120
  0: StorageDead(_84)
    SourceInfo(regex-lite/src/hir/parse.rs:437:70-437:71)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb80]
  succs [bb124]

bb121
  0: StorageDead(_75)
    SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb69]
  succs [bb124]

bb122
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  2: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb123
  }
  preds [bb34]
  succs [bb123]

bb123
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:424:17-424:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb124
  }
  preds [bb50, bb122]
  succs [bb124]

bb124
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:444:9-444:10)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:444:9-444:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_12) -> [return: bb125, unwind: bb154]
  }
  preds [bb55, bb118, bb119, bb120, bb121, bb123]
  succs [bb125, bb154]

bb125
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_11) -> [return: bb126, unwind: bb155]
  }
  preds [bb124]
  succs [bb126, bb155]

bb126
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb127
  }
  preds [bb125]
  succs [bb127]

bb127
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:6-449:6)
      kind: goto -> bb128
  }
  preds [bb7, bb126]
  succs [bb128]

bb128
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:6-449:6)
      kind: return
  }
  preds [bb117, bb127]
  succs []

bb129
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:448:39-448:40)
      kind: drop(_120) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb113]
  succs [bb153]

bb130
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:446:44-446:45)
      kind: drop(_117) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb112]
  succs [bb153]

bb131
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:446:43-446:44)
      kind: drop(_118) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb111]
  succs [bb153]

bb132
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
      kind: drop(_104) -> [return: bb133, unwind terminate(cleanup)]
  }
  preds [bb106]
  succs [bb133]

bb133
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:57-442:58)
      kind: drop(_105) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb103, bb104, bb132]
  succs [bb153]

bb134
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:442:56-442:57)
      kind: drop(_106) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb99]
  succs [bb153]

bb135
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:68-440:69)
      kind: drop(_94) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb91, bb92, bb95, bb96]
  succs [bb153]

bb136
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:67-440:68)
      kind: drop(_95) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb87]
  succs [bb153]

bb137
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:440:66-440:67)
      kind: drop(_97) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb86]
  succs [bb153]

bb138
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:70-437:71)
      kind: drop(_84) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb78, bb79, bb82, bb83]
  succs [bb153]

bb139
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:69-437:70)
      kind: drop(_85) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb74]
  succs [bb153]

bb140
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:437:68-437:69)
      kind: drop(_87) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb73]
  succs [bb153]

bb141
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
      kind: drop(_74) -> [return: bb142, unwind terminate(cleanup)]
  }
  preds [bb70]
  succs [bb142]

bb142
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:55-435:56)
      kind: drop(_75) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb67, bb68, bb141]
  succs [bb153]

bb143
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:435:54-435:55)
      kind: drop(_76) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb63]
  succs [bb153]

bb144
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:432:78-432:79)
      kind: drop(_67) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb59]
  succs [bb153]

bb145
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:432:77-432:78)
      kind: drop(_68) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb58]
  succs [bb153]

bb146
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:418:60-418:61)
      kind: drop(_46) -> [return: bb148, unwind terminate(cleanup)]
  }
  preds [bb40]
  succs [bb148]

bb147
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:412:40-412:41)
      kind: drop(_42) -> [return: bb148, unwind terminate(cleanup)]
  }
  preds [bb38]
  succs [bb148]

bb148
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_39) -> [return: bb149, unwind terminate(cleanup)]
  }
  preds [bb39, bb41, bb146, bb147]
  succs [bb149]

bb149
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_29) -> [return: bb150, unwind terminate(cleanup)]
  }
  preds [bb42, bb148]
  succs [bb150]

bb150
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:419:21-419:22)
      kind: drop(_30) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb32, bb33, bb44, bb149]
  succs [bb153]

bb151
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:411:58-411:59)
      kind: drop(_31) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb28]
  succs [bb153]

bb152
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:410:56-410:57)
      kind: drop(_26) -> [return: bb153, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb153]

bb153
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_12) -> [return: bb154, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb12, bb15, bb17, bb24, bb26, bb27, bb34, bb45, bb46, bb47, bb49, bb51, bb54, bb57, bb60, bb62, bb69, bb71, bb80, bb84, bb93, bb97, bb105, bb107, bb110, bb114, bb129, bb130, bb131, bb133, bb134, bb135, bb136, bb137, bb138, bb139, bb140, bb142, bb143, bb144, bb145, bb150, bb151, bb152]
  succs [bb154]

bb154
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:449:5-449:6)
      kind: drop(_11) -> [return: bb155, unwind terminate(cleanup)]
  }
  preds [bb8, bb115, bb124, bb153]
  succs [bb155]

bb155
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:397:5-449:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb116, bb125, bb154]
  succs []

