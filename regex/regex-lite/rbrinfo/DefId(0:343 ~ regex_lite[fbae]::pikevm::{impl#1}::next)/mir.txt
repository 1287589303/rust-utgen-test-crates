bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/pikevm.rs:456:9-465:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:456:13-463:10)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:456:13-456:24)
  3: _4 = &(*((*_1).0: &pikevm::PikeVM))
    SourceInfo(regex-lite/src/pikevm.rs:456:13-456:24)
  4: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  5: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  6: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  7: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  8: _8 = &mut ((*_1).1: pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  9: _7 = &mut (*_8)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
      kind: _6 = <pool::PoolGuard<'_, pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>> as core::ops::DerefMut>::deref_mut(move _7) -> [return: bb1, unwind: bb24]
  }
  preds []
  succs [bb1, bb24]

bb1
  0: _5 = &mut (*_6)
    SourceInfo(regex-lite/src/pikevm.rs:457:13-457:28)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:457:27-457:28)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:458:13-458:26)
  3: _9 = &(*((*_1).2: &[u8]))
    SourceInfo(regex-lite/src/pikevm.rs:458:13-458:26)
  4: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:459:13-459:20)
  5: _10 = ((*_1).3: usize)
    SourceInfo(regex-lite/src/pikevm.rs:459:13-459:20)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:460:13-460:32)
  7: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:460:13-460:26)
  8: _12 = &(*((*_1).2: &[u8]))
    SourceInfo(regex-lite/src/pikevm.rs:460:13-460:26)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:460:13-460:32)
      kind: _11 = core::slice::<impl [u8]>::len(move _12) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:460:31-460:32)
  1: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  2: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  3: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  4: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  5: _16 = &mut ((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  6: _15 = &mut (*_16)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
      kind: _14 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::DerefMut>::deref_mut(move _15) -> [return: bb3, unwind: bb24]
  }
  preds [bb1]
  succs [bb3, bb24]

bb3
  0: _13 = &mut (*_14)
    SourceInfo(regex-lite/src/pikevm.rs:462:13-462:28)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:462:27-462:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:456:13-463:10)
      kind: _3 = pikevm::PikeVM::search(move _4, move _5, move _9, move _10, move _11, const false, move _13) -> [return: bb4, unwind: bb24]
  }
  preds [bb2]
  succs [bb4, bb24]

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:456:13-463:10)
      kind: switchInt(move _3) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  4: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  6: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  7: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  8: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  9: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  10: _2 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:465:10-465:10)
  11: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:465:9-465:10)
  12: StorageDead(_2)
    SourceInfo(regex-lite/src/pikevm.rs:465:9-465:10)
  13: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:466:13-466:18)
  14: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:42)
  15: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:36)
  16: StorageLive(_21)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:27)
  17: StorageLive(_22)
    SourceInfo(regex-lite/src/pikevm.rs:467:24-467:27)
  18: StorageLive(_23)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:24)
  19: _23 = &((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:24-467:27)
      kind: _22 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Index<usize>>::index(move _23, const 0_usize) -> [return: bb7, unwind: bb24]
  }
  preds [bb4]
  succs [bb7, bb24]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  4: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  6: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  7: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  8: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  9: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:463:9-463:10)
  10: _0 = core::option::Option::<(usize, usize)>::None
    SourceInfo(regex-lite/src/pikevm.rs:464:20-464:24)
  11: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:465:9-465:10)
  12: StorageDead(_2)
    SourceInfo(regex-lite/src/pikevm.rs:465:9-465:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb4]
  succs [bb23]

bb7
  0: _21 = (*_22)
    SourceInfo(regex-lite/src/pikevm.rs:467:14-467:27)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/pikevm.rs:467:26-467:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:14-467:36)
      kind: _20 = core::option::Option::<int::NonMaxUsize>::unwrap(move _21) -> [return: bb8, unwind: bb24]
  }
  preds [bb5]
  succs [bb8, bb24]

bb8
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/pikevm.rs:467:35-467:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:14-467:42)
      kind: _19 = int::NonMaxUsize::get(move _20) -> [return: bb9, unwind: bb24]
  }
  preds [bb7]
  succs [bb9, bb24]

bb9
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/pikevm.rs:467:41-467:42)
  1: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:72)
  2: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:66)
  3: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:57)
  4: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:467:54-467:57)
  5: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:54)
  6: _28 = &((*_1).4: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:54-467:57)
      kind: _27 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Index<usize>>::index(move _28, const 1_usize) -> [return: bb10, unwind: bb24]
  }
  preds [bb8]
  succs [bb10, bb24]

bb10
  0: _26 = (*_27)
    SourceInfo(regex-lite/src/pikevm.rs:467:44-467:57)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:467:56-467:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:44-467:66)
      kind: _25 = core::option::Option::<int::NonMaxUsize>::unwrap(move _26) -> [return: bb11, unwind: bb24]
  }
  preds [bb9]
  succs [bb11, bb24]

bb11
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/pikevm.rs:467:65-467:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:467:44-467:72)
      kind: _24 = int::NonMaxUsize::get(move _25) -> [return: bb12, unwind: bb24]
  }
  preds [bb10]
  succs [bb12, bb24]

bb12
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:467:71-467:72)
  1: _18 = (move _19, move _24)
    SourceInfo(regex-lite/src/pikevm.rs:467:13-467:73)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/pikevm.rs:467:72-467:73)
  3: StorageDead(_19)
    SourceInfo(regex-lite/src/pikevm.rs:467:72-467:73)
  4: FakeRead(ForLet(None), _18)
    SourceInfo(regex-lite/src/pikevm.rs:466:13-466:18)
  5: StorageDead(_27)
    SourceInfo(regex-lite/src/pikevm.rs:467:73-467:74)
  6: StorageDead(_22)
    SourceInfo(regex-lite/src/pikevm.rs:467:73-467:74)
  7: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:468:9-470:10)
  8: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:468:12-468:22)
  9: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:468:12-468:15)
  10: _31 = (_18.0: usize)
    SourceInfo(regex-lite/src/pikevm.rs:468:12-468:15)
  11: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:468:19-468:22)
  12: _32 = (_18.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:468:19-468:22)
  13: _30 = Ge(move _31, move _32)
    SourceInfo(regex-lite/src/pikevm.rs:468:12-468:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:468:12-468:22)
      kind: switchInt(move _30) -> [0: bb21, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb21]

bb13
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:468:21-468:22)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:468:21-468:22)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  4: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:55)
  5: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:21)
  6: _36 = &mut (*_1)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:21)
  7: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:469:53-469:54)
  8: _37 = _18
    SourceInfo(regex-lite/src/pikevm.rs:469:53-469:54)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:17-469:55)
      kind: _35 = pikevm::FindMatches::<'_, '_>::handle_overlapping_empty_match(move _36, move _37) -> [return: bb14, unwind: bb24]
  }
  preds [bb12]
  succs [bb14, bb24]

bb14
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:469:54-469:55)
  1: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:469:54-469:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
      kind: _34 = <core::option::Option<(usize, usize)> as core::ops::Try>::branch(move _35) -> [return: bb15, unwind: bb24]
  }
  preds [bb13]
  succs [bb15, bb24]

bb15
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  1: PlaceMention(_34)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  2: _38 = discriminant(_34)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
      kind: switchInt(move _38) -> [0: bb18, 1: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _34)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  1: _42 = ((_34 as Continue).0: (usize, usize))
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  2: _33 = _42
    SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
  3: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  4: _18 = move _33
    SourceInfo(regex-lite/src/pikevm.rs:469:13-469:56)
  5: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  6: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:469:56-469:57)
  7: _29 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:468:23-470:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:468:9-470:10)
      kind: goto -> bb22
  }
  preds [bb15, bb17]
  succs [bb22]

bb19
  0: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  1: _39 = ((_34 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  2: StorageLive(_41)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  3: _41 = _39
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:469:17-469:56)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _41) -> [return: bb20, unwind: bb24]
  }
  preds [bb17]
  succs [bb20, bb24]

bb20
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  1: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  2: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:469:55-469:56)
  3: StorageDead(_34)
    SourceInfo(regex-lite/src/pikevm.rs:469:56-469:57)
  4: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:470:9-470:10)
  5: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:470:9-470:10)
  6: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:474:5-474:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb19]
  succs [bb23]

bb21
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/pikevm.rs:468:21-468:22)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:468:21-468:22)
  2: _29 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:470:10-470:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:468:9-470:10)
      kind: goto -> bb22
  }
  preds [bb12]
  succs [bb22]

bb22
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/pikevm.rs:470:9-470:10)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/pikevm.rs:470:9-470:10)
  2: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:471:19-471:22)
  3: _43 = (_18.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:471:19-471:22)
  4: ((*_1).3: usize) = move _43
    SourceInfo(regex-lite/src/pikevm.rs:471:9-471:22)
  5: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:471:21-471:22)
  6: StorageLive(_44)
    SourceInfo(regex-lite/src/pikevm.rs:472:31-472:40)
  7: StorageLive(_45)
    SourceInfo(regex-lite/src/pikevm.rs:472:36-472:39)
  8: _45 = (_18.1: usize)
    SourceInfo(regex-lite/src/pikevm.rs:472:36-472:39)
  9: _44 = core::option::Option::<usize>::Some(move _45)
    SourceInfo(regex-lite/src/pikevm.rs:472:31-472:40)
  10: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:472:39-472:40)
  11: ((*_1).5: core::option::Option<usize>) = move _44
    SourceInfo(regex-lite/src/pikevm.rs:472:9-472:40)
  12: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:472:39-472:40)
  13: StorageLive(_46)
    SourceInfo(regex-lite/src/pikevm.rs:473:14-473:15)
  14: _46 = _18
    SourceInfo(regex-lite/src/pikevm.rs:473:14-473:15)
  15: _0 = core::option::Option::<(usize, usize)>::Some(move _46)
    SourceInfo(regex-lite/src/pikevm.rs:473:9-473:16)
  16: StorageDead(_46)
    SourceInfo(regex-lite/src/pikevm.rs:473:15-473:16)
  17: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:474:5-474:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:474:6-474:6)
      kind: goto -> bb23
  }
  preds [bb18, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:474:6-474:6)
      kind: return
  }
  preds [bb6, bb20, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:455:5-474:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb7, bb8, bb9, bb10, bb11, bb13, bb14, bb19]
  succs []

