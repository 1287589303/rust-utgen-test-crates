{
  "regex-lite/src/nfa.rs:366:15:366:33": [
    {
      "Match": {
        "match_source": "regex-lite/src/nfa.rs:366:15:366:33",
        "match_str": "(rep.min, rep.max)",
        "match_kind": {
          "StructLike": null
        },
        "arms": {
          "regex-lite/src/nfa.rs:367:13:367:25": {
            "pat": {
              "pat_str": "(0, Some(1))",
              "kind": {
                "StructLike": {
                  "0": [
                    0,
                    "regex-lite/src/nfa.rs:367:14:367:15"
                  ],
                  "1": [
                    null,
                    "regex-lite/src/nfa.rs:367:17:367:24"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:367:29:367:69"
          },
          "regex-lite/src/nfa.rs:368:13:368:24": {
            "pat": {
              "pat_str": "(min, None)",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "regex-lite/src/nfa.rs:368:19:368:23"
                  ],
                  "0": [
                    null,
                    "regex-lite/src/nfa.rs:368:14:368:17"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:368:28:368:70"
          },
          "regex-lite/src/nfa.rs:369:13:369:29": {
            "pat": {
              "pat_str": "(min, Some(max))",
              "kind": {
                "StructLike": {
                  "0": [
                    null,
                    "regex-lite/src/nfa.rs:369:14:369:17"
                  ],
                  "1": [
                    null,
                    "regex-lite/src/nfa.rs:369:19:369:28"
                  ]
                }
              }
            },
            "guard": {
              "regex-lite/src/nfa.rs:369:33:369:43": [
                {
                  "Bool": {
                    "Binary": {
                      "kind": "Eq",
                      "expr": "min == max",
                      "lhs": "min",
                      "rhs": "max",
                      "cmp_with_int": false
                    }
                  }
                }
              ]
            },
            "body_source": "regex-lite/src/nfa.rs:369:47:369:76"
          },
          "regex-lite/src/nfa.rs:370:13:370:29": {
            "pat": {
              "pat_str": "(min, Some(max))",
              "kind": {
                "StructLike": {
                  "1": [
                    null,
                    "regex-lite/src/nfa.rs:370:19:370:28"
                  ],
                  "0": [
                    null,
                    "regex-lite/src/nfa.rs:370:14:370:17"
                  ]
                }
              }
            },
            "guard": null,
            "body_source": "regex-lite/src/nfa.rs:370:33:370:79"
          }
        }
      }
    }
  ],
  "regex-lite/src/nfa.rs:369:33:369:43": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "min == max",
          "lhs": "min",
          "rhs": "max",
          "cmp_with_int": false
        }
      }
    }
  ]
}