{
  "regex-lite/src/hir/parse.rs:310:13:310:43": [
    {
      "Bool": {
        "Other": "self.flags().ignore_whitespace"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:319:16:319:34": [
    {
      "Bool": {
        "Other": "ch.is_whitespace()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:321:38:321:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ch == '#'",
          "lhs": "ch",
          "rhs": "'#'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:323:37:323:47": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "ch == '\\n'",
          "lhs": "ch",
          "rhs": "'\\n'",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:321:24:321:34": [
    {
      "Bool": {
        "Other": "in_comment"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:313:12:313:26": [
    {
      "Bool": {
        "Other": "self.is_done()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:316:25:316:60": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "self.pos() + self.char().len_utf8()",
          "lhs": "self.pos()",
          "rhs": "self.char().len_utf8()",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:318:24:318:62": [
    {
      "For": {
        "iter_var": "(i, ch)",
        "iter_range": "self.pattern()[start..].char_indices()"
      }
    }
  ],
  "regex-lite/src/hir/parse.rs:323:23:323:33": [
    {
      "Bool": {
        "Other": "in_comment"
      }
    }
  ]
}