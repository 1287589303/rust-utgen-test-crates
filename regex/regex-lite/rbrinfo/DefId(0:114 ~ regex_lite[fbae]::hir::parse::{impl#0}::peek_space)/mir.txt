bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:310:9-312:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:43)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:25)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:17)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:25)
      kind: _4 = hir::parse::Parser::<'_>::flags(move _5) -> [return: bb1, unwind: bb42]
  }
  preds []
  succs [bb1, bb42]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:310:24-310:25)
  1: _3 = (_4.5: bool)
    SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:310:13-310:43)
      kind: switchInt(move _3) -> [0: bb2, otherwise: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:310:42-310:43)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:311:20-311:24)
  2: _7 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:311:20-311:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:311:20-311:31)
      kind: _0 = hir::parse::Parser::<'_>::peek(move _7) -> [return: bb3, unwind: bb42]
  }
  preds [bb1]
  succs [bb3, bb42]

bb3
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:311:30-311:31)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:312:9-312:10)
  2: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:312:9-312:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb2]
  succs [bb41]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:310:42-310:43)
  1: _2 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:312:10-312:10)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:312:9-312:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:312:9-312:10)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:313:9-315:10)
  5: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:313:12-313:26)
  6: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:313:12-313:16)
  7: _10 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:313:12-313:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:313:12-313:26)
      kind: _9 = hir::parse::Parser::<'_>::is_done(move _10) -> [return: bb5, unwind: bb42]
  }
  preds [bb1]
  succs [bb5, bb42]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:313:12-313:26)
      kind: switchInt(move _9) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:313:25-313:26)
  1: _0 = core::option::Option::<char>::None
    SourceInfo(regex-lite/src/hir/parse.rs:314:20-314:24)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:315:9-315:10)
  3: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:315:9-315:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb41
  }
  preds [bb5]
  succs [bb41]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:313:25-313:26)
  1: _8 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:315:10-315:10)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:315:9-315:10)
  3: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/parse.rs:315:9-315:10)
  4: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:316:13-316:22)
  5: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:35)
  6: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:29)
  7: _14 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:29)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:35)
      kind: _13 = hir::parse::Parser::<'_>::pos(move _14) -> [return: bb8, unwind: bb42]
  }
  preds [bb5]
  succs [bb8, bb42]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:316:34-316:35)
  1: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:60)
  2: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:49)
  3: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:42)
  4: _17 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:49)
      kind: _16 = hir::parse::Parser::<'_>::char(move _17) -> [return: bb9, unwind: bb42]
  }
  preds [bb7]
  succs [bb9, bb42]

bb9
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/parse.rs:316:48-316:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:316:38-316:60)
      kind: _15 = core::char::methods::<impl char>::len_utf8(move _16) -> [return: bb10, unwind: bb42]
  }
  preds [bb8]
  succs [bb10, bb42]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:316:59-316:60)
  1: _18 = AddWithOverflow(_13, _15)
    SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:60)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:60)
      kind: assert(!move (_18.1: bool), "attempt to compute `{} + {}`, which would overflow", move _13, move _15) -> [success: bb11, unwind: bb42]
  }
  preds [bb9]
  succs [bb11, bb42]

bb11
  0: _12 = move (_18.0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:316:25-316:60)
  1: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:316:59-316:60)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:316:59-316:60)
  3: FakeRead(ForLet(None), _12)
    SourceInfo(regex-lite/src/hir/parse.rs:316:13-316:22)
  4: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:317:13-317:27)
  5: _19 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:317:30-317:35)
  6: FakeRead(ForLet(None), _19)
    SourceInfo(regex-lite/src/hir/parse.rs:317:13-317:27)
  7: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
  8: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  9: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  10: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:47)
  11: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:318:38-318:47)
  12: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:38)
  13: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:38)
  14: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:28)
  15: _27 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:38)
      kind: _26 = hir::parse::Parser::<'_>::pattern(move _27) -> [return: bb12, unwind: bb42]
  }
  preds [bb10]
  succs [bb12, bb42]

bb12
  0: _25 = &(*_26)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:38)
  1: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/parse.rs:318:37-318:38)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:318:39-318:46)
  3: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:318:39-318:44)
  4: _29 = _12
    SourceInfo(regex-lite/src/hir/parse.rs:318:39-318:44)
  5: _28 = core::ops::RangeFrom::<usize> { start: move _29 }
    SourceInfo(regex-lite/src/hir/parse.rs:318:39-318:46)
  6: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/parse.rs:318:45-318:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:38-318:47)
      kind: _24 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _25, move _28) -> [return: bb13, unwind: bb42]
  }
  preds [bb11]
  succs [bb13, bb42]

bb13
  0: _23 = &(*_24)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:47)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/parse.rs:318:46-318:47)
  2: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/parse.rs:318:46-318:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
      kind: _22 = core::str::<impl str>::char_indices(move _23) -> [return: bb14, unwind: bb42]
  }
  preds [bb12]
  succs [bb14, bb42]

bb14
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/parse.rs:318:61-318:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
      kind: _21 = <core::str::CharIndices<'_> as core::iter::IntoIterator>::into_iter(move _22) -> [return: bb15, unwind: bb42]
  }
  preds [bb13]
  succs [bb15, bb42]

bb15
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:318:61-318:62)
  1: PlaceMention(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  2: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  3: _30 = move _21
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
      kind: goto -> bb16
  }
  preds [bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
      kind: falseUnwind -> [real: bb17, unwind: bb42]
  }
  preds [bb15, bb24, bb35]
  succs [bb17, bb42]

bb17
  0: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  1: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  3: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  4: _35 = &mut _30
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  5: _34 = &mut (*_35)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
      kind: _33 = <core::str::CharIndices<'_> as core::iter::Iterator>::next(move _34) -> [return: bb18, unwind: bb42]
  }
  preds [bb16]
  succs [bb18, bb42]

bb18
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/parse.rs:318:61-318:62)
  1: PlaceMention(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  2: _36 = discriminant(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
      kind: switchInt(move _36) -> [0: bb20, 1: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _33)
    SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:24-318:62)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:318:14-318:15)
  1: _38 = (((_33 as Some).0: (usize, char)).0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:318:14-318:15)
  2: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:318:17-318:19)
  3: _39 = (((_33 as Some).0: (usize, char)).1: char)
    SourceInfo(regex-lite/src/hir/parse.rs:318:17-318:19)
  4: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:319:16-319:34)
  5: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:319:16-319:18)
  6: _41 = _39
    SourceInfo(regex-lite/src/hir/parse.rs:319:16-319:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:319:16-319:34)
      kind: _40 = core::char::methods::<impl char>::is_whitespace(move _41) -> [return: bb23, unwind: bb42]
  }
  preds [bb18, bb20]
  succs [bb23, bb42]

bb22
  0: _20 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
      kind: goto -> bb36
  }
  preds [bb20]
  succs [bb36]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:319:16-319:34)
      kind: switchInt(move _40) -> [0: bb25, otherwise: bb24]
  }
  preds [bb21]
  succs [bb24, bb25]

bb24
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:319:33-319:34)
  1: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  2: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  3: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  4: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  5: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  6: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb16
  }
  preds [bb23]
  succs [bb16]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/parse.rs:319:33-319:34)
  1: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:321:24-321:34)
  2: _43 = _19
    SourceInfo(regex-lite/src/hir/parse.rs:321:24-321:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:321:24-321:34)
      kind: switchInt(move _43) -> [0: bb26, otherwise: bb29]
  }
  preds [bb23]
  succs [bb26, bb29]

bb26
  0: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:321:38-321:47)
  1: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:321:38-321:40)
  2: _45 = _39
    SourceInfo(regex-lite/src/hir/parse.rs:321:38-321:40)
  3: _44 = Eq(move _45, const '#')
    SourceInfo(regex-lite/src/hir/parse.rs:321:38-321:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:321:38-321:47)
      kind: switchInt(move _44) -> [0: bb28, otherwise: bb27]
  }
  preds [bb25]
  succs [bb27, bb28]

bb27
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:321:46-321:47)
  1: _19 = const true
    SourceInfo(regex-lite/src/hir/parse.rs:322:17-322:34)
  2: _32 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:321:48-323:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:321:20-328:14)
      kind: goto -> bb35
  }
  preds [bb26]
  succs [bb35]

bb28
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/parse.rs:321:46-321:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb29
  }
  preds [bb26]
  succs [bb29]

bb29
  0: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:323:23-323:33)
  1: _46 = _19
    SourceInfo(regex-lite/src/hir/parse.rs:323:23-323:33)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:323:23-323:33)
      kind: switchInt(move _46) -> [0: bb33, otherwise: bb30]
  }
  preds [bb25, bb28]
  succs [bb30, bb33]

bb30
  0: StorageLive(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:323:37-323:47)
  1: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:323:37-323:39)
  2: _48 = _39
    SourceInfo(regex-lite/src/hir/parse.rs:323:37-323:39)
  3: _47 = Eq(move _48, const '\n')
    SourceInfo(regex-lite/src/hir/parse.rs:323:37-323:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:323:37-323:47)
      kind: switchInt(move _47) -> [0: bb32, otherwise: bb31]
  }
  preds [bb29]
  succs [bb31, bb32]

bb31
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:323:46-323:47)
  1: _19 = const false
    SourceInfo(regex-lite/src/hir/parse.rs:324:17-324:35)
  2: _32 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:323:48-325:14)
  3: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  4: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:321:20-328:14)
      kind: goto -> bb35
  }
  preds [bb30]
  succs [bb35]

bb32
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/parse.rs:323:46-323:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb33
  }
  preds [bb30]
  succs [bb33]

bb33
  0: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:326:26-326:27)
  1: _50 = _38
    SourceInfo(regex-lite/src/hir/parse.rs:326:26-326:27)
  2: _51 = AddWithOverflow(_12, _50)
    SourceInfo(regex-lite/src/hir/parse.rs:326:17-326:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:326:17-326:27)
      kind: assert(!move (_51.1: bool), "attempt to compute `{} + {}`, which would overflow", _12, move _50) -> [success: bb34, unwind: bb42]
  }
  preds [bb29, bb32]
  succs [bb34, bb42]

bb34
  0: _12 = move (_51.0: usize)
    SourceInfo(regex-lite/src/hir/parse.rs:326:17-326:27)
  1: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/parse.rs:326:26-326:27)
  2: _20 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:327:17-327:22)
  3: StorageDead(_47)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  4: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  5: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  6: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  7: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  8: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  9: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb36
  }
  preds [bb33]
  succs [bb36]

bb35
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  2: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/parse.rs:328:13-328:14)
  3: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  4: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  5: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  6: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  7: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  8: _31 = const ()
    SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:318:9-329:10)
      kind: goto -> bb16
  }
  preds [bb27, bb31]
  succs [bb16]

bb36
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  2: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  3: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  4: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  5: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  6: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  7: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:329:9-329:10)
  8: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:40)
  9: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:40)
  10: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:32)
  11: StorageLive(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:330:23-330:32)
  12: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:23)
  13: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:23)
  14: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:13)
  15: _58 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:13)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:23)
      kind: _57 = hir::parse::Parser::<'_>::pattern(move _58) -> [return: bb37, unwind: bb42]
  }
  preds [bb22, bb34]
  succs [bb37, bb42]

bb37
  0: _56 = &(*_57)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:23)
  1: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/parse.rs:330:22-330:23)
  2: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:330:24-330:31)
  3: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:330:24-330:29)
  4: _60 = _12
    SourceInfo(regex-lite/src/hir/parse.rs:330:24-330:29)
  5: _59 = core::ops::RangeFrom::<usize> { start: move _60 }
    SourceInfo(regex-lite/src/hir/parse.rs:330:24-330:31)
  6: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/parse.rs:330:30-330:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:330:23-330:32)
      kind: _55 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _56, move _59) -> [return: bb38, unwind: bb42]
  }
  preds [bb36]
  succs [bb38, bb42]

bb38
  0: _54 = &(*_55)
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:32)
  1: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/parse.rs:330:31-330:32)
  2: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/parse.rs:330:31-330:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:40)
      kind: _53 = core::str::<impl str>::chars(move _54) -> [return: bb39, unwind: bb42]
  }
  preds [bb37]
  succs [bb39, bb42]

bb39
  0: _52 = &mut _53
    SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:40)
  1: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/parse.rs:330:39-330:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:330:9-330:47)
      kind: _0 = <core::str::Chars<'_> as core::iter::Iterator>::next(move _52) -> [return: bb40, unwind: bb42]
  }
  preds [bb38]
  succs [bb40, bb42]

bb40
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/parse.rs:330:46-330:47)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/parse.rs:331:5-331:6)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:331:5-331:6)
  3: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/parse.rs:331:5-331:6)
  4: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/parse.rs:331:5-331:6)
  5: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/parse.rs:331:5-331:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:331:6-331:6)
      kind: goto -> bb41
  }
  preds [bb39]
  succs [bb41]

bb41
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:331:6-331:6)
      kind: return
  }
  preds [bb3, bb6, bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:309:5-331:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb16, bb17, bb21, bb33, bb36, bb37, bb38, bb39]
  succs []

