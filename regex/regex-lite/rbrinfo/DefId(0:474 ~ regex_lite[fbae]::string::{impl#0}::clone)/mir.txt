bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/string.rs:87:13-87:19)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:87:33-87:45)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:87:33-87:45)
  3: _4 = &((*_1).0: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:87:33-87:45)
  4: _3 = &(*_4)
    SourceInfo(regex-lite/src/string.rs:87:33-87:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:87:22-87:46)
      kind: _2 = <alloc::sync::Arc<pikevm::PikeVM> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb19]
  }
  preds []
  succs [bb1, bb19]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:87:45-87:46)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/string.rs:87:13-87:19)
  2: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:87:46-87:47)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:88:13-88:17)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:89:17-89:23)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:89:37-89:49)
  6: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:89:37-89:49)
  7: _8 = &((*_1).0: alloc::sync::Arc<pikevm::PikeVM>)
    SourceInfo(regex-lite/src/string.rs:89:37-89:49)
  8: _7 = &(*_8)
    SourceInfo(regex-lite/src/string.rs:89:37-89:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:89:26-89:50)
      kind: _6 = <alloc::sync::Arc<pikevm::PikeVM> as core::clone::Clone>::clone(move _7) -> [return: bb2, unwind: bb18]
  }
  preds [bb0]
  succs [bb2, bb18]

bb2
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:89:49-89:50)
  1: FakeRead(ForLet(None), _6)
    SourceInfo(regex-lite/src/string.rs:89:17-89:23)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:89:50-89:51)
  3: StorageLive(_9)
    SourceInfo(regex-lite/src/string.rs:90:17-90:23)
  4: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:90:35-90:62)
  5: _10 = {closure@regex-lite/src/string.rs:90:35: 90:42} { pikevm: move _6 }
    SourceInfo(regex-lite/src/string.rs:90:35-90:62)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:90:26-90:63)
      kind: _9 = alloc::boxed::Box::<{closure@regex-lite/src/string.rs:90:35: 90:42}>::new(move _10) -> [return: bb3, unwind: bb16]
  }
  preds [bb1]
  succs [bb3, bb16]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:90:62-90:63)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-lite/src/string.rs:90:17-90:23)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:91:28-91:34)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:91:28-91:34)
  4: _12 = move _9
    SourceInfo(regex-lite/src/string.rs:91:28-91:34)
  5: _11 = move _12 as alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe> (PointerCoercion(Unsize))
    SourceInfo(regex-lite/src/string.rs:91:28-91:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:91:33-91:34)
      kind: drop(_12) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:91:33-91:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:91:13-91:35)
      kind: _5 = pool::Pool::<pikevm::Cache, alloc::boxed::Box<dyn core::ops::Fn() -> pikevm::Cache + core::marker::Send + core::marker::Sync + core::panic::RefUnwindSafe + core::panic::UnwindSafe>>::new(move _11) -> [return: bb5, unwind: bb14]
  }
  preds [bb3]
  succs [bb5, bb14]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:91:34-91:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:92:9-92:10)
      kind: drop(_9) -> [return: bb6, unwind: bb17]
  }
  preds [bb4]
  succs [bb6, bb17]

bb6
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/string.rs:92:9-92:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:92:9-92:10)
      kind: drop(_6) -> [return: bb7, unwind: bb18]
  }
  preds [bb5]
  succs [bb7, bb18]

bb7
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:92:9-92:10)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(regex-lite/src/string.rs:88:13-88:17)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:93:17-93:23)
  3: _13 = move _2
    SourceInfo(regex-lite/src/string.rs:93:17-93:23)
  4: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:93:25-93:29)
  5: _14 = move _5
    SourceInfo(regex-lite/src/string.rs:93:25-93:29)
  6: _0 = string::Regex { pikevm: move _13, pool: move _14 }
    SourceInfo(regex-lite/src/string.rs:93:9-93:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:93:30-93:31)
      kind: drop(_14) -> [return: bb8, unwind: bb12]
  }
  preds [bb6]
  succs [bb8, bb12]

bb8
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:93:30-93:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:93:30-93:31)
      kind: drop(_13) -> [return: bb9, unwind: bb13]
  }
  preds [bb7]
  succs [bb9, bb13]

bb9
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:93:30-93:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:94:5-94:6)
      kind: drop(_5) -> [return: bb10, unwind: bb18]
  }
  preds [bb8]
  succs [bb10, bb18]

bb10
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:94:5-94:6)
      kind: drop(_2) -> [return: bb11, unwind: bb19]
  }
  preds [bb9]
  succs [bb11, bb19]

bb11
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/string.rs:94:5-94:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:94:6-94:6)
      kind: return
  }
  preds [bb10]
  succs []

bb12
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:93:30-93:31)
      kind: drop(_13) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:94:5-94:6)
      kind: drop(_5) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb8, bb12]
  succs [bb18]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:91:34-91:35)
      kind: drop(_11) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb3, bb4]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:92:9-92:10)
      kind: drop(_9) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb14]
  succs [bb17]

bb16
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:90:62-90:63)
      kind: drop(_10) -> [return: bb17, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb17]

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:92:9-92:10)
      kind: drop(_6) -> [return: bb18, unwind terminate(cleanup)]
  }
  preds [bb5, bb15, bb16]
  succs [bb18]

bb18
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:94:5-94:6)
      kind: drop(_2) -> [return: bb19, unwind terminate(cleanup)]
  }
  preds [bb1, bb6, bb9, bb13, bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:86:5-94:6)
      kind: resume
  }
  preds [bb0, bb10, bb18]
  succs []

