bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:380:13-380:16)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:37)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:23)
  4: _5 = &(*_1)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:37)
      kind: _4 = hir::parse::Parser::<'_>::parse_inner(move _5) -> [return: bb1, unwind: bb25]
  }
  preds []
  succs [bb1, bb25]

bb1
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/parse.rs:380:36-380:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
      kind: _3 = <core::result::Result<hir::Hir, error::Error> as core::ops::Try>::branch(move _4) -> [return: bb2, unwind: bb24]
  }
  preds [bb0]
  succs [bb2, bb24]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  1: PlaceMention(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  2: _6 = discriminant(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  1: _10 = move ((_3 as Continue).0: hir::Hir)
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  2: _2 = move _10
    SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
      kind: drop(_10) -> [return: bb8, unwind: bb23]
  }
  preds [bb2, bb4]
  succs [bb8, bb23]

bb6
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  1: _7 = move ((_3 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  3: _9 = move _7
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:19-380:38)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _9) -> [return: bb7, unwind: bb23]
  }
  preds [bb4]
  succs [bb7, bb23]

bb7
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:38-380:39)
      kind: drop(_3) -> [return: bb19, unwind: bb25]
  }
  preds [bb6]
  succs [bb19, bb25]

bb8
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/parse.rs:380:13-380:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:38-380:39)
      kind: drop(_3) -> [return: bb9, unwind: bb22]
  }
  preds [bb5]
  succs [bb9, bb22]

bb9
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:38-380:39)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  3: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:56)
  4: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:393:27-393:31)
  5: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:393:27-393:31)
  6: _15 = &_2
    SourceInfo(regex-lite/src/hir/parse.rs:393:27-393:31)
  7: _14 = &(*_15)
    SourceInfo(regex-lite/src/hir/parse.rs:393:27-393:31)
  8: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:393:33-393:55)
  9: _16 = (((*_1).0: hir::Config).0: u32)
    SourceInfo(regex-lite/src/hir/parse.rs:393:33-393:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:56)
      kind: _13 = hir::parse::check_hir_nesting(move _14, move _16) -> [return: bb10, unwind: bb22]
  }
  preds [bb8]
  succs [bb10, bb22]

bb10
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/parse.rs:393:55-393:56)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/parse.rs:393:55-393:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
      kind: _12 = <core::result::Result<(), error::Error> as core::ops::Try>::branch(move _13) -> [return: bb11, unwind: bb22]
  }
  preds [bb9]
  succs [bb11, bb22]

bb11
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  1: PlaceMention(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  2: _17 = discriminant(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
      kind: switchInt(move _17) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  1: _21 = ((_12 as Continue).0: ())
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  2: _11 = _21
    SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
  3: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  4: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  5: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  6: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  7: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:394:12-394:15)
  8: _22 = move _2
    SourceInfo(regex-lite/src/hir/parse.rs:394:12-394:15)
  9: _0 = core::result::Result::<hir::Hir, error::Error>::Ok(move _22)
    SourceInfo(regex-lite/src/hir/parse.rs:394:9-394:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:394:15-394:16)
      kind: drop(_22) -> [return: bb17, unwind: bb22]
  }
  preds [bb11, bb13]
  succs [bb17, bb22]

bb15
  0: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  1: _18 = move ((_12 as Break).0: core::result::Result<core::convert::Infallible, error::Error>)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  3: _20 = move _18
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:393:9-393:57)
      kind: _0 = <core::result::Result<hir::Hir, error::Error> as core::ops::FromResidual<core::result::Result<core::convert::Infallible, error::Error>>>::from_residual(move _20) -> [return: bb16, unwind: bb22]
  }
  preds [bb13]
  succs [bb16, bb22]

bb16
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  1: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/parse.rs:393:56-393:57)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  3: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  4: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/parse.rs:393:57-393:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:5-395:6)
      kind: drop(_2) -> [return: bb20, unwind: bb25]
  }
  preds [bb15]
  succs [bb20, bb25]

bb17
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/parse.rs:394:15-394:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:5-395:6)
      kind: drop(_2) -> [return: bb18, unwind: bb25]
  }
  preds [bb14]
  succs [bb18, bb25]

bb18
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:395:5-395:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:6-395:6)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/parse.rs:380:38-380:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb20
  }
  preds [bb7]
  succs [bb20]

bb20
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/parse.rs:395:5-395:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:6-395:6)
      kind: goto -> bb21
  }
  preds [bb16, bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:6-395:6)
      kind: return
  }
  preds [bb18, bb20]
  succs []

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:395:5-395:6)
      kind: drop(_2) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb8, bb9, bb10, bb14, bb15]
  succs [bb25]

bb23
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:38-380:39)
      kind: drop(_3) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb5, bb6]
  succs [bb25]

bb24
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:380:37-380:38)
      kind: drop(_4) -> [return: bb25, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/parse.rs:379:5-395:6)
      kind: resume
  }
  preds [bb0, bb7, bb16, bb17, bb22, bb23, bb24]
  succs []

