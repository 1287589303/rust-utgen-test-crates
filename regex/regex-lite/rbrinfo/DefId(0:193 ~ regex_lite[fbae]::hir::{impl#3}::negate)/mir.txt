bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:422:9-425:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:422:12-422:34)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:422:12-422:23)
  3: _4 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:422:12-422:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:422:12-422:34)
      kind: _3 = alloc::vec::Vec::<hir::ClassRange>::is_empty(move _4) -> [return: bb1, unwind: bb43]
  }
  preds []
  succs [bb1, bb43]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:422:12-422:34)
      kind: switchInt(move _3) -> [0: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:422:33-422:34)
  1: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:423:13-423:66)
  2: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:423:13-423:24)
  3: _7 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:423:13-423:24)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:423:30-423:65)
  5: _8 = hir::ClassRange { start: const hir::Class::negate::MIN, end: const hir::Class::negate::MAX }
    SourceInfo(regex-lite/src/hir/mod.rs:423:30-423:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:423:13-423:66)
      kind: _6 = alloc::vec::Vec::<hir::ClassRange>::push(move _7, move _8) -> [return: bb3, unwind: bb43]
  }
  preds [bb1]
  succs [bb3, bb43]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:423:65-423:66)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:423:65-423:66)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:423:66-423:67)
  3: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:424:13-424:19)
  4: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:425:9-425:10)
  5: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:425:9-425:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:473:6-473:6)
      kind: goto -> bb42
  }
  preds [bb2]
  succs [bb42]

bb4
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:422:33-422:34)
  1: _2 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:425:10-425:10)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:425:9-425:10)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:425:9-425:10)
  4: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:431:13-431:22)
  5: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:431:25-431:36)
  6: _10 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:431:25-431:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:431:25-431:42)
      kind: _9 = alloc::vec::Vec::<hir::ClassRange>::len(move _10) -> [return: bb5, unwind: bb43]
  }
  preds [bb1]
  succs [bb5, bb43]

bb5
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:431:41-431:42)
  1: FakeRead(ForLet(None), _9)
    SourceInfo(regex-lite/src/hir/mod.rs:431:13-431:22)
  2: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:435:9-441:10)
  3: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:38)
  4: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:32)
  5: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:435:23-435:26)
  6: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:23)
  7: _15 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:435:23-435:26)
      kind: _14 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _15, const 0_usize) -> [return: bb6, unwind: bb43]
  }
  preds [bb4]
  succs [bb6, bb43]

bb6
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:435:25-435:26)
  1: _13 = ((*_14).0: char)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:32)
  2: _12 = Gt(move _13, const hir::Class::negate::MIN)
    SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:435:12-435:38)
      kind: switchInt(move _12) -> [0: bb12, otherwise: bb7]
  }
  preds [bb5]
  succs [bb7, bb12]

bb7
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:435:37-435:38)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:435:37-435:38)
  2: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:436:13-440:15)
  3: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:436:13-436:24)
  4: _17 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:436:13-436:24)
  5: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:436:30-440:14)
  6: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:439:22-439:62)
  7: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:439:22-439:53)
  8: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:439:32-439:52)
  9: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:439:43-439:46)
  10: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:439:32-439:43)
  11: _23 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:439:32-439:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:439:43-439:46)
      kind: _22 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _23, const 0_usize) -> [return: bb8, unwind: bb43]
  }
  preds [bb6]
  succs [bb8, bb43]

bb8
  0: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:439:45-439:46)
  1: _21 = ((*_22).0: char)
    SourceInfo(regex-lite/src/hir/mod.rs:439:32-439:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:439:22-439:53)
      kind: _20 = hir::prev_char(move _21) -> [return: bb9, unwind: bb43]
  }
  preds [bb7]
  succs [bb9, bb43]

bb9
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:439:52-439:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:439:22-439:62)
      kind: _19 = core::option::Option::<char>::unwrap(move _20) -> [return: bb10, unwind: bb43]
  }
  preds [bb8]
  succs [bb10, bb43]

bb10
  0: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:439:61-439:62)
  1: _18 = hir::ClassRange { start: const hir::Class::negate::MIN, end: move _19 }
    SourceInfo(regex-lite/src/hir/mod.rs:436:30-440:14)
  2: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:440:13-440:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:436:13-440:15)
      kind: _16 = alloc::vec::Vec::<hir::ClassRange>::push(move _17, move _18) -> [return: bb11, unwind: bb43]
  }
  preds [bb9]
  succs [bb11, bb43]

bb11
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:440:14-440:15)
  1: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:440:14-440:15)
  2: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:440:15-440:16)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:440:15-440:16)
  4: _11 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:435:39-441:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:435:9-441:10)
      kind: goto -> bb13
  }
  preds [bb10]
  succs [bb13]

bb12
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:435:37-435:38)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:435:37-435:38)
  2: _11 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:441:10-441:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:435:9-441:10)
      kind: goto -> bb13
  }
  preds [bb6]
  succs [bb13]

bb13
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:441:9-441:10)
  1: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:441:9-441:10)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  4: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  5: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:442:21-442:30)
  6: _27 = _9
    SourceInfo(regex-lite/src/hir/mod.rs:442:21-442:30)
  7: _26 = core::ops::Range::<usize> { start: const 1_usize, end: move _27 }
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  8: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:442:29-442:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
      kind: _25 = <core::ops::Range<usize> as core::iter::IntoIterator>::into_iter(move _26) -> [return: bb14, unwind: bb43]
  }
  preds [bb11, bb12]
  succs [bb14, bb43]

bb14
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:442:29-442:30)
  1: PlaceMention(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  3: _28 = move _25
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
      kind: falseUnwind -> [real: bb16, unwind: bb43]
  }
  preds [bb14, bb29]
  succs [bb16, bb43]

bb16
  0: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  1: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  2: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  3: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  4: _33 = &mut _28
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  5: _32 = &mut (*_33)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
      kind: _31 = <core::ops::Range<usize> as core::iter::Iterator>::next(move _32) -> [return: bb17, unwind: bb43]
  }
  preds [bb15]
  succs [bb17, bb43]

bb17
  0: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:442:29-442:30)
  1: PlaceMention(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  2: _34 = discriminant(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
      kind: switchInt(move _34) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _31)
    SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:18-442:30)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:442:13-442:14)
  1: _36 = ((_31 as Some).0: usize)
    SourceInfo(regex-lite/src/hir/mod.rs:442:13-442:14)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:446:13-457:15)
  3: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:446:13-446:24)
  4: _38 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:446:13-446:24)
  5: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:446:30-457:14)
  6: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:451:24-451:66)
  7: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:451:24-451:57)
  8: StorageLive(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:451:34-451:56)
  9: StorageLive(_43)
    SourceInfo(regex-lite/src/hir/mod.rs:451:45-451:52)
  10: StorageLive(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:451:34-451:45)
  11: _44 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:451:34-451:45)
  12: StorageLive(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:51)
  13: StorageLive(_46)
    SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:47)
  14: _46 = _36
    SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:47)
  15: _47 = SubWithOverflow(_46, const 1_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:51)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} - {}`, which would overflow", move _46, const 1_usize) -> [success: bb22, unwind: bb43]
  }
  preds [bb17, bb19]
  succs [bb22, bb43]

bb21
  0: _24 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  3: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  4: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  5: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  6: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  7: StorageLive(_54)
    SourceInfo(regex-lite/src/hir/mod.rs:459:9-468:10)
  8: StorageLive(_55)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:48)
  9: StorageLive(_56)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:42)
  10: StorageLive(_57)
    SourceInfo(regex-lite/src/hir/mod.rs:459:23-459:38)
  11: StorageLive(_58)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:23)
  12: _58 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:23)
  13: StorageLive(_59)
    SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:37)
  14: StorageLive(_60)
    SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:33)
  15: _60 = _9
    SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:33)
  16: _61 = SubWithOverflow(_60, const 1_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:37)
      kind: assert(!move (_61.1: bool), "attempt to compute `{} - {}`, which would overflow", move _60, const 1_usize) -> [success: bb30, unwind: bb43]
  }
  preds [bb19]
  succs [bb30, bb43]

bb22
  0: _45 = move (_47.0: usize)
    SourceInfo(regex-lite/src/hir/mod.rs:451:46-451:51)
  1: StorageDead(_46)
    SourceInfo(regex-lite/src/hir/mod.rs:451:50-451:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:451:45-451:52)
      kind: _43 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _44, move _45) -> [return: bb23, unwind: bb43]
  }
  preds [bb20]
  succs [bb23, bb43]

bb23
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/hir/mod.rs:451:51-451:52)
  1: StorageDead(_44)
    SourceInfo(regex-lite/src/hir/mod.rs:451:51-451:52)
  2: _42 = ((*_43).1: char)
    SourceInfo(regex-lite/src/hir/mod.rs:451:34-451:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:451:24-451:57)
      kind: _41 = hir::next_char(move _42) -> [return: bb24, unwind: bb43]
  }
  preds [bb22]
  succs [bb24, bb43]

bb24
  0: StorageDead(_42)
    SourceInfo(regex-lite/src/hir/mod.rs:451:56-451:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:451:24-451:66)
      kind: _40 = core::option::Option::<char>::unwrap(move _41) -> [return: bb25, unwind: bb43]
  }
  preds [bb23]
  succs [bb25, bb43]

bb25
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:451:65-451:66)
  1: StorageLive(_48)
    SourceInfo(regex-lite/src/hir/mod.rs:456:22-456:62)
  2: StorageLive(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:456:22-456:53)
  3: StorageLive(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:456:32-456:52)
  4: StorageLive(_51)
    SourceInfo(regex-lite/src/hir/mod.rs:456:43-456:46)
  5: StorageLive(_52)
    SourceInfo(regex-lite/src/hir/mod.rs:456:32-456:43)
  6: _52 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:456:32-456:43)
  7: StorageLive(_53)
    SourceInfo(regex-lite/src/hir/mod.rs:456:44-456:45)
  8: _53 = _36
    SourceInfo(regex-lite/src/hir/mod.rs:456:44-456:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:456:43-456:46)
      kind: _51 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _52, move _53) -> [return: bb26, unwind: bb43]
  }
  preds [bb24]
  succs [bb26, bb43]

bb26
  0: StorageDead(_53)
    SourceInfo(regex-lite/src/hir/mod.rs:456:45-456:46)
  1: StorageDead(_52)
    SourceInfo(regex-lite/src/hir/mod.rs:456:45-456:46)
  2: _50 = ((*_51).0: char)
    SourceInfo(regex-lite/src/hir/mod.rs:456:32-456:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:456:22-456:53)
      kind: _49 = hir::prev_char(move _50) -> [return: bb27, unwind: bb43]
  }
  preds [bb25]
  succs [bb27, bb43]

bb27
  0: StorageDead(_50)
    SourceInfo(regex-lite/src/hir/mod.rs:456:52-456:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:456:22-456:62)
      kind: _48 = core::option::Option::<char>::unwrap(move _49) -> [return: bb28, unwind: bb43]
  }
  preds [bb26]
  succs [bb28, bb43]

bb28
  0: StorageDead(_49)
    SourceInfo(regex-lite/src/hir/mod.rs:456:61-456:62)
  1: _39 = hir::ClassRange { start: move _40, end: move _48 }
    SourceInfo(regex-lite/src/hir/mod.rs:446:30-457:14)
  2: StorageDead(_48)
    SourceInfo(regex-lite/src/hir/mod.rs:457:13-457:14)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:457:13-457:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:446:13-457:15)
      kind: _37 = alloc::vec::Vec::<hir::ClassRange>::push(move _38, move _39) -> [return: bb29, unwind: bb43]
  }
  preds [bb27]
  succs [bb29, bb43]

bb29
  0: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:457:14-457:15)
  1: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:457:14-457:15)
  2: StorageDead(_51)
    SourceInfo(regex-lite/src/hir/mod.rs:457:15-457:16)
  3: StorageDead(_43)
    SourceInfo(regex-lite/src/hir/mod.rs:457:15-457:16)
  4: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:457:15-457:16)
  5: _30 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:442:31-458:10)
  6: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  7: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  8: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  9: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:458:9-458:10)
  10: _29 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:442:9-458:10)
      kind: goto -> bb15
  }
  preds [bb28]
  succs [bb15]

bb30
  0: _59 = move (_61.0: usize)
    SourceInfo(regex-lite/src/hir/mod.rs:459:24-459:37)
  1: StorageDead(_60)
    SourceInfo(regex-lite/src/hir/mod.rs:459:36-459:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:459:23-459:38)
      kind: _57 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _58, move _59) -> [return: bb31, unwind: bb43]
  }
  preds [bb21]
  succs [bb31, bb43]

bb31
  0: StorageDead(_59)
    SourceInfo(regex-lite/src/hir/mod.rs:459:37-459:38)
  1: StorageDead(_58)
    SourceInfo(regex-lite/src/hir/mod.rs:459:37-459:38)
  2: _56 = ((*_57).1: char)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:42)
  3: _55 = Lt(move _56, const hir::Class::negate::MAX)
    SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:459:12-459:48)
      kind: switchInt(move _55) -> [0: bb38, otherwise: bb32]
  }
  preds [bb30]
  succs [bb32, bb38]

bb32
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/mod.rs:459:47-459:48)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/mod.rs:459:47-459:48)
  2: StorageLive(_62)
    SourceInfo(regex-lite/src/hir/mod.rs:462:13-467:15)
  3: StorageLive(_63)
    SourceInfo(regex-lite/src/hir/mod.rs:462:13-462:24)
  4: _63 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:462:13-462:24)
  5: StorageLive(_64)
    SourceInfo(regex-lite/src/hir/mod.rs:462:30-467:14)
  6: StorageLive(_65)
    SourceInfo(regex-lite/src/hir/mod.rs:465:24-465:74)
  7: StorageLive(_66)
    SourceInfo(regex-lite/src/hir/mod.rs:465:24-465:65)
  8: StorageLive(_67)
    SourceInfo(regex-lite/src/hir/mod.rs:465:34-465:64)
  9: StorageLive(_68)
    SourceInfo(regex-lite/src/hir/mod.rs:465:45-465:60)
  10: StorageLive(_69)
    SourceInfo(regex-lite/src/hir/mod.rs:465:34-465:45)
  11: _69 = &((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:465:34-465:45)
  12: StorageLive(_70)
    SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:59)
  13: StorageLive(_71)
    SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:55)
  14: _71 = _9
    SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:55)
  15: _72 = SubWithOverflow(_71, const 1_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:59)
      kind: assert(!move (_72.1: bool), "attempt to compute `{} - {}`, which would overflow", move _71, const 1_usize) -> [success: bb33, unwind: bb43]
  }
  preds [bb31]
  succs [bb33, bb43]

bb33
  0: _70 = move (_72.0: usize)
    SourceInfo(regex-lite/src/hir/mod.rs:465:46-465:59)
  1: StorageDead(_71)
    SourceInfo(regex-lite/src/hir/mod.rs:465:58-465:59)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:465:45-465:60)
      kind: _68 = <alloc::vec::Vec<hir::ClassRange> as core::ops::Index<usize>>::index(move _69, move _70) -> [return: bb34, unwind: bb43]
  }
  preds [bb32]
  succs [bb34, bb43]

bb34
  0: StorageDead(_70)
    SourceInfo(regex-lite/src/hir/mod.rs:465:59-465:60)
  1: StorageDead(_69)
    SourceInfo(regex-lite/src/hir/mod.rs:465:59-465:60)
  2: _67 = ((*_68).1: char)
    SourceInfo(regex-lite/src/hir/mod.rs:465:34-465:64)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:465:24-465:65)
      kind: _66 = hir::next_char(move _67) -> [return: bb35, unwind: bb43]
  }
  preds [bb33]
  succs [bb35, bb43]

bb35
  0: StorageDead(_67)
    SourceInfo(regex-lite/src/hir/mod.rs:465:64-465:65)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:465:24-465:74)
      kind: _65 = core::option::Option::<char>::unwrap(move _66) -> [return: bb36, unwind: bb43]
  }
  preds [bb34]
  succs [bb36, bb43]

bb36
  0: StorageDead(_66)
    SourceInfo(regex-lite/src/hir/mod.rs:465:73-465:74)
  1: _64 = hir::ClassRange { start: move _65, end: const hir::Class::negate::MAX }
    SourceInfo(regex-lite/src/hir/mod.rs:462:30-467:14)
  2: StorageDead(_65)
    SourceInfo(regex-lite/src/hir/mod.rs:467:13-467:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:462:13-467:15)
      kind: _62 = alloc::vec::Vec::<hir::ClassRange>::push(move _63, move _64) -> [return: bb37, unwind: bb43]
  }
  preds [bb35]
  succs [bb37, bb43]

bb37
  0: StorageDead(_64)
    SourceInfo(regex-lite/src/hir/mod.rs:467:14-467:15)
  1: StorageDead(_63)
    SourceInfo(regex-lite/src/hir/mod.rs:467:14-467:15)
  2: StorageDead(_68)
    SourceInfo(regex-lite/src/hir/mod.rs:467:15-467:16)
  3: StorageDead(_62)
    SourceInfo(regex-lite/src/hir/mod.rs:467:15-467:16)
  4: _54 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:459:49-468:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:459:9-468:10)
      kind: goto -> bb39
  }
  preds [bb36]
  succs [bb39]

bb38
  0: StorageDead(_57)
    SourceInfo(regex-lite/src/hir/mod.rs:459:47-459:48)
  1: StorageDead(_56)
    SourceInfo(regex-lite/src/hir/mod.rs:459:47-459:48)
  2: _54 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:468:10-468:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:459:9-468:10)
      kind: goto -> bb39
  }
  preds [bb31]
  succs [bb39]

bb39
  0: StorageDead(_55)
    SourceInfo(regex-lite/src/hir/mod.rs:468:9-468:10)
  1: StorageDead(_54)
    SourceInfo(regex-lite/src/hir/mod.rs:468:9-468:10)
  2: StorageLive(_73)
    SourceInfo(regex-lite/src/hir/mod.rs:469:9-469:39)
  3: StorageLive(_74)
    SourceInfo(regex-lite/src/hir/mod.rs:469:9-469:20)
  4: _74 = &mut ((*_1).0: alloc::vec::Vec<hir::ClassRange>)
    SourceInfo(regex-lite/src/hir/mod.rs:469:9-469:20)
  5: StorageLive(_75)
    SourceInfo(regex-lite/src/hir/mod.rs:469:27-469:38)
  6: StorageLive(_76)
    SourceInfo(regex-lite/src/hir/mod.rs:469:29-469:38)
  7: _76 = _9
    SourceInfo(regex-lite/src/hir/mod.rs:469:29-469:38)
  8: _75 = core::ops::RangeTo::<usize> { end: move _76 }
    SourceInfo(regex-lite/src/hir/mod.rs:469:27-469:38)
  9: StorageDead(_76)
    SourceInfo(regex-lite/src/hir/mod.rs:469:37-469:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:469:9-469:39)
      kind: _73 = alloc::vec::Vec::<hir::ClassRange>::drain::<core::ops::RangeTo<usize>>(move _74, move _75) -> [return: bb40, unwind: bb43]
  }
  preds [bb37, bb38]
  succs [bb40, bb43]

bb40
  0: StorageDead(_75)
    SourceInfo(regex-lite/src/hir/mod.rs:469:38-469:39)
  1: StorageDead(_74)
    SourceInfo(regex-lite/src/hir/mod.rs:469:38-469:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:469:39-469:40)
      kind: drop(_73) -> [return: bb41, unwind: bb43]
  }
  preds [bb39]
  succs [bb41, bb43]

bb41
  0: StorageDead(_73)
    SourceInfo(regex-lite/src/hir/mod.rs:469:39-469:40)
  1: _0 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:418:26-473:6)
  2: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:473:5-473:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:473:6-473:6)
      kind: goto -> bb42
  }
  preds [bb40]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:473:6-473:6)
      kind: return
  }
  preds [bb3, bb41]
  succs []

bb43
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:418:5-473:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb5, bb7, bb8, bb9, bb10, bb13, bb15, bb16, bb20, bb21, bb22, bb23, bb24, bb25, bb26, bb27, bb28, bb30, bb32, bb33, bb34, bb35, bb36, bb39, bb40]
  succs []

