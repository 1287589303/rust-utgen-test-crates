{
  "regex-lite/src/hir/mod.rs:459:12:459:48": [
    {
      "Bool": {
        "Binary": {
          "kind": "Lt",
          "expr": "self.ranges[drain_end - 1].end < MAX",
          "lhs": "self.ranges[drain_end - 1].end",
          "rhs": "MAX",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:422:12:422:34": [
    {
      "Bool": {
        "Other": "self.ranges.is_empty()"
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:459:24:459:37": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "drain_end - 1",
          "lhs": "drain_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:451:46:451:51": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "i - 1",
          "lhs": "i",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:442:18:442:30": [
    {
      "For": {
        "iter_var": "i",
        "iter_range": "1..drain_end"
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:435:12:435:38": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "self.ranges[0].start > MIN",
          "lhs": "self.ranges[0].start",
          "rhs": "MIN",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:465:46:465:59": [
    {
      "Bool": {
        "Binary": {
          "kind": "Other",
          "expr": "drain_end - 1",
          "lhs": "drain_end",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ]
}