Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).1),
            pat: Pat {
                hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).2),
                    b#0,
                    None,
                ),
                span: regex-lite/src/utf8.rs:3:28: 3:29 (#0),
                default_binding_modes: true,
            },
            ty_span: regex-lite/src/utf8.rs:3:31: 3:33 (#0),
            span: regex-lite/src/utf8.rs:3:28: 3:33 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).14),
        kind: Block(
            Block {
                stmts: [
                    Stmt {
                        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).3),
                        kind: Item(
                            ItemId {
                                owner_id: DefId(0:728 ~ regex_lite[fbae]::utf8::is_word_byte::mkwordset),
                            },
                        ),
                        span: regex-lite/src/utf8.rs:4:5: 25:6 (#0),
                    },
                    Stmt {
                        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).4),
                        kind: Item(
                            ItemId {
                                owner_id: DefId(0:731 ~ regex_lite[fbae]::utf8::is_word_byte::WORD),
                            },
                        ),
                        span: regex-lite/src/utf8.rs:26:5: 26:43 (#0),
                    },
                ],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).5),
                        kind: Index(
                            Expr {
                                hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).6),
                                kind: Path(
                                    Resolved(
                                        None,
                                        Path {
                                            span: regex-lite/src/utf8.rs:27:5: 27:9 (#0),
                                            res: Def(
                                                Const,
                                                DefId(0:731 ~ regex_lite[fbae]::utf8::is_word_byte::WORD),
                                            ),
                                            segments: [
                                                PathSegment {
                                                    ident: WORD#0,
                                                    hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).7),
                                                    res: Def(
                                                        Const,
                                                        DefId(0:731 ~ regex_lite[fbae]::utf8::is_word_byte::WORD),
                                                    ),
                                                    args: None,
                                                    infer_args: true,
                                                },
                                            ],
                                        },
                                    ),
                                ),
                                span: regex-lite/src/utf8.rs:27:5: 27:9 (#0),
                            },
                            Expr {
                                hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).8),
                                kind: Cast(
                                    Expr {
                                        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).9),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: regex-lite/src/utf8.rs:27:10: 27:11 (#0),
                                                    res: Local(
                                                        HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).2),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: b#0,
                                                            hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).10),
                                                            res: Local(
                                                                HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).2),
                                                            ),
                                                            args: None,
                                                            infer_args: true,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: regex-lite/src/utf8.rs:27:10: 27:11 (#0),
                                    },
                                    Ty {
                                        hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).11),
                                        kind: Path(
                                            Resolved(
                                                None,
                                                Path {
                                                    span: regex-lite/src/utf8.rs:27:15: 27:20 (#0),
                                                    res: PrimTy(
                                                        Uint(
                                                            Usize,
                                                        ),
                                                    ),
                                                    segments: [
                                                        PathSegment {
                                                            ident: usize#0,
                                                            hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).12),
                                                            res: PrimTy(
                                                                Uint(
                                                                    Usize,
                                                                ),
                                                            ),
                                                            args: None,
                                                            infer_args: false,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ),
                                        span: regex-lite/src/utf8.rs:27:15: 27:20 (#0),
                                    },
                                ),
                                span: regex-lite/src/utf8.rs:27:10: 27:20 (#0),
                            },
                            regex-lite/src/utf8.rs:27:9: 27:21 (#0),
                        ),
                        span: regex-lite/src/utf8.rs:27:5: 27:21 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:727 ~ regex_lite[fbae]::utf8::is_word_byte).13),
                rules: DefaultBlock,
                span: regex-lite/src/utf8.rs:3:43: 28:2 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-lite/src/utf8.rs:3:43: 28:2 (#0),
    },
}