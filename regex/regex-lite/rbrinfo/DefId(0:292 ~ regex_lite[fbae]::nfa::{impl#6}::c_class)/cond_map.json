{
  "regex-lite/src/nfa.rs:338:18:349:11": [
    {
      "Try": "if class.ranges.is_empty() {\n            // Technically using an explicit fail state probably isn't\n            // necessary. Because if you try to match against an empty Ranges,\n            // then it should turn up with nothing regardless of input, and\n            // thus \"acts\" like a Fail state. But it's better to be more\n            // explicit, and there's no real cost to doing so.\n            self.add(State::Fail)\n        } else {\n            let ranges =\n                class.ranges.iter().map(|r| (r.start, r.end)).collect();\n            self.add(State::Ranges { target: 0, ranges })\n        }?"
    }
  ],
  "regex-lite/src/nfa.rs:338:21:338:44": [
    {
      "Bool": {
        "Other": "class.ranges.is_empty()"
      }
    }
  ]
}