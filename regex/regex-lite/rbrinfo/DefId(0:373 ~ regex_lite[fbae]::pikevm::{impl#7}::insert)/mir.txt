bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:859:9-861:10)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:859:12-859:29)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:859:12-859:16)
  3: _5 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:859:12-859:16)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:859:26-859:28)
  5: _6 = _2
    SourceInfo(regex-lite/src/pikevm.rs:859:26-859:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:859:12-859:29)
      kind: _4 = pikevm::SparseSet::contains(move _5, move _6) -> [return: bb1, unwind: bb20]
  }
  preds []
  succs [bb1, bb20]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:859:12-859:29)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:859:28-859:29)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:859:28-859:29)
  2: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:860:20-860:25)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:861:9-861:10)
  4: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:861:9-861:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:877:6-877:6)
      kind: goto -> bb19
  }
  preds [bb1]
  succs [bb19]

bb3
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:859:28-859:29)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:859:28-859:29)
  2: _3 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:861:10-861:10)
  3: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:861:9-861:10)
  4: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:861:9-861:10)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:863:13-863:18)
  6: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:863:21-863:25)
  7: _9 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:863:21-863:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:863:21-863:31)
      kind: _8 = pikevm::SparseSet::len(move _9) -> [return: bb4, unwind: bb20]
  }
  preds [bb1]
  succs [bb4, bb20]

bb4
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:863:30-863:31)
  1: FakeRead(ForLet(None), _8)
    SourceInfo(regex-lite/src/pikevm.rs:863:13-863:18)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:864:9-870:10)
  3: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:865:13-865:36)
  4: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:865:13-865:18)
  5: _12 = _8
    SourceInfo(regex-lite/src/pikevm.rs:865:13-865:18)
  6: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:865:21-865:36)
  7: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:865:21-865:25)
  8: _14 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:865:21-865:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:865:21-865:36)
      kind: _13 = pikevm::SparseSet::capacity(move _14) -> [return: bb5, unwind: bb20]
  }
  preds [bb3]
  succs [bb5, bb20]

bb5
  0: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:865:35-865:36)
  1: _11 = Lt(move _12, move _13)
    SourceInfo(regex-lite/src/pikevm.rs:865:13-865:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:865:13-865:36)
      kind: switchInt(move _11) -> [0: bb7, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7]

bb6
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:865:35-865:36)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:865:35-865:36)
  2: _10 = const ()
    SourceInfo(regex-lite/src/pikevm.rs:870:10-870:10)
  3: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:870:9-870:10)
  4: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:870:9-870:10)
  5: StorageLive(_35)
    SourceInfo(regex-lite/src/pikevm.rs:871:29-871:31)
  6: _35 = _2
    SourceInfo(regex-lite/src/pikevm.rs:871:29-871:31)
  7: StorageLive(_36)
    SourceInfo(regex-lite/src/pikevm.rs:871:19-871:26)
  8: StorageLive(_37)
    SourceInfo(regex-lite/src/pikevm.rs:871:9-871:19)
  9: _37 = &mut ((*_1).1: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:871:9-871:19)
  10: StorageLive(_38)
    SourceInfo(regex-lite/src/pikevm.rs:871:20-871:25)
  11: _38 = _8
    SourceInfo(regex-lite/src/pikevm.rs:871:20-871:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:871:19-871:26)
      kind: _36 = <alloc::vec::Vec<u32> as core::ops::IndexMut<usize>>::index_mut(move _37, move _38) -> [return: bb13, unwind: bb20]
  }
  preds [bb5]
  succs [bb13, bb20]

bb7
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:865:35-865:36)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:865:35-865:36)
  2: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
  3: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  4: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  5: StorageLive(_19)
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  6: StorageLive(_20)
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  7: _20 = [const "", const " exceeds capacity of ", const " when inserting "]
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  8: _19 = &_20
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  9: _18 = &(*_19)
    SourceInfo(regex-lite/src/pikevm.rs:866:13-866:64)
  10: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  11: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  12: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  13: StorageLive(_24)
    SourceInfo(regex-lite/src/pikevm.rs:866:14-866:18)
  14: StorageLive(_25)
    SourceInfo(regex-lite/src/pikevm.rs:867:13-867:18)
  15: StorageLive(_26)
    SourceInfo(regex-lite/src/pikevm.rs:867:13-867:18)
  16: _26 = &_8
    SourceInfo(regex-lite/src/pikevm.rs:867:13-867:18)
  17: _25 = &(*_26)
    SourceInfo(regex-lite/src/pikevm.rs:867:13-867:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:866:14-866:18)
      kind: _24 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _25) -> [return: bb8, unwind: bb20]
  }
  preds [bb5]
  succs [bb8, bb20]

bb8
  0: StorageDead(_25)
    SourceInfo(regex-lite/src/pikevm.rs:866:17-866:18)
  1: StorageLive(_27)
    SourceInfo(regex-lite/src/pikevm.rs:866:39-866:43)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
  3: StorageLive(_29)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
  4: StorageLive(_30)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
  5: StorageLive(_31)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:17)
  6: _31 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
      kind: _30 = pikevm::SparseSet::capacity(move _31) -> [return: bb9, unwind: bb20]
  }
  preds [bb7]
  succs [bb9, bb20]

bb9
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/pikevm.rs:868:27-868:28)
  1: _29 = &_30
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
  2: _28 = &(*_29)
    SourceInfo(regex-lite/src/pikevm.rs:868:13-868:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:866:39-866:43)
      kind: _27 = core::fmt::rt::Argument::<'_>::new_debug::<usize>(move _28) -> [return: bb10, unwind: bb20]
  }
  preds [bb8]
  succs [bb10, bb20]

bb10
  0: StorageDead(_28)
    SourceInfo(regex-lite/src/pikevm.rs:866:42-866:43)
  1: StorageLive(_32)
    SourceInfo(regex-lite/src/pikevm.rs:866:59-866:63)
  2: StorageLive(_33)
    SourceInfo(regex-lite/src/pikevm.rs:869:13-869:15)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/pikevm.rs:869:13-869:15)
  4: _34 = &_2
    SourceInfo(regex-lite/src/pikevm.rs:869:13-869:15)
  5: _33 = &(*_34)
    SourceInfo(regex-lite/src/pikevm.rs:869:13-869:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:866:59-866:63)
      kind: _32 = core::fmt::rt::Argument::<'_>::new_debug::<u32>(move _33) -> [return: bb11, unwind: bb20]
  }
  preds [bb9]
  succs [bb11, bb20]

bb11
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/pikevm.rs:866:62-866:63)
  1: _23 = [move _24, move _27, move _32]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  2: StorageDead(_32)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  3: StorageDead(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  4: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  5: _22 = &_23
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  6: _21 = &(*_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:38-108:72)
      kind: _17 = core::fmt::Arguments::<'_>::new_v1::<3, 3>(move _18, move _21) -> [return: bb12, unwind: bb20]
  }
  preds [bb10]
  succs [bb12, bb20]

bb12
  0: StorageDead(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  1: StorageDead(_18)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:71-108:72)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:108:9-108:73)
      kind: _16 = core::panicking::panic_fmt(move _17) -> bb20
  }
  preds [bb11]
  succs [bb20]

bb13
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/pikevm.rs:871:25-871:26)
  1: StorageDead(_37)
    SourceInfo(regex-lite/src/pikevm.rs:871:25-871:26)
  2: (*_36) = move _35
    SourceInfo(regex-lite/src/pikevm.rs:871:9-871:31)
  3: StorageDead(_35)
    SourceInfo(regex-lite/src/pikevm.rs:871:30-871:31)
  4: StorageDead(_36)
    SourceInfo(regex-lite/src/pikevm.rs:871:31-871:32)
  5: StorageLive(_39)
    SourceInfo(regex-lite/src/pikevm.rs:874:38-874:67)
  6: StorageLive(_40)
    SourceInfo(regex-lite/src/pikevm.rs:874:38-874:58)
  7: StorageLive(_41)
    SourceInfo(regex-lite/src/pikevm.rs:874:52-874:57)
  8: _41 = _8
    SourceInfo(regex-lite/src/pikevm.rs:874:52-874:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:874:38-874:58)
      kind: _40 = <u32 as core::convert::TryFrom<usize>>::try_from(move _41) -> [return: bb14, unwind: bb20]
  }
  preds [bb6]
  succs [bb14, bb20]

bb14
  0: StorageDead(_41)
    SourceInfo(regex-lite/src/pikevm.rs:874:57-874:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:874:38-874:67)
      kind: _39 = core::result::Result::<u32, core::num::TryFromIntError>::unwrap(move _40) -> [return: bb15, unwind: bb20]
  }
  preds [bb13]
  succs [bb15, bb20]

bb15
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/pikevm.rs:874:66-874:67)
  1: StorageLive(_42)
    SourceInfo(regex-lite/src/pikevm.rs:874:20-874:35)
  2: StorageLive(_43)
    SourceInfo(regex-lite/src/pikevm.rs:874:9-874:20)
  3: _43 = &mut ((*_1).2: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:874:9-874:20)
  4: StorageLive(_44)
    SourceInfo(regex-lite/src/pikevm.rs:874:21-874:34)
  5: StorageLive(_45)
    SourceInfo(regex-lite/src/pikevm.rs:874:21-874:23)
  6: _45 = _2
    SourceInfo(regex-lite/src/pikevm.rs:874:21-874:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:874:21-874:34)
      kind: _44 = <u32 as int::U32>::as_usize(move _45) -> [return: bb16, unwind: bb20]
  }
  preds [bb14]
  succs [bb16, bb20]

bb16
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/pikevm.rs:874:33-874:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:874:20-874:35)
      kind: _42 = <alloc::vec::Vec<u32> as core::ops::IndexMut<usize>>::index_mut(move _43, move _44) -> [return: bb17, unwind: bb20]
  }
  preds [bb15]
  succs [bb17, bb20]

bb17
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/pikevm.rs:874:34-874:35)
  1: StorageDead(_43)
    SourceInfo(regex-lite/src/pikevm.rs:874:34-874:35)
  2: (*_42) = move _39
    SourceInfo(regex-lite/src/pikevm.rs:874:9-874:67)
  3: StorageDead(_39)
    SourceInfo(regex-lite/src/pikevm.rs:874:66-874:67)
  4: StorageDead(_42)
    SourceInfo(regex-lite/src/pikevm.rs:874:67-874:68)
  5: _46 = AddWithOverflow(((*_1).0: usize), const 1_usize)
    SourceInfo(regex-lite/src/pikevm.rs:875:9-875:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:875:9-875:22)
      kind: assert(!move (_46.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).0: usize), const 1_usize) -> [success: bb18, unwind: bb20]
  }
  preds [bb16]
  succs [bb18, bb20]

bb18
  0: ((*_1).0: usize) = move (_46.0: usize)
    SourceInfo(regex-lite/src/pikevm.rs:875:9-875:22)
  1: _0 = const true
    SourceInfo(regex-lite/src/pikevm.rs:876:9-876:13)
  2: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:877:5-877:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:877:6-877:6)
      kind: goto -> bb19
  }
  preds [bb17]
  succs [bb19]

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:877:6-877:6)
      kind: return
  }
  preds [bb2, bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:858:5-877:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17]
  succs []

