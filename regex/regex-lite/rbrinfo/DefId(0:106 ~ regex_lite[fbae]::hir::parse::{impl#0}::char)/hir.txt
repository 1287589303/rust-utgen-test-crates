Body {
    params: [
        Param {
            hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).1),
            pat: Pat {
                hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).2),
                kind: Binding(
                    BindingMode(
                        No,
                        Not,
                    ),
                    HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).2),
                    self#0,
                    None,
                ),
                span: regex-lite/src/hir/parse.rs:215:13: 215:18 (#0),
                default_binding_modes: true,
            },
            ty_span: regex-lite/src/hir/parse.rs:215:13: 215:18 (#0),
            span: regex-lite/src/hir/parse.rs:215:13: 215:18 (#0),
        },
    ],
    value: Expr {
        hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).12),
        kind: Block(
            Block {
                stmts: [],
                expr: Some(
                    Expr {
                        hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).3),
                        kind: MethodCall(
                            PathSegment {
                                ident: expect#0,
                                hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).4),
                                res: Err,
                                args: None,
                                infer_args: true,
                            },
                            Expr {
                                hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).5),
                                kind: MethodCall(
                                    PathSegment {
                                        ident: get#0,
                                        hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).6),
                                        res: Err,
                                        args: None,
                                        infer_args: true,
                                    },
                                    Expr {
                                        hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).7),
                                        kind: Field(
                                            Expr {
                                                hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).8),
                                                kind: Path(
                                                    Resolved(
                                                        None,
                                                        Path {
                                                            span: regex-lite/src/hir/parse.rs:216:9: 216:13 (#0),
                                                            res: Local(
                                                                HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).2),
                                                            ),
                                                            segments: [
                                                                PathSegment {
                                                                    ident: self#0,
                                                                    hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).9),
                                                                    res: Local(
                                                                        HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).2),
                                                                    ),
                                                                    args: None,
                                                                    infer_args: true,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                span: regex-lite/src/hir/parse.rs:216:9: 216:13 (#0),
                                            },
                                            char#0,
                                        ),
                                        span: regex-lite/src/hir/parse.rs:216:9: 216:18 (#0),
                                    },
                                    [],
                                    regex-lite/src/hir/parse.rs:216:19: 216:24 (#0),
                                ),
                                span: regex-lite/src/hir/parse.rs:216:9: 216:24 (#0),
                            },
                            [
                                Expr {
                                    hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).10),
                                    kind: Lit(
                                        Spanned {
                                            node: Str(
                                                "codepoint, but parser is done",
                                                Cooked,
                                            ),
                                            span: regex-lite/src/hir/parse.rs:216:32: 216:63 (#0),
                                        },
                                    ),
                                    span: regex-lite/src/hir/parse.rs:216:32: 216:63 (#0),
                                },
                            ],
                            regex-lite/src/hir/parse.rs:216:25: 216:64 (#0),
                        ),
                        span: regex-lite/src/hir/parse.rs:216:9: 216:64 (#0),
                    },
                ),
                hir_id: HirId(DefId(0:106 ~ regex_lite[fbae]::hir::parse::{impl#0}::char).11),
                rules: DefaultBlock,
                span: regex-lite/src/hir/parse.rs:215:28: 217:6 (#0),
                targeted_by_break: false,
            },
            None,
        ),
        span: regex-lite/src/hir/parse.rs:215:28: 217:6 (#0),
    },
}