bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/string.rs:2615:9-2615:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:2615:13-2615:14)
  2: _3 = &(*_1)
    SourceInfo(regex-lite/src/string.rs:2615:13-2615:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2615:13-2615:23)
      kind: _2 = <T as core::convert::AsRef<str>>::as_ref(move _3) -> [return: bb1, unwind: bb9]
  }
  preds []
  succs [bb1, bb9]

bb1
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2615:22-2615:23)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/string.rs:2615:9-2615:10)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
  3: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:12)
  4: _5 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:12)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
      kind: _4 = core::str::<impl str>::find::<'_, char>(move _5, const '$') -> [return: bb2, unwind: bb9]
  }
  preds [bb0]
  succs [bb2, bb9]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:2616:21-2616:22)
  1: PlaceMention(_4)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
  2: _6 = discriminant(_4)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2616:5-2616:22)
      kind: switchInt(move _6) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2616:11-2616:22)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2617:9-2617:16)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_7)
    SourceInfo(regex-lite/src/string.rs:2618:22-2618:38)
  1: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:2618:36-2618:37)
  2: _8 = &(*_2)
    SourceInfo(regex-lite/src/string.rs:2618:36-2618:37)
  3: _7 = alloc::borrow::Cow::<'_, str>::Borrowed(move _8)
    SourceInfo(regex-lite/src/string.rs:2618:22-2618:38)
  4: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:2618:37-2618:38)
  5: _0 = core::option::Option::<alloc::borrow::Cow<'_, str>>::Some(move _7)
    SourceInfo(regex-lite/src/string.rs:2618:17-2618:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2618:38-2618:39)
      kind: drop(_7) -> [return: bb7, unwind: bb9]
  }
  preds [bb2, bb4]
  succs [bb7, bb9]

bb6
  0: _0 = core::option::Option::<alloc::borrow::Cow<'_, str>>::None
    SourceInfo(regex-lite/src/string.rs:2617:20-2617:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2617:20-2617:24)
      kind: goto -> bb8
  }
  preds [bb4]
  succs [bb8]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/string.rs:2618:38-2618:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2618:38-2618:39)
      kind: goto -> bb8
  }
  preds [bb5]
  succs [bb8]

bb8
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/string.rs:2620:1-2620:2)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:2620:1-2620:2)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2620:2-2620:2)
      kind: return
  }
  preds [bb6, bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2614:1-2620:2)
      kind: resume
  }
  preds [bb0, bb1, bb5]
  succs []

