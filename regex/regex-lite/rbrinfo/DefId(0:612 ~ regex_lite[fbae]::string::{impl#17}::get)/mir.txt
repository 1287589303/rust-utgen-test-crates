bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/string.rs:2106:13-2106:17)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:36)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:21)
  4: _6 = _2
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:21)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:20-2106:36)
      kind: _5 = core::num::<impl usize>::checked_mul(move _6, const 2_usize) -> [return: bb1, unwind: bb53]
  }
  preds []
  succs [bb1, bb53]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/string.rs:2106:35-2106:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
      kind: _4 = <core::option::Option<usize> as core::ops::Try>::branch(move _5) -> [return: bb2, unwind: bb53]
  }
  preds [bb0]
  succs [bb2, bb53]

bb2
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  1: PlaceMention(_4)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  2: _7 = discriminant(_4)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
      kind: switchInt(move _7) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  1: _11 = ((_4 as Continue).0: usize)
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  2: _3 = _11
    SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
  3: StorageDead(_11)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  4: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/string.rs:2106:13-2106:17)
  5: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:2106:37-2106:38)
  6: StorageLive(_12)
    SourceInfo(regex-lite/src/string.rs:2107:13-2107:18)
  7: StorageLive(_13)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  8: StorageLive(_14)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  9: StorageLive(_15)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  10: StorageLive(_16)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  11: StorageLive(_17)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:46)
  12: StorageLive(_18)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:37)
  13: StorageLive(_19)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:27)
  14: StorageLive(_20)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:37)
  15: StorageLive(_21)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:27)
  16: _21 = &((*_1).0: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:37)
      kind: _20 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Deref>::deref(move _21) -> [return: bb8, unwind: bb53]
  }
  preds [bb2, bb4]
  succs [bb8, bb53]

bb6
  0: StorageLive(_8)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  1: _8 = ((_4 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  3: _10 = _8
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2106:20-2106:37)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _10) -> [return: bb7, unwind: bb53]
  }
  preds [bb4]
  succs [bb7, bb53]

bb7
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  1: StorageDead(_8)
    SourceInfo(regex-lite/src/string.rs:2106:36-2106:37)
  2: StorageDead(_4)
    SourceInfo(regex-lite/src/string.rs:2106:37-2106:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb6]
  succs [bb51]

bb8
  0: _19 = &(*_20)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:27)
  1: StorageDead(_21)
    SourceInfo(regex-lite/src/string.rs:2107:26-2107:27)
  2: StorageLive(_22)
    SourceInfo(regex-lite/src/string.rs:2107:32-2107:36)
  3: _22 = _3
    SourceInfo(regex-lite/src/string.rs:2107:32-2107:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:37)
      kind: _18 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::get::<usize>(move _19, move _22) -> [return: bb9, unwind: bb53]
  }
  preds [bb5]
  succs [bb9, bb53]

bb9
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/string.rs:2107:36-2107:37)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/string.rs:2107:36-2107:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:46)
      kind: _17 = core::option::Option::<&core::option::Option<int::NonMaxUsize>>::copied(move _18) -> [return: bb10, unwind: bb53]
  }
  preds [bb8]
  succs [bb10, bb53]

bb10
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/string.rs:2107:45-2107:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
      kind: _16 = <core::option::Option<core::option::Option<int::NonMaxUsize>> as core::ops::Try>::branch(move _17) -> [return: bb11, unwind: bb53]
  }
  preds [bb9]
  succs [bb11, bb53]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  1: PlaceMention(_16)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  2: _23 = discriminant(_16)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
      kind: switchInt(move _23) -> [0: bb14, 1: bb13, otherwise: bb12]
  }
  preds [bb10]
  succs [bb12, bb13, bb14]

bb12
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
      kind: unreachable
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
      kind: falseEdge -> [real: bb15, imaginary: bb14]
  }
  preds [bb11]
  succs [bb14, bb15]

bb14
  0: StorageLive(_27)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  1: _27 = ((_16 as Continue).0: core::option::Option<int::NonMaxUsize>)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  2: _15 = _27
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
  3: StorageDead(_27)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
      kind: _14 = <core::option::Option<int::NonMaxUsize> as core::ops::Try>::branch(move _15) -> [return: bb17, unwind: bb53]
  }
  preds [bb11, bb13]
  succs [bb17, bb53]

bb15
  0: StorageLive(_24)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  1: _24 = ((_16 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  2: StorageLive(_26)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  3: _26 = _24
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:47)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _26) -> [return: bb16, unwind: bb53]
  }
  preds [bb13]
  succs [bb16, bb53]

bb16
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  1: StorageDead(_24)
    SourceInfo(regex-lite/src/string.rs:2107:46-2107:47)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb15]
  succs [bb49]

bb17
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  1: PlaceMention(_14)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  2: _28 = discriminant(_14)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
      kind: switchInt(move _28) -> [0: bb20, 1: bb19, otherwise: bb18]
  }
  preds [bb14]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _14)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_32)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  1: _32 = ((_14 as Continue).0: int::NonMaxUsize)
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  2: _13 = _32
    SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
  3: StorageDead(_32)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:54)
      kind: _12 = int::NonMaxUsize::get(move _13) -> [return: bb23, unwind: bb53]
  }
  preds [bb17, bb19]
  succs [bb23, bb53]

bb21
  0: StorageLive(_29)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  1: _29 = ((_14 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  2: StorageLive(_31)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  3: _31 = _29
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2107:21-2107:48)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _31) -> [return: bb22, unwind: bb53]
  }
  preds [bb19]
  succs [bb22, bb53]

bb22
  0: StorageDead(_31)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  1: StorageDead(_29)
    SourceInfo(regex-lite/src/string.rs:2107:47-2107:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb49
  }
  preds [bb21]
  succs [bb49]

bb23
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:2107:53-2107:54)
  1: FakeRead(ForLet(None), _12)
    SourceInfo(regex-lite/src/string.rs:2107:13-2107:18)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  3: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  4: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  5: StorageLive(_33)
    SourceInfo(regex-lite/src/string.rs:2108:13-2108:17)
  6: StorageLive(_34)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  7: StorageLive(_35)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:39)
  8: StorageLive(_36)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:24)
  9: _36 = _3
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:20-2108:39)
      kind: _35 = core::num::<impl usize>::checked_add(move _36, const 1_usize) -> [return: bb24, unwind: bb53]
  }
  preds [bb20]
  succs [bb24, bb53]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/string.rs:2108:38-2108:39)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
      kind: _34 = <core::option::Option<usize> as core::ops::Try>::branch(move _35) -> [return: bb25, unwind: bb53]
  }
  preds [bb23]
  succs [bb25, bb53]

bb25
  0: StorageDead(_35)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  1: PlaceMention(_34)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  2: _37 = discriminant(_34)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
      kind: switchInt(move _37) -> [0: bb28, 1: bb27, otherwise: bb26]
  }
  preds [bb24]
  succs [bb26, bb27, bb28]

bb26
  0: FakeRead(ForMatchedPlace(None), _34)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
      kind: unreachable
  }
  preds [bb25]
  succs []

bb27
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
      kind: falseEdge -> [real: bb29, imaginary: bb28]
  }
  preds [bb25]
  succs [bb28, bb29]

bb28
  0: StorageLive(_41)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  1: _41 = ((_34 as Continue).0: usize)
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  2: _33 = _41
    SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
  3: StorageDead(_41)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  4: FakeRead(ForLet(None), _33)
    SourceInfo(regex-lite/src/string.rs:2108:13-2108:17)
  5: StorageDead(_34)
    SourceInfo(regex-lite/src/string.rs:2108:40-2108:41)
  6: StorageLive(_42)
    SourceInfo(regex-lite/src/string.rs:2109:13-2109:16)
  7: StorageLive(_43)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  8: StorageLive(_44)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  9: StorageLive(_45)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  10: StorageLive(_46)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  11: StorageLive(_47)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:44)
  12: StorageLive(_48)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:35)
  13: StorageLive(_49)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:25)
  14: StorageLive(_50)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:35)
  15: StorageLive(_51)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:25)
  16: _51 = &((*_1).0: alloc::vec::Vec<core::option::Option<int::NonMaxUsize>>)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:25)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:35)
      kind: _50 = <alloc::vec::Vec<core::option::Option<int::NonMaxUsize>> as core::ops::Deref>::deref(move _51) -> [return: bb31, unwind: bb53]
  }
  preds [bb25, bb27]
  succs [bb31, bb53]

bb29
  0: StorageLive(_38)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  1: _38 = ((_34 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  2: StorageLive(_40)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  3: _40 = _38
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2108:20-2108:40)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _40) -> [return: bb30, unwind: bb53]
  }
  preds [bb27]
  succs [bb30, bb53]

bb30
  0: StorageDead(_40)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  1: StorageDead(_38)
    SourceInfo(regex-lite/src/string.rs:2108:39-2108:40)
  2: StorageDead(_34)
    SourceInfo(regex-lite/src/string.rs:2108:40-2108:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb29]
  succs [bb48]

bb31
  0: _49 = &(*_50)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:25)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/string.rs:2109:24-2109:25)
  2: StorageLive(_52)
    SourceInfo(regex-lite/src/string.rs:2109:30-2109:34)
  3: _52 = _33
    SourceInfo(regex-lite/src/string.rs:2109:30-2109:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:35)
      kind: _48 = core::slice::<impl [core::option::Option<int::NonMaxUsize>]>::get::<usize>(move _49, move _52) -> [return: bb32, unwind: bb53]
  }
  preds [bb28]
  succs [bb32, bb53]

bb32
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/string.rs:2109:34-2109:35)
  1: StorageDead(_49)
    SourceInfo(regex-lite/src/string.rs:2109:34-2109:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:44)
      kind: _47 = core::option::Option::<&core::option::Option<int::NonMaxUsize>>::copied(move _48) -> [return: bb33, unwind: bb53]
  }
  preds [bb31]
  succs [bb33, bb53]

bb33
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/string.rs:2109:43-2109:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
      kind: _46 = <core::option::Option<core::option::Option<int::NonMaxUsize>> as core::ops::Try>::branch(move _47) -> [return: bb34, unwind: bb53]
  }
  preds [bb32]
  succs [bb34, bb53]

bb34
  0: StorageDead(_47)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  1: PlaceMention(_46)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  2: _53 = discriminant(_46)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
      kind: switchInt(move _53) -> [0: bb37, 1: bb36, otherwise: bb35]
  }
  preds [bb33]
  succs [bb35, bb36, bb37]

bb35
  0: FakeRead(ForMatchedPlace(None), _46)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
      kind: unreachable
  }
  preds [bb34]
  succs []

bb36
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
      kind: falseEdge -> [real: bb38, imaginary: bb37]
  }
  preds [bb34]
  succs [bb37, bb38]

bb37
  0: StorageLive(_57)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  1: _57 = ((_46 as Continue).0: core::option::Option<int::NonMaxUsize>)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  2: _45 = _57
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
  3: StorageDead(_57)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
      kind: _44 = <core::option::Option<int::NonMaxUsize> as core::ops::Try>::branch(move _45) -> [return: bb40, unwind: bb53]
  }
  preds [bb34, bb36]
  succs [bb40, bb53]

bb38
  0: StorageLive(_54)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  1: _54 = ((_46 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  2: StorageLive(_56)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  3: _56 = _54
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:45)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _56) -> [return: bb39, unwind: bb53]
  }
  preds [bb36]
  succs [bb39, bb53]

bb39
  0: StorageDead(_56)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  1: StorageDead(_54)
    SourceInfo(regex-lite/src/string.rs:2109:44-2109:45)
  2: StorageDead(_45)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb38]
  succs [bb47]

bb40
  0: StorageDead(_45)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  1: PlaceMention(_44)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  2: _58 = discriminant(_44)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
      kind: switchInt(move _58) -> [0: bb43, 1: bb42, otherwise: bb41]
  }
  preds [bb37]
  succs [bb41, bb42, bb43]

bb41
  0: FakeRead(ForMatchedPlace(None), _44)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
      kind: unreachable
  }
  preds [bb40]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb40]
  succs [bb43, bb44]

bb43
  0: StorageLive(_62)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  1: _62 = ((_44 as Continue).0: int::NonMaxUsize)
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  2: _43 = _62
    SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
  3: StorageDead(_62)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:52)
      kind: _42 = int::NonMaxUsize::get(move _43) -> [return: bb46, unwind: bb53]
  }
  preds [bb40, bb42]
  succs [bb46, bb53]

bb44
  0: StorageLive(_59)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  1: _59 = ((_44 as Break).0: core::option::Option<core::convert::Infallible>)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  2: StorageLive(_61)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  3: _61 = _59
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2109:19-2109:46)
      kind: _0 = <core::option::Option<(usize, usize)> as core::ops::FromResidual<core::option::Option<core::convert::Infallible>>>::from_residual(move _61) -> [return: bb45, unwind: bb53]
  }
  preds [bb42]
  succs [bb45, bb53]

bb45
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  1: StorageDead(_59)
    SourceInfo(regex-lite/src/string.rs:2109:45-2109:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb47
  }
  preds [bb44]
  succs [bb47]

bb46
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/string.rs:2109:51-2109:52)
  1: FakeRead(ForLet(None), _42)
    SourceInfo(regex-lite/src/string.rs:2109:13-2109:16)
  2: StorageDead(_50)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  3: StorageDead(_46)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  4: StorageDead(_44)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  5: StorageLive(_63)
    SourceInfo(regex-lite/src/string.rs:2110:14-2110:26)
  6: StorageLive(_64)
    SourceInfo(regex-lite/src/string.rs:2110:15-2110:20)
  7: _64 = _12
    SourceInfo(regex-lite/src/string.rs:2110:15-2110:20)
  8: StorageLive(_65)
    SourceInfo(regex-lite/src/string.rs:2110:22-2110:25)
  9: _65 = _42
    SourceInfo(regex-lite/src/string.rs:2110:22-2110:25)
  10: _63 = (move _64, move _65)
    SourceInfo(regex-lite/src/string.rs:2110:14-2110:26)
  11: StorageDead(_65)
    SourceInfo(regex-lite/src/string.rs:2110:25-2110:26)
  12: StorageDead(_64)
    SourceInfo(regex-lite/src/string.rs:2110:25-2110:26)
  13: _0 = core::option::Option::<(usize, usize)>::Some(move _63)
    SourceInfo(regex-lite/src/string.rs:2110:9-2110:27)
  14: StorageDead(_63)
    SourceInfo(regex-lite/src/string.rs:2110:26-2110:27)
  15: StorageDead(_42)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  16: StorageDead(_33)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  17: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  18: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2111:6-2111:6)
      kind: goto -> bb52
  }
  preds [bb43]
  succs [bb52]

bb47
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/string.rs:2109:51-2109:52)
  1: StorageDead(_50)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  2: StorageDead(_46)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  3: StorageDead(_44)
    SourceInfo(regex-lite/src/string.rs:2109:52-2109:53)
  4: StorageDead(_42)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb48
  }
  preds [bb39, bb45]
  succs [bb48]

bb48
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb50
  }
  preds [bb30, bb47]
  succs [bb50]

bb49
  0: StorageDead(_13)
    SourceInfo(regex-lite/src/string.rs:2107:53-2107:54)
  1: StorageDead(_20)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  2: StorageDead(_16)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  3: StorageDead(_14)
    SourceInfo(regex-lite/src/string.rs:2107:54-2107:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb50
  }
  preds [bb16, bb22]
  succs [bb50]

bb50
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb51
  }
  preds [bb48, bb49]
  succs [bb51]

bb51
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/string.rs:2111:5-2111:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2111:6-2111:6)
      kind: goto -> bb52
  }
  preds [bb7, bb50]
  succs [bb52]

bb52
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2111:6-2111:6)
      kind: return
  }
  preds [bb46, bb51]
  succs []

bb53
  Terminator {
      source_info: SourceInfo(regex-lite/src/string.rs:2105:5-2111:6)
      kind: resume
  }
  preds [bb0, bb1, bb5, bb6, bb8, bb9, bb10, bb14, bb15, bb20, bb21, bb23, bb24, bb28, bb29, bb31, bb32, bb33, bb37, bb38, bb43, bb44]
  succs []

