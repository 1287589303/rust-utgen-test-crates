bb0
  0: StorageLive(_3)
    SourceInfo(regex-lite/src/pikevm.rs:881:13-881:18)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pikevm.rs:881:32-881:47)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/pikevm.rs:881:21-881:32)
  3: _5 = &((*_1).2: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:881:21-881:32)
  4: StorageLive(_6)
    SourceInfo(regex-lite/src/pikevm.rs:881:33-881:46)
  5: StorageLive(_7)
    SourceInfo(regex-lite/src/pikevm.rs:881:33-881:35)
  6: _7 = _2
    SourceInfo(regex-lite/src/pikevm.rs:881:33-881:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:881:33-881:46)
      kind: _6 = <u32 as int::U32>::as_usize(move _7) -> [return: bb1, unwind: bb10]
  }
  preds []
  succs [bb1, bb10]

bb1
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/pikevm.rs:881:45-881:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:881:32-881:47)
      kind: _4 = <alloc::vec::Vec<u32> as core::ops::Index<usize>>::index(move _5, move _6) -> [return: bb2, unwind: bb10]
  }
  preds [bb0]
  succs [bb2, bb10]

bb2
  0: _3 = (*_4)
    SourceInfo(regex-lite/src/pikevm.rs:881:21-881:47)
  1: StorageDead(_6)
    SourceInfo(regex-lite/src/pikevm.rs:881:46-881:47)
  2: StorageDead(_5)
    SourceInfo(regex-lite/src/pikevm.rs:881:46-881:47)
  3: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/pikevm.rs:881:13-881:18)
  4: StorageDead(_4)
    SourceInfo(regex-lite/src/pikevm.rs:881:47-881:48)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:38)
  6: StorageLive(_9)
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:25)
  7: StorageLive(_10)
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:14)
  8: _10 = _3
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:9-882:25)
      kind: _9 = <u32 as int::U32>::as_usize(move _10) -> [return: bb3, unwind: bb10]
  }
  preds [bb1]
  succs [bb3, bb10]

bb3
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/pikevm.rs:882:24-882:25)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/pikevm.rs:882:28-882:38)
  2: StorageLive(_12)
    SourceInfo(regex-lite/src/pikevm.rs:882:28-882:32)
  3: _12 = &(*_1)
    SourceInfo(regex-lite/src/pikevm.rs:882:28-882:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:28-882:38)
      kind: _11 = pikevm::SparseSet::len(move _12) -> [return: bb4, unwind: bb10]
  }
  preds [bb2]
  succs [bb4, bb10]

bb4
  0: StorageDead(_12)
    SourceInfo(regex-lite/src/pikevm.rs:882:37-882:38)
  1: _8 = Lt(move _9, move _11)
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:9-882:38)
      kind: switchInt(move _8) -> [0: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6]

bb5
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:882:37-882:38)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:882:37-882:38)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/pikevm.rs:882:42-882:70)
  3: StorageLive(_14)
    SourceInfo(regex-lite/src/pikevm.rs:882:52-882:70)
  4: StorageLive(_15)
    SourceInfo(regex-lite/src/pikevm.rs:882:42-882:52)
  5: _15 = &((*_1).1: alloc::vec::Vec<u32>)
    SourceInfo(regex-lite/src/pikevm.rs:882:42-882:52)
  6: StorageLive(_16)
    SourceInfo(regex-lite/src/pikevm.rs:882:53-882:69)
  7: StorageLive(_17)
    SourceInfo(regex-lite/src/pikevm.rs:882:53-882:58)
  8: _17 = _3
    SourceInfo(regex-lite/src/pikevm.rs:882:53-882:58)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:53-882:69)
      kind: _16 = <u32 as int::U32>::as_usize(move _17) -> [return: bb7, unwind: bb10]
  }
  preds [bb4]
  succs [bb7, bb10]

bb6
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/pikevm.rs:882:37-882:38)
  1: StorageDead(_9)
    SourceInfo(regex-lite/src/pikevm.rs:882:37-882:38)
  2: _0 = const false
    SourceInfo(regex-lite/src/pikevm.rs:882:9-882:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:9-882:76)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb7
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/pikevm.rs:882:68-882:69)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:52-882:70)
      kind: _14 = <alloc::vec::Vec<u32> as core::ops::Index<usize>>::index(move _15, move _16) -> [return: bb8, unwind: bb10]
  }
  preds [bb5]
  succs [bb8, bb10]

bb8
  0: _13 = (*_14)
    SourceInfo(regex-lite/src/pikevm.rs:882:42-882:70)
  1: StorageDead(_16)
    SourceInfo(regex-lite/src/pikevm.rs:882:69-882:70)
  2: StorageDead(_15)
    SourceInfo(regex-lite/src/pikevm.rs:882:69-882:70)
  3: StorageLive(_18)
    SourceInfo(regex-lite/src/pikevm.rs:882:74-882:76)
  4: _18 = _2
    SourceInfo(regex-lite/src/pikevm.rs:882:74-882:76)
  5: _0 = Eq(move _13, move _18)
    SourceInfo(regex-lite/src/pikevm.rs:882:42-882:76)
  6: StorageDead(_18)
    SourceInfo(regex-lite/src/pikevm.rs:882:75-882:76)
  7: StorageDead(_14)
    SourceInfo(regex-lite/src/pikevm.rs:882:75-882:76)
  8: StorageDead(_13)
    SourceInfo(regex-lite/src/pikevm.rs:882:75-882:76)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:882:9-882:76)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/pikevm.rs:882:75-882:76)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/pikevm.rs:883:5-883:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:883:6-883:6)
      kind: return
  }
  preds [bb6, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(regex-lite/src/pikevm.rs:880:5-883:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb7]
  succs []

