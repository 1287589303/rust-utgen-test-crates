bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:296:13-296:30)
  1: _2 = ((*(_1.2: alloc::boxed::Box<hir::Hir>)).1: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:296:33-296:58)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(regex-lite/src/hir/mod.rs:296:13-296:30)
  3: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:297:13-297:27)
  4: _3 = ((*(_1.2: alloc::boxed::Box<hir::Hir>)).2: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:297:30-297:52)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(regex-lite/src/hir/mod.rs:297:13-297:27)
  6: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:298:13-298:41)
  7: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:298:44-300:42)
  8: _5 = ((*(_1.2: alloc::boxed::Box<hir::Hir>)).3: core::option::Option<usize>)
    SourceInfo(regex-lite/src/hir/mod.rs:298:44-300:42)
  9: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:301:18-301:45)
  10: _6 = {closure@regex-lite/src/hir/mod.rs:301:18: 301:23}
    SourceInfo(regex-lite/src/hir/mod.rs:301:18-301:45)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:298:44-301:46)
      kind: _4 = core::option::Option::<usize>::map::<usize, {closure@regex-lite/src/hir/mod.rs:301:18: 301:23}>(move _5, move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:301:45-301:46)
  1: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:301:45-301:46)
  2: FakeRead(ForLet(None), _4)
    SourceInfo(regex-lite/src/hir/mod.rs:298:13-298:41)
  3: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:302:13-302:17)
  4: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:302:37-302:40)
  5: _8 = move _1
    SourceInfo(regex-lite/src/hir/mod.rs:302:37-302:40)
  6: _7 = hir::HirKind::Capture(move _8)
    SourceInfo(regex-lite/src/hir/mod.rs:302:20-302:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:302:40-302:41)
      kind: drop(_8) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:302:40-302:41)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(regex-lite/src/hir/mod.rs:302:13-302:17)
  2: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:304:13-304:17)
  3: _9 = move _7
    SourceInfo(regex-lite/src/hir/mod.rs:304:13-304:17)
  4: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:305:13-305:30)
  5: _10 = _2
    SourceInfo(regex-lite/src/hir/mod.rs:305:13-305:30)
  6: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:306:13-306:27)
  7: _11 = _3
    SourceInfo(regex-lite/src/hir/mod.rs:306:13-306:27)
  8: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:307:13-307:41)
  9: _12 = _4
    SourceInfo(regex-lite/src/hir/mod.rs:307:13-307:41)
  10: _0 = hir::Hir { kind: move _9, is_start_anchored: move _10, is_match_empty: move _11, static_explicit_captures_len: move _12 }
    SourceInfo(regex-lite/src/hir/mod.rs:303:9-308:10)
  11: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:308:9-308:10)
  12: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:308:9-308:10)
  13: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:308:9-308:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:308:9-308:10)
      kind: drop(_9) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:308:9-308:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
      kind: drop(_7) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
  1: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
  2: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
  3: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
      kind: drop(_1) -> [return: bb5, unwind: bb8]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:309:6-309:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
      kind: drop(_7) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:309:5-309:6)
      kind: drop(_1) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb0, bb1, bb3, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:295:5-309:6)
      kind: resume
  }
  preds [bb4, bb7]
  succs []

