bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/int.rs:40:9-40:49)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/int.rs:40:27-40:48)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/int.rs:40:27-40:32)
  3: _4 = _1
    SourceInfo(regex-lite/src/int.rs:40:27-40:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/int.rs:40:27-40:48)
      kind: _3 = core::num::<impl usize>::wrapping_add(move _4, const 1_usize) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/int.rs:40:47-40:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/int.rs:40:9-40:49)
      kind: _2 = core::num::NonZero::<usize>::new(move _3) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/int.rs:40:48-40:49)
  Terminator {
      source_info: SourceInfo(regex-lite/src/int.rs:40:9-40:66)
      kind: _0 = core::option::Option::<core::num::NonZero<usize>>::map::<int::NonMaxUsize, fn(core::num::NonZero<usize>) -> int::NonMaxUsize {int::NonMaxUsize}>(move _2, int::NonMaxUsize) -> [return: bb3, unwind: bb4]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/int.rs:40:65-40:66)
  Terminator {
      source_info: SourceInfo(regex-lite/src/int.rs:41:6-41:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(regex-lite/src/int.rs:39:5-41:6)
      kind: resume
  }
  preds [bb0, bb1, bb2]
  succs []

