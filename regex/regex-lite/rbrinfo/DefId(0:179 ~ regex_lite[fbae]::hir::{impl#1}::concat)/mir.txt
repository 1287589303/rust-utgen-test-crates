bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:312:12-312:27)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:312:12-312:16)
  2: _3 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:312:12-312:16)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:312:12-312:27)
      kind: _2 = alloc::vec::Vec::<hir::Hir>::is_empty(move _3) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:312:12-312:27)
      kind: switchInt(move _2) -> [0: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:312:26-312:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:313:13-313:25)
      kind: _0 = hir::Hir::empty() -> [return: bb28, unwind: bb32]
  }
  preds [bb1]
  succs [bb28, bb32]

bb3
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:312:26-312:27)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:34)
  2: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:29)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:23)
  4: _6 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:29)
      kind: _5 = alloc::vec::Vec::<hir::Hir>::len(move _6) -> [return: bb4, unwind: bb32]
  }
  preds [bb1]
  succs [bb4, bb32]

bb4
  0: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:314:28-314:29)
  1: _4 = Eq(move _5, const 1_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:314:19-314:34)
      kind: switchInt(move _4) -> [0: bb8, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb8]

bb5
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:314:33-314:34)
  1: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:315:13-315:23)
  2: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:315:13-315:17)
  3: _8 = &mut _1
    SourceInfo(regex-lite/src/hir/mod.rs:315:13-315:17)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:315:13-315:23)
      kind: _7 = alloc::vec::Vec::<hir::Hir>::pop(move _8) -> [return: bb6, unwind: bb32]
  }
  preds [bb4]
  succs [bb6, bb32]

bb6
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:315:22-315:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:315:13-315:32)
      kind: _0 = core::option::Option::<hir::Hir>::unwrap(move _7) -> [return: bb7, unwind: bb31]
  }
  preds [bb5]
  succs [bb7, bb31]

bb7
  0: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:315:31-315:32)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:314:16-334:10)
      kind: goto -> bb27
  }
  preds [bb6]
  succs [bb27]

bb8
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:314:33-314:34)
  1: StorageLive(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:317:17-317:34)
  2: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:317:41-317:44)
  3: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:317:37-317:41)
  4: _11 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:317:37-317:41)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:317:41-317:44)
      kind: _10 = <alloc::vec::Vec<hir::Hir> as core::ops::Index<usize>>::index(move _11, const 0_usize) -> [return: bb9, unwind: bb32]
  }
  preds [bb4]
  succs [bb9, bb32]

bb9
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:317:43-317:44)
  1: _9 = ((*_10).1: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:317:37-317:62)
  2: FakeRead(ForLet(None), _9)
    SourceInfo(regex-lite/src/hir/mod.rs:317:17-317:34)
  3: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:317:62-317:63)
  4: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:318:17-318:35)
  5: _12 = const true
    SourceInfo(regex-lite/src/hir/mod.rs:318:38-318:42)
  6: FakeRead(ForLet(None), _12)
    SourceInfo(regex-lite/src/hir/mod.rs:318:17-318:35)
  7: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:319:17-319:49)
  8: _13 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:319:52-319:64)
  9: FakeRead(ForLet(None), _13)
    SourceInfo(regex-lite/src/hir/mod.rs:319:17-319:49)
  10: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
  11: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  12: StorageLive(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  13: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:28)
  14: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  15: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:28)
  16: _19 = &_1
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: _18 = <alloc::vec::Vec<hir::Hir> as core::ops::Deref>::deref(move _19) -> [return: bb10, unwind: bb32]
  }
  preds [bb8]
  succs [bb10, bb32]

bb10
  0: _17 = &(*_18)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:28)
  1: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:320:27-320:28)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: _16 = core::slice::<impl [hir::Hir]>::iter(move _17) -> [return: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:320:34-320:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: _15 = <core::slice::Iter<'_, hir::Hir> as core::iter::IntoIterator>::into_iter(move _16) -> [return: bb12, unwind: bb32]
  }
  preds [bb10]
  succs [bb12, bb32]

bb12
  0: StorageDead(_16)
    SourceInfo(regex-lite/src/hir/mod.rs:320:34-320:35)
  1: PlaceMention(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  3: _20 = move _15
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
      kind: goto -> bb13
  }
  preds [bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
      kind: falseUnwind -> [real: bb14, unwind: bb32]
  }
  preds [bb12, bb24]
  succs [bb14, bb32]

bb14
  0: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  1: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  2: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  3: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  4: _25 = &mut _20
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  5: _24 = &mut (*_25)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: _23 = <core::slice::Iter<'_, hir::Hir> as core::iter::Iterator>::next(move _24) -> [return: bb15, unwind: bb32]
  }
  preds [bb13]
  succs [bb15, bb32]

bb15
  0: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:320:34-320:35)
  1: PlaceMention(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  2: _26 = discriminant(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: switchInt(move _26) -> [0: bb17, 1: bb18, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17, bb18]

bb16
  0: FakeRead(ForMatchedPlace(None), _23)
    SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:24-320:35)
      kind: unreachable
  }
  preds [bb15]
  succs []

bb17
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
      kind: falseEdge -> [real: bb19, imaginary: bb18]
  }
  preds [bb15]
  succs [bb18, bb19]

bb18
  0: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:320:17-320:20)
  1: _28 = ((_23 as Some).0: &hir::Hir)
    SourceInfo(regex-lite/src/hir/mod.rs:320:17-320:20)
  2: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:70)
  3: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:48)
  4: _30 = _12
    SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:48)
      kind: switchInt(move _30) -> [0: bb21, otherwise: bb20]
  }
  preds [bb15, bb17]
  succs [bb20, bb21]

bb19
  0: _14 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  2: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  3: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  4: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  5: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  6: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  7: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  8: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:329:23-329:44)
  9: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:329:39-329:43)
  10: _38 = move _1
    SourceInfo(regex-lite/src/hir/mod.rs:329:39-329:43)
  11: _37 = hir::HirKind::Concat(move _38)
    SourceInfo(regex-lite/src/hir/mod.rs:329:23-329:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:329:43-329:44)
      kind: drop(_38) -> [return: bb25, unwind: bb30]
  }
  preds [bb17]
  succs [bb25, bb30]

bb20
  0: _29 = ((*_28).2: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:321:52-321:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:70)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb21
  0: _29 = const false
    SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:70)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:321:34-321:70)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb22
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:321:69-321:70)
  1: _12 = move _29
    SourceInfo(regex-lite/src/hir/mod.rs:321:17-321:70)
  2: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:321:69-321:70)
  3: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:322:48-326:78)
  4: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:322:48-325:23)
  5: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:322:48-322:76)
  6: _33 = _13
    SourceInfo(regex-lite/src/hir/mod.rs:322:48-322:76)
  7: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:323:31-325:22)
  8: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/mod.rs:323:31-325:22)
  9: _35 = &(*_28)
    SourceInfo(regex-lite/src/hir/mod.rs:323:31-325:22)
  10: _34 = {closure@regex-lite/src/hir/mod.rs:323:31: 323:37} { sub: move _35 }
    SourceInfo(regex-lite/src/hir/mod.rs:323:31-325:22)
  11: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/mod.rs:323:36-323:37)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:322:48-325:23)
      kind: _32 = core::option::Option::<usize>::and_then::<(usize, usize), {closure@regex-lite/src/hir/mod.rs:323:31: 323:37}>(move _33, move _34) -> [return: bb23, unwind: bb32]
  }
  preds [bb20, bb21]
  succs [bb23, bb32]

bb23
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:325:22-325:23)
  1: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:325:22-325:23)
  2: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:326:31-326:77)
  3: _36 = {closure@regex-lite/src/hir/mod.rs:326:31: 326:45}
    SourceInfo(regex-lite/src/hir/mod.rs:326:31-326:77)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:322:48-326:78)
      kind: _31 = core::option::Option::<(usize, usize)>::and_then::<usize, {closure@regex-lite/src/hir/mod.rs:326:31: 326:45}>(move _32, move _36) -> [return: bb24, unwind: bb32]
  }
  preds [bb22]
  succs [bb24, bb32]

bb24
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:326:77-326:78)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:326:77-326:78)
  2: _13 = move _31
    SourceInfo(regex-lite/src/hir/mod.rs:322:17-326:78)
  3: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:326:77-326:78)
  4: _22 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:320:36-327:14)
  5: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  6: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  7: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  8: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:327:13-327:14)
  9: _21 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:320:13-327:14)
      kind: goto -> bb13
  }
  preds [bb23]
  succs [bb13]

bb25
  0: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:329:43-329:44)
  1: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:330:17-330:34)
  2: _39 = _9
    SourceInfo(regex-lite/src/hir/mod.rs:330:17-330:34)
  3: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:331:17-331:31)
  4: _40 = _12
    SourceInfo(regex-lite/src/hir/mod.rs:331:17-331:31)
  5: StorageLive(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:332:17-332:45)
  6: _41 = _13
    SourceInfo(regex-lite/src/hir/mod.rs:332:17-332:45)
  7: _0 = hir::Hir { kind: move _37, is_start_anchored: move _39, is_match_empty: move _40, static_explicit_captures_len: move _41 }
    SourceInfo(regex-lite/src/hir/mod.rs:328:13-333:14)
  8: StorageDead(_41)
    SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
  9: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
  10: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
      kind: drop(_37) -> [return: bb26, unwind: bb32]
  }
  preds [bb19]
  succs [bb26, bb32]

bb26
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
  1: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:334:9-334:10)
  2: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:334:9-334:10)
  3: StorageDead(_9)
    SourceInfo(regex-lite/src/hir/mod.rs:334:9-334:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:314:16-334:10)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:334:9-334:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:312:9-334:10)
      kind: goto -> bb28
  }
  preds [bb7, bb26]
  succs [bb28]

bb28
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:334:9-334:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:335:5-335:6)
      kind: drop(_1) -> [return: bb29, unwind: bb33]
  }
  preds [bb2, bb27]
  succs [bb29, bb33]

bb29
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:335:6-335:6)
      kind: return
  }
  preds [bb28]
  succs []

bb30
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:333:13-333:14)
      kind: drop(_37) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:315:31-315:32)
      kind: drop(_7) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:335:5-335:6)
      kind: drop(_1) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb0, bb2, bb3, bb5, bb8, bb9, bb10, bb11, bb13, bb14, bb22, bb23, bb25, bb30, bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:311:5-335:6)
      kind: resume
  }
  preds [bb28, bb32]
  succs []

