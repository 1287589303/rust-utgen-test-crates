bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/pool.rs:49:23-49:41)
  1: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/macros.rs:44:9-44:32)
      kind: _3 = alloc::vec::Vec::<alloc::boxed::Box<T>>::new() -> [return: bb1, unwind: bb8]
  }
  preds []
  succs [bb1, bb8]

bb1
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:49:23-49:41)
      kind: _2 = std::sync::Mutex::<alloc::vec::Vec<alloc::boxed::Box<T>>>::new(move _3) -> [return: bb2, unwind: bb7]
  }
  preds [bb0]
  succs [bb2, bb7]

bb2
  0: StorageDead(_3)
    SourceInfo(regex-lite/src/pool.rs:49:40-49:41)
  1: StorageLive(_4)
    SourceInfo(regex-lite/src/pool.rs:49:43-49:49)
  2: _4 = move _1
    SourceInfo(regex-lite/src/pool.rs:49:43-49:49)
  3: _0 = pool::Pool::<T, F> { stack: move _2, create: move _4 }
    SourceInfo(regex-lite/src/pool.rs:49:9-49:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:49:50-49:51)
      kind: drop(_4) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/pool.rs:49:50-49:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:49:50-49:51)
      kind: drop(_2) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  0: StorageDead(_2)
    SourceInfo(regex-lite/src/pool.rs:49:50-49:51)
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:50:5-50:6)
      kind: drop(_1) -> [return: bb5, unwind: bb9]
  }
  preds [bb3]
  succs [bb5, bb9]

bb5
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:50:6-50:6)
      kind: return
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:49:50-49:51)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb8]

bb7
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:49:40-49:41)
      kind: drop(_3) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:50:5-50:6)
      kind: drop(_1) -> [return: bb9, unwind terminate(cleanup)]
  }
  preds [bb0, bb3, bb6, bb7]
  succs [bb9]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/pool.rs:48:5-50:6)
      kind: resume
  }
  preds [bb4, bb8]
  succs []

