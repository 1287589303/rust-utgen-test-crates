bb0
  0: StorageLive(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:261:9-265:10)
  1: StorageLive(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:261:12-261:24)
  2: StorageLive(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:261:12-261:19)
  3: _4 = (_1.0: u32)
    SourceInfo(regex-lite/src/hir/mod.rs:261:12-261:19)
  4: _3 = Eq(move _4, const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:261:12-261:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:261:12-261:24)
      kind: switchInt(move _3) -> [0: bb5, otherwise: bb1]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:261:23-261:24)
  1: StorageLive(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:261:28-261:46)
  2: StorageLive(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:261:28-261:35)
  3: _6 = &(_1.1: core::option::Option<u32>)
    SourceInfo(regex-lite/src/hir/mod.rs:261:28-261:35)
  4: StorageLive(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:261:39-261:46)
  5: StorageLive(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:261:39-261:46)
  6: _8 = core::option::Option::<u32>::Some(const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:261:39-261:46)
  7: _7 = &_8
    SourceInfo(regex-lite/src/hir/mod.rs:261:39-261:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:261:28-261:46)
      kind: _5 = <core::option::Option<u32> as core::cmp::PartialEq>::eq(move _6, move _7) -> [return: bb2, unwind: bb35]
  }
  preds [bb0]
  succs [bb2, bb35]

bb2
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:261:28-261:46)
      kind: switchInt(move _5) -> [0: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4]

bb3
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:262:20-262:32)
      kind: _0 = hir::Hir::empty() -> [return: bb32, unwind: bb35]
  }
  preds [bb2]
  succs [bb32, bb35]

bb4
  0: StorageDead(_8)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  1: StorageDead(_7)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  2: StorageDead(_6)
    SourceInfo(regex-lite/src/hir/mod.rs:261:45-261:46)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb5
  0: StorageDead(_4)
    SourceInfo(regex-lite/src/hir/mod.rs:261:23-261:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb6
  }
  preds [bb0]
  succs [bb6]

bb6
  0: StorageLive(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:263:19-263:31)
  1: StorageLive(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:263:19-263:26)
  2: _11 = (_1.0: u32)
    SourceInfo(regex-lite/src/hir/mod.rs:263:19-263:26)
  3: _10 = Eq(move _11, const 1_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:263:19-263:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:263:19-263:31)
      kind: switchInt(move _10) -> [0: bb11, otherwise: bb7]
  }
  preds [bb4, bb5]
  succs [bb7, bb11]

bb7
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:263:30-263:31)
  1: StorageLive(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:263:35-263:53)
  2: StorageLive(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:263:35-263:42)
  3: _13 = &(_1.1: core::option::Option<u32>)
    SourceInfo(regex-lite/src/hir/mod.rs:263:35-263:42)
  4: StorageLive(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:263:46-263:53)
  5: StorageLive(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:263:46-263:53)
  6: _15 = core::option::Option::<u32>::Some(const 1_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:263:46-263:53)
  7: _14 = &_15
    SourceInfo(regex-lite/src/hir/mod.rs:263:46-263:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:263:35-263:53)
      kind: _12 = <core::option::Option<u32> as core::cmp::PartialEq>::eq(move _13, move _14) -> [return: bb8, unwind: bb35]
  }
  preds [bb6]
  succs [bb8, bb35]

bb8
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:263:35-263:53)
      kind: switchInt(move _12) -> [0: bb10, otherwise: bb9]
  }
  preds [bb7]
  succs [bb9, bb10]

bb9
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  3: _0 = move (*(_1.3: alloc::boxed::Box<hir::Hir>))
    SourceInfo(regex-lite/src/hir/mod.rs:264:20-264:28)
  4: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  5: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb8]
  succs [bb32]

bb10
  0: StorageDead(_15)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  1: StorageDead(_14)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  2: StorageDead(_13)
    SourceInfo(regex-lite/src/hir/mod.rs:263:52-263:53)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb11
  0: StorageDead(_11)
    SourceInfo(regex-lite/src/hir/mod.rs:263:30-263:31)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb12
  }
  preds [bb6]
  succs [bb12]

bb12
  0: _2 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:265:10-265:10)
  1: StorageDead(_12)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  2: StorageDead(_10)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  3: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  4: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  5: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  6: StorageLive(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:266:13-266:30)
  7: StorageLive(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:44)
  8: StorageLive(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:40)
  9: _19 = (_1.0: u32)
    SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:40)
  10: _18 = Gt(move _19, const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:44)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:44)
      kind: switchInt(move _18) -> [0: bb14, otherwise: bb13]
  }
  preds [bb10, bb11]
  succs [bb13, bb14]

bb13
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:266:43-266:44)
  1: _17 = ((*(_1.3: alloc::boxed::Box<hir::Hir>)).1: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:266:48-266:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:73)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb14
  0: StorageDead(_19)
    SourceInfo(regex-lite/src/hir/mod.rs:266:43-266:44)
  1: _17 = const false
    SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:266:33-266:73)
      kind: goto -> bb15
  }
  preds [bb12]
  succs [bb15]

bb15
  0: StorageDead(_18)
    SourceInfo(regex-lite/src/hir/mod.rs:266:72-266:73)
  1: FakeRead(ForLet(None), _17)
    SourceInfo(regex-lite/src/hir/mod.rs:266:13-266:30)
  2: StorageLive(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:267:13-267:27)
  3: StorageLive(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:42)
  4: StorageLive(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:37)
  5: _22 = (_1.0: u32)
    SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:37)
  6: _21 = Eq(move _22, const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:42)
      kind: switchInt(move _21) -> [0: bb17, otherwise: bb16]
  }
  preds [bb13, bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:267:41-267:42)
  1: _20 = const true
    SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:68)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb17
  0: StorageDead(_22)
    SourceInfo(regex-lite/src/hir/mod.rs:267:41-267:42)
  1: _20 = ((*(_1.3: alloc::boxed::Box<hir::Hir>)).2: bool)
    SourceInfo(regex-lite/src/hir/mod.rs:267:46-267:68)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:267:30-267:68)
      kind: goto -> bb18
  }
  preds [bb15]
  succs [bb18]

bb18
  0: StorageDead(_21)
    SourceInfo(regex-lite/src/hir/mod.rs:267:67-267:68)
  1: FakeRead(ForLet(None), _20)
    SourceInfo(regex-lite/src/hir/mod.rs:267:13-267:27)
  2: StorageLive(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:268:13-268:45)
  3: _23 = ((*(_1.3: alloc::boxed::Box<hir::Hir>)).3: core::option::Option<usize>)
    SourceInfo(regex-lite/src/hir/mod.rs:269:13-269:49)
  4: FakeRead(ForLet(None), _23)
    SourceInfo(regex-lite/src/hir/mod.rs:268:13-268:45)
  5: StorageLive(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:274:9-286:10)
  6: StorageLive(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:274:12-274:24)
  7: StorageLive(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:274:12-274:19)
  8: _26 = (_1.0: u32)
    SourceInfo(regex-lite/src/hir/mod.rs:274:12-274:19)
  9: _25 = Eq(move _26, const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:274:12-274:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:274:12-274:24)
      kind: switchInt(move _25) -> [0: bb27, otherwise: bb19]
  }
  preds [bb16, bb17]
  succs [bb19, bb27]

bb19
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:274:23-274:24)
  1: StorageLive(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:275:16-275:73)
  2: StorageLive(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:275:16-275:44)
  3: _28 = _23
    SourceInfo(regex-lite/src/hir/mod.rs:275:16-275:44)
  4: StorageLive(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:275:59-275:72)
  5: _29 = {closure@regex-lite/src/hir/mod.rs:275:59: 275:64}
    SourceInfo(regex-lite/src/hir/mod.rs:275:59-275:72)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:275:16-275:73)
      kind: _27 = core::option::Option::<usize>::map_or::<bool, {closure@regex-lite/src/hir/mod.rs:275:59: 275:64}>(move _28, const false, move _29) -> [return: bb20, unwind: bb35]
  }
  preds [bb18]
  succs [bb20, bb35]

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:275:16-275:73)
      kind: switchInt(move _27) -> [0: bb26, otherwise: bb21]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:275:72-275:73)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:275:72-275:73)
  2: StorageLive(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:281:16-281:34)
  3: StorageLive(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:281:16-281:23)
  4: _31 = &(_1.1: core::option::Option<u32>)
    SourceInfo(regex-lite/src/hir/mod.rs:281:16-281:23)
  5: StorageLive(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:281:27-281:34)
  6: StorageLive(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:281:27-281:34)
  7: _33 = core::option::Option::<u32>::Some(const 0_u32)
    SourceInfo(regex-lite/src/hir/mod.rs:281:27-281:34)
  8: _32 = &_33
    SourceInfo(regex-lite/src/hir/mod.rs:281:27-281:34)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:281:16-281:34)
      kind: _30 = <core::option::Option<u32> as core::cmp::PartialEq>::eq(move _31, move _32) -> [return: bb22, unwind: bb35]
  }
  preds [bb20]
  succs [bb22, bb35]

bb22
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:281:16-281:34)
      kind: switchInt(move _30) -> [0: bb24, otherwise: bb23]
  }
  preds [bb21]
  succs [bb23, bb24]

bb23
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  3: StorageLive(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:282:48-282:55)
  4: _34 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(regex-lite/src/hir/mod.rs:282:48-282:55)
  5: _23 = move _34
    SourceInfo(regex-lite/src/hir/mod.rs:282:17-282:55)
  6: StorageDead(_34)
    SourceInfo(regex-lite/src/hir/mod.rs:282:54-282:55)
  7: _24 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:281:35-283:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:281:13-285:14)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb24
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  2: StorageDead(_31)
    SourceInfo(regex-lite/src/hir/mod.rs:281:33-281:34)
  3: StorageLive(_35)
    SourceInfo(regex-lite/src/hir/mod.rs:284:48-284:52)
  4: _35 = core::option::Option::<usize>::None
    SourceInfo(regex-lite/src/hir/mod.rs:284:48-284:52)
  5: _23 = move _35
    SourceInfo(regex-lite/src/hir/mod.rs:284:17-284:52)
  6: StorageDead(_35)
    SourceInfo(regex-lite/src/hir/mod.rs:284:51-284:52)
  7: _24 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:283:20-285:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:281:13-285:14)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb25
  0: StorageDead(_30)
    SourceInfo(regex-lite/src/hir/mod.rs:285:13-285:14)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:274:9-286:10)
      kind: goto -> bb29
  }
  preds [bb23, bb24]
  succs [bb29]

bb26
  0: StorageDead(_29)
    SourceInfo(regex-lite/src/hir/mod.rs:275:72-275:73)
  1: StorageDead(_28)
    SourceInfo(regex-lite/src/hir/mod.rs:275:72-275:73)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb20]
  succs [bb28]

bb27
  0: StorageDead(_26)
    SourceInfo(regex-lite/src/hir/mod.rs:274:23-274:24)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb28
  }
  preds [bb18]
  succs [bb28]

bb28
  0: _24 = const ()
    SourceInfo(regex-lite/src/hir/mod.rs:286:10-286:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:274:9-286:10)
      kind: goto -> bb29
  }
  preds [bb26, bb27]
  succs [bb29]

bb29
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/hir/mod.rs:286:9-286:10)
  1: StorageDead(_25)
    SourceInfo(regex-lite/src/hir/mod.rs:286:9-286:10)
  2: StorageDead(_24)
    SourceInfo(regex-lite/src/hir/mod.rs:286:9-286:10)
  3: StorageLive(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:288:19-288:43)
  4: StorageLive(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:288:39-288:42)
  5: _37 = move _1
    SourceInfo(regex-lite/src/hir/mod.rs:288:39-288:42)
  6: _36 = hir::HirKind::Repetition(move _37)
    SourceInfo(regex-lite/src/hir/mod.rs:288:19-288:43)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:288:42-288:43)
      kind: drop(_37) -> [return: bb30, unwind: bb34]
  }
  preds [bb25, bb28]
  succs [bb30, bb34]

bb30
  0: StorageDead(_37)
    SourceInfo(regex-lite/src/hir/mod.rs:288:42-288:43)
  1: StorageLive(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:289:13-289:30)
  2: _38 = _17
    SourceInfo(regex-lite/src/hir/mod.rs:289:13-289:30)
  3: StorageLive(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:290:13-290:27)
  4: _39 = _20
    SourceInfo(regex-lite/src/hir/mod.rs:290:13-290:27)
  5: StorageLive(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:291:13-291:41)
  6: _40 = _23
    SourceInfo(regex-lite/src/hir/mod.rs:291:13-291:41)
  7: _0 = hir::Hir { kind: move _36, is_start_anchored: move _38, is_match_empty: move _39, static_explicit_captures_len: move _40 }
    SourceInfo(regex-lite/src/hir/mod.rs:287:9-292:10)
  8: StorageDead(_40)
    SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
  9: StorageDead(_39)
    SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
  10: StorageDead(_38)
    SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
      kind: drop(_36) -> [return: bb31, unwind: bb35]
  }
  preds [bb29]
  succs [bb31, bb35]

bb31
  0: StorageDead(_36)
    SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
  1: StorageDead(_23)
    SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
  2: StorageDead(_20)
    SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
  3: StorageDead(_17)
    SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
      kind: drop(_1) -> [return: bb33, unwind: bb36]
  }
  preds [bb30]
  succs [bb33, bb36]

bb32
  0: StorageDead(_5)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  1: StorageDead(_3)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  2: StorageDead(_2)
    SourceInfo(regex-lite/src/hir/mod.rs:265:9-265:10)
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
      kind: drop(_1) -> [return: bb33, unwind: bb36]
  }
  preds [bb3, bb9]
  succs [bb33, bb36]

bb33
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:293:6-293:6)
      kind: return
  }
  preds [bb31, bb32]
  succs []

bb34
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:292:9-292:10)
      kind: drop(_36) -> [return: bb35, unwind terminate(cleanup)]
  }
  preds [bb29]
  succs [bb35]

bb35
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:293:5-293:6)
      kind: drop(_1) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb1, bb3, bb7, bb19, bb21, bb30, bb34]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(regex-lite/src/hir/mod.rs:260:5-293:6)
      kind: resume
  }
  preds [bb31, bb32, bb35]
  succs []

