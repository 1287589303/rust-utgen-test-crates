{
  "regex-lite/src/hir/mod.rs:274:12:274:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.min == 0",
          "lhs": "rep.min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:275:16:275:73": [
    {
      "Bool": {
        "Other": "static_explicit_captures_len.map_or(false, |len| len > 0)"
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:263:19:263:31": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.min == 1",
          "lhs": "rep.min",
          "rhs": "1",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:263:35:263:53": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.max == Some(1)",
          "lhs": "rep.max",
          "rhs": "Some(1)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:267:30:267:42": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.min == 0",
          "lhs": "rep.min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:261:28:261:46": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.max == Some(0)",
          "lhs": "rep.max",
          "rhs": "Some(0)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:261:12:261:24": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.min == 0",
          "lhs": "rep.min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:266:48:266:73": [
    {
      "Bool": {
        "Other": "rep.sub.is_start_anchored"
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:267:46:267:68": [
    {
      "Bool": {
        "Other": "rep.sub.is_match_empty"
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:281:16:281:34": [
    {
      "Bool": {
        "Binary": {
          "kind": "Eq",
          "expr": "rep.max == Some(0)",
          "lhs": "rep.max",
          "rhs": "Some(0)",
          "cmp_with_int": false
        }
      }
    }
  ],
  "regex-lite/src/hir/mod.rs:266:33:266:44": [
    {
      "Bool": {
        "Binary": {
          "kind": "Gt",
          "expr": "rep.min > 0",
          "lhs": "rep.min",
          "rhs": "0",
          "cmp_with_int": true
        }
      }
    }
  ]
}