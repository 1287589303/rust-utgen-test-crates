bb0
  0: StorageLive(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:9-48:10)
  1: StorageLive(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageLive(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  3: StorageLive(_6)
    SourceInfo(regex-lite/src/interpolate.rs:249:16-249:20)
  4: _6 = const 123_u8
    SourceInfo(regex-lite/src/interpolate.rs:249:16-249:20)
  5: _5 = &_6
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:16-38:22)
  6: StorageLive(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  7: StorageLive(_8)
    SourceInfo(regex-lite/src/interpolate.rs:249:26-249:51)
  8: StorageLive(_9)
    SourceInfo(regex-lite/src/interpolate.rs:249:26-249:42)
  9: StorageLive(_10)
    SourceInfo(regex-lite/src/interpolate.rs:249:26-249:27)
  10: _10 = _2
    SourceInfo(regex-lite/src/interpolate.rs:249:26-249:27)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:249:26-249:42)
      kind: _9 = core::num::<impl usize>::checked_sub(move _10, const 1_usize) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  0: StorageDead(_10)
    SourceInfo(regex-lite/src/interpolate.rs:249:41-249:42)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:249:26-249:51)
      kind: _8 = core::option::Option::<usize>::unwrap(move _9) -> [return: bb2, unwind: bb32]
  }
  preds [bb0]
  succs [bb2, bb32]

bb2
  0: StorageDead(_9)
    SourceInfo(regex-lite/src/interpolate.rs:249:50-249:51)
  1: _11 = Len((*_1))
    SourceInfo(regex-lite/src/interpolate.rs:249:22-249:52)
  2: _12 = Lt(_8, _11)
    SourceInfo(regex-lite/src/interpolate.rs:249:22-249:52)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:249:22-249:52)
      kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _8) -> [success: bb3, unwind: bb32]
  }
  preds [bb1]
  succs [bb3, bb32]

bb3
  0: _7 = &(*_1)[_8]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:24-38:31)
  1: _4 = (move _5, move _7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  2: StorageDead(_7)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  3: StorageDead(_5)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:31-38:32)
  4: PlaceMention(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:38:15-38:32)
  5: StorageLive(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  6: _13 = (_4.0: &u8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:14-39:22)
  7: StorageLive(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  8: _14 = (_4.1: &u8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:39:24-39:33)
  9: StorageLive(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  10: StorageLive(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  11: _16 = (*_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:22-40:31)
  12: StorageLive(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  13: _17 = (*_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:35-40:45)
  14: _15 = Eq(move _16, move _17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:21-40:46)
      kind: switchInt(move _15) -> [0: bb5, otherwise: bb4]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: _3 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:18-46:18)
  3: StorageDead(_15)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:46:17-46:18)
  4: StorageDead(_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  5: StorageDead(_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:47:13-47:14)
  6: StorageDead(_8)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  7: StorageDead(_6)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  8: StorageDead(_4)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  9: StorageDead(_3)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:48:9-48:10)
  10: StorageLive(_27)
    SourceInfo(regex-lite/src/interpolate.rs:250:9-250:14)
  11: _27 = _2
    SourceInfo(regex-lite/src/interpolate.rs:250:17-250:18)
  12: FakeRead(ForLet(None), _27)
    SourceInfo(regex-lite/src/interpolate.rs:250:9-250:14)
  13: StorageLive(_28)
    SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_17)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  1: StorageDead(_16)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:40:45-40:46)
  2: StorageLive(_19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  3: _19 = core::panicking::AssertKind::Eq
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:32-41:65)
  4: FakeRead(ForLet(None), _19)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:41:25-41:29)
  5: StorageLive(_20)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
  6: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  7: _21 = move _19
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:54-45:58)
  8: StorageLive(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  9: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  10: _23 = &(*_13)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  11: _22 = &(*_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:60-45:70)
  12: StorageLive(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  13: StorageLive(_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  14: _25 = &(*_14)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  15: _24 = &(*_25)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:72-45:83)
  16: StorageLive(_26)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  17: _26 = core::option::Option::<core::fmt::Arguments<'_>>::None
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:85-45:113)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:45:21-45:114)
      kind: _20 = core::panicking::assert_failed::<u8, u8>(move _21, move _22, move _24, move _26) -> bb32
  }
  preds [bb3]
  succs [bb32]

bb6
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
      kind: falseUnwind -> [real: bb7, unwind: bb32]
  }
  preds [bb4, bb11]
  succs [bb7, bb32]

bb7
  0: StorageLive(_30)
    SourceInfo(regex-lite/src/interpolate.rs:251:11-251:51)
  1: StorageLive(_31)
    SourceInfo(regex-lite/src/interpolate.rs:251:11-251:21)
  2: StorageLive(_32)
    SourceInfo(regex-lite/src/interpolate.rs:251:11-251:14)
  3: _32 = &(*_1)
    SourceInfo(regex-lite/src/interpolate.rs:251:11-251:14)
  4: StorageLive(_33)
    SourceInfo(regex-lite/src/interpolate.rs:251:19-251:20)
  5: _33 = _2
    SourceInfo(regex-lite/src/interpolate.rs:251:19-251:20)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:11-251:21)
      kind: _31 = core::slice::<impl [u8]>::get::<usize>(move _32, move _33) -> [return: bb8, unwind: bb32]
  }
  preds [bb6]
  succs [bb8, bb32]

bb8
  0: StorageDead(_33)
    SourceInfo(regex-lite/src/interpolate.rs:251:20-251:21)
  1: StorageDead(_32)
    SourceInfo(regex-lite/src/interpolate.rs:251:20-251:21)
  2: StorageLive(_34)
    SourceInfo(regex-lite/src/interpolate.rs:251:36-251:50)
  3: _34 = {closure@regex-lite/src/interpolate.rs:251:36: 251:40}
    SourceInfo(regex-lite/src/interpolate.rs:251:36-251:50)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:11-251:51)
      kind: _30 = core::option::Option::<&u8>::map_or::<bool, {closure@regex-lite/src/interpolate.rs:251:36: 251:40}>(move _31, const false, move _34) -> [return: bb9, unwind: bb32]
  }
  preds [bb7]
  succs [bb9, bb32]

bb9
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:11-251:51)
      kind: switchInt(move _30) -> [0: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb12]

bb10
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/interpolate.rs:251:50-251:51)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/interpolate.rs:251:50-251:51)
  2: _35 = AddWithOverflow(_2, const 1_usize)
    SourceInfo(regex-lite/src/interpolate.rs:252:9-252:15)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:252:9-252:15)
      kind: assert(!move (_35.1: bool), "attempt to compute `{} + {}`, which would overflow", _2, const 1_usize) -> [success: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: _2 = move (_35.0: usize)
    SourceInfo(regex-lite/src/interpolate.rs:252:9-252:15)
  1: _29 = const ()
    SourceInfo(regex-lite/src/interpolate.rs:251:52-253:6)
  2: StorageDead(_30)
    SourceInfo(regex-lite/src/interpolate.rs:253:5-253:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
      kind: goto -> bb6
  }
  preds [bb10]
  succs [bb6]

bb12
  0: StorageDead(_34)
    SourceInfo(regex-lite/src/interpolate.rs:251:50-251:51)
  1: StorageDead(_31)
    SourceInfo(regex-lite/src/interpolate.rs:251:50-251:51)
  2: StorageLive(_37)
    SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
  3: _28 = const ()
    SourceInfo(regex-lite/src/interpolate.rs:251:5-253:6)
  4: StorageDead(_37)
    SourceInfo(regex-lite/src/interpolate.rs:253:5-253:6)
  5: StorageDead(_30)
    SourceInfo(regex-lite/src/interpolate.rs:253:5-253:6)
  6: StorageDead(_28)
    SourceInfo(regex-lite/src/interpolate.rs:253:5-253:6)
  7: StorageLive(_39)
    SourceInfo(regex-lite/src/interpolate.rs:254:5-256:6)
  8: StorageLive(_40)
    SourceInfo(regex-lite/src/interpolate.rs:254:9-254:49)
  9: StorageLive(_41)
    SourceInfo(regex-lite/src/interpolate.rs:254:9-254:19)
  10: StorageLive(_42)
    SourceInfo(regex-lite/src/interpolate.rs:254:9-254:12)
  11: _42 = &(*_1)
    SourceInfo(regex-lite/src/interpolate.rs:254:9-254:12)
  12: StorageLive(_43)
    SourceInfo(regex-lite/src/interpolate.rs:254:17-254:18)
  13: _43 = _2
    SourceInfo(regex-lite/src/interpolate.rs:254:17-254:18)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:254:9-254:19)
      kind: _41 = core::slice::<impl [u8]>::get::<usize>(move _42, move _43) -> [return: bb13, unwind: bb32]
  }
  preds [bb9]
  succs [bb13, bb32]

bb13
  0: StorageDead(_43)
    SourceInfo(regex-lite/src/interpolate.rs:254:18-254:19)
  1: StorageDead(_42)
    SourceInfo(regex-lite/src/interpolate.rs:254:18-254:19)
  2: StorageLive(_44)
    SourceInfo(regex-lite/src/interpolate.rs:254:34-254:48)
  3: _44 = {closure@regex-lite/src/interpolate.rs:254:34: 254:38}
    SourceInfo(regex-lite/src/interpolate.rs:254:34-254:48)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:254:9-254:49)
      kind: _40 = core::option::Option::<&u8>::map_or::<bool, {closure@regex-lite/src/interpolate.rs:254:34: 254:38}>(move _41, const false, move _44) -> [return: bb14, unwind: bb32]
  }
  preds [bb12]
  succs [bb14, bb32]

bb14
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:254:9-254:49)
      kind: switchInt(move _40) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb15
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/interpolate.rs:254:48-254:49)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/interpolate.rs:254:48-254:49)
  2: _39 = const ()
    SourceInfo(regex-lite/src/interpolate.rs:256:6-256:6)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/interpolate.rs:256:5-256:6)
  4: StorageDead(_39)
    SourceInfo(regex-lite/src/interpolate.rs:256:5-256:6)
  5: StorageLive(_46)
    SourceInfo(regex-lite/src/interpolate.rs:261:9-261:12)
  6: StorageLive(_47)
    SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
  7: StorageLive(_48)
    SourceInfo(regex-lite/src/interpolate.rs:261:42-261:56)
  8: StorageLive(_49)
    SourceInfo(regex-lite/src/interpolate.rs:261:42-261:56)
  9: StorageLive(_50)
    SourceInfo(regex-lite/src/interpolate.rs:261:46-261:56)
  10: StorageLive(_51)
    SourceInfo(regex-lite/src/interpolate.rs:261:43-261:46)
  11: _51 = &(*_1)
    SourceInfo(regex-lite/src/interpolate.rs:261:43-261:46)
  12: StorageLive(_52)
    SourceInfo(regex-lite/src/interpolate.rs:261:47-261:55)
  13: StorageLive(_53)
    SourceInfo(regex-lite/src/interpolate.rs:261:47-261:52)
  14: _53 = _27
    SourceInfo(regex-lite/src/interpolate.rs:261:47-261:52)
  15: StorageLive(_54)
    SourceInfo(regex-lite/src/interpolate.rs:261:54-261:55)
  16: _54 = _2
    SourceInfo(regex-lite/src/interpolate.rs:261:54-261:55)
  17: _52 = core::ops::Range::<usize> { start: move _53, end: move _54 }
    SourceInfo(regex-lite/src/interpolate.rs:261:47-261:55)
  18: StorageDead(_54)
    SourceInfo(regex-lite/src/interpolate.rs:261:54-261:55)
  19: StorageDead(_53)
    SourceInfo(regex-lite/src/interpolate.rs:261:54-261:55)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:261:46-261:56)
      kind: _50 = <[u8] as core::ops::Index<core::ops::Range<usize>>>::index(move _51, move _52) -> [return: bb17, unwind: bb32]
  }
  preds [bb14]
  succs [bb17, bb32]

bb16
  0: StorageDead(_44)
    SourceInfo(regex-lite/src/interpolate.rs:254:48-254:49)
  1: StorageDead(_41)
    SourceInfo(regex-lite/src/interpolate.rs:254:48-254:49)
  2: _0 = core::option::Option::<interpolate::CaptureRef<'_>>::None
    SourceInfo(regex-lite/src/interpolate.rs:255:16-255:20)
  3: StorageDead(_40)
    SourceInfo(regex-lite/src/interpolate.rs:256:5-256:6)
  4: StorageDead(_39)
    SourceInfo(regex-lite/src/interpolate.rs:256:5-256:6)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb14]
  succs [bb30]

bb17
  0: StorageDead(_52)
    SourceInfo(regex-lite/src/interpolate.rs:261:55-261:56)
  1: StorageDead(_51)
    SourceInfo(regex-lite/src/interpolate.rs:261:55-261:56)
  2: _49 = &(*_50)
    SourceInfo(regex-lite/src/interpolate.rs:261:42-261:56)
  3: _48 = &(*_49)
    SourceInfo(regex-lite/src/interpolate.rs:261:42-261:56)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
      kind: _47 = core::str::from_utf8(move _48) -> [return: bb18, unwind: bb32]
  }
  preds [bb15]
  succs [bb18, bb32]

bb18
  0: StorageDead(_48)
    SourceInfo(regex-lite/src/interpolate.rs:261:56-261:57)
  1: PlaceMention(_47)
    SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
  2: _55 = discriminant(_47)
    SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:261:15-261:57)
      kind: switchInt(move _55) -> [0: bb21, 1: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _47)
    SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:261:21-261:57)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:262:9-262:15)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_57)
    SourceInfo(regex-lite/src/interpolate.rs:263:12-263:15)
  1: _57 = ((_47 as Ok).0: &str)
    SourceInfo(regex-lite/src/interpolate.rs:263:12-263:15)
  2: _46 = _57
    SourceInfo(regex-lite/src/interpolate.rs:263:20-263:23)
  3: StorageDead(_57)
    SourceInfo(regex-lite/src/interpolate.rs:263:22-263:23)
  4: FakeRead(ForLet(None), _46)
    SourceInfo(regex-lite/src/interpolate.rs:261:9-261:12)
  5: StorageDead(_50)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  6: StorageDead(_49)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  7: StorageDead(_47)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  8: StorageLive(_58)
    SourceInfo(regex-lite/src/interpolate.rs:265:10-271:6)
  9: StorageLive(_59)
    SourceInfo(regex-lite/src/interpolate.rs:266:14-269:10)
  10: StorageLive(_60)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
  11: StorageLive(_61)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:23)
  12: _61 = &(*_46)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:23)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
      kind: _60 = core::str::<impl str>::parse::<usize>(move _61) -> [return: bb23, unwind: bb32]
  }
  preds [bb18, bb20]
  succs [bb23, bb32]

bb22
  0: _0 = core::option::Option::<interpolate::CaptureRef<'_>>::None
    SourceInfo(regex-lite/src/interpolate.rs:262:26-262:30)
  1: StorageDead(_50)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  2: StorageDead(_49)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  3: StorageDead(_47)
    SourceInfo(regex-lite/src/interpolate.rs:264:6-264:7)
  4: StorageDead(_46)
    SourceInfo(regex-lite/src/interpolate.rs:272:1-272:2)
  Terminator {
      source_info: SourceInfo(regex-lite/src/lib.rs:1:1-1:1)
      kind: goto -> bb30
  }
  preds [bb20]
  succs [bb30]

bb23
  0: StorageDead(_61)
    SourceInfo(regex-lite/src/interpolate.rs:266:39-266:40)
  1: PlaceMention(_60)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
  2: _62 = discriminant(_60)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:266:14-266:40)
      kind: switchInt(move _62) -> [0: bb25, 1: bb26, otherwise: bb24]
  }
  preds [bb21]
  succs [bb24, bb25, bb26]

bb24
  0: FakeRead(ForMatchedPlace(None), _60)
    SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:266:20-266:40)
      kind: unreachable
  }
  preds [bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:267:13-267:18)
      kind: falseEdge -> [real: bb27, imaginary: bb26]
  }
  preds [bb23]
  succs [bb26, bb27]

bb26
  0: StorageLive(_65)
    SourceInfo(regex-lite/src/interpolate.rs:268:34-268:37)
  1: _65 = &(*_46)
    SourceInfo(regex-lite/src/interpolate.rs:268:34-268:37)
  2: _59 = interpolate::Ref::<'_>::Named(move _65)
    SourceInfo(regex-lite/src/interpolate.rs:268:23-268:38)
  3: StorageDead(_65)
    SourceInfo(regex-lite/src/interpolate.rs:268:37-268:38)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:268:37-268:38)
      kind: goto -> bb28
  }
  preds [bb23, bb25]
  succs [bb28]

bb27
  0: StorageLive(_63)
    SourceInfo(regex-lite/src/interpolate.rs:267:16-267:17)
  1: _63 = ((_60 as Ok).0: usize)
    SourceInfo(regex-lite/src/interpolate.rs:267:16-267:17)
  2: StorageLive(_64)
    SourceInfo(regex-lite/src/interpolate.rs:267:34-267:35)
  3: _64 = _63
    SourceInfo(regex-lite/src/interpolate.rs:267:34-267:35)
  4: _59 = interpolate::Ref::<'_>::Number(move _64)
    SourceInfo(regex-lite/src/interpolate.rs:267:22-267:36)
  5: StorageDead(_64)
    SourceInfo(regex-lite/src/interpolate.rs:267:35-267:36)
  6: StorageDead(_63)
    SourceInfo(regex-lite/src/interpolate.rs:267:35-267:36)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:267:35-267:36)
      kind: goto -> bb28
  }
  preds [bb25]
  succs [bb28]

bb28
  0: StorageLive(_66)
    SourceInfo(regex-lite/src/interpolate.rs:270:14-270:19)
  1: StorageLive(_67)
    SourceInfo(regex-lite/src/interpolate.rs:270:14-270:15)
  2: _67 = _2
    SourceInfo(regex-lite/src/interpolate.rs:270:14-270:15)
  3: _68 = AddWithOverflow(_67, const 1_usize)
    SourceInfo(regex-lite/src/interpolate.rs:270:14-270:19)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:270:14-270:19)
      kind: assert(!move (_68.1: bool), "attempt to compute `{} + {}`, which would overflow", move _67, const 1_usize) -> [success: bb29, unwind: bb32]
  }
  preds [bb26, bb27]
  succs [bb29, bb32]

bb29
  0: _66 = move (_68.0: usize)
    SourceInfo(regex-lite/src/interpolate.rs:270:14-270:19)
  1: StorageDead(_67)
    SourceInfo(regex-lite/src/interpolate.rs:270:18-270:19)
  2: _58 = interpolate::CaptureRef::<'_> { cap: move _59, end: move _66 }
    SourceInfo(regex-lite/src/interpolate.rs:265:10-271:6)
  3: StorageDead(_66)
    SourceInfo(regex-lite/src/interpolate.rs:271:5-271:6)
  4: StorageDead(_59)
    SourceInfo(regex-lite/src/interpolate.rs:271:5-271:6)
  5: _0 = core::option::Option::<interpolate::CaptureRef<'_>>::Some(move _58)
    SourceInfo(regex-lite/src/interpolate.rs:265:5-271:7)
  6: StorageDead(_58)
    SourceInfo(regex-lite/src/interpolate.rs:271:6-271:7)
  7: StorageDead(_46)
    SourceInfo(regex-lite/src/interpolate.rs:272:1-272:2)
  8: StorageDead(_27)
    SourceInfo(regex-lite/src/interpolate.rs:272:1-272:2)
  9: StorageDead(_60)
    SourceInfo(regex-lite/src/interpolate.rs:272:1-272:2)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:272:2-272:2)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb30
  0: StorageDead(_27)
    SourceInfo(regex-lite/src/interpolate.rs:272:1-272:2)
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:272:2-272:2)
      kind: goto -> bb31
  }
  preds [bb16, bb22]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:272:2-272:2)
      kind: return
  }
  preds [bb29, bb30]
  succs []

bb32
  Terminator {
      source_info: SourceInfo(regex-lite/src/interpolate.rs:248:1-272:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb5, bb6, bb7, bb8, bb10, bb12, bb13, bb15, bb17, bb21, bb28]
  succs []

