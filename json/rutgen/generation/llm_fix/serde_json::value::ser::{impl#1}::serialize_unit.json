{
  "name": "serde_json::value::ser::{impl#1}::serialize_unit",
  "mod_info": {
    "name": "value::ser",
    "loc": "src/value/mod.rs:931:1:931:9"
  },
  "visible": true,
  "loc": "src/value/ser.rs:178:5:180:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "expected return value/type: Ok(Value::Null)\n"
      ],
      "input_infer": "self parameter must be an instance of Serializer and should be called without additional arguments.\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = Serializer;",
                "    let result = serializer.serialize_unit();",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Ok(Value::Null));"
              ],
              "code": [
                "{",
                "    let serializer = Serializer;",
                "    let result = serializer.serialize_unit();",
                "    assert_eq!(result, Ok(Value::Null));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = Serializer;",
                "    let result1 = serializer.serialize_unit();",
                "    let result2 = serializer.serialize_unit();",
                "}"
              ],
              "oracle": [
                "    let serializer = Serializer;",
                "    let result1 = serializer.serialize_unit();",
                "    assert_eq!(result1, Ok(Value::Null));",
                "    let result2 = serializer.serialize_unit();",
                "    assert_eq!(result2, Ok(Value::Null));"
              ],
              "code": [
                "{",
                "    let serializer = Serializer;",
                "    let result1 = serializer.serialize_unit();",
                "    let result2 = serializer.serialize_unit();",
                "    let serializer = Serializer;",
                "    let result1 = serializer.serialize_unit();",
                "    assert_eq!(result1, Ok(Value::Null));",
                "    let result2 = serializer.serialize_unit();",
                "    assert_eq!(result2, Ok(Value::Null));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}