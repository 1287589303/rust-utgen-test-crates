[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = starts_with_digit(\"a\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = starts_with_digit(\"a\");",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = starts_with_digit(\"!\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = starts_with_digit(\"!\");",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = starts_with_digit(\" \");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = starts_with_digit(\" \");",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = starts_with_digit(\"abc\");",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, false);"
        ],
        "code": [
          "{",
          "    let result = starts_with_digit(\"abc\");",
          "    assert_eq!(result, false);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = starts_with_digit(\"\");",
          "}"
        ],
        "oracle": [
          "    let result = starts_with_digit(\"A\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"b\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"C0\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"1\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\"9\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\"0\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\" # \"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"5abc\"); assert_eq!(result, true);"
        ],
        "code": [
          "{",
          "    let result = starts_with_digit(\"\");",
          "    let result = starts_with_digit(\"A\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"b\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"C0\"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"1\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\"9\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\"0\"); assert_eq!(result, true);",
          "    let result = starts_with_digit(\" # \"); assert_eq!(result, false);",
          "    let result = starts_with_digit(\"5abc\"); assert_eq!(result, true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]