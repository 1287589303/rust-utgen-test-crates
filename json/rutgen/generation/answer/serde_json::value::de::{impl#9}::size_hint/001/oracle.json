[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let values = vec![Value::Null];",
          "    let iter = values.clone().into_iter();",
          "    let deserializer = SeqDeserializer { iter };",
          "    deserializer.size_hint();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(deserializer.size_hint(), None);"
        ],
        "code": [
          "{",
          "    let values = vec![Value::Null];",
          "    let iter = values.clone().into_iter();",
          "    let deserializer = SeqDeserializer { iter };",
          "    deserializer.size_hint();",
          "    assert_eq!(deserializer.size_hint(), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let values = vec![Value::Bool(true), Value::Bool(false)];",
          "    let iter = values.clone().into_iter();",
          "    let deserializer = SeqDeserializer { iter };",
          "    deserializer.size_hint();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(deserializer.size_hint(), None);"
        ],
        "code": [
          "{",
          "    let values = vec![Value::Bool(true), Value::Bool(false)];",
          "    let iter = values.clone().into_iter();",
          "    let deserializer = SeqDeserializer { iter };",
          "    deserializer.size_hint();",
          "    assert_eq!(deserializer.size_hint(), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]