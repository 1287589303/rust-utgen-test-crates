[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_bool(true);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Value::Bool(true)));",
          "    let result_false = serializer.serialize_bool(false);",
          "    assert_eq!(result_false, Ok(Value::Bool(false)));"
        ],
        "code": [
          "{",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_bool(true);",
          "    assert_eq!(result, Ok(Value::Bool(true)));",
          "    let result_false = serializer.serialize_bool(false);",
          "    assert_eq!(result_false, Ok(Value::Bool(false)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_bool(false);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Value::Bool(false)));",
          "    let result = serializer.serialize_bool(true);",
          "    assert_eq!(result, Ok(Value::Bool(true)));"
        ],
        "code": [
          "{",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_bool(false);",
          "    assert_eq!(result, Ok(Value::Bool(false)));",
          "    let result = serializer.serialize_bool(true);",
          "    assert_eq!(result, Ok(Value::Bool(true)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]