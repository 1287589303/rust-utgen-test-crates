[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: i128 = -9_223_372_036_854_775_809; // Below i64 min",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "}"
        ],
        "oracle": [
          "    assert!(matches!(result, Err(Error::syntax(ErrorCode::NumberOutOfRange, 0, 0))));"
        ],
        "code": [
          "{",
          "    let value: i128 = -9_223_372_036_854_775_809; // Below i64 min",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "    assert!(matches!(result, Err(Error::syntax(ErrorCode::NumberOutOfRange, 0, 0))));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: i128 = 18_446_744_073_709_551_616; // Above u64 max",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Ok(Value::Number(Number { n: value.into() })));"
        ],
        "code": [
          "{",
          "    let value: i128 = 18_446_744_073_709_551_616; // Above u64 max",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "    assert_eq!(result, Ok(Value::Number(Number { n: value.into() })));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: i128 = -9_223_372_036_854_775_808; // i64 min",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_err());",
          "    assert_eq!(result.err().unwrap().err.code, ErrorCode::NumberOutOfRange);"
        ],
        "code": [
          "{",
          "    let value: i128 = -9_223_372_036_854_775_808; // i64 min",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "    assert!(result.is_err());",
          "    assert_eq!(result.err().unwrap().err.code, ErrorCode::NumberOutOfRange);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value: i128 = 9_223_372_036_854_775_807; // i64 max",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Err(Error::syntax(ErrorCode::NumberOutOfRange, 0, 0)));"
        ],
        "code": [
          "{",
          "    let value: i128 = 9_223_372_036_854_775_807; // i64 max",
          "    let serializer = Serializer;",
          "    let result = serializer.serialize_i128(value);",
          "    assert_eq!(result, Err(Error::syntax(ErrorCode::NumberOutOfRange, 0, 0)));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]