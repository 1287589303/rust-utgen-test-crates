[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = Number::from_u128(0);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, Some(Number { n: N::PosInt(0) }));"
        ],
        "code": [
          "{",
          "    let result = Number::from_u128(0);",
          "    assert_eq!(result, Some(Number { n: N::PosInt(0) }));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = Number::from_u128(1);",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_some());",
          "    assert_eq!(result.as_u64(), Some(1));",
          "    assert_eq!(result.as_i64(), Some(1));",
          "    assert_eq!(result.as_f64(), Some(1.0));",
          "    assert_eq!(result.as_u128(), Some(1));",
          "    assert_eq!(result.as_i128(), Some(1));"
        ],
        "code": [
          "{",
          "    let result = Number::from_u128(1);",
          "    assert!(result.is_some());",
          "    assert_eq!(result.as_u64(), Some(1));",
          "    assert_eq!(result.as_i64(), Some(1));",
          "    assert_eq!(result.as_f64(), Some(1.0));",
          "    assert_eq!(result.as_u128(), Some(1));",
          "    assert_eq!(result.as_i128(), Some(1));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = Number::from_u128(18446744073709551615); // u64::MAX",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = Number::from_u128(18446744073709551615); // u64::MAX",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = Number::from_u128(18446744073709551616); // u64::MAX + 1",
          "}"
        ],
        "oracle": [
          "    assert!(result.is_none());"
        ],
        "code": [
          "{",
          "    let result = Number::from_u128(18446744073709551616); // u64::MAX + 1",
          "    assert!(result.is_none());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = Number::from_u128(340282366920938463463374607431768211456); // 2^128",
          "}"
        ],
        "oracle": [
          "    assert_eq!(Number::from_u128(340282366920938463463374607431768211456), None);"
        ],
        "code": [
          "{",
          "    let result = Number::from_u128(340282366920938463463374607431768211456); // 2^128",
          "    assert_eq!(Number::from_u128(340282366920938463463374607431768211456), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]