[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(42));",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "oracle": [
          "    assert!(number_value.is_number());"
        ],
        "code": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(42));",
          "    assert!(number_value.is_number());",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from_f64(3.14).unwrap());",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "oracle": [
          "    assert!(number_value.is_number());"
        ],
        "code": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from_f64(3.14).unwrap());",
          "    assert!(number_value.is_number());",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(999999999999999999));",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number_value.is_number(), true);"
        ],
        "code": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(999999999999999999));",
          "    assert!(number_value.is_number());",
          "    assert_eq!(number_value.is_number(), true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(-100));",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "oracle": [
          "    assert!(number_value.is_number());"
        ],
        "code": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from(-100));",
          "    assert!(number_value.is_number());",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from_f64(-2.718).unwrap());",
          "    assert!(number_value.is_number());",
          "}"
        ],
        "oracle": [
          "    assert!(number_value.is_number() == true);"
        ],
        "code": [
          "{",
          "    let number_value = serde_json::Value::Number(serde_json::Number::from_f64(-2.718).unwrap());",
          "    assert!(number_value.is_number());",
          "    assert!(number_value.is_number() == true);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]