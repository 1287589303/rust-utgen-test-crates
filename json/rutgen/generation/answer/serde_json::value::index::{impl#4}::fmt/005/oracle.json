[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value = Value::Bool(true);",
          "    let type_instance = Type(&value);",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = type_instance.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.to_string(), \"boolean\");"
        ],
        "code": [
          "{",
          "    let value = Value::Bool(true);",
          "    let type_instance = Type(&value);",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = type_instance.fmt(&mut formatter);",
          "    assert_eq!(formatter.to_string(), \"boolean\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value = Value::Bool(false);",
          "    let type_instance = Type(&value);",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = type_instance.fmt(&mut formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(formatter.output(), \"boolean\");"
        ],
        "code": [
          "{",
          "    let value = Value::Bool(false);",
          "    let type_instance = Type(&value);",
          "    let mut formatter = fmt::Formatter::new();",
          "    let _ = type_instance.fmt(&mut formatter);",
          "    assert_eq!(formatter.output(), \"boolean\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]