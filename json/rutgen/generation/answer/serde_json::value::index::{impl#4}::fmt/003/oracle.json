[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value = Value::String(String::from(\"\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");"
        ],
        "code": [
          "{",
          "    let value = Value::String(String::from(\"\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value = Value::String(String::from(\"a\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");"
        ],
        "code": [
          "{",
          "    let value = Value::String(String::from(\"a\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let value = Value::String(String::from(\"a very long string...\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).is_ok(), true);",
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");"
        ],
        "code": [
          "{",
          "    let value = Value::String(String::from(\"a very long string...\"));",
          "    let type_instance = Type(&value);",
          "    let _ = type_instance.fmt(&mut fmt::Formatter::default());",
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).is_ok(), true);",
          "    assert_eq!(type_instance.fmt(&mut fmt::Formatter::default()).unwrap(), \"string\");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]