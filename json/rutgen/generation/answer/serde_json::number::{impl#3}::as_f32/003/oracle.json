[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(0) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number.as_f32(), Some(0.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(0) };",
          "    let _ = number.as_f32();",
          "    assert_eq!(number.as_f32(), Some(0.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(1) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number.as_f32(), Some(1.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(1) };",
          "    let _ = number.as_f32();",
          "    assert_eq!(number.as_f32(), Some(1.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(16777215) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number.as_f32(), Some(16777215.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(16777215) };",
          "    let _ = number.as_f32();",
          "    assert_eq!(number.as_f32(), Some(16777215.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(2) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number.as_f32(), Some(2.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(2) };",
          "    let _ = number.as_f32();",
          "    assert_eq!(number.as_f32(), Some(2.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(16384) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(number.as_f32(), Some(16384.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(16384) };",
          "    let _ = number.as_f32();",
          "    assert_eq!(number.as_f32(), Some(16384.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let number = Number { n: N::PosInt(123456) };",
          "    let _ = number.as_f32();",
          "}"
        ],
        "oracle": [
          "    assert!(number.as_f32().is_some());",
          "    assert_eq!(number.as_f32(), Some(123456.0));"
        ],
        "code": [
          "{",
          "    let number = Number { n: N::PosInt(123456) };",
          "    let _ = number.as_f32();",
          "    assert!(number.as_f32().is_some());",
          "    assert_eq!(number.as_f32(), Some(123456.0));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]