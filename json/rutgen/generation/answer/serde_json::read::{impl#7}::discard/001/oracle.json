[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1, 2, 3, 4, 5],",
          "        index: 2,",
          "    };",
          "    slice_read.discard();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slice_read.index, 3);"
        ],
        "code": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1, 2, 3, 4, 5],",
          "        index: 2,",
          "    };",
          "    slice_read.discard();",
          "    assert_eq!(slice_read.index, 3);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1, 2, 3],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slice_read.index, 1);"
        ],
        "code": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1, 2, 3],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "    assert_eq!(slice_read.index, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slice_read.index, 1);",
          "    assert_eq!(slice_read.slice, &[1]);",
          "    assert!(slice_read.slice.len() > slice_read.index);",
          "    assert!(slice_read.index > 0);"
        ],
        "code": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[1],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "    assert_eq!(slice_read.index, 1);",
          "    assert_eq!(slice_read.slice, &[1]);",
          "    assert!(slice_read.slice.len() > slice_read.index);",
          "    assert!(slice_read.index > 0);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "}"
        ],
        "oracle": [
          "    assert_eq!(slice_read.index, 1);"
        ],
        "code": [
          "{",
          "    let mut slice_read = SliceRead {",
          "        slice: &[],",
          "        index: 0,",
          "    };",
          "    slice_read.discard();",
          "    assert_eq!(slice_read.index, 1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]