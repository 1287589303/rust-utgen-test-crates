[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let neg_int = N::NegInt(-1);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(hasher.finish(), expected_hash_value_for_neg_int_minus1);"
        ],
        "code": [
          "{",
          "    let neg_int = N::NegInt(-1);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "    assert_eq!(hasher.finish(), expected_hash_value_for_neg_int_minus1);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let neg_int = N::NegInt(i64::MIN);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "}"
        ],
        "oracle": [
          "    let neg_int = N::NegInt(i64::MIN);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "    let hash_value = hasher.finish();",
          "    assert_eq!(hash_value, expected_hash_value_for_neg_int_min);"
        ],
        "code": [
          "{",
          "    let neg_int = N::NegInt(i64::MIN);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "    let neg_int = N::NegInt(i64::MIN);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "    let hash_value = hasher.finish();",
          "    assert_eq!(hash_value, expected_hash_value_for_neg_int_min);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let neg_int = N::NegInt(-9223372036854775807);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "}"
        ],
        "oracle": [
          "    let neg_int = N::NegInt(-9223372036854775807);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    hasher.finish() == expected_hash_value;"
        ],
        "code": [
          "{",
          "    let neg_int = N::NegInt(-9223372036854775807);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    neg_int.hash(&mut hasher);",
          "    let neg_int = N::NegInt(-9223372036854775807);",
          "    let mut hasher = std::collections::hash_map::DefaultHasher::new();",
          "    hasher.finish() == expected_hash_value;",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]