[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = decode_four_hex_digits(0x00, 0x00, 0x00, 0x00);",
          "}"
        ],
        "oracle": [
          "    let result = decode_four_hex_digits(0x80, 0x00, 0x00, 0x00);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0xFF, 0x01, 0xFF, 0x01);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x0A, 0x00, 0x0B, 0x00);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x10, 0xFF, 0x10, 0xFF);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x20, 0x00, 0x40, 0x00);",
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = decode_four_hex_digits(0x00, 0x00, 0x00, 0x00);",
          "    let result = decode_four_hex_digits(0x80, 0x00, 0x00, 0x00);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0xFF, 0x01, 0xFF, 0x01);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x0A, 0x00, 0x0B, 0x00);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x10, 0xFF, 0x10, 0xFF);",
          "    assert_eq!(result, None);",
          "    ",
          "    let result = decode_four_hex_digits(0x20, 0x00, 0x40, 0x00);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let result = decode_four_hex_digits(254, 254, 254, 254);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(result, None);"
        ],
        "code": [
          "{",
          "    let result = decode_four_hex_digits(254, 254, 254, 254);",
          "    assert_eq!(result, None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]