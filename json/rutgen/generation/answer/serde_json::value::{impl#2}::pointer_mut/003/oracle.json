[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut value = Value::Object(Map::new());",
          "    value.pointer_mut(\"\").map(|_| ());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value.pointer_mut(\"\"), None);"
        ],
        "code": [
          "{",
          "    let mut value = Value::Object(Map::new());",
          "    value.pointer_mut(\"\").map(|_| ());",
          "    assert_eq!(value.pointer_mut(\"\"), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut value = Value::Object(Map::new());",
          "    value.pointer_mut(\"invalid_pointer\").map(|_| ());",
          "}"
        ],
        "oracle": [
          "    assert_eq!(value.pointer_mut(\"invalid_pointer\"), None);"
        ],
        "code": [
          "{",
          "    let mut value = Value::Object(Map::new());",
          "    value.pointer_mut(\"invalid_pointer\").map(|_| ());",
          "    assert_eq!(value.pointer_mut(\"invalid_pointer\"), None);",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut value = Value::Array(vec![Value::Null, Value::Null]);",
          "    value.pointer_mut(\"1/2\").map(|_| ());",
          "}"
        ],
        "oracle": [
          "    value.pointer_mut(\"1/2\").is_none();"
        ],
        "code": [
          "{",
          "    let mut value = Value::Array(vec![Value::Null, Value::Null]);",
          "    value.pointer_mut(\"1/2\").map(|_| ());",
          "    value.pointer_mut(\"1/2\").is_none();",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]