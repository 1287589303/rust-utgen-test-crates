[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 10 column 5\");",
          "    let result = parse_line_col(&mut msg);",
          "}"
        ],
        "oracle": [
          "    let mut msg = String::from(\"Error occurred at line 10 column 5\");",
          "    let result = parse_line_col(&mut msg);",
          "    assert_eq!(result, Some((10, 5)));",
          "    assert_eq!(msg, \"Error occurred \");"
        ],
        "code": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 10 column 5\");",
          "    let result = parse_line_col(&mut msg);",
          "    let mut msg = String::from(\"Error occurred at line 10 column 5\");",
          "    let result = parse_line_col(&mut msg);",
          "    assert_eq!(result, Some((10, 5)));",
          "    assert_eq!(msg, \"Error occurred \");",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 0 column 1\");",
          "    let result = parse_line_col(&mut msg);",
          "}"
        ],
        "oracle": [
          "    let mut msg = String::from(\"Error occurred at line 0 column 1\");",
          "    assert_eq!(result, Some((0, 1)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));"
        ],
        "code": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 0 column 1\");",
          "    let result = parse_line_col(&mut msg);",
          "    let mut msg = String::from(\"Error occurred at line 0 column 1\");",
          "    assert_eq!(result, Some((0, 1)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 10 column 0\");",
          "    let result = parse_line_col(&mut msg);",
          "}"
        ],
        "oracle": [
          "    let mut msg = String::from(\"Error occurred at line 10 column 0\");",
          "    let result = parse_line_col(&mut msg);",
          "    assert_eq!(result, Some((10, 0)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));"
        ],
        "code": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 10 column 0\");",
          "    let result = parse_line_col(&mut msg);",
          "    let mut msg = String::from(\"Error occurred at line 10 column 0\");",
          "    let result = parse_line_col(&mut msg);",
          "    assert_eq!(result, Some((10, 0)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 123456789 column 987654321\");",
          "    let result = parse_line_col(&mut msg);",
          "}"
        ],
        "oracle": [
          "    let mut msg = String::from(\"Error occurred at line 123456789 column 987654321\");",
          "    assert_eq!(result, Some((123456789, 987654321)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));"
        ],
        "code": [
          "{",
          "    let mut msg = String::from(\"Error occurred at line 123456789 column 987654321\");",
          "    let result = parse_line_col(&mut msg);",
          "    let mut msg = String::from(\"Error occurred at line 123456789 column 987654321\");",
          "    assert_eq!(result, Some((123456789, 987654321)));",
          "    assert_eq!(msg, String::from(\"Error occurred\"));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]