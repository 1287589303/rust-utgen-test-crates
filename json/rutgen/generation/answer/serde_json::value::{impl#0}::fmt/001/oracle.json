[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct ErrFormatter;",
          "",
          "    impl fmt::Write for ErrFormatter {",
          "        fn write_str(&mut self, _: &str) -> fmt::Result {",
          "            Err(fmt::Error)",
          "        }",
          "    }",
          "",
          "    let mut err_formatter = ErrFormatter;",
          "    ",
          "    let obj = Value::Object(Map {",
          "        map: MapImpl::new(),",
          "    });",
          "",
          "    let _ = obj.fmt(&mut err_formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(obj.fmt(&mut err_formatter), Err(fmt::Error));"
        ],
        "code": [
          "{",
          "    struct ErrFormatter;",
          "",
          "    impl fmt::Write for ErrFormatter {",
          "        fn write_str(&mut self, _: &str) -> fmt::Result {",
          "            Err(fmt::Error)",
          "        }",
          "    }",
          "",
          "    let mut err_formatter = ErrFormatter;",
          "    ",
          "    let obj = Value::Object(Map {",
          "        map: MapImpl::new(),",
          "    });",
          "",
          "    let _ = obj.fmt(&mut err_formatter);",
          "    assert_eq!(obj.fmt(&mut err_formatter), Err(fmt::Error));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      },
      {
        "attrs": [],
        "prefix": [
          "{",
          "    struct ErrFormatter;",
          "",
          "    impl fmt::Write for ErrFormatter {",
          "        fn write_str(&mut self, _: &str) -> fmt::Result {",
          "            Err(fmt::Error)",
          "        }",
          "    }",
          "",
          "    let mut err_formatter = ErrFormatter;",
          "    ",
          "    let obj = Value::Object(Map {",
          "        map: MapImpl::new(),",
          "    });",
          "",
          "    let _ = obj.fmt(&mut err_formatter);",
          "}"
        ],
        "oracle": [
          "    assert_eq!(obj.fmt(&mut err_formatter), Err(fmt::Error));"
        ],
        "code": [
          "{",
          "    struct ErrFormatter;",
          "",
          "    impl fmt::Write for ErrFormatter {",
          "        fn write_str(&mut self, _: &str) -> fmt::Result {",
          "            Err(fmt::Error)",
          "        }",
          "    }",
          "",
          "    let mut err_formatter = ErrFormatter;",
          "    ",
          "    let obj = Value::Object(Map {",
          "        map: MapImpl::new(),",
          "    });",
          "",
          "    let _ = obj.fmt(&mut err_formatter);",
          "    assert_eq!(obj.fmt(&mut err_formatter), Err(fmt::Error));",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]