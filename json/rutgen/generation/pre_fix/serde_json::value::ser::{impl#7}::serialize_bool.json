{
  "name": "serde_json::value::ser::{impl#7}::serialize_bool",
  "mod_info": {
    "name": "value::ser",
    "loc": "src/value/mod.rs:931:1:931:9"
  },
  "visible": true,
  "loc": "src/value/ser.rs:488:5:490:6",
  "fn_tests": [
    {
      "chain_id": 1,
      "prompt_conds": [
        "precondition: value at line 489 is true\n",
        "expected return value/type: Ok(if value { \"true\" } else { \"false\" }.to_owned())\n"
      ],
      "input_infer": "value: true; expected return value: Ok(\"true\")\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let result = serializer.serialize_bool(true);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Ok(\"true\".to_owned()));"
              ],
              "code": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let result = serializer.serialize_bool(true);",
                "    assert_eq!(result, Ok(\"true\".to_owned()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let result = serializer.serialize_bool(false);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Ok(\"false\".to_owned()));"
              ],
              "code": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let result = serializer.serialize_bool(false);",
                "    assert_eq!(result, Ok(\"false\".to_owned()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    },
    {
      "chain_id": 2,
      "prompt_conds": [
        "precondition: value at line 489 is false\n",
        "expected return value/type: Ok(if value { \"true\" } else { \"false\" }.to_owned())\n"
      ],
      "input_infer": "value = false\n",
      "answers": [
        {
          "uses": [],
          "has_test_mod": false,
          "common": [],
          "chain_tests": [
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let value = false;",
                "    let result = serializer.serialize_bool(value);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Ok(\"false\".to_owned()));"
              ],
              "code": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let value = false;",
                "    let result = serializer.serialize_bool(value);",
                "    assert_eq!(result, Ok(\"false\".to_owned()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            },
            {
              "attrs": [],
              "prefix": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let value = true;",
                "    let result = serializer.serialize_bool(value);",
                "}"
              ],
              "oracle": [
                "    assert_eq!(result, Ok(\"true\".to_owned()));"
              ],
              "code": [
                "{",
                "    let serializer = MapKeySerializer;",
                "    let value = true;",
                "    let result = serializer.serialize_bool(value);",
                "    assert_eq!(result, Ok(\"true\".to_owned()));",
                "}"
              ],
              "can_compile": false,
              "repaired": false
            }
          ]
        }
      ]
    }
  ]
}