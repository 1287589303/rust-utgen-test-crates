[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _2 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:367:9: 367:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [5: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<&map::Map<alloc::string::String, value::Value>>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:369:18: 369:22 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:368:13: 368:31 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb3, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(((*_1) as Object).0: map::Map<alloc::string::String, value::Value>),
            StorageLive(_4),
            _4 = &(*_3),
            _0 = core::option::Option::<&map::Map<alloc::string::String, value::Value>>::Some(move _4),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:368:43: 368:44 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:371:6: 371:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} map::Map<alloc::string::String, value::Value>>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:366:32: 366:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:366:22: 366:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:368:13: 368:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/value/mod.rs:367:15: 367:19 (#0),
                            ),
                        ),
                        pat_span: src/value/mod.rs:368:13: 368:31 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} map::Map<alloc::string::String, value::Value>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:368:27: 368:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} map::Map<alloc::string::String, value::Value>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:368:40: 368:43 (#0),
            scope: scope[0],
        },
    },
]