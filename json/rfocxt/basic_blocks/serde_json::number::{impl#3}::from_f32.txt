[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:321:12: 321:25 (#0),
                    scope: scope[0],
                },
                kind: _2 = core::f32::<impl f32>::is_finite(move _3) -> [return: bb1, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:321:12: 321:25 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _1,
            _5 = move _6 as f64 (FloatToFloat),
            StorageDead(_6),
            _4 = number::N::Float(move _5),
            StorageDead(_5),
            FakeRead(ForLet(None), _4),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _4,
            _7 = number::Number { n: move _8 },
            StorageDead(_8),
            _0 = core::option::Option::<number::Number>::Some(move _7),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:321:9: 335:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = core::option::Option::<number::Number>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:321:9: 335:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb4,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:336:6: 336:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:320:5: 336:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<number::Number>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:320:39: 320:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/number.rs:320:31: 320:34 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:320:28: 320:29 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:320:28: 320:29 (#0),
                    },
                ),
            ),
        ),
        ty: f32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:320:28: 320:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:321:9: 335:10 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:321:12: 321:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:321:9: 335:10 (#0),
                },
            ),
        ),
        ty: f32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:321:12: 321:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:322:21: 331:14 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:322:17: 322:18 (#0),
                    },
                ),
            ),
        ),
        ty: number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:322:17: 322:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:325:30: 325:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:325:21: 325:39 (#0),
                },
            ),
        ),
        ty: f32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:325:30: 325:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:332:18: 332:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:332:27: 332:28 (#0),
            scope: scope[0],
        },
    },
]