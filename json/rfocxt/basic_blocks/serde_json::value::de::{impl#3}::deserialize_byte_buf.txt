[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _3 = discriminant(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:411:9: 411:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [3: bb2, 4: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            StorageLive(_11),
            _11 = &_1,
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = &_2,
            _13 = &(*_14),
            _12 = move _13 as &dyn serde::de::Expected (PointerCoercion(Unsize)),
            StorageDead(_13),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:415:22: 415:49 (#0),
                    scope: scope[0],
                },
                kind: _10 = value::de::<impl value::Value>::invalid_type::<error::Error>(move _11, move _12) -> [return: bb10, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:13: 413:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:13: 414:28 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = move ((_1 as String).0: alloc::string::String),
            StorageLive(_5),
            _5 = move _2,
            StorageLive(_6),
            _6 = move _4,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:33: 413:56 (#0),
                    scope: scope[1],
                },
                kind: _0 = <V as serde::de::Visitor<'_>>::visit_string::<error::Error>(move _5, move _6) -> [return: bb5, unwind: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:55: 413:56 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb6, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:55: 413:56 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = move ((_1 as Array).0: alloc::vec::Vec<value::Value>),
            StorageLive(_8),
            _8 = move _7,
            StorageLive(_9),
            _9 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:32: 414:55 (#0),
                    scope: scope[2],
                },
                kind: _0 = value::de::visit_array::<'_, V>(move _8, move _9) -> [return: bb8, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:54: 414:55 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb9, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:54: 414:55 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            StorageDead(_11),
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:415:49: 415:50 (#0),
                    scope: scope[0],
                },
                kind: drop(_10) -> [return: bb11, unwind: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:415:49: 415:50 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb12,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:417:5: 417:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb13, unwind: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:417:5: 417:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb14, unwind: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:417:6: 417:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:54: 414:55 (#0),
                    scope: scope[2],
                },
                kind: drop(_9) -> [return: bb16, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:54: 414:55 (#0),
                    scope: scope[2],
                },
                kind: drop(_8) -> [return: bb17, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:414:54: 414:55 (#0),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb21, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:55: 413:56 (#0),
                    scope: scope[1],
                },
                kind: drop(_6) -> [return: bb19, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:55: 413:56 (#0),
                    scope: scope[1],
                },
                kind: drop(_5) -> [return: bb20, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:413:55: 413:56 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb21, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:417:5: 417:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb22, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:417:5: 417:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb23, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/de.rs:407:5: 417:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#1, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:407:53: 407:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:407:32: 407:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/de.rs:407:47: 407:48 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/de.rs:407:38: 407:45 (#0),
                            ),
                        ),
                        pat_span: src/value/de.rs:407:38: 407:45 (#0),
                    },
                ),
            ),
        ),
        ty: V/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:407:38: 407:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:413:13: 413:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/value/de.rs:411:15: 411:19 (#0),
                            ),
                        ),
                        pat_span: src/value/de.rs:413:13: 413:29 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:413:27: 413:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: V/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:413:33: 413:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: alloc::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:413:54: 413:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/value/de.rs:411:15: 411:19 (#0),
                            ),
                        ),
                        pat_span: src/value/de.rs:414:13: 414:28 (#0),
                    },
                ),
            ),
        ),
        ty: alloc::vec::Vec<value::Value, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:414:26: 414:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: alloc::vec::Vec<value::Value, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:414:44: 414:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: V/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:414:47: 414:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:415:22: 415:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: &'{erased} value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:415:22: 415:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: &'{erased} dyn [Binder { value: Trait(serde::de::Expected), bound_vars: [] }] + '{erased},
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:415:40: 415:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:415:40: 415:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/de.rs:411:9: 416:10 (#0),
                },
            ),
        ),
        ty: &'{erased} V/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/de.rs:415:40: 415:48 (#0),
            scope: scope[0],
        },
    },
]