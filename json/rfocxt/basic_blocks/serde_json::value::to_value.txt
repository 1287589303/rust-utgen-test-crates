[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &_1,
            StorageLive(_3),
            _3 = value::ser::Serializer,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:992:5: 992:32 (#0),
                    scope: scope[0],
                },
                kind: _0 = <T as serde::Serialize>::serialize::<value::ser::Serializer>(move _2, move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:993:1: 993:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:993:2: 993:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:993:1: 993:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:988:1: 993:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<value::Value, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:988:33: 988:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/mod.rs:988:27: 988:28 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/mod.rs:988:20: 988:25 (#0),
                            ),
                        ),
                        pat_span: src/value/mod.rs:988:20: 988:25 (#0),
                    },
                ),
            ),
        ),
        ty: T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:988:20: 988:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/mod.rs:992:5: 992:32 (#0),
                },
            ),
        ),
        ty: &'{erased} T/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:992:5: 992:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/mod.rs:992:5: 992:32 (#0),
                },
            ),
        ),
        ty: value::ser::Serializer,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:992:21: 992:31 (#0),
            scope: scope[0],
        },
    },
]