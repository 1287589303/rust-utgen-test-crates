[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).0: alloc::collections::BTreeMap<alloc::string::String, value::Value>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:399:18: 399:34 (#0),
                    scope: scope[0],
                },
                kind: _2 = <alloc::collections::BTreeMap<alloc::string::String, value::Value> as core::clone::Clone>::clone(move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            _0 = map::Map::<alloc::string::String, value::Value> { map: move _2 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:400:9: 400:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:401:6: 401:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/map.rs:397:5: 401:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: map::Map<alloc::string::String, value::Value>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:397:24: 397:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} map::Map<alloc::string::String, value::Value>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:397:14: 397:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::collections::BTreeMap<alloc::string::String, value::Value, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:399:18: 399:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/map.rs:398:9: 400:10 (#0),
                },
            ),
        ),
        ty: &'{erased} alloc::collections::BTreeMap<alloc::string::String, value::Value, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/map.rs:399:18: 399:26 (#0),
            scope: scope[0],
        },
    },
]