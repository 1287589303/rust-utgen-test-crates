[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = move _1,
            StorageLive(_3),
            _3 = <number::Number as serde::Deserialize<'de>>::deserialize::NumberVisitor,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:455:9: 455:52 (#0),
                    scope: scope[0],
                },
                kind: _0 = <D as serde::Deserializer<'_>>::deserialize_any::<<number::Number as serde::Deserialize<'de>>::deserialize::NumberVisitor>(move _2, move _3) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:456:5: 456:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb2, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:456:6: 456:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:455:51: 455:52 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb4, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:456:5: 456:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:397:5: 456:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<number::Number, Alias(Projection, AliasTy { args: [D/#1, '{erased}], def_id: DefId(20:1479 ~ serde[bd03]::de::Deserializer::Error) })>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:397:43: 397:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/number.rs:397:37: 397:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:397:23: 397:35 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:397:23: 397:35 (#0),
                    },
                ),
            ),
        ),
        ty: D/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:397:23: 397:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:455:9: 455:52 (#0),
                },
            ),
        ),
        ty: D/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:455:9: 455:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:455:9: 455:52 (#0),
                },
            ),
        ),
        ty: <number::Number as serde::Deserialize<'de>>::deserialize::NumberVisitor,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:455:38: 455:51 (#0),
            scope: scope[0],
        },
    },
]