[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            _5 = &(*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/partial_eq.rs:9:5: 9:19 (#0),
                    scope: scope[0],
                },
                kind: _4 = value::Value::as_u64(move _5) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = &_4,
            StorageDead(_5),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _2,
            _7 = core::option::Option::<u64>::Some(move _8),
            _6 = &_7,
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                    scope: scope[0],
                },
                kind: _0 = <core::option::Option<u64> as core::cmp::PartialEq>::eq(move _3, move _6) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_3),
            StorageDead(_7),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/partial_eq.rs:10:2: 10:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/partial_eq.rs:8:1: 10:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:8:41: 8:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/partial_eq.rs:8:18: 8:24 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/partial_eq.rs:8:11: 8:16 (#0),
                            ),
                        ),
                        pat_span: src/value/partial_eq.rs:8:11: 8:16 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:8:11: 8:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/partial_eq.rs:8:33: 8:36 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/partial_eq.rs:8:26: 8:31 (#0),
                            ),
                        ),
                        pat_span: src/value/partial_eq.rs:8:26: 8:31 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:8:26: 8:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:5: 9:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                },
            ),
        ),
        ty: core::option::Option<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:5: 9:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                },
            ),
        ),
        ty: &'{erased} value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:5: 9:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                },
            ),
        ),
        ty: &'{erased} core::option::Option<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:23: 9:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/partial_eq.rs:9:5: 9:34 (#0),
                },
            ),
        ),
        ty: core::option::Option<u64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:23: 9:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/partial_eq.rs:9:28: 9:33 (#0),
            scope: scope[0],
        },
    },
]