[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _2 = discriminant((*_1)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:632:9: 632:19 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [2: bb2, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<i64>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:634:18: 634:22 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb5,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:633:13: 633:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb3, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = &(((*_1) as Number).0: number::Number),
            StorageLive(_4),
            _4 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:633:33: 633:43 (#0),
                    scope: scope[1],
                },
                kind: _0 = number::Number::as_i64(move _4) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:633:42: 633:43 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb5,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:636:6: 636:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:631:5: 636:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<i64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:631:29: 631:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:631:19: 631:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:633:13: 633:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                src/value/mod.rs:632:15: 632:19 (#0),
                            ),
                        ),
                        pat_span: src/value/mod.rs:633:13: 633:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:633:27: 633:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/mod.rs:632:9: 635:10 (#0),
                },
            ),
        ),
        ty: &'{erased} number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:633:33: 633:34 (#0),
            scope: scope[0],
        },
    },
]