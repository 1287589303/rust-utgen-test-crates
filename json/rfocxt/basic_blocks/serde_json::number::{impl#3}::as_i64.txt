[
    BasicBlockData {
        statements: [
            PlaceMention(((*_1).0: number::N)),
            _2 = discriminant(((*_1).0: number::N)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:134:9: 134:21 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), ((*_1).0: number::N)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:134:15: 134:21 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:135:13: 135:25 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:142:13: 142:25 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb9, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<i64>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:143:28: 143:32 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = ((((*_1).0: number::N) as PosInt).0: u64),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _3,
            StorageLive(_6),
            _6 = const core::num::<impl i64>::MAX as u64 (IntToInt),
            _4 = Le(move _5, move _6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:136:20: 136:40 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _4) -> [0: bb7, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _3,
            _7 = move _8 as i64 (IntToInt),
            StorageDead(_8),
            _0 = core::option::Option::<i64>::Some(move _7),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:136:17: 140:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            StorageDead(_5),
            _0 = core::option::Option::<i64>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:136:17: 140:18 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:141:13: 141:14 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = ((((*_1).0: number::N) as NegInt).0: i64),
            StorageLive(_10),
            _10 = _9,
            _0 = core::option::Option::<i64>::Some(move _10),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:142:35: 142:36 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:147:6: 147:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<i64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:132:29: 132:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:132:19: 132:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:135:13: 135:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: number::N),
                                ),
                                src/number.rs:134:15: 134:21 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:135:13: 135:25 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:135:23: 135:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:136:17: 140:18 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:136:20: 136:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:136:17: 140:18 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:136:20: 136:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:136:17: 140:18 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:136:25: 136:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:137:26: 137:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:137:21: 137:35 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:137:26: 137:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: number::N),
                                ),
                                src/number.rs:134:15: 134:21 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:142:13: 142:25 (#0),
                    },
                ),
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:142:23: 142:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:142:34: 142:35 (#0),
            scope: scope[0],
        },
    },
]