[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
            StorageLive(_5),
            _5 = _2,
            _3 = (move _4, move _5),
            StorageDead(_5),
            StorageDead(_4),
            PlaceMention(_3),
            _9 = discriminant((*(_3.0: &number::N))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:39:9: 39:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _9) -> [0: bb2, 1: bb4, 2: bb6, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = const false,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:43:18: 43:23 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = discriminant((*(_3.1: &number::N))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:39:9: 39:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:40:13: 40:41 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb8, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = discriminant((*(_3.1: &number::N))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:39:9: 39:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [1: bb5, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:41:13: 41:41 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = discriminant((*(_3.1: &number::N))),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:39:9: 39:28 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _8) -> [2: bb7, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:42:13: 42:39 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_10),
            _10 = &(((*(_3.0: &number::N)) as PosInt).0: u64),
            StorageLive(_11),
            _11 = &(((*(_3.1: &number::N)) as PosInt).0: u64),
            StorageLive(_12),
            _12 = &_10,
            StorageLive(_13),
            _13 = &_11,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:40:45: 40:51 (#0),
                    scope: scope[1],
                },
                kind: _0 = <&u64 as core::cmp::PartialEq>::eq(move _12, move _13) -> [return: bb9, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_13),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:40:50: 40:51 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            _14 = &(((*(_3.0: &number::N)) as NegInt).0: i64),
            StorageLive(_15),
            _15 = &(((*(_3.1: &number::N)) as NegInt).0: i64),
            StorageLive(_16),
            _16 = &_14,
            StorageLive(_17),
            _17 = &_15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:41:45: 41:51 (#0),
                    scope: scope[2],
                },
                kind: _0 = <&i64 as core::cmp::PartialEq>::eq(move _16, move _17) -> [return: bb11, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageDead(_15),
            StorageDead(_14),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:41:50: 41:51 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            _18 = &(((*(_3.0: &number::N)) as Float).0: f64),
            StorageLive(_19),
            _19 = &(((*(_3.1: &number::N)) as Float).0: f64),
            StorageLive(_20),
            _20 = &_18,
            StorageLive(_21),
            _21 = &_19,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:42:43: 42:49 (#0),
                    scope: scope[3],
                },
                kind: _0 = <&f64 as core::cmp::PartialEq>::eq(move _20, move _21) -> [return: bb13, unwind: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_19),
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:42:48: 42:49 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:45:6: 45:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:38:5: 45:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:38:35: 38:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:38:11: 38:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/number.rs:38:25: 38:30 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:38:18: 38:23 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:38:18: 38:23 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:38:18: 38:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: (&'{erased} number::N, &'{erased} number::N),
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:39:15: 39:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:39:16: 39:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:39:22: 39:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:28: 40:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:41:28: 41:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:42:27: 42:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:14: 40:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:40:13: 40:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:24: 40:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:40:13: 40:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:38: 40:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:45: 40:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:40:50: 40:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:41:13: 41:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:41:24: 41:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:41:13: 41:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:41:38: 41:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:41:45: 41:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:41:50: 41:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:42:13: 42:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:42:23: 42:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            Yes(
                                Not,
                            ),
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:39:15: 39:28 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:42:13: 42:39 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:42:36: 42:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:42:43: 42:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:39:9: 44:10 (#0),
                },
            ),
        ),
        ty: &'{erased} &'{erased} f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:42:48: 42:49 (#0),
            scope: scope[0],
        },
    },
]