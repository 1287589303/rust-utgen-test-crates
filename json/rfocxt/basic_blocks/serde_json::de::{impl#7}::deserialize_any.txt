[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1395:31: 1395:54 (#0),
                    scope: scope[0],
                },
                kind: _5 = de::Deserializer::<R>::parse_whitespace(move _6) -> [return: bb1, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            _7 = discriminant(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#75),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb3, 1: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1395:31: 1395:54 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#75),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = move ((_5 as Err).0: error::Error),
            StorageLive(_11),
            _11 = move _9,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#75),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb6, unwind: bb224],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            _8 = ((_5 as Ok).0: core::option::Option<u8>),
            _4 = _8,
            StorageDead(_8),
            PlaceMention(_4),
            _12 = discriminant(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 411:10 (#75),
                    scope: scope[0],
                },
                kind: switchInt(move _12) -> [0: bb9, 1: bb8, otherwise: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#75),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb176, unwind: bb225],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 411:10 (#75),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1396:13: 1396:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            StorageLive(_16),
            _16 = &(*_1),
            StorageLive(_17),
            _17 = error::ErrorCode::EofWhileParsingValue,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1398:28: 1398:76 (#0),
                    scope: scope[0],
                },
                kind: _15 = de::Deserializer::<R>::peek_error(move _16, move _17) -> [return: bb11, unwind: bb223],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_13),
            _13 = ((_4 as Some).0: u8),
            _3 = _13,
            StorageDead(_13),
            FakeRead(ForLet(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1400:10: 1400:11 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb13, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1398:76: 1398:77 (#0),
                    scope: scope[0],
                },
                kind: drop(_15) -> [return: bb12, unwind: bb225],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1398:17: 1398:77 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb177,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageLive(_18),
            PlaceMention(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1402:21: 1402:31 (#0),
                    scope: scope[1],
                },
                kind: switchInt(_3) -> [110: bb15, 116: bb16, 102: bb17, 45: bb18, 34: bb22, 91: bb23, 123: bb24, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_156),
            StorageLive(_157),
            _157 = &(*_1),
            StorageLive(_158),
            _158 = error::ErrorCode::ExpectedSomeValue,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1453:22: 1453:67 (#0),
                    scope: scope[1],
                },
                kind: _156 = de::Deserializer::<R>::peek_error(move _157, move _158) -> [return: bb149, unwind: bb185],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1403:13: 1403:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb25, imaginary: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1408:13: 1408:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb35, imaginary: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1413:13: 1413:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb45, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1418:13: 1418:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb55, imaginary: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _19 = Le(const 48_u8, _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:13: 1422:24 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _19) -> [0: bb14, otherwise: bb21],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:13: 1422:24 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb65, imaginary: bb22],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = Le(_3, const 57_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:13: 1422:24 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _20) -> [0: bb14, otherwise: bb20],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1423:13: 1423:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb74, imaginary: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1431:13: 1431:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb91, imaginary: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1442:13: 1442:17 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb120, imaginary: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            StorageLive(_22),
            _22 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1404:17: 1404:32 (#0),
                    scope: scope[1],
                },
                kind: _21 = de::Deserializer::<R>::eat_char(move _22) -> [return: bb26, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_22),
            StorageDead(_21),
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = &mut (*_1),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = const b"ull",
            _27 = &(*_28),
            _26 = move _27 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1405:22: 1405:46 (#0),
                    scope: scope[1],
                },
                kind: _24 = de::Deserializer::<R>::parse_ident(move _25, move _26) -> [return: bb27, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_25),
            PlaceMention(_24),
            _29 = discriminant(_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#76),
                    scope: scope[1],
                },
                kind: switchInt(move _29) -> [0: bb29, 1: bb30, otherwise: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1405:22: 1405:46 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#76),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb31, imaginary: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = move ((_24 as Err).0: error::Error),
            StorageLive(_33),
            _33 = move _31,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#76),
                    scope: scope[7],
                },
                kind: drop(_33) -> [return: bb32, unwind: bb221],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_30),
            _30 = ((_24 as Ok).0: ()),
            _23 = _30,
            StorageDead(_30),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#76),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb33, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#76),
                    scope: scope[1],
                },
                kind: drop(_31) -> [return: bb173, unwind: bb222],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_34),
            _34 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1406:17: 1406:37 (#0),
                    scope: scope[1],
                },
                kind: _18 = <V as serde::de::Visitor<'_>>::visit_unit::<error::Error>(move _34) -> [return: bb34, unwind: bb220],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1406:36: 1406:37 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_35),
            StorageLive(_36),
            _36 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1409:17: 1409:32 (#0),
                    scope: scope[1],
                },
                kind: _35 = de::Deserializer::<R>::eat_char(move _36) -> [return: bb36, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &mut (*_1),
            StorageLive(_40),
            StorageLive(_41),
            StorageLive(_42),
            _42 = const b"rue",
            _41 = &(*_42),
            _40 = move _41 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_41),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1410:22: 1410:46 (#0),
                    scope: scope[1],
                },
                kind: _38 = de::Deserializer::<R>::parse_ident(move _39, move _40) -> [return: bb37, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_40),
            StorageDead(_39),
            PlaceMention(_38),
            _43 = discriminant(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#77),
                    scope: scope[1],
                },
                kind: switchInt(move _43) -> [0: bb39, 1: bb40, otherwise: bb38],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1410:22: 1410:46 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#77),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb41, imaginary: bb40],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_45),
            _45 = move ((_38 as Err).0: error::Error),
            StorageLive(_47),
            _47 = move _45,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#77),
                    scope: scope[9],
                },
                kind: drop(_47) -> [return: bb42, unwind: bb218],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_44),
            _44 = ((_38 as Ok).0: ()),
            _37 = _44,
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#77),
                    scope: scope[1],
                },
                kind: drop(_38) -> [return: bb43, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_47),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#77),
                    scope: scope[1],
                },
                kind: drop(_45) -> [return: bb171, unwind: bb219],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_38),
            StorageDead(_37),
            StorageLive(_48),
            _48 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1411:17: 1411:41 (#0),
                    scope: scope[1],
                },
                kind: _18 = <V as serde::de::Visitor<'_>>::visit_bool::<error::Error>(move _48, const true) -> [return: bb44, unwind: bb217],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1411:40: 1411:41 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_49),
            StorageLive(_50),
            _50 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1414:17: 1414:32 (#0),
                    scope: scope[1],
                },
                kind: _49 = de::Deserializer::<R>::eat_char(move _50) -> [return: bb46, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_49),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &mut (*_1),
            StorageLive(_54),
            StorageLive(_55),
            StorageLive(_56),
            _56 = const b"alse",
            _55 = &(*_56),
            _54 = move _55 as &[u8] (PointerCoercion(Unsize)),
            StorageDead(_55),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1415:22: 1415:47 (#0),
                    scope: scope[1],
                },
                kind: _52 = de::Deserializer::<R>::parse_ident(move _53, move _54) -> [return: bb47, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_54),
            StorageDead(_53),
            PlaceMention(_52),
            _57 = discriminant(_52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#78),
                    scope: scope[1],
                },
                kind: switchInt(move _57) -> [0: bb49, 1: bb50, otherwise: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1415:22: 1415:47 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#78),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb51, imaginary: bb50],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_59),
            _59 = move ((_52 as Err).0: error::Error),
            StorageLive(_61),
            _61 = move _59,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#78),
                    scope: scope[11],
                },
                kind: drop(_61) -> [return: bb52, unwind: bb215],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_58),
            _58 = ((_52 as Ok).0: ()),
            _51 = _58,
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#78),
                    scope: scope[1],
                },
                kind: drop(_52) -> [return: bb53, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#78),
                    scope: scope[1],
                },
                kind: drop(_59) -> [return: bb169, unwind: bb216],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_52),
            StorageDead(_51),
            StorageLive(_62),
            _62 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1416:17: 1416:42 (#0),
                    scope: scope[1],
                },
                kind: _18 = <V as serde::de::Visitor<'_>>::visit_bool::<error::Error>(move _62, const false) -> [return: bb54, unwind: bb214],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1416:41: 1416:42 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_63),
            StorageLive(_64),
            _64 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1419:17: 1419:32 (#0),
                    scope: scope[1],
                },
                kind: _63 = de::Deserializer::<R>::eat_char(move _64) -> [return: bb56, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_64),
            StorageDead(_63),
            StorageLive(_65),
            StorageLive(_66),
            StorageLive(_67),
            _67 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1420:22: 1420:50 (#0),
                    scope: scope[1],
                },
                kind: _66 = de::Deserializer::<R>::parse_any_number(move _67, const false) -> [return: bb57, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
            PlaceMention(_66),
            _68 = discriminant(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#79),
                    scope: scope[1],
                },
                kind: switchInt(move _68) -> [0: bb59, 1: bb60, otherwise: bb58],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1420:22: 1420:50 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#79),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb61, imaginary: bb60],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_70),
            _70 = move ((_66 as Err).0: error::Error),
            StorageLive(_72),
            _72 = move _70,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#79),
                    scope: scope[13],
                },
                kind: drop(_72) -> [return: bb62, unwind: bb212],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_69),
            _69 = move ((_66 as Ok).0: de::ParserNumber),
            _65 = move _69,
            StorageDead(_69),
            StorageLive(_73),
            _73 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1420:17: 1420:66 (#0),
                    scope: scope[1],
                },
                kind: _18 = de::ParserNumber::visit::<'_, V>(move _65, move _73) -> [return: bb63, unwind: bb211],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_72),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#79),
                    scope: scope[1],
                },
                kind: drop(_70) -> [return: bb167, unwind: bb213],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1421:13: 1421:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_66) -> [return: bb64, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1421:13: 1421:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_74),
            StorageLive(_75),
            StorageLive(_76),
            _76 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:33: 1422:60 (#0),
                    scope: scope[1],
                },
                kind: _75 = de::Deserializer::<R>::parse_any_number(move _76, const true) -> [return: bb66, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_76),
            PlaceMention(_75),
            _77 = discriminant(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#80),
                    scope: scope[1],
                },
                kind: switchInt(move _77) -> [0: bb68, 1: bb69, otherwise: bb67],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:33: 1422:60 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#80),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb70, imaginary: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_79),
            _79 = move ((_75 as Err).0: error::Error),
            StorageLive(_81),
            _81 = move _79,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#80),
                    scope: scope[15],
                },
                kind: drop(_81) -> [return: bb71, unwind: bb209],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_78),
            _78 = move ((_75 as Ok).0: de::ParserNumber),
            _74 = move _78,
            StorageDead(_78),
            StorageLive(_82),
            _82 = move _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:28: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: _18 = de::ParserNumber::visit::<'_, V>(move _74, move _82) -> [return: bb72, unwind: bb208],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_81),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#80),
                    scope: scope[1],
                },
                kind: drop(_79) -> [return: bb165, unwind: bb210],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:75: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_75) -> [return: bb73, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:75: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_83),
            StorageLive(_84),
            _84 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1424:17: 1424:32 (#0),
                    scope: scope[1],
                },
                kind: _83 = de::Deserializer::<R>::eat_char(move _84) -> [return: bb75, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageDead(_83),
            StorageLive(_85),
            StorageLive(_86),
            _86 = &mut ((*_1).1: alloc::vec::Vec<u8>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1425:17: 1425:37 (#0),
                    scope: scope[1],
                },
                kind: _85 = alloc::vec::Vec::<u8>::clear(move _86) -> [return: bb76, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_86),
            StorageDead(_85),
            StorageLive(_87),
            StorageLive(_88),
            StorageLive(_89),
            _89 = &mut ((*_1).0: R),
            StorageLive(_90),
            StorageLive(_91),
            _91 = &mut ((*_1).1: alloc::vec::Vec<u8>),
            _90 = &mut (*_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1426:28: 1426:66 (#0),
                    scope: scope[1],
                },
                kind: _88 = <R as read::Read<'_>>::parse_str(move _89, move _90) -> [return: bb77, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
            StorageDead(_89),
            PlaceMention(_88),
            _92 = discriminant(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#81),
                    scope: scope[1],
                },
                kind: switchInt(move _92) -> [0: bb79, 1: bb80, otherwise: bb78],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1426:28: 1426:66 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#81),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb81, imaginary: bb80],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_94),
            _94 = move ((_88 as Err).0: error::Error),
            StorageLive(_96),
            _96 = move _94,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#81),
                    scope: scope[17],
                },
                kind: drop(_96) -> [return: bb82, unwind: bb206],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_93),
            _93 = move ((_88 as Ok).0: read::Reference<'_, '_, str>),
            _87 = move _93,
            StorageDead(_93),
            PlaceMention(_87),
            _97 = discriminant(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 411:10 (#81),
                    scope: scope[1],
                },
                kind: switchInt(move _97) -> [0: bb84, 1: bb85, otherwise: bb83],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_96),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#81),
                    scope: scope[1],
                },
                kind: drop(_94) -> [return: bb163, unwind: bb207],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 411:10 (#81),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1427:21: 1427:43 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb86, imaginary: bb85],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_101),
            _101 = ((_87 as Copied).0: &str),
            StorageLive(_102),
            _102 = move _2,
            StorageLive(_103),
            _103 = &(*_101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1428:45: 1428:65 (#0),
                    scope: scope[19],
                },
                kind: _18 = <V as serde::de::Visitor<'_>>::visit_str::<error::Error>(move _102, move _103) -> [return: bb88, unwind: bb204],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_98),
            _98 = ((_87 as Borrowed).0: &str),
            StorageLive(_99),
            _99 = move _2,
            StorageLive(_100),
            _100 = &(*_98),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1427:47: 1427:76 (#0),
                    scope: scope[18],
                },
                kind: _18 = <V as serde::de::Visitor<'_>>::visit_borrowed_str::<error::Error>(move _99, move _100) -> [return: bb87, unwind: bb205],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_100),
            StorageDead(_99),
            StorageDead(_98),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1427:75: 1427:76 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb89,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_103),
            StorageDead(_102),
            StorageDead(_101),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1428:64: 1428:65 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb89,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1430:13: 1430:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_88) -> [return: bb90, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            StorageDead(_88),
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1430:13: 1430:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _104 = SubWithOverflow(((*_1).2: u8), const 1_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1373:13: 1373:39 (#82),
                    scope: scope[1],
                },
                kind: assert(!move (_104.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).2: u8), const 1_u8) -> [success: bb92, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: u8) = move (_104.0: u8),
            StorageLive(_105),
            StorageLive(_106),
            StorageLive(_107),
            _107 = ((*_1).2: u8),
            _106 = Eq(move _107, const 0_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1374:16: 1374:42 (#82),
                    scope: scope[1],
                },
                kind: switchInt(move _106) -> [0: bb96, otherwise: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
            StorageLive(_109),
            StorageLive(_110),
            _110 = &(*_1),
            StorageLive(_111),
            _111 = error::ErrorCode::RecursionLimitExceeded,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:28: 1375:79 (#82),
                    scope: scope[1],
                },
                kind: _109 = de::Deserializer::<R>::peek_error(move _110, move _111) -> [return: bb94, unwind: bb203],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_111),
            StorageDead(_110),
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _109),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:79: 1375:80 (#82),
                    scope: scope[1],
                },
                kind: drop(_109) -> [return: bb95, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_109),
            StorageDead(_106),
            StorageDead(_105),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_107),
            _105 = const (),
            StorageDead(_106),
            StorageDead(_105),
            StorageLive(_112),
            StorageLive(_113),
            _113 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1379:9: 1379:14 (#82),
                    scope: scope[1],
                },
                kind: _112 = de::Deserializer::<R>::eat_char(move _113) -> [return: bb97, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_113),
            StorageDead(_112),
            StorageLive(_114),
            StorageLive(_115),
            _115 = move _2,
            StorageLive(_116),
            StorageLive(_117),
            _117 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1434:49: 1434:69 (#0),
                    scope: scope[1],
                },
                kind: _116 = de::SeqAccess::<'_, R>::new(move _117) -> [return: bb98, unwind: bb202],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_117),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1434:31: 1434:70 (#0),
                    scope: scope[1],
                },
                kind: _114 = <V as serde::de::Visitor<'_>>::visit_seq::<de::SeqAccess<'_, R>>(move _115, move _116) -> [return: bb99, unwind: bb202],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_116),
            StorageDead(_115),
            FakeRead(ForLet(None), _114),
            _118 = AddWithOverflow(((*_1).2: u8), const 1_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1382:13: 1382:39 (#82),
                    scope: scope[20],
                },
                kind: assert(!move (_118.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).2: u8), const 1_u8) -> [success: bb100, unwind: bb201],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: u8) = move (_118.0: u8),
            StorageLive(_119),
            StorageLive(_120),
            _120 = move _114,
            StorageLive(_121),
            StorageLive(_122),
            _122 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:29: 1437:43 (#0),
                    scope: scope[20],
                },
                kind: _121 = de::Deserializer::<R>::end_seq(move _122) -> [return: bb101, unwind: bb200],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_122),
            _119 = (move _120, move _121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:43: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: drop(_121) -> [return: bb102, unwind: bb197],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_121),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:43: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: drop(_120) -> [return: bb103, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_120),
            PlaceMention(_119),
            _124 = discriminant((_119.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:17: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: switchInt(move _124) -> [0: bb105, 1: bb107, otherwise: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _125 = discriminant((_119.1: core::result::Result<(), error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:17: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: switchInt(move _125) -> [1: bb109, otherwise: bb108],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _123 = discriminant((_119.1: core::result::Result<(), error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:17: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: switchInt(move _123) -> [0: bb106, otherwise: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1438:21: 1438:38 (#0),
                    scope: scope[20],
                },
                kind: falseEdge -> [real: bb110, imaginary: bb107],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1439:21: 1439:34 (#0),
                    scope: scope[20],
                },
                kind: falseEdge -> [real: bb114, imaginary: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:23: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_128),
            _128 = move (((_119.1: core::result::Result<(), error::Error>) as Err).0: error::Error),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:17: 1440:18 (#0),
                    scope: scope[20],
                },
                kind: goto -> bb113,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_126),
            _126 = move (((_119.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>) as Ok).0: <V as serde::de::Visitor<'_>>::Value),
            StorageLive(_127),
            _127 = move _126,
            _18 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Ok(move _127),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1438:48: 1438:49 (#0),
                    scope: scope[21],
                },
                kind: drop(_127) -> [return: bb111, unwind: bb196],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_127),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1438:48: 1438:49 (#0),
                    scope: scope[20],
                },
                kind: drop(_126) -> [return: bb112, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_126),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1438:48: 1438:49 (#0),
                    scope: scope[20],
                },
                kind: goto -> bb117,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_129),
            _129 = move _128,
            _18 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _129),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1439:61: 1439:62 (#0),
                    scope: scope[22],
                },
                kind: drop(_129) -> [return: bb115, unwind: bb195],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_128),
            _128 = move (((_119.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>) as Err).0: error::Error),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:17: 1440:18 (#0),
                    scope: scope[20],
                },
                kind: goto -> bb113,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_129),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1439:61: 1439:62 (#0),
                    scope: scope[20],
                },
                kind: drop(_128) -> [return: bb116, unwind: bb198],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_128),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1439:61: 1439:62 (#0),
                    scope: scope[20],
                },
                kind: goto -> bb117,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_114) -> [return: bb118, unwind: bb199],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_114),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_119) -> [return: bb119, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_119),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _130 = SubWithOverflow(((*_1).2: u8), const 1_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1373:13: 1373:39 (#83),
                    scope: scope[1],
                },
                kind: assert(!move (_130.1: bool), "attempt to compute `{} - {}`, which would overflow", ((*_1).2: u8), const 1_u8) -> [success: bb121, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: u8) = move (_130.0: u8),
            StorageLive(_131),
            StorageLive(_132),
            StorageLive(_133),
            _133 = ((*_1).2: u8),
            _132 = Eq(move _133, const 0_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1374:16: 1374:42 (#83),
                    scope: scope[1],
                },
                kind: switchInt(move _132) -> [0: bb125, otherwise: bb122],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            StorageLive(_135),
            StorageLive(_136),
            _136 = &(*_1),
            StorageLive(_137),
            _137 = error::ErrorCode::RecursionLimitExceeded,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:28: 1375:79 (#83),
                    scope: scope[1],
                },
                kind: _135 = de::Deserializer::<R>::peek_error(move _136, move _137) -> [return: bb123, unwind: bb194],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_137),
            StorageDead(_136),
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _135),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:79: 1375:80 (#83),
                    scope: scope[1],
                },
                kind: drop(_135) -> [return: bb124, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_135),
            StorageDead(_132),
            StorageDead(_131),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_133),
            _131 = const (),
            StorageDead(_132),
            StorageDead(_131),
            StorageLive(_138),
            StorageLive(_139),
            _139 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1379:9: 1379:14 (#83),
                    scope: scope[1],
                },
                kind: _138 = de::Deserializer::<R>::eat_char(move _139) -> [return: bb126, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_139),
            StorageDead(_138),
            StorageLive(_140),
            StorageLive(_141),
            _141 = move _2,
            StorageLive(_142),
            StorageLive(_143),
            _143 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1445:49: 1445:69 (#0),
                    scope: scope[1],
                },
                kind: _142 = de::MapAccess::<'_, R>::new(move _143) -> [return: bb127, unwind: bb193],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_143),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1445:31: 1445:70 (#0),
                    scope: scope[1],
                },
                kind: _140 = <V as serde::de::Visitor<'_>>::visit_map::<de::MapAccess<'_, R>>(move _141, move _142) -> [return: bb128, unwind: bb193],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_142),
            StorageDead(_141),
            FakeRead(ForLet(None), _140),
            _144 = AddWithOverflow(((*_1).2: u8), const 1_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1382:13: 1382:39 (#83),
                    scope: scope[23],
                },
                kind: assert(!move (_144.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).2: u8), const 1_u8) -> [success: bb129, unwind: bb192],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            ((*_1).2: u8) = move (_144.0: u8),
            StorageLive(_145),
            StorageLive(_146),
            _146 = move _140,
            StorageLive(_147),
            StorageLive(_148),
            _148 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:29: 1448:43 (#0),
                    scope: scope[23],
                },
                kind: _147 = de::Deserializer::<R>::end_map(move _148) -> [return: bb130, unwind: bb191],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_148),
            _145 = (move _146, move _147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:43: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: drop(_147) -> [return: bb131, unwind: bb188],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_147),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:43: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: drop(_146) -> [return: bb132, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_146),
            PlaceMention(_145),
            _150 = discriminant((_145.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:17: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: switchInt(move _150) -> [0: bb134, 1: bb136, otherwise: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _151 = discriminant((_145.1: core::result::Result<(), error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:17: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: switchInt(move _151) -> [1: bb138, otherwise: bb137],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _149 = discriminant((_145.1: core::result::Result<(), error::Error>)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:17: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: switchInt(move _149) -> [0: bb135, otherwise: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1449:21: 1449:38 (#0),
                    scope: scope[23],
                },
                kind: falseEdge -> [real: bb139, imaginary: bb136],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1450:21: 1450:34 (#0),
                    scope: scope[23],
                },
                kind: falseEdge -> [real: bb143, imaginary: bb133],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:23: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_154),
            _154 = move (((_145.1: core::result::Result<(), error::Error>) as Err).0: error::Error),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:17: 1451:18 (#0),
                    scope: scope[23],
                },
                kind: goto -> bb142,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_152),
            _152 = move (((_145.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>) as Ok).0: <V as serde::de::Visitor<'_>>::Value),
            StorageLive(_153),
            _153 = move _152,
            _18 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Ok(move _153),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1449:48: 1449:49 (#0),
                    scope: scope[24],
                },
                kind: drop(_153) -> [return: bb140, unwind: bb187],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_153),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1449:48: 1449:49 (#0),
                    scope: scope[23],
                },
                kind: drop(_152) -> [return: bb141, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_152),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1449:48: 1449:49 (#0),
                    scope: scope[23],
                },
                kind: goto -> bb146,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_155),
            _155 = move _154,
            _18 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _155),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1450:61: 1450:62 (#0),
                    scope: scope[25],
                },
                kind: drop(_155) -> [return: bb144, unwind: bb186],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_154),
            _154 = move (((_145.0: core::result::Result<<V as serde::de::Visitor<'_>>::Value, error::Error>) as Err).0: error::Error),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:17: 1451:18 (#0),
                    scope: scope[23],
                },
                kind: goto -> bb142,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_155),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1450:61: 1450:62 (#0),
                    scope: scope[23],
                },
                kind: drop(_154) -> [return: bb145, unwind: bb189],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_154),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1450:61: 1450:62 (#0),
                    scope: scope[23],
                },
                kind: goto -> bb146,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_140) -> [return: bb147, unwind: bb190],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_140),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_145) -> [return: bb148, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_145),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_158),
            StorageDead(_157),
            _18 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _156),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1453:67: 1453:68 (#0),
                    scope: scope[1],
                },
                kind: drop(_156) -> [return: bb150, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_156),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1453:67: 1453:68 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb151,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _18),
            PlaceMention(_18),
            _159 = discriminant(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1456:9: 1456:20 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _159) -> [0: bb153, 1: bb154, otherwise: bb152],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1456:15: 1456:20 (#0),
                    scope: scope[5],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1457:13: 1457:22 (#0),
                    scope: scope[5],
                },
                kind: falseEdge -> [real: bb155, imaginary: bb154],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_162),
            _162 = move ((_18 as Err).0: error::Error),
            StorageLive(_163),
            StorageLive(_164),
            _164 = &(*_1),
            StorageLive(_165),
            _165 = move _162,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:29: 1463:51 (#0),
                    scope: scope[27],
                },
                kind: _163 = de::Deserializer::<R>::fix_position(move _164, move _165) -> [return: bb158, unwind: bb181],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_160),
            _160 = move ((_18 as Ok).0: <V as serde::de::Visitor<'_>>::Value),
            StorageLive(_161),
            _161 = move _160,
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Ok(move _161),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1457:34: 1457:35 (#0),
                    scope: scope[26],
                },
                kind: drop(_161) -> [return: bb156, unwind: bb183],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_161),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1457:34: 1457:35 (#0),
                    scope: scope[5],
                },
                kind: drop(_160) -> [return: bb157, unwind: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_160),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1457:34: 1457:35 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb161,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_165),
            StorageDead(_164),
            _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _163),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:51: 1463:52 (#0),
                    scope: scope[27],
                },
                kind: drop(_163) -> [return: bb159, unwind: bb182],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_163),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:51: 1463:52 (#0),
                    scope: scope[5],
                },
                kind: drop(_162) -> [return: bb160, unwind: bb184],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_162),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:51: 1463:52 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb161,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:5: 1465:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_18) -> [return: bb162, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:5: 1465:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb180, unwind: bb227],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_94),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1430:13: 1430:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_88) -> [return: bb164, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_91),
            StorageDead(_88),
            StorageDead(_87),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:75: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_75) -> [return: bb166, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_70),
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1421:13: 1421:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_66) -> [return: bb168, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_66),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#78),
                    scope: scope[1],
                },
                kind: drop(_52) -> [return: bb170, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_52),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#77),
                    scope: scope[1],
                },
                kind: drop(_38) -> [return: bb172, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
            StorageDead(_38),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#76),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb174, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            StorageDead(_24),
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb175,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb179,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb177,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1400:10: 1400:11 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb178, unwind: bb226],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb179,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:5: 1465:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb180, unwind: bb227],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:6: 1465:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:50: 1463:51 (#0),
                    scope: scope[27],
                },
                kind: drop(_165) -> [return: bb182, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1463:51: 1463:52 (#0),
                    scope: scope[5],
                },
                kind: drop(_162) -> [return: bb184, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1457:34: 1457:35 (#0),
                    scope: scope[5],
                },
                kind: drop(_160) -> [return: bb184, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:5: 1465:6 (#0),
                    scope: scope[1],
                },
                kind: drop(_18) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1453:66: 1453:67 (#0),
                    scope: scope[1],
                },
                kind: drop(_158) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1450:61: 1450:62 (#0),
                    scope: scope[23],
                },
                kind: drop(_154) -> [return: bb189, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1449:48: 1449:49 (#0),
                    scope: scope[23],
                },
                kind: drop(_152) -> [return: bb189, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:43: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: drop(_146) -> [return: bb189, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_140) -> [return: bb190, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_145) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1448:43: 1448:44 (#0),
                    scope: scope[23],
                },
                kind: drop(_146) -> [return: bb192, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1452:13: 1452:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_140) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1445:69: 1445:70 (#0),
                    scope: scope[1],
                },
                kind: drop(_141) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:78: 1375:79 (#83),
                    scope: scope[1],
                },
                kind: drop(_137) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1439:61: 1439:62 (#0),
                    scope: scope[20],
                },
                kind: drop(_128) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1438:48: 1438:49 (#0),
                    scope: scope[20],
                },
                kind: drop(_126) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:43: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: drop(_120) -> [return: bb198, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_114) -> [return: bb199, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_119) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1437:43: 1437:44 (#0),
                    scope: scope[20],
                },
                kind: drop(_120) -> [return: bb201, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1441:13: 1441:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_114) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1434:69: 1434:70 (#0),
                    scope: scope[1],
                },
                kind: drop(_115) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1375:78: 1375:79 (#82),
                    scope: scope[1],
                },
                kind: drop(_111) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1428:64: 1428:65 (#0),
                    scope: scope[19],
                },
                kind: drop(_102) -> [return: bb207, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1427:75: 1427:76 (#0),
                    scope: scope[18],
                },
                kind: drop(_99) -> [return: bb207, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#81),
                    scope: scope[1],
                },
                kind: drop(_94) -> [return: bb207, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1430:13: 1430:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_88) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:75: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_82) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#80),
                    scope: scope[1],
                },
                kind: drop(_79) -> [return: bb210, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1422:75: 1422:76 (#0),
                    scope: scope[1],
                },
                kind: drop(_75) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1420:65: 1420:66 (#0),
                    scope: scope[1],
                },
                kind: drop(_73) -> [return: bb213, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#79),
                    scope: scope[1],
                },
                kind: drop(_70) -> [return: bb213, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1421:13: 1421:14 (#0),
                    scope: scope[1],
                },
                kind: drop(_66) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1416:41: 1416:42 (#0),
                    scope: scope[1],
                },
                kind: drop(_62) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#78),
                    scope: scope[1],
                },
                kind: drop(_59) -> [return: bb216, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#78),
                    scope: scope[1],
                },
                kind: drop(_52) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1411:40: 1411:41 (#0),
                    scope: scope[1],
                },
                kind: drop(_48) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#77),
                    scope: scope[1],
                },
                kind: drop(_45) -> [return: bb219, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#77),
                    scope: scope[1],
                },
                kind: drop(_38) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1406:36: 1406:37 (#0),
                    scope: scope[1],
                },
                kind: drop(_34) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#76),
                    scope: scope[1],
                },
                kind: drop(_31) -> [return: bb222, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:411:9: 411:10 (#76),
                    scope: scope[1],
                },
                kind: drop(_24) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1398:75: 1398:76 (#0),
                    scope: scope[0],
                },
                kind: drop(_17) -> [return: bb225, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#75),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb225, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1400:10: 1400:11 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb226, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1465:5: 1465:6 (#0),
                    scope: scope[0],
                },
                kind: drop(_2) -> [return: bb227, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/de.rs:1391:5: 1465:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1391:48: 1391:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1391:27: 1391:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/de.rs:1391:42: 1391:43 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/de.rs:1391:33: 1391:40 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1391:33: 1391:40 (#0),
                    },
                ),
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1391:33: 1391:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/de.rs:1395:20: 1400:10 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1395:13: 1395:17 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1395:13: 1395:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<core::option::Option<u8>, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1395:31: 1395:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1395:31: 1395:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                src/de.rs:1395:31: 1395:54 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#75),
                    },
                ),
            ),
        ),
        ty: core::option::Option<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                src/de.rs:1395:31: 1395:54 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#75),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#75),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1396:13: 1396:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _4,
                                ),
                                src/lib.rs:408:9: 411:10 (#75),
                            ),
                        ),
                        pat_span: src/de.rs:1396:13: 1396:20 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1396:18: 1396:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1397:21: 1399:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1398:28: 1398:76 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1398:28: 1398:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1398:44: 1398:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/de.rs:1402:21: 1454:10 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1402:13: 1402:18 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1402:13: 1402:18 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1422:13: 1422:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1422:13: 1422:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1404:17: 1404:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1404:17: 1404:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#76),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1405:22: 1405:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1405:22: 1405:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1405:39: 1405:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1405:39: 1405:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1405:39: 1405:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#76),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _24,
                                ),
                                src/de.rs:1405:22: 1405:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#76),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#76),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _24,
                                ),
                                src/de.rs:1405:22: 1405:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#76),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#76),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#76),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#76),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1406:17: 1406:37 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1406:17: 1406:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1409:17: 1409:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1409:17: 1409:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#77),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1410:22: 1410:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1410:22: 1410:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1410:39: 1410:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1410:39: 1410:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 3_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1410:39: 1410:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#77),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                src/de.rs:1410:22: 1410:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#77),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#77),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                src/de.rs:1410:22: 1410:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#77),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#77),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#77),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#77),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1411:17: 1411:41 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1411:17: 1411:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1414:17: 1414:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1414:17: 1414:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#78),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1415:22: 1415:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1415:22: 1415:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1415:39: 1415:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1415:39: 1415:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1415:39: 1415:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#78),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _52,
                                ),
                                src/de.rs:1415:22: 1415:47 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#78),
                    },
                ),
            ),
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#78),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _52,
                                ),
                                src/de.rs:1415:22: 1415:47 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#78),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#78),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#78),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#78),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1416:17: 1416:42 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1416:17: 1416:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1419:17: 1419:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1419:17: 1419:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1420:17: 1420:66 (#0),
                },
            ),
        ),
        ty: de::ParserNumber,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#79),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1420:17: 1420:66 (#0),
                },
            ),
        ),
        ty: core::result::Result<de::ParserNumber, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1420:22: 1420:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1420:17: 1420:66 (#0),
                },
            ),
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1420:22: 1420:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#79),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _66,
                                ),
                                src/de.rs:1420:22: 1420:50 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#79),
                    },
                ),
            ),
        ),
        ty: de::ParserNumber,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#79),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _66,
                                ),
                                src/de.rs:1420:22: 1420:50 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#79),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#79),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1420:17: 1420:66 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#79),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#79),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1420:17: 1420:66 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1420:58: 1420:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: de::ParserNumber,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#80),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<de::ParserNumber, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1422:33: 1422:60 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1422:33: 1422:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#80),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _75,
                                ),
                                src/de.rs:1422:33: 1422:60 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#80),
                    },
                ),
            ),
        ),
        ty: de::ParserNumber,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#80),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _75,
                                ),
                                src/de.rs:1422:33: 1422:60 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#80),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#80),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#80),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#80),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1422:68: 1422:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1424:17: 1424:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1424:17: 1424:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1425:17: 1425:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1425:17: 1425:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: read::Reference<'{erased}, '{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#81),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<read::Reference<'{erased}, '{erased}, str>, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1426:28: 1426:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut R/#2,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1426:28: 1426:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1426:48: 1426:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1426:48: 1426:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#81),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _88,
                                ),
                                src/de.rs:1426:28: 1426:66 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#81),
                    },
                ),
            ),
        ),
        ty: read::Reference<'{erased}, '{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#81),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _88,
                                ),
                                src/de.rs:1426:28: 1426:66 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#81),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#81),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#81),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#81),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1427:21: 1427:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _87,
                                ),
                                src/lib.rs:408:9: 411:10 (#81),
                            ),
                        ),
                        pat_span: src/de.rs:1427:21: 1427:43 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1427:41: 1427:42 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1427:47: 1427:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1427:74: 1427:75 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _87,
                                ),
                                src/lib.rs:408:9: 411:10 (#81),
                            ),
                        ),
                        pat_span: src/de.rs:1428:21: 1428:41 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1428:39: 1428:40 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1428:45: 1428:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1426:17: 1429:18 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1428:63: 1428:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1373:13: 1373:39 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:13: 1376:14 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:16: 1374:42 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:16: 1374:37 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:43: 1376:14 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:28: 1375:79 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:28: 1375:33 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:45: 1375:78 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1379:9: 1379:14 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1379:9: 1379:14 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/de.rs:1434:31: 1434:70 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1434:25: 1434:28 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1434:25: 1434:28 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1434:31: 1434:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: de::SeqAccess<'{erased}, R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1434:49: 1434:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1434:64: 1434:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1382:13: 1382:39 (#82),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1437:17: 1440:18 (#0),
                },
            ),
        ),
        ty: (core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>, core::result::Result<(), error::Error>),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1437:23: 1437:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1437:17: 1440:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1437:24: 1437:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1437:17: 1440:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1437:29: 1437:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1437:17: 1440:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1437:29: 1437:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1438:31: 1438:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1438:22: 1438:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1439:41: 1439:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _119,
                                ),
                                src/de.rs:1437:23: 1437:44 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1438:21: 1438:38 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1438:25: 1438:28 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1438:45: 1438:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _119,
                                ),
                                src/de.rs:1437:23: 1437:44 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1439:21: 1439:50 (#0),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1439:26: 1439:29 (#0),
            scope: scope[20],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1439:58: 1439:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1373:13: 1373:39 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:13: 1376:14 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:16: 1374:42 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:16: 1374:37 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1374:43: 1376:14 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:28: 1375:79 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:28: 1375:33 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1375:45: 1375:78 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1379:9: 1379:14 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1379:9: 1379:14 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/de.rs:1445:31: 1445:70 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1445:25: 1445:28 (#0),
                    },
                ),
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1445:25: 1445:28 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: V/#3,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1445:31: 1445:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: de::MapAccess<'{erased}, R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1445:49: 1445:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1445:64: 1445:68 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1382:13: 1382:39 (#83),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1448:17: 1451:18 (#0),
                },
            ),
        ),
        ty: (core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>, core::result::Result<(), error::Error>),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1448:23: 1448:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1448:17: 1451:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<Alias(Projection, AliasTy { args: [V/#3, '{erased}], def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value) }), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1448:24: 1448:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1448:17: 1451:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1448:29: 1448:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1448:17: 1451:18 (#0),
                },
            ),
        ),
        ty: &'{erased} mut de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1448:29: 1448:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1449:31: 1449:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1449:22: 1449:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1450:41: 1450:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _145,
                                ),
                                src/de.rs:1448:23: 1448:44 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1449:21: 1449:38 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1449:25: 1449:28 (#0),
            scope: scope[23],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1449:45: 1449:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _145,
                                ),
                                src/de.rs:1448:23: 1448:44 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1450:21: 1450:50 (#0),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1450:26: 1450:29 (#0),
            scope: scope[23],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1450:58: 1450:61 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1453:22: 1453:67 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1453:22: 1453:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1453:38: 1453:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1457:13: 1457:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                src/de.rs:1456:15: 1456:20 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1457:13: 1457:22 (#0),
                    },
                ),
            ),
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1457:16: 1457:21 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: Alias(
            Projection,
            AliasTy {
                args: [
                    V/#3,
                    '{erased},
                ],
                def_id: DefId(20:1547 ~ serde[bd03]::de::Visitor::Value),
            },
        ),
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1457:29: 1457:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _18,
                                ),
                                src/de.rs:1456:15: 1456:20 (#0),
                            ),
                        ),
                        pat_span: src/de.rs:1463:13: 1463:21 (#0),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1463:17: 1463:20 (#0),
            scope: scope[5],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1463:29: 1463:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1456:9: 1464:10 (#0),
                },
            ),
        ),
        ty: &'{erased} de::Deserializer<R/#2>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1463:29: 1463:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/de.rs:1456:9: 1464:10 (#0),
                },
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/de.rs:1463:47: 1463:50 (#0),
            scope: scope[0],
        },
    },
]