[
    BasicBlockData {
        statements: [
            PlaceMention(((*_1).0: number::N)),
            _2 = discriminant(((*_1).0: number::N)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:164:9: 164:21 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), ((*_1).0: number::N)),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:164:15: 164:21 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:165:13: 165:25 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:166:13: 166:25 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb6, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = ((((*_1).0: number::N) as Float).0: f64),
            StorageLive(_10),
            _10 = _9,
            _0 = core::option::Option::<f64>::Some(move _10),
            StorageDead(_10),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:167:34: 167:35 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = ((((*_1).0: number::N) as PosInt).0: u64),
            StorageLive(_4),
            StorageLive(_5),
            _5 = _3,
            _4 = move _5 as f64 (IntToFloat),
            StorageDead(_5),
            _0 = core::option::Option::<f64>::Some(move _4),
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:165:42: 165:43 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = ((((*_1).0: number::N) as NegInt).0: i64),
            StorageLive(_7),
            StorageLive(_8),
            _8 = _6,
            _7 = move _8 as f64 (IntToFloat),
            StorageDead(_8),
            _0 = core::option::Option::<f64>::Some(move _7),
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:166:42: 166:43 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb7,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:171:6: 171:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<f64>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:162:29: 162:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:162:19: 162:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:165:13: 165:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: number::N),
                                ),
                                src/number.rs:164:15: 164:21 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:165:13: 165:25 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:165:23: 165:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:165:34: 165:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:164:9: 168:10 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:165:34: 165:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: number::N),
                                ),
                                src/number.rs:164:15: 164:21 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:166:13: 166:25 (#0),
                    },
                ),
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:166:23: 166:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:166:34: 166:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:164:9: 168:10 (#0),
                },
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:166:34: 166:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    ((*_1).0: number::N),
                                ),
                                src/number.rs:164:15: 164:21 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:167:13: 167:24 (#0),
                    },
                ),
            ),
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:167:22: 167:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: f64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:167:33: 167:34 (#0),
            scope: scope[0],
        },
    },
]