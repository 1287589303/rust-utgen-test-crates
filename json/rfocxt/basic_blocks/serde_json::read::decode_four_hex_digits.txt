[
    BasicBlockData {
        statements: [
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = const {alloc40: &[i16; 256]},
            StorageLive(_8),
            StorageLive(_9),
            _9 = _1,
            _8 = move _9 as usize (IntToInt),
            StorageDead(_9),
            _10 = Len((*_7)),
            _11 = Lt(_8, _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1076:13: 1076:29 (#0),
                    scope: scope[0],
                },
                kind: assert(move _11, "index out of bounds: the length is {} but the index is {}", move _10, _8) -> [success: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _6 = (*_7)[_8],
            _5 = move _6 as i32 (IntToInt),
            StorageDead(_6),
            FakeRead(ForLet(None), _5),
            StorageDead(_8),
            StorageDead(_7),
            StorageLive(_12),
            StorageLive(_13),
            StorageLive(_14),
            _14 = const {alloc41: &[i16; 256]},
            StorageLive(_15),
            StorageLive(_16),
            _16 = _2,
            _15 = move _16 as usize (IntToInt),
            StorageDead(_16),
            _17 = Len((*_14)),
            _18 = Lt(_15, _17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1077:13: 1077:29 (#0),
                    scope: scope[1],
                },
                kind: assert(move _18, "index out of bounds: the length is {} but the index is {}", move _17, _15) -> [success: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = (*_14)[_15],
            _12 = move _13 as i32 (IntToInt),
            StorageDead(_13),
            FakeRead(ForLet(None), _12),
            StorageDead(_15),
            StorageDead(_14),
            StorageLive(_19),
            StorageLive(_20),
            StorageLive(_21),
            _21 = const {alloc40: &[i16; 256]},
            StorageLive(_22),
            StorageLive(_23),
            _23 = _3,
            _22 = move _23 as usize (IntToInt),
            StorageDead(_23),
            _24 = Len((*_21)),
            _25 = Lt(_22, _24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1078:13: 1078:29 (#0),
                    scope: scope[2],
                },
                kind: assert(move _25, "index out of bounds: the length is {} but the index is {}", move _24, _22) -> [success: bb3, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _20 = (*_21)[_22],
            _19 = move _20 as i32 (IntToInt),
            StorageDead(_20),
            FakeRead(ForLet(None), _19),
            StorageDead(_22),
            StorageDead(_21),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = const {alloc41: &[i16; 256]},
            StorageLive(_29),
            StorageLive(_30),
            _30 = _4,
            _29 = move _30 as usize (IntToInt),
            StorageDead(_30),
            _31 = Len((*_28)),
            _32 = Lt(_29, _31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1079:13: 1079:29 (#0),
                    scope: scope[3],
                },
                kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _29) -> [success: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = (*_28)[_29],
            _26 = move _27 as i32 (IntToInt),
            StorageDead(_27),
            FakeRead(ForLet(None), _26),
            StorageDead(_29),
            StorageDead(_28),
            StorageLive(_33),
            StorageLive(_34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            _37 = _5,
            StorageLive(_38),
            _38 = _12,
            _36 = BitOr(move _37, move _38),
            StorageDead(_38),
            StorageDead(_37),
            _39 = const 8_i32 as u32 (IntToInt),
            _40 = Lt(move _39, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1081:21: 1081:35 (#0),
                    scope: scope[4],
                },
                kind: assert(move _40, "attempt to shift left by `{}`, which would overflow", const 8_i32) -> [success: bb5, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _35 = Shl(move _36, const 8_i32),
            StorageDead(_36),
            StorageLive(_41),
            _41 = _19,
            _34 = BitOr(move _35, move _41),
            StorageDead(_41),
            StorageDead(_35),
            StorageLive(_42),
            _42 = _26,
            _33 = BitOr(move _34, move _42),
            StorageDead(_42),
            StorageDead(_34),
            FakeRead(ForLet(None), _33),
            StorageLive(_43),
            StorageLive(_44),
            _44 = _33,
            _43 = Ge(move _44, const 0_i32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1084:8: 1084:22 (#0),
                    scope: scope[5],
                },
                kind: switchInt(move _43) -> [0: bb7, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            StorageLive(_45),
            StorageLive(_46),
            _46 = _33,
            _45 = move _46 as u16 (IntToInt),
            StorageDead(_46),
            _0 = core::option::Option::<u16>::Some(move _45),
            StorageDead(_45),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1084:5: 1088:6 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
            _0 = core::option::Option::<u16>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1084:5: 1088:6 (#0),
                    scope: scope[5],
                },
                kind: goto -> bb8,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_33),
            StorageDead(_26),
            StorageDead(_19),
            StorageDead(_12),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1089:2: 1089:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1075:1: 1089:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<u16>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1075:58: 1075:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:1075:30: 1075:32 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1075:27: 1075:28 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1075:27: 1075:28 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1075:27: 1075:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:1075:37: 1075:39 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1075:34: 1075:35 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1075:34: 1075:35 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1075:34: 1075:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:1075:44: 1075:46 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1075:41: 1075:42 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1075:41: 1075:42 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1075:41: 1075:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:1075:51: 1075:53 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1075:48: 1075:49 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1075:48: 1075:49 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1075:48: 1075:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1076:13: 1076:36 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1076:9: 1076:10 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:9: 1076:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:13: 1076:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:2100 ~ serde_json[c3d0]::read::HEX1),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [i16; 256_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:13: 1076:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:18: 1076:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:18: 1076:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:13: 1076:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1076:13: 1076:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1077:13: 1077:36 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1077:9: 1077:10 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:9: 1077:10 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:13: 1077:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:2098 ~ serde_json[c3d0]::read::HEX0),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [i16; 256_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:13: 1077:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:18: 1077:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:18: 1077:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:13: 1077:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1077:13: 1077:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1078:13: 1078:36 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1078:9: 1078:10 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:9: 1078:10 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:13: 1078:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:2100 ~ serde_json[c3d0]::read::HEX1),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [i16; 256_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:13: 1078:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:18: 1078:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:18: 1078:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:13: 1078:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1078:13: 1078:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1079:13: 1079:36 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1079:9: 1079:10 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:9: 1079:10 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:13: 1079:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            StaticRef {
                def_id: DefId(0:2098 ~ serde_json[c3d0]::read::HEX0),
                is_thread_local: false,
            },
        ),
        ty: &'{erased} [i16; 256_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:13: 1079:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:18: 1079:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:18: 1079:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:13: 1079:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1079:13: 1079:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1081:21: 1081:43 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1081:9: 1081:18 (#0),
                    },
                ),
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:9: 1081:18 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:21: 1081:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:21: 1081:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:22: 1081:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:23: 1081:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:27: 1081:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:21: 1081:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:21: 1081:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:38: 1081:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1081:42: 1081:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1084:5: 1088:6 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1084:8: 1084:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1084:5: 1088:6 (#0),
                },
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1084:8: 1084:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1085:14: 1085:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1085:9: 1085:31 (#0),
                },
            ),
        ),
        ty: i32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1085:14: 1085:23 (#0),
            scope: scope[0],
        },
    },
]