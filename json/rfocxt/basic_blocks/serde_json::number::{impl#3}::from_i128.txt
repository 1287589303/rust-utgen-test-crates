[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:239:32: 239:48 (#0),
                    scope: scope[2],
                },
                kind: _3 = <u64 as core::convert::TryFrom<i128>>::try_from(move _4) -> [return: bb1, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            PlaceMention(_3),
            _5 = discriminant(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:239:24: 239:29 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _5) -> [0: bb2, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:239:24: 239:29 (#0),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb3, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = ((_3 as Ok).0: u64),
            StorageLive(_7),
            _7 = _6,
            _2 = number::N::PosInt(move _7),
            StorageDead(_7),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:239:17: 245:18 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            StorageLive(_9),
            _9 = _1,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:241:39: 241:55 (#0),
                    scope: scope[3],
                },
                kind: _8 = <i64 as core::convert::TryFrom<i128>>::try_from(move _9) -> [return: bb5, unwind: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            PlaceMention(_8),
            _10 = discriminant(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:241:31: 241:36 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _10) -> [0: bb6, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:241:31: 241:36 (#0),
                    scope: scope[3],
                },
                kind: falseEdge -> [real: bb7, imaginary: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            _11 = ((_8 as Ok).0: i64),
            StorageLive(_12),
            _12 = _11,
            _2 = number::N::NegInt(move _12),
            StorageDead(_12),
            StorageDead(_11),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:239:17: 245:18 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb9,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<number::Number>::None,
            StorageDead(_8),
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:253:6: 253:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForLet(None), _2),
            StorageDead(_3),
            StorageLive(_14),
            StorageLive(_15),
            _15 = _2,
            _14 = number::Number { n: move _15 },
            StorageDead(_15),
            _0 = core::option::Option::<number::Number>::Some(move _14),
            StorageDead(_14),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:253:6: 253:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb10,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:253:6: 253:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/number.rs:235:5: 253:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<number::Number>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:235:34: 235:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/number.rs:235:25: 235:29 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:235:22: 235:23 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:235:22: 235:23 (#0),
                    },
                ),
            ),
        ),
        ty: i128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:235:22: 235:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/number.rs:236:17: 251:10 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:236:13: 236:14 (#0),
                    },
                ),
            ),
        ),
        ty: number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:236:13: 236:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:239:17: 245:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<u64, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:239:32: 239:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:239:17: 245:18 (#0),
                },
            ),
        ),
        ty: i128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:239:46: 239:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:239:24: 239:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/number.rs:239:32: 239:48 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:239:24: 239:29 (#0),
                    },
                ),
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:239:27: 239:28 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:240:31: 240:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:239:17: 245:18 (#0),
                },
            ),
        ),
        ty: core::result::Result<i64, core::num::TryFromIntError>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:241:39: 241:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:239:17: 245:18 (#0),
                },
            ),
        ),
        ty: i128,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:241:53: 241:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:241:31: 241:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _8,
                                ),
                                src/number.rs:241:39: 241:55 (#0),
                            ),
                        ),
                        pat_span: src/number.rs:241:31: 241:36 (#0),
                    },
                ),
            ),
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:241:34: 241:35 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: i64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:242:31: 242:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/number.rs:239:17: 245:18 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:243:24: 245:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: number::Number,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:252:14: 252:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: number::N,
        user_ty: None,
        source_info: SourceInfo {
            span: src/number.rs:252:23: 252:24 (#0),
            scope: scope[0],
        },
    },
]