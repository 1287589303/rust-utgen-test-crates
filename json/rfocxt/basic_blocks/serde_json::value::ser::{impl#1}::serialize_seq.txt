[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:235:37: 235:53 (#0),
                    scope: scope[0],
                },
                kind: _5 = core::option::Option::<usize>::unwrap_or(move _6, const 0_usize) -> [return: bb1, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:235:18: 235:54 (#0),
                    scope: scope[0],
                },
                kind: _4 = alloc::vec::Vec::<value::Value>::with_capacity(move _5) -> [return: bb2, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            _3 = value::ser::SerializeVec { vec: move _4 },
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:236:9: 236:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_4) -> [return: bb3, unwind: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            _0 = core::result::Result::<value::ser::SerializeVec, error::Error>::Ok(move _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:236:10: 236:11 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb4, unwind: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:237:6: 237:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:236:10: 236:11 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb6, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:233:5: 237:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<value::ser::SerializeVec, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:233:51: 233:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: value::ser::Serializer,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:233:22: 233:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/ser.rs:233:33: 233:46 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/ser.rs:233:28: 233:31 (#0),
                            ),
                        ),
                        pat_span: src/value/ser.rs:233:28: 233:31 (#0),
                    },
                ),
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:233:28: 233:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: value::ser::SerializeVec,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:234:12: 236:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: alloc::vec::Vec<value::Value, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:235:18: 235:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/ser.rs:234:9: 236:11 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:235:37: 235:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/ser.rs:234:9: 236:11 (#0),
                },
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:235:37: 235:40 (#0),
            scope: scope[0],
        },
    },
]