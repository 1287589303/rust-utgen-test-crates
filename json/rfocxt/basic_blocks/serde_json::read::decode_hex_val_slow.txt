[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _6 = Le(const 48_u8, _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1052:9: 1052:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _6) -> [0: bb3, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<u8>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1055:14: 1055:18 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1052:9: 1052:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb10, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = Le(const 65_u8, _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:9: 1053:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _4) -> [0: bb5, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:9: 1053:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _2 = Le(const 97_u8, _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:9: 1054:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb1, otherwise: bb7],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:9: 1054:20 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb15, imaginary: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _3 = Le(_1, const 102_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:9: 1054:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _3) -> [0: bb1, otherwise: bb6],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = Le(_1, const 70_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:9: 1053:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb5, otherwise: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = Le(_1, const 57_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1052:9: 1052:20 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb3, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            StorageLive(_9),
            _9 = _1,
            _10 = SubWithOverflow(_9, const 48_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1052:29: 1052:39 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_10.1: bool), "attempt to compute `{} - {}`, which would overflow", move _9, const 48_u8) -> [success: bb11, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _8 = move (_10.0: u8),
            StorageDead(_9),
            _0 = core::option::Option::<u8>::Some(move _8),
            StorageDead(_8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1052:39: 1052:40 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _1,
            _14 = SubWithOverflow(_13, const 65_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:29: 1053:39 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_14.1: bool), "attempt to compute `{} - {}`, which would overflow", move _13, const 65_u8) -> [success: bb13, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = move (_14.0: u8),
            StorageDead(_13),
            _15 = AddWithOverflow(_12, const 10_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:29: 1053:44 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_15.1: bool), "attempt to compute `{} + {}`, which would overflow", move _12, const 10_u8) -> [success: bb14, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _11 = move (_15.0: u8),
            StorageDead(_12),
            _0 = core::option::Option::<u8>::Some(move _11),
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1053:44: 1053:45 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = _1,
            _19 = SubWithOverflow(_18, const 97_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:29: 1054:39 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_19.1: bool), "attempt to compute `{} - {}`, which would overflow", move _18, const 97_u8) -> [success: bb16, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _17 = move (_19.0: u8),
            StorageDead(_18),
            _20 = AddWithOverflow(_17, const 10_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:29: 1054:44 (#0),
                    scope: scope[0],
                },
                kind: assert(!move (_20.1: bool), "attempt to compute `{} + {}`, which would overflow", move _17, const 10_u8) -> [success: bb17, unwind: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = move (_20.0: u8),
            StorageDead(_17),
            _0 = core::option::Option::<u8>::Some(move _16),
            StorageDead(_16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1054:44: 1054:45 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1057:2: 1057:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:1050:1: 1057:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1050:42: 1050:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:1050:35: 1050:37 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:1050:30: 1050:33 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:1050:30: 1050:33 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1050:30: 1050:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:9: 1054:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:9: 1054:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:9: 1053:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:9: 1053:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1052:9: 1052:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1052:9: 1052:20 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1052:29: 1052:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1051:5: 1056:6 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1052:29: 1052:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1052:29: 1052:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:29: 1053:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1051:5: 1056:6 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:29: 1053:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1051:5: 1056:6 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:29: 1053:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:29: 1053:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1053:29: 1053:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:29: 1054:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1051:5: 1056:6 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:29: 1054:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:1051:5: 1056:6 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:29: 1054:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:29: 1054:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u8, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:1054:29: 1054:44 (#0),
            scope: scope[0],
        },
    },
]