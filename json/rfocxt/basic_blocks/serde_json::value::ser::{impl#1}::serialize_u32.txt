[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = move _1,
            StorageLive(_4),
            StorageLive(_5),
            _5 = _2,
            _4 = move _5 as u64 (IntToInt),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:126:9: 126:41 (#0),
                    scope: scope[0],
                },
                kind: _0 = <value::ser::Serializer as serde::Serializer>::serialize_u64(move _3, move _4) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:127:6: 127:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/ser.rs:125:5: 127:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<value::Value, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:125:43: 125:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    Imm,
                ),
            ),
        ),
        ty: value::ser::Serializer,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:125:22: 125:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/value/ser.rs:125:35: 125:38 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/value/ser.rs:125:28: 125:33 (#0),
                            ),
                        ),
                        pat_span: src/value/ser.rs:125:28: 125:33 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:125:28: 125:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/ser.rs:126:9: 126:41 (#0),
                },
            ),
        ),
        ty: value::ser::Serializer,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:126:9: 126:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/ser.rs:126:9: 126:41 (#0),
                },
            ),
        ),
        ty: u64,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:126:28: 126:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/ser.rs:126:9: 126:41 (#0),
                },
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/ser.rs:126:28: 126:33 (#0),
            scope: scope[0],
        },
    },
]