[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            StorageLive(_4),
            _4 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:369:22: 369:39 (#0),
                    scope: scope[0],
                },
                kind: _3 = read::next_or_eof::<'_, read::IoRead<R>>(move _4) -> [return: bb1, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            PlaceMention(_3),
            _5 = discriminant(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#761),
                    scope: scope[0],
                },
                kind: switchInt(move _5) -> [0: bb3, 1: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:369:22: 369:39 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#761),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_7),
            _7 = move ((_3 as Err).0: error::Error),
            StorageLive(_9),
            _9 = move _7,
            _0 = core::result::Result::<u16, error::Error>::Err(move _9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#761),
                    scope: scope[3],
                },
                kind: drop(_9) -> [return: bb6, unwind: bb55],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_6),
            _6 = ((_3 as Ok).0: u8),
            _2 = _6,
            StorageDead(_6),
            FakeRead(ForLet(None), _2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:369:40: 369:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb7, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#761),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb44, unwind: bb56],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageLive(_10),
            StorageLive(_11),
            StorageLive(_12),
            _12 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:370:22: 370:39 (#0),
                    scope: scope[1],
                },
                kind: _11 = read::next_or_eof::<'_, read::IoRead<R>>(move _12) -> [return: bb8, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_12),
            PlaceMention(_11),
            _13 = discriminant(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#762),
                    scope: scope[1],
                },
                kind: switchInt(move _13) -> [0: bb10, 1: bb11, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:370:22: 370:39 (#0),
                    scope: scope[1],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#762),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb12, imaginary: bb11],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_15),
            _15 = move ((_11 as Err).0: error::Error),
            StorageLive(_17),
            _17 = move _15,
            _0 = core::result::Result::<u16, error::Error>::Err(move _17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#762),
                    scope: scope[6],
                },
                kind: drop(_17) -> [return: bb13, unwind: bb53],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            _14 = ((_11 as Ok).0: u8),
            _10 = _14,
            StorageDead(_14),
            FakeRead(ForLet(None), _10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:370:40: 370:41 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb14, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#762),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb41, unwind: bb54],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:371:22: 371:39 (#0),
                    scope: scope[4],
                },
                kind: _19 = read::next_or_eof::<'_, read::IoRead<R>>(move _20) -> [return: bb15, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            PlaceMention(_19),
            _21 = discriminant(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#763),
                    scope: scope[4],
                },
                kind: switchInt(move _21) -> [0: bb17, 1: bb18, otherwise: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:371:22: 371:39 (#0),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#763),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb19, imaginary: bb18],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_23),
            _23 = move ((_19 as Err).0: error::Error),
            StorageLive(_25),
            _25 = move _23,
            _0 = core::result::Result::<u16, error::Error>::Err(move _25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#763),
                    scope: scope[9],
                },
                kind: drop(_25) -> [return: bb20, unwind: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_22),
            _22 = ((_19 as Ok).0: u8),
            _18 = _22,
            StorageDead(_22),
            FakeRead(ForLet(None), _18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:371:40: 371:41 (#0),
                    scope: scope[4],
                },
                kind: drop(_19) -> [return: bb21, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#763),
                    scope: scope[4],
                },
                kind: drop(_23) -> [return: bb38, unwind: bb52],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
            StorageLive(_26),
            StorageLive(_27),
            StorageLive(_28),
            _28 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:372:22: 372:39 (#0),
                    scope: scope[7],
                },
                kind: _27 = read::next_or_eof::<'_, read::IoRead<R>>(move _28) -> [return: bb22, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
            PlaceMention(_27),
            _29 = discriminant(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#764),
                    scope: scope[7],
                },
                kind: switchInt(move _29) -> [0: bb24, 1: bb25, otherwise: bb23],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:372:22: 372:39 (#0),
                    scope: scope[7],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#764),
                    scope: scope[7],
                },
                kind: falseEdge -> [real: bb26, imaginary: bb25],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_31),
            _31 = move ((_27 as Err).0: error::Error),
            StorageLive(_33),
            _33 = move _31,
            _0 = core::result::Result::<u16, error::Error>::Err(move _33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#764),
                    scope: scope[12],
                },
                kind: drop(_33) -> [return: bb27, unwind: bb49],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_30),
            _30 = ((_27 as Ok).0: u8),
            _26 = _30,
            StorageDead(_30),
            FakeRead(ForLet(None), _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:372:40: 372:41 (#0),
                    scope: scope[7],
                },
                kind: drop(_27) -> [return: bb28, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#764),
                    scope: scope[7],
                },
                kind: drop(_31) -> [return: bb36, unwind: bb50],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageLive(_34),
            StorageLive(_35),
            _35 = _2,
            StorageLive(_36),
            _36 = _10,
            StorageLive(_37),
            _37 = _18,
            StorageLive(_38),
            _38 = _26,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:373:15: 373:49 (#0),
                    scope: scope[10],
                },
                kind: _34 = read::decode_four_hex_digits(move _35, move _36, move _37, move _38) -> [return: bb29, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageDead(_36),
            StorageDead(_35),
            PlaceMention(_34),
            _39 = discriminant(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:373:9: 373:49 (#0),
                    scope: scope[10],
                },
                kind: switchInt(move _39) -> [0: bb32, 1: bb31, otherwise: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:373:15: 373:49 (#0),
                    scope: scope[10],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:374:13: 374:22 (#0),
                    scope: scope[10],
                },
                kind: falseEdge -> [real: bb33, imaginary: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_42),
            _42 = &(*_1),
            StorageLive(_43),
            _43 = error::ErrorCode::InvalidEscape,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:375:21: 375:58 (#0),
                    scope: scope[10],
                },
                kind: _0 = read::error::<'_, read::IoRead<R>, u16>(move _42, move _43) -> [return: bb34, unwind: bb48],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_40),
            _40 = ((_34 as Some).0: u16),
            StorageLive(_41),
            _41 = _40,
            _0 = core::result::Result::<u16, error::Error>::Ok(move _41),
            StorageDead(_41),
            StorageDead(_40),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:374:32: 374:33 (#0),
                    scope: scope[10],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_43),
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:375:57: 375:58 (#0),
                    scope: scope[10],
                },
                kind: goto -> bb35,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_18),
            StorageDead(_10),
            StorageDead(_2),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:377:6: 377:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb47,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:372:40: 372:41 (#0),
                    scope: scope[7],
                },
                kind: drop(_27) -> [return: bb37, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            StorageDead(_26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[7],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:371:40: 371:41 (#0),
                    scope: scope[4],
                },
                kind: drop(_19) -> [return: bb39, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_19),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb40,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb43,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:370:40: 370:41 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb42, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb43,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb46,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:369:40: 369:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb45, unwind: bb57],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb46,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:377:6: 377:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb47,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:377:6: 377:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:375:57: 375:58 (#0),
                    scope: scope[10],
                },
                kind: drop(_43) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#764),
                    scope: scope[7],
                },
                kind: drop(_31) -> [return: bb50, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:372:40: 372:41 (#0),
                    scope: scope[7],
                },
                kind: drop(_27) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#763),
                    scope: scope[4],
                },
                kind: drop(_23) -> [return: bb52, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:371:40: 371:41 (#0),
                    scope: scope[4],
                },
                kind: drop(_19) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#762),
                    scope: scope[1],
                },
                kind: drop(_15) -> [return: bb54, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:370:40: 370:41 (#0),
                    scope: scope[1],
                },
                kind: drop(_11) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#761),
                    scope: scope[0],
                },
                kind: drop(_7) -> [return: bb56, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:369:40: 369:41 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb57, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:368:5: 377:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u16, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:368:40: 368:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:368:26: 368:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#761),
                            ),
                        ),
                        pat_span: src/read.rs:369:13: 369:14 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:369:13: 369:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:369:22: 369:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:369:34: 369:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#761),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/read.rs:369:22: 369:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#761),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#761),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _3,
                                ),
                                src/read.rs:369:22: 369:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#761),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#761),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#761),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#761),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#762),
                            ),
                        ),
                        pat_span: src/read.rs:370:13: 370:14 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:370:13: 370:14 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:370:22: 370:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:370:34: 370:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#762),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _11,
                                ),
                                src/read.rs:370:22: 370:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#762),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#762),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _11,
                                ),
                                src/read.rs:370:22: 370:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#762),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#762),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#762),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#762),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#763),
                            ),
                        ),
                        pat_span: src/read.rs:371:13: 371:14 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:371:13: 371:14 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:371:22: 371:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:371:34: 371:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#763),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _19,
                                ),
                                src/read.rs:371:22: 371:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#763),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#763),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _19,
                                ),
                                src/read.rs:371:22: 371:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#763),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#763),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#763),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#763),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#764),
                            ),
                        ),
                        pat_span: src/read.rs:372:13: 372:14 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:372:13: 372:14 (#0),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:372:22: 372:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:372:34: 372:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#764),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _27,
                                ),
                                src/read.rs:372:22: 372:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#764),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#764),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _27,
                                ),
                                src/read.rs:372:22: 372:39 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#764),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#764),
            scope: scope[7],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#764),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#764),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<u16>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:373:15: 373:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:373:38: 373:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:373:41: 373:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:373:44: 373:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:373:47: 373:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:374:13: 374:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _34,
                                ),
                                src/read.rs:373:15: 373:49 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:374:13: 374:22 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:374:18: 374:21 (#0),
            scope: scope[10],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:374:29: 374:32 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: &'{erased} read::IoRead<R/#1>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:375:27: 375:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:373:9: 376:10 (#0),
                },
            ),
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:375:33: 375:57 (#0),
            scope: scope[0],
        },
    },
]