[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:905:22: 905:46 (#0),
                    scope: scope[0],
                },
                kind: _5 = <R as read::Read<'_>>::decode_hex_escape(move _6) -> [return: bb1, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_6),
            PlaceMention(_5),
            _7 = discriminant(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#770),
                    scope: scope[0],
                },
                kind: switchInt(move _7) -> [0: bb3, 1: bb4, otherwise: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:905:22: 905:46 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#770),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb5, imaginary: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_9),
            _9 = move ((_5 as Err).0: error::Error),
            StorageLive(_11),
            _11 = move _9,
            _0 = core::result::Result::<(), error::Error>::Err(move _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#770),
                    scope: scope[3],
                },
                kind: drop(_11) -> [return: bb6, unwind: bb103],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_8),
            _8 = ((_5 as Ok).0: u16),
            _4 = _8,
            StorageDead(_8),
            FakeRead(ForLet(None), _4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:905:47: 905:48 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb7, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#770),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb90, unwind: bb104],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:911:8: 911:16 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _13) -> [0: bb14, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_14),
            StorageLive(_15),
            _15 = _4,
            _14 = Ge(move _15, const 56320_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:911:20: 911:31 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _14) -> [0: bb13, otherwise: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
            StorageLive(_16),
            StorageLive(_17),
            _17 = _4,
            _16 = Le(move _17, const 57343_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:911:35: 911:46 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _16) -> [0: bb12, otherwise: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageLive(_19),
            _19 = &(*_1),
            StorageLive(_20),
            _20 = error::ErrorCode::LoneLeadingSurrogateInHexEscape,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:913:16: 913:71 (#0),
                    scope: scope[1],
                },
                kind: _0 = read::error::<'_, R, ()>(move _19, move _20) -> [return: bb11, unwind: bb102],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_20),
            StorageDead(_19),
            StorageDead(_16),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_15),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb14,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _12 = const (),
            StorageDead(_16),
            StorageDead(_14),
            StorageDead(_13),
            StorageDead(_12),
            StorageLive(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:916:5: 972:6 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:916:5: 972:6 (#0),
                    scope: scope[1],
                },
                kind: falseUnwind -> [real: bb16, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_23),
            StorageLive(_24),
            StorageLive(_25),
            _25 = _4,
            _24 = Lt(move _25, const 55296_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:917:12: 917:22 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _24) -> [0: bb18, otherwise: bb17],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:917:37: 922:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_25),
            StorageLive(_26),
            StorageLive(_27),
            _27 = _4,
            _26 = Gt(move _27, const 56319_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:917:26: 917:36 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _26) -> [0: bb22, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:917:37: 922:10 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb20,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_29),
            StorageLive(_30),
            StorageLive(_31),
            _31 = _4,
            _30 = move _31 as u32 (IntToInt),
            StorageDead(_31),
            StorageLive(_32),
            _32 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:920:13: 920:51 (#0),
                    scope: scope[1],
                },
                kind: _29 = read::push_wtf8_codepoint(move _30, move _32) -> [return: bb21, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_32),
            StorageDead(_30),
            StorageDead(_29),
            StorageLive(_33),
            _33 = (),
            _0 = core::result::Result::<(), error::Error>::Ok(move _33),
            StorageDead(_33),
            StorageDead(_26),
            StorageDead(_24),
            StorageDead(_23),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb89,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            _23 = const (),
            StorageDead(_26),
            StorageDead(_24),
            StorageDead(_23),
            StorageLive(_34),
            _34 = _4,
            FakeRead(ForLet(None), _34),
            StorageLive(_35),
            StorageLive(_36),
            StorageLive(_37),
            StorageLive(_38),
            StorageLive(_39),
            _39 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:17: 927:34 (#0),
                    scope: scope[4],
                },
                kind: _38 = read::peek_or_eof::<'_, R>(move _39) -> [return: bb23, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_39),
            PlaceMention(_38),
            _40 = discriminant(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#771),
                    scope: scope[4],
                },
                kind: switchInt(move _40) -> [0: bb25, 1: bb26, otherwise: bb24],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:17: 927:34 (#0),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#771),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb27, imaginary: bb26],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_42),
            _42 = move ((_38 as Err).0: error::Error),
            StorageLive(_44),
            _44 = move _42,
            _0 = core::result::Result::<(), error::Error>::Err(move _44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#771),
                    scope: scope[6],
                },
                kind: drop(_44) -> [return: bb28, unwind: bb100],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_41),
            _41 = ((_38 as Ok).0: u8),
            _37 = _41,
            StorageDead(_41),
            _36 = Eq(move _37, const 92_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:12: 927:44 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _36) -> [0: bb30, otherwise: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#771),
                    scope: scope[4],
                },
                kind: drop(_42) -> [return: bb85, unwind: bb101],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:43: 927:44 (#0),
                    scope: scope[4],
                },
                kind: drop(_38) -> [return: bb31, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:43: 927:44 (#0),
                    scope: scope[4],
                },
                kind: drop(_38) -> [return: bb33, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageLive(_45),
            StorageLive(_46),
            _46 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:928:13: 928:27 (#0),
                    scope: scope[4],
                },
                kind: _45 = <R as read::Read<'_>>::discard(move _46) -> [return: bb32, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_46),
            StorageDead(_45),
            _35 = const (),
            StorageDead(_36),
            StorageDead(_35),
            StorageLive(_58),
            StorageLive(_59),
            StorageLive(_60),
            StorageLive(_61),
            StorageLive(_62),
            _62 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:17: 939:34 (#0),
                    scope: scope[4],
                },
                kind: _61 = read::peek_or_eof::<'_, R>(move _62) -> [return: bb40, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
            StorageLive(_48),
            _48 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:930:23: 930:31 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _48) -> [0: bb37, otherwise: bb34],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_49),
            StorageLive(_50),
            _50 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:931:17: 931:31 (#0),
                    scope: scope[4],
                },
                kind: _49 = <R as read::Read<'_>>::discard(move _50) -> [return: bb35, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_49),
            StorageLive(_51),
            _51 = &(*_1),
            StorageLive(_52),
            _52 = error::ErrorCode::UnexpectedEndOfHexEscape,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:932:17: 932:65 (#0),
                    scope: scope[4],
                },
                kind: _0 = read::error::<'_, R, ()>(move _51, move _52) -> [return: bb36, unwind: bb99],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_52),
            StorageDead(_51),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:930:20: 936:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_53),
            StorageLive(_54),
            StorageLive(_55),
            _55 = _34,
            _54 = move _55 as u32 (IntToInt),
            StorageDead(_55),
            StorageLive(_56),
            _56 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:934:17: 934:56 (#0),
                    scope: scope[4],
                },
                kind: _53 = read::push_wtf8_codepoint(move _54, move _56) -> [return: bb38, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_56),
            StorageDead(_54),
            StorageDead(_53),
            StorageLive(_57),
            _57 = (),
            _0 = core::result::Result::<(), error::Error>::Ok(move _57),
            StorageDead(_57),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:930:20: 936:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb39,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_48),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:930:13: 936:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb87,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_62),
            PlaceMention(_61),
            _63 = discriminant(_61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#772),
                    scope: scope[4],
                },
                kind: switchInt(move _63) -> [0: bb42, 1: bb43, otherwise: bb41],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _61),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:17: 939:34 (#0),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#772),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb44, imaginary: bb43],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_65),
            _65 = move ((_61 as Err).0: error::Error),
            StorageLive(_67),
            _67 = move _65,
            _0 = core::result::Result::<(), error::Error>::Err(move _67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#772),
                    scope: scope[8],
                },
                kind: drop(_67) -> [return: bb45, unwind: bb97],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_64),
            _64 = ((_61 as Ok).0: u8),
            _60 = _64,
            StorageDead(_64),
            _59 = Eq(move _60, const 117_u8),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:12: 939:43 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _59) -> [0: bb47, otherwise: bb46],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_67),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#772),
                    scope: scope[4],
                },
                kind: drop(_65) -> [return: bb82, unwind: bb98],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:42: 939:43 (#0),
                    scope: scope[4],
                },
                kind: drop(_61) -> [return: bb48, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:42: 939:43 (#0),
                    scope: scope[4],
                },
                kind: drop(_61) -> [return: bb50, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
            StorageLive(_68),
            StorageLive(_69),
            _69 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:940:13: 940:27 (#0),
                    scope: scope[4],
                },
                kind: _68 = <R as read::Read<'_>>::discard(move _69) -> [return: bb49, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_69),
            StorageDead(_68),
            _58 = const (),
            StorageDead(_59),
            StorageDead(_58),
            StorageLive(_83),
            StorageLive(_84),
            StorageLive(_85),
            _85 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:955:23: 955:47 (#0),
                    scope: scope[4],
                },
                kind: _84 = <R as read::Read<'_>>::decode_hex_escape(move _85) -> [return: bb58, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
            StorageLive(_71),
            _71 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:942:23: 942:31 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _71) -> [0: bb54, otherwise: bb51],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_72),
            StorageLive(_73),
            _73 = &mut (*_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:943:17: 943:31 (#0),
                    scope: scope[4],
                },
                kind: _72 = <R as read::Read<'_>>::discard(move _73) -> [return: bb52, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_73),
            StorageDead(_72),
            StorageLive(_74),
            _74 = &(*_1),
            StorageLive(_75),
            _75 = error::ErrorCode::UnexpectedEndOfHexEscape,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:944:17: 944:65 (#0),
                    scope: scope[4],
                },
                kind: _0 = read::error::<'_, R, ()>(move _74, move _75) -> [return: bb53, unwind: bb96],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_75),
            StorageDead(_74),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:942:20: 952:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_76),
            StorageLive(_77),
            StorageLive(_78),
            _78 = _34,
            _77 = move _78 as u32 (IntToInt),
            StorageDead(_78),
            StorageLive(_79),
            _79 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:946:17: 946:56 (#0),
                    scope: scope[4],
                },
                kind: _76 = read::push_wtf8_codepoint(move _77, move _79) -> [return: bb55, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_79),
            StorageDead(_77),
            StorageDead(_76),
            StorageLive(_80),
            _80 = &mut (*_1),
            StorageLive(_81),
            _81 = _2,
            StorageLive(_82),
            _82 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:951:17: 951:54 (#0),
                    scope: scope[4],
                },
                kind: _0 = read::parse_escape::<'_, R>(move _80, move _81, move _82) -> [return: bb56, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_82),
            StorageDead(_81),
            StorageDead(_80),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:942:20: 952:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb57,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_71),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:942:13: 952:14 (#0),
                    scope: scope[4],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_85),
            PlaceMention(_84),
            _86 = discriminant(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:408:9: 408:9 (#773),
                    scope: scope[4],
                },
                kind: switchInt(move _86) -> [0: bb60, 1: bb61, otherwise: bb59],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:955:23: 955:47 (#0),
                    scope: scope[4],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:409:13: 409:42 (#773),
                    scope: scope[4],
                },
                kind: falseEdge -> [real: bb62, imaginary: bb61],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_88),
            _88 = move ((_84 as Err).0: error::Error),
            StorageLive(_90),
            _90 = move _88,
            _0 = core::result::Result::<(), error::Error>::Err(move _90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#773),
                    scope: scope[11],
                },
                kind: drop(_90) -> [return: bb63, unwind: bb94],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_87),
            _87 = ((_84 as Ok).0: u16),
            _83 = _87,
            StorageDead(_87),
            FakeRead(ForLet(None), _83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:955:48: 955:49 (#0),
                    scope: scope[4],
                },
                kind: drop(_84) -> [return: bb64, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_90),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#773),
                    scope: scope[4],
                },
                kind: drop(_88) -> [return: bb79, unwind: bb95],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
            StorageLive(_91),
            StorageLive(_92),
            StorageLive(_93),
            _93 = _83,
            _92 = Lt(move _93, const 56320_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:957:12: 957:23 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _92) -> [0: bb66, otherwise: bb65],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:957:39: 965:10 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb68,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_93),
            StorageLive(_94),
            StorageLive(_95),
            _95 = _83,
            _94 = Gt(move _95, const 57343_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:957:27: 957:38 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _94) -> [0: bb73, otherwise: bb67],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:957:39: 965:10 (#0),
                    scope: scope[9],
                },
                kind: goto -> bb68,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_97),
            StorageLive(_98),
            _98 = _2,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:958:16: 958:24 (#0),
                    scope: scope[9],
                },
                kind: switchInt(move _98) -> [0: bb71, otherwise: bb69],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_100),
            _100 = &(*_1),
            StorageLive(_101),
            _101 = error::ErrorCode::LoneLeadingSurrogateInHexEscape,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:959:24: 959:79 (#0),
                    scope: scope[9],
                },
                kind: _0 = read::error::<'_, R, ()>(move _100, move _101) -> [return: bb70, unwind: bb93],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_101),
            StorageDead(_100),
            StorageDead(_98),
            StorageDead(_97),
            StorageDead(_94),
            StorageDead(_92),
            StorageDead(_91),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb81,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _97 = const (),
            StorageDead(_98),
            StorageDead(_97),
            StorageLive(_102),
            StorageLive(_103),
            StorageLive(_104),
            _104 = _34,
            _103 = move _104 as u32 (IntToInt),
            StorageDead(_104),
            StorageLive(_105),
            _105 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:961:13: 961:52 (#0),
                    scope: scope[9],
                },
                kind: _102 = read::push_wtf8_codepoint(move _103, move _105) -> [return: bb72, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_105),
            StorageDead(_103),
            StorageDead(_102),
            StorageLive(_106),
            _106 = _83,
            _4 = move _106,
            StorageDead(_106),
            StorageDead(_94),
            StorageDead(_92),
            StorageDead(_91),
            StorageDead(_83),
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb15,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_95),
            _91 = const (),
            StorageDead(_94),
            StorageDead(_92),
            StorageDead(_91),
            StorageLive(_107),
            StorageLive(_108),
            StorageLive(_109),
            StorageLive(_110),
            StorageLive(_111),
            StorageLive(_112),
            _112 = _34,
            _113 = SubWithOverflow(_112, const 55296_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:969:20: 969:33 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_113.1: bool), "attempt to compute `{} - {}`, which would overflow", move _112, const 55296_u16) -> [success: bb74, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _111 = move (_113.0: u16),
            StorageDead(_112),
            _110 = move _111 as u32 (IntToInt),
            StorageDead(_111),
            _114 = const 10_i32 as u32 (IntToInt),
            _115 = Lt(move _114, const 32_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:969:18: 969:48 (#0),
                    scope: scope[9],
                },
                kind: assert(move _115, "attempt to shift left by `{}`, which would overflow", const 10_i32) -> [success: bb75, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _109 = Shl(move _110, const 10_i32),
            StorageDead(_110),
            StorageLive(_116),
            StorageLive(_117),
            StorageLive(_118),
            _118 = _83,
            _119 = SubWithOverflow(_118, const 56320_u16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:969:51: 969:64 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_119.1: bool), "attempt to compute `{} - {}`, which would overflow", move _118, const 56320_u16) -> [success: bb76, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _117 = move (_119.0: u16),
            StorageDead(_118),
            _116 = move _117 as u32 (IntToInt),
            StorageDead(_117),
            _108 = BitOr(move _109, move _116),
            StorageDead(_116),
            StorageDead(_109),
            _120 = AddWithOverflow(_108, const 65536_u32),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:969:17: 969:83 (#0),
                    scope: scope[9],
                },
                kind: assert(!move (_120.1: bool), "attempt to compute `{} + {}`, which would overflow", move _108, const 65536_u32) -> [success: bb77, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _107 = move (_120.0: u32),
            StorageDead(_108),
            FakeRead(ForLet(None), _107),
            StorageLive(_121),
            StorageLive(_122),
            _122 = _107,
            StorageLive(_123),
            _123 = &mut (*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:970:9: 970:40 (#0),
                    scope: scope[12],
                },
                kind: _121 = read::push_wtf8_codepoint(move _122, move _123) -> [return: bb78, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_123),
            StorageDead(_122),
            StorageDead(_121),
            StorageLive(_124),
            _124 = (),
            _0 = core::result::Result::<(), error::Error>::Ok(move _124),
            StorageDead(_124),
            StorageDead(_107),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[9],
                },
                kind: goto -> bb81,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_88),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:955:48: 955:49 (#0),
                    scope: scope[4],
                },
                kind: drop(_84) -> [return: bb80, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_84),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb81,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_83),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb88,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_65),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:42: 939:43 (#0),
                    scope: scope[4],
                },
                kind: drop(_61) -> [return: bb83, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_61),
            StorageDead(_60),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb84,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_59),
            StorageDead(_58),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb88,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_42),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:43: 927:44 (#0),
                    scope: scope[4],
                },
                kind: drop(_38) -> [return: bb86, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_38),
            StorageDead(_37),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb87,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_36),
            StorageDead(_35),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[4],
                },
                kind: goto -> bb88,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb89,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[1],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:905:47: 905:48 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb91, unwind: bb105],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: no-location (#0),
                    scope: scope[0],
                },
                kind: goto -> bb92,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:973:2: 973:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:959:78: 959:79 (#0),
                    scope: scope[9],
                },
                kind: drop(_101) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#773),
                    scope: scope[4],
                },
                kind: drop(_88) -> [return: bb95, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:955:48: 955:49 (#0),
                    scope: scope[4],
                },
                kind: drop(_84) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:944:64: 944:65 (#0),
                    scope: scope[4],
                },
                kind: drop(_75) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#772),
                    scope: scope[4],
                },
                kind: drop(_65) -> [return: bb98, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:939:42: 939:43 (#0),
                    scope: scope[4],
                },
                kind: drop(_61) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:932:64: 932:65 (#0),
                    scope: scope[4],
                },
                kind: drop(_52) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#771),
                    scope: scope[4],
                },
                kind: drop(_42) -> [return: bb101, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:927:43: 927:44 (#0),
                    scope: scope[4],
                },
                kind: drop(_38) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:913:70: 913:71 (#0),
                    scope: scope[1],
                },
                kind: drop(_20) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/lib.rs:410:83: 410:84 (#770),
                    scope: scope[0],
                },
                kind: drop(_9) -> [return: bb104, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:905:47: 905:48 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb105, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/read.rs:900:1: 973:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:904:6: 904:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:901:11: 901:17 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:901:5: 901:9 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:901:5: 901:9 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:901:5: 901:9 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:902:15: 902:19 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:902:5: 902:13 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:902:5: 902:13 (#0),
                    },
                ),
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:902:5: 902:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/read.rs:903:14: 903:26 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:903:5: 903:12 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:903:5: 903:12 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:903:5: 903:12 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#770),
                            ),
                        ),
                        pat_span: src/read.rs:905:9: 905:14 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:905:9: 905:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u16, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:905:22: 905:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:905:22: 905:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#770),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                src/read.rs:905:22: 905:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#770),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#770),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _5,
                                ),
                                src/read.rs:905:22: 905:46 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#770),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#770),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#770),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#770),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:5: 914:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:8: 911:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:20: 911:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:20: 911:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:35: 911:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:35: 911:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:911:47: 914:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:913:22: 913:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:913:28: 913:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:916:5: 972:6 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:916:5: 972:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:900:1: 973:2 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:9: 922:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:12: 917:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:12: 917:13 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:26: 917:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:26: 917:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:917:37: 922:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:920:13: 920:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:920:33: 920:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:920:33: 920:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:920:43: 920:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:921:23: 921:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:925:18: 925:19 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:925:13: 925:15 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:925:13: 925:15 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:927:9: 937:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:927:12: 927:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#771),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:927:17: 927:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:927:29: 927:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#771),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                src/read.rs:927:17: 927:34 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#771),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#771),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _38,
                                ),
                                src/read.rs:927:17: 927:34 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#771),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#771),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#771),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#771),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:928:13: 928:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:928:13: 928:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:929:16: 937:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:930:23: 930:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:931:17: 931:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:931:17: 931:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:932:17: 932:65 (#0),
                },
            ),
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:932:23: 932:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:932:17: 932:65 (#0),
                },
            ),
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:932:29: 932:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:934:17: 934:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:934:37: 934:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:934:37: 934:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:934:48: 934:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:935:20: 935:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:939:9: 953:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:939:12: 939:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:408:9: 411:10 (#772),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u8, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:939:17: 939:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:939:29: 939:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#772),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _61,
                                ),
                                src/read.rs:939:17: 939:34 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#772),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#772),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _61,
                                ),
                                src/read.rs:939:17: 939:34 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#772),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#772),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#772),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#772),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:940:13: 940:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:940:13: 940:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:941:16: 953:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:942:23: 942:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:943:17: 943:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:943:17: 943:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:944:17: 944:65 (#0),
                },
            ),
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:944:23: 944:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:944:17: 944:65 (#0),
                },
            ),
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:944:29: 944:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:946:17: 946:56 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:946:37: 946:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:946:37: 946:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:946:48: 946:55 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:951:17: 951:54 (#0),
                },
            ),
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:951:30: 951:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:951:17: 951:54 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:951:36: 951:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/read.rs:951:17: 951:54 (#0),
                },
            ),
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:951:46: 951:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/lib.rs:408:9: 411:10 (#773),
                            ),
                        ),
                        pat_span: src/read.rs:955:13: 955:15 (#0),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:955:13: 955:15 (#0),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<u16, error::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:955:23: 955:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:955:23: 955:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:13: 409:42 (#773),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _84,
                                ),
                                src/read.rs:955:23: 955:47 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:409:13: 409:42 (#773),
                    },
                ),
            ),
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:409:38: 409:41 (#773),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _84,
                                ),
                                src/read.rs:955:23: 955:47 (#0),
                            ),
                        ),
                        pat_span: src/lib.rs:410:13: 410:43 (#773),
                    },
                ),
            ),
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:39: 410:42 (#773),
            scope: scope[4],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:47: 410:84 (#773),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: error::Error,
        user_ty: None,
        source_info: SourceInfo {
            span: src/lib.rs:410:80: 410:83 (#773),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:9: 965:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:12: 957:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:12: 957:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:27: 957:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:27: 957:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:957:39: 965:10 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:958:13: 960:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:958:16: 958:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:958:25: 960:14 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} R/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:959:30: 959:34 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: error::ErrorCode,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:959:36: 959:78 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:961:13: 961:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:961:33: 961:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:961:33: 961:35 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:961:44: 961:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:963:17: 963:19 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                src/read.rs:969:17: 969:83 (#0),
                            ),
                        ),
                        pat_span: src/read.rs:969:13: 969:14 (#0),
                    },
                ),
            ),
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:13: 969:14 (#0),
            scope: scope[9],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:17: 969:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:18: 969:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:19: 969:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:20: 969:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:21: 969:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u16, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:20: 969:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:18: 969:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:18: 969:48 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:51: 969:71 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:51: 969:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u16,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:52: 969:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u16, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:51: 969:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (u32, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:969:17: 969:83 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:970:9: 970:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:970:29: 970:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut alloc::vec::Vec<u8, alloc::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:970:32: 970:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: src/read.rs:971:19: 971:21 (#0),
            scope: scope[0],
        },
    },
]