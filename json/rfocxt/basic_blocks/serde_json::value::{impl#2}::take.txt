[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            _2 = &mut (*_1),
            StorageLive(_3),
            _3 = value::Value::Null,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:862:9: 862:40 (#0),
                    scope: scope[0],
                },
                kind: _0 = core::mem::replace::<value::Value>(move _2, move _3) -> [return: bb1, unwind: bb2],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:863:6: 863:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:862:39: 862:40 (#0),
                    scope: scope[0],
                },
                kind: drop(_3) -> [return: bb3, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/value/mod.rs:861:5: 863:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:861:31: 861:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:861:17: 861:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/mod.rs:862:9: 862:40 (#0),
                },
            ),
        ),
        ty: &'{erased} mut value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:862:22: 862:26 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/value/mod.rs:862:9: 862:40 (#0),
                },
            ),
        ),
        ty: value::Value,
        user_ty: None,
        source_info: SourceInfo {
            span: src/value/mod.rs:862:28: 862:39 (#0),
            scope: scope[0],
        },
    },
]