[
    BasicBlockData {
        statements: [
            StorageLive(_4),
            _4 = &mut (*_2),
            StorageLive(_5),
            StorageLive(_6),
            StorageLive(_7),
            _7 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/ser.rs:1945:26: 1945:45 (#0),
                    scope: scope[0],
                },
                kind: _6 = core::str::<impl str>::as_bytes(move _7) -> [return: bb1, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = &(*_6),
            StorageDead(_7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/ser.rs:1945:9: 1945:46 (#0),
                    scope: scope[0],
                },
                kind: _0 = <W as std::io::Write>::write_all(move _4, move _5) -> [return: bb2, unwind: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
            StorageDead(_4),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/ser.rs:1946:6: 1946:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: src/ser.rs:1941:5: 1946:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::result::Result<(), std::io::Error>,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1941:76: 1941:90 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut Self/#0,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1941:30: 1941:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/ser.rs:1941:49: 1941:55 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/ser.rs:1941:41: 1941:47 (#0),
                            ),
                        ),
                        pat_span: src/ser.rs:1941:41: 1941:47 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} mut W/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1941:41: 1941:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            src/ser.rs:1941:67: 1941:71 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                src/ser.rs:1941:57: 1941:65 (#0),
                            ),
                        ),
                        pat_span: src/ser.rs:1941:57: 1941:65 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1941:57: 1941:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/ser.rs:1945:9: 1945:46 (#0),
                },
            ),
        ),
        ty: &'{erased} mut W/#1,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1945:9: 1945:15 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/ser.rs:1945:9: 1945:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1945:26: 1945:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/ser.rs:1945:9: 1945:46 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1945:26: 1945:45 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: src/ser.rs:1945:9: 1945:46 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: src/ser.rs:1945:26: 1945:34 (#0),
            scope: scope[0],
        },
    },
]