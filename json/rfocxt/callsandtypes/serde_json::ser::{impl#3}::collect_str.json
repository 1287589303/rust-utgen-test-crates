{"mod_name":"ser","calls":["core::fmt::rt::Argument::<'_>::new_display::<&T>","<F as ser::Formatter>::end_string::<W>","core::fmt::Arguments::<'_>::new_v1::<1, 1>","core::option::Option::<std::io::Error>::is_none","core::panicking::panic","core::result::Result::<","core::option::Option::<std::io::Error>::expect","error::Error::io","<F as ser::Formatter>::begin_string::<W>","<<&'a mut ser::Serializer<W, F> as serde::Serializer>::collect_str::Adapter<'_, W, F> as core::fmt::Write>::write_fmt"],"types":["[&str; 1]","error::Error","W","[core::fmt::rt::Argument<'_>; 1]","core::fmt::rt::Argument<'_>","<&'a mut ser::Serializer<W, F> as serde::Serializer>::collect_str::Adapter<'_, W, F>","!","core::fmt::Error","ser::Serializer<W, F>","core::fmt::Arguments<'_>","str","bool","core::result::Result<(), core::fmt::Error>","std::io::Error","core::option::Option<std::io::Error>","fn(std::io::Error) -> error::Error {error::Error::io}","T","F","core::result::Result<(), error::Error>","isize","()","core::result::Result<(), std::io::Error>"]}