bb0
  0: StorageLive(_2)
    SourceInfo(src/de.rs:160:13-160:19)
  1: StorageLive(_3)
    SourceInfo(src/de.rs:160:22-160:31)
  2: _3 = &(_1.0: R)
    SourceInfo(src/de.rs:160:22-160:31)
  Terminator {
      source_info: SourceInfo(src/de.rs:160:22-160:45)
      kind: _2 = <R as read::Read<'_>>::byte_offset(move _3) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_3)
    SourceInfo(src/de.rs:160:44-160:45)
  1: FakeRead(ForLet(None), _2)
    SourceInfo(src/de.rs:160:13-160:19)
  2: StorageLive(_4)
    SourceInfo(src/de.rs:162:17-162:21)
  3: _4 = move _1
    SourceInfo(src/de.rs:162:17-162:21)
  4: StorageLive(_5)
    SourceInfo(src/de.rs:163:13-163:19)
  5: _5 = _2
    SourceInfo(src/de.rs:163:13-163:19)
  6: StorageLive(_6)
    SourceInfo(src/de.rs:165:21-165:32)
  7: _6 = core::marker::PhantomData::<T>
    SourceInfo(src/de.rs:165:21-165:32)
  8: StorageLive(_7)
    SourceInfo(src/de.rs:166:23-166:34)
  9: _7 = core::marker::PhantomData::<&()>
    SourceInfo(src/de.rs:166:23-166:34)
  10: _0 = de::StreamDeserializer::<'_, R, T> { de: move _4, offset: move _5, failed: const false, output: move _6, lifetime: move _7 }
    SourceInfo(src/de.rs:161:9-167:10)
  11: StorageDead(_7)
    SourceInfo(src/de.rs:167:9-167:10)
  12: StorageDead(_6)
    SourceInfo(src/de.rs:167:9-167:10)
  13: StorageDead(_5)
    SourceInfo(src/de.rs:167:9-167:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:167:9-167:10)
      kind: drop(_4) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_4)
    SourceInfo(src/de.rs:167:9-167:10)
  1: StorageDead(_2)
    SourceInfo(src/de.rs:168:5-168:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:168:5-168:6)
      kind: drop(_1) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/de.rs:168:6-168:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/de.rs:168:5-168:6)
      kind: drop(_1) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb0, bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/de.rs:154:5-168:6)
      kind: resume
  }
  preds [bb2, bb4]
  succs []

