bb0
  0: StorageLive(_3)
    SourceInfo(src/value/ser.rs:142:32-142:52)
  1: StorageLive(_4)
    SourceInfo(src/value/ser.rs:142:46-142:51)
  2: _4 = _2
    SourceInfo(src/value/ser.rs:142:46-142:51)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:142:32-142:52)
      kind: _3 = <u64 as core::convert::TryFrom<u128>>::try_from(move _4) -> [return: bb1, unwind: bb11]
  }
  preds []
  succs [bb1, bb11]

bb1
  0: StorageDead(_4)
    SourceInfo(src/value/ser.rs:142:51-142:52)
  1: PlaceMention(_3)
    SourceInfo(src/value/ser.rs:142:32-142:52)
  2: _5 = discriminant(_3)
    SourceInfo(src/value/ser.rs:142:32-142:52)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:142:20-142:29)
      kind: switchInt(move _5) -> [0: bb2, otherwise: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:142:20-142:29)
      kind: falseEdge -> [real: bb3, imaginary: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  0: StorageLive(_6)
    SourceInfo(src/value/ser.rs:142:23-142:28)
  1: _6 = ((_3 as Ok).0: u64)
    SourceInfo(src/value/ser.rs:142:23-142:28)
  2: StorageLive(_7)
    SourceInfo(src/value/ser.rs:143:20-143:47)
  3: StorageLive(_8)
    SourceInfo(src/value/ser.rs:143:34-143:46)
  4: StorageLive(_9)
    SourceInfo(src/value/ser.rs:143:34-143:39)
  5: _9 = _6
    SourceInfo(src/value/ser.rs:143:34-143:39)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:143:34-143:46)
      kind: _8 = <u64 as core::convert::Into<number::Number>>::into(move _9) -> [return: bb4, unwind: bb11]
  }
  preds [bb2]
  succs [bb4, bb11]

bb4
  0: StorageDead(_9)
    SourceInfo(src/value/ser.rs:143:45-143:46)
  1: _7 = value::Value::Number(move _8)
    SourceInfo(src/value/ser.rs:143:20-143:47)
  2: StorageDead(_8)
    SourceInfo(src/value/ser.rs:143:46-143:47)
  3: _0 = core::result::Result::<value::Value, error::Error>::Ok(move _7)
    SourceInfo(src/value/ser.rs:143:17-143:48)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:143:47-143:48)
      kind: drop(_7) -> [return: bb5, unwind: bb11]
  }
  preds [bb3]
  succs [bb5, bb11]

bb5
  0: StorageDead(_7)
    SourceInfo(src/value/ser.rs:143:47-143:48)
  1: StorageDead(_6)
    SourceInfo(src/value/ser.rs:144:13-144:14)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:142:13-146:14)
      kind: goto -> bb9
  }
  preds [bb4]
  succs [bb9]

bb6
  0: StorageLive(_10)
    SourceInfo(src/value/ser.rs:145:21-145:69)
  1: StorageLive(_11)
    SourceInfo(src/value/ser.rs:145:35-145:62)
  2: _11 = error::ErrorCode::NumberOutOfRange
    SourceInfo(src/value/ser.rs:145:35-145:62)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:145:21-145:69)
      kind: _10 = error::Error::syntax(move _11, const 0_usize, const 0_usize) -> [return: bb7, unwind: bb10]
  }
  preds [bb1, bb2]
  succs [bb7, bb10]

bb7
  0: StorageDead(_11)
    SourceInfo(src/value/ser.rs:145:68-145:69)
  1: _0 = core::result::Result::<value::Value, error::Error>::Err(move _10)
    SourceInfo(src/value/ser.rs:145:17-145:70)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:145:69-145:70)
      kind: drop(_10) -> [return: bb8, unwind: bb11]
  }
  preds [bb6]
  succs [bb8, bb11]

bb8
  0: StorageDead(_10)
    SourceInfo(src/value/ser.rs:145:69-145:70)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:142:13-146:14)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(src/value/ser.rs:148:5-148:6)
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:148:6-148:6)
      kind: return
  }
  preds [bb5, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:145:68-145:69)
      kind: drop(_11) -> [return: bb11, unwind terminate(cleanup)]
  }
  preds [bb6]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/value/ser.rs:134:5-148:6)
      kind: resume
  }
  preds [bb0, bb3, bb4, bb7, bb10]
  succs []

