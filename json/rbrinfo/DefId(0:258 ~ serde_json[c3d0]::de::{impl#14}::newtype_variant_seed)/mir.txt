bb0
  0: StorageLive(_3)
    SourceInfo(src/de.rs:2070:9-2070:13)
  1: _3 = move _2
    SourceInfo(src/de.rs:2070:9-2070:13)
  2: StorageLive(_4)
    SourceInfo(src/de.rs:2070:26-2070:33)
  3: _4 = move (_1.0: &mut de::Deserializer<R>)
    SourceInfo(src/de.rs:2070:26-2070:33)
  Terminator {
      source_info: SourceInfo(src/de.rs:2070:9-2070:34)
      kind: _0 = <T as serde::de::DeserializeSeed<'_>>::deserialize::<&mut de::Deserializer<R>>(move _3, move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/de.rs:2070:33-2070:34)
  1: StorageDead(_3)
    SourceInfo(src/de.rs:2070:33-2070:34)
  Terminator {
      source_info: SourceInfo(src/de.rs:2071:5-2071:6)
      kind: drop(_2) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/de.rs:2071:6-2071:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/de.rs:2070:33-2070:34)
      kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/de.rs:2071:5-2071:6)
      kind: drop(_2) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/de.rs:2066:5-2071:6)
      kind: resume
  }
  preds [bb1, bb4]
  succs []

