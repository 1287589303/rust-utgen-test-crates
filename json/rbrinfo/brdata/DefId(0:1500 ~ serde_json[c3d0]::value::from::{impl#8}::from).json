{
  "name": "serde_json::value::from::{impl#8}::from",
  "mod_info": {
    "name": "value::from",
    "loc": "src/value/mod.rs:928:1:928:10"
  },
  "visible": true,
  "loc": "src/value/from.rs:181:5:183:6",
  "doc": "/// Convert a `Vec` to `Value::Array`.\n///\n/// # Examples\n///\n/// ```\n/// use serde_json::Value;\n///\n/// let v = vec![\"lorem\", \"ipsum\", \"dolor\"];\n/// let x: Value = v.into();\n/// ```\n",
  "code": [
    "fn from(f: Vec<T>) -> Self {",
    "    Value::Array(f.into_iter().map(Into::into).collect())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Value::Array(f.into_iter().map(Into::into).collect())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}