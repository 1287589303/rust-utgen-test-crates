{
  "name": "serde_json::value::de::{impl#2}::deserialize_any",
  "mod_info": {
    "name": "value::de",
    "loc": "src/value/mod.rs:927:1:927:8"
  },
  "visible": true,
  "loc": "src/value/de.rs:209:5:225:6",
  "doc": "",
  "code": [
    "fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>",
    "where",
    "    V: Visitor<'de>,",
    "{",
    "    let len = self.len();",
    "    let mut deserializer = MapDeserializer::new(self);",
    "    let map = tri!(visitor.visit_map(&mut deserializer));",
    "    let remaining = deserializer.iter.len();",
    "    if remaining == 0 {",
    "        Ok(map)",
    "    } else {",
    "        Err(serde::de::Error::invalid_length(",
    "            len,",
    "            &\"fewer elements in map\",",
    "        ))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "visitor.visit_map(&mut deserializer) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 215,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        21,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "visitor.visit_map(&mut deserializer) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 215,
          "bound": null
        },
        {
          "cond": "remaining == 0",
          "norm": "0 == remaining",
          "value": "false",
          "line": 217,
          "bound": null
        }
      ],
      "ret": "Ok(map)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        12,
        13,
        17,
        18,
        19,
        20,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "visitor.visit_map(&mut deserializer) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 215,
          "bound": null
        },
        {
          "cond": "remaining == 0",
          "norm": "0 == remaining",
          "value": "true",
          "line": 217,
          "bound": null
        }
      ],
      "ret": "Err(serde::de::Error::invalid_length(\n                len,\n                &\"fewer elements in map\",\n            ))",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}