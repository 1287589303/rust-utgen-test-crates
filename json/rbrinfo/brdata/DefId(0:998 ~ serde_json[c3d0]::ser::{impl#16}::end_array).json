{
  "name": "serde_json::ser::{impl#16}::end_array",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:1997:5:2009:6",
  "doc": "",
  "code": [
    "fn end_array<W>(&mut self, writer: &mut W) -> io::Result<()>",
    "where",
    "    W: ?Sized + io::Write,",
    "{",
    "    self.current_indent -= 1;",
    "",
    "    if self.has_value {",
    "        tri!(writer.write_all(b\"\\n\"));",
    "        tri!(indent(writer, self.current_indent, self.indent));",
    "    }",
    "",
    "    writer.write_all(b\"]\")",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 4
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.has_value",
          "norm": null,
          "value": "true",
          "line": 2003,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        8,
        22,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.has_value",
          "norm": null,
          "value": "true",
          "line": 2003,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        },
        {
          "cond": "indent(writer, self.current_indent, self.indent) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2005,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        13,
        15,
        20,
        21,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.has_value",
          "norm": null,
          "value": "true",
          "line": 2003,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        },
        {
          "cond": "indent(writer, self.current_indent, self.indent) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2005,
          "bound": null
        },
        {
          "cond": "writer.write_all(b\"\\n\") matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2004,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        12,
        14,
        16,
        18,
        19,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.has_value",
          "norm": null,
          "value": "false",
          "line": 2003,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        17,
        18,
        19,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}