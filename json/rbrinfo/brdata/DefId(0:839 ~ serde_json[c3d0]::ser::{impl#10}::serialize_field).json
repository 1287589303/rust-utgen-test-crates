{
  "name": "serde_json::ser::{impl#10}::serialize_field",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:736:5:747:6",
  "doc": "",
  "code": [
    "fn serialize_field<T>(&mut self, key: &'static str, value: &T) -> Result<()>",
    "where",
    "    T: ?Sized + Serialize,",
    "{",
    "    match *self {",
    "        Compound::Map { .. } => ser::SerializeStruct::serialize_field(self, key, value),",
    "        #[cfg(feature = \"arbitrary_precision\")]",
    "        Compound::Number { .. } => unreachable!(),",
    "        #[cfg(feature = \"raw_value\")]",
    "        Compound::RawValue { .. } => unreachable!(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}