{
  "name": "serde_json::ser::{impl#3}::serialize_f64",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:167:5:178:6",
  "doc": "",
  "code": [
    "fn serialize_f64(self, value: f64) -> Result<()> {",
    "    match value.classify() {",
    "        FpCategory::Nan | FpCategory::Infinite => self",
    "            .formatter",
    "            .write_null(&mut self.writer)",
    "            .map_err(Error::io),",
    "        _ => self",
    "            .formatter",
    "            .write_f64(&mut self.writer, value)",
    "            .map_err(Error::io),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "value.classify() matches FpCategory::Nan",
          "norm": null,
          "value": "false",
          "line": 169,
          "bound": null
        },
        {
          "cond": "value.classify() matches _",
          "norm": null,
          "value": "true",
          "line": 173,
          "bound": null
        },
        {
          "cond": "value.classify() matches FpCategory::Infinite",
          "norm": null,
          "value": "false",
          "line": 169,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        7,
        8,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "value.classify() matches FpCategory::Infinite",
          "norm": null,
          "value": "true",
          "line": 168,
          "bound": null
        },
        {
          "cond": "value.classify() matches FpCategory::Nan or FpCategory::Infinite",
          "norm": null,
          "value": "true",
          "line": 168,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        9
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "value.classify() matches FpCategory::Nan",
          "norm": null,
          "value": "true",
          "line": 168,
          "bound": null
        },
        {
          "cond": "value.classify() matches FpCategory::Nan or FpCategory::Infinite",
          "norm": null,
          "value": "true",
          "line": 168,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        3,
        4,
        5,
        6,
        9
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}