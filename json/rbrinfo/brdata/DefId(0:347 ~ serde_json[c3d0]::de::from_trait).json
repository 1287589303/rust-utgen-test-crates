{
  "name": "serde_json::de::from_trait",
  "mod_info": {
    "name": "de",
    "loc": "src/lib.rs:418:1:418:12"
  },
  "visible": false,
  "loc": "src/de.rs:2495:1:2506:2",
  "doc": "",
  "code": [
    "fn from_trait<'de, R, T>(read: R) -> Result<T>",
    "where",
    "    R: Read<'de>,",
    "    T: de::Deserialize<'de>,",
    "{",
    "    let mut de = Deserializer::new(read);",
    "    let value = tri!(de::Deserialize::deserialize(&mut de));",
    "",
    "    // Make sure the whole stream has been consumed.",
    "    tri!(de.end());",
    "    Ok(value)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "de::Deserialize::deserialize(&mut de) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2501,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        5,
        8,
        22,
        23,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "de::Deserialize::deserialize(&mut de) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2501,
          "bound": null
        },
        {
          "cond": "de.end() matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2504,
          "bound": null
        },
        {
          "cond": "de.end() matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2504,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        13,
        15,
        20,
        21,
        24,
        25,
        26
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "de::Deserialize::deserialize(&mut de) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2501,
          "bound": null
        },
        {
          "cond": "de.end() matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2504,
          "bound": null
        },
        {
          "cond": "de.end() matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2504,
          "bound": null
        },
        {
          "cond": "de.end() matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2504,
          "bound": null
        }
      ],
      "ret": "Ok(value)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        7,
        9,
        10,
        12,
        14,
        16,
        17,
        18,
        19,
        26
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}