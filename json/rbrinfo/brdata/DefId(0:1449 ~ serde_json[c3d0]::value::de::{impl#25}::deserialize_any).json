{
  "name": "serde_json::value::de::{impl#25}::deserialize_any",
  "mod_info": {
    "name": "value::de",
    "loc": "src/value/mod.rs:927:1:927:8"
  },
  "visible": true,
  "loc": "src/value/de.rs:1413:5:1424:6",
  "doc": "",
  "code": [
    "fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>",
    "where",
    "    V: de::Visitor<'de>,",
    "{",
    "    match self.value {",
    "        Cow::Borrowed(string) => visitor.visit_borrowed_str(string),",
    "        #[cfg(any(feature = \"std\", feature = \"alloc\"))]",
    "        Cow::Owned(string) => visitor.visit_string(string),",
    "        #[cfg(not(any(feature = \"std\", feature = \"alloc\")))]",
    "        Cow::Owned(_) => unreachable!(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.value matches Cow::Owned(string)",
          "norm": null,
          "value": "true",
          "line": 1417,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        6,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.value matches Cow::Borrowed(string)",
          "norm": null,
          "value": "true",
          "line": 1417,
          "bound": null
        },
        {
          "cond": "self.value matches Cow::Borrowed(string)",
          "norm": null,
          "value": "true",
          "line": 1417,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        4,
        5,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}