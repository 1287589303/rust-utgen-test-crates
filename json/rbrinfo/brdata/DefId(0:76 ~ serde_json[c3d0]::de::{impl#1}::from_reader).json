{
  "name": "serde_json::de::{impl#1}::from_reader",
  "mod_info": {
    "name": "de",
    "loc": "src/lib.rs:418:1:418:12"
  },
  "visible": true,
  "loc": "src/de.rs:82:5:84:6",
  "doc": "/// Creates a JSON deserializer from an `io::Read`.\n///\n/// Reader-based deserializers do not support deserializing borrowed types\n/// like `&str`, since the `std::io::Read` trait has no non-copying methods\n/// -- everything it does involves copying bytes out of the data source.\n",
  "code": [
    "pub fn from_reader(reader: R) -> Self {",
    "    Deserializer::new(read::IoRead::new(reader))",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}