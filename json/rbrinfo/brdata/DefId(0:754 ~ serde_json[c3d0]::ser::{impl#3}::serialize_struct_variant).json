{
  "name": "serde_json::ser::{impl#3}::serialize_struct_variant",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:381:5:406:6",
  "doc": "",
  "code": [
    "fn serialize_struct_variant(",
    "    self,",
    "    _name: &'static str,",
    "    _variant_index: u32,",
    "    variant: &'static str,",
    "    len: usize,",
    ") -> Result<Self::SerializeStructVariant> {",
    "    tri!(self",
    "        .formatter",
    "        .begin_object(&mut self.writer)",
    "        .map_err(Error::io));",
    "    tri!(self",
    "        .formatter",
    "        .begin_object_key(&mut self.writer, true)",
    "        .map_err(Error::io));",
    "    tri!(self.serialize_str(variant));",
    "    tri!(self",
    "        .formatter",
    "        .end_object_key(&mut self.writer)",
    "        .map_err(Error::io));",
    "    tri!(self",
    "        .formatter",
    "        .begin_object_value(&mut self.writer)",
    "        .map_err(Error::io));",
    "    self.serialize_map(Some(len))",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        49,
        50,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_key(&mut self.writer, true)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        13,
        15,
        47,
        48,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_key(&mut self.writer, true)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "self.serialize_str(variant) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 396,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        12,
        14,
        16,
        17,
        20,
        22,
        45,
        46,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_key(&mut self.writer, true)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "self.serialize_str(variant) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 396,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .end_object_key(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        12,
        14,
        16,
        17,
        19,
        21,
        23,
        24,
        25,
        28,
        30,
        43,
        44,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_key(&mut self.writer, true)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "self.serialize_str(variant) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 396,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .end_object_key(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_value(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        12,
        14,
        16,
        17,
        19,
        21,
        23,
        24,
        25,
        27,
        29,
        31,
        32,
        33,
        36,
        38,
        41,
        42,
        51
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self\n            .formatter\n            .begin_object(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 388,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_key(&mut self.writer, true)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 392,
          "bound": null
        },
        {
          "cond": "self.serialize_str(variant) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 396,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .end_object_key(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 397,
          "bound": null
        },
        {
          "cond": "self\n            .formatter\n            .begin_object_value(&mut self.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 401,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        12,
        14,
        16,
        17,
        19,
        21,
        23,
        24,
        25,
        27,
        29,
        31,
        32,
        33,
        35,
        37,
        39,
        40,
        51
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}