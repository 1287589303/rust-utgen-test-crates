{
  "name": "serde_json::value::de::visit_array_ref",
  "mod_info": {
    "name": "value::de",
    "loc": "src/value/mod.rs:927:1:927:8"
  },
  "visible": false,
  "loc": "src/value/de.rs:724:1:740:2",
  "doc": "",
  "code": [
    "fn visit_array_ref<'de, V>(array: &'de [Value], visitor: V) -> Result<V::Value, Error>",
    "where",
    "    V: Visitor<'de>,",
    "{",
    "    let len = array.len();",
    "    let mut deserializer = SeqRefDeserializer::new(array);",
    "    let seq = tri!(visitor.visit_seq(&mut deserializer));",
    "    let remaining = deserializer.iter.len();",
    "    if remaining == 0 {",
    "        Ok(seq)",
    "    } else {",
    "        Err(serde::de::Error::invalid_length(",
    "            len,",
    "            &\"fewer elements in array\",",
    "        ))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut deserializer) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 730,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        9,
        19,
        20,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut deserializer) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 730,
          "bound": null
        },
        {
          "cond": "remaining == 0",
          "norm": "0 == remaining",
          "value": "false",
          "line": 732,
          "bound": null
        }
      ],
      "ret": "Ok(seq)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        12,
        13,
        17,
        18,
        21
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "visitor.visit_seq(&mut deserializer) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 730,
          "bound": null
        },
        {
          "cond": "remaining == 0",
          "norm": "0 == remaining",
          "value": "true",
          "line": 732,
          "bound": null
        }
      ],
      "ret": "Err(serde::de::Error::invalid_length(\n            len,\n            &\"fewer elements in array\",\n        ))",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        8,
        10,
        11,
        14,
        15,
        16,
        17,
        18,
        21
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}