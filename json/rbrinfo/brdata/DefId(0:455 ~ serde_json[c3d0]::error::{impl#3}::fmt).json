{
  "name": "serde_json::error::{impl#3}::fmt",
  "mod_info": {
    "name": "error",
    "loc": "src/lib.rs:419:1:419:15"
  },
  "visible": true,
  "loc": "src/error.rs:350:5:386:6",
  "doc": "",
  "code": [
    "fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {",
    "    match self {",
    "        ErrorCode::Message(msg) => f.write_str(msg),",
    "        ErrorCode::Io(err) => Display::fmt(err, f),",
    "        ErrorCode::EofWhileParsingList => f.write_str(\"EOF while parsing a list\"),",
    "        ErrorCode::EofWhileParsingObject => f.write_str(\"EOF while parsing an object\"),",
    "        ErrorCode::EofWhileParsingString => f.write_str(\"EOF while parsing a string\"),",
    "        ErrorCode::EofWhileParsingValue => f.write_str(\"EOF while parsing a value\"),",
    "        ErrorCode::ExpectedColon => f.write_str(\"expected `:`\"),",
    "        ErrorCode::ExpectedListCommaOrEnd => f.write_str(\"expected `,` or `]`\"),",
    "        ErrorCode::ExpectedObjectCommaOrEnd => f.write_str(\"expected `,` or `}`\"),",
    "        ErrorCode::ExpectedSomeIdent => f.write_str(\"expected ident\"),",
    "        ErrorCode::ExpectedSomeValue => f.write_str(\"expected value\"),",
    "        ErrorCode::ExpectedDoubleQuote => f.write_str(\"expected `\\\"`\"),",
    "        ErrorCode::InvalidEscape => f.write_str(\"invalid escape\"),",
    "        ErrorCode::InvalidNumber => f.write_str(\"invalid number\"),",
    "        ErrorCode::NumberOutOfRange => f.write_str(\"number out of range\"),",
    "        ErrorCode::InvalidUnicodeCodePoint => f.write_str(\"invalid unicode code point\"),",
    "        ErrorCode::ControlCharacterWhileParsingString => {",
    "            f.write_str(\"control character (\\\\u0000-\\\\u001F) found while parsing a string\")",
    "        }",
    "        ErrorCode::KeyMustBeAString => f.write_str(\"key must be a string\"),",
    "        ErrorCode::ExpectedNumericKey => {",
    "            f.write_str(\"invalid value: expected key to be a number in quotes\")",
    "        }",
    "        ErrorCode::FloatKeyMustBeFinite => {",
    "            f.write_str(\"float key must be finite (got NaN or +/-inf)\")",
    "        }",
    "        ErrorCode::LoneLeadingSurrogateInHexEscape => {",
    "            f.write_str(\"lone leading surrogate in hex escape\")",
    "        }",
    "        ErrorCode::TrailingComma => f.write_str(\"trailing comma\"),",
    "        ErrorCode::TrailingCharacters => f.write_str(\"trailing characters\"),",
    "        ErrorCode::UnexpectedEndOfHexEscape => f.write_str(\"unexpected end of hex escape\"),",
    "        ErrorCode::RecursionLimitExceeded => f.write_str(\"recursion limit exceeded\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 25,
    "contra": 0,
    "min_set": 25
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches ErrorCode::RecursionLimitExceeded",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        26,
        75,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches ErrorCode::UnexpectedEndOfHexEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::UnexpectedEndOfHexEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        25,
        73,
        74,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self matches ErrorCode::TrailingCharacters",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::TrailingCharacters",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        24,
        71,
        72,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self matches ErrorCode::TrailingComma",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::TrailingComma",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        23,
        69,
        70,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "self matches ErrorCode::LoneLeadingSurrogateInHexEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::LoneLeadingSurrogateInHexEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        22,
        67,
        68,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "self matches ErrorCode::FloatKeyMustBeFinite",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::FloatKeyMustBeFinite",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        21,
        65,
        66,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedNumericKey",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedNumericKey",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        20,
        63,
        64,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "self matches ErrorCode::KeyMustBeAString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::KeyMustBeAString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        19,
        61,
        62,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "self matches ErrorCode::ControlCharacterWhileParsingString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ControlCharacterWhileParsingString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        18,
        59,
        60,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "self matches ErrorCode::InvalidUnicodeCodePoint",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::InvalidUnicodeCodePoint",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        17,
        57,
        58,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "self matches ErrorCode::NumberOutOfRange",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::NumberOutOfRange",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        16,
        55,
        56,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "self matches ErrorCode::InvalidNumber",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::InvalidNumber",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        15,
        53,
        54,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "self matches ErrorCode::InvalidEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::InvalidEscape",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        14,
        51,
        52,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedDoubleQuote",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedDoubleQuote",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        13,
        49,
        50,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedSomeValue",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedSomeValue",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        12,
        47,
        48,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedSomeIdent",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedSomeIdent",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        11,
        45,
        46,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedObjectCommaOrEnd",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedObjectCommaOrEnd",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        43,
        44,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedListCommaOrEnd",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedListCommaOrEnd",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        41,
        42,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "self matches ErrorCode::ExpectedColon",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::ExpectedColon",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        39,
        40,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "self matches ErrorCode::EofWhileParsingValue",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::EofWhileParsingValue",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        37,
        38,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "self matches ErrorCode::EofWhileParsingString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::EofWhileParsingString",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        35,
        36,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "self matches ErrorCode::EofWhileParsingObject",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::EofWhileParsingObject",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        33,
        34,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "self matches ErrorCode::EofWhileParsingList",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::EofWhileParsingList",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        31,
        32,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "self matches ErrorCode::Io(err)",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::Io(err)",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        29,
        30,
        76
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "self matches ErrorCode::Message(msg)",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        },
        {
          "cond": "self matches ErrorCode::Message(msg)",
          "norm": null,
          "value": "true",
          "line": 351,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        27,
        28,
        76
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}