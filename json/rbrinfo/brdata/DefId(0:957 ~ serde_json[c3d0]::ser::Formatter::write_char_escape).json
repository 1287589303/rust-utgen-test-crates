{
  "name": "serde_json::ser::Formatter::write_char_escape",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:1781:5:1811:6",
  "doc": "/// Writes a character escape code to the specified writer.\n",
  "code": [
    "fn write_char_escape<W>(&mut self, writer: &mut W, char_escape: CharEscape) -> io::Result<()>",
    "where",
    "    W: ?Sized + io::Write,",
    "{",
    "    use self::CharEscape::*;",
    "",
    "    let s = match char_escape {",
    "        Quote => b\"\\\\\\\"\",",
    "        ReverseSolidus => b\"\\\\\\\\\",",
    "        Solidus => b\"\\\\/\",",
    "        Backspace => b\"\\\\b\",",
    "        FormFeed => b\"\\\\f\",",
    "        LineFeed => b\"\\\\n\",",
    "        CarriageReturn => b\"\\\\r\",",
    "        Tab => b\"\\\\t\",",
    "        AsciiControl(byte) => {",
    "            static HEX_DIGITS: [u8; 16] = *b\"0123456789abcdef\";",
    "            let bytes = &[",
    "                b'\\\\',",
    "                b'u',",
    "                b'0',",
    "                b'0',",
    "                HEX_DIGITS[(byte >> 4) as usize],",
    "                HEX_DIGITS[(byte & 0xF) as usize],",
    "            ];",
    "            return writer.write_all(bytes);",
    "        }",
    "    };",
    "",
    "    writer.write_all(s)",
    "}"
  ],
  "size": {
    "chain": 9,
    "contra": 0,
    "min_set": 9
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "char_escape matches AsciiControl(byte)",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        10,
        19,
        20,
        21,
        22,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "char_escape matches Tab",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches Tab",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        9,
        18,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "char_escape matches CarriageReturn",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches CarriageReturn",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        8,
        17,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "char_escape matches LineFeed",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches LineFeed",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        16,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "char_escape matches FormFeed",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches FormFeed",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        15,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "char_escape matches Backspace",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches Backspace",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        14,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "char_escape matches Solidus",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches Solidus",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        13,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "char_escape matches ReverseSolidus",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches ReverseSolidus",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        12,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "char_escape matches Quote",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        },
        {
          "cond": "char_escape matches Quote",
          "norm": null,
          "value": "true",
          "line": 1787,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        11,
        23,
        24,
        25
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}