{
  "name": "serde_json::value::ser::{impl#7}::serialize_f32",
  "mod_info": {
    "name": "value::ser",
    "loc": "src/value/mod.rs:931:1:931:9"
  },
  "visible": true,
  "loc": "src/value/ser.rs:532:5:538:6",
  "doc": "",
  "code": [
    "fn serialize_f32(self, value: f32) -> Result<String> {",
    "    if value.is_finite() {",
    "        Ok(ryu::Buffer::new().format_finite(value).to_owned())",
    "    } else {",
    "        Err(float_key_must_be_finite())",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "value.is_finite()",
          "norm": null,
          "value": "true",
          "line": 533,
          "bound": null
        }
      ],
      "ret": "Ok(ryu::Buffer::new().format_finite(value).to_owned())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        10
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "value.is_finite()",
          "norm": null,
          "value": "false",
          "line": 533,
          "bound": null
        }
      ],
      "ret": "Err(float_key_must_be_finite())",
      "path": [
        0,
        1,
        7,
        8,
        9,
        10
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}