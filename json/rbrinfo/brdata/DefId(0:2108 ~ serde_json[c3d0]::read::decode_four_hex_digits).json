{
  "name": "serde_json::read::decode_four_hex_digits",
  "mod_info": {
    "name": "read",
    "loc": "src/lib.rs:434:1:434:10"
  },
  "visible": false,
  "loc": "src/read.rs:1075:1:1089:2",
  "doc": "",
  "code": [
    "fn decode_four_hex_digits(a: u8, b: u8, c: u8, d: u8) -> Option<u16> {",
    "    let a = HEX1[a as usize] as i32;",
    "    let b = HEX0[b as usize] as i32;",
    "    let c = HEX1[c as usize] as i32;",
    "    let d = HEX0[d as usize] as i32;",
    "",
    "    let codepoint = ((a | b) << 8) | c | d;",
    "",
    "    // A single sign bit check.",
    "    if codepoint >= 0 {",
    "        Some(codepoint as u16)",
    "    } else {",
    "        None",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "codepoint >= 0",
          "norm": "0 <= codepoint",
          "value": "true",
          "line": 1084,
          "bound": "codepoint == 0"
        }
      ],
      "ret": "Some(codepoint as u16)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        8
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "codepoint >= 0",
          "norm": "0 <= codepoint",
          "value": "false",
          "line": 1084,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}