{
  "name": "serde_json::read::{impl#1}::new",
  "mod_info": {
    "name": "read",
    "loc": "src/lib.rs:434:1:434:10"
  },
  "visible": true,
  "loc": "src/read.rs:200:5:207:6",
  "doc": "/// Create a JSON input source to read from a std::io input stream.\n///\n/// When reading from a source against which short reads are not efficient, such\n/// as a [`File`], you will want to apply your own buffering because serde_json\n/// will not buffer the input. See [`std::io::BufReader`].\n///\n/// [`File`]: std::fs::File\n",
  "code": [
    "pub fn new(reader: R) -> Self {",
    "    IoRead {",
    "        iter: LineColIterator::new(reader.bytes()),",
    "        ch: None,",
    "        #[cfg(feature = \"raw_value\")]",
    "        raw_buffer: None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "IoRead {\n            iter: LineColIterator::new(reader.bytes()),\n            ch: None,\n            #[cfg(feature = \"raw_value\")]\n            raw_buffer: None,\n        }",
      "path": [
        0,
        1,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}