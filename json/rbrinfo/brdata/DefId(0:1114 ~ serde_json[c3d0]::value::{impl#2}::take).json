{
  "name": "serde_json::value::{impl#2}::take",
  "mod_info": {
    "name": "value",
    "loc": "src/lib.rs:426:1:426:15"
  },
  "visible": true,
  "loc": "src/value/mod.rs:861:5:863:6",
  "doc": "/// Takes the value out of the `Value`, leaving a `Null` in its place.\n///\n/// ```\n/// # use serde_json::json;\n/// #\n/// let mut v = json!({ \"x\": \"y\" });\n/// assert_eq!(v[\"x\"].take(), json!(\"y\"));\n/// assert_eq!(v, json!({ \"x\": null }));\n/// ```\n",
  "code": [
    "pub fn take(&mut self) -> Value {",
    "    mem::replace(self, Value::Null)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}