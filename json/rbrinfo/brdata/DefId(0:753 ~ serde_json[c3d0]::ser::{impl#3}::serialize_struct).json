{
  "name": "serde_json::ser::{impl#3}::serialize_struct",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:370:5:378:6",
  "doc": "",
  "code": [
    "fn serialize_struct(self, name: &'static str, len: usize) -> Result<Self::SerializeStruct> {",
    "    match name {",
    "        #[cfg(feature = \"arbitrary_precision\")]",
    "        crate::number::TOKEN => Ok(Compound::Number { ser: self }),",
    "        #[cfg(feature = \"raw_value\")]",
    "        crate::raw::TOKEN => Ok(Compound::RawValue { ser: self }),",
    "        _ => self.serialize_map(Some(len)),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}