{
  "name": "serde_json::ser::Formatter::begin_object_key",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:1896:5:1905:6",
  "doc": "/// Called before every object key.\n",
  "code": [
    "fn begin_object_key<W>(&mut self, writer: &mut W, first: bool) -> io::Result<()>",
    "where",
    "    W: ?Sized + io::Write,",
    "{",
    "    if first {",
    "        Ok(())",
    "    } else {",
    "        writer.write_all(b\",\")",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "first",
          "norm": null,
          "value": "true",
          "line": 1900,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "first",
          "norm": null,
          "value": "false",
          "line": 1900,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}