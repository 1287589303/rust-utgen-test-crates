{
  "name": "serde_json::error::make_error",
  "mod_info": {
    "name": "error",
    "loc": "src/lib.rs:419:1:419:15"
  },
  "visible": false,
  "loc": "src/error.rs:483:1:492:2",
  "doc": "",
  "code": [
    "fn make_error(mut msg: String) -> Error {",
    "    let (line, column) = parse_line_col(&mut msg).unwrap_or((0, 0));",
    "    Error {",
    "        err: Box::new(ErrorImpl {",
    "            code: ErrorCode::Message(msg.into_boxed_str()),",
    "            line,",
    "            column,",
    "        }),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Error {\n        err: Box::new(ErrorImpl {\n            code: ErrorCode::Message(msg.into_boxed_str()),\n            line,\n            column,\n        }),\n    }",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}