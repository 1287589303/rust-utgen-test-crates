{
  "name": "serde_json::value::{impl#2}::as_number",
  "mod_info": {
    "name": "value",
    "loc": "src/lib.rs:426:1:426:15"
  },
  "visible": true,
  "loc": "src/value/mod.rs:533:5:538:6",
  "doc": "/// If the `Value` is a Number, returns the associated [`Number`]. Returns\n/// None otherwise.\n///\n/// ```\n/// # use serde_json::{json, Number};\n/// #\n/// let v = json!({ \"a\": 1, \"b\": 2.2, \"c\": -3, \"d\": \"4\" });\n///\n/// assert_eq!(v[\"a\"].as_number(), Some(&Number::from(1u64)));\n/// assert_eq!(v[\"b\"].as_number(), Some(&Number::from_f64(2.2).unwrap()));\n/// assert_eq!(v[\"c\"].as_number(), Some(&Number::from(-3i64)));\n///\n/// // The string `\"4\"` is not a number.\n/// assert_eq!(v[\"d\"].as_number(), None);\n/// ```\n",
  "code": [
    "pub fn as_number(&self) -> Option<&Number> {",
    "    match self {",
    "        Value::Number(number) => Some(number),",
    "        _ => None,",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self matches Value::Number(number)",
          "norm": null,
          "value": "false",
          "line": 535,
          "bound": null
        },
        {
          "cond": "self matches _",
          "norm": null,
          "value": "true",
          "line": 536,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        4
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self matches Value::Number(number)",
          "norm": null,
          "value": "true",
          "line": 534,
          "bound": null
        },
        {
          "cond": "self matches Value::Number(number)",
          "norm": null,
          "value": "true",
          "line": 534,
          "bound": null
        }
      ],
      "ret": "Some(number)",
      "path": [
        0,
        2,
        3,
        4
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}