{
  "name": "serde_json::de::{impl#21}::next",
  "mod_info": {
    "name": "de",
    "loc": "src/lib.rs:418:1:418:12"
  },
  "visible": true,
  "loc": "src/de.rs:2439:5:2483:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<Result<T>> {",
    "    if R::should_early_return_if_failed && self.failed {",
    "        return None;",
    "    }",
    "",
    "    // skip whitespaces, if any",
    "    // this helps with trailing whitespaces, since whitespaces between",
    "    // values are handled for us.",
    "    match self.de.parse_whitespace() {",
    "        Ok(None) => {",
    "            self.offset = self.de.read.byte_offset();",
    "            None",
    "        }",
    "        Ok(Some(b)) => {",
    "            // If the value does not have a clear way to show the end of the value",
    "            // (like numbers, null, true etc.) we have to look for whitespace or",
    "            // the beginning of a self-delineated value.",
    "            let self_delineated_value = match b {",
    "                b'[' | b'\"' | b'{' => true,",
    "                _ => false,",
    "            };",
    "            self.offset = self.de.read.byte_offset();",
    "            let result = de::Deserialize::deserialize(&mut self.de);",
    "",
    "            Some(match result {",
    "                Ok(value) => {",
    "                    self.offset = self.de.read.byte_offset();",
    "                    if self_delineated_value {",
    "                        Ok(value)",
    "                    } else {",
    "                        self.peek_end_of_value().map(|()| value)",
    "                    }",
    "                }",
    "                Err(e) => {",
    "                    self.de.read.set_failed(&mut self.failed);",
    "                    Err(e)",
    "                }",
    "            })",
    "        }",
    "        Err(e) => {",
    "            self.de.read.set_failed(&mut self.failed);",
    "            Some(Err(e))",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 29,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        2,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        }
      ],
      "ret": "Some(Err(e))",
      "path": [
        0,
        1,
        3,
        4,
        9,
        37,
        38,
        39,
        40,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 12,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 13,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 14,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        1,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 15,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "true",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        4,
        6,
        7,
        10,
        11,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 16,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        }
      ],
      "ret": "Some(Err(e))",
      "path": [
        0,
        3,
        4,
        9,
        37,
        38,
        39,
        40,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 17,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 18,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 19,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches _",
          "norm": null,
          "value": "true",
          "line": 2458,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        13,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 20,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 21,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 22,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'{'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 23,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 24,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 25,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 26,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        21,
        31,
        32,
        33,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 27,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "true",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        24,
        25,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 28,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Err(e)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "b matches b'['",
          "norm": null,
          "value": "true",
          "line": 2457,
          "bound": null
        },
        {
          "cond": "b matches b'[' or b'\"' or b'{'",
          "norm": null,
          "value": "true",
          "line": 2456,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "result matches Ok(value)",
          "norm": null,
          "value": "true",
          "line": 2463,
          "bound": null
        },
        {
          "cond": "self_delineated_value",
          "norm": null,
          "value": "false",
          "line": 2466,
          "bound": null
        }
      ],
      "ret": "Some(match result {\n                    Ok(value) => {\n                        self.offset = self.de.read.byte_offset();\n                        if self_delineated_value {\n                            Ok(value)\n                        } else {\n                            self.peek_end_of_value().map(|()| value)\n                        }\n                    }\n                    Err(e) => {\n                        self.de.read.set_failed(&mut self.failed);\n                        Err(e)\n                    }\n                })",
      "path": [
        0,
        3,
        4,
        6,
        8,
        12,
        14,
        15,
        16,
        17,
        18,
        20,
        22,
        23,
        26,
        27,
        28,
        29,
        30,
        34,
        35,
        36,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 29,
      "conds": [
        {
          "cond": "R::should_early_return_if_failed",
          "norm": null,
          "value": "false",
          "line": 2440,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None) or Ok(Some(b))",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        },
        {
          "cond": "self.de.parse_whitespace() matches Ok(None)",
          "norm": null,
          "value": "true",
          "line": 2447,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        3,
        4,
        6,
        7,
        10,
        11,
        41,
        42,
        43
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}