{
  "name": "serde_json::iter::{impl#1}::next",
  "mod_info": {
    "name": "iter",
    "loc": "src/lib.rs:430:1:430:10"
  },
  "visible": true,
  "loc": "src/iter.rs:54:5:69:6",
  "doc": "",
  "code": [
    "fn next(&mut self) -> Option<io::Result<u8>> {",
    "    match self.iter.next() {",
    "        None => None,",
    "        Some(Ok(b'\\n')) => {",
    "            self.start_of_line += self.col + 1;",
    "            self.line += 1;",
    "            self.col = 0;",
    "            Some(Ok(b'\\n'))",
    "        }",
    "        Some(Ok(c)) => {",
    "            self.col += 1;",
    "            Some(Ok(c))",
    "        }",
    "        Some(Err(e)) => Some(Err(e)),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.iter.next() matches Some(Ok(c)) or Some(Ok(b'\\n')) or Some(Err(e))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(c)) or Some(Ok(b'\\n')) or Some(Err(e))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        }
      ],
      "ret": "Some(Err(e))",
      "path": [
        0,
        1,
        4,
        8,
        18,
        19,
        20,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.iter.next() matches Some(Ok(c)) or Some(Ok(b'\\n')) or Some(Err(e))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "false",
          "line": 56,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(c))",
          "norm": null,
          "value": "false",
          "line": 63,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(b'\\n'))",
          "norm": null,
          "value": "false",
          "line": 57,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Err(e))",
          "norm": null,
          "value": "false",
          "line": 67,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(c))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        }
      ],
      "ret": "Some(Ok(c))",
      "path": [
        0,
        1,
        4,
        5,
        6,
        15,
        16,
        17,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.iter.next() matches Some(Ok(c)) or Some(Ok(b'\\n')) or Some(Err(e))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches ",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(b'\\n'))",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        }
      ],
      "ret": "Some(Ok(b'\\n'))",
      "path": [
        0,
        1,
        4,
        5,
        7,
        10,
        11,
        12,
        13,
        14,
        21,
        22
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 55,
          "bound": null
        }
      ],
      "ret": "None",
      "path": [
        0,
        1,
        3,
        9,
        21,
        22
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}