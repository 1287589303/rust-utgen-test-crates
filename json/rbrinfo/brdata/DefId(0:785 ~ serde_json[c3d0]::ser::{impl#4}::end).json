{
  "name": "serde_json::ser::{impl#4}::end",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:513:5:524:6",
  "doc": "",
  "code": [
    "fn end(self) -> Result<()> {",
    "    match self {",
    "        Compound::Map { ser, state } => match state {",
    "            State::Empty => Ok(()),",
    "            _ => ser.formatter.end_array(&mut ser.writer).map_err(Error::io),",
    "        },",
    "        #[cfg(feature = \"arbitrary_precision\")]",
    "        Compound::Number { .. } => unreachable!(),",
    "        #[cfg(feature = \"raw_value\")]",
    "        Compound::RawValue { .. } => unreachable!(),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 2,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "state matches _",
          "norm": null,
          "value": "true",
          "line": 517,
          "bound": null
        },
        {
          "cond": "state matches State::Empty",
          "norm": null,
          "value": "false",
          "line": 516,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "state matches State::Empty",
          "norm": null,
          "value": "true",
          "line": 515,
          "bound": null
        },
        {
          "cond": "state matches State::Empty",
          "norm": null,
          "value": "true",
          "line": 515,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        2,
        3,
        6
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}