{
  "name": "serde_json::ser::format_escaped_str_contents",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": false,
  "loc": "src/ser.rs:2091:1:2125:2",
  "doc": "",
  "code": [
    "fn format_escaped_str_contents<W, F>(",
    "    writer: &mut W,",
    "    formatter: &mut F,",
    "    value: &str,",
    ") -> io::Result<()>",
    "where",
    "    W: ?Sized + io::Write,",
    "    F: ?Sized + Formatter,",
    "{",
    "    let bytes = value.as_bytes();",
    "",
    "    let mut start = 0;",
    "",
    "    for (i, &byte) in bytes.iter().enumerate() {",
    "        let escape = ESCAPE[byte as usize];",
    "        if escape == 0 {",
    "            continue;",
    "        }",
    "",
    "        if start < i {",
    "            tri!(formatter.write_string_fragment(writer, &value[start..i]));",
    "        }",
    "",
    "        let char_escape = CharEscape::from_escape_table(escape, byte);",
    "        tri!(formatter.write_char_escape(writer, char_escape));",
    "",
    "        start = i + 1;",
    "    }",
    "",
    "    if start == bytes.len() {",
    "        return Ok(());",
    "    }",
    "",
    "    formatter.write_string_fragment(writer, &value[start..])",
    "}"
  ],
  "size": {
    "chain": 11,
    "contra": 6,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "false",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "true",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        5,
        6,
        7,
        9,
        11,
        35,
        36,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "false",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "false",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        13,
        5,
        6,
        7,
        9,
        11,
        35,
        37,
        38,
        39,
        46
      ],
      "may_contra": true,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "true",
          "line": 2110,
          "bound": null
        },
        {
          "cond": "formatter.write_string_fragment(writer, &value[start..i]) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2111,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        15,
        17,
        18,
        21,
        23,
        42,
        43,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "true",
          "line": 2110,
          "bound": null
        },
        {
          "cond": "formatter.write_string_fragment(writer, &value[start..i]) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2111,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        15,
        17,
        18,
        20,
        22,
        24,
        25,
        26,
        27,
        30,
        32,
        40,
        41,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "true",
          "line": 2110,
          "bound": null
        },
        {
          "cond": "formatter.write_string_fragment(writer, &value[start..i]) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2111,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "true",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        15,
        17,
        18,
        20,
        22,
        24,
        25,
        26,
        27,
        29,
        31,
        33,
        34,
        5,
        6,
        7,
        9,
        11,
        35,
        36,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "true",
          "line": 2110,
          "bound": null
        },
        {
          "cond": "formatter.write_string_fragment(writer, &value[start..i]) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2111,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "false",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        15,
        17,
        18,
        20,
        22,
        24,
        25,
        26,
        27,
        29,
        31,
        33,
        34,
        5,
        6,
        7,
        9,
        11,
        35,
        37,
        38,
        39,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "false",
          "line": 2110,
          "bound": "start == i"
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        16,
        25,
        26,
        27,
        30,
        32,
        40,
        41,
        44,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 8,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "false",
          "line": 2110,
          "bound": "start == i"
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "true",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        16,
        25,
        26,
        27,
        29,
        31,
        33,
        34,
        5,
        6,
        7,
        9,
        11,
        35,
        36,
        45,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 9,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "true",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "escape == 0",
          "norm": "0 == escape",
          "value": "true",
          "line": 2106,
          "bound": null
        },
        {
          "cond": "start < i",
          "norm": "i > start",
          "value": "false",
          "line": 2110,
          "bound": "start == i"
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "formatter.write_char_escape(writer, char_escape) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2115,
          "bound": null
        },
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "false",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        10,
        12,
        14,
        16,
        25,
        26,
        27,
        29,
        31,
        33,
        34,
        5,
        6,
        7,
        9,
        11,
        35,
        37,
        38,
        39,
        46
      ],
      "may_contra": true,
      "min_set": false
    },
    {
      "id": 10,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "true",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": "Ok(())",
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        35,
        36,
        45,
        46
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 11,
      "conds": [
        {
          "cond": "(i, &byte) in bytes.iter().enumerate()",
          "norm": null,
          "value": "false",
          "line": 2104,
          "bound": null
        },
        {
          "cond": "start == bytes.len()",
          "norm": "bytes.len() == start",
          "value": "false",
          "line": 2120,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        9,
        11,
        35,
        37,
        38,
        39,
        46
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}