{
  "name": "serde_json::read::{impl#4}::peek",
  "mod_info": {
    "name": "read",
    "loc": "src/lib.rs:434:1:434:10"
  },
  "visible": true,
  "loc": "src/read.rs:286:5:298:6",
  "doc": "",
  "code": [
    "fn peek(&mut self) -> Result<Option<u8>> {",
    "    match self.ch {",
    "        Some(ch) => Ok(Some(ch)),",
    "        None => match self.iter.next() {",
    "            Some(Err(err)) => Err(Error::io(err)),",
    "            Some(Ok(ch)) => {",
    "                self.ch = Some(ch);",
    "                Ok(self.ch)",
    "            }",
    "            None => Ok(None),",
    "        },",
    "    }",
    "}"
  ],
  "size": {
    "chain": 4,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.ch matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.ch matches Some(ch)",
          "norm": null,
          "value": "true",
          "line": 287,
          "bound": null
        }
      ],
      "ret": "Ok(Some(ch))",
      "path": [
        0,
        2,
        4,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.ch matches None",
          "norm": null,
          "value": "true",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(ch)) or Some(Err(err))",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(ch)) or Some(Err(err))",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Err(err))",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        }
      ],
      "ret": "Err(Error::io(err))",
      "path": [
        0,
        3,
        5,
        7,
        8,
        11,
        12,
        13,
        14,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.ch matches None",
          "norm": null,
          "value": "true",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(ch)) or Some(Err(err))",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches Some(Ok(ch))",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        }
      ],
      "ret": "Ok(self.ch)",
      "path": [
        0,
        3,
        5,
        7,
        9,
        15,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "self.ch matches None",
          "norm": null,
          "value": "true",
          "line": 287,
          "bound": null
        },
        {
          "cond": "self.iter.next() matches None",
          "norm": null,
          "value": "true",
          "line": 289,
          "bound": null
        }
      ],
      "ret": "Ok(None)",
      "path": [
        0,
        3,
        5,
        10,
        16,
        17,
        18
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}