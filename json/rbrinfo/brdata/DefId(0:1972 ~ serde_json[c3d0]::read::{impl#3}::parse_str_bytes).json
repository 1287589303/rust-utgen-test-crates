{
  "name": "serde_json::read::{impl#3}::parse_str_bytes",
  "mod_info": {
    "name": "read",
    "loc": "src/lib.rs:434:1:434:10"
  },
  "visible": false,
  "loc": "src/read.rs:218:5:249:6",
  "doc": "",
  "code": [
    "fn parse_str_bytes<'s, T, F>(",
    "    &'s mut self,",
    "    scratch: &'s mut Vec<u8>,",
    "    validate: bool,",
    "    result: F,",
    ") -> Result<T>",
    "where",
    "    T: 's,",
    "    F: FnOnce(&'s Self, &'s [u8]) -> Result<T>,",
    "{",
    "    loop {",
    "        let ch = tri!(next_or_eof(self));",
    "        if !is_escape(ch, true) {",
    "            scratch.push(ch);",
    "            continue;",
    "        }",
    "        match ch {",
    "            b'\"' => {",
    "                return result(self, scratch);",
    "            }",
    "            b'\\\\' => {",
    "                tri!(parse_escape(self, validate, scratch));",
    "            }",
    "            _ => {",
    "                if validate {",
    "                    return error(self, ErrorCode::ControlCharacterWhileParsingString);",
    "                }",
    "                scratch.push(ch);",
    "            }",
    "        }",
    "    }",
    "}"
  ],
  "size": {
    "chain": 7,
    "contra": 0,
    "min_set": 5
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        8,
        35,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 238,
          "bound": null
        },
        {
          "cond": "ch matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 235,
          "bound": null
        },
        {
          "cond": "ch matches _",
          "norm": null,
          "value": "true",
          "line": 241,
          "bound": null
        },
        {
          "cond": "validate",
          "norm": null,
          "value": "true",
          "line": 242,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        14,
        28,
        29,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 238,
          "bound": null
        },
        {
          "cond": "ch matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 235,
          "bound": null
        },
        {
          "cond": "ch matches _",
          "norm": null,
          "value": "true",
          "line": 241,
          "bound": null
        },
        {
          "cond": "validate",
          "norm": null,
          "value": "false",
          "line": 242,
          "bound": null
        },
        {
          "cond": "next_or_eof(self) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        14,
        30,
        31,
        32,
        1,
        2,
        3,
        6,
        8,
        35,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 238,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 234,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        16,
        20,
        21,
        24,
        26,
        33,
        34,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 238,
          "bound": null
        },
        {
          "cond": "ch matches b'\\\\'",
          "norm": null,
          "value": "true",
          "line": 234,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "next_or_eof(self) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        16,
        20,
        21,
        23,
        25,
        27,
        32,
        1,
        2,
        3,
        6,
        8,
        35,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "true",
          "line": 230,
          "bound": null
        },
        {
          "cond": "ch matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 235,
          "bound": null
        },
        {
          "cond": "ch matches b'\"'",
          "norm": null,
          "value": "true",
          "line": 234,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        11,
        15,
        17,
        18,
        19,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 7,
      "conds": [
        {
          "cond": "next_or_eof(self) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        },
        {
          "cond": "parse_escape(self, validate, scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 239,
          "bound": null
        },
        {
          "cond": "is_escape(ch, true)",
          "norm": null,
          "value": "false",
          "line": 230,
          "bound": null
        },
        {
          "cond": "next_or_eof(self) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 229,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        9,
        10,
        12,
        13,
        1,
        2,
        3,
        6,
        8,
        35,
        36,
        37,
        38
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}