{
  "name": "serde_json::value::from::{impl#0}::from",
  "mod_info": {
    "name": "value::from",
    "loc": "src/value/mod.rs:928:1:928:10"
  },
  "visible": true,
  "loc": "src/value/from.rs:42:5:44:6",
  "doc": "/// Convert 32-bit floating point number to `Value::Number`, or\n/// `Value::Null` if infinite or NaN.\n///\n/// # Examples\n///\n/// ```\n/// use serde_json::Value;\n///\n/// let f: f32 = 13.37;\n/// let x: Value = f.into();\n/// ```\n",
  "code": [
    "fn from(f: f32) -> Self {",
    "    Number::from_f32(f).map_or(Value::Null, Value::Number)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}