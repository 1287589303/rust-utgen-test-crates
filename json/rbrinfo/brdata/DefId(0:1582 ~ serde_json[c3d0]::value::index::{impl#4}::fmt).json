{
  "name": "serde_json::value::index::{impl#4}::fmt",
  "mod_info": {
    "name": "value::index",
    "loc": "src/value/mod.rs:929:1:929:11"
  },
  "visible": true,
  "loc": "src/value/index.rs:147:5:156:6",
  "doc": "",
  "code": [
    "fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {",
    "    match *self.0 {",
    "        Value::Null => formatter.write_str(\"null\"),",
    "        Value::Bool(_) => formatter.write_str(\"boolean\"),",
    "        Value::Number(_) => formatter.write_str(\"number\"),",
    "        Value::String(_) => formatter.write_str(\"string\"),",
    "        Value::Array(_) => formatter.write_str(\"array\"),",
    "        Value::Object(_) => formatter.write_str(\"object\"),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 6,
    "contra": 0,
    "min_set": 6
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "*self.0 matches Value::Object(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        7,
        18,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "*self.0 matches Value::Array(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        },
        {
          "cond": "*self.0 matches Value::Array(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        6,
        16,
        17,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "*self.0 matches Value::String(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        },
        {
          "cond": "*self.0 matches Value::String(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        5,
        14,
        15,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 4,
      "conds": [
        {
          "cond": "*self.0 matches Value::Number(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        },
        {
          "cond": "*self.0 matches Value::Number(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        4,
        12,
        13,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 5,
      "conds": [
        {
          "cond": "*self.0 matches Value::Bool(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        },
        {
          "cond": "*self.0 matches Value::Bool(_)",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        3,
        10,
        11,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 6,
      "conds": [
        {
          "cond": "*self.0 matches Value::Null",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        },
        {
          "cond": "*self.0 matches Value::Null",
          "norm": null,
          "value": "true",
          "line": 148,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        2,
        8,
        9,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}