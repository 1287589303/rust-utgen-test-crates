{
  "name": "serde_json::map::{impl#0}::contains_key",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:420:1:420:13"
  },
  "visible": true,
  "loc": "src/map.rs:86:5:92:6",
  "doc": "/// Returns true if the map contains a value for the specified key.\n///\n/// The key may be any borrowed form of the map's key type, but the ordering\n/// on the borrowed form *must* match the ordering on the key type.\n",
  "code": [
    "pub fn contains_key<Q>(&self, key: &Q) -> bool",
    "where",
    "    String: Borrow<Q>,",
    "    Q: ?Sized + Ord + Eq + Hash,",
    "{",
    "    self.map.contains_key(key)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}