{
  "name": "serde_json::map::{impl#0}::insert",
  "mod_info": {
    "name": "map",
    "loc": "src/lib.rs:420:1:420:13"
  },
  "visible": true,
  "loc": "src/map.rs:127:5:129:6",
  "doc": "/// Inserts a key-value pair into the map.\n///\n/// If the map did not have this key present, `None` is returned.\n///\n/// If the map did have this key present, the value is updated, and the old\n/// value is returned.\n",
  "code": [
    "pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {",
    "    self.map.insert(k, v)",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}