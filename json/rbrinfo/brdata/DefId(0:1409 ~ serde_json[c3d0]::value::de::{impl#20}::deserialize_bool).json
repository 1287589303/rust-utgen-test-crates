{
  "name": "serde_json::value::de::{impl#20}::deserialize_bool",
  "mod_info": {
    "name": "value::de",
    "loc": "src/value/mod.rs:927:1:927:8"
  },
  "visible": true,
  "loc": "src/value/de.rs:1265:5:1279:6",
  "doc": "",
  "code": [
    "fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Error>",
    "where",
    "    V: Visitor<'de>,",
    "{",
    "    if self.key == \"true\" {",
    "        visitor.visit_bool(true)",
    "    } else if self.key == \"false\" {",
    "        visitor.visit_bool(false)",
    "    } else {",
    "        Err(serde::de::Error::invalid_type(",
    "            Unexpected::Str(&self.key),",
    "            &visitor,",
    "        ))",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 3
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.key == \"true\"",
          "norm": "\"true\" == self.key",
          "value": "true",
          "line": 1269,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.key == \"true\"",
          "norm": "\"true\" == self.key",
          "value": "false",
          "line": 1269,
          "bound": null
        },
        {
          "cond": "self.key == \"false\"",
          "norm": "\"false\" == self.key",
          "value": "true",
          "line": 1271,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        4,
        5,
        6,
        7,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.key == \"true\"",
          "norm": "\"true\" == self.key",
          "value": "false",
          "line": 1269,
          "bound": null
        },
        {
          "cond": "self.key == \"false\"",
          "norm": "\"false\" == self.key",
          "value": "false",
          "line": 1271,
          "bound": null
        }
      ],
      "ret": "Err(serde::de::Error::invalid_type(\n                Unexpected::Str(&self.key),\n                &visitor,\n            ))",
      "path": [
        0,
        1,
        4,
        5,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}