{
  "name": "serde_json::de::{impl#19}::deserialize_any",
  "mod_info": {
    "name": "de",
    "loc": "src/lib.rs:418:1:418:12"
  },
  "visible": true,
  "loc": "src/de.rs:2203:5:2213:6",
  "doc": "",
  "code": [
    "fn deserialize_any<V>(self, visitor: V) -> Result<V::Value>",
    "where",
    "    V: de::Visitor<'de>,",
    "{",
    "    self.de.eat_char();",
    "    self.de.scratch.clear();",
    "    match tri!(self.de.read.parse_str(&mut self.de.scratch)) {",
    "        Reference::Borrowed(s) => visitor.visit_borrowed_str(s),",
    "        Reference::Copied(s) => visitor.visit_str(s),",
    "    }",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self.de.read.parse_str(&mut self.de.scratch) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2209,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        3,
        6,
        8,
        17,
        18,
        19
      ],
      "may_contra": false,
      "min_set": false
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self.de.read.parse_str(&mut self.de.scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2209,
          "bound": null
        },
        {
          "cond": "self.de.read.parse_str(&mut self.de.scratch) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 2209,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        11,
        14,
        15,
        16,
        19
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self.de.read.parse_str(&mut self.de.scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2209,
          "bound": null
        },
        {
          "cond": "self.de.read.parse_str(&mut self.de.scratch) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 2209,
          "bound": null
        },
        {
          "cond": "match $e {\n            core::result::Result::Ok(val) => val,\n            core::result::Result::Err(err) => return core::result::Result::Err(err),\n        } matches Reference::Borrowed(s)",
          "norm": null,
          "value": "true",
          "line": 408,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        3,
        5,
        7,
        10,
        12,
        13,
        15,
        16,
        19
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}