{
  "name": "serde_json::ser::{impl#11}::serialize_u16",
  "mod_info": {
    "name": "ser",
    "loc": "src/lib.rs:423:1:423:13"
  },
  "visible": true,
  "loc": "src/ser.rs:951:5:966:6",
  "doc": "",
  "code": [
    "fn serialize_u16(self, value: u16) -> Result<()> {",
    "    tri!(self",
    "        .ser",
    "        .formatter",
    "        .begin_string(&mut self.ser.writer)",
    "        .map_err(Error::io));",
    "    tri!(self",
    "        .ser",
    "        .formatter",
    "        .write_u16(&mut self.ser.writer, value)",
    "        .map_err(Error::io));",
    "    self.ser",
    "        .formatter",
    "        .end_string(&mut self.ser.writer)",
    "        .map_err(Error::io)",
    "}"
  ],
  "size": {
    "chain": 3,
    "contra": 0,
    "min_set": 2
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [
        {
          "cond": "self\n            .ser\n            .formatter\n            .begin_string(&mut self.ser.writer)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 952,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        5,
        7,
        21,
        22,
        23
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 2,
      "conds": [
        {
          "cond": "self\n            .ser\n            .formatter\n            .begin_string(&mut self.ser.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 952,
          "bound": null
        },
        {
          "cond": "self\n            .ser\n            .formatter\n            .write_u16(&mut self.ser.writer, value)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        },
        {
          "cond": "self\n            .ser\n            .formatter\n            .write_u16(&mut self.ser.writer, value)\n            .map_err(Error::io) matches core::result::Result::Err(err)",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        }
      ],
      "ret": "core::result::Result::Err(err)",
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        13,
        15,
        19,
        20,
        23
      ],
      "may_contra": false,
      "min_set": true
    },
    {
      "id": 3,
      "conds": [
        {
          "cond": "self\n            .ser\n            .formatter\n            .begin_string(&mut self.ser.writer)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 952,
          "bound": null
        },
        {
          "cond": "self\n            .ser\n            .formatter\n            .write_u16(&mut self.ser.writer, value)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        },
        {
          "cond": "self\n            .ser\n            .formatter\n            .write_u16(&mut self.ser.writer, value)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        },
        {
          "cond": "self\n            .ser\n            .formatter\n            .write_u16(&mut self.ser.writer, value)\n            .map_err(Error::io) matches core::result::Result::Ok(val)",
          "norm": null,
          "value": "true",
          "line": 957,
          "bound": null
        }
      ],
      "ret": null,
      "path": [
        0,
        1,
        2,
        4,
        6,
        8,
        9,
        10,
        12,
        14,
        16,
        17,
        18,
        23
      ],
      "may_contra": false,
      "min_set": false
    }
  ]
}