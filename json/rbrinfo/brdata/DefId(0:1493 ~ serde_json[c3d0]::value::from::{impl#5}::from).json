{
  "name": "serde_json::value::from::{impl#5}::from",
  "mod_info": {
    "name": "value::from",
    "loc": "src/value/mod.rs:928:1:928:10"
  },
  "visible": true,
  "loc": "src/value/from.rs:132:5:134:6",
  "doc": "/// Convert copy-on-write string to `Value::String`.\n///\n/// # Examples\n///\n/// ```\n/// use serde_json::Value;\n/// use std::borrow::Cow;\n///\n/// let s: Cow<str> = Cow::Borrowed(\"lorem\");\n/// let x: Value = s.into();\n/// ```\n///\n/// ```\n/// use serde_json::Value;\n/// use std::borrow::Cow;\n///\n/// let s: Cow<str> = Cow::Owned(\"lorem\".to_owned());\n/// let x: Value = s.into();\n/// ```\n",
  "code": [
    "fn from(f: Cow<'a, str>) -> Self {",
    "    Value::String(f.into_owned())",
    "}"
  ],
  "size": {
    "chain": 1,
    "contra": 0,
    "min_set": 1
  },
  "cond_chains": [
    {
      "id": 1,
      "conds": [],
      "ret": "Value::String(f.into_owned())",
      "path": [
        0,
        1,
        2,
        3
      ],
      "may_contra": false,
      "min_set": true
    }
  ]
}