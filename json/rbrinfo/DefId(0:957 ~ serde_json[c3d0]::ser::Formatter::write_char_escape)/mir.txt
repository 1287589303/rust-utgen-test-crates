bb0
  0: StorageLive(_4)
    SourceInfo(src/ser.rs:1787:13-1787:14)
  1: PlaceMention(_3)
    SourceInfo(src/ser.rs:1787:23-1787:34)
  2: _5 = discriminant(_3)
    SourceInfo(src/ser.rs:1787:23-1787:34)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1787:17-1787:34)
      kind: switchInt(move _5) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10]

bb1
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/ser.rs:1787:23-1787:34)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1787:23-1787:34)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/ser.rs:1788:13-1788:18)
      kind: falseEdge -> [real: bb11, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb11]

bb3
  Terminator {
      source_info: SourceInfo(src/ser.rs:1789:13-1789:27)
      kind: falseEdge -> [real: bb12, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb12]

bb4
  Terminator {
      source_info: SourceInfo(src/ser.rs:1790:13-1790:20)
      kind: falseEdge -> [real: bb13, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb13]

bb5
  Terminator {
      source_info: SourceInfo(src/ser.rs:1791:13-1791:22)
      kind: falseEdge -> [real: bb14, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb14]

bb6
  Terminator {
      source_info: SourceInfo(src/ser.rs:1792:13-1792:21)
      kind: falseEdge -> [real: bb15, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb15]

bb7
  Terminator {
      source_info: SourceInfo(src/ser.rs:1793:13-1793:21)
      kind: falseEdge -> [real: bb16, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb16]

bb8
  Terminator {
      source_info: SourceInfo(src/ser.rs:1794:13-1794:27)
      kind: falseEdge -> [real: bb17, imaginary: bb9]
  }
  preds [bb0, bb7]
  succs [bb9, bb17]

bb9
  Terminator {
      source_info: SourceInfo(src/ser.rs:1795:13-1795:16)
      kind: falseEdge -> [real: bb18, imaginary: bb10]
  }
  preds [bb0, bb8]
  succs [bb10, bb18]

bb10
  0: StorageLive(_13)
    SourceInfo(src/ser.rs:1796:26-1796:30)
  1: _13 = ((_3 as AsciiControl).0: u8)
    SourceInfo(src/ser.rs:1796:26-1796:30)
  2: StorageLive(_15)
    SourceInfo(src/ser.rs:1798:21-1798:26)
  3: StorageLive(_16)
    SourceInfo(src/ser.rs:1798:30-1805:18)
  4: StorageLive(_17)
    SourceInfo(src/ser.rs:1803:21-1803:53)
  5: StorageLive(_18)
    SourceInfo(src/ser.rs:1803:21-1803:31)
  6: _18 = const <static(DefId(0:960 ~ serde_json[c3d0]::ser::Formatter::write_char_escape::HEX_DIGITS))>
    SourceInfo(src/ser.rs:1803:21-1803:31)
  7: StorageLive(_19)
    SourceInfo(src/ser.rs:1803:32-1803:52)
  8: StorageLive(_20)
    SourceInfo(src/ser.rs:1803:32-1803:43)
  9: StorageLive(_21)
    SourceInfo(src/ser.rs:1803:33-1803:37)
  10: _21 = _13
    SourceInfo(src/ser.rs:1803:33-1803:37)
  11: _22 = const 4_i32 as u32 (IntToInt)
    SourceInfo(src/ser.rs:1803:32-1803:43)
  12: _23 = Lt(move _22, const 8_u32)
    SourceInfo(src/ser.rs:1803:32-1803:43)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1803:32-1803:43)
      kind: assert(move _23, "attempt to shift right by `{}`, which would overflow", const 4_i32) -> [success: bb19, unwind: bb26]
  }
  preds [bb0, bb9]
  succs [bb19, bb26]

bb11
  0: _4 = const b"\\\""
    SourceInfo(src/ser.rs:1788:22-1788:29)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1788:22-1788:29)
      kind: goto -> bb23
  }
  preds [bb2]
  succs [bb23]

bb12
  0: StorageLive(_6)
    SourceInfo(src/ser.rs:1789:31-1789:38)
  1: _6 = const b"\\\\"
    SourceInfo(src/ser.rs:1789:31-1789:38)
  2: _4 = &(*_6)
    SourceInfo(src/ser.rs:1789:31-1789:38)
  3: StorageDead(_6)
    SourceInfo(src/ser.rs:1789:37-1789:38)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1789:37-1789:38)
      kind: goto -> bb23
  }
  preds [bb3]
  succs [bb23]

bb13
  0: StorageLive(_7)
    SourceInfo(src/ser.rs:1790:24-1790:30)
  1: _7 = const b"\\/"
    SourceInfo(src/ser.rs:1790:24-1790:30)
  2: _4 = &(*_7)
    SourceInfo(src/ser.rs:1790:24-1790:30)
  3: StorageDead(_7)
    SourceInfo(src/ser.rs:1790:29-1790:30)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1790:29-1790:30)
      kind: goto -> bb23
  }
  preds [bb4]
  succs [bb23]

bb14
  0: StorageLive(_8)
    SourceInfo(src/ser.rs:1791:26-1791:32)
  1: _8 = const b"\\b"
    SourceInfo(src/ser.rs:1791:26-1791:32)
  2: _4 = &(*_8)
    SourceInfo(src/ser.rs:1791:26-1791:32)
  3: StorageDead(_8)
    SourceInfo(src/ser.rs:1791:31-1791:32)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1791:31-1791:32)
      kind: goto -> bb23
  }
  preds [bb5]
  succs [bb23]

bb15
  0: StorageLive(_9)
    SourceInfo(src/ser.rs:1792:25-1792:31)
  1: _9 = const b"\\f"
    SourceInfo(src/ser.rs:1792:25-1792:31)
  2: _4 = &(*_9)
    SourceInfo(src/ser.rs:1792:25-1792:31)
  3: StorageDead(_9)
    SourceInfo(src/ser.rs:1792:30-1792:31)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1792:30-1792:31)
      kind: goto -> bb23
  }
  preds [bb6]
  succs [bb23]

bb16
  0: StorageLive(_10)
    SourceInfo(src/ser.rs:1793:25-1793:31)
  1: _10 = const b"\\n"
    SourceInfo(src/ser.rs:1793:25-1793:31)
  2: _4 = &(*_10)
    SourceInfo(src/ser.rs:1793:25-1793:31)
  3: StorageDead(_10)
    SourceInfo(src/ser.rs:1793:30-1793:31)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1793:30-1793:31)
      kind: goto -> bb23
  }
  preds [bb7]
  succs [bb23]

bb17
  0: StorageLive(_11)
    SourceInfo(src/ser.rs:1794:31-1794:37)
  1: _11 = const b"\\r"
    SourceInfo(src/ser.rs:1794:31-1794:37)
  2: _4 = &(*_11)
    SourceInfo(src/ser.rs:1794:31-1794:37)
  3: StorageDead(_11)
    SourceInfo(src/ser.rs:1794:36-1794:37)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1794:36-1794:37)
      kind: goto -> bb23
  }
  preds [bb8]
  succs [bb23]

bb18
  0: StorageLive(_12)
    SourceInfo(src/ser.rs:1795:20-1795:26)
  1: _12 = const b"\\t"
    SourceInfo(src/ser.rs:1795:20-1795:26)
  2: _4 = &(*_12)
    SourceInfo(src/ser.rs:1795:20-1795:26)
  3: StorageDead(_12)
    SourceInfo(src/ser.rs:1795:25-1795:26)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1795:25-1795:26)
      kind: goto -> bb23
  }
  preds [bb9]
  succs [bb23]

bb19
  0: _20 = Shr(move _21, const 4_i32)
    SourceInfo(src/ser.rs:1803:32-1803:43)
  1: StorageDead(_21)
    SourceInfo(src/ser.rs:1803:42-1803:43)
  2: _19 = move _20 as usize (IntToInt)
    SourceInfo(src/ser.rs:1803:32-1803:52)
  3: StorageDead(_20)
    SourceInfo(src/ser.rs:1803:51-1803:52)
  4: _24 = Len((*_18))
    SourceInfo(src/ser.rs:1803:21-1803:53)
  5: _25 = Lt(_19, _24)
    SourceInfo(src/ser.rs:1803:21-1803:53)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1803:21-1803:53)
      kind: assert(move _25, "index out of bounds: the length is {} but the index is {}", move _24, _19) -> [success: bb20, unwind: bb26]
  }
  preds [bb10]
  succs [bb20, bb26]

bb20
  0: _17 = (*_18)[_19]
    SourceInfo(src/ser.rs:1803:21-1803:53)
  1: StorageLive(_26)
    SourceInfo(src/ser.rs:1804:21-1804:54)
  2: StorageLive(_27)
    SourceInfo(src/ser.rs:1804:21-1804:31)
  3: _27 = const <static(DefId(0:960 ~ serde_json[c3d0]::ser::Formatter::write_char_escape::HEX_DIGITS))>
    SourceInfo(src/ser.rs:1804:21-1804:31)
  4: StorageLive(_28)
    SourceInfo(src/ser.rs:1804:32-1804:53)
  5: StorageLive(_29)
    SourceInfo(src/ser.rs:1804:32-1804:44)
  6: StorageLive(_30)
    SourceInfo(src/ser.rs:1804:33-1804:37)
  7: _30 = _13
    SourceInfo(src/ser.rs:1804:33-1804:37)
  8: _29 = BitAnd(move _30, const 15_u8)
    SourceInfo(src/ser.rs:1804:32-1804:44)
  9: StorageDead(_30)
    SourceInfo(src/ser.rs:1804:43-1804:44)
  10: _28 = move _29 as usize (IntToInt)
    SourceInfo(src/ser.rs:1804:32-1804:53)
  11: StorageDead(_29)
    SourceInfo(src/ser.rs:1804:52-1804:53)
  12: _31 = Len((*_27))
    SourceInfo(src/ser.rs:1804:21-1804:54)
  13: _32 = Lt(_28, _31)
    SourceInfo(src/ser.rs:1804:21-1804:54)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1804:21-1804:54)
      kind: assert(move _32, "index out of bounds: the length is {} but the index is {}", move _31, _28) -> [success: bb21, unwind: bb26]
  }
  preds [bb19]
  succs [bb21, bb26]

bb21
  0: _26 = (*_27)[_28]
    SourceInfo(src/ser.rs:1804:21-1804:54)
  1: _16 = [const 92_u8, const 117_u8, const 48_u8, const 48_u8, move _17, move _26]
    SourceInfo(src/ser.rs:1798:30-1805:18)
  2: StorageDead(_26)
    SourceInfo(src/ser.rs:1805:17-1805:18)
  3: StorageDead(_17)
    SourceInfo(src/ser.rs:1805:17-1805:18)
  4: _15 = &_16
    SourceInfo(src/ser.rs:1798:29-1805:18)
  5: FakeRead(ForLet(None), _15)
    SourceInfo(src/ser.rs:1798:21-1798:26)
  6: StorageDead(_28)
    SourceInfo(src/ser.rs:1805:18-1805:19)
  7: StorageDead(_27)
    SourceInfo(src/ser.rs:1805:18-1805:19)
  8: StorageDead(_19)
    SourceInfo(src/ser.rs:1805:18-1805:19)
  9: StorageDead(_18)
    SourceInfo(src/ser.rs:1805:18-1805:19)
  10: StorageLive(_33)
    SourceInfo(src/ser.rs:1806:24-1806:30)
  11: _33 = &mut (*_2)
    SourceInfo(src/ser.rs:1806:24-1806:30)
  12: StorageLive(_34)
    SourceInfo(src/ser.rs:1806:41-1806:46)
  13: StorageLive(_35)
    SourceInfo(src/ser.rs:1806:41-1806:46)
  14: _35 = &(*_15)
    SourceInfo(src/ser.rs:1806:41-1806:46)
  15: _34 = move _35 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:1806:41-1806:46)
  16: StorageDead(_35)
    SourceInfo(src/ser.rs:1806:45-1806:46)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1806:24-1806:47)
      kind: _0 = <W as std::io::Write>::write_all(move _33, move _34) -> [return: bb22, unwind: bb26]
  }
  preds [bb20]
  succs [bb22, bb26]

bb22
  0: StorageDead(_34)
    SourceInfo(src/ser.rs:1806:46-1806:47)
  1: StorageDead(_33)
    SourceInfo(src/ser.rs:1806:46-1806:47)
  2: StorageDead(_16)
    SourceInfo(src/ser.rs:1807:13-1807:14)
  3: StorageDead(_15)
    SourceInfo(src/ser.rs:1807:13-1807:14)
  4: StorageDead(_13)
    SourceInfo(src/ser.rs:1807:13-1807:14)
  5: StorageDead(_4)
    SourceInfo(src/ser.rs:1811:5-1811:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1811:6-1811:6)
      kind: goto -> bb25
  }
  preds [bb21]
  succs [bb25]

bb23
  0: FakeRead(ForLet(None), _4)
    SourceInfo(src/ser.rs:1787:13-1787:14)
  1: StorageLive(_36)
    SourceInfo(src/ser.rs:1810:9-1810:15)
  2: _36 = &mut (*_2)
    SourceInfo(src/ser.rs:1810:9-1810:15)
  3: StorageLive(_37)
    SourceInfo(src/ser.rs:1810:26-1810:27)
  4: StorageLive(_38)
    SourceInfo(src/ser.rs:1810:26-1810:27)
  5: _38 = &(*_4)
    SourceInfo(src/ser.rs:1810:26-1810:27)
  6: _37 = move _38 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:1810:26-1810:27)
  7: StorageDead(_38)
    SourceInfo(src/ser.rs:1810:26-1810:27)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1810:9-1810:28)
      kind: _0 = <W as std::io::Write>::write_all(move _36, move _37) -> [return: bb24, unwind: bb26]
  }
  preds [bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18]
  succs [bb24, bb26]

bb24
  0: StorageDead(_37)
    SourceInfo(src/ser.rs:1810:27-1810:28)
  1: StorageDead(_36)
    SourceInfo(src/ser.rs:1810:27-1810:28)
  2: StorageDead(_4)
    SourceInfo(src/ser.rs:1811:5-1811:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1811:6-1811:6)
      kind: goto -> bb25
  }
  preds [bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/ser.rs:1811:6-1811:6)
      kind: return
  }
  preds [bb22, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(src/ser.rs:1781:5-1811:6)
      kind: resume
  }
  preds [bb10, bb19, bb20, bb21, bb23]
  succs []

