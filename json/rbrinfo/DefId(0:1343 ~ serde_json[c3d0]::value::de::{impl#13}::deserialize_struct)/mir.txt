bb0
  0: PlaceMention(_1)
    SourceInfo(src/value/de.rs:1011:15-1011:19)
  1: _5 = discriminant((*_1))
    SourceInfo(src/value/de.rs:1011:15-1011:19)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1011:9-1011:19)
      kind: switchInt(move _5) -> [4: bb2, 5: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3]

bb1
  0: StorageLive(_14)
    SourceInfo(src/value/de.rs:1014:22-1014:49)
  1: StorageLive(_15)
    SourceInfo(src/value/de.rs:1014:22-1014:26)
  2: _15 = &(*_1)
    SourceInfo(src/value/de.rs:1014:22-1014:26)
  3: StorageLive(_16)
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  4: StorageLive(_17)
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  5: StorageLive(_18)
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  6: _18 = &_4
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  7: _17 = &(*_18)
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  8: _16 = move _17 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:1014:40-1014:48)
  9: StorageDead(_17)
    SourceInfo(src/value/de.rs:1014:47-1014:48)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1014:22-1014:49)
      kind: _14 = value::de::<impl value::Value>::invalid_type::<error::Error>(move _15, move _16) -> [return: bb9, unwind: bb15]
  }
  preds [bb0, bb3]
  succs [bb9, bb15]

bb2
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1012:13-1012:28)
      kind: falseEdge -> [real: bb4, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1013:13-1013:29)
      kind: falseEdge -> [real: bb7, imaginary: bb1]
  }
  preds [bb0, bb2]
  succs [bb1, bb7]

bb4
  0: StorageLive(_6)
    SourceInfo(src/value/de.rs:1012:26-1012:27)
  1: _6 = &(((*_1) as Array).0: alloc::vec::Vec<value::Value>)
    SourceInfo(src/value/de.rs:1012:26-1012:27)
  2: StorageLive(_7)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  3: StorageLive(_8)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  4: StorageLive(_9)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  5: _9 = &(*_6)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1012:48-1012:49)
      kind: _8 = <alloc::vec::Vec<value::Value> as core::ops::Deref>::deref(move _9) -> [return: bb5, unwind: bb15]
  }
  preds [bb2]
  succs [bb5, bb15]

bb5
  0: _7 = &(*_8)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  1: StorageDead(_9)
    SourceInfo(src/value/de.rs:1012:48-1012:49)
  2: StorageLive(_10)
    SourceInfo(src/value/de.rs:1012:51-1012:58)
  3: _10 = move _4
    SourceInfo(src/value/de.rs:1012:51-1012:58)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1012:32-1012:59)
      kind: _0 = value::de::visit_array_ref::<'_, V>(move _7, move _10) -> [return: bb6, unwind: bb14]
  }
  preds [bb4]
  succs [bb6, bb14]

bb6
  0: StorageDead(_10)
    SourceInfo(src/value/de.rs:1012:58-1012:59)
  1: StorageDead(_7)
    SourceInfo(src/value/de.rs:1012:58-1012:59)
  2: StorageDead(_8)
    SourceInfo(src/value/de.rs:1012:58-1012:59)
  3: StorageDead(_6)
    SourceInfo(src/value/de.rs:1012:58-1012:59)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1012:58-1012:59)
      kind: goto -> bb11
  }
  preds [bb5]
  succs [bb11]

bb7
  0: StorageLive(_11)
    SourceInfo(src/value/de.rs:1013:27-1013:28)
  1: _11 = &(((*_1) as Object).0: map::Map<alloc::string::String, value::Value>)
    SourceInfo(src/value/de.rs:1013:27-1013:28)
  2: StorageLive(_12)
    SourceInfo(src/value/de.rs:1013:33-1013:34)
  3: _12 = &(*_11)
    SourceInfo(src/value/de.rs:1013:33-1013:34)
  4: StorageLive(_13)
    SourceInfo(src/value/de.rs:1013:51-1013:58)
  5: _13 = move _4
    SourceInfo(src/value/de.rs:1013:51-1013:58)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1013:33-1013:59)
      kind: _0 = <&map::Map<alloc::string::String, value::Value> as serde::Deserializer<'_>>::deserialize_any::<V>(move _12, move _13) -> [return: bb8, unwind: bb13]
  }
  preds [bb3]
  succs [bb8, bb13]

bb8
  0: StorageDead(_13)
    SourceInfo(src/value/de.rs:1013:58-1013:59)
  1: StorageDead(_12)
    SourceInfo(src/value/de.rs:1013:58-1013:59)
  2: StorageDead(_11)
    SourceInfo(src/value/de.rs:1013:58-1013:59)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1013:58-1013:59)
      kind: goto -> bb11
  }
  preds [bb7]
  succs [bb11]

bb9
  0: StorageDead(_16)
    SourceInfo(src/value/de.rs:1014:48-1014:49)
  1: StorageDead(_15)
    SourceInfo(src/value/de.rs:1014:48-1014:49)
  2: _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _14)
    SourceInfo(src/value/de.rs:1014:18-1014:50)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1014:49-1014:50)
      kind: drop(_14) -> [return: bb10, unwind: bb15]
  }
  preds [bb1]
  succs [bb10, bb15]

bb10
  0: StorageDead(_14)
    SourceInfo(src/value/de.rs:1014:49-1014:50)
  1: StorageDead(_18)
    SourceInfo(src/value/de.rs:1014:49-1014:50)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1014:49-1014:50)
      kind: goto -> bb11
  }
  preds [bb9]
  succs [bb11]

bb11
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1016:5-1016:6)
      kind: drop(_4) -> [return: bb12, unwind: bb16]
  }
  preds [bb6, bb8, bb10]
  succs [bb12, bb16]

bb12
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1016:6-1016:6)
      kind: return
  }
  preds [bb11]
  succs []

bb13
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1013:58-1013:59)
      kind: drop(_13) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb15]

bb14
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1012:58-1012:59)
      kind: drop(_10) -> [return: bb15, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb15]

bb15
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1016:5-1016:6)
      kind: drop(_4) -> [return: bb16, unwind terminate(cleanup)]
  }
  preds [bb1, bb4, bb9, bb13, bb14]
  succs [bb16]

bb16
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1002:5-1016:6)
      kind: resume
  }
  preds [bb11, bb15]
  succs []

