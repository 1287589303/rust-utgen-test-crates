bb0
  0: StorageLive(_3)
    SourceInfo(src/value/de.rs:1384:40-1384:57)
  1: StorageLive(_4)
    SourceInfo(src/value/de.rs:1384:40-1384:44)
  2: _4 = &(*_1)
    SourceInfo(src/value/de.rs:1384:40-1384:44)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1384:40-1384:57)
      kind: _3 = value::de::<impl value::Value>::unexpected(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_4)
    SourceInfo(src/value/de.rs:1384:56-1384:57)
  1: StorageLive(_5)
    SourceInfo(src/value/de.rs:1384:59-1384:62)
  2: StorageLive(_6)
    SourceInfo(src/value/de.rs:1384:59-1384:62)
  3: _6 = &(*_2)
    SourceInfo(src/value/de.rs:1384:59-1384:62)
  4: _5 = move _6 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:1384:59-1384:62)
  5: StorageDead(_6)
    SourceInfo(src/value/de.rs:1384:61-1384:62)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1384:9-1384:63)
      kind: _0 = <E as serde::de::Error>::invalid_type(move _3, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/value/de.rs:1384:62-1384:63)
  1: StorageDead(_3)
    SourceInfo(src/value/de.rs:1384:62-1384:63)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1385:6-1385:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1380:5-1385:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

