bb0
  0: StorageLive(_5)
    SourceInfo(src/de.rs:536:9-536:24)
  1: StorageLive(_6)
    SourceInfo(src/de.rs:536:9-536:13)
  2: _6 = &mut (*_1)
    SourceInfo(src/de.rs:536:9-536:13)
  Terminator {
      source_info: SourceInfo(src/de.rs:536:9-536:24)
      kind: _5 = de::Deserializer::<R>::eat_char(move _6) -> [return: bb1, unwind: bb82]
  }
  preds []
  succs [bb1, bb82]

bb1
  0: StorageDead(_6)
    SourceInfo(src/de.rs:536:23-536:24)
  1: StorageDead(_5)
    SourceInfo(src/de.rs:536:24-536:25)
  2: StorageLive(_7)
    SourceInfo(src/de.rs:538:13-538:45)
  3: _7 = const 0_i32
    SourceInfo(src/de.rs:538:48-538:49)
  4: FakeRead(ForLet(None), _7)
    SourceInfo(src/de.rs:538:13-538:45)
  5: StorageLive(_8)
    SourceInfo(src/de.rs:539:9-550:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:9-550:10)
      kind: goto -> bb2
  }
  preds [bb0]
  succs [bb2]

bb2
  Terminator {
      source_info: SourceInfo(src/de.rs:539:9-550:10)
      kind: falseUnwind -> [real: bb3, unwind: bb82]
  }
  preds [bb1, bb32]
  succs [bb3, bb82]

bb3
  0: StorageLive(_10)
    SourceInfo(src/lib.rs:408:9-411:10)
  1: StorageLive(_11)
    SourceInfo(src/de.rs:539:42-539:61)
  2: StorageLive(_12)
    SourceInfo(src/de.rs:539:42-539:46)
  3: _12 = &mut (*_1)
    SourceInfo(src/de.rs:539:42-539:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:42-539:61)
      kind: _11 = de::Deserializer::<R>::peek_or_null(move _12) -> [return: bb4, unwind: bb82]
  }
  preds [bb2]
  succs [bb4, bb82]

bb4
  0: StorageDead(_12)
    SourceInfo(src/de.rs:539:60-539:61)
  1: PlaceMention(_11)
    SourceInfo(src/de.rs:539:42-539:61)
  2: _13 = discriminant(_11)
    SourceInfo(src/de.rs:539:42-539:61)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _13) -> [0: bb6, 1: bb7, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _11)
    SourceInfo(src/de.rs:539:42-539:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:42-539:61)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: StorageLive(_15)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _15 = move ((_11 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_17)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _17 = move _15
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _17)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_17) -> [return: bb9, unwind: bb80]
  }
  preds [bb4, bb6]
  succs [bb9, bb80]

bb8
  0: StorageLive(_14)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _14 = ((_11 as Ok).0: u8)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _10 = _14
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_14)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_10)
    SourceInfo(src/lib.rs:408:9-411:10)
  5: _18 = Le(const 48_u8, _10)
    SourceInfo(src/de.rs:539:23-539:34)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:23-539:34)
      kind: switchInt(move _18) -> [0: bb10, otherwise: bb12]
  }
  preds [bb6]
  succs [bb10, bb12]

bb9
  0: StorageDead(_17)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_15) -> [return: bb69, unwind: bb81]
  }
  preds [bb7]
  succs [bb69, bb81]

bb10
  0: StorageLive(_61)
    SourceInfo(src/de.rs:539:9-550:10)
  1: _8 = const ()
    SourceInfo(src/de.rs:539:9-550:10)
  2: StorageDead(_61)
    SourceInfo(src/de.rs:550:9-550:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:550:9-550:10)
      kind: drop(_11) -> [return: bb33, unwind: bb82]
  }
  preds [bb8, bb11, bb12]
  succs [bb33, bb82]

bb11
  Terminator {
      source_info: SourceInfo(src/de.rs:539:19-539:20)
      kind: falseEdge -> [real: bb13, imaginary: bb10]
  }
  preds [bb12]
  succs [bb10, bb13]

bb12
  0: _19 = Le(_10, const 57_u8)
    SourceInfo(src/de.rs:539:23-539:34)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:23-539:34)
      kind: switchInt(move _19) -> [0: bb10, otherwise: bb11]
  }
  preds [bb8]
  succs [bb10, bb11]

bb13
  0: StorageLive(_20)
    SourceInfo(src/de.rs:539:19-539:20)
  1: _20 = _10
    SourceInfo(src/de.rs:539:19-539:20)
  2: StorageLive(_21)
    SourceInfo(src/de.rs:540:17-540:22)
  3: StorageLive(_22)
    SourceInfo(src/de.rs:540:25-540:35)
  4: StorageLive(_23)
    SourceInfo(src/de.rs:540:26-540:27)
  5: _23 = _20
    SourceInfo(src/de.rs:540:26-540:27)
  6: _24 = SubWithOverflow(_23, const 48_u8)
    SourceInfo(src/de.rs:540:25-540:35)
  Terminator {
      source_info: SourceInfo(src/de.rs:540:25-540:35)
      kind: assert(!move (_24.1: bool), "attempt to compute `{} - {}`, which would overflow", move _23, const 48_u8) -> [success: bb14, unwind: bb81]
  }
  preds [bb11]
  succs [bb14, bb81]

bb14
  0: _22 = move (_24.0: u8)
    SourceInfo(src/de.rs:540:25-540:35)
  1: StorageDead(_23)
    SourceInfo(src/de.rs:540:34-540:35)
  2: _21 = move _22 as u64 (IntToInt)
    SourceInfo(src/de.rs:540:25-540:42)
  3: StorageDead(_22)
    SourceInfo(src/de.rs:540:41-540:42)
  4: FakeRead(ForLet(None), _21)
    SourceInfo(src/de.rs:540:17-540:22)
  5: StorageLive(_25)
    SourceInfo(src/de.rs:542:13-545:14)
  6: StorageLive(_26)
    SourceInfo(src/de.rs:103:9-105:10)
  7: StorageLive(_27)
    SourceInfo(src/de.rs:542:52-542:60)
  8: _27 = const core::num::<impl u64>::MAX
    SourceInfo(src/de.rs:542:52-542:60)
  9: PlaceMention(_27)
    SourceInfo(src/de.rs:542:52-542:60)
  10: StorageLive(_28)
    SourceInfo(src/de.rs:104:13-104:14)
  11: _28 = _27
    SourceInfo(src/de.rs:104:13-104:14)
  12: StorageLive(_29)
    SourceInfo(src/de.rs:104:18-104:30)
  13: StorageLive(_30)
    SourceInfo(src/de.rs:104:18-104:20)
  14: _30 = _3
    SourceInfo(src/de.rs:104:18-104:20)
  15: StorageLive(_31)
    SourceInfo(src/de.rs:104:24-104:30)
  16: StorageLive(_32)
    SourceInfo(src/de.rs:104:24-104:25)
  17: _32 = _28
    SourceInfo(src/de.rs:104:24-104:25)
  18: _33 = Eq(const 10_u64, const 0_u64)
    SourceInfo(src/de.rs:104:24-104:30)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:24-104:30)
      kind: assert(!move _33, "attempt to divide `{}` by zero", _32) -> [success: bb15, unwind: bb81]
  }
  preds [bb13]
  succs [bb15, bb81]

bb15
  0: _31 = Div(move _32, const 10_u64)
    SourceInfo(src/de.rs:104:24-104:30)
  1: StorageDead(_32)
    SourceInfo(src/de.rs:104:29-104:30)
  2: _29 = Ge(move _30, move _31)
    SourceInfo(src/de.rs:104:18-104:30)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:30)
      kind: switchInt(move _29) -> [0: bb17, otherwise: bb16]
  }
  preds [bb14]
  succs [bb16, bb17]

bb16
  0: StorageDead(_31)
    SourceInfo(src/de.rs:104:29-104:30)
  1: StorageDead(_30)
    SourceInfo(src/de.rs:104:29-104:30)
  2: StorageLive(_34)
    SourceInfo(src/de.rs:104:35-104:46)
  3: StorageLive(_35)
    SourceInfo(src/de.rs:104:35-104:37)
  4: _35 = _3
    SourceInfo(src/de.rs:104:35-104:37)
  5: StorageLive(_36)
    SourceInfo(src/de.rs:104:40-104:46)
  6: StorageLive(_37)
    SourceInfo(src/de.rs:104:40-104:41)
  7: _37 = _28
    SourceInfo(src/de.rs:104:40-104:41)
  8: _38 = Eq(const 10_u64, const 0_u64)
    SourceInfo(src/de.rs:104:40-104:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:40-104:46)
      kind: assert(!move _38, "attempt to divide `{}` by zero", _37) -> [success: bb18, unwind: bb81]
  }
  preds [bb15]
  succs [bb18, bb81]

bb17
  0: StorageDead(_31)
    SourceInfo(src/de.rs:104:29-104:30)
  1: StorageDead(_30)
    SourceInfo(src/de.rs:104:29-104:30)
  2: _26 = const false
    SourceInfo(src/de.rs:104:18-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:62)
      kind: goto -> bb23
  }
  preds [bb15]
  succs [bb23]

bb18
  0: _36 = Div(move _37, const 10_u64)
    SourceInfo(src/de.rs:104:40-104:46)
  1: StorageDead(_37)
    SourceInfo(src/de.rs:104:45-104:46)
  2: _34 = Gt(move _35, move _36)
    SourceInfo(src/de.rs:104:35-104:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:35-104:46)
      kind: switchInt(move _34) -> [0: bb20, otherwise: bb19]
  }
  preds [bb16]
  succs [bb19, bb20]

bb19
  0: StorageDead(_36)
    SourceInfo(src/de.rs:104:45-104:46)
  1: StorageDead(_35)
    SourceInfo(src/de.rs:104:45-104:46)
  2: _26 = const true
    SourceInfo(src/de.rs:104:34-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:34-104:62)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb20
  0: StorageDead(_36)
    SourceInfo(src/de.rs:104:45-104:46)
  1: StorageDead(_35)
    SourceInfo(src/de.rs:104:45-104:46)
  2: StorageLive(_39)
    SourceInfo(src/de.rs:104:50-104:52)
  3: _39 = _21
    SourceInfo(src/de.rs:104:50-104:52)
  4: StorageLive(_40)
    SourceInfo(src/de.rs:104:55-104:61)
  5: StorageLive(_41)
    SourceInfo(src/de.rs:104:55-104:56)
  6: _41 = _28
    SourceInfo(src/de.rs:104:55-104:56)
  7: _42 = Eq(const 10_u64, const 0_u64)
    SourceInfo(src/de.rs:104:55-104:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:55-104:61)
      kind: assert(!move _42, "attempt to calculate the remainder of `{}` with a divisor of zero", _41) -> [success: bb21, unwind: bb81]
  }
  preds [bb18]
  succs [bb21, bb81]

bb21
  0: _40 = Rem(move _41, const 10_u64)
    SourceInfo(src/de.rs:104:55-104:61)
  1: StorageDead(_41)
    SourceInfo(src/de.rs:104:60-104:61)
  2: _26 = Gt(move _39, move _40)
    SourceInfo(src/de.rs:104:50-104:61)
  3: StorageDead(_40)
    SourceInfo(src/de.rs:104:60-104:61)
  4: StorageDead(_39)
    SourceInfo(src/de.rs:104:60-104:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:34-104:62)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_34)
    SourceInfo(src/de.rs:104:61-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:62)
      kind: goto -> bb23
  }
  preds [bb19, bb21]
  succs [bb23]

bb23
  0: StorageDead(_29)
    SourceInfo(src/de.rs:104:61-104:62)
  1: StorageDead(_28)
    SourceInfo(src/de.rs:104:61-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:103:9-105:10)
      kind: switchInt(move _26) -> [0: bb25, otherwise: bb24]
  }
  preds [bb17, bb22]
  succs [bb24, bb25]

bb24
  0: StorageDead(_27)
    SourceInfo(src/de.rs:105:9-105:10)
  1: StorageLive(_44)
    SourceInfo(src/de.rs:543:21-543:29)
  2: StorageLive(_45)
    SourceInfo(src/de.rs:543:32-543:61)
  3: _45 = _4
    SourceInfo(src/de.rs:543:32-543:61)
  4: StorageLive(_46)
    SourceInfo(src/de.rs:543:64-543:92)
  5: _46 = _7
    SourceInfo(src/de.rs:543:64-543:92)
  6: _47 = AddWithOverflow(_45, _46)
    SourceInfo(src/de.rs:543:32-543:92)
  Terminator {
      source_info: SourceInfo(src/de.rs:543:32-543:92)
      kind: assert(!move (_47.1: bool), "attempt to compute `{} + {}`, which would overflow", move _45, move _46) -> [success: bb26, unwind: bb81]
  }
  preds [bb23]
  succs [bb26, bb81]

bb25
  0: StorageDead(_27)
    SourceInfo(src/de.rs:105:9-105:10)
  1: _25 = const ()
    SourceInfo(src/de.rs:545:14-545:14)
  2: StorageDead(_26)
    SourceInfo(src/de.rs:545:13-545:14)
  3: StorageDead(_25)
    SourceInfo(src/de.rs:545:13-545:14)
  4: StorageLive(_52)
    SourceInfo(src/de.rs:547:13-547:28)
  5: StorageLive(_53)
    SourceInfo(src/de.rs:547:13-547:17)
  6: _53 = &mut (*_1)
    SourceInfo(src/de.rs:547:13-547:17)
  Terminator {
      source_info: SourceInfo(src/de.rs:547:13-547:28)
      kind: _52 = de::Deserializer::<R>::eat_char(move _53) -> [return: bb28, unwind: bb81]
  }
  preds [bb23]
  succs [bb28, bb81]

bb26
  0: _44 = move (_47.0: i32)
    SourceInfo(src/de.rs:543:32-543:92)
  1: StorageDead(_46)
    SourceInfo(src/de.rs:543:91-543:92)
  2: StorageDead(_45)
    SourceInfo(src/de.rs:543:91-543:92)
  3: FakeRead(ForLet(None), _44)
    SourceInfo(src/de.rs:543:21-543:29)
  4: StorageLive(_48)
    SourceInfo(src/de.rs:544:24-544:28)
  5: _48 = &mut (*_1)
    SourceInfo(src/de.rs:544:24-544:28)
  6: StorageLive(_49)
    SourceInfo(src/de.rs:544:52-544:60)
  7: _49 = _2
    SourceInfo(src/de.rs:544:52-544:60)
  8: StorageLive(_50)
    SourceInfo(src/de.rs:544:62-544:73)
  9: _50 = _3
    SourceInfo(src/de.rs:544:62-544:73)
  10: StorageLive(_51)
    SourceInfo(src/de.rs:544:75-544:83)
  11: _51 = _44
    SourceInfo(src/de.rs:544:75-544:83)
  Terminator {
      source_info: SourceInfo(src/de.rs:544:24-544:84)
      kind: _0 = de::Deserializer::<R>::parse_decimal_overflow(move _48, move _49, move _50, move _51) -> [return: bb27, unwind: bb81]
  }
  preds [bb24]
  succs [bb27, bb81]

bb27
  0: StorageDead(_51)
    SourceInfo(src/de.rs:544:83-544:84)
  1: StorageDead(_50)
    SourceInfo(src/de.rs:544:83-544:84)
  2: StorageDead(_49)
    SourceInfo(src/de.rs:544:83-544:84)
  3: StorageDead(_48)
    SourceInfo(src/de.rs:544:83-544:84)
  4: StorageDead(_44)
    SourceInfo(src/de.rs:545:13-545:14)
  5: StorageDead(_26)
    SourceInfo(src/de.rs:545:13-545:14)
  6: StorageDead(_25)
    SourceInfo(src/de.rs:545:13-545:14)
  7: StorageDead(_21)
    SourceInfo(src/de.rs:550:9-550:10)
  8: StorageDead(_20)
    SourceInfo(src/de.rs:550:9-550:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb26]
  succs [bb70]

bb28
  0: StorageDead(_53)
    SourceInfo(src/de.rs:547:27-547:28)
  1: StorageDead(_52)
    SourceInfo(src/de.rs:547:28-547:29)
  2: StorageLive(_54)
    SourceInfo(src/de.rs:548:27-548:43)
  3: StorageLive(_55)
    SourceInfo(src/de.rs:548:27-548:38)
  4: _55 = _3
    SourceInfo(src/de.rs:548:27-548:38)
  5: _56 = MulWithOverflow(_55, const 10_u64)
    SourceInfo(src/de.rs:548:27-548:43)
  Terminator {
      source_info: SourceInfo(src/de.rs:548:27-548:43)
      kind: assert(!move (_56.1: bool), "attempt to compute `{} * {}`, which would overflow", move _55, const 10_u64) -> [success: bb29, unwind: bb81]
  }
  preds [bb25]
  succs [bb29, bb81]

bb29
  0: _54 = move (_56.0: u64)
    SourceInfo(src/de.rs:548:27-548:43)
  1: StorageDead(_55)
    SourceInfo(src/de.rs:548:42-548:43)
  2: StorageLive(_57)
    SourceInfo(src/de.rs:548:46-548:51)
  3: _57 = _21
    SourceInfo(src/de.rs:548:46-548:51)
  4: _58 = AddWithOverflow(_54, _57)
    SourceInfo(src/de.rs:548:27-548:51)
  Terminator {
      source_info: SourceInfo(src/de.rs:548:27-548:51)
      kind: assert(!move (_58.1: bool), "attempt to compute `{} + {}`, which would overflow", move _54, move _57) -> [success: bb30, unwind: bb81]
  }
  preds [bb28]
  succs [bb30, bb81]

bb30
  0: _3 = move (_58.0: u64)
    SourceInfo(src/de.rs:548:13-548:51)
  1: StorageDead(_57)
    SourceInfo(src/de.rs:548:50-548:51)
  2: StorageDead(_54)
    SourceInfo(src/de.rs:548:50-548:51)
  3: _59 = SubWithOverflow(_7, const 1_i32)
    SourceInfo(src/de.rs:549:13-549:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:549:13-549:46)
      kind: assert(!move (_59.1: bool), "attempt to compute `{} - {}`, which would overflow", _7, const 1_i32) -> [success: bb31, unwind: bb81]
  }
  preds [bb29]
  succs [bb31, bb81]

bb31
  0: _7 = move (_59.0: i32)
    SourceInfo(src/de.rs:549:13-549:46)
  1: _9 = const ()
    SourceInfo(src/de.rs:539:63-550:10)
  2: StorageDead(_21)
    SourceInfo(src/de.rs:550:9-550:10)
  3: StorageDead(_20)
    SourceInfo(src/de.rs:550:9-550:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:550:9-550:10)
      kind: drop(_11) -> [return: bb32, unwind: bb82]
  }
  preds [bb30]
  succs [bb32, bb82]

bb32
  0: StorageDead(_11)
    SourceInfo(src/de.rs:550:9-550:10)
  1: StorageDead(_10)
    SourceInfo(src/de.rs:550:9-550:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:539:9-550:10)
      kind: goto -> bb2
  }
  preds [bb31]
  succs [bb2]

bb33
  0: StorageDead(_11)
    SourceInfo(src/de.rs:550:9-550:10)
  1: StorageDead(_10)
    SourceInfo(src/de.rs:550:9-550:10)
  2: StorageDead(_8)
    SourceInfo(src/de.rs:550:9-550:10)
  3: StorageLive(_63)
    SourceInfo(src/de.rs:553:9-558:10)
  4: StorageLive(_64)
    SourceInfo(src/de.rs:553:12-553:45)
  5: StorageLive(_65)
    SourceInfo(src/de.rs:553:12-553:40)
  6: _65 = _7
    SourceInfo(src/de.rs:553:12-553:40)
  7: _64 = Eq(move _65, const 0_i32)
    SourceInfo(src/de.rs:553:12-553:45)
  Terminator {
      source_info: SourceInfo(src/de.rs:553:12-553:45)
      kind: switchInt(move _64) -> [0: bb49, otherwise: bb34]
  }
  preds [bb10]
  succs [bb34, bb49]

bb34
  0: StorageDead(_65)
    SourceInfo(src/de.rs:553:44-553:45)
  1: StorageLive(_66)
    SourceInfo(src/lib.rs:408:9-411:10)
  2: StorageLive(_67)
    SourceInfo(src/de.rs:554:24-554:35)
  3: StorageLive(_68)
    SourceInfo(src/de.rs:554:24-554:28)
  4: _68 = &mut (*_1)
    SourceInfo(src/de.rs:554:24-554:28)
  Terminator {
      source_info: SourceInfo(src/de.rs:554:24-554:35)
      kind: _67 = de::Deserializer::<R>::peek(move _68) -> [return: bb35, unwind: bb82]
  }
  preds [bb33]
  succs [bb35, bb82]

bb35
  0: StorageDead(_68)
    SourceInfo(src/de.rs:554:34-554:35)
  1: PlaceMention(_67)
    SourceInfo(src/de.rs:554:24-554:35)
  2: _69 = discriminant(_67)
    SourceInfo(src/de.rs:554:24-554:35)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _69) -> [0: bb37, 1: bb38, otherwise: bb36]
  }
  preds [bb34]
  succs [bb36, bb37, bb38]

bb36
  0: FakeRead(ForMatchedPlace(None), _67)
    SourceInfo(src/de.rs:554:24-554:35)
  Terminator {
      source_info: SourceInfo(src/de.rs:554:24-554:35)
      kind: unreachable
  }
  preds [bb35]
  succs []

bb37
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb39, imaginary: bb38]
  }
  preds [bb35]
  succs [bb38, bb39]

bb38
  0: StorageLive(_71)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _71 = move ((_67 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_73)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _73 = move _71
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _73)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_73) -> [return: bb40, unwind: bb78]
  }
  preds [bb35, bb37]
  succs [bb40, bb78]

bb39
  0: StorageLive(_70)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _70 = ((_67 as Ok).0: core::option::Option<u8>)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _66 = _70
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_70)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_66)
    SourceInfo(src/lib.rs:408:9-411:10)
  5: _74 = discriminant(_66)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: switchInt(move _74) -> [0: bb43, 1: bb42, otherwise: bb41]
  }
  preds [bb37]
  succs [bb41, bb42, bb43]

bb40
  0: StorageDead(_73)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_71) -> [return: bb66, unwind: bb79]
  }
  preds [bb38]
  succs [bb66, bb79]

bb41
  0: FakeRead(ForMatchedPlace(None), _66)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb42
  Terminator {
      source_info: SourceInfo(src/de.rs:555:17-555:24)
      kind: falseEdge -> [real: bb44, imaginary: bb43]
  }
  preds [bb39]
  succs [bb43, bb44]

bb43
  0: StorageLive(_80)
    SourceInfo(src/de.rs:556:36-556:84)
  1: StorageLive(_81)
    SourceInfo(src/de.rs:556:36-556:40)
  2: _81 = &(*_1)
    SourceInfo(src/de.rs:556:36-556:40)
  3: StorageLive(_82)
    SourceInfo(src/de.rs:556:52-556:83)
  4: _82 = error::ErrorCode::EofWhileParsingValue
    SourceInfo(src/de.rs:556:52-556:83)
  Terminator {
      source_info: SourceInfo(src/de.rs:556:36-556:84)
      kind: _80 = de::Deserializer::<R>::peek_error(move _81, move _82) -> [return: bb47, unwind: bb76]
  }
  preds [bb39, bb42]
  succs [bb47, bb76]

bb44
  0: StorageLive(_76)
    SourceInfo(src/de.rs:555:39-555:80)
  1: StorageLive(_77)
    SourceInfo(src/de.rs:555:39-555:43)
  2: _77 = &(*_1)
    SourceInfo(src/de.rs:555:39-555:43)
  3: StorageLive(_78)
    SourceInfo(src/de.rs:555:55-555:79)
  4: _78 = error::ErrorCode::InvalidNumber
    SourceInfo(src/de.rs:555:55-555:79)
  Terminator {
      source_info: SourceInfo(src/de.rs:555:39-555:80)
      kind: _76 = de::Deserializer::<R>::peek_error(move _77, move _78) -> [return: bb45, unwind: bb77]
  }
  preds [bb42]
  succs [bb45, bb77]

bb45
  0: StorageDead(_78)
    SourceInfo(src/de.rs:555:79-555:80)
  1: StorageDead(_77)
    SourceInfo(src/de.rs:555:79-555:80)
  2: _0 = core::result::Result::<f64, error::Error>::Err(move _76)
    SourceInfo(src/de.rs:555:35-555:81)
  Terminator {
      source_info: SourceInfo(src/de.rs:555:80-555:81)
      kind: drop(_76) -> [return: bb46, unwind: bb79]
  }
  preds [bb44]
  succs [bb46, bb79]

bb46
  0: StorageDead(_76)
    SourceInfo(src/de.rs:555:80-555:81)
  Terminator {
      source_info: SourceInfo(src/de.rs:555:28-555:81)
      kind: goto -> bb67
  }
  preds [bb45]
  succs [bb67]

bb47
  0: StorageDead(_82)
    SourceInfo(src/de.rs:556:83-556:84)
  1: StorageDead(_81)
    SourceInfo(src/de.rs:556:83-556:84)
  2: _0 = core::result::Result::<f64, error::Error>::Err(move _80)
    SourceInfo(src/de.rs:556:32-556:85)
  Terminator {
      source_info: SourceInfo(src/de.rs:556:84-556:85)
      kind: drop(_80) -> [return: bb48, unwind: bb79]
  }
  preds [bb43]
  succs [bb48, bb79]

bb48
  0: StorageDead(_80)
    SourceInfo(src/de.rs:556:84-556:85)
  Terminator {
      source_info: SourceInfo(src/de.rs:556:25-556:85)
      kind: goto -> bb67
  }
  preds [bb47]
  succs [bb67]

bb49
  0: StorageDead(_65)
    SourceInfo(src/de.rs:553:44-553:45)
  1: _63 = const ()
    SourceInfo(src/de.rs:558:10-558:10)
  2: StorageDead(_64)
    SourceInfo(src/de.rs:558:9-558:10)
  3: StorageDead(_63)
    SourceInfo(src/de.rs:558:9-558:10)
  4: StorageLive(_83)
    SourceInfo(src/de.rs:560:13-560:21)
  5: StorageLive(_84)
    SourceInfo(src/de.rs:560:24-560:53)
  6: _84 = _4
    SourceInfo(src/de.rs:560:24-560:53)
  7: StorageLive(_85)
    SourceInfo(src/de.rs:560:56-560:84)
  8: _85 = _7
    SourceInfo(src/de.rs:560:56-560:84)
  9: _86 = AddWithOverflow(_84, _85)
    SourceInfo(src/de.rs:560:24-560:84)
  Terminator {
      source_info: SourceInfo(src/de.rs:560:24-560:84)
      kind: assert(!move (_86.1: bool), "attempt to compute `{} + {}`, which would overflow", move _84, move _85) -> [success: bb50, unwind: bb82]
  }
  preds [bb33]
  succs [bb50, bb82]

bb50
  0: _83 = move (_86.0: i32)
    SourceInfo(src/de.rs:560:24-560:84)
  1: StorageDead(_85)
    SourceInfo(src/de.rs:560:83-560:84)
  2: StorageDead(_84)
    SourceInfo(src/de.rs:560:83-560:84)
  3: FakeRead(ForLet(None), _83)
    SourceInfo(src/de.rs:560:13-560:21)
  4: StorageLive(_87)
    SourceInfo(src/lib.rs:408:9-411:10)
  5: StorageLive(_88)
    SourceInfo(src/de.rs:561:20-561:39)
  6: StorageLive(_89)
    SourceInfo(src/de.rs:561:20-561:24)
  7: _89 = &mut (*_1)
    SourceInfo(src/de.rs:561:20-561:24)
  Terminator {
      source_info: SourceInfo(src/de.rs:561:20-561:39)
      kind: _88 = de::Deserializer::<R>::peek_or_null(move _89) -> [return: bb51, unwind: bb82]
  }
  preds [bb49]
  succs [bb51, bb82]

bb51
  0: StorageDead(_89)
    SourceInfo(src/de.rs:561:38-561:39)
  1: PlaceMention(_88)
    SourceInfo(src/de.rs:561:20-561:39)
  2: _90 = discriminant(_88)
    SourceInfo(src/de.rs:561:20-561:39)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _90) -> [0: bb53, 1: bb54, otherwise: bb52]
  }
  preds [bb50]
  succs [bb52, bb53, bb54]

bb52
  0: FakeRead(ForMatchedPlace(None), _88)
    SourceInfo(src/de.rs:561:20-561:39)
  Terminator {
      source_info: SourceInfo(src/de.rs:561:20-561:39)
      kind: unreachable
  }
  preds [bb51]
  succs []

bb53
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb55, imaginary: bb54]
  }
  preds [bb51]
  succs [bb54, bb55]

bb54
  0: StorageLive(_92)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _92 = move ((_88 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_94)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _94 = move _92
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _94)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_94) -> [return: bb56, unwind: bb74]
  }
  preds [bb51, bb53]
  succs [bb56, bb74]

bb55
  0: StorageLive(_91)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _91 = ((_88 as Ok).0: u8)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _87 = _91
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_91)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_87)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: switchInt(_87) -> [101: bb58, 69: bb58, otherwise: bb57]
  }
  preds [bb53]
  succs [bb57, bb58, bb58]

bb56
  0: StorageDead(_94)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_92) -> [return: bb64, unwind: bb75]
  }
  preds [bb54]
  succs [bb64, bb75]

bb57
  0: StorageLive(_99)
    SourceInfo(src/de.rs:563:18-563:22)
  1: _99 = &mut (*_1)
    SourceInfo(src/de.rs:563:18-563:22)
  2: StorageLive(_100)
    SourceInfo(src/de.rs:563:38-563:46)
  3: _100 = _2
    SourceInfo(src/de.rs:563:38-563:46)
  4: StorageLive(_101)
    SourceInfo(src/de.rs:563:48-563:59)
  5: _101 = _3
    SourceInfo(src/de.rs:563:48-563:59)
  6: StorageLive(_102)
    SourceInfo(src/de.rs:563:61-563:69)
  7: _102 = _83
    SourceInfo(src/de.rs:563:61-563:69)
  Terminator {
      source_info: SourceInfo(src/de.rs:563:18-563:70)
      kind: _0 = de::Deserializer::<R>::f64_from_parts(move _99, move _100, move _101, move _102) -> [return: bb61, unwind: bb75]
  }
  preds [bb55, bb58]
  succs [bb61, bb75]

bb58
  Terminator {
      source_info: SourceInfo(src/de.rs:562:13-562:24)
      kind: falseEdge -> [real: bb59, imaginary: bb57]
  }
  preds [bb55, bb55]
  succs [bb57, bb59]

bb59
  0: StorageLive(_95)
    SourceInfo(src/de.rs:562:28-562:32)
  1: _95 = &mut (*_1)
    SourceInfo(src/de.rs:562:28-562:32)
  2: StorageLive(_96)
    SourceInfo(src/de.rs:562:48-562:56)
  3: _96 = _2
    SourceInfo(src/de.rs:562:48-562:56)
  4: StorageLive(_97)
    SourceInfo(src/de.rs:562:58-562:69)
  5: _97 = _3
    SourceInfo(src/de.rs:562:58-562:69)
  6: StorageLive(_98)
    SourceInfo(src/de.rs:562:71-562:79)
  7: _98 = _83
    SourceInfo(src/de.rs:562:71-562:79)
  Terminator {
      source_info: SourceInfo(src/de.rs:562:28-562:80)
      kind: _0 = de::Deserializer::<R>::parse_exponent(move _95, move _96, move _97, move _98) -> [return: bb60, unwind: bb75]
  }
  preds [bb58]
  succs [bb60, bb75]

bb60
  0: StorageDead(_98)
    SourceInfo(src/de.rs:562:79-562:80)
  1: StorageDead(_97)
    SourceInfo(src/de.rs:562:79-562:80)
  2: StorageDead(_96)
    SourceInfo(src/de.rs:562:79-562:80)
  3: StorageDead(_95)
    SourceInfo(src/de.rs:562:79-562:80)
  Terminator {
      source_info: SourceInfo(src/de.rs:562:79-562:80)
      kind: goto -> bb62
  }
  preds [bb59]
  succs [bb62]

bb61
  0: StorageDead(_102)
    SourceInfo(src/de.rs:563:69-563:70)
  1: StorageDead(_101)
    SourceInfo(src/de.rs:563:69-563:70)
  2: StorageDead(_100)
    SourceInfo(src/de.rs:563:69-563:70)
  3: StorageDead(_99)
    SourceInfo(src/de.rs:563:69-563:70)
  Terminator {
      source_info: SourceInfo(src/de.rs:563:69-563:70)
      kind: goto -> bb62
  }
  preds [bb57]
  succs [bb62]

bb62
  0: StorageDead(_83)
    SourceInfo(src/de.rs:565:5-565:6)
  1: StorageDead(_7)
    SourceInfo(src/de.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:565:5-565:6)
      kind: drop(_88) -> [return: bb63, unwind: bb82]
  }
  preds [bb60, bb61]
  succs [bb63, bb82]

bb63
  0: StorageDead(_88)
    SourceInfo(src/de.rs:565:5-565:6)
  1: StorageDead(_87)
    SourceInfo(src/de.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:565:6-565:6)
      kind: goto -> bb73
  }
  preds [bb62]
  succs [bb73]

bb64
  0: StorageDead(_92)
    SourceInfo(src/lib.rs:410:83-410:84)
  1: StorageDead(_83)
    SourceInfo(src/de.rs:565:5-565:6)
  2: StorageDead(_7)
    SourceInfo(src/de.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:565:5-565:6)
      kind: drop(_88) -> [return: bb65, unwind: bb82]
  }
  preds [bb56]
  succs [bb65, bb82]

bb65
  0: StorageDead(_88)
    SourceInfo(src/de.rs:565:5-565:6)
  1: StorageDead(_87)
    SourceInfo(src/de.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb64]
  succs [bb73]

bb66
  0: StorageDead(_71)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb67
  }
  preds [bb40]
  succs [bb67]

bb67
  Terminator {
      source_info: SourceInfo(src/de.rs:558:9-558:10)
      kind: drop(_67) -> [return: bb68, unwind: bb82]
  }
  preds [bb46, bb48, bb66]
  succs [bb68, bb82]

bb68
  0: StorageDead(_67)
    SourceInfo(src/de.rs:558:9-558:10)
  1: StorageDead(_66)
    SourceInfo(src/de.rs:558:9-558:10)
  2: StorageDead(_64)
    SourceInfo(src/de.rs:558:9-558:10)
  3: StorageDead(_63)
    SourceInfo(src/de.rs:558:9-558:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb67]
  succs [bb72]

bb69
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb70
  }
  preds [bb9]
  succs [bb70]

bb70
  Terminator {
      source_info: SourceInfo(src/de.rs:550:9-550:10)
      kind: drop(_11) -> [return: bb71, unwind: bb82]
  }
  preds [bb27, bb69]
  succs [bb71, bb82]

bb71
  0: StorageDead(_11)
    SourceInfo(src/de.rs:550:9-550:10)
  1: StorageDead(_10)
    SourceInfo(src/de.rs:550:9-550:10)
  2: StorageDead(_8)
    SourceInfo(src/de.rs:550:9-550:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb72
  }
  preds [bb70]
  succs [bb72]

bb72
  0: StorageDead(_7)
    SourceInfo(src/de.rs:565:5-565:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb73
  }
  preds [bb68, bb71]
  succs [bb73]

bb73
  Terminator {
      source_info: SourceInfo(src/de.rs:565:6-565:6)
      kind: return
  }
  preds [bb63, bb65, bb72]
  succs []

bb74
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_92) -> [return: bb75, unwind terminate(cleanup)]
  }
  preds [bb54]
  succs [bb75]

bb75
  Terminator {
      source_info: SourceInfo(src/de.rs:565:5-565:6)
      kind: drop(_88) -> [return: bb82, unwind terminate(cleanup)]
  }
  preds [bb56, bb57, bb59, bb74]
  succs [bb82]

bb76
  Terminator {
      source_info: SourceInfo(src/de.rs:556:83-556:84)
      kind: drop(_82) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb43]
  succs [bb79]

bb77
  Terminator {
      source_info: SourceInfo(src/de.rs:555:79-555:80)
      kind: drop(_78) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb44]
  succs [bb79]

bb78
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_71) -> [return: bb79, unwind terminate(cleanup)]
  }
  preds [bb38]
  succs [bb79]

bb79
  Terminator {
      source_info: SourceInfo(src/de.rs:558:9-558:10)
      kind: drop(_67) -> [return: bb82, unwind terminate(cleanup)]
  }
  preds [bb40, bb45, bb47, bb76, bb77, bb78]
  succs [bb82]

bb80
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_15) -> [return: bb81, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(src/de.rs:550:9-550:10)
      kind: drop(_11) -> [return: bb82, unwind terminate(cleanup)]
  }
  preds [bb9, bb13, bb14, bb16, bb20, bb24, bb25, bb26, bb28, bb29, bb30, bb80]
  succs [bb82]

bb82
  Terminator {
      source_info: SourceInfo(src/de.rs:530:5-565:6)
      kind: resume
  }
  preds [bb0, bb2, bb3, bb10, bb31, bb34, bb49, bb50, bb62, bb64, bb67, bb70, bb75, bb79, bb81]
  succs []

