bb0
  0: StorageLive(_3)
    SourceInfo(src/value/de.rs:1046:13-1046:20)
  1: StorageLive(_4)
    SourceInfo(src/value/de.rs:1046:23-1046:35)
  2: _4 = &(*(_1.0: &str))
    SourceInfo(src/value/de.rs:1046:23-1046:35)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1046:23-1046:55)
      kind: _3 = <&str as serde::de::IntoDeserializer<'_, error::Error>>::into_deserializer(move _4) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_4)
    SourceInfo(src/value/de.rs:1046:54-1046:55)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/value/de.rs:1046:13-1046:20)
  2: StorageLive(_5)
    SourceInfo(src/value/de.rs:1047:13-1047:20)
  3: StorageLive(_6)
    SourceInfo(src/value/de.rs:1047:55-1047:65)
  4: _6 = (_1.1: core::option::Option<&value::Value>)
    SourceInfo(src/value/de.rs:1047:55-1047:65)
  5: _5 = value::de::VariantRefDeserializer::<'_> { value: move _6 }
    SourceInfo(src/value/de.rs:1047:23-1047:67)
  6: StorageDead(_6)
    SourceInfo(src/value/de.rs:1047:66-1047:67)
  7: FakeRead(ForLet(None), _5)
    SourceInfo(src/value/de.rs:1047:13-1047:20)
  8: StorageLive(_7)
    SourceInfo(src/value/de.rs:1048:9-1048:34)
  9: StorageLive(_8)
    SourceInfo(src/value/de.rs:1048:9-1048:13)
  10: _8 = move _2
    SourceInfo(src/value/de.rs:1048:9-1048:13)
  11: StorageLive(_9)
    SourceInfo(src/value/de.rs:1048:26-1048:33)
  12: _9 = _3
    SourceInfo(src/value/de.rs:1048:26-1048:33)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1048:9-1048:34)
      kind: _7 = <V as serde::de::DeserializeSeed<'_>>::deserialize::<serde::de::value::StrDeserializer<'_, error::Error>>(move _8, move _9) -> [return: bb2, unwind: bb6]
  }
  preds [bb0]
  succs [bb2, bb6]

bb2
  0: StorageDead(_9)
    SourceInfo(src/value/de.rs:1048:33-1048:34)
  1: StorageDead(_8)
    SourceInfo(src/value/de.rs:1048:33-1048:34)
  2: StorageLive(_10)
    SourceInfo(src/value/de.rs:1048:39-1048:55)
  3: _10 = {closure@src/value/de.rs:1048:39: 1048:42} { visitor: move _5 }
    SourceInfo(src/value/de.rs:1048:39-1048:55)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1048:9-1048:56)
      kind: _0 = core::result::Result::<<V as serde::de::DeserializeSeed<'_>>::Value, error::Error>::map::<(<V as serde::de::DeserializeSeed<'_>>::Value, value::de::VariantRefDeserializer<'_>), {closure@src/value/de.rs:1048:39: 1048:42}>(move _7, move _10) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_10)
    SourceInfo(src/value/de.rs:1048:55-1048:56)
  1: StorageDead(_7)
    SourceInfo(src/value/de.rs:1048:55-1048:56)
  2: StorageDead(_5)
    SourceInfo(src/value/de.rs:1049:5-1049:6)
  3: StorageDead(_3)
    SourceInfo(src/value/de.rs:1049:5-1049:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1049:5-1049:6)
      kind: drop(_2) -> [return: bb4, unwind: bb8]
  }
  preds [bb2]
  succs [bb4, bb8]

bb4
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1049:6-1049:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1048:55-1048:56)
      kind: drop(_7) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb2]
  succs [bb7]

bb6
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1048:33-1048:34)
      kind: drop(_8) -> [return: bb7, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb7]

bb7
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1049:5-1049:6)
      kind: drop(_2) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb0, bb5, bb6]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1042:5-1049:6)
      kind: resume
  }
  preds [bb3, bb7]
  succs []

