bb0
  0: StorageLive(_3)
    SourceInfo(src/ser.rs:1062:9-1062:17)
  1: _3 = &mut (*(_1.0: &mut ser::Serializer<W, F>))
    SourceInfo(src/ser.rs:1062:9-1062:17)
  2: StorageLive(_4)
    SourceInfo(src/ser.rs:1062:32-1062:64)
  3: StorageLive(_5)
    SourceInfo(src/ser.rs:1062:32-1062:64)
  4: StorageLive(_6)
    SourceInfo(src/ser.rs:1062:32-1062:37)
  5: _6 = _2
    SourceInfo(src/ser.rs:1062:32-1062:37)
  6: StorageLive(_7)
    SourceInfo(src/ser.rs:1062:50-1062:63)
  7: StorageLive(_8)
    SourceInfo(src/ser.rs:1062:50-1062:63)
  8: StorageLive(_9)
    SourceInfo(src/ser.rs:1062:50-1062:63)
  9: StorageLive(_10)
    SourceInfo(src/ser.rs:1062:55-1062:63)
  10: _10 = [const 0_u8; 4]
    SourceInfo(src/ser.rs:1062:55-1062:63)
  11: _9 = &mut _10
    SourceInfo(src/ser.rs:1062:50-1062:63)
  12: _8 = &mut (*_9)
    SourceInfo(src/ser.rs:1062:50-1062:63)
  13: _7 = move _8 as &mut [u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:1062:50-1062:63)
  14: StorageDead(_8)
    SourceInfo(src/ser.rs:1062:62-1062:63)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1062:32-1062:64)
      kind: _5 = core::char::methods::<impl char>::encode_utf8(move _6, move _7) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _4 = &(*_5)
    SourceInfo(src/ser.rs:1062:32-1062:64)
  1: StorageDead(_7)
    SourceInfo(src/ser.rs:1062:63-1062:64)
  2: StorageDead(_6)
    SourceInfo(src/ser.rs:1062:63-1062:64)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1062:9-1062:65)
      kind: _0 = <&mut ser::Serializer<W, F> as serde::Serializer>::serialize_str(move _3, move _4) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_4)
    SourceInfo(src/ser.rs:1062:64-1062:65)
  1: StorageDead(_3)
    SourceInfo(src/ser.rs:1062:64-1062:65)
  2: StorageDead(_10)
    SourceInfo(src/ser.rs:1063:5-1063:6)
  3: StorageDead(_9)
    SourceInfo(src/ser.rs:1063:5-1063:6)
  4: StorageDead(_5)
    SourceInfo(src/ser.rs:1063:5-1063:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1063:6-1063:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/ser.rs:1061:5-1063:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

