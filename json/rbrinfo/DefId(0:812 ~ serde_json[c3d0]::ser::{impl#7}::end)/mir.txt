bb0
  0: PlaceMention(_1)
    SourceInfo(src/ser.rs:589:15-589:19)
  1: StorageLive(_2)
    SourceInfo(src/ser.rs:590:29-590:32)
  2: _2 = move ((_1 as Map).0: &mut ser::Serializer<W, F>)
    SourceInfo(src/ser.rs:590:29-590:32)
  3: StorageLive(_3)
    SourceInfo(src/ser.rs:590:34-590:39)
  4: _3 = move ((_1 as Map).1: ser::State)
    SourceInfo(src/ser.rs:590:34-590:39)
  5: StorageLive(_4)
    SourceInfo(src/ser.rs:591:17-594:18)
  6: PlaceMention(_3)
    SourceInfo(src/ser.rs:591:23-591:28)
  7: _5 = discriminant(_3)
    SourceInfo(src/ser.rs:591:23-591:28)
  Terminator {
      source_info: SourceInfo(src/ser.rs:591:17-591:28)
      kind: switchInt(move _5) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_6)
    SourceInfo(src/ser.rs:593:31-593:90)
  1: StorageLive(_7)
    SourceInfo(src/ser.rs:593:31-593:71)
  2: StorageLive(_8)
    SourceInfo(src/ser.rs:593:31-593:44)
  3: _8 = &mut ((*_2).1: F)
    SourceInfo(src/ser.rs:593:31-593:44)
  4: StorageLive(_9)
    SourceInfo(src/ser.rs:593:55-593:70)
  5: StorageLive(_10)
    SourceInfo(src/ser.rs:593:55-593:70)
  6: _10 = &mut ((*_2).0: W)
    SourceInfo(src/ser.rs:593:55-593:70)
  7: _9 = &mut (*_10)
    SourceInfo(src/ser.rs:593:55-593:70)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:31-593:71)
      kind: _7 = <F as ser::Formatter>::end_array::<W>(move _8, move _9) -> [return: bb4, unwind: bb36]
  }
  preds [bb0, bb2]
  succs [bb4, bb36]

bb2
  Terminator {
      source_info: SourceInfo(src/ser.rs:592:21-592:33)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: _4 = const ()
    SourceInfo(src/ser.rs:592:37-592:39)
  Terminator {
      source_info: SourceInfo(src/ser.rs:592:37-592:39)
      kind: goto -> bb12
  }
  preds [bb2]
  succs [bb12]

bb4
  0: StorageDead(_9)
    SourceInfo(src/ser.rs:593:70-593:71)
  1: StorageDead(_8)
    SourceInfo(src/ser.rs:593:70-593:71)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:31-593:90)
      kind: _6 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _7, error::Error::io) -> [return: bb5, unwind: bb35]
  }
  preds [bb1]
  succs [bb5, bb35]

bb5
  0: StorageDead(_7)
    SourceInfo(src/ser.rs:593:89-593:90)
  1: PlaceMention(_6)
    SourceInfo(src/ser.rs:593:31-593:90)
  2: _11 = discriminant(_6)
    SourceInfo(src/ser.rs:593:31-593:90)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _11) -> [0: bb7, 1: bb8, otherwise: bb6]
  }
  preds [bb4]
  succs [bb6, bb7, bb8]

bb6
  0: FakeRead(ForMatchedPlace(None), _6)
    SourceInfo(src/ser.rs:593:31-593:90)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:31-593:90)
      kind: unreachable
  }
  preds [bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb9, imaginary: bb8]
  }
  preds [bb5]
  succs [bb8, bb9]

bb8
  0: StorageLive(_13)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _13 = move ((_6 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_15)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _15 = move _13
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), error::Error>::Err(move _15)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_15) -> [return: bb10, unwind: bb33]
  }
  preds [bb5, bb7]
  succs [bb10, bb33]

bb9
  0: StorageLive(_12)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _12 = ((_6 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _4 = _12
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_12)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:90-593:91)
      kind: drop(_6) -> [return: bb11, unwind: bb36]
  }
  preds [bb7]
  succs [bb11, bb36]

bb10
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb25, unwind: bb34]
  }
  preds [bb8]
  succs [bb25, bb34]

bb11
  0: StorageDead(_10)
    SourceInfo(src/ser.rs:593:90-593:91)
  1: StorageDead(_6)
    SourceInfo(src/ser.rs:593:90-593:91)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:90-593:91)
      kind: goto -> bb12
  }
  preds [bb9]
  succs [bb12]

bb12
  0: StorageDead(_4)
    SourceInfo(src/ser.rs:594:17-594:18)
  1: StorageLive(_16)
    SourceInfo(src/lib.rs:408:9-411:10)
  2: StorageLive(_17)
    SourceInfo(src/ser.rs:595:22-598:40)
  3: StorageLive(_18)
    SourceInfo(src/ser.rs:595:22-597:55)
  4: StorageLive(_19)
    SourceInfo(src/ser.rs:595:22-596:31)
  5: _19 = &mut ((*_2).1: F)
    SourceInfo(src/ser.rs:595:22-596:31)
  6: StorageLive(_20)
    SourceInfo(src/ser.rs:597:39-597:54)
  7: StorageLive(_21)
    SourceInfo(src/ser.rs:597:39-597:54)
  8: _21 = &mut ((*_2).0: W)
    SourceInfo(src/ser.rs:597:39-597:54)
  9: _20 = &mut (*_21)
    SourceInfo(src/ser.rs:597:39-597:54)
  Terminator {
      source_info: SourceInfo(src/ser.rs:595:22-597:55)
      kind: _18 = <F as ser::Formatter>::end_object_value::<W>(move _19, move _20) -> [return: bb13, unwind: bb36]
  }
  preds [bb3, bb11]
  succs [bb13, bb36]

bb13
  0: StorageDead(_20)
    SourceInfo(src/ser.rs:597:54-597:55)
  1: StorageDead(_19)
    SourceInfo(src/ser.rs:597:54-597:55)
  Terminator {
      source_info: SourceInfo(src/ser.rs:595:22-598:40)
      kind: _17 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _18, error::Error::io) -> [return: bb14, unwind: bb32]
  }
  preds [bb12]
  succs [bb14, bb32]

bb14
  0: StorageDead(_18)
    SourceInfo(src/ser.rs:598:39-598:40)
  1: PlaceMention(_17)
    SourceInfo(src/ser.rs:595:22-598:40)
  2: _22 = discriminant(_17)
    SourceInfo(src/ser.rs:595:22-598:40)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _22) -> [0: bb16, 1: bb17, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16, bb17]

bb15
  0: FakeRead(ForMatchedPlace(None), _17)
    SourceInfo(src/ser.rs:595:22-598:40)
  Terminator {
      source_info: SourceInfo(src/ser.rs:595:22-598:40)
      kind: unreachable
  }
  preds [bb14]
  succs []

bb16
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb18, imaginary: bb17]
  }
  preds [bb14]
  succs [bb17, bb18]

bb17
  0: StorageLive(_24)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _24 = move ((_17 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_26)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _26 = move _24
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), error::Error>::Err(move _26)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_26) -> [return: bb19, unwind: bb30]
  }
  preds [bb14, bb16]
  succs [bb19, bb30]

bb18
  0: StorageLive(_23)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _23 = ((_17 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _16 = _23
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_23)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_17) -> [return: bb20, unwind: bb36]
  }
  preds [bb16]
  succs [bb20, bb36]

bb19
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_24) -> [return: bb23, unwind: bb31]
  }
  preds [bb17]
  succs [bb23, bb31]

bb20
  0: StorageDead(_21)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_17)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_16)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageLive(_27)
    SourceInfo(src/ser.rs:599:17-599:58)
  4: StorageLive(_28)
    SourceInfo(src/ser.rs:599:17-599:30)
  5: _28 = &mut ((*_2).1: F)
    SourceInfo(src/ser.rs:599:17-599:30)
  6: StorageLive(_29)
    SourceInfo(src/ser.rs:599:42-599:57)
  7: StorageLive(_30)
    SourceInfo(src/ser.rs:599:42-599:57)
  8: _30 = &mut ((*_2).0: W)
    SourceInfo(src/ser.rs:599:42-599:57)
  9: _29 = &mut (*_30)
    SourceInfo(src/ser.rs:599:42-599:57)
  Terminator {
      source_info: SourceInfo(src/ser.rs:599:17-599:58)
      kind: _27 = <F as ser::Formatter>::end_object::<W>(move _28, move _29) -> [return: bb21, unwind: bb36]
  }
  preds [bb18]
  succs [bb21, bb36]

bb21
  0: StorageDead(_29)
    SourceInfo(src/ser.rs:599:57-599:58)
  1: StorageDead(_28)
    SourceInfo(src/ser.rs:599:57-599:58)
  Terminator {
      source_info: SourceInfo(src/ser.rs:599:17-599:77)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _27, error::Error::io) -> [return: bb22, unwind: bb29]
  }
  preds [bb20]
  succs [bb22, bb29]

bb22
  0: StorageDead(_27)
    SourceInfo(src/ser.rs:599:76-599:77)
  1: StorageDead(_30)
    SourceInfo(src/ser.rs:600:13-600:14)
  2: StorageDead(_3)
    SourceInfo(src/ser.rs:600:13-600:14)
  3: StorageDead(_2)
    SourceInfo(src/ser.rs:600:13-600:14)
  Terminator {
      source_info: SourceInfo(src/ser.rs:600:13-600:14)
      kind: goto -> bb28
  }
  preds [bb21]
  succs [bb28]

bb23
  0: StorageDead(_24)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_17) -> [return: bb24, unwind: bb36]
  }
  preds [bb19]
  succs [bb24, bb36]

bb24
  0: StorageDead(_21)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_17)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_16)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb23]
  succs [bb27]

bb25
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:90-593:91)
      kind: drop(_6) -> [return: bb26, unwind: bb36]
  }
  preds [bb10]
  succs [bb26, bb36]

bb26
  0: StorageDead(_10)
    SourceInfo(src/ser.rs:593:90-593:91)
  1: StorageDead(_6)
    SourceInfo(src/ser.rs:593:90-593:91)
  2: StorageDead(_4)
    SourceInfo(src/ser.rs:594:17-594:18)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb27
  }
  preds [bb25]
  succs [bb27]

bb27
  0: StorageDead(_3)
    SourceInfo(src/ser.rs:600:13-600:14)
  1: StorageDead(_2)
    SourceInfo(src/ser.rs:600:13-600:14)
  Terminator {
      source_info: SourceInfo(src/ser.rs:606:6-606:6)
      kind: goto -> bb28
  }
  preds [bb24, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/ser.rs:606:6-606:6)
      kind: return
  }
  preds [bb22, bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(src/ser.rs:599:76-599:77)
      kind: drop(_27) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb36]

bb30
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_24) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb17]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_17) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb19, bb30]
  succs [bb36]

bb32
  Terminator {
      source_info: SourceInfo(src/ser.rs:598:39-598:40)
      kind: drop(_18) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb13]
  succs [bb36]

bb33
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb34, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb34]

bb34
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:90-593:91)
      kind: drop(_6) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb10, bb33]
  succs [bb36]

bb35
  Terminator {
      source_info: SourceInfo(src/ser.rs:593:89-593:90)
      kind: drop(_7) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/ser.rs:588:5-606:6)
      kind: resume
  }
  preds [bb1, bb9, bb12, bb18, bb20, bb23, bb25, bb29, bb31, bb32, bb34, bb35]
  succs []

