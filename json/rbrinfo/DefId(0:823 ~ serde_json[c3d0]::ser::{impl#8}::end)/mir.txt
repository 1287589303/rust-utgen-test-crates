bb0
  0: PlaceMention(_1)
    SourceInfo(src/ser.rs:668:15-668:19)
  1: StorageLive(_2)
    SourceInfo(src/ser.rs:669:29-669:32)
  2: _2 = move ((_1 as Map).0: &mut ser::Serializer<W, F>)
    SourceInfo(src/ser.rs:669:29-669:32)
  3: StorageLive(_3)
    SourceInfo(src/ser.rs:669:34-669:39)
  4: _3 = move ((_1 as Map).1: ser::State)
    SourceInfo(src/ser.rs:669:34-669:39)
  5: PlaceMention(_3)
    SourceInfo(src/ser.rs:669:51-669:56)
  6: _4 = discriminant(_3)
    SourceInfo(src/ser.rs:669:51-669:56)
  Terminator {
      source_info: SourceInfo(src/ser.rs:669:45-669:56)
      kind: switchInt(move _4) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_6)
    SourceInfo(src/ser.rs:671:22-671:63)
  1: StorageLive(_7)
    SourceInfo(src/ser.rs:671:22-671:35)
  2: _7 = &mut ((*_2).1: F)
    SourceInfo(src/ser.rs:671:22-671:35)
  3: StorageLive(_8)
    SourceInfo(src/ser.rs:671:47-671:62)
  4: StorageLive(_9)
    SourceInfo(src/ser.rs:671:47-671:62)
  5: _9 = &mut ((*_2).0: W)
    SourceInfo(src/ser.rs:671:47-671:62)
  6: _8 = &mut (*_9)
    SourceInfo(src/ser.rs:671:47-671:62)
  Terminator {
      source_info: SourceInfo(src/ser.rs:671:22-671:63)
      kind: _6 = <F as ser::Formatter>::end_object::<W>(move _7, move _8) -> [return: bb4, unwind: bb8]
  }
  preds [bb0, bb2]
  succs [bb4, bb8]

bb2
  Terminator {
      source_info: SourceInfo(src/ser.rs:670:17-670:29)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_5)
    SourceInfo(src/ser.rs:670:36-670:38)
  1: _5 = ()
    SourceInfo(src/ser.rs:670:36-670:38)
  2: _0 = core::result::Result::<(), error::Error>::Ok(move _5)
    SourceInfo(src/ser.rs:670:33-670:39)
  3: StorageDead(_5)
    SourceInfo(src/ser.rs:670:38-670:39)
  Terminator {
      source_info: SourceInfo(src/ser.rs:670:38-670:39)
      kind: goto -> bb6
  }
  preds [bb2]
  succs [bb6]

bb4
  0: StorageDead(_8)
    SourceInfo(src/ser.rs:671:62-671:63)
  1: StorageDead(_7)
    SourceInfo(src/ser.rs:671:62-671:63)
  Terminator {
      source_info: SourceInfo(src/ser.rs:671:22-671:82)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _6, error::Error::io) -> [return: bb5, unwind: bb7]
  }
  preds [bb1]
  succs [bb5, bb7]

bb5
  0: StorageDead(_6)
    SourceInfo(src/ser.rs:671:81-671:82)
  1: StorageDead(_9)
    SourceInfo(src/ser.rs:671:81-671:82)
  Terminator {
      source_info: SourceInfo(src/ser.rs:671:81-671:82)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(src/ser.rs:672:13-672:14)
  1: StorageDead(_2)
    SourceInfo(src/ser.rs:672:13-672:14)
  Terminator {
      source_info: SourceInfo(src/ser.rs:678:6-678:6)
      kind: return
  }
  preds [bb3, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/ser.rs:671:81-671:82)
      kind: drop(_6) -> [return: bb8, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb8]

bb8
  Terminator {
      source_info: SourceInfo(src/ser.rs:667:5-678:6)
      kind: resume
  }
  preds [bb1, bb7]
  succs []

