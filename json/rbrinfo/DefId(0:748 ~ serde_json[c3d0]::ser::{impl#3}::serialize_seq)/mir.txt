bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:408:9-411:10)
  1: StorageLive(_4)
    SourceInfo(src/ser.rs:283:14-286:32)
  2: StorageLive(_5)
    SourceInfo(src/ser.rs:283:14-285:43)
  3: StorageLive(_6)
    SourceInfo(src/ser.rs:283:14-284:23)
  4: _6 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:283:14-284:23)
  5: StorageLive(_7)
    SourceInfo(src/ser.rs:285:26-285:42)
  6: StorageLive(_8)
    SourceInfo(src/ser.rs:285:26-285:42)
  7: _8 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:285:26-285:42)
  8: _7 = &mut (*_8)
    SourceInfo(src/ser.rs:285:26-285:42)
  Terminator {
      source_info: SourceInfo(src/ser.rs:283:14-285:43)
      kind: _5 = <F as ser::Formatter>::begin_array::<W>(move _6, move _7) -> [return: bb1, unwind: bb32]
  }
  preds []
  succs [bb1, bb32]

bb1
  0: StorageDead(_7)
    SourceInfo(src/ser.rs:285:42-285:43)
  1: StorageDead(_6)
    SourceInfo(src/ser.rs:285:42-285:43)
  Terminator {
      source_info: SourceInfo(src/ser.rs:283:14-286:32)
      kind: _4 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _5, error::Error::io) -> [return: bb2, unwind: bb31]
  }
  preds [bb0]
  succs [bb2, bb31]

bb2
  0: StorageDead(_5)
    SourceInfo(src/ser.rs:286:31-286:32)
  1: PlaceMention(_4)
    SourceInfo(src/ser.rs:283:14-286:32)
  2: _9 = discriminant(_4)
    SourceInfo(src/ser.rs:283:14-286:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _9) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/ser.rs:283:14-286:32)
  Terminator {
      source_info: SourceInfo(src/ser.rs:283:14-286:32)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _11 = move ((_4 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_13)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _13 = move _11
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<ser::Compound<'_, W, F>, error::Error>::Err(move _13)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb7, unwind: bb29]
  }
  preds [bb2, bb4]
  succs [bb7, bb29]

bb6
  0: StorageLive(_10)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _10 = ((_4 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _3 = _10
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_10)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb8, unwind: bb32]
  }
  preds [bb4]
  succs [bb8, bb32]

bb7
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_11) -> [return: bb23, unwind: bb30]
  }
  preds [bb5]
  succs [bb23, bb30]

bb8
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_3)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageLive(_14)
    SourceInfo(src/ser.rs:287:12-287:26)
  4: StorageLive(_15)
    SourceInfo(src/ser.rs:287:12-287:15)
  5: _15 = &_2
    SourceInfo(src/ser.rs:287:12-287:15)
  6: StorageLive(_16)
    SourceInfo(src/ser.rs:287:19-287:26)
  7: StorageLive(_17)
    SourceInfo(src/ser.rs:287:19-287:26)
  8: _17 = core::option::Option::<usize>::Some(const 0_usize)
    SourceInfo(src/ser.rs:287:19-287:26)
  9: _16 = &_17
    SourceInfo(src/ser.rs:287:19-287:26)
  Terminator {
      source_info: SourceInfo(src/ser.rs:287:12-287:26)
      kind: _14 = <core::option::Option<usize> as core::cmp::PartialEq>::eq(move _15, move _16) -> [return: bb9, unwind: bb32]
  }
  preds [bb6]
  succs [bb9, bb32]

bb9
  Terminator {
      source_info: SourceInfo(src/ser.rs:287:12-287:26)
      kind: switchInt(move _14) -> [0: bb19, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb19]

bb10
  0: StorageDead(_17)
    SourceInfo(src/ser.rs:287:25-287:26)
  1: StorageDead(_16)
    SourceInfo(src/ser.rs:287:25-287:26)
  2: StorageDead(_15)
    SourceInfo(src/ser.rs:287:25-287:26)
  3: StorageLive(_18)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_19)
    SourceInfo(src/ser.rs:288:18-291:36)
  5: StorageLive(_20)
    SourceInfo(src/ser.rs:288:18-290:45)
  6: StorageLive(_21)
    SourceInfo(src/ser.rs:288:18-289:27)
  7: _21 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:288:18-289:27)
  8: StorageLive(_22)
    SourceInfo(src/ser.rs:290:28-290:44)
  9: StorageLive(_23)
    SourceInfo(src/ser.rs:290:28-290:44)
  10: _23 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:290:28-290:44)
  11: _22 = &mut (*_23)
    SourceInfo(src/ser.rs:290:28-290:44)
  Terminator {
      source_info: SourceInfo(src/ser.rs:288:18-290:45)
      kind: _20 = <F as ser::Formatter>::end_array::<W>(move _21, move _22) -> [return: bb11, unwind: bb32]
  }
  preds [bb9]
  succs [bb11, bb32]

bb11
  0: StorageDead(_22)
    SourceInfo(src/ser.rs:290:44-290:45)
  1: StorageDead(_21)
    SourceInfo(src/ser.rs:290:44-290:45)
  Terminator {
      source_info: SourceInfo(src/ser.rs:288:18-291:36)
      kind: _19 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _20, error::Error::io) -> [return: bb12, unwind: bb28]
  }
  preds [bb10]
  succs [bb12, bb28]

bb12
  0: StorageDead(_20)
    SourceInfo(src/ser.rs:291:35-291:36)
  1: PlaceMention(_19)
    SourceInfo(src/ser.rs:288:18-291:36)
  2: _24 = discriminant(_19)
    SourceInfo(src/ser.rs:288:18-291:36)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _24) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _19)
    SourceInfo(src/ser.rs:288:18-291:36)
  Terminator {
      source_info: SourceInfo(src/ser.rs:288:18-291:36)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_26)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _26 = move ((_19 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_28)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _28 = move _26
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<ser::Compound<'_, W, F>, error::Error>::Err(move _28)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_28) -> [return: bb17, unwind: bb26]
  }
  preds [bb12, bb14]
  succs [bb17, bb26]

bb16
  0: StorageLive(_25)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _25 = ((_19 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _18 = _25
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_25)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_19) -> [return: bb18, unwind: bb32]
  }
  preds [bb14]
  succs [bb18, bb32]

bb17
  0: StorageDead(_28)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_26) -> [return: bb21, unwind: bb27]
  }
  preds [bb15]
  succs [bb21, bb27]

bb18
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_19)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_18)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageLive(_29)
    SourceInfo(src/ser.rs:292:16-295:14)
  4: StorageLive(_30)
    SourceInfo(src/ser.rs:293:22-293:26)
  5: _30 = &mut (*_1)
    SourceInfo(src/ser.rs:293:22-293:26)
  6: StorageLive(_31)
    SourceInfo(src/ser.rs:294:24-294:36)
  7: _31 = ser::State::Empty
    SourceInfo(src/ser.rs:294:24-294:36)
  8: _29 = ser::Compound::<'_, W, F>::Map { ser: move _30, state: move _31 }
    SourceInfo(src/ser.rs:292:16-295:14)
  9: StorageDead(_31)
    SourceInfo(src/ser.rs:295:13-295:14)
  10: StorageDead(_30)
    SourceInfo(src/ser.rs:295:13-295:14)
  11: _0 = core::result::Result::<ser::Compound<'_, W, F>, error::Error>::Ok(move _29)
    SourceInfo(src/ser.rs:292:13-295:15)
  12: StorageDead(_29)
    SourceInfo(src/ser.rs:295:14-295:15)
  Terminator {
      source_info: SourceInfo(src/ser.rs:287:9-301:10)
      kind: goto -> bb20
  }
  preds [bb16]
  succs [bb20]

bb19
  0: StorageDead(_17)
    SourceInfo(src/ser.rs:287:25-287:26)
  1: StorageDead(_16)
    SourceInfo(src/ser.rs:287:25-287:26)
  2: StorageDead(_15)
    SourceInfo(src/ser.rs:287:25-287:26)
  3: StorageLive(_32)
    SourceInfo(src/ser.rs:297:16-300:14)
  4: StorageLive(_33)
    SourceInfo(src/ser.rs:298:22-298:26)
  5: _33 = &mut (*_1)
    SourceInfo(src/ser.rs:298:22-298:26)
  6: StorageLive(_34)
    SourceInfo(src/ser.rs:299:24-299:36)
  7: _34 = ser::State::First
    SourceInfo(src/ser.rs:299:24-299:36)
  8: _32 = ser::Compound::<'_, W, F>::Map { ser: move _33, state: move _34 }
    SourceInfo(src/ser.rs:297:16-300:14)
  9: StorageDead(_34)
    SourceInfo(src/ser.rs:300:13-300:14)
  10: StorageDead(_33)
    SourceInfo(src/ser.rs:300:13-300:14)
  11: _0 = core::result::Result::<ser::Compound<'_, W, F>, error::Error>::Ok(move _32)
    SourceInfo(src/ser.rs:297:13-300:15)
  12: StorageDead(_32)
    SourceInfo(src/ser.rs:300:14-300:15)
  Terminator {
      source_info: SourceInfo(src/ser.rs:287:9-301:10)
      kind: goto -> bb20
  }
  preds [bb9]
  succs [bb20]

bb20
  0: StorageDead(_14)
    SourceInfo(src/ser.rs:301:9-301:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:302:6-302:6)
      kind: goto -> bb25
  }
  preds [bb18, bb19]
  succs [bb25]

bb21
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_19) -> [return: bb22, unwind: bb32]
  }
  preds [bb17]
  succs [bb22, bb32]

bb22
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_19)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_18)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageDead(_14)
    SourceInfo(src/ser.rs:301:9-301:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb21]
  succs [bb25]

bb23
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb24, unwind: bb32]
  }
  preds [bb7]
  succs [bb24, bb32]

bb24
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_3)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb25
  }
  preds [bb23]
  succs [bb25]

bb25
  Terminator {
      source_info: SourceInfo(src/ser.rs:302:6-302:6)
      kind: return
  }
  preds [bb20, bb22, bb24]
  succs []

bb26
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_26) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_19) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb17, bb26]
  succs [bb32]

bb28
  Terminator {
      source_info: SourceInfo(src/ser.rs:291:35-291:36)
      kind: drop(_20) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb11]
  succs [bb32]

bb29
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_11) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb7, bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(src/ser.rs:286:31-286:32)
      kind: drop(_5) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/ser.rs:282:5-302:6)
      kind: resume
  }
  preds [bb0, bb6, bb8, bb10, bb16, bb21, bb23, bb27, bb28, bb30, bb31]
  succs []

