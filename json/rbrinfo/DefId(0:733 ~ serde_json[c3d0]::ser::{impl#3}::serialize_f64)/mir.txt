bb0
  0: StorageLive(_3)
    SourceInfo(src/ser.rs:168:15-168:31)
  1: StorageLive(_4)
    SourceInfo(src/ser.rs:168:15-168:20)
  2: _4 = _2
    SourceInfo(src/ser.rs:168:15-168:20)
  Terminator {
      source_info: SourceInfo(src/ser.rs:168:15-168:31)
      kind: _3 = core::f64::<impl f64>::classify(move _4) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_4)
    SourceInfo(src/ser.rs:168:30-168:31)
  1: PlaceMention(_3)
    SourceInfo(src/ser.rs:168:15-168:31)
  2: _5 = discriminant(_3)
    SourceInfo(src/ser.rs:168:15-168:31)
  Terminator {
      source_info: SourceInfo(src/ser.rs:168:9-168:31)
      kind: switchInt(move _5) -> [0: bb3, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb3]

bb2
  0: StorageLive(_10)
    SourceInfo(src/ser.rs:173:18-175:52)
  1: StorageLive(_11)
    SourceInfo(src/ser.rs:173:18-174:27)
  2: _11 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:173:18-174:27)
  3: StorageLive(_12)
    SourceInfo(src/ser.rs:175:28-175:44)
  4: StorageLive(_13)
    SourceInfo(src/ser.rs:175:28-175:44)
  5: _13 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:175:28-175:44)
  6: _12 = &mut (*_13)
    SourceInfo(src/ser.rs:175:28-175:44)
  7: StorageLive(_14)
    SourceInfo(src/ser.rs:175:46-175:51)
  8: _14 = _2
    SourceInfo(src/ser.rs:175:46-175:51)
  Terminator {
      source_info: SourceInfo(src/ser.rs:173:18-175:52)
      kind: _10 = <F as ser::Formatter>::write_f64::<W>(move _11, move _12, move _14) -> [return: bb7, unwind: bb12]
  }
  preds [bb1, bb3]
  succs [bb7, bb12]

bb3
  Terminator {
      source_info: SourceInfo(src/ser.rs:169:13-169:51)
      kind: falseEdge -> [real: bb4, imaginary: bb2]
  }
  preds [bb1, bb1]
  succs [bb2, bb4]

bb4
  0: StorageLive(_6)
    SourceInfo(src/ser.rs:169:55-171:46)
  1: StorageLive(_7)
    SourceInfo(src/ser.rs:169:55-170:27)
  2: _7 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:169:55-170:27)
  3: StorageLive(_8)
    SourceInfo(src/ser.rs:171:29-171:45)
  4: StorageLive(_9)
    SourceInfo(src/ser.rs:171:29-171:45)
  5: _9 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:171:29-171:45)
  6: _8 = &mut (*_9)
    SourceInfo(src/ser.rs:171:29-171:45)
  Terminator {
      source_info: SourceInfo(src/ser.rs:169:55-171:46)
      kind: _6 = <F as ser::Formatter>::write_null::<W>(move _7, move _8) -> [return: bb5, unwind: bb12]
  }
  preds [bb3]
  succs [bb5, bb12]

bb5
  0: StorageDead(_8)
    SourceInfo(src/ser.rs:171:45-171:46)
  1: StorageDead(_7)
    SourceInfo(src/ser.rs:171:45-171:46)
  Terminator {
      source_info: SourceInfo(src/ser.rs:169:55-172:36)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _6, error::Error::io) -> [return: bb6, unwind: bb11]
  }
  preds [bb4]
  succs [bb6, bb11]

bb6
  0: StorageDead(_6)
    SourceInfo(src/ser.rs:172:35-172:36)
  1: StorageDead(_9)
    SourceInfo(src/ser.rs:172:35-172:36)
  Terminator {
      source_info: SourceInfo(src/ser.rs:172:35-172:36)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: StorageDead(_14)
    SourceInfo(src/ser.rs:175:51-175:52)
  1: StorageDead(_12)
    SourceInfo(src/ser.rs:175:51-175:52)
  2: StorageDead(_11)
    SourceInfo(src/ser.rs:175:51-175:52)
  Terminator {
      source_info: SourceInfo(src/ser.rs:173:18-176:36)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _10, error::Error::io) -> [return: bb8, unwind: bb10]
  }
  preds [bb2]
  succs [bb8, bb10]

bb8
  0: StorageDead(_10)
    SourceInfo(src/ser.rs:176:35-176:36)
  1: StorageDead(_13)
    SourceInfo(src/ser.rs:176:35-176:36)
  Terminator {
      source_info: SourceInfo(src/ser.rs:176:35-176:36)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(src/ser.rs:178:5-178:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:178:6-178:6)
      kind: return
  }
  preds [bb6, bb8]
  succs []

bb10
  Terminator {
      source_info: SourceInfo(src/ser.rs:176:35-176:36)
      kind: drop(_10) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb12]

bb11
  Terminator {
      source_info: SourceInfo(src/ser.rs:172:35-172:36)
      kind: drop(_6) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/ser.rs:167:5-178:6)
      kind: resume
  }
  preds [bb0, bb2, bb4, bb10, bb11]
  succs []

