bb0
  0: StorageLive(_3)
    SourceInfo(src/read.rs:979:5-982:6)
  1: StorageLive(_4)
    SourceInfo(src/read.rs:979:8-979:16)
  2: StorageLive(_5)
    SourceInfo(src/read.rs:979:8-979:9)
  3: _5 = _1
    SourceInfo(src/read.rs:979:8-979:9)
  4: _4 = Lt(move _5, const 128_u32)
    SourceInfo(src/read.rs:979:8-979:16)
  Terminator {
      source_info: SourceInfo(src/read.rs:979:8-979:16)
      kind: switchInt(move _4) -> [0: bb3, otherwise: bb1]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_5)
    SourceInfo(src/read.rs:979:15-979:16)
  1: StorageLive(_7)
    SourceInfo(src/read.rs:980:9-980:30)
  2: StorageLive(_8)
    SourceInfo(src/read.rs:980:9-980:16)
  3: _8 = &mut (*_2)
    SourceInfo(src/read.rs:980:9-980:16)
  4: StorageLive(_9)
    SourceInfo(src/read.rs:980:22-980:29)
  5: StorageLive(_10)
    SourceInfo(src/read.rs:980:22-980:23)
  6: _10 = _1
    SourceInfo(src/read.rs:980:22-980:23)
  7: _9 = move _10 as u8 (IntToInt)
    SourceInfo(src/read.rs:980:22-980:29)
  8: StorageDead(_10)
    SourceInfo(src/read.rs:980:28-980:29)
  Terminator {
      source_info: SourceInfo(src/read.rs:980:9-980:30)
      kind: _7 = alloc::vec::Vec::<u8>::push(move _8, move _9) -> [return: bb2, unwind: bb49]
  }
  preds [bb0]
  succs [bb2, bb49]

bb2
  0: StorageDead(_9)
    SourceInfo(src/read.rs:980:29-980:30)
  1: StorageDead(_8)
    SourceInfo(src/read.rs:980:29-980:30)
  2: StorageDead(_7)
    SourceInfo(src/read.rs:980:30-980:31)
  3: _0 = const ()
    SourceInfo(src/read.rs:981:9-981:15)
  4: StorageDead(_4)
    SourceInfo(src/read.rs:982:5-982:6)
  5: StorageDead(_3)
    SourceInfo(src/read.rs:982:5-982:6)
  Terminator {
      source_info: SourceInfo(src/read.rs:1021:2-1021:2)
      kind: goto -> bb48
  }
  preds [bb1]
  succs [bb48]

bb3
  0: StorageDead(_5)
    SourceInfo(src/read.rs:979:15-979:16)
  1: _3 = const ()
    SourceInfo(src/read.rs:982:6-982:6)
  2: StorageDead(_4)
    SourceInfo(src/read.rs:982:5-982:6)
  3: StorageDead(_3)
    SourceInfo(src/read.rs:982:5-982:6)
  4: StorageLive(_11)
    SourceInfo(src/read.rs:984:5-984:23)
  5: StorageLive(_12)
    SourceInfo(src/read.rs:984:5-984:12)
  6: _12 = &mut (*_2)
    SourceInfo(src/read.rs:984:5-984:12)
  Terminator {
      source_info: SourceInfo(src/read.rs:984:5-984:23)
      kind: _11 = alloc::vec::Vec::<u8>::reserve(move _12, const 4_usize) -> [return: bb4, unwind: bb49]
  }
  preds [bb0]
  succs [bb4, bb49]

bb4
  0: StorageDead(_12)
    SourceInfo(src/read.rs:984:22-984:23)
  1: StorageDead(_11)
    SourceInfo(src/read.rs:984:23-984:24)
  2: StorageLive(_13)
    SourceInfo(src/read.rs:992:13-992:16)
  3: StorageLive(_14)
    SourceInfo(src/read.rs:992:19-992:39)
  4: StorageLive(_15)
    SourceInfo(src/read.rs:992:19-992:26)
  5: _15 = &mut (*_2)
    SourceInfo(src/read.rs:992:19-992:26)
  Terminator {
      source_info: SourceInfo(src/read.rs:992:19-992:39)
      kind: _14 = alloc::vec::Vec::<u8>::as_mut_ptr(move _15) -> [return: bb5, unwind: bb49]
  }
  preds [bb3]
  succs [bb5, bb49]

bb5
  0: StorageDead(_15)
    SourceInfo(src/read.rs:992:38-992:39)
  1: StorageLive(_16)
    SourceInfo(src/read.rs:992:44-992:57)
  2: StorageLive(_17)
    SourceInfo(src/read.rs:992:44-992:51)
  3: _17 = &(*_2)
    SourceInfo(src/read.rs:992:44-992:51)
  Terminator {
      source_info: SourceInfo(src/read.rs:992:44-992:57)
      kind: _16 = alloc::vec::Vec::<u8>::len(move _17) -> [return: bb6, unwind: bb49]
  }
  preds [bb4]
  succs [bb6, bb49]

bb6
  0: StorageDead(_17)
    SourceInfo(src/read.rs:992:56-992:57)
  Terminator {
      source_info: SourceInfo(src/read.rs:992:19-992:58)
      kind: _13 = core::ptr::mut_ptr::<impl *mut u8>::add(move _14, move _16) -> [return: bb7, unwind: bb49]
  }
  preds [bb5]
  succs [bb7, bb49]

bb7
  0: StorageDead(_16)
    SourceInfo(src/read.rs:992:57-992:58)
  1: StorageDead(_14)
    SourceInfo(src/read.rs:992:57-992:58)
  2: FakeRead(ForLet(None), _13)
    SourceInfo(src/read.rs:992:13-992:16)
  3: StorageLive(_18)
    SourceInfo(src/read.rs:994:13-994:24)
  4: PlaceMention(_1)
    SourceInfo(src/read.rs:994:33-994:34)
  5: _26 = Le(const 0_u32, _1)
    SourceInfo(src/read.rs:995:13-995:21)
  Terminator {
      source_info: SourceInfo(src/read.rs:995:13-995:21)
      kind: switchInt(move _26) -> [0: bb9, otherwise: bb21]
  }
  preds [bb6]
  succs [bb9, bb21]

bb8
  Terminator {
      source_info: SourceInfo(src/read.rs:995:13-995:21)
      kind: falseEdge -> [real: bb22, imaginary: bb9]
  }
  preds [bb21]
  succs [bb9, bb22]

bb9
  0: _24 = Le(const 128_u32, _1)
    SourceInfo(src/read.rs:996:13-996:25)
  Terminator {
      source_info: SourceInfo(src/read.rs:996:13-996:25)
      kind: switchInt(move _24) -> [0: bb11, otherwise: bb20]
  }
  preds [bb7, bb8, bb21]
  succs [bb11, bb20]

bb10
  Terminator {
      source_info: SourceInfo(src/read.rs:996:13-996:25)
      kind: falseEdge -> [real: bb23, imaginary: bb11]
  }
  preds [bb20]
  succs [bb11, bb23]

bb11
  0: _22 = Le(const 2048_u32, _1)
    SourceInfo(src/read.rs:1000:13-1000:27)
  Terminator {
      source_info: SourceInfo(src/read.rs:1000:13-1000:27)
      kind: switchInt(move _22) -> [0: bb13, otherwise: bb19]
  }
  preds [bb9, bb10, bb20]
  succs [bb13, bb19]

bb12
  Terminator {
      source_info: SourceInfo(src/read.rs:1000:13-1000:27)
      kind: falseEdge -> [real: bb26, imaginary: bb13]
  }
  preds [bb19]
  succs [bb13, bb26]

bb13
  0: _20 = Le(const 65536_u32, _1)
    SourceInfo(src/read.rs:1006:13-1006:33)
  Terminator {
      source_info: SourceInfo(src/read.rs:1006:13-1006:33)
      kind: switchInt(move _20) -> [0: bb16, otherwise: bb18]
  }
  preds [bb11, bb12, bb19]
  succs [bb16, bb18]

bb14
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/read.rs:994:33-994:34)
  Terminator {
      source_info: SourceInfo(src/read.rs:994:33-994:34)
      kind: unreachable
  }
  preds [bb16]
  succs []

bb15
  Terminator {
      source_info: SourceInfo(src/read.rs:1006:13-1006:33)
      kind: falseEdge -> [real: bb32, imaginary: bb16]
  }
  preds [bb18]
  succs [bb16, bb32]

bb16
  0: _19 = Le(const 1114112_u32, _1)
    SourceInfo(src/read.rs:1014:13-1014:24)
  Terminator {
      source_info: SourceInfo(src/read.rs:1014:13-1014:24)
      kind: switchInt(move _19) -> [0: bb14, otherwise: bb17]
  }
  preds [bb13, bb15, bb18]
  succs [bb14, bb17]

bb17
  0: StorageLive(_86)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _86 = core::panicking::panic(const "internal error: entered unreachable code") -> bb49
  }
  preds [bb16]
  succs [bb49]

bb18
  0: _21 = Le(_1, const 1114111_u32)
    SourceInfo(src/read.rs:1006:13-1006:33)
  Terminator {
      source_info: SourceInfo(src/read.rs:1006:13-1006:33)
      kind: switchInt(move _21) -> [0: bb16, otherwise: bb15]
  }
  preds [bb13]
  succs [bb15, bb16]

bb19
  0: _23 = Le(_1, const 65535_u32)
    SourceInfo(src/read.rs:1000:13-1000:27)
  Terminator {
      source_info: SourceInfo(src/read.rs:1000:13-1000:27)
      kind: switchInt(move _23) -> [0: bb13, otherwise: bb12]
  }
  preds [bb11]
  succs [bb12, bb13]

bb20
  0: _25 = Le(_1, const 2047_u32)
    SourceInfo(src/read.rs:996:13-996:25)
  Terminator {
      source_info: SourceInfo(src/read.rs:996:13-996:25)
      kind: switchInt(move _25) -> [0: bb11, otherwise: bb10]
  }
  preds [bb9]
  succs [bb10, bb11]

bb21
  0: _27 = Le(_1, const 127_u32)
    SourceInfo(src/read.rs:995:13-995:21)
  Terminator {
      source_info: SourceInfo(src/read.rs:995:13-995:21)
      kind: switchInt(move _27) -> [0: bb9, otherwise: bb8]
  }
  preds [bb7]
  succs [bb8, bb9]

bb22
  0: StorageLive(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/panic.rs:137:9-137:77)
      kind: _28 = core::panicking::panic(const "internal error: entered unreachable code") -> bb49
  }
  preds [bb8]
  succs [bb49]

bb23
  0: StorageLive(_29)
    SourceInfo(src/read.rs:997:17-997:72)
  1: StorageLive(_30)
    SourceInfo(src/read.rs:997:17-997:20)
  2: _30 = _13
    SourceInfo(src/read.rs:997:17-997:20)
  3: StorageLive(_31)
    SourceInfo(src/read.rs:997:27-997:71)
  4: StorageLive(_32)
    SourceInfo(src/read.rs:997:27-997:57)
  5: StorageLive(_33)
    SourceInfo(src/read.rs:997:27-997:51)
  6: StorageLive(_34)
    SourceInfo(src/read.rs:997:28-997:36)
  7: StorageLive(_35)
    SourceInfo(src/read.rs:997:29-997:30)
  8: _35 = _1
    SourceInfo(src/read.rs:997:29-997:30)
  9: _36 = const 6_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:997:28-997:36)
  10: _37 = Lt(move _36, const 32_u32)
    SourceInfo(src/read.rs:997:28-997:36)
  Terminator {
      source_info: SourceInfo(src/read.rs:997:28-997:36)
      kind: assert(move _37, "attempt to shift right by `{}`, which would overflow", const 6_i32) -> [success: bb24, unwind: bb49]
  }
  preds [bb10]
  succs [bb24, bb49]

bb24
  0: _34 = Shr(move _35, const 6_i32)
    SourceInfo(src/read.rs:997:28-997:36)
  1: StorageDead(_35)
    SourceInfo(src/read.rs:997:35-997:36)
  2: _33 = BitAnd(move _34, const 31_u32)
    SourceInfo(src/read.rs:997:27-997:51)
  3: StorageDead(_34)
    SourceInfo(src/read.rs:997:50-997:51)
  4: _32 = move _33 as u8 (IntToInt)
    SourceInfo(src/read.rs:997:27-997:57)
  5: StorageDead(_33)
    SourceInfo(src/read.rs:997:56-997:57)
  6: _31 = BitOr(move _32, const 192_u8)
    SourceInfo(src/read.rs:997:27-997:71)
  7: StorageDead(_32)
    SourceInfo(src/read.rs:997:70-997:71)
  Terminator {
      source_info: SourceInfo(src/read.rs:997:17-997:72)
      kind: _29 = core::ptr::mut_ptr::<impl *mut u8>::write(move _30, move _31) -> [return: bb25, unwind: bb49]
  }
  preds [bb23]
  succs [bb25, bb49]

bb25
  0: StorageDead(_31)
    SourceInfo(src/read.rs:997:71-997:72)
  1: StorageDead(_30)
    SourceInfo(src/read.rs:997:71-997:72)
  2: StorageDead(_29)
    SourceInfo(src/read.rs:997:72-997:73)
  3: _18 = const 2_usize
    SourceInfo(src/read.rs:998:17-998:18)
  Terminator {
      source_info: SourceInfo(src/read.rs:998:17-998:18)
      kind: goto -> bb41
  }
  preds [bb24]
  succs [bb41]

bb26
  0: StorageLive(_38)
    SourceInfo(src/read.rs:1001:17-1001:73)
  1: StorageLive(_39)
    SourceInfo(src/read.rs:1001:17-1001:20)
  2: _39 = _13
    SourceInfo(src/read.rs:1001:17-1001:20)
  3: StorageLive(_40)
    SourceInfo(src/read.rs:1001:27-1001:72)
  4: StorageLive(_41)
    SourceInfo(src/read.rs:1001:27-1001:58)
  5: StorageLive(_42)
    SourceInfo(src/read.rs:1001:27-1001:52)
  6: StorageLive(_43)
    SourceInfo(src/read.rs:1001:28-1001:37)
  7: StorageLive(_44)
    SourceInfo(src/read.rs:1001:29-1001:30)
  8: _44 = _1
    SourceInfo(src/read.rs:1001:29-1001:30)
  9: _45 = const 12_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:1001:28-1001:37)
  10: _46 = Lt(move _45, const 32_u32)
    SourceInfo(src/read.rs:1001:28-1001:37)
  Terminator {
      source_info: SourceInfo(src/read.rs:1001:28-1001:37)
      kind: assert(move _46, "attempt to shift right by `{}`, which would overflow", const 12_i32) -> [success: bb27, unwind: bb49]
  }
  preds [bb12]
  succs [bb27, bb49]

bb27
  0: _43 = Shr(move _44, const 12_i32)
    SourceInfo(src/read.rs:1001:28-1001:37)
  1: StorageDead(_44)
    SourceInfo(src/read.rs:1001:36-1001:37)
  2: _42 = BitAnd(move _43, const 15_u32)
    SourceInfo(src/read.rs:1001:27-1001:52)
  3: StorageDead(_43)
    SourceInfo(src/read.rs:1001:51-1001:52)
  4: _41 = move _42 as u8 (IntToInt)
    SourceInfo(src/read.rs:1001:27-1001:58)
  5: StorageDead(_42)
    SourceInfo(src/read.rs:1001:57-1001:58)
  6: _40 = BitOr(move _41, const 224_u8)
    SourceInfo(src/read.rs:1001:27-1001:72)
  7: StorageDead(_41)
    SourceInfo(src/read.rs:1001:71-1001:72)
  Terminator {
      source_info: SourceInfo(src/read.rs:1001:17-1001:73)
      kind: _38 = core::ptr::mut_ptr::<impl *mut u8>::write(move _39, move _40) -> [return: bb28, unwind: bb49]
  }
  preds [bb26]
  succs [bb28, bb49]

bb28
  0: StorageDead(_40)
    SourceInfo(src/read.rs:1001:72-1001:73)
  1: StorageDead(_39)
    SourceInfo(src/read.rs:1001:72-1001:73)
  2: StorageDead(_38)
    SourceInfo(src/read.rs:1001:73-1001:74)
  3: StorageLive(_47)
    SourceInfo(src/read.rs:1002:17-1003:73)
  4: StorageLive(_48)
    SourceInfo(src/read.rs:1002:17-1002:27)
  5: StorageLive(_49)
    SourceInfo(src/read.rs:1002:17-1002:20)
  6: _49 = _13
    SourceInfo(src/read.rs:1002:17-1002:20)
  Terminator {
      source_info: SourceInfo(src/read.rs:1002:17-1002:27)
      kind: _48 = core::ptr::mut_ptr::<impl *mut u8>::add(move _49, const 1_usize) -> [return: bb29, unwind: bb49]
  }
  preds [bb27]
  succs [bb29, bb49]

bb29
  0: StorageDead(_49)
    SourceInfo(src/read.rs:1002:26-1002:27)
  1: StorageLive(_50)
    SourceInfo(src/read.rs:1003:28-1003:72)
  2: StorageLive(_51)
    SourceInfo(src/read.rs:1003:28-1003:58)
  3: StorageLive(_52)
    SourceInfo(src/read.rs:1003:28-1003:52)
  4: StorageLive(_53)
    SourceInfo(src/read.rs:1003:29-1003:37)
  5: StorageLive(_54)
    SourceInfo(src/read.rs:1003:30-1003:31)
  6: _54 = _1
    SourceInfo(src/read.rs:1003:30-1003:31)
  7: _55 = const 6_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:1003:29-1003:37)
  8: _56 = Lt(move _55, const 32_u32)
    SourceInfo(src/read.rs:1003:29-1003:37)
  Terminator {
      source_info: SourceInfo(src/read.rs:1003:29-1003:37)
      kind: assert(move _56, "attempt to shift right by `{}`, which would overflow", const 6_i32) -> [success: bb30, unwind: bb49]
  }
  preds [bb28]
  succs [bb30, bb49]

bb30
  0: _53 = Shr(move _54, const 6_i32)
    SourceInfo(src/read.rs:1003:29-1003:37)
  1: StorageDead(_54)
    SourceInfo(src/read.rs:1003:36-1003:37)
  2: _52 = BitAnd(move _53, const 63_u32)
    SourceInfo(src/read.rs:1003:28-1003:52)
  3: StorageDead(_53)
    SourceInfo(src/read.rs:1003:51-1003:52)
  4: _51 = move _52 as u8 (IntToInt)
    SourceInfo(src/read.rs:1003:28-1003:58)
  5: StorageDead(_52)
    SourceInfo(src/read.rs:1003:57-1003:58)
  6: _50 = BitOr(move _51, const 128_u8)
    SourceInfo(src/read.rs:1003:28-1003:72)
  7: StorageDead(_51)
    SourceInfo(src/read.rs:1003:71-1003:72)
  Terminator {
      source_info: SourceInfo(src/read.rs:1002:17-1003:73)
      kind: _47 = core::ptr::mut_ptr::<impl *mut u8>::write(move _48, move _50) -> [return: bb31, unwind: bb49]
  }
  preds [bb29]
  succs [bb31, bb49]

bb31
  0: StorageDead(_50)
    SourceInfo(src/read.rs:1003:72-1003:73)
  1: StorageDead(_48)
    SourceInfo(src/read.rs:1003:72-1003:73)
  2: StorageDead(_47)
    SourceInfo(src/read.rs:1003:73-1003:74)
  3: _18 = const 3_usize
    SourceInfo(src/read.rs:1004:17-1004:18)
  Terminator {
      source_info: SourceInfo(src/read.rs:1004:17-1004:18)
      kind: goto -> bb41
  }
  preds [bb30]
  succs [bb41]

bb32
  0: StorageLive(_57)
    SourceInfo(src/read.rs:1007:17-1007:73)
  1: StorageLive(_58)
    SourceInfo(src/read.rs:1007:17-1007:20)
  2: _58 = _13
    SourceInfo(src/read.rs:1007:17-1007:20)
  3: StorageLive(_59)
    SourceInfo(src/read.rs:1007:27-1007:72)
  4: StorageLive(_60)
    SourceInfo(src/read.rs:1007:27-1007:58)
  5: StorageLive(_61)
    SourceInfo(src/read.rs:1007:27-1007:52)
  6: StorageLive(_62)
    SourceInfo(src/read.rs:1007:28-1007:37)
  7: StorageLive(_63)
    SourceInfo(src/read.rs:1007:29-1007:30)
  8: _63 = _1
    SourceInfo(src/read.rs:1007:29-1007:30)
  9: _64 = const 18_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:1007:28-1007:37)
  10: _65 = Lt(move _64, const 32_u32)
    SourceInfo(src/read.rs:1007:28-1007:37)
  Terminator {
      source_info: SourceInfo(src/read.rs:1007:28-1007:37)
      kind: assert(move _65, "attempt to shift right by `{}`, which would overflow", const 18_i32) -> [success: bb33, unwind: bb49]
  }
  preds [bb15]
  succs [bb33, bb49]

bb33
  0: _62 = Shr(move _63, const 18_i32)
    SourceInfo(src/read.rs:1007:28-1007:37)
  1: StorageDead(_63)
    SourceInfo(src/read.rs:1007:36-1007:37)
  2: _61 = BitAnd(move _62, const 7_u32)
    SourceInfo(src/read.rs:1007:27-1007:52)
  3: StorageDead(_62)
    SourceInfo(src/read.rs:1007:51-1007:52)
  4: _60 = move _61 as u8 (IntToInt)
    SourceInfo(src/read.rs:1007:27-1007:58)
  5: StorageDead(_61)
    SourceInfo(src/read.rs:1007:57-1007:58)
  6: _59 = BitOr(move _60, const 240_u8)
    SourceInfo(src/read.rs:1007:27-1007:72)
  7: StorageDead(_60)
    SourceInfo(src/read.rs:1007:71-1007:72)
  Terminator {
      source_info: SourceInfo(src/read.rs:1007:17-1007:73)
      kind: _57 = core::ptr::mut_ptr::<impl *mut u8>::write(move _58, move _59) -> [return: bb34, unwind: bb49]
  }
  preds [bb32]
  succs [bb34, bb49]

bb34
  0: StorageDead(_59)
    SourceInfo(src/read.rs:1007:72-1007:73)
  1: StorageDead(_58)
    SourceInfo(src/read.rs:1007:72-1007:73)
  2: StorageDead(_57)
    SourceInfo(src/read.rs:1007:73-1007:74)
  3: StorageLive(_66)
    SourceInfo(src/read.rs:1008:17-1009:74)
  4: StorageLive(_67)
    SourceInfo(src/read.rs:1008:17-1008:27)
  5: StorageLive(_68)
    SourceInfo(src/read.rs:1008:17-1008:20)
  6: _68 = _13
    SourceInfo(src/read.rs:1008:17-1008:20)
  Terminator {
      source_info: SourceInfo(src/read.rs:1008:17-1008:27)
      kind: _67 = core::ptr::mut_ptr::<impl *mut u8>::add(move _68, const 1_usize) -> [return: bb35, unwind: bb49]
  }
  preds [bb33]
  succs [bb35, bb49]

bb35
  0: StorageDead(_68)
    SourceInfo(src/read.rs:1008:26-1008:27)
  1: StorageLive(_69)
    SourceInfo(src/read.rs:1009:28-1009:73)
  2: StorageLive(_70)
    SourceInfo(src/read.rs:1009:28-1009:59)
  3: StorageLive(_71)
    SourceInfo(src/read.rs:1009:28-1009:53)
  4: StorageLive(_72)
    SourceInfo(src/read.rs:1009:29-1009:38)
  5: StorageLive(_73)
    SourceInfo(src/read.rs:1009:30-1009:31)
  6: _73 = _1
    SourceInfo(src/read.rs:1009:30-1009:31)
  7: _74 = const 12_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:1009:29-1009:38)
  8: _75 = Lt(move _74, const 32_u32)
    SourceInfo(src/read.rs:1009:29-1009:38)
  Terminator {
      source_info: SourceInfo(src/read.rs:1009:29-1009:38)
      kind: assert(move _75, "attempt to shift right by `{}`, which would overflow", const 12_i32) -> [success: bb36, unwind: bb49]
  }
  preds [bb34]
  succs [bb36, bb49]

bb36
  0: _72 = Shr(move _73, const 12_i32)
    SourceInfo(src/read.rs:1009:29-1009:38)
  1: StorageDead(_73)
    SourceInfo(src/read.rs:1009:37-1009:38)
  2: _71 = BitAnd(move _72, const 63_u32)
    SourceInfo(src/read.rs:1009:28-1009:53)
  3: StorageDead(_72)
    SourceInfo(src/read.rs:1009:52-1009:53)
  4: _70 = move _71 as u8 (IntToInt)
    SourceInfo(src/read.rs:1009:28-1009:59)
  5: StorageDead(_71)
    SourceInfo(src/read.rs:1009:58-1009:59)
  6: _69 = BitOr(move _70, const 128_u8)
    SourceInfo(src/read.rs:1009:28-1009:73)
  7: StorageDead(_70)
    SourceInfo(src/read.rs:1009:72-1009:73)
  Terminator {
      source_info: SourceInfo(src/read.rs:1008:17-1009:74)
      kind: _66 = core::ptr::mut_ptr::<impl *mut u8>::write(move _67, move _69) -> [return: bb37, unwind: bb49]
  }
  preds [bb35]
  succs [bb37, bb49]

bb37
  0: StorageDead(_69)
    SourceInfo(src/read.rs:1009:73-1009:74)
  1: StorageDead(_67)
    SourceInfo(src/read.rs:1009:73-1009:74)
  2: StorageDead(_66)
    SourceInfo(src/read.rs:1009:74-1009:75)
  3: StorageLive(_76)
    SourceInfo(src/read.rs:1010:17-1011:73)
  4: StorageLive(_77)
    SourceInfo(src/read.rs:1010:17-1010:27)
  5: StorageLive(_78)
    SourceInfo(src/read.rs:1010:17-1010:20)
  6: _78 = _13
    SourceInfo(src/read.rs:1010:17-1010:20)
  Terminator {
      source_info: SourceInfo(src/read.rs:1010:17-1010:27)
      kind: _77 = core::ptr::mut_ptr::<impl *mut u8>::add(move _78, const 2_usize) -> [return: bb38, unwind: bb49]
  }
  preds [bb36]
  succs [bb38, bb49]

bb38
  0: StorageDead(_78)
    SourceInfo(src/read.rs:1010:26-1010:27)
  1: StorageLive(_79)
    SourceInfo(src/read.rs:1011:28-1011:72)
  2: StorageLive(_80)
    SourceInfo(src/read.rs:1011:28-1011:58)
  3: StorageLive(_81)
    SourceInfo(src/read.rs:1011:28-1011:52)
  4: StorageLive(_82)
    SourceInfo(src/read.rs:1011:29-1011:37)
  5: StorageLive(_83)
    SourceInfo(src/read.rs:1011:30-1011:31)
  6: _83 = _1
    SourceInfo(src/read.rs:1011:30-1011:31)
  7: _84 = const 6_i32 as u32 (IntToInt)
    SourceInfo(src/read.rs:1011:29-1011:37)
  8: _85 = Lt(move _84, const 32_u32)
    SourceInfo(src/read.rs:1011:29-1011:37)
  Terminator {
      source_info: SourceInfo(src/read.rs:1011:29-1011:37)
      kind: assert(move _85, "attempt to shift right by `{}`, which would overflow", const 6_i32) -> [success: bb39, unwind: bb49]
  }
  preds [bb37]
  succs [bb39, bb49]

bb39
  0: _82 = Shr(move _83, const 6_i32)
    SourceInfo(src/read.rs:1011:29-1011:37)
  1: StorageDead(_83)
    SourceInfo(src/read.rs:1011:36-1011:37)
  2: _81 = BitAnd(move _82, const 63_u32)
    SourceInfo(src/read.rs:1011:28-1011:52)
  3: StorageDead(_82)
    SourceInfo(src/read.rs:1011:51-1011:52)
  4: _80 = move _81 as u8 (IntToInt)
    SourceInfo(src/read.rs:1011:28-1011:58)
  5: StorageDead(_81)
    SourceInfo(src/read.rs:1011:57-1011:58)
  6: _79 = BitOr(move _80, const 128_u8)
    SourceInfo(src/read.rs:1011:28-1011:72)
  7: StorageDead(_80)
    SourceInfo(src/read.rs:1011:71-1011:72)
  Terminator {
      source_info: SourceInfo(src/read.rs:1010:17-1011:73)
      kind: _76 = core::ptr::mut_ptr::<impl *mut u8>::write(move _77, move _79) -> [return: bb40, unwind: bb49]
  }
  preds [bb38]
  succs [bb40, bb49]

bb40
  0: StorageDead(_79)
    SourceInfo(src/read.rs:1011:72-1011:73)
  1: StorageDead(_77)
    SourceInfo(src/read.rs:1011:72-1011:73)
  2: StorageDead(_76)
    SourceInfo(src/read.rs:1011:73-1011:74)
  3: _18 = const 4_usize
    SourceInfo(src/read.rs:1012:17-1012:18)
  Terminator {
      source_info: SourceInfo(src/read.rs:1012:17-1012:18)
      kind: goto -> bb41
  }
  preds [bb39]
  succs [bb41]

bb41
  0: FakeRead(ForLet(None), _18)
    SourceInfo(src/read.rs:994:13-994:24)
  1: StorageLive(_87)
    SourceInfo(src/read.rs:1016:9-1017:58)
  2: StorageLive(_88)
    SourceInfo(src/read.rs:1016:9-1016:33)
  3: StorageLive(_89)
    SourceInfo(src/read.rs:1016:9-1016:12)
  4: _89 = _13
    SourceInfo(src/read.rs:1016:9-1016:12)
  5: StorageLive(_90)
    SourceInfo(src/read.rs:1016:17-1016:32)
  6: StorageLive(_91)
    SourceInfo(src/read.rs:1016:17-1016:28)
  7: _91 = _18
    SourceInfo(src/read.rs:1016:17-1016:28)
  8: _92 = SubWithOverflow(_91, const 1_usize)
    SourceInfo(src/read.rs:1016:17-1016:32)
  Terminator {
      source_info: SourceInfo(src/read.rs:1016:17-1016:32)
      kind: assert(!move (_92.1: bool), "attempt to compute `{} - {}`, which would overflow", move _91, const 1_usize) -> [success: bb42, unwind: bb49]
  }
  preds [bb25, bb31, bb40]
  succs [bb42, bb49]

bb42
  0: _90 = move (_92.0: usize)
    SourceInfo(src/read.rs:1016:17-1016:32)
  1: StorageDead(_91)
    SourceInfo(src/read.rs:1016:31-1016:32)
  Terminator {
      source_info: SourceInfo(src/read.rs:1016:9-1016:33)
      kind: _88 = core::ptr::mut_ptr::<impl *mut u8>::add(move _89, move _90) -> [return: bb43, unwind: bb49]
  }
  preds [bb41]
  succs [bb43, bb49]

bb43
  0: StorageDead(_90)
    SourceInfo(src/read.rs:1016:32-1016:33)
  1: StorageDead(_89)
    SourceInfo(src/read.rs:1016:32-1016:33)
  2: StorageLive(_93)
    SourceInfo(src/read.rs:1017:20-1017:57)
  3: StorageLive(_94)
    SourceInfo(src/read.rs:1017:20-1017:43)
  4: StorageLive(_95)
    SourceInfo(src/read.rs:1017:20-1017:37)
  5: StorageLive(_96)
    SourceInfo(src/read.rs:1017:21-1017:22)
  6: _96 = _1
    SourceInfo(src/read.rs:1017:21-1017:22)
  7: _95 = BitAnd(move _96, const 63_u32)
    SourceInfo(src/read.rs:1017:20-1017:37)
  8: StorageDead(_96)
    SourceInfo(src/read.rs:1017:36-1017:37)
  9: _94 = move _95 as u8 (IntToInt)
    SourceInfo(src/read.rs:1017:20-1017:43)
  10: StorageDead(_95)
    SourceInfo(src/read.rs:1017:42-1017:43)
  11: _93 = BitOr(move _94, const 128_u8)
    SourceInfo(src/read.rs:1017:20-1017:57)
  12: StorageDead(_94)
    SourceInfo(src/read.rs:1017:56-1017:57)
  Terminator {
      source_info: SourceInfo(src/read.rs:1016:9-1017:58)
      kind: _87 = core::ptr::mut_ptr::<impl *mut u8>::write(move _88, move _93) -> [return: bb44, unwind: bb49]
  }
  preds [bb42]
  succs [bb44, bb49]

bb44
  0: StorageDead(_93)
    SourceInfo(src/read.rs:1017:57-1017:58)
  1: StorageDead(_88)
    SourceInfo(src/read.rs:1017:57-1017:58)
  2: StorageDead(_87)
    SourceInfo(src/read.rs:1017:58-1017:59)
  3: StorageLive(_97)
    SourceInfo(src/read.rs:1019:9-1019:53)
  4: StorageLive(_98)
    SourceInfo(src/read.rs:1019:9-1019:16)
  5: _98 = &mut (*_2)
    SourceInfo(src/read.rs:1019:9-1019:16)
  6: StorageLive(_99)
    SourceInfo(src/read.rs:1019:25-1019:52)
  7: StorageLive(_100)
    SourceInfo(src/read.rs:1019:25-1019:38)
  8: StorageLive(_101)
    SourceInfo(src/read.rs:1019:25-1019:32)
  9: _101 = &(*_2)
    SourceInfo(src/read.rs:1019:25-1019:32)
  Terminator {
      source_info: SourceInfo(src/read.rs:1019:25-1019:38)
      kind: _100 = alloc::vec::Vec::<u8>::len(move _101) -> [return: bb45, unwind: bb49]
  }
  preds [bb43]
  succs [bb45, bb49]

bb45
  0: StorageDead(_101)
    SourceInfo(src/read.rs:1019:37-1019:38)
  1: StorageLive(_102)
    SourceInfo(src/read.rs:1019:41-1019:52)
  2: _102 = _18
    SourceInfo(src/read.rs:1019:41-1019:52)
  3: _103 = AddWithOverflow(_100, _102)
    SourceInfo(src/read.rs:1019:25-1019:52)
  Terminator {
      source_info: SourceInfo(src/read.rs:1019:25-1019:52)
      kind: assert(!move (_103.1: bool), "attempt to compute `{} + {}`, which would overflow", move _100, move _102) -> [success: bb46, unwind: bb49]
  }
  preds [bb44]
  succs [bb46, bb49]

bb46
  0: _99 = move (_103.0: usize)
    SourceInfo(src/read.rs:1019:25-1019:52)
  1: StorageDead(_102)
    SourceInfo(src/read.rs:1019:51-1019:52)
  2: StorageDead(_100)
    SourceInfo(src/read.rs:1019:51-1019:52)
  Terminator {
      source_info: SourceInfo(src/read.rs:1019:9-1019:53)
      kind: _97 = alloc::vec::Vec::<u8>::set_len(move _98, move _99) -> [return: bb47, unwind: bb49]
  }
  preds [bb45]
  succs [bb47, bb49]

bb47
  0: StorageDead(_99)
    SourceInfo(src/read.rs:1019:52-1019:53)
  1: StorageDead(_98)
    SourceInfo(src/read.rs:1019:52-1019:53)
  2: StorageDead(_97)
    SourceInfo(src/read.rs:1019:53-1019:54)
  3: _0 = const ()
    SourceInfo(src/read.rs:991:5-1020:6)
  4: StorageDead(_18)
    SourceInfo(src/read.rs:1020:5-1020:6)
  5: StorageDead(_13)
    SourceInfo(src/read.rs:1020:5-1020:6)
  Terminator {
      source_info: SourceInfo(src/read.rs:1021:2-1021:2)
      kind: goto -> bb48
  }
  preds [bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(src/read.rs:1021:2-1021:2)
      kind: return
  }
  preds [bb2, bb47]
  succs []

bb49
  Terminator {
      source_info: SourceInfo(src/read.rs:978:1-1021:2)
      kind: resume
  }
  preds [bb1, bb3, bb4, bb5, bb6, bb17, bb22, bb23, bb24, bb26, bb27, bb28, bb29, bb30, bb32, bb33, bb34, bb35, bb36, bb37, bb38, bb39, bb41, bb42, bb43, bb44, bb45, bb46]
  succs []

