bb0
  0: StorageLive(_4)
    SourceInfo(src/ser.rs:2100:9-2100:14)
  1: StorageLive(_5)
    SourceInfo(src/ser.rs:2100:17-2100:22)
  2: _5 = &(*_3)
    SourceInfo(src/ser.rs:2100:17-2100:22)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2100:17-2100:33)
      kind: _4 = core::str::<impl str>::as_bytes(move _5) -> [return: bb1, unwind: bb51]
  }
  preds []
  succs [bb1, bb51]

bb1
  0: StorageDead(_5)
    SourceInfo(src/ser.rs:2100:32-2100:33)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/ser.rs:2100:9-2100:14)
  2: StorageLive(_6)
    SourceInfo(src/ser.rs:2102:9-2102:18)
  3: _6 = const 0_usize
    SourceInfo(src/ser.rs:2102:21-2102:22)
  4: FakeRead(ForLet(None), _6)
    SourceInfo(src/ser.rs:2102:9-2102:18)
  5: StorageLive(_7)
    SourceInfo(src/ser.rs:2104:5-2118:6)
  6: StorageLive(_8)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  7: StorageLive(_9)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  8: StorageLive(_10)
    SourceInfo(src/ser.rs:2104:23-2104:35)
  9: StorageLive(_11)
    SourceInfo(src/ser.rs:2104:23-2104:28)
  10: _11 = &(*_4)
    SourceInfo(src/ser.rs:2104:23-2104:28)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:35)
      kind: _10 = core::slice::<impl [u8]>::iter(move _11) -> [return: bb2, unwind: bb51]
  }
  preds [bb0]
  succs [bb2, bb51]

bb2
  0: StorageDead(_11)
    SourceInfo(src/ser.rs:2104:34-2104:35)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:47)
      kind: _9 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::enumerate(move _10) -> [return: bb3, unwind: bb51]
  }
  preds [bb1]
  succs [bb3, bb51]

bb3
  0: StorageDead(_10)
    SourceInfo(src/ser.rs:2104:46-2104:47)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:47)
      kind: _8 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::IntoIterator>::into_iter(move _9) -> [return: bb4, unwind: bb51]
  }
  preds [bb2]
  succs [bb4, bb51]

bb4
  0: StorageDead(_9)
    SourceInfo(src/ser.rs:2104:46-2104:47)
  1: PlaceMention(_8)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  2: StorageLive(_12)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  3: _12 = move _8
    SourceInfo(src/ser.rs:2104:23-2104:47)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:5-2118:6)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:5-2118:6)
      kind: falseUnwind -> [real: bb6, unwind: bb51]
  }
  preds [bb4, bb13, bb34]
  succs [bb6, bb51]

bb6
  0: StorageLive(_14)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  1: StorageLive(_15)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  2: StorageLive(_16)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  3: StorageLive(_17)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  4: _17 = &mut _12
    SourceInfo(src/ser.rs:2104:23-2104:47)
  5: _16 = &mut (*_17)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:47)
      kind: _15 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _16) -> [return: bb7, unwind: bb51]
  }
  preds [bb5]
  succs [bb7, bb51]

bb7
  0: StorageDead(_16)
    SourceInfo(src/ser.rs:2104:46-2104:47)
  1: PlaceMention(_15)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  2: _18 = discriminant(_15)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:47)
      kind: switchInt(move _18) -> [0: bb9, 1: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb9, bb10]

bb8
  0: FakeRead(ForMatchedPlace(None), _15)
    SourceInfo(src/ser.rs:2104:23-2104:47)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:23-2104:47)
      kind: unreachable
  }
  preds [bb7]
  succs []

bb9
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:5-2118:6)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb7]
  succs [bb10, bb11]

bb10
  0: StorageLive(_20)
    SourceInfo(src/ser.rs:2104:10-2104:11)
  1: _20 = (((_15 as Some).0: (usize, &u8)).0: usize)
    SourceInfo(src/ser.rs:2104:10-2104:11)
  2: StorageLive(_21)
    SourceInfo(src/ser.rs:2104:14-2104:18)
  3: _21 = (*(((_15 as Some).0: (usize, &u8)).1: &u8))
    SourceInfo(src/ser.rs:2104:14-2104:18)
  4: StorageLive(_22)
    SourceInfo(src/ser.rs:2105:13-2105:19)
  5: StorageLive(_23)
    SourceInfo(src/ser.rs:2105:22-2105:28)
  6: _23 = const <static(DefId(0:1029 ~ serde_json[c3d0]::ser::ESCAPE))>
    SourceInfo(src/ser.rs:2105:22-2105:28)
  7: StorageLive(_24)
    SourceInfo(src/ser.rs:2105:29-2105:42)
  8: StorageLive(_25)
    SourceInfo(src/ser.rs:2105:29-2105:33)
  9: _25 = _21
    SourceInfo(src/ser.rs:2105:29-2105:33)
  10: _24 = move _25 as usize (IntToInt)
    SourceInfo(src/ser.rs:2105:29-2105:42)
  11: StorageDead(_25)
    SourceInfo(src/ser.rs:2105:41-2105:42)
  12: _26 = Len((*_23))
    SourceInfo(src/ser.rs:2105:22-2105:43)
  13: _27 = Lt(_24, _26)
    SourceInfo(src/ser.rs:2105:22-2105:43)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2105:22-2105:43)
      kind: assert(move _27, "index out of bounds: the length is {} but the index is {}", move _26, _24) -> [success: bb12, unwind: bb51]
  }
  preds [bb7, bb9]
  succs [bb12, bb51]

bb11
  0: _7 = const ()
    SourceInfo(src/ser.rs:2104:5-2118:6)
  1: StorageDead(_17)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  2: StorageDead(_15)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  3: StorageDead(_14)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  4: StorageDead(_12)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  5: StorageDead(_8)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  6: StorageDead(_7)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  7: StorageLive(_67)
    SourceInfo(src/ser.rs:2120:5-2122:6)
  8: StorageLive(_68)
    SourceInfo(src/ser.rs:2120:8-2120:28)
  9: StorageLive(_69)
    SourceInfo(src/ser.rs:2120:8-2120:13)
  10: _69 = _6
    SourceInfo(src/ser.rs:2120:8-2120:13)
  11: StorageLive(_70)
    SourceInfo(src/ser.rs:2120:17-2120:28)
  12: StorageLive(_71)
    SourceInfo(src/ser.rs:2120:17-2120:22)
  13: _71 = &(*_4)
    SourceInfo(src/ser.rs:2120:17-2120:22)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2120:17-2120:28)
      kind: _70 = core::slice::<impl [u8]>::len(move _71) -> [return: bb35, unwind: bb51]
  }
  preds [bb9]
  succs [bb35, bb51]

bb12
  0: _22 = (*_23)[_24]
    SourceInfo(src/ser.rs:2105:22-2105:43)
  1: FakeRead(ForLet(None), _22)
    SourceInfo(src/ser.rs:2105:13-2105:19)
  2: StorageDead(_24)
    SourceInfo(src/ser.rs:2105:43-2105:44)
  3: StorageDead(_23)
    SourceInfo(src/ser.rs:2105:43-2105:44)
  4: StorageLive(_28)
    SourceInfo(src/ser.rs:2106:9-2108:10)
  5: StorageLive(_29)
    SourceInfo(src/ser.rs:2106:12-2106:23)
  6: StorageLive(_30)
    SourceInfo(src/ser.rs:2106:12-2106:18)
  7: _30 = _22
    SourceInfo(src/ser.rs:2106:12-2106:18)
  8: _29 = Eq(move _30, const 0_u8)
    SourceInfo(src/ser.rs:2106:12-2106:23)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2106:12-2106:23)
      kind: switchInt(move _29) -> [0: bb14, otherwise: bb13]
  }
  preds [bb10]
  succs [bb13, bb14]

bb13
  0: StorageDead(_30)
    SourceInfo(src/ser.rs:2106:22-2106:23)
  1: StorageDead(_29)
    SourceInfo(src/ser.rs:2108:9-2108:10)
  2: StorageDead(_28)
    SourceInfo(src/ser.rs:2108:9-2108:10)
  3: StorageDead(_22)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  4: StorageDead(_21)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  5: StorageDead(_20)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  6: StorageDead(_17)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  7: StorageDead(_15)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  8: StorageDead(_14)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb5
  }
  preds [bb12]
  succs [bb5]

bb14
  0: StorageDead(_30)
    SourceInfo(src/ser.rs:2106:22-2106:23)
  1: _28 = const ()
    SourceInfo(src/ser.rs:2108:10-2108:10)
  2: StorageDead(_29)
    SourceInfo(src/ser.rs:2108:9-2108:10)
  3: StorageDead(_28)
    SourceInfo(src/ser.rs:2108:9-2108:10)
  4: StorageLive(_32)
    SourceInfo(src/ser.rs:2110:9-2112:10)
  5: StorageLive(_33)
    SourceInfo(src/ser.rs:2110:12-2110:21)
  6: StorageLive(_34)
    SourceInfo(src/ser.rs:2110:12-2110:17)
  7: _34 = _6
    SourceInfo(src/ser.rs:2110:12-2110:17)
  8: StorageLive(_35)
    SourceInfo(src/ser.rs:2110:20-2110:21)
  9: _35 = _20
    SourceInfo(src/ser.rs:2110:20-2110:21)
  10: _33 = Lt(move _34, move _35)
    SourceInfo(src/ser.rs:2110:12-2110:21)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2110:12-2110:21)
      kind: switchInt(move _33) -> [0: bb16, otherwise: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageDead(_35)
    SourceInfo(src/ser.rs:2110:20-2110:21)
  1: StorageDead(_34)
    SourceInfo(src/ser.rs:2110:20-2110:21)
  2: StorageLive(_36)
    SourceInfo(src/lib.rs:408:9-411:10)
  3: StorageLive(_37)
    SourceInfo(src/ser.rs:2111:18-2111:75)
  4: StorageLive(_38)
    SourceInfo(src/ser.rs:2111:18-2111:27)
  5: _38 = &mut (*_2)
    SourceInfo(src/ser.rs:2111:18-2111:27)
  6: StorageLive(_39)
    SourceInfo(src/ser.rs:2111:50-2111:56)
  7: _39 = &mut (*_1)
    SourceInfo(src/ser.rs:2111:50-2111:56)
  8: StorageLive(_40)
    SourceInfo(src/ser.rs:2111:58-2111:74)
  9: StorageLive(_41)
    SourceInfo(src/ser.rs:2111:58-2111:74)
  10: StorageLive(_42)
    SourceInfo(src/ser.rs:2111:64-2111:74)
  11: StorageLive(_43)
    SourceInfo(src/ser.rs:2111:59-2111:64)
  12: _43 = &(*_3)
    SourceInfo(src/ser.rs:2111:59-2111:64)
  13: StorageLive(_44)
    SourceInfo(src/ser.rs:2111:65-2111:73)
  14: StorageLive(_45)
    SourceInfo(src/ser.rs:2111:65-2111:70)
  15: _45 = _6
    SourceInfo(src/ser.rs:2111:65-2111:70)
  16: StorageLive(_46)
    SourceInfo(src/ser.rs:2111:72-2111:73)
  17: _46 = _20
    SourceInfo(src/ser.rs:2111:72-2111:73)
  18: _44 = core::ops::Range::<usize> { start: move _45, end: move _46 }
    SourceInfo(src/ser.rs:2111:65-2111:73)
  19: StorageDead(_46)
    SourceInfo(src/ser.rs:2111:72-2111:73)
  20: StorageDead(_45)
    SourceInfo(src/ser.rs:2111:72-2111:73)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2111:64-2111:74)
      kind: _42 = <str as core::ops::Index<core::ops::Range<usize>>>::index(move _43, move _44) -> [return: bb17, unwind: bb51]
  }
  preds [bb14]
  succs [bb17, bb51]

bb16
  0: StorageDead(_35)
    SourceInfo(src/ser.rs:2110:20-2110:21)
  1: StorageDead(_34)
    SourceInfo(src/ser.rs:2110:20-2110:21)
  2: _32 = const ()
    SourceInfo(src/ser.rs:2112:10-2112:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2110:9-2112:10)
      kind: goto -> bb25
  }
  preds [bb14]
  succs [bb25]

bb17
  0: StorageDead(_44)
    SourceInfo(src/ser.rs:2111:73-2111:74)
  1: StorageDead(_43)
    SourceInfo(src/ser.rs:2111:73-2111:74)
  2: _41 = &(*_42)
    SourceInfo(src/ser.rs:2111:58-2111:74)
  3: _40 = &(*_41)
    SourceInfo(src/ser.rs:2111:58-2111:74)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2111:18-2111:75)
      kind: _37 = <F as ser::Formatter>::write_string_fragment::<W>(move _38, move _39, move _40) -> [return: bb18, unwind: bb51]
  }
  preds [bb15]
  succs [bb18, bb51]

bb18
  0: StorageDead(_40)
    SourceInfo(src/ser.rs:2111:74-2111:75)
  1: StorageDead(_39)
    SourceInfo(src/ser.rs:2111:74-2111:75)
  2: StorageDead(_38)
    SourceInfo(src/ser.rs:2111:74-2111:75)
  3: PlaceMention(_37)
    SourceInfo(src/ser.rs:2111:18-2111:75)
  4: _47 = discriminant(_37)
    SourceInfo(src/ser.rs:2111:18-2111:75)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _47) -> [0: bb20, 1: bb21, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20, bb21]

bb19
  0: FakeRead(ForMatchedPlace(None), _37)
    SourceInfo(src/ser.rs:2111:18-2111:75)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2111:18-2111:75)
      kind: unreachable
  }
  preds [bb18]
  succs []

bb20
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb22, imaginary: bb21]
  }
  preds [bb18]
  succs [bb21, bb22]

bb21
  0: StorageLive(_49)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _49 = move ((_37 as Err).0: std::io::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_51)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _51 = move _49
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), std::io::Error>::Err(move _51)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_51) -> [return: bb23, unwind: bb49]
  }
  preds [bb18, bb20]
  succs [bb23, bb49]

bb22
  0: StorageLive(_48)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _48 = ((_37 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _36 = _48
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_48)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_37) -> [return: bb24, unwind: bb51]
  }
  preds [bb20]
  succs [bb24, bb51]

bb23
  0: StorageDead(_51)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_49) -> [return: bb42, unwind: bb50]
  }
  preds [bb21]
  succs [bb42, bb50]

bb24
  0: StorageDead(_42)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_41)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_37)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageDead(_36)
    SourceInfo(src/lib.rs:411:9-411:10)
  4: _32 = const ()
    SourceInfo(src/ser.rs:2110:22-2112:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2110:9-2112:10)
      kind: goto -> bb25
  }
  preds [bb22]
  succs [bb25]

bb25
  0: StorageDead(_33)
    SourceInfo(src/ser.rs:2112:9-2112:10)
  1: StorageDead(_32)
    SourceInfo(src/ser.rs:2112:9-2112:10)
  2: StorageLive(_52)
    SourceInfo(src/ser.rs:2114:13-2114:24)
  3: StorageLive(_53)
    SourceInfo(src/ser.rs:2114:57-2114:63)
  4: _53 = _22
    SourceInfo(src/ser.rs:2114:57-2114:63)
  5: StorageLive(_54)
    SourceInfo(src/ser.rs:2114:65-2114:69)
  6: _54 = _21
    SourceInfo(src/ser.rs:2114:65-2114:69)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2114:27-2114:70)
      kind: _52 = ser::CharEscape::from_escape_table(move _53, move _54) -> [return: bb26, unwind: bb51]
  }
  preds [bb16, bb24]
  succs [bb26, bb51]

bb26
  0: StorageDead(_54)
    SourceInfo(src/ser.rs:2114:69-2114:70)
  1: StorageDead(_53)
    SourceInfo(src/ser.rs:2114:69-2114:70)
  2: FakeRead(ForLet(None), _52)
    SourceInfo(src/ser.rs:2114:13-2114:24)
  3: StorageLive(_55)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_56)
    SourceInfo(src/ser.rs:2115:14-2115:62)
  5: StorageLive(_57)
    SourceInfo(src/ser.rs:2115:14-2115:23)
  6: _57 = &mut (*_2)
    SourceInfo(src/ser.rs:2115:14-2115:23)
  7: StorageLive(_58)
    SourceInfo(src/ser.rs:2115:42-2115:48)
  8: _58 = &mut (*_1)
    SourceInfo(src/ser.rs:2115:42-2115:48)
  9: StorageLive(_59)
    SourceInfo(src/ser.rs:2115:50-2115:61)
  10: _59 = move _52
    SourceInfo(src/ser.rs:2115:50-2115:61)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2115:14-2115:62)
      kind: _56 = <F as ser::Formatter>::write_char_escape::<W>(move _57, move _58, move _59) -> [return: bb27, unwind: bb51]
  }
  preds [bb25]
  succs [bb27, bb51]

bb27
  0: StorageDead(_59)
    SourceInfo(src/ser.rs:2115:61-2115:62)
  1: StorageDead(_58)
    SourceInfo(src/ser.rs:2115:61-2115:62)
  2: StorageDead(_57)
    SourceInfo(src/ser.rs:2115:61-2115:62)
  3: PlaceMention(_56)
    SourceInfo(src/ser.rs:2115:14-2115:62)
  4: _60 = discriminant(_56)
    SourceInfo(src/ser.rs:2115:14-2115:62)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _60) -> [0: bb29, 1: bb30, otherwise: bb28]
  }
  preds [bb26]
  succs [bb28, bb29, bb30]

bb28
  0: FakeRead(ForMatchedPlace(None), _56)
    SourceInfo(src/ser.rs:2115:14-2115:62)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2115:14-2115:62)
      kind: unreachable
  }
  preds [bb27]
  succs []

bb29
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb31, imaginary: bb30]
  }
  preds [bb27]
  succs [bb30, bb31]

bb30
  0: StorageLive(_62)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _62 = move ((_56 as Err).0: std::io::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_64)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _64 = move _62
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), std::io::Error>::Err(move _64)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_64) -> [return: bb32, unwind: bb47]
  }
  preds [bb27, bb29]
  succs [bb32, bb47]

bb31
  0: StorageLive(_61)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _61 = ((_56 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _55 = _61
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_61)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_56) -> [return: bb33, unwind: bb51]
  }
  preds [bb29]
  succs [bb33, bb51]

bb32
  0: StorageDead(_64)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_62) -> [return: bb40, unwind: bb48]
  }
  preds [bb30]
  succs [bb40, bb48]

bb33
  0: StorageDead(_56)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_55)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageLive(_65)
    SourceInfo(src/ser.rs:2117:17-2117:18)
  3: _65 = _20
    SourceInfo(src/ser.rs:2117:17-2117:18)
  4: _66 = AddWithOverflow(_65, const 1_usize)
    SourceInfo(src/ser.rs:2117:17-2117:22)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2117:17-2117:22)
      kind: assert(!move (_66.1: bool), "attempt to compute `{} + {}`, which would overflow", move _65, const 1_usize) -> [success: bb34, unwind: bb51]
  }
  preds [bb31]
  succs [bb34, bb51]

bb34
  0: _6 = move (_66.0: usize)
    SourceInfo(src/ser.rs:2117:9-2117:22)
  1: StorageDead(_65)
    SourceInfo(src/ser.rs:2117:21-2117:22)
  2: _14 = const ()
    SourceInfo(src/ser.rs:2104:48-2118:6)
  3: StorageDead(_52)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  4: StorageDead(_22)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  5: StorageDead(_21)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  6: StorageDead(_20)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  7: StorageDead(_17)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  8: StorageDead(_15)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  9: StorageDead(_14)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  10: _13 = const ()
    SourceInfo(src/ser.rs:2104:5-2118:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2104:5-2118:6)
      kind: goto -> bb5
  }
  preds [bb33]
  succs [bb5]

bb35
  0: StorageDead(_71)
    SourceInfo(src/ser.rs:2120:27-2120:28)
  1: _68 = Eq(move _69, move _70)
    SourceInfo(src/ser.rs:2120:8-2120:28)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2120:8-2120:28)
      kind: switchInt(move _68) -> [0: bb37, otherwise: bb36]
  }
  preds [bb11]
  succs [bb36, bb37]

bb36
  0: StorageDead(_70)
    SourceInfo(src/ser.rs:2120:27-2120:28)
  1: StorageDead(_69)
    SourceInfo(src/ser.rs:2120:27-2120:28)
  2: StorageLive(_73)
    SourceInfo(src/ser.rs:2121:19-2121:21)
  3: _73 = ()
    SourceInfo(src/ser.rs:2121:19-2121:21)
  4: _0 = core::result::Result::<(), std::io::Error>::Ok(move _73)
    SourceInfo(src/ser.rs:2121:16-2121:22)
  5: StorageDead(_73)
    SourceInfo(src/ser.rs:2121:21-2121:22)
  6: StorageDead(_68)
    SourceInfo(src/ser.rs:2122:5-2122:6)
  7: StorageDead(_67)
    SourceInfo(src/ser.rs:2122:5-2122:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb35]
  succs [bb45]

bb37
  0: StorageDead(_70)
    SourceInfo(src/ser.rs:2120:27-2120:28)
  1: StorageDead(_69)
    SourceInfo(src/ser.rs:2120:27-2120:28)
  2: _67 = const ()
    SourceInfo(src/ser.rs:2122:6-2122:6)
  3: StorageDead(_68)
    SourceInfo(src/ser.rs:2122:5-2122:6)
  4: StorageDead(_67)
    SourceInfo(src/ser.rs:2122:5-2122:6)
  5: StorageLive(_74)
    SourceInfo(src/ser.rs:2124:5-2124:14)
  6: _74 = &mut (*_2)
    SourceInfo(src/ser.rs:2124:5-2124:14)
  7: StorageLive(_75)
    SourceInfo(src/ser.rs:2124:37-2124:43)
  8: _75 = &mut (*_1)
    SourceInfo(src/ser.rs:2124:37-2124:43)
  9: StorageLive(_76)
    SourceInfo(src/ser.rs:2124:45-2124:60)
  10: StorageLive(_77)
    SourceInfo(src/ser.rs:2124:45-2124:60)
  11: StorageLive(_78)
    SourceInfo(src/ser.rs:2124:51-2124:60)
  12: StorageLive(_79)
    SourceInfo(src/ser.rs:2124:46-2124:51)
  13: _79 = &(*_3)
    SourceInfo(src/ser.rs:2124:46-2124:51)
  14: StorageLive(_80)
    SourceInfo(src/ser.rs:2124:52-2124:59)
  15: StorageLive(_81)
    SourceInfo(src/ser.rs:2124:52-2124:57)
  16: _81 = _6
    SourceInfo(src/ser.rs:2124:52-2124:57)
  17: _80 = core::ops::RangeFrom::<usize> { start: move _81 }
    SourceInfo(src/ser.rs:2124:52-2124:59)
  18: StorageDead(_81)
    SourceInfo(src/ser.rs:2124:58-2124:59)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2124:51-2124:60)
      kind: _78 = <str as core::ops::Index<core::ops::RangeFrom<usize>>>::index(move _79, move _80) -> [return: bb38, unwind: bb51]
  }
  preds [bb35]
  succs [bb38, bb51]

bb38
  0: StorageDead(_80)
    SourceInfo(src/ser.rs:2124:59-2124:60)
  1: StorageDead(_79)
    SourceInfo(src/ser.rs:2124:59-2124:60)
  2: _77 = &(*_78)
    SourceInfo(src/ser.rs:2124:45-2124:60)
  3: _76 = &(*_77)
    SourceInfo(src/ser.rs:2124:45-2124:60)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2124:5-2124:61)
      kind: _0 = <F as ser::Formatter>::write_string_fragment::<W>(move _74, move _75, move _76) -> [return: bb39, unwind: bb51]
  }
  preds [bb37]
  succs [bb39, bb51]

bb39
  0: StorageDead(_76)
    SourceInfo(src/ser.rs:2124:60-2124:61)
  1: StorageDead(_75)
    SourceInfo(src/ser.rs:2124:60-2124:61)
  2: StorageDead(_74)
    SourceInfo(src/ser.rs:2124:60-2124:61)
  3: StorageDead(_6)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  4: StorageDead(_4)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  5: StorageDead(_78)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  6: StorageDead(_77)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2125:2-2125:2)
      kind: goto -> bb46
  }
  preds [bb38]
  succs [bb46]

bb40
  0: StorageDead(_62)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_56) -> [return: bb41, unwind: bb51]
  }
  preds [bb32]
  succs [bb41, bb51]

bb41
  0: StorageDead(_56)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_55)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_52)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb44
  }
  preds [bb40]
  succs [bb44]

bb42
  0: StorageDead(_49)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_37) -> [return: bb43, unwind: bb51]
  }
  preds [bb23]
  succs [bb43, bb51]

bb43
  0: StorageDead(_42)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_41)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_37)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageDead(_36)
    SourceInfo(src/lib.rs:411:9-411:10)
  4: StorageDead(_33)
    SourceInfo(src/ser.rs:2112:9-2112:10)
  5: StorageDead(_32)
    SourceInfo(src/ser.rs:2112:9-2112:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb44
  }
  preds [bb42]
  succs [bb44]

bb44
  0: StorageDead(_22)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  1: StorageDead(_21)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  2: StorageDead(_20)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  3: StorageDead(_17)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  4: StorageDead(_15)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  5: StorageDead(_14)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  6: StorageDead(_12)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  7: StorageDead(_8)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  8: StorageDead(_7)
    SourceInfo(src/ser.rs:2118:5-2118:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb45
  }
  preds [bb41, bb43]
  succs [bb45]

bb45
  0: StorageDead(_6)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  1: StorageDead(_4)
    SourceInfo(src/ser.rs:2125:1-2125:2)
  Terminator {
      source_info: SourceInfo(src/ser.rs:2125:2-2125:2)
      kind: goto -> bb46
  }
  preds [bb36, bb44]
  succs [bb46]

bb46
  Terminator {
      source_info: SourceInfo(src/ser.rs:2125:2-2125:2)
      kind: return
  }
  preds [bb39, bb45]
  succs []

bb47
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_62) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_56) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb32, bb47]
  succs [bb51]

bb49
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_49) -> [return: bb50, unwind terminate(cleanup)]
  }
  preds [bb21]
  succs [bb50]

bb50
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_37) -> [return: bb51, unwind terminate(cleanup)]
  }
  preds [bb23, bb49]
  succs [bb51]

bb51
  Terminator {
      source_info: SourceInfo(src/ser.rs:2091:1-2125:2)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3, bb5, bb6, bb10, bb11, bb15, bb17, bb22, bb25, bb26, bb31, bb33, bb37, bb38, bb40, bb42, bb48, bb50]
  succs []

