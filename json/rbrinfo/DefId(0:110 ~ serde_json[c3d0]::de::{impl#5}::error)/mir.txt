bb0
  0: StorageLive(_3)
    SourceInfo(src/de.rs:242:13-242:21)
  1: StorageLive(_4)
    SourceInfo(src/de.rs:242:24-242:33)
  2: _4 = &((*_1).0: R)
    SourceInfo(src/de.rs:242:24-242:33)
  Terminator {
      source_info: SourceInfo(src/de.rs:242:24-242:44)
      kind: _3 = <R as read::Read<'_>>::position(move _4) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_4)
    SourceInfo(src/de.rs:242:43-242:44)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/de.rs:242:13-242:21)
  2: StorageLive(_5)
    SourceInfo(src/de.rs:243:23-243:29)
  3: _5 = move _2
    SourceInfo(src/de.rs:243:23-243:29)
  4: StorageLive(_6)
    SourceInfo(src/de.rs:243:31-243:44)
  5: _6 = (_3.0: usize)
    SourceInfo(src/de.rs:243:31-243:44)
  6: StorageLive(_7)
    SourceInfo(src/de.rs:243:46-243:61)
  7: _7 = (_3.1: usize)
    SourceInfo(src/de.rs:243:46-243:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:243:9-243:62)
      kind: _0 = error::Error::syntax(move _5, move _6, move _7) -> [return: bb2, unwind: bb4]
  }
  preds [bb0]
  succs [bb2, bb4]

bb2
  0: StorageDead(_7)
    SourceInfo(src/de.rs:243:61-243:62)
  1: StorageDead(_6)
    SourceInfo(src/de.rs:243:61-243:62)
  2: StorageDead(_5)
    SourceInfo(src/de.rs:243:61-243:62)
  3: StorageDead(_3)
    SourceInfo(src/de.rs:244:5-244:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:244:5-244:6)
      kind: drop(_2) -> [return: bb3, unwind: bb6]
  }
  preds [bb1]
  succs [bb3, bb6]

bb3
  Terminator {
      source_info: SourceInfo(src/de.rs:244:6-244:6)
      kind: return
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/de.rs:243:61-243:62)
      kind: drop(_5) -> [return: bb5, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb5]

bb5
  Terminator {
      source_info: SourceInfo(src/de.rs:244:5-244:6)
      kind: drop(_2) -> [return: bb6, unwind terminate(cleanup)]
  }
  preds [bb0, bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/de.rs:241:5-244:6)
      kind: resume
  }
  preds [bb2, bb5]
  succs []

