bb0
  0: StorageLive(_2)
    SourceInfo(src/error.rs:392:15-392:29)
  1: _2 = &((*((*_1).0: alloc::boxed::Box<error::ErrorImpl>)).0: error::ErrorCode)
    SourceInfo(src/error.rs:392:15-392:29)
  2: PlaceMention(_2)
    SourceInfo(src/error.rs:392:15-392:29)
  3: _3 = discriminant((*_2))
    SourceInfo(src/error.rs:392:15-392:29)
  Terminator {
      source_info: SourceInfo(src/error.rs:392:9-392:29)
      kind: switchInt(move _3) -> [1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = core::option::Option::<&dyn core::error::Error>::None
    SourceInfo(src/error.rs:394:18-394:22)
  Terminator {
      source_info: SourceInfo(src/error.rs:394:18-394:22)
      kind: goto -> bb5
  }
  preds [bb0, bb2]
  succs [bb5]

bb2
  Terminator {
      source_info: SourceInfo(src/error.rs:393:13-393:31)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_4)
    SourceInfo(src/error.rs:393:27-393:30)
  1: _4 = &(((*_2) as Io).0: std::io::Error)
    SourceInfo(src/error.rs:393:27-393:30)
  2: StorageLive(_5)
    SourceInfo(src/error.rs:393:35-393:38)
  3: _5 = &(*_4)
    SourceInfo(src/error.rs:393:35-393:38)
  Terminator {
      source_info: SourceInfo(src/error.rs:393:35-393:47)
      kind: _0 = <std::io::Error as core::error::Error>::source(move _5) -> [return: bb4, unwind: bb6]
  }
  preds [bb2]
  succs [bb4, bb6]

bb4
  0: StorageDead(_5)
    SourceInfo(src/error.rs:393:46-393:47)
  1: StorageDead(_4)
    SourceInfo(src/error.rs:393:46-393:47)
  Terminator {
      source_info: SourceInfo(src/error.rs:393:46-393:47)
      kind: goto -> bb5
  }
  preds [bb3]
  succs [bb5]

bb5
  0: StorageDead(_2)
    SourceInfo(src/error.rs:396:5-396:6)
  Terminator {
      source_info: SourceInfo(src/error.rs:396:6-396:6)
      kind: return
  }
  preds [bb1, bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/error.rs:391:5-396:6)
      kind: resume
  }
  preds [bb3]
  succs []

