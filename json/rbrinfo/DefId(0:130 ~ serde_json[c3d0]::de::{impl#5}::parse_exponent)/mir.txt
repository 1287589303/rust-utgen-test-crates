bb0
  0: StorageLive(_5)
    SourceInfo(src/de.rs:573:9-573:24)
  1: StorageLive(_6)
    SourceInfo(src/de.rs:573:9-573:13)
  2: _6 = &mut (*_1)
    SourceInfo(src/de.rs:573:9-573:13)
  Terminator {
      source_info: SourceInfo(src/de.rs:573:9-573:24)
      kind: _5 = de::Deserializer::<R>::eat_char(move _6) -> [return: bb1, unwind: bb96]
  }
  preds []
  succs [bb1, bb96]

bb1
  0: StorageDead(_6)
    SourceInfo(src/de.rs:573:23-573:24)
  1: StorageDead(_5)
    SourceInfo(src/de.rs:573:24-573:25)
  2: StorageLive(_7)
    SourceInfo(src/de.rs:575:13-575:25)
  3: StorageLive(_8)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_9)
    SourceInfo(src/de.rs:575:39-575:58)
  5: StorageLive(_10)
    SourceInfo(src/de.rs:575:39-575:43)
  6: _10 = &mut (*_1)
    SourceInfo(src/de.rs:575:39-575:43)
  Terminator {
      source_info: SourceInfo(src/de.rs:575:39-575:58)
      kind: _9 = de::Deserializer::<R>::peek_or_null(move _10) -> [return: bb2, unwind: bb96]
  }
  preds [bb0]
  succs [bb2, bb96]

bb2
  0: StorageDead(_10)
    SourceInfo(src/de.rs:575:57-575:58)
  1: PlaceMention(_9)
    SourceInfo(src/de.rs:575:39-575:58)
  2: _11 = discriminant(_9)
    SourceInfo(src/de.rs:575:39-575:58)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _11) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(src/de.rs:575:39-575:58)
  Terminator {
      source_info: SourceInfo(src/de.rs:575:39-575:58)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_13)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _13 = move ((_9 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_15)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _15 = move _13
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _15)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_15) -> [return: bb7, unwind: bb94]
  }
  preds [bb2, bb4]
  succs [bb7, bb94]

bb6
  0: StorageLive(_12)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _12 = ((_9 as Ok).0: u8)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _8 = _12
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_12)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_8)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: switchInt(_8) -> [43: bb9, 45: bb10, otherwise: bb8]
  }
  preds [bb4]
  succs [bb8, bb9, bb10]

bb7
  0: StorageDead(_15)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb84, unwind: bb95]
  }
  preds [bb5]
  succs [bb84, bb95]

bb8
  0: _7 = const true
    SourceInfo(src/de.rs:584:18-584:22)
  Terminator {
      source_info: SourceInfo(src/de.rs:584:18-584:22)
      kind: goto -> bb15
  }
  preds [bb6, bb10]
  succs [bb15]

bb9
  Terminator {
      source_info: SourceInfo(src/de.rs:576:13-576:17)
      kind: falseEdge -> [real: bb11, imaginary: bb10]
  }
  preds [bb6]
  succs [bb10, bb11]

bb10
  Terminator {
      source_info: SourceInfo(src/de.rs:580:13-580:17)
      kind: falseEdge -> [real: bb13, imaginary: bb8]
  }
  preds [bb6, bb9]
  succs [bb8, bb13]

bb11
  0: StorageLive(_16)
    SourceInfo(src/de.rs:577:17-577:32)
  1: StorageLive(_17)
    SourceInfo(src/de.rs:577:17-577:21)
  2: _17 = &mut (*_1)
    SourceInfo(src/de.rs:577:17-577:21)
  Terminator {
      source_info: SourceInfo(src/de.rs:577:17-577:32)
      kind: _16 = de::Deserializer::<R>::eat_char(move _17) -> [return: bb12, unwind: bb95]
  }
  preds [bb9]
  succs [bb12, bb95]

bb12
  0: StorageDead(_17)
    SourceInfo(src/de.rs:577:31-577:32)
  1: StorageDead(_16)
    SourceInfo(src/de.rs:577:32-577:33)
  2: _7 = const true
    SourceInfo(src/de.rs:578:17-578:21)
  Terminator {
      source_info: SourceInfo(src/de.rs:578:17-578:21)
      kind: goto -> bb15
  }
  preds [bb11]
  succs [bb15]

bb13
  0: StorageLive(_18)
    SourceInfo(src/de.rs:581:17-581:32)
  1: StorageLive(_19)
    SourceInfo(src/de.rs:581:17-581:21)
  2: _19 = &mut (*_1)
    SourceInfo(src/de.rs:581:17-581:21)
  Terminator {
      source_info: SourceInfo(src/de.rs:581:17-581:32)
      kind: _18 = de::Deserializer::<R>::eat_char(move _19) -> [return: bb14, unwind: bb95]
  }
  preds [bb10]
  succs [bb14, bb95]

bb14
  0: StorageDead(_19)
    SourceInfo(src/de.rs:581:31-581:32)
  1: StorageDead(_18)
    SourceInfo(src/de.rs:581:32-581:33)
  2: _7 = const false
    SourceInfo(src/de.rs:582:17-582:22)
  Terminator {
      source_info: SourceInfo(src/de.rs:582:17-582:22)
      kind: goto -> bb15
  }
  preds [bb13]
  succs [bb15]

bb15
  0: FakeRead(ForLet(None), _7)
    SourceInfo(src/de.rs:575:13-575:25)
  Terminator {
      source_info: SourceInfo(src/de.rs:585:10-585:11)
      kind: drop(_9) -> [return: bb16, unwind: bb96]
  }
  preds [bb8, bb12, bb14]
  succs [bb16, bb96]

bb16
  0: StorageDead(_9)
    SourceInfo(src/de.rs:585:10-585:11)
  1: StorageDead(_8)
    SourceInfo(src/de.rs:585:10-585:11)
  2: StorageLive(_20)
    SourceInfo(src/de.rs:587:13-587:17)
  3: StorageLive(_21)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_22)
    SourceInfo(src/de.rs:587:31-587:47)
  5: StorageLive(_23)
    SourceInfo(src/de.rs:587:31-587:35)
  6: _23 = &mut (*_1)
    SourceInfo(src/de.rs:587:31-587:35)
  Terminator {
      source_info: SourceInfo(src/de.rs:587:31-587:47)
      kind: _22 = de::Deserializer::<R>::next_char(move _23) -> [return: bb17, unwind: bb96]
  }
  preds [bb15]
  succs [bb17, bb96]

bb17
  0: StorageDead(_23)
    SourceInfo(src/de.rs:587:46-587:47)
  1: PlaceMention(_22)
    SourceInfo(src/de.rs:587:31-587:47)
  2: _24 = discriminant(_22)
    SourceInfo(src/de.rs:587:31-587:47)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _24) -> [0: bb19, 1: bb20, otherwise: bb18]
  }
  preds [bb16]
  succs [bb18, bb19, bb20]

bb18
  0: FakeRead(ForMatchedPlace(None), _22)
    SourceInfo(src/de.rs:587:31-587:47)
  Terminator {
      source_info: SourceInfo(src/de.rs:587:31-587:47)
      kind: unreachable
  }
  preds [bb17]
  succs []

bb19
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb21, imaginary: bb20]
  }
  preds [bb17]
  succs [bb20, bb21]

bb20
  0: StorageLive(_26)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _26 = move ((_22 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_28)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _28 = move _26
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _28)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_28) -> [return: bb22, unwind: bb92]
  }
  preds [bb17, bb19]
  succs [bb22, bb92]

bb21
  0: StorageLive(_25)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _25 = ((_22 as Ok).0: core::option::Option<u8>)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _21 = _25
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_25)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_21)
    SourceInfo(src/lib.rs:408:9-411:10)
  5: _29 = discriminant(_21)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: switchInt(move _29) -> [0: bb25, 1: bb24, otherwise: bb23]
  }
  preds [bb19]
  succs [bb23, bb24, bb25]

bb22
  0: StorageDead(_28)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_26) -> [return: bb80, unwind: bb93]
  }
  preds [bb20]
  succs [bb80, bb93]

bb23
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(src/lib.rs:408:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-411:10)
      kind: unreachable
  }
  preds [bb21]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(src/de.rs:588:13-588:20)
      kind: falseEdge -> [real: bb26, imaginary: bb25]
  }
  preds [bb21]
  succs [bb25, bb26]

bb25
  0: StorageLive(_32)
    SourceInfo(src/de.rs:590:28-590:71)
  1: StorageLive(_33)
    SourceInfo(src/de.rs:590:28-590:32)
  2: _33 = &(*_1)
    SourceInfo(src/de.rs:590:28-590:32)
  3: StorageLive(_34)
    SourceInfo(src/de.rs:590:39-590:70)
  4: _34 = error::ErrorCode::EofWhileParsingValue
    SourceInfo(src/de.rs:590:39-590:70)
  Terminator {
      source_info: SourceInfo(src/de.rs:590:28-590:71)
      kind: _32 = de::Deserializer::<R>::error(move _33, move _34) -> [return: bb27, unwind: bb91]
  }
  preds [bb21, bb24]
  succs [bb27, bb91]

bb26
  0: StorageLive(_30)
    SourceInfo(src/de.rs:588:18-588:19)
  1: _30 = ((_21 as Some).0: u8)
    SourceInfo(src/de.rs:588:18-588:19)
  2: _20 = _30
    SourceInfo(src/de.rs:588:24-588:25)
  3: StorageDead(_30)
    SourceInfo(src/de.rs:588:24-588:25)
  4: FakeRead(ForLet(None), _20)
    SourceInfo(src/de.rs:587:13-587:17)
  Terminator {
      source_info: SourceInfo(src/de.rs:592:10-592:11)
      kind: drop(_22) -> [return: bb29, unwind: bb96]
  }
  preds [bb24]
  succs [bb29, bb96]

bb27
  0: StorageDead(_34)
    SourceInfo(src/de.rs:590:70-590:71)
  1: StorageDead(_33)
    SourceInfo(src/de.rs:590:70-590:71)
  2: _0 = core::result::Result::<f64, error::Error>::Err(move _32)
    SourceInfo(src/de.rs:590:24-590:72)
  Terminator {
      source_info: SourceInfo(src/de.rs:590:71-590:72)
      kind: drop(_32) -> [return: bb28, unwind: bb93]
  }
  preds [bb25]
  succs [bb28, bb93]

bb28
  0: StorageDead(_32)
    SourceInfo(src/de.rs:590:71-590:72)
  Terminator {
      source_info: SourceInfo(src/de.rs:590:17-590:72)
      kind: goto -> bb81
  }
  preds [bb27]
  succs [bb81]

bb29
  0: StorageDead(_22)
    SourceInfo(src/de.rs:592:10-592:11)
  1: StorageDead(_21)
    SourceInfo(src/de.rs:592:10-592:11)
  2: StorageLive(_35)
    SourceInfo(src/de.rs:595:13-595:20)
  3: PlaceMention(_20)
    SourceInfo(src/de.rs:595:29-595:33)
  4: _36 = Le(const 48_u8, _20)
    SourceInfo(src/de.rs:596:17-596:28)
  Terminator {
      source_info: SourceInfo(src/de.rs:596:17-596:28)
      kind: switchInt(move _36) -> [0: bb30, otherwise: bb32]
  }
  preds [bb26]
  succs [bb30, bb32]

bb30
  0: StorageLive(_43)
    SourceInfo(src/de.rs:598:28-598:64)
  1: StorageLive(_44)
    SourceInfo(src/de.rs:598:28-598:32)
  2: _44 = &(*_1)
    SourceInfo(src/de.rs:598:28-598:32)
  3: StorageLive(_45)
    SourceInfo(src/de.rs:598:39-598:63)
  4: _45 = error::ErrorCode::InvalidNumber
    SourceInfo(src/de.rs:598:39-598:63)
  Terminator {
      source_info: SourceInfo(src/de.rs:598:28-598:64)
      kind: _43 = de::Deserializer::<R>::error(move _44, move _45) -> [return: bb35, unwind: bb90]
  }
  preds [bb29, bb31, bb32]
  succs [bb35, bb90]

bb31
  Terminator {
      source_info: SourceInfo(src/de.rs:596:13-596:14)
      kind: falseEdge -> [real: bb33, imaginary: bb30]
  }
  preds [bb32]
  succs [bb30, bb33]

bb32
  0: _37 = Le(_20, const 57_u8)
    SourceInfo(src/de.rs:596:17-596:28)
  Terminator {
      source_info: SourceInfo(src/de.rs:596:17-596:28)
      kind: switchInt(move _37) -> [0: bb30, otherwise: bb31]
  }
  preds [bb29]
  succs [bb30, bb31]

bb33
  0: StorageLive(_38)
    SourceInfo(src/de.rs:596:13-596:14)
  1: _38 = _20
    SourceInfo(src/de.rs:596:13-596:14)
  2: StorageLive(_39)
    SourceInfo(src/de.rs:596:32-596:42)
  3: StorageLive(_40)
    SourceInfo(src/de.rs:596:33-596:34)
  4: _40 = _38
    SourceInfo(src/de.rs:596:33-596:34)
  5: _41 = SubWithOverflow(_40, const 48_u8)
    SourceInfo(src/de.rs:596:32-596:42)
  Terminator {
      source_info: SourceInfo(src/de.rs:596:32-596:42)
      kind: assert(!move (_41.1: bool), "attempt to compute `{} - {}`, which would overflow", move _40, const 48_u8) -> [success: bb34, unwind: bb96]
  }
  preds [bb31]
  succs [bb34, bb96]

bb34
  0: _39 = move (_41.0: u8)
    SourceInfo(src/de.rs:596:32-596:42)
  1: StorageDead(_40)
    SourceInfo(src/de.rs:596:41-596:42)
  2: _35 = move _39 as i32 (IntToInt)
    SourceInfo(src/de.rs:596:32-596:49)
  3: StorageDead(_39)
    SourceInfo(src/de.rs:596:48-596:49)
  4: StorageDead(_38)
    SourceInfo(src/de.rs:596:48-596:49)
  5: FakeRead(ForLet(None), _35)
    SourceInfo(src/de.rs:595:13-595:20)
  6: StorageLive(_46)
    SourceInfo(src/de.rs:602:9-612:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:9-612:10)
      kind: goto -> bb37
  }
  preds [bb33]
  succs [bb37]

bb35
  0: StorageDead(_45)
    SourceInfo(src/de.rs:598:63-598:64)
  1: StorageDead(_44)
    SourceInfo(src/de.rs:598:63-598:64)
  2: _0 = core::result::Result::<f64, error::Error>::Err(move _43)
    SourceInfo(src/de.rs:598:24-598:65)
  Terminator {
      source_info: SourceInfo(src/de.rs:598:64-598:65)
      kind: drop(_43) -> [return: bb36, unwind: bb96]
  }
  preds [bb30]
  succs [bb36, bb96]

bb36
  0: StorageDead(_43)
    SourceInfo(src/de.rs:598:64-598:65)
  Terminator {
      source_info: SourceInfo(src/de.rs:598:17-598:65)
      kind: goto -> bb79
  }
  preds [bb35]
  succs [bb79]

bb37
  Terminator {
      source_info: SourceInfo(src/de.rs:602:9-612:10)
      kind: falseUnwind -> [real: bb38, unwind: bb96]
  }
  preds [bb34, bb68]
  succs [bb38, bb96]

bb38
  0: StorageLive(_48)
    SourceInfo(src/lib.rs:408:9-411:10)
  1: StorageLive(_49)
    SourceInfo(src/de.rs:602:42-602:61)
  2: StorageLive(_50)
    SourceInfo(src/de.rs:602:42-602:46)
  3: _50 = &mut (*_1)
    SourceInfo(src/de.rs:602:42-602:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:42-602:61)
      kind: _49 = de::Deserializer::<R>::peek_or_null(move _50) -> [return: bb39, unwind: bb96]
  }
  preds [bb37]
  succs [bb39, bb96]

bb39
  0: StorageDead(_50)
    SourceInfo(src/de.rs:602:60-602:61)
  1: PlaceMention(_49)
    SourceInfo(src/de.rs:602:42-602:61)
  2: _51 = discriminant(_49)
    SourceInfo(src/de.rs:602:42-602:61)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _51) -> [0: bb41, 1: bb42, otherwise: bb40]
  }
  preds [bb38]
  succs [bb40, bb41, bb42]

bb40
  0: FakeRead(ForMatchedPlace(None), _49)
    SourceInfo(src/de.rs:602:42-602:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:42-602:61)
      kind: unreachable
  }
  preds [bb39]
  succs []

bb41
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb43, imaginary: bb42]
  }
  preds [bb39]
  succs [bb42, bb43]

bb42
  0: StorageLive(_53)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _53 = move ((_49 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_55)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _55 = move _53
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<f64, error::Error>::Err(move _55)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_55) -> [return: bb44, unwind: bb88]
  }
  preds [bb39, bb41]
  succs [bb44, bb88]

bb43
  0: StorageLive(_52)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _52 = ((_49 as Ok).0: u8)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _48 = _52
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_52)
    SourceInfo(src/lib.rs:409:48-409:49)
  4: PlaceMention(_48)
    SourceInfo(src/lib.rs:408:9-411:10)
  5: _56 = Le(const 48_u8, _48)
    SourceInfo(src/de.rs:602:23-602:34)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:23-602:34)
      kind: switchInt(move _56) -> [0: bb45, otherwise: bb47]
  }
  preds [bb41]
  succs [bb45, bb47]

bb44
  0: StorageDead(_55)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_53) -> [return: bb76, unwind: bb89]
  }
  preds [bb42]
  succs [bb76, bb89]

bb45
  0: StorageLive(_105)
    SourceInfo(src/de.rs:602:9-612:10)
  1: _46 = const ()
    SourceInfo(src/de.rs:602:9-612:10)
  2: StorageDead(_105)
    SourceInfo(src/de.rs:612:9-612:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:612:9-612:10)
      kind: drop(_49) -> [return: bb69, unwind: bb96]
  }
  preds [bb43, bb46, bb47]
  succs [bb69, bb96]

bb46
  Terminator {
      source_info: SourceInfo(src/de.rs:602:19-602:20)
      kind: falseEdge -> [real: bb48, imaginary: bb45]
  }
  preds [bb47]
  succs [bb45, bb48]

bb47
  0: _57 = Le(_48, const 57_u8)
    SourceInfo(src/de.rs:602:23-602:34)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:23-602:34)
      kind: switchInt(move _57) -> [0: bb45, otherwise: bb46]
  }
  preds [bb43]
  succs [bb45, bb46]

bb48
  0: StorageLive(_58)
    SourceInfo(src/de.rs:602:19-602:20)
  1: _58 = _48
    SourceInfo(src/de.rs:602:19-602:20)
  2: StorageLive(_59)
    SourceInfo(src/de.rs:603:13-603:28)
  3: StorageLive(_60)
    SourceInfo(src/de.rs:603:13-603:17)
  4: _60 = &mut (*_1)
    SourceInfo(src/de.rs:603:13-603:17)
  Terminator {
      source_info: SourceInfo(src/de.rs:603:13-603:28)
      kind: _59 = de::Deserializer::<R>::eat_char(move _60) -> [return: bb49, unwind: bb89]
  }
  preds [bb46]
  succs [bb49, bb89]

bb49
  0: StorageDead(_60)
    SourceInfo(src/de.rs:603:27-603:28)
  1: StorageDead(_59)
    SourceInfo(src/de.rs:603:28-603:29)
  2: StorageLive(_61)
    SourceInfo(src/de.rs:604:17-604:22)
  3: StorageLive(_62)
    SourceInfo(src/de.rs:604:25-604:35)
  4: StorageLive(_63)
    SourceInfo(src/de.rs:604:26-604:27)
  5: _63 = _58
    SourceInfo(src/de.rs:604:26-604:27)
  6: _64 = SubWithOverflow(_63, const 48_u8)
    SourceInfo(src/de.rs:604:25-604:35)
  Terminator {
      source_info: SourceInfo(src/de.rs:604:25-604:35)
      kind: assert(!move (_64.1: bool), "attempt to compute `{} - {}`, which would overflow", move _63, const 48_u8) -> [success: bb50, unwind: bb89]
  }
  preds [bb48]
  succs [bb50, bb89]

bb50
  0: _62 = move (_64.0: u8)
    SourceInfo(src/de.rs:604:25-604:35)
  1: StorageDead(_63)
    SourceInfo(src/de.rs:604:34-604:35)
  2: _61 = move _62 as i32 (IntToInt)
    SourceInfo(src/de.rs:604:25-604:42)
  3: StorageDead(_62)
    SourceInfo(src/de.rs:604:41-604:42)
  4: FakeRead(ForLet(None), _61)
    SourceInfo(src/de.rs:604:17-604:22)
  5: StorageLive(_65)
    SourceInfo(src/de.rs:606:13-609:14)
  6: StorageLive(_66)
    SourceInfo(src/de.rs:103:9-105:10)
  7: StorageLive(_67)
    SourceInfo(src/de.rs:606:44-606:52)
  8: _67 = const core::num::<impl i32>::MAX
    SourceInfo(src/de.rs:606:44-606:52)
  9: PlaceMention(_67)
    SourceInfo(src/de.rs:606:44-606:52)
  10: StorageLive(_68)
    SourceInfo(src/de.rs:104:13-104:14)
  11: _68 = _67
    SourceInfo(src/de.rs:104:13-104:14)
  12: StorageLive(_69)
    SourceInfo(src/de.rs:104:18-104:30)
  13: StorageLive(_70)
    SourceInfo(src/de.rs:104:18-104:20)
  14: _70 = _35
    SourceInfo(src/de.rs:104:18-104:20)
  15: StorageLive(_71)
    SourceInfo(src/de.rs:104:24-104:30)
  16: StorageLive(_72)
    SourceInfo(src/de.rs:104:24-104:25)
  17: _72 = _68
    SourceInfo(src/de.rs:104:24-104:25)
  18: _73 = Eq(const 10_i32, const 0_i32)
    SourceInfo(src/de.rs:104:24-104:30)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:24-104:30)
      kind: assert(!move _73, "attempt to divide `{}` by zero", _72) -> [success: bb51, unwind: bb89]
  }
  preds [bb49]
  succs [bb51, bb89]

bb51
  0: _74 = Eq(const 10_i32, const -1_i32)
    SourceInfo(src/de.rs:104:24-104:30)
  1: _75 = Eq(_72, const i32::MIN)
    SourceInfo(src/de.rs:104:24-104:30)
  2: _76 = BitAnd(move _74, move _75)
    SourceInfo(src/de.rs:104:24-104:30)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:24-104:30)
      kind: assert(!move _76, "attempt to compute `{} / {}`, which would overflow", _72, const 10_i32) -> [success: bb52, unwind: bb89]
  }
  preds [bb50]
  succs [bb52, bb89]

bb52
  0: _71 = Div(move _72, const 10_i32)
    SourceInfo(src/de.rs:104:24-104:30)
  1: StorageDead(_72)
    SourceInfo(src/de.rs:104:29-104:30)
  2: _69 = Ge(move _70, move _71)
    SourceInfo(src/de.rs:104:18-104:30)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:30)
      kind: switchInt(move _69) -> [0: bb54, otherwise: bb53]
  }
  preds [bb51]
  succs [bb53, bb54]

bb53
  0: StorageDead(_71)
    SourceInfo(src/de.rs:104:29-104:30)
  1: StorageDead(_70)
    SourceInfo(src/de.rs:104:29-104:30)
  2: StorageLive(_77)
    SourceInfo(src/de.rs:104:35-104:46)
  3: StorageLive(_78)
    SourceInfo(src/de.rs:104:35-104:37)
  4: _78 = _35
    SourceInfo(src/de.rs:104:35-104:37)
  5: StorageLive(_79)
    SourceInfo(src/de.rs:104:40-104:46)
  6: StorageLive(_80)
    SourceInfo(src/de.rs:104:40-104:41)
  7: _80 = _68
    SourceInfo(src/de.rs:104:40-104:41)
  8: _81 = Eq(const 10_i32, const 0_i32)
    SourceInfo(src/de.rs:104:40-104:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:40-104:46)
      kind: assert(!move _81, "attempt to divide `{}` by zero", _80) -> [success: bb55, unwind: bb89]
  }
  preds [bb52]
  succs [bb55, bb89]

bb54
  0: StorageDead(_71)
    SourceInfo(src/de.rs:104:29-104:30)
  1: StorageDead(_70)
    SourceInfo(src/de.rs:104:29-104:30)
  2: _66 = const false
    SourceInfo(src/de.rs:104:18-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:62)
      kind: goto -> bb62
  }
  preds [bb52]
  succs [bb62]

bb55
  0: _82 = Eq(const 10_i32, const -1_i32)
    SourceInfo(src/de.rs:104:40-104:46)
  1: _83 = Eq(_80, const i32::MIN)
    SourceInfo(src/de.rs:104:40-104:46)
  2: _84 = BitAnd(move _82, move _83)
    SourceInfo(src/de.rs:104:40-104:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:40-104:46)
      kind: assert(!move _84, "attempt to compute `{} / {}`, which would overflow", _80, const 10_i32) -> [success: bb56, unwind: bb89]
  }
  preds [bb53]
  succs [bb56, bb89]

bb56
  0: _79 = Div(move _80, const 10_i32)
    SourceInfo(src/de.rs:104:40-104:46)
  1: StorageDead(_80)
    SourceInfo(src/de.rs:104:45-104:46)
  2: _77 = Gt(move _78, move _79)
    SourceInfo(src/de.rs:104:35-104:46)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:35-104:46)
      kind: switchInt(move _77) -> [0: bb58, otherwise: bb57]
  }
  preds [bb55]
  succs [bb57, bb58]

bb57
  0: StorageDead(_79)
    SourceInfo(src/de.rs:104:45-104:46)
  1: StorageDead(_78)
    SourceInfo(src/de.rs:104:45-104:46)
  2: _66 = const true
    SourceInfo(src/de.rs:104:34-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:34-104:62)
      kind: goto -> bb61
  }
  preds [bb56]
  succs [bb61]

bb58
  0: StorageDead(_79)
    SourceInfo(src/de.rs:104:45-104:46)
  1: StorageDead(_78)
    SourceInfo(src/de.rs:104:45-104:46)
  2: StorageLive(_85)
    SourceInfo(src/de.rs:104:50-104:52)
  3: _85 = _61
    SourceInfo(src/de.rs:104:50-104:52)
  4: StorageLive(_86)
    SourceInfo(src/de.rs:104:55-104:61)
  5: StorageLive(_87)
    SourceInfo(src/de.rs:104:55-104:56)
  6: _87 = _68
    SourceInfo(src/de.rs:104:55-104:56)
  7: _88 = Eq(const 10_i32, const 0_i32)
    SourceInfo(src/de.rs:104:55-104:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:55-104:61)
      kind: assert(!move _88, "attempt to calculate the remainder of `{}` with a divisor of zero", _87) -> [success: bb59, unwind: bb89]
  }
  preds [bb56]
  succs [bb59, bb89]

bb59
  0: _89 = Eq(const 10_i32, const -1_i32)
    SourceInfo(src/de.rs:104:55-104:61)
  1: _90 = Eq(_87, const i32::MIN)
    SourceInfo(src/de.rs:104:55-104:61)
  2: _91 = BitAnd(move _89, move _90)
    SourceInfo(src/de.rs:104:55-104:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:55-104:61)
      kind: assert(!move _91, "attempt to compute the remainder of `{} % {}`, which would overflow", _87, const 10_i32) -> [success: bb60, unwind: bb89]
  }
  preds [bb58]
  succs [bb60, bb89]

bb60
  0: _86 = Rem(move _87, const 10_i32)
    SourceInfo(src/de.rs:104:55-104:61)
  1: StorageDead(_87)
    SourceInfo(src/de.rs:104:60-104:61)
  2: _66 = Gt(move _85, move _86)
    SourceInfo(src/de.rs:104:50-104:61)
  3: StorageDead(_86)
    SourceInfo(src/de.rs:104:60-104:61)
  4: StorageDead(_85)
    SourceInfo(src/de.rs:104:60-104:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:34-104:62)
      kind: goto -> bb61
  }
  preds [bb59]
  succs [bb61]

bb61
  0: StorageDead(_77)
    SourceInfo(src/de.rs:104:61-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:104:18-104:62)
      kind: goto -> bb62
  }
  preds [bb57, bb60]
  succs [bb62]

bb62
  0: StorageDead(_69)
    SourceInfo(src/de.rs:104:61-104:62)
  1: StorageDead(_68)
    SourceInfo(src/de.rs:104:61-104:62)
  Terminator {
      source_info: SourceInfo(src/de.rs:103:9-105:10)
      kind: switchInt(move _66) -> [0: bb64, otherwise: bb63]
  }
  preds [bb54, bb61]
  succs [bb63, bb64]

bb63
  0: StorageDead(_67)
    SourceInfo(src/de.rs:105:9-105:10)
  1: StorageLive(_93)
    SourceInfo(src/de.rs:607:21-607:37)
  2: StorageLive(_94)
    SourceInfo(src/de.rs:607:40-607:51)
  3: _94 = _3
    SourceInfo(src/de.rs:607:40-607:51)
  4: _93 = Eq(move _94, const 0_u64)
    SourceInfo(src/de.rs:607:40-607:56)
  5: StorageDead(_94)
    SourceInfo(src/de.rs:607:55-607:56)
  6: FakeRead(ForLet(None), _93)
    SourceInfo(src/de.rs:607:21-607:37)
  7: StorageLive(_95)
    SourceInfo(src/de.rs:608:24-608:28)
  8: _95 = &mut (*_1)
    SourceInfo(src/de.rs:608:24-608:28)
  9: StorageLive(_96)
    SourceInfo(src/de.rs:608:53-608:61)
  10: _96 = _2
    SourceInfo(src/de.rs:608:53-608:61)
  11: StorageLive(_97)
    SourceInfo(src/de.rs:608:63-608:79)
  12: _97 = _93
    SourceInfo(src/de.rs:608:63-608:79)
  13: StorageLive(_98)
    SourceInfo(src/de.rs:608:81-608:93)
  14: _98 = _7
    SourceInfo(src/de.rs:608:81-608:93)
  Terminator {
      source_info: SourceInfo(src/de.rs:608:24-608:94)
      kind: _0 = de::Deserializer::<R>::parse_exponent_overflow(move _95, move _96, move _97, move _98) -> [return: bb65, unwind: bb89]
  }
  preds [bb62]
  succs [bb65, bb89]

bb64
  0: StorageDead(_67)
    SourceInfo(src/de.rs:105:9-105:10)
  1: _65 = const ()
    SourceInfo(src/de.rs:609:14-609:14)
  2: StorageDead(_66)
    SourceInfo(src/de.rs:609:13-609:14)
  3: StorageDead(_65)
    SourceInfo(src/de.rs:609:13-609:14)
  4: StorageLive(_99)
    SourceInfo(src/de.rs:611:19-611:27)
  5: StorageLive(_100)
    SourceInfo(src/de.rs:611:19-611:22)
  6: _100 = _35
    SourceInfo(src/de.rs:611:19-611:22)
  7: _101 = MulWithOverflow(_100, const 10_i32)
    SourceInfo(src/de.rs:611:19-611:27)
  Terminator {
      source_info: SourceInfo(src/de.rs:611:19-611:27)
      kind: assert(!move (_101.1: bool), "attempt to compute `{} * {}`, which would overflow", move _100, const 10_i32) -> [success: bb66, unwind: bb89]
  }
  preds [bb62]
  succs [bb66, bb89]

bb65
  0: StorageDead(_98)
    SourceInfo(src/de.rs:608:93-608:94)
  1: StorageDead(_97)
    SourceInfo(src/de.rs:608:93-608:94)
  2: StorageDead(_96)
    SourceInfo(src/de.rs:608:93-608:94)
  3: StorageDead(_95)
    SourceInfo(src/de.rs:608:93-608:94)
  4: StorageDead(_93)
    SourceInfo(src/de.rs:609:13-609:14)
  5: StorageDead(_66)
    SourceInfo(src/de.rs:609:13-609:14)
  6: StorageDead(_65)
    SourceInfo(src/de.rs:609:13-609:14)
  7: StorageDead(_61)
    SourceInfo(src/de.rs:612:9-612:10)
  8: StorageDead(_58)
    SourceInfo(src/de.rs:612:9-612:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb63]
  succs [bb77]

bb66
  0: _99 = move (_101.0: i32)
    SourceInfo(src/de.rs:611:19-611:27)
  1: StorageDead(_100)
    SourceInfo(src/de.rs:611:26-611:27)
  2: StorageLive(_102)
    SourceInfo(src/de.rs:611:30-611:35)
  3: _102 = _61
    SourceInfo(src/de.rs:611:30-611:35)
  4: _103 = AddWithOverflow(_99, _102)
    SourceInfo(src/de.rs:611:19-611:35)
  Terminator {
      source_info: SourceInfo(src/de.rs:611:19-611:35)
      kind: assert(!move (_103.1: bool), "attempt to compute `{} + {}`, which would overflow", move _99, move _102) -> [success: bb67, unwind: bb89]
  }
  preds [bb64]
  succs [bb67, bb89]

bb67
  0: _35 = move (_103.0: i32)
    SourceInfo(src/de.rs:611:13-611:35)
  1: StorageDead(_102)
    SourceInfo(src/de.rs:611:34-611:35)
  2: StorageDead(_99)
    SourceInfo(src/de.rs:611:34-611:35)
  3: _47 = const ()
    SourceInfo(src/de.rs:602:63-612:10)
  4: StorageDead(_61)
    SourceInfo(src/de.rs:612:9-612:10)
  5: StorageDead(_58)
    SourceInfo(src/de.rs:612:9-612:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:612:9-612:10)
      kind: drop(_49) -> [return: bb68, unwind: bb96]
  }
  preds [bb66]
  succs [bb68, bb96]

bb68
  0: StorageDead(_49)
    SourceInfo(src/de.rs:612:9-612:10)
  1: StorageDead(_48)
    SourceInfo(src/de.rs:612:9-612:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:602:9-612:10)
      kind: goto -> bb37
  }
  preds [bb67]
  succs [bb37]

bb69
  0: StorageDead(_49)
    SourceInfo(src/de.rs:612:9-612:10)
  1: StorageDead(_48)
    SourceInfo(src/de.rs:612:9-612:10)
  2: StorageDead(_46)
    SourceInfo(src/de.rs:612:9-612:10)
  3: StorageLive(_107)
    SourceInfo(src/de.rs:614:13-614:22)
  4: StorageLive(_108)
    SourceInfo(src/de.rs:614:28-614:40)
  5: _108 = _7
    SourceInfo(src/de.rs:614:28-614:40)
  Terminator {
      source_info: SourceInfo(src/de.rs:614:28-614:40)
      kind: switchInt(move _108) -> [0: bb72, otherwise: bb70]
  }
  preds [bb45]
  succs [bb70, bb72]

bb70
  0: StorageLive(_109)
    SourceInfo(src/de.rs:615:13-615:25)
  1: _109 = _4
    SourceInfo(src/de.rs:615:13-615:25)
  2: StorageLive(_110)
    SourceInfo(src/de.rs:615:41-615:44)
  3: _110 = _35
    SourceInfo(src/de.rs:615:41-615:44)
  Terminator {
      source_info: SourceInfo(src/de.rs:615:13-615:45)
      kind: _107 = core::num::<impl i32>::saturating_add(move _109, move _110) -> [return: bb71, unwind: bb96]
  }
  preds [bb69]
  succs [bb71, bb96]

bb71
  0: StorageDead(_110)
    SourceInfo(src/de.rs:615:44-615:45)
  1: StorageDead(_109)
    SourceInfo(src/de.rs:615:44-615:45)
  Terminator {
      source_info: SourceInfo(src/de.rs:614:25-618:10)
      kind: goto -> bb74
  }
  preds [bb70]
  succs [bb74]

bb72
  0: StorageLive(_111)
    SourceInfo(src/de.rs:617:13-617:25)
  1: _111 = _4
    SourceInfo(src/de.rs:617:13-617:25)
  2: StorageLive(_112)
    SourceInfo(src/de.rs:617:41-617:44)
  3: _112 = _35
    SourceInfo(src/de.rs:617:41-617:44)
  Terminator {
      source_info: SourceInfo(src/de.rs:617:13-617:45)
      kind: _107 = core::num::<impl i32>::saturating_sub(move _111, move _112) -> [return: bb73, unwind: bb96]
  }
  preds [bb69]
  succs [bb73, bb96]

bb73
  0: StorageDead(_112)
    SourceInfo(src/de.rs:617:44-617:45)
  1: StorageDead(_111)
    SourceInfo(src/de.rs:617:44-617:45)
  Terminator {
      source_info: SourceInfo(src/de.rs:614:25-618:10)
      kind: goto -> bb74
  }
  preds [bb72]
  succs [bb74]

bb74
  0: StorageDead(_108)
    SourceInfo(src/de.rs:618:9-618:10)
  1: FakeRead(ForLet(None), _107)
    SourceInfo(src/de.rs:614:13-614:22)
  2: StorageLive(_113)
    SourceInfo(src/de.rs:620:9-620:13)
  3: _113 = &mut (*_1)
    SourceInfo(src/de.rs:620:9-620:13)
  4: StorageLive(_114)
    SourceInfo(src/de.rs:620:29-620:37)
  5: _114 = _2
    SourceInfo(src/de.rs:620:29-620:37)
  6: StorageLive(_115)
    SourceInfo(src/de.rs:620:39-620:50)
  7: _115 = _3
    SourceInfo(src/de.rs:620:39-620:50)
  8: StorageLive(_116)
    SourceInfo(src/de.rs:620:52-620:61)
  9: _116 = _107
    SourceInfo(src/de.rs:620:52-620:61)
  Terminator {
      source_info: SourceInfo(src/de.rs:620:9-620:62)
      kind: _0 = de::Deserializer::<R>::f64_from_parts(move _113, move _114, move _115, move _116) -> [return: bb75, unwind: bb96]
  }
  preds [bb71, bb73]
  succs [bb75, bb96]

bb75
  0: StorageDead(_116)
    SourceInfo(src/de.rs:620:61-620:62)
  1: StorageDead(_115)
    SourceInfo(src/de.rs:620:61-620:62)
  2: StorageDead(_114)
    SourceInfo(src/de.rs:620:61-620:62)
  3: StorageDead(_113)
    SourceInfo(src/de.rs:620:61-620:62)
  4: StorageDead(_107)
    SourceInfo(src/de.rs:621:5-621:6)
  5: StorageDead(_35)
    SourceInfo(src/de.rs:621:5-621:6)
  6: StorageDead(_20)
    SourceInfo(src/de.rs:621:5-621:6)
  7: StorageDead(_7)
    SourceInfo(src/de.rs:621:5-621:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:621:6-621:6)
      kind: goto -> bb87
  }
  preds [bb74]
  succs [bb87]

bb76
  0: StorageDead(_53)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb77
  }
  preds [bb44]
  succs [bb77]

bb77
  Terminator {
      source_info: SourceInfo(src/de.rs:612:9-612:10)
      kind: drop(_49) -> [return: bb78, unwind: bb96]
  }
  preds [bb65, bb76]
  succs [bb78, bb96]

bb78
  0: StorageDead(_49)
    SourceInfo(src/de.rs:612:9-612:10)
  1: StorageDead(_48)
    SourceInfo(src/de.rs:612:9-612:10)
  2: StorageDead(_46)
    SourceInfo(src/de.rs:612:9-612:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb79
  }
  preds [bb77]
  succs [bb79]

bb79
  0: StorageDead(_35)
    SourceInfo(src/de.rs:621:5-621:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb36, bb78]
  succs [bb83]

bb80
  0: StorageDead(_26)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb81
  }
  preds [bb22]
  succs [bb81]

bb81
  Terminator {
      source_info: SourceInfo(src/de.rs:592:10-592:11)
      kind: drop(_22) -> [return: bb82, unwind: bb96]
  }
  preds [bb28, bb80]
  succs [bb82, bb96]

bb82
  0: StorageDead(_22)
    SourceInfo(src/de.rs:592:10-592:11)
  1: StorageDead(_21)
    SourceInfo(src/de.rs:592:10-592:11)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb83
  }
  preds [bb81]
  succs [bb83]

bb83
  0: StorageDead(_20)
    SourceInfo(src/de.rs:621:5-621:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb86
  }
  preds [bb79, bb82]
  succs [bb86]

bb84
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/de.rs:585:10-585:11)
      kind: drop(_9) -> [return: bb85, unwind: bb96]
  }
  preds [bb7]
  succs [bb85, bb96]

bb85
  0: StorageDead(_9)
    SourceInfo(src/de.rs:585:10-585:11)
  1: StorageDead(_8)
    SourceInfo(src/de.rs:585:10-585:11)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb86
  }
  preds [bb84]
  succs [bb86]

bb86
  0: StorageDead(_7)
    SourceInfo(src/de.rs:621:5-621:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:621:6-621:6)
      kind: goto -> bb87
  }
  preds [bb83, bb85]
  succs [bb87]

bb87
  Terminator {
      source_info: SourceInfo(src/de.rs:621:6-621:6)
      kind: return
  }
  preds [bb75, bb86]
  succs []

bb88
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_53) -> [return: bb89, unwind terminate(cleanup)]
  }
  preds [bb42]
  succs [bb89]

bb89
  Terminator {
      source_info: SourceInfo(src/de.rs:612:9-612:10)
      kind: drop(_49) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb44, bb48, bb49, bb50, bb51, bb53, bb55, bb58, bb59, bb63, bb64, bb66, bb88]
  succs [bb96]

bb90
  Terminator {
      source_info: SourceInfo(src/de.rs:598:63-598:64)
      kind: drop(_45) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb30]
  succs [bb96]

bb91
  Terminator {
      source_info: SourceInfo(src/de.rs:590:70-590:71)
      kind: drop(_34) -> [return: bb93, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb93]

bb92
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_26) -> [return: bb93, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb93]

bb93
  Terminator {
      source_info: SourceInfo(src/de.rs:592:10-592:11)
      kind: drop(_22) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb22, bb27, bb91, bb92]
  succs [bb96]

bb94
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb95, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb95]

bb95
  Terminator {
      source_info: SourceInfo(src/de.rs:585:10-585:11)
      kind: drop(_9) -> [return: bb96, unwind terminate(cleanup)]
  }
  preds [bb7, bb11, bb13, bb94]
  succs [bb96]

bb96
  Terminator {
      source_info: SourceInfo(src/de.rs:567:5-621:6)
      kind: resume
  }
  preds [bb0, bb1, bb15, bb16, bb26, bb33, bb35, bb37, bb38, bb45, bb67, bb70, bb72, bb74, bb77, bb81, bb84, bb89, bb90, bb93, bb95]
  succs []

