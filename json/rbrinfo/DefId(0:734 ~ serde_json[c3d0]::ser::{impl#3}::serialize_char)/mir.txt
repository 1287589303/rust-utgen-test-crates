bb0
  0: StorageLive(_3)
    SourceInfo(src/ser.rs:183:13-183:20)
  1: _3 = [const 0_u8; 4]
    SourceInfo(src/ser.rs:183:23-183:29)
  2: FakeRead(ForLet(None), _3)
    SourceInfo(src/ser.rs:183:13-183:20)
  3: StorageLive(_4)
    SourceInfo(src/ser.rs:184:9-184:13)
  4: _4 = &mut (*_1)
    SourceInfo(src/ser.rs:184:9-184:13)
  5: StorageLive(_5)
    SourceInfo(src/ser.rs:184:28-184:55)
  6: StorageLive(_6)
    SourceInfo(src/ser.rs:184:28-184:55)
  7: StorageLive(_7)
    SourceInfo(src/ser.rs:184:28-184:33)
  8: _7 = _2
    SourceInfo(src/ser.rs:184:28-184:33)
  9: StorageLive(_8)
    SourceInfo(src/ser.rs:184:46-184:54)
  10: StorageLive(_9)
    SourceInfo(src/ser.rs:184:46-184:54)
  11: StorageLive(_10)
    SourceInfo(src/ser.rs:184:46-184:54)
  12: _10 = &mut _3
    SourceInfo(src/ser.rs:184:46-184:54)
  13: _9 = &mut (*_10)
    SourceInfo(src/ser.rs:184:46-184:54)
  14: _8 = move _9 as &mut [u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:184:46-184:54)
  15: StorageDead(_9)
    SourceInfo(src/ser.rs:184:53-184:54)
  Terminator {
      source_info: SourceInfo(src/ser.rs:184:28-184:55)
      kind: _6 = core::char::methods::<impl char>::encode_utf8(move _7, move _8) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _5 = &(*_6)
    SourceInfo(src/ser.rs:184:28-184:55)
  1: StorageDead(_8)
    SourceInfo(src/ser.rs:184:54-184:55)
  2: StorageDead(_7)
    SourceInfo(src/ser.rs:184:54-184:55)
  Terminator {
      source_info: SourceInfo(src/ser.rs:184:9-184:56)
      kind: _0 = <&mut ser::Serializer<W, F> as serde::Serializer>::serialize_str(move _4, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/ser.rs:184:55-184:56)
  1: StorageDead(_4)
    SourceInfo(src/ser.rs:184:55-184:56)
  2: StorageDead(_3)
    SourceInfo(src/ser.rs:185:5-185:6)
  3: StorageDead(_10)
    SourceInfo(src/ser.rs:185:5-185:6)
  4: StorageDead(_6)
    SourceInfo(src/ser.rs:185:5-185:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:185:6-185:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/ser.rs:181:5-185:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

