bb0
  0: StorageLive(_3)
    SourceInfo(src/value/de.rs:1192:15-1192:32)
  1: StorageLive(_4)
    SourceInfo(src/value/de.rs:1192:15-1192:25)
  2: _4 = &mut ((*_1).1: core::option::Option<&value::Value>)
    SourceInfo(src/value/de.rs:1192:15-1192:25)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1192:15-1192:32)
      kind: _3 = core::option::Option::<&value::Value>::take(move _4) -> [return: bb1, unwind: bb12]
  }
  preds []
  succs [bb1, bb12]

bb1
  0: StorageDead(_4)
    SourceInfo(src/value/de.rs:1192:31-1192:32)
  1: PlaceMention(_3)
    SourceInfo(src/value/de.rs:1192:15-1192:32)
  2: _5 = discriminant(_3)
    SourceInfo(src/value/de.rs:1192:15-1192:32)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1192:9-1192:32)
      kind: switchInt(move _5) -> [0: bb4, 1: bb3, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _3)
    SourceInfo(src/value/de.rs:1192:15-1192:32)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1192:15-1192:32)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1193:13-1193:24)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_9)
    SourceInfo(src/value/de.rs:1194:25-1194:69)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1194:25-1194:69)
      kind: _9 = <error::Error as serde::de::Error>::custom::<&str>(const "value is missing") -> [return: bb7, unwind: bb12]
  }
  preds [bb1, bb3]
  succs [bb7, bb12]

bb5
  0: StorageLive(_6)
    SourceInfo(src/value/de.rs:1193:18-1193:23)
  1: _6 = ((_3 as Some).0: &value::Value)
    SourceInfo(src/value/de.rs:1193:18-1193:23)
  2: StorageLive(_7)
    SourceInfo(src/value/de.rs:1193:28-1193:32)
  3: _7 = move _2
    SourceInfo(src/value/de.rs:1193:28-1193:32)
  4: StorageLive(_8)
    SourceInfo(src/value/de.rs:1193:45-1193:50)
  5: _8 = _6
    SourceInfo(src/value/de.rs:1193:45-1193:50)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1193:28-1193:51)
      kind: _0 = <T as serde::de::DeserializeSeed<'_>>::deserialize::<&value::Value>(move _7, move _8) -> [return: bb6, unwind: bb11]
  }
  preds [bb3]
  succs [bb6, bb11]

bb6
  0: StorageDead(_8)
    SourceInfo(src/value/de.rs:1193:50-1193:51)
  1: StorageDead(_7)
    SourceInfo(src/value/de.rs:1193:50-1193:51)
  2: StorageDead(_6)
    SourceInfo(src/value/de.rs:1193:50-1193:51)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1193:50-1193:51)
      kind: goto -> bb9
  }
  preds [bb5]
  succs [bb9]

bb7
  0: _0 = core::result::Result::<<T as serde::de::DeserializeSeed<'_>>::Value, error::Error>::Err(move _9)
    SourceInfo(src/value/de.rs:1194:21-1194:70)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1194:69-1194:70)
      kind: drop(_9) -> [return: bb8, unwind: bb12]
  }
  preds [bb4]
  succs [bb8, bb12]

bb8
  0: StorageDead(_9)
    SourceInfo(src/value/de.rs:1194:69-1194:70)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1194:69-1194:70)
      kind: goto -> bb9
  }
  preds [bb7]
  succs [bb9]

bb9
  0: StorageDead(_3)
    SourceInfo(src/value/de.rs:1196:5-1196:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1196:5-1196:6)
      kind: drop(_2) -> [return: bb10, unwind: bb13]
  }
  preds [bb6, bb8]
  succs [bb10, bb13]

bb10
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1196:6-1196:6)
      kind: return
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1193:50-1193:51)
      kind: drop(_7) -> [return: bb12, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb12]

bb12
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1196:5-1196:6)
      kind: drop(_2) -> [return: bb13, unwind terminate(cleanup)]
  }
  preds [bb0, bb4, bb7, bb11]
  succs [bb13]

bb13
  Terminator {
      source_info: SourceInfo(src/value/de.rs:1188:5-1196:6)
      kind: resume
  }
  preds [bb9, bb12]
  succs []

