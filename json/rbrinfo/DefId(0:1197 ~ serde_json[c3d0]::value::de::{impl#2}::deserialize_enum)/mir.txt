bb0
  0: StorageLive(_5)
    SourceInfo(src/value/de.rs:236:13-236:21)
  1: StorageLive(_6)
    SourceInfo(src/value/de.rs:236:24-236:28)
  2: _6 = move _1
    SourceInfo(src/value/de.rs:236:24-236:28)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:236:24-236:40)
      kind: _5 = <map::Map<alloc::string::String, value::Value> as core::iter::IntoIterator>::into_iter(move _6) -> [return: bb1, unwind: bb46]
  }
  preds []
  succs [bb1, bb46]

bb1
  0: StorageDead(_6)
    SourceInfo(src/value/de.rs:236:39-236:40)
  1: FakeRead(ForLet(None), _5)
    SourceInfo(src/value/de.rs:236:13-236:21)
  2: StorageLive(_9)
    SourceInfo(src/value/de.rs:237:32-245:10)
  3: StorageLive(_10)
    SourceInfo(src/value/de.rs:237:38-237:49)
  4: StorageLive(_11)
    SourceInfo(src/value/de.rs:237:38-237:42)
  5: _11 = &mut _5
    SourceInfo(src/value/de.rs:237:38-237:42)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:237:38-237:49)
      kind: _10 = <map::IntoIter as core::iter::Iterator>::next(move _11) -> [return: bb2, unwind: bb45]
  }
  preds [bb0]
  succs [bb2, bb45]

bb2
  0: StorageDead(_11)
    SourceInfo(src/value/de.rs:237:48-237:49)
  1: PlaceMention(_10)
    SourceInfo(src/value/de.rs:237:38-237:49)
  2: _12 = discriminant(_10)
    SourceInfo(src/value/de.rs:237:38-237:49)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:237:32-237:49)
      kind: switchInt(move _12) -> [0: bb5, 1: bb4, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _10)
    SourceInfo(src/value/de.rs:237:38-237:49)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:237:38-237:49)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/value/de.rs:238:13-238:20)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_15)
    SourceInfo(src/value/de.rs:240:28-243:18)
  1: StorageLive(_16)
    SourceInfo(src/value/de.rs:241:21-241:36)
  2: _16 = serde::de::Unexpected::<'_>::Map
    SourceInfo(src/value/de.rs:241:21-241:36)
  3: StorageLive(_17)
    SourceInfo(src/value/de.rs:242:21-242:45)
  4: StorageLive(_18)
    SourceInfo(src/value/de.rs:242:21-242:45)
  5: StorageLive(_19)
    SourceInfo(src/value/de.rs:242:21-242:45)
  6: StorageLive(_20)
    SourceInfo(src/value/de.rs:242:22-242:45)
  7: _20 = const "map with a single key"
    SourceInfo(src/value/de.rs:242:22-242:45)
  8: _19 = &_20
    SourceInfo(src/value/de.rs:242:21-242:45)
  9: _18 = &(*_19)
    SourceInfo(src/value/de.rs:242:21-242:45)
  10: _17 = move _18 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:242:21-242:45)
  11: StorageDead(_18)
    SourceInfo(src/value/de.rs:242:44-242:45)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:240:28-243:18)
      kind: _15 = <error::Error as serde::de::Error>::invalid_value(move _16, move _17) -> [return: bb8, unwind: bb44]
  }
  preds [bb2, bb4]
  succs [bb8, bb44]

bb6
  0: StorageLive(_13)
    SourceInfo(src/value/de.rs:238:18-238:19)
  1: _13 = move ((_10 as Some).0: (alloc::string::String, value::Value))
    SourceInfo(src/value/de.rs:238:18-238:19)
  2: _9 = move _13
    SourceInfo(src/value/de.rs:238:24-238:25)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:238:24-238:25)
      kind: drop(_13) -> [return: bb7, unwind: bb44]
  }
  preds [bb4]
  succs [bb7, bb44]

bb7
  0: StorageDead(_13)
    SourceInfo(src/value/de.rs:238:24-238:25)
  1: PlaceMention(_9)
    SourceInfo(src/value/de.rs:237:32-245:10)
  2: StorageLive(_7)
    SourceInfo(src/value/de.rs:237:14-237:21)
  3: _7 = move (_9.0: alloc::string::String)
    SourceInfo(src/value/de.rs:237:14-237:21)
  4: StorageLive(_8)
    SourceInfo(src/value/de.rs:237:23-237:28)
  5: _8 = move (_9.1: value::Value)
    SourceInfo(src/value/de.rs:237:23-237:28)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:245:10-245:11)
      kind: drop(_9) -> [return: bb10, unwind: bb41]
  }
  preds [bb6]
  succs [bb10, bb41]

bb8
  0: StorageDead(_17)
    SourceInfo(src/value/de.rs:243:17-243:18)
  1: StorageDead(_16)
    SourceInfo(src/value/de.rs:243:17-243:18)
  2: _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _15)
    SourceInfo(src/value/de.rs:240:24-243:19)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:243:18-243:19)
      kind: drop(_15) -> [return: bb9, unwind: bb44]
  }
  preds [bb5]
  succs [bb9, bb44]

bb9
  0: StorageDead(_15)
    SourceInfo(src/value/de.rs:243:18-243:19)
  1: StorageDead(_20)
    SourceInfo(src/value/de.rs:243:19-243:20)
  2: StorageDead(_19)
    SourceInfo(src/value/de.rs:243:19-243:20)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:245:10-245:11)
      kind: drop(_10) -> [return: bb30, unwind: bb45]
  }
  preds [bb8]
  succs [bb30, bb45]

bb10
  Terminator {
      source_info: SourceInfo(src/value/de.rs:245:10-245:11)
      kind: drop(_10) -> [return: bb11, unwind: bb42]
  }
  preds [bb7]
  succs [bb11, bb42]

bb11
  0: StorageDead(_10)
    SourceInfo(src/value/de.rs:245:10-245:11)
  1: StorageDead(_9)
    SourceInfo(src/value/de.rs:245:10-245:11)
  2: StorageLive(_21)
    SourceInfo(src/value/de.rs:247:9-252:10)
  3: StorageLive(_22)
    SourceInfo(src/value/de.rs:247:12-247:33)
  4: StorageLive(_23)
    SourceInfo(src/value/de.rs:247:12-247:23)
  5: StorageLive(_24)
    SourceInfo(src/value/de.rs:247:12-247:23)
  6: StorageLive(_25)
    SourceInfo(src/value/de.rs:247:12-247:16)
  7: _25 = &mut _5
    SourceInfo(src/value/de.rs:247:12-247:16)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:12-247:23)
      kind: _24 = <map::IntoIter as core::iter::Iterator>::next(move _25) -> [return: bb12, unwind: bb42]
  }
  preds [bb10]
  succs [bb12, bb42]

bb12
  0: _23 = &_24
    SourceInfo(src/value/de.rs:247:12-247:23)
  1: StorageDead(_25)
    SourceInfo(src/value/de.rs:247:22-247:23)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:12-247:33)
      kind: _22 = core::option::Option::<(alloc::string::String, value::Value)>::is_some(move _23) -> [return: bb13, unwind: bb40]
  }
  preds [bb11]
  succs [bb13, bb40]

bb13
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:12-247:33)
      kind: switchInt(move _22) -> [0: bb18, otherwise: bb14]
  }
  preds [bb12]
  succs [bb14, bb18]

bb14
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:32-247:33)
      kind: drop(_24) -> [return: bb15, unwind: bb42]
  }
  preds [bb13]
  succs [bb15, bb42]

bb15
  0: StorageDead(_24)
    SourceInfo(src/value/de.rs:247:32-247:33)
  1: StorageDead(_23)
    SourceInfo(src/value/de.rs:247:32-247:33)
  2: StorageLive(_27)
    SourceInfo(src/value/de.rs:248:24-251:14)
  3: StorageLive(_28)
    SourceInfo(src/value/de.rs:249:17-249:32)
  4: _28 = serde::de::Unexpected::<'_>::Map
    SourceInfo(src/value/de.rs:249:17-249:32)
  5: StorageLive(_29)
    SourceInfo(src/value/de.rs:250:17-250:41)
  6: StorageLive(_30)
    SourceInfo(src/value/de.rs:250:17-250:41)
  7: StorageLive(_31)
    SourceInfo(src/value/de.rs:250:17-250:41)
  8: StorageLive(_32)
    SourceInfo(src/value/de.rs:250:18-250:41)
  9: _32 = const "map with a single key"
    SourceInfo(src/value/de.rs:250:18-250:41)
  10: _31 = &_32
    SourceInfo(src/value/de.rs:250:17-250:41)
  11: _30 = &(*_31)
    SourceInfo(src/value/de.rs:250:17-250:41)
  12: _29 = move _30 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:250:17-250:41)
  13: StorageDead(_30)
    SourceInfo(src/value/de.rs:250:40-250:41)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:248:24-251:14)
      kind: _27 = <error::Error as serde::de::Error>::invalid_value(move _28, move _29) -> [return: bb16, unwind: bb42]
  }
  preds [bb14]
  succs [bb16, bb42]

bb16
  0: StorageDead(_29)
    SourceInfo(src/value/de.rs:251:13-251:14)
  1: StorageDead(_28)
    SourceInfo(src/value/de.rs:251:13-251:14)
  2: _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _27)
    SourceInfo(src/value/de.rs:248:20-251:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:251:14-251:15)
      kind: drop(_27) -> [return: bb17, unwind: bb42]
  }
  preds [bb15]
  succs [bb17, bb42]

bb17
  0: StorageDead(_27)
    SourceInfo(src/value/de.rs:251:14-251:15)
  1: StorageDead(_32)
    SourceInfo(src/value/de.rs:251:15-251:16)
  2: StorageDead(_31)
    SourceInfo(src/value/de.rs:251:15-251:16)
  3: StorageDead(_22)
    SourceInfo(src/value/de.rs:252:9-252:10)
  4: StorageDead(_21)
    SourceInfo(src/value/de.rs:252:9-252:10)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_8) -> [return: bb28, unwind: bb43]
  }
  preds [bb16]
  succs [bb28, bb43]

bb18
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:32-247:33)
      kind: drop(_24) -> [return: bb19, unwind: bb42]
  }
  preds [bb13]
  succs [bb19, bb42]

bb19
  0: StorageDead(_24)
    SourceInfo(src/value/de.rs:247:32-247:33)
  1: StorageDead(_23)
    SourceInfo(src/value/de.rs:247:32-247:33)
  2: _21 = const ()
    SourceInfo(src/value/de.rs:252:10-252:10)
  3: StorageDead(_22)
    SourceInfo(src/value/de.rs:252:9-252:10)
  4: StorageDead(_21)
    SourceInfo(src/value/de.rs:252:9-252:10)
  5: StorageLive(_33)
    SourceInfo(src/value/de.rs:254:9-254:16)
  6: _33 = move _4
    SourceInfo(src/value/de.rs:254:9-254:16)
  7: StorageLive(_34)
    SourceInfo(src/value/de.rs:254:28-257:10)
  8: StorageLive(_35)
    SourceInfo(src/value/de.rs:255:13-255:20)
  9: _35 = move _7
    SourceInfo(src/value/de.rs:255:13-255:20)
  10: StorageLive(_36)
    SourceInfo(src/value/de.rs:256:20-256:31)
  11: StorageLive(_37)
    SourceInfo(src/value/de.rs:256:25-256:30)
  12: _37 = move _8
    SourceInfo(src/value/de.rs:256:25-256:30)
  13: _36 = core::option::Option::<value::Value>::Some(move _37)
    SourceInfo(src/value/de.rs:256:20-256:31)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:256:30-256:31)
      kind: drop(_37) -> [return: bb20, unwind: bb37]
  }
  preds [bb18]
  succs [bb20, bb37]

bb20
  0: StorageDead(_37)
    SourceInfo(src/value/de.rs:256:30-256:31)
  1: _34 = value::de::EnumDeserializer { variant: move _35, value: move _36 }
    SourceInfo(src/value/de.rs:254:28-257:10)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:9-257:10)
      kind: drop(_36) -> [return: bb21, unwind: bb35]
  }
  preds [bb19]
  succs [bb21, bb35]

bb21
  0: StorageDead(_36)
    SourceInfo(src/value/de.rs:257:9-257:10)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:9-257:10)
      kind: drop(_35) -> [return: bb22, unwind: bb36]
  }
  preds [bb20]
  succs [bb22, bb36]

bb22
  0: StorageDead(_35)
    SourceInfo(src/value/de.rs:257:9-257:10)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:254:9-257:11)
      kind: _0 = <V as serde::de::Visitor<'_>>::visit_enum::<value::de::EnumDeserializer>(move _33, move _34) -> [return: bb23, unwind: bb36]
  }
  preds [bb21]
  succs [bb23, bb36]

bb23
  0: StorageDead(_34)
    SourceInfo(src/value/de.rs:257:10-257:11)
  1: StorageDead(_33)
    SourceInfo(src/value/de.rs:257:10-257:11)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_8) -> [return: bb24, unwind: bb43]
  }
  preds [bb22]
  succs [bb24, bb43]

bb24
  0: StorageDead(_8)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_7) -> [return: bb25, unwind: bb45]
  }
  preds [bb23]
  succs [bb25, bb45]

bb25
  0: StorageDead(_7)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_5) -> [return: bb26, unwind: bb47]
  }
  preds [bb24]
  succs [bb26, bb47]

bb26
  0: StorageDead(_5)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_4) -> [return: bb27, unwind: bb48]
  }
  preds [bb25]
  succs [bb27, bb48]

bb27
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_1) -> [return: bb34, unwind: bb49]
  }
  preds [bb26]
  succs [bb34, bb49]

bb28
  0: StorageDead(_8)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_7) -> [return: bb29, unwind: bb45]
  }
  preds [bb17]
  succs [bb29, bb45]

bb29
  0: StorageDead(_7)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb31
  }
  preds [bb28]
  succs [bb31]

bb30
  0: StorageDead(_10)
    SourceInfo(src/value/de.rs:245:10-245:11)
  1: StorageDead(_9)
    SourceInfo(src/value/de.rs:245:10-245:11)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb31
  }
  preds [bb9]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_5) -> [return: bb32, unwind: bb47]
  }
  preds [bb29, bb30]
  succs [bb32, bb47]

bb32
  0: StorageDead(_5)
    SourceInfo(src/value/de.rs:258:5-258:6)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_4) -> [return: bb33, unwind: bb48]
  }
  preds [bb31]
  succs [bb33, bb48]

bb33
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_1) -> [return: bb34, unwind: bb49]
  }
  preds [bb32]
  succs [bb34, bb49]

bb34
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:6-258:6)
      kind: return
  }
  preds [bb27, bb33]
  succs []

bb35
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:9-257:10)
      kind: drop(_35) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb20]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:10-257:11)
      kind: drop(_34) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb21, bb22, bb35]
  succs [bb39]

bb37
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:9-257:10)
      kind: drop(_36) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb19]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:9-257:10)
      kind: drop(_35) -> [return: bb39, unwind terminate(cleanup)]
  }
  preds [bb37]
  succs [bb39]

bb39
  Terminator {
      source_info: SourceInfo(src/value/de.rs:257:10-257:11)
      kind: drop(_33) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb36, bb38]
  succs [bb42]

bb40
  Terminator {
      source_info: SourceInfo(src/value/de.rs:247:32-247:33)
      kind: drop(_24) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb42]

bb41
  Terminator {
      source_info: SourceInfo(src/value/de.rs:245:10-245:11)
      kind: drop(_10) -> [return: bb42, unwind terminate(cleanup)]
  }
  preds [bb7]
  succs [bb42]

bb42
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_8) -> [return: bb43, unwind terminate(cleanup)]
  }
  preds [bb10, bb11, bb14, bb15, bb16, bb18, bb39, bb40, bb41]
  succs [bb43]

bb43
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_7) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb17, bb23, bb42]
  succs [bb45]

bb44
  Terminator {
      source_info: SourceInfo(src/value/de.rs:245:10-245:11)
      kind: drop(_10) -> [return: bb45, unwind terminate(cleanup)]
  }
  preds [bb5, bb6, bb8]
  succs [bb45]

bb45
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_5) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb1, bb9, bb24, bb28, bb43, bb44]
  succs [bb47]

bb46
  Terminator {
      source_info: SourceInfo(src/value/de.rs:236:39-236:40)
      kind: drop(_6) -> [return: bb47, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb47]

bb47
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_4) -> [return: bb48, unwind terminate(cleanup)]
  }
  preds [bb25, bb31, bb45, bb46]
  succs [bb48]

bb48
  Terminator {
      source_info: SourceInfo(src/value/de.rs:258:5-258:6)
      kind: drop(_1) -> [return: bb49, unwind terminate(cleanup)]
  }
  preds [bb26, bb32, bb47]
  succs [bb49]

bb49
  Terminator {
      source_info: SourceInfo(src/value/de.rs:227:5-258:6)
      kind: resume
  }
  preds [bb27, bb33, bb48]
  succs []

