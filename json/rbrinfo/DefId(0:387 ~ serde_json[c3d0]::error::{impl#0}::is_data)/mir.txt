bb0
  0: StorageLive(_2)
    SourceInfo(src/error.rs:102:9-102:24)
  1: StorageLive(_3)
    SourceInfo(src/error.rs:102:9-102:24)
  2: StorageLive(_4)
    SourceInfo(src/error.rs:102:9-102:13)
  3: _4 = &(*_1)
    SourceInfo(src/error.rs:102:9-102:13)
  Terminator {
      source_info: SourceInfo(src/error.rs:102:9-102:24)
      kind: _3 = error::Error::classify(move _4) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: _2 = &_3
    SourceInfo(src/error.rs:102:9-102:24)
  1: StorageDead(_4)
    SourceInfo(src/error.rs:102:23-102:24)
  2: StorageLive(_5)
    SourceInfo(src/error.rs:102:28-102:42)
  3: StorageLive(_6)
    SourceInfo(src/error.rs:102:28-102:42)
  4: _6 = error::Category::Data
    SourceInfo(src/error.rs:102:28-102:42)
  5: _5 = &_6
    SourceInfo(src/error.rs:102:28-102:42)
  Terminator {
      source_info: SourceInfo(src/error.rs:102:9-102:42)
      kind: _0 = <error::Category as core::cmp::PartialEq>::eq(move _2, move _5) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_5)
    SourceInfo(src/error.rs:102:41-102:42)
  1: StorageDead(_2)
    SourceInfo(src/error.rs:102:41-102:42)
  2: StorageDead(_6)
    SourceInfo(src/error.rs:103:5-103:6)
  3: StorageDead(_3)
    SourceInfo(src/error.rs:103:5-103:6)
  Terminator {
      source_info: SourceInfo(src/error.rs:103:6-103:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/error.rs:101:5-103:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

