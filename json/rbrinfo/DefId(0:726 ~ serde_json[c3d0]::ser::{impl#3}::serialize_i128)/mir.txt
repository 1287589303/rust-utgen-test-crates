bb0
  0: StorageLive(_3)
    SourceInfo(src/ser.rs:113:9-114:49)
  1: StorageLive(_4)
    SourceInfo(src/ser.rs:113:9-113:23)
  2: _4 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:113:9-113:23)
  3: StorageLive(_5)
    SourceInfo(src/ser.rs:114:25-114:41)
  4: StorageLive(_6)
    SourceInfo(src/ser.rs:114:25-114:41)
  5: _6 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:114:25-114:41)
  6: _5 = &mut (*_6)
    SourceInfo(src/ser.rs:114:25-114:41)
  7: StorageLive(_7)
    SourceInfo(src/ser.rs:114:43-114:48)
  8: _7 = _2
    SourceInfo(src/ser.rs:114:43-114:48)
  Terminator {
      source_info: SourceInfo(src/ser.rs:113:9-114:49)
      kind: _3 = <F as ser::Formatter>::write_i128::<W>(move _4, move _5, move _7) -> [return: bb1, unwind: bb4]
  }
  preds []
  succs [bb1, bb4]

bb1
  0: StorageDead(_7)
    SourceInfo(src/ser.rs:114:48-114:49)
  1: StorageDead(_5)
    SourceInfo(src/ser.rs:114:48-114:49)
  2: StorageDead(_4)
    SourceInfo(src/ser.rs:114:48-114:49)
  Terminator {
      source_info: SourceInfo(src/ser.rs:113:9-115:32)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _3, error::Error::io) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: StorageDead(_3)
    SourceInfo(src/ser.rs:115:31-115:32)
  1: StorageDead(_6)
    SourceInfo(src/ser.rs:116:5-116:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:116:6-116:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/ser.rs:115:31-115:32)
      kind: drop(_3) -> [return: bb4, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb4]

bb4
  Terminator {
      source_info: SourceInfo(src/ser.rs:112:5-116:6)
      kind: resume
  }
  preds [bb0, bb3]
  succs []

