bb0
  0: PlaceMention(_1)
    SourceInfo(src/de.rs:132:15-132:19)
  1: _3 = discriminant(_1)
    SourceInfo(src/de.rs:132:15-132:19)
  Terminator {
      source_info: SourceInfo(src/de.rs:132:9-132:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/de.rs:132:15-132:19)
  Terminator {
      source_info: SourceInfo(src/de.rs:132:15-132:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/de.rs:133:13-133:33)
      kind: falseEdge -> [real: bb5, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb5]

bb3
  Terminator {
      source_info: SourceInfo(src/de.rs:134:13-134:33)
      kind: falseEdge -> [real: bb7, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb7]

bb4
  0: StorageLive(_14)
    SourceInfo(src/de.rs:135:31-135:32)
  1: _14 = ((_1 as I64).0: i64)
    SourceInfo(src/de.rs:135:31-135:32)
  2: StorageLive(_15)
    SourceInfo(src/de.rs:135:61-135:82)
  3: StorageLive(_16)
    SourceInfo(src/de.rs:135:80-135:81)
  4: _16 = _14
    SourceInfo(src/de.rs:135:80-135:81)
  5: _15 = serde::de::Unexpected::<'_>::Signed(move _16)
    SourceInfo(src/de.rs:135:61-135:82)
  6: StorageDead(_16)
    SourceInfo(src/de.rs:135:81-135:82)
  7: StorageLive(_17)
    SourceInfo(src/de.rs:135:84-135:87)
  8: StorageLive(_18)
    SourceInfo(src/de.rs:135:84-135:87)
  9: _18 = &(*_2)
    SourceInfo(src/de.rs:135:84-135:87)
  10: _17 = move _18 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/de.rs:135:84-135:87)
  11: StorageDead(_18)
    SourceInfo(src/de.rs:135:86-135:87)
  Terminator {
      source_info: SourceInfo(src/de.rs:135:37-135:88)
      kind: _0 = <error::Error as serde::de::Error>::invalid_type(move _15, move _17) -> [return: bb9, unwind: bb11]
  }
  preds [bb0, bb3]
  succs [bb9, bb11]

bb5
  0: StorageLive(_4)
    SourceInfo(src/de.rs:133:31-133:32)
  1: _4 = ((_1 as F64).0: f64)
    SourceInfo(src/de.rs:133:31-133:32)
  2: StorageLive(_5)
    SourceInfo(src/de.rs:133:61-133:81)
  3: StorageLive(_6)
    SourceInfo(src/de.rs:133:79-133:80)
  4: _6 = _4
    SourceInfo(src/de.rs:133:79-133:80)
  5: _5 = serde::de::Unexpected::<'_>::Float(move _6)
    SourceInfo(src/de.rs:133:61-133:81)
  6: StorageDead(_6)
    SourceInfo(src/de.rs:133:80-133:81)
  7: StorageLive(_7)
    SourceInfo(src/de.rs:133:83-133:86)
  8: StorageLive(_8)
    SourceInfo(src/de.rs:133:83-133:86)
  9: _8 = &(*_2)
    SourceInfo(src/de.rs:133:83-133:86)
  10: _7 = move _8 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/de.rs:133:83-133:86)
  11: StorageDead(_8)
    SourceInfo(src/de.rs:133:85-133:86)
  Terminator {
      source_info: SourceInfo(src/de.rs:133:37-133:87)
      kind: _0 = <error::Error as serde::de::Error>::invalid_type(move _5, move _7) -> [return: bb6, unwind: bb11]
  }
  preds [bb2]
  succs [bb6, bb11]

bb6
  0: StorageDead(_7)
    SourceInfo(src/de.rs:133:86-133:87)
  1: StorageDead(_5)
    SourceInfo(src/de.rs:133:86-133:87)
  2: StorageDead(_4)
    SourceInfo(src/de.rs:133:86-133:87)
  Terminator {
      source_info: SourceInfo(src/de.rs:133:86-133:87)
      kind: goto -> bb10
  }
  preds [bb5]
  succs [bb10]

bb7
  0: StorageLive(_9)
    SourceInfo(src/de.rs:134:31-134:32)
  1: _9 = ((_1 as U64).0: u64)
    SourceInfo(src/de.rs:134:31-134:32)
  2: StorageLive(_10)
    SourceInfo(src/de.rs:134:61-134:84)
  3: StorageLive(_11)
    SourceInfo(src/de.rs:134:82-134:83)
  4: _11 = _9
    SourceInfo(src/de.rs:134:82-134:83)
  5: _10 = serde::de::Unexpected::<'_>::Unsigned(move _11)
    SourceInfo(src/de.rs:134:61-134:84)
  6: StorageDead(_11)
    SourceInfo(src/de.rs:134:83-134:84)
  7: StorageLive(_12)
    SourceInfo(src/de.rs:134:86-134:89)
  8: StorageLive(_13)
    SourceInfo(src/de.rs:134:86-134:89)
  9: _13 = &(*_2)
    SourceInfo(src/de.rs:134:86-134:89)
  10: _12 = move _13 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/de.rs:134:86-134:89)
  11: StorageDead(_13)
    SourceInfo(src/de.rs:134:88-134:89)
  Terminator {
      source_info: SourceInfo(src/de.rs:134:37-134:90)
      kind: _0 = <error::Error as serde::de::Error>::invalid_type(move _10, move _12) -> [return: bb8, unwind: bb11]
  }
  preds [bb3]
  succs [bb8, bb11]

bb8
  0: StorageDead(_12)
    SourceInfo(src/de.rs:134:89-134:90)
  1: StorageDead(_10)
    SourceInfo(src/de.rs:134:89-134:90)
  2: StorageDead(_9)
    SourceInfo(src/de.rs:134:89-134:90)
  Terminator {
      source_info: SourceInfo(src/de.rs:134:89-134:90)
      kind: goto -> bb10
  }
  preds [bb7]
  succs [bb10]

bb9
  0: StorageDead(_17)
    SourceInfo(src/de.rs:135:87-135:88)
  1: StorageDead(_15)
    SourceInfo(src/de.rs:135:87-135:88)
  2: StorageDead(_14)
    SourceInfo(src/de.rs:135:87-135:88)
  Terminator {
      source_info: SourceInfo(src/de.rs:135:87-135:88)
      kind: goto -> bb10
  }
  preds [bb4]
  succs [bb10]

bb10
  Terminator {
      source_info: SourceInfo(src/de.rs:139:6-139:6)
      kind: return
  }
  preds [bb6, bb8, bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/de.rs:131:5-139:6)
      kind: resume
  }
  preds [bb4, bb5, bb7]
  succs []

