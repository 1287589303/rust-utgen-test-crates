bb0
  0: StorageLive(_2)
    SourceInfo(src/read.rs:1060:9-1060:18)
  1: _2 = [const 0_i16; 256]
    SourceInfo(src/read.rs:1060:21-1060:29)
  2: FakeRead(ForLet(None), _2)
    SourceInfo(src/read.rs:1060:9-1060:18)
  3: StorageLive(_3)
    SourceInfo(src/read.rs:1061:9-1061:15)
  4: _3 = const 0_usize
    SourceInfo(src/read.rs:1061:18-1061:19)
  5: FakeRead(ForLet(None), _3)
    SourceInfo(src/read.rs:1061:9-1061:15)
  6: StorageLive(_4)
    SourceInfo(src/read.rs:1062:5-1068:6)
  Terminator {
      source_info: SourceInfo(src/read.rs:1062:5-1068:6)
      kind: goto -> bb1
  }
  preds []
  succs [bb1]

bb1
  Terminator {
      source_info: SourceInfo(src/read.rs:1062:5-1068:6)
      kind: falseUnwind -> [real: bb2, unwind: bb14]
  }
  preds [bb0, bb12]
  succs [bb2, bb14]

bb2
  0: StorageLive(_6)
    SourceInfo(src/read.rs:1062:11-1062:19)
  1: StorageLive(_7)
    SourceInfo(src/read.rs:1062:11-1062:13)
  2: _7 = _3
    SourceInfo(src/read.rs:1062:11-1062:13)
  3: _6 = Lt(move _7, const 256_usize)
    SourceInfo(src/read.rs:1062:11-1062:19)
  Terminator {
      source_info: SourceInfo(src/read.rs:1062:11-1062:19)
      kind: switchInt(move _6) -> [0: bb13, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb13]

bb3
  0: StorageDead(_7)
    SourceInfo(src/read.rs:1062:18-1062:19)
  1: StorageLive(_8)
    SourceInfo(src/read.rs:1063:21-1066:10)
  2: StorageLive(_9)
    SourceInfo(src/read.rs:1063:27-1063:56)
  3: StorageLive(_10)
    SourceInfo(src/read.rs:1063:47-1063:55)
  4: StorageLive(_11)
    SourceInfo(src/read.rs:1063:47-1063:49)
  5: _11 = _3
    SourceInfo(src/read.rs:1063:47-1063:49)
  6: _10 = move _11 as u8 (IntToInt)
    SourceInfo(src/read.rs:1063:47-1063:55)
  7: StorageDead(_11)
    SourceInfo(src/read.rs:1063:54-1063:55)
  Terminator {
      source_info: SourceInfo(src/read.rs:1063:27-1063:56)
      kind: _9 = read::decode_hex_val_slow(move _10) -> [return: bb4, unwind: bb14]
  }
  preds [bb2]
  succs [bb4, bb14]

bb4
  0: StorageDead(_10)
    SourceInfo(src/read.rs:1063:55-1063:56)
  1: PlaceMention(_9)
    SourceInfo(src/read.rs:1063:27-1063:56)
  2: _12 = discriminant(_9)
    SourceInfo(src/read.rs:1063:27-1063:56)
  Terminator {
      source_info: SourceInfo(src/read.rs:1063:21-1063:56)
      kind: switchInt(move _12) -> [0: bb7, 1: bb6, otherwise: bb5]
  }
  preds [bb3]
  succs [bb5, bb6, bb7]

bb5
  0: FakeRead(ForMatchedPlace(None), _9)
    SourceInfo(src/read.rs:1063:27-1063:56)
  Terminator {
      source_info: SourceInfo(src/read.rs:1063:27-1063:56)
      kind: unreachable
  }
  preds [bb4]
  succs []

bb6
  Terminator {
      source_info: SourceInfo(src/read.rs:1064:13-1064:22)
      kind: falseEdge -> [real: bb8, imaginary: bb7]
  }
  preds [bb4]
  succs [bb7, bb8]

bb7
  0: _8 = const -1_i16
    SourceInfo(src/read.rs:1065:21-1065:23)
  Terminator {
      source_info: SourceInfo(src/read.rs:1065:21-1065:23)
      kind: goto -> bb10
  }
  preds [bb4, bb6]
  succs [bb10]

bb8
  0: StorageLive(_13)
    SourceInfo(src/read.rs:1064:18-1064:21)
  1: _13 = ((_9 as Some).0: u8)
    SourceInfo(src/read.rs:1064:18-1064:21)
  2: StorageLive(_14)
    SourceInfo(src/read.rs:1064:26-1064:38)
  3: StorageLive(_15)
    SourceInfo(src/read.rs:1064:27-1064:30)
  4: _15 = _13
    SourceInfo(src/read.rs:1064:27-1064:30)
  5: _14 = move _15 as i16 (IntToInt)
    SourceInfo(src/read.rs:1064:26-1064:38)
  6: StorageDead(_15)
    SourceInfo(src/read.rs:1064:37-1064:38)
  7: StorageLive(_16)
    SourceInfo(src/read.rs:1064:42-1064:47)
  8: _16 = _1
    SourceInfo(src/read.rs:1064:42-1064:47)
  9: _17 = Lt(_16, const 16_usize)
    SourceInfo(src/read.rs:1064:26-1064:47)
  Terminator {
      source_info: SourceInfo(src/read.rs:1064:26-1064:47)
      kind: assert(move _17, "attempt to shift left by `{}`, which would overflow", _16) -> [success: bb9, unwind: bb14]
  }
  preds [bb6]
  succs [bb9, bb14]

bb9
  0: _8 = Shl(move _14, move _16)
    SourceInfo(src/read.rs:1064:26-1064:47)
  1: StorageDead(_16)
    SourceInfo(src/read.rs:1064:46-1064:47)
  2: StorageDead(_14)
    SourceInfo(src/read.rs:1064:46-1064:47)
  3: StorageDead(_13)
    SourceInfo(src/read.rs:1064:46-1064:47)
  Terminator {
      source_info: SourceInfo(src/read.rs:1064:46-1064:47)
      kind: goto -> bb10
  }
  preds [bb8]
  succs [bb10]

bb10
  0: StorageLive(_18)
    SourceInfo(src/read.rs:1063:15-1063:17)
  1: _18 = _3
    SourceInfo(src/read.rs:1063:15-1063:17)
  2: _19 = Len(_2)
    SourceInfo(src/read.rs:1063:9-1063:18)
  3: _20 = Lt(_18, _19)
    SourceInfo(src/read.rs:1063:9-1063:18)
  Terminator {
      source_info: SourceInfo(src/read.rs:1063:9-1063:18)
      kind: assert(move _20, "index out of bounds: the length is {} but the index is {}", move _19, _18) -> [success: bb11, unwind: bb14]
  }
  preds [bb7, bb9]
  succs [bb11, bb14]

bb11
  0: _2[_18] = move _8
    SourceInfo(src/read.rs:1063:9-1066:10)
  1: StorageDead(_8)
    SourceInfo(src/read.rs:1066:9-1066:10)
  2: StorageDead(_18)
    SourceInfo(src/read.rs:1066:10-1066:11)
  3: StorageDead(_9)
    SourceInfo(src/read.rs:1066:10-1066:11)
  4: _21 = AddWithOverflow(_3, const 1_usize)
    SourceInfo(src/read.rs:1067:9-1067:16)
  Terminator {
      source_info: SourceInfo(src/read.rs:1067:9-1067:16)
      kind: assert(!move (_21.1: bool), "attempt to compute `{} + {}`, which would overflow", _3, const 1_usize) -> [success: bb12, unwind: bb14]
  }
  preds [bb10]
  succs [bb12, bb14]

bb12
  0: _3 = move (_21.0: usize)
    SourceInfo(src/read.rs:1067:9-1067:16)
  1: _5 = const ()
    SourceInfo(src/read.rs:1062:20-1068:6)
  2: StorageDead(_6)
    SourceInfo(src/read.rs:1068:5-1068:6)
  Terminator {
      source_info: SourceInfo(src/read.rs:1062:5-1068:6)
      kind: goto -> bb1
  }
  preds [bb11]
  succs [bb1]

bb13
  0: StorageDead(_7)
    SourceInfo(src/read.rs:1062:18-1062:19)
  1: StorageLive(_23)
    SourceInfo(src/read.rs:1062:5-1068:6)
  2: _4 = const ()
    SourceInfo(src/read.rs:1062:5-1068:6)
  3: StorageDead(_23)
    SourceInfo(src/read.rs:1068:5-1068:6)
  4: StorageDead(_6)
    SourceInfo(src/read.rs:1068:5-1068:6)
  5: StorageDead(_4)
    SourceInfo(src/read.rs:1068:5-1068:6)
  6: _0 = _2
    SourceInfo(src/read.rs:1069:5-1069:10)
  7: StorageDead(_3)
    SourceInfo(src/read.rs:1070:1-1070:2)
  8: StorageDead(_2)
    SourceInfo(src/read.rs:1070:1-1070:2)
  Terminator {
      source_info: SourceInfo(src/read.rs:1070:2-1070:2)
      kind: return
  }
  preds [bb2]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/read.rs:1059:1-1070:2)
      kind: resume
  }
  preds [bb1, bb3, bb8, bb10, bb11]
  succs []

