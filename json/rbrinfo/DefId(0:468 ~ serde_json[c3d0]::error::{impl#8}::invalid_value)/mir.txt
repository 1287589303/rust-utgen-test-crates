bb0
  0: StorageLive(_3)
    SourceInfo(src/error.rs:450:23-454:10)
  1: StorageLive(_4)
    SourceInfo(src/error.rs:451:13-451:45)
  2: StorageLive(_5)
    SourceInfo(src/error.rs:451:13-451:45)
  3: StorageLive(_6)
    SourceInfo(src/error.rs:451:13-451:45)
  4: _6 = [const "invalid value: ", const ", expected "]
    SourceInfo(src/error.rs:451:13-451:45)
  5: _5 = &_6
    SourceInfo(src/error.rs:451:13-451:45)
  6: _4 = &(*_5)
    SourceInfo(src/error.rs:451:13-451:45)
  7: StorageLive(_7)
    SourceInfo(src/error.rs:450:23-454:10)
  8: StorageLive(_8)
    SourceInfo(src/error.rs:450:23-454:10)
  9: StorageLive(_9)
    SourceInfo(src/error.rs:450:23-454:10)
  10: StorageLive(_10)
    SourceInfo(src/error.rs:451:29-451:31)
  11: StorageLive(_11)
    SourceInfo(src/error.rs:452:13-452:34)
  12: StorageLive(_12)
    SourceInfo(src/error.rs:452:13-452:34)
  13: StorageLive(_13)
    SourceInfo(src/error.rs:452:13-452:34)
  14: StorageLive(_14)
    SourceInfo(src/error.rs:452:28-452:33)
  15: _14 = _1
    SourceInfo(src/error.rs:452:28-452:33)
  16: _13 = error::JsonUnexpected::<'_>(move _14)
    SourceInfo(src/error.rs:452:13-452:34)
  17: StorageDead(_14)
    SourceInfo(src/error.rs:452:33-452:34)
  18: _12 = &_13
    SourceInfo(src/error.rs:452:13-452:34)
  19: _11 = &(*_12)
    SourceInfo(src/error.rs:452:13-452:34)
  Terminator {
      source_info: SourceInfo(src/error.rs:451:29-451:31)
      kind: _10 = core::fmt::rt::Argument::<'_>::new_display::<error::JsonUnexpected<'_>>(move _11) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_11)
    SourceInfo(src/error.rs:451:30-451:31)
  1: StorageLive(_15)
    SourceInfo(src/error.rs:451:42-451:44)
  2: StorageLive(_16)
    SourceInfo(src/error.rs:453:13-453:16)
  3: StorageLive(_17)
    SourceInfo(src/error.rs:453:13-453:16)
  4: _17 = &_2
    SourceInfo(src/error.rs:453:13-453:16)
  5: _16 = &(*_17)
    SourceInfo(src/error.rs:453:13-453:16)
  Terminator {
      source_info: SourceInfo(src/error.rs:451:42-451:44)
      kind: _15 = core::fmt::rt::Argument::<'_>::new_display::<&dyn serde::de::Expected>(move _16) -> [return: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_16)
    SourceInfo(src/error.rs:451:43-451:44)
  1: _9 = [move _10, move _15]
    SourceInfo(src/error.rs:450:23-454:10)
  2: StorageDead(_15)
    SourceInfo(src/error.rs:454:9-454:10)
  3: StorageDead(_10)
    SourceInfo(src/error.rs:454:9-454:10)
  4: _8 = &_9
    SourceInfo(src/error.rs:450:23-454:10)
  5: _7 = &(*_8)
    SourceInfo(src/error.rs:450:23-454:10)
  Terminator {
      source_info: SourceInfo(src/error.rs:450:23-454:10)
      kind: _3 = core::fmt::Arguments::<'_>::new_v1::<2, 2>(move _4, move _7) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_7)
    SourceInfo(src/error.rs:454:9-454:10)
  1: StorageDead(_4)
    SourceInfo(src/error.rs:454:9-454:10)
  Terminator {
      source_info: SourceInfo(src/error.rs:450:9-454:11)
      kind: _0 = <error::Error as serde::de::Error>::custom::<core::fmt::Arguments<'_>>(move _3) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(src/error.rs:454:10-454:11)
  1: StorageDead(_17)
    SourceInfo(src/error.rs:455:5-455:6)
  2: StorageDead(_13)
    SourceInfo(src/error.rs:455:5-455:6)
  3: StorageDead(_12)
    SourceInfo(src/error.rs:455:5-455:6)
  4: StorageDead(_9)
    SourceInfo(src/error.rs:455:5-455:6)
  5: StorageDead(_8)
    SourceInfo(src/error.rs:455:5-455:6)
  6: StorageDead(_6)
    SourceInfo(src/error.rs:455:5-455:6)
  7: StorageDead(_5)
    SourceInfo(src/error.rs:455:5-455:6)
  Terminator {
      source_info: SourceInfo(src/error.rs:455:6-455:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/error.rs:449:5-455:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

