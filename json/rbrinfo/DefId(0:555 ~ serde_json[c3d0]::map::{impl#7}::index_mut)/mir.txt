bb0
  0: StorageLive(_3)
    SourceInfo(src/map.rs:479:9-479:65)
  1: StorageLive(_4)
    SourceInfo(src/map.rs:479:9-479:65)
  2: StorageLive(_5)
    SourceInfo(src/map.rs:479:9-479:32)
  3: StorageLive(_6)
    SourceInfo(src/map.rs:479:9-479:17)
  4: _6 = &mut ((*_1).0: alloc::collections::BTreeMap<alloc::string::String, value::Value>)
    SourceInfo(src/map.rs:479:9-479:17)
  5: StorageLive(_7)
    SourceInfo(src/map.rs:479:26-479:31)
  6: _7 = &(*_2)
    SourceInfo(src/map.rs:479:26-479:31)
  Terminator {
      source_info: SourceInfo(src/map.rs:479:9-479:32)
      kind: _5 = alloc::collections::BTreeMap::<alloc::string::String, value::Value>::get_mut::<Q>(move _6, move _7) -> [return: bb1, unwind: bb3]
  }
  preds []
  succs [bb1, bb3]

bb1
  0: StorageDead(_7)
    SourceInfo(src/map.rs:479:31-479:32)
  1: StorageDead(_6)
    SourceInfo(src/map.rs:479:31-479:32)
  2: StorageLive(_8)
    SourceInfo(src/map.rs:479:40-479:64)
  3: StorageLive(_9)
    SourceInfo(src/map.rs:479:40-479:64)
  4: _9 = const "no entry found for key"
    SourceInfo(src/map.rs:479:40-479:64)
  5: _8 = &(*_9)
    SourceInfo(src/map.rs:479:40-479:64)
  Terminator {
      source_info: SourceInfo(src/map.rs:479:9-479:65)
      kind: _4 = core::option::Option::<&mut value::Value>::expect(move _5, move _8) -> [return: bb2, unwind: bb3]
  }
  preds [bb0]
  succs [bb2, bb3]

bb2
  0: _3 = &mut (*_4)
    SourceInfo(src/map.rs:479:9-479:65)
  1: StorageDead(_8)
    SourceInfo(src/map.rs:479:64-479:65)
  2: StorageDead(_5)
    SourceInfo(src/map.rs:479:64-479:65)
  3: _0 = &mut (*_3)
    SourceInfo(src/map.rs:479:9-479:65)
  4: StorageDead(_9)
    SourceInfo(src/map.rs:480:5-480:6)
  5: StorageDead(_4)
    SourceInfo(src/map.rs:480:5-480:6)
  6: StorageDead(_3)
    SourceInfo(src/map.rs:480:5-480:6)
  Terminator {
      source_info: SourceInfo(src/map.rs:480:6-480:6)
      kind: return
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/map.rs:478:5-480:6)
      kind: resume
  }
  preds [bb0, bb1]
  succs []

