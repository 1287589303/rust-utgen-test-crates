bb0
  0: StorageLive(_2)
    SourceInfo(src/read.rs:580:9-580:13)
  1: _2 = &(*_1)
    SourceInfo(src/read.rs:580:9-580:13)
  2: StorageLive(_3)
    SourceInfo(src/read.rs:580:32-580:74)
  3: StorageLive(_4)
    SourceInfo(src/read.rs:580:41-580:57)
  4: StorageLive(_5)
    SourceInfo(src/read.rs:580:41-580:51)
  5: _5 = &(*((*_1).0: &[u8]))
    SourceInfo(src/read.rs:580:41-580:51)
  Terminator {
      source_info: SourceInfo(src/read.rs:580:41-580:57)
      kind: _4 = core::slice::<impl [u8]>::len(move _5) -> [return: bb1, unwind: bb5]
  }
  preds []
  succs [bb1, bb5]

bb1
  0: StorageDead(_5)
    SourceInfo(src/read.rs:580:56-580:57)
  1: StorageLive(_6)
    SourceInfo(src/read.rs:580:59-580:73)
  2: StorageLive(_7)
    SourceInfo(src/read.rs:580:59-580:69)
  3: _7 = ((*_1).1: usize)
    SourceInfo(src/read.rs:580:59-580:69)
  4: _8 = AddWithOverflow(_7, const 1_usize)
    SourceInfo(src/read.rs:580:59-580:73)
  Terminator {
      source_info: SourceInfo(src/read.rs:580:59-580:73)
      kind: assert(!move (_8.1: bool), "attempt to compute `{} + {}`, which would overflow", move _7, const 1_usize) -> [success: bb2, unwind: bb5]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: _6 = move (_8.0: usize)
    SourceInfo(src/read.rs:580:59-580:73)
  1: StorageDead(_7)
    SourceInfo(src/read.rs:580:72-580:73)
  Terminator {
      source_info: SourceInfo(src/read.rs:580:32-580:74)
      kind: _3 = core::cmp::min::<usize>(move _4, move _6) -> [return: bb3, unwind: bb5]
  }
  preds [bb1]
  succs [bb3, bb5]

bb3
  0: StorageDead(_6)
    SourceInfo(src/read.rs:580:73-580:74)
  1: StorageDead(_4)
    SourceInfo(src/read.rs:580:73-580:74)
  Terminator {
      source_info: SourceInfo(src/read.rs:580:9-580:75)
      kind: _0 = read::SliceRead::<'_>::position_of_index(move _2, move _3) -> [return: bb4, unwind: bb5]
  }
  preds [bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_3)
    SourceInfo(src/read.rs:580:74-580:75)
  1: StorageDead(_2)
    SourceInfo(src/read.rs:580:74-580:75)
  Terminator {
      source_info: SourceInfo(src/read.rs:581:6-581:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/read.rs:577:5-581:6)
      kind: resume
  }
  preds [bb0, bb1, bb2, bb3]
  succs []

