bb0
  0: PlaceMention(_1)
    SourceInfo(src/error.rs:351:15-351:19)
  1: _3 = discriminant((*_1))
    SourceInfo(src/error.rs:351:15-351:19)
  Terminator {
      source_info: SourceInfo(src/error.rs:351:9-351:19)
      kind: switchInt(move _3) -> [0: bb2, 1: bb3, 2: bb4, 3: bb5, 4: bb6, 5: bb7, 6: bb8, 7: bb9, 8: bb10, 9: bb11, 10: bb12, 11: bb13, 12: bb14, 13: bb15, 14: bb16, 15: bb17, 16: bb18, 17: bb19, 18: bb20, 19: bb21, 20: bb22, 21: bb23, 22: bb24, 23: bb25, 24: bb26, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb3, bb4, bb5, bb6, bb7, bb8, bb9, bb10, bb11, bb12, bb13, bb14, bb15, bb16, bb17, bb18, bb19, bb20, bb21, bb22, bb23, bb24, bb25, bb26]

bb1
  0: FakeRead(ForMatchedPlace(None), _1)
    SourceInfo(src/error.rs:351:15-351:19)
  Terminator {
      source_info: SourceInfo(src/error.rs:351:15-351:19)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  Terminator {
      source_info: SourceInfo(src/error.rs:352:13-352:36)
      kind: falseEdge -> [real: bb27, imaginary: bb3]
  }
  preds [bb0]
  succs [bb3, bb27]

bb3
  Terminator {
      source_info: SourceInfo(src/error.rs:353:13-353:31)
      kind: falseEdge -> [real: bb29, imaginary: bb4]
  }
  preds [bb0, bb2]
  succs [bb4, bb29]

bb4
  Terminator {
      source_info: SourceInfo(src/error.rs:354:13-354:43)
      kind: falseEdge -> [real: bb31, imaginary: bb5]
  }
  preds [bb0, bb3]
  succs [bb5, bb31]

bb5
  Terminator {
      source_info: SourceInfo(src/error.rs:355:13-355:45)
      kind: falseEdge -> [real: bb33, imaginary: bb6]
  }
  preds [bb0, bb4]
  succs [bb6, bb33]

bb6
  Terminator {
      source_info: SourceInfo(src/error.rs:356:13-356:45)
      kind: falseEdge -> [real: bb35, imaginary: bb7]
  }
  preds [bb0, bb5]
  succs [bb7, bb35]

bb7
  Terminator {
      source_info: SourceInfo(src/error.rs:357:13-357:44)
      kind: falseEdge -> [real: bb37, imaginary: bb8]
  }
  preds [bb0, bb6]
  succs [bb8, bb37]

bb8
  Terminator {
      source_info: SourceInfo(src/error.rs:358:13-358:37)
      kind: falseEdge -> [real: bb39, imaginary: bb9]
  }
  preds [bb0, bb7]
  succs [bb9, bb39]

bb9
  Terminator {
      source_info: SourceInfo(src/error.rs:359:13-359:46)
      kind: falseEdge -> [real: bb41, imaginary: bb10]
  }
  preds [bb0, bb8]
  succs [bb10, bb41]

bb10
  Terminator {
      source_info: SourceInfo(src/error.rs:360:13-360:48)
      kind: falseEdge -> [real: bb43, imaginary: bb11]
  }
  preds [bb0, bb9]
  succs [bb11, bb43]

bb11
  Terminator {
      source_info: SourceInfo(src/error.rs:361:13-361:41)
      kind: falseEdge -> [real: bb45, imaginary: bb12]
  }
  preds [bb0, bb10]
  succs [bb12, bb45]

bb12
  Terminator {
      source_info: SourceInfo(src/error.rs:362:13-362:41)
      kind: falseEdge -> [real: bb47, imaginary: bb13]
  }
  preds [bb0, bb11]
  succs [bb13, bb47]

bb13
  Terminator {
      source_info: SourceInfo(src/error.rs:363:13-363:43)
      kind: falseEdge -> [real: bb49, imaginary: bb14]
  }
  preds [bb0, bb12]
  succs [bb14, bb49]

bb14
  Terminator {
      source_info: SourceInfo(src/error.rs:364:13-364:37)
      kind: falseEdge -> [real: bb51, imaginary: bb15]
  }
  preds [bb0, bb13]
  succs [bb15, bb51]

bb15
  Terminator {
      source_info: SourceInfo(src/error.rs:365:13-365:37)
      kind: falseEdge -> [real: bb53, imaginary: bb16]
  }
  preds [bb0, bb14]
  succs [bb16, bb53]

bb16
  Terminator {
      source_info: SourceInfo(src/error.rs:366:13-366:40)
      kind: falseEdge -> [real: bb55, imaginary: bb17]
  }
  preds [bb0, bb15]
  succs [bb17, bb55]

bb17
  Terminator {
      source_info: SourceInfo(src/error.rs:367:13-367:47)
      kind: falseEdge -> [real: bb57, imaginary: bb18]
  }
  preds [bb0, bb16]
  succs [bb18, bb57]

bb18
  Terminator {
      source_info: SourceInfo(src/error.rs:368:13-368:58)
      kind: falseEdge -> [real: bb59, imaginary: bb19]
  }
  preds [bb0, bb17]
  succs [bb19, bb59]

bb19
  Terminator {
      source_info: SourceInfo(src/error.rs:371:13-371:40)
      kind: falseEdge -> [real: bb61, imaginary: bb20]
  }
  preds [bb0, bb18]
  succs [bb20, bb61]

bb20
  Terminator {
      source_info: SourceInfo(src/error.rs:372:13-372:42)
      kind: falseEdge -> [real: bb63, imaginary: bb21]
  }
  preds [bb0, bb19]
  succs [bb21, bb63]

bb21
  Terminator {
      source_info: SourceInfo(src/error.rs:375:13-375:44)
      kind: falseEdge -> [real: bb65, imaginary: bb22]
  }
  preds [bb0, bb20]
  succs [bb22, bb65]

bb22
  Terminator {
      source_info: SourceInfo(src/error.rs:378:13-378:55)
      kind: falseEdge -> [real: bb67, imaginary: bb23]
  }
  preds [bb0, bb21]
  succs [bb23, bb67]

bb23
  Terminator {
      source_info: SourceInfo(src/error.rs:381:13-381:37)
      kind: falseEdge -> [real: bb69, imaginary: bb24]
  }
  preds [bb0, bb22]
  succs [bb24, bb69]

bb24
  Terminator {
      source_info: SourceInfo(src/error.rs:382:13-382:42)
      kind: falseEdge -> [real: bb71, imaginary: bb25]
  }
  preds [bb0, bb23]
  succs [bb25, bb71]

bb25
  Terminator {
      source_info: SourceInfo(src/error.rs:383:13-383:48)
      kind: falseEdge -> [real: bb73, imaginary: bb26]
  }
  preds [bb0, bb24]
  succs [bb26, bb73]

bb26
  0: StorageLive(_76)
    SourceInfo(src/error.rs:384:50-384:51)
  1: _76 = &mut (*_2)
    SourceInfo(src/error.rs:384:50-384:51)
  2: StorageLive(_77)
    SourceInfo(src/error.rs:384:62-384:88)
  3: StorageLive(_78)
    SourceInfo(src/error.rs:384:62-384:88)
  4: _78 = const "recursion limit exceeded"
    SourceInfo(src/error.rs:384:62-384:88)
  5: _77 = &(*_78)
    SourceInfo(src/error.rs:384:62-384:88)
  Terminator {
      source_info: SourceInfo(src/error.rs:384:50-384:89)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _76, move _77) -> [return: bb75, unwind: bb77]
  }
  preds [bb0, bb25]
  succs [bb75, bb77]

bb27
  0: StorageLive(_4)
    SourceInfo(src/error.rs:352:32-352:35)
  1: _4 = &(((*_1) as Message).0: alloc::boxed::Box<str>)
    SourceInfo(src/error.rs:352:32-352:35)
  2: StorageLive(_5)
    SourceInfo(src/error.rs:352:40-352:41)
  3: _5 = &mut (*_2)
    SourceInfo(src/error.rs:352:40-352:41)
  4: StorageLive(_6)
    SourceInfo(src/error.rs:352:52-352:55)
  5: _6 = &(*(*_4))
    SourceInfo(src/error.rs:352:52-352:55)
  Terminator {
      source_info: SourceInfo(src/error.rs:352:40-352:56)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _5, move _6) -> [return: bb28, unwind: bb77]
  }
  preds [bb2]
  succs [bb28, bb77]

bb28
  0: StorageDead(_6)
    SourceInfo(src/error.rs:352:55-352:56)
  1: StorageDead(_5)
    SourceInfo(src/error.rs:352:55-352:56)
  2: StorageDead(_4)
    SourceInfo(src/error.rs:352:55-352:56)
  Terminator {
      source_info: SourceInfo(src/error.rs:352:55-352:56)
      kind: goto -> bb76
  }
  preds [bb27]
  succs [bb76]

bb29
  0: StorageLive(_7)
    SourceInfo(src/error.rs:353:27-353:30)
  1: _7 = &(((*_1) as Io).0: std::io::Error)
    SourceInfo(src/error.rs:353:27-353:30)
  2: StorageLive(_8)
    SourceInfo(src/error.rs:353:48-353:51)
  3: _8 = &(*_7)
    SourceInfo(src/error.rs:353:48-353:51)
  4: StorageLive(_9)
    SourceInfo(src/error.rs:353:53-353:54)
  5: _9 = &mut (*_2)
    SourceInfo(src/error.rs:353:53-353:54)
  Terminator {
      source_info: SourceInfo(src/error.rs:353:35-353:55)
      kind: _0 = <std::io::Error as core::fmt::Display>::fmt(move _8, move _9) -> [return: bb30, unwind: bb77]
  }
  preds [bb3]
  succs [bb30, bb77]

bb30
  0: StorageDead(_9)
    SourceInfo(src/error.rs:353:54-353:55)
  1: StorageDead(_8)
    SourceInfo(src/error.rs:353:54-353:55)
  2: StorageDead(_7)
    SourceInfo(src/error.rs:353:54-353:55)
  Terminator {
      source_info: SourceInfo(src/error.rs:353:54-353:55)
      kind: goto -> bb76
  }
  preds [bb29]
  succs [bb76]

bb31
  0: StorageLive(_10)
    SourceInfo(src/error.rs:354:47-354:48)
  1: _10 = &mut (*_2)
    SourceInfo(src/error.rs:354:47-354:48)
  2: StorageLive(_11)
    SourceInfo(src/error.rs:354:59-354:85)
  3: StorageLive(_12)
    SourceInfo(src/error.rs:354:59-354:85)
  4: _12 = const "EOF while parsing a list"
    SourceInfo(src/error.rs:354:59-354:85)
  5: _11 = &(*_12)
    SourceInfo(src/error.rs:354:59-354:85)
  Terminator {
      source_info: SourceInfo(src/error.rs:354:47-354:86)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _10, move _11) -> [return: bb32, unwind: bb77]
  }
  preds [bb4]
  succs [bb32, bb77]

bb32
  0: StorageDead(_11)
    SourceInfo(src/error.rs:354:85-354:86)
  1: StorageDead(_10)
    SourceInfo(src/error.rs:354:85-354:86)
  2: StorageDead(_12)
    SourceInfo(src/error.rs:354:85-354:86)
  Terminator {
      source_info: SourceInfo(src/error.rs:354:85-354:86)
      kind: goto -> bb76
  }
  preds [bb31]
  succs [bb76]

bb33
  0: StorageLive(_13)
    SourceInfo(src/error.rs:355:49-355:50)
  1: _13 = &mut (*_2)
    SourceInfo(src/error.rs:355:49-355:50)
  2: StorageLive(_14)
    SourceInfo(src/error.rs:355:61-355:90)
  3: StorageLive(_15)
    SourceInfo(src/error.rs:355:61-355:90)
  4: _15 = const "EOF while parsing an object"
    SourceInfo(src/error.rs:355:61-355:90)
  5: _14 = &(*_15)
    SourceInfo(src/error.rs:355:61-355:90)
  Terminator {
      source_info: SourceInfo(src/error.rs:355:49-355:91)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _13, move _14) -> [return: bb34, unwind: bb77]
  }
  preds [bb5]
  succs [bb34, bb77]

bb34
  0: StorageDead(_14)
    SourceInfo(src/error.rs:355:90-355:91)
  1: StorageDead(_13)
    SourceInfo(src/error.rs:355:90-355:91)
  2: StorageDead(_15)
    SourceInfo(src/error.rs:355:90-355:91)
  Terminator {
      source_info: SourceInfo(src/error.rs:355:90-355:91)
      kind: goto -> bb76
  }
  preds [bb33]
  succs [bb76]

bb35
  0: StorageLive(_16)
    SourceInfo(src/error.rs:356:49-356:50)
  1: _16 = &mut (*_2)
    SourceInfo(src/error.rs:356:49-356:50)
  2: StorageLive(_17)
    SourceInfo(src/error.rs:356:61-356:89)
  3: StorageLive(_18)
    SourceInfo(src/error.rs:356:61-356:89)
  4: _18 = const "EOF while parsing a string"
    SourceInfo(src/error.rs:356:61-356:89)
  5: _17 = &(*_18)
    SourceInfo(src/error.rs:356:61-356:89)
  Terminator {
      source_info: SourceInfo(src/error.rs:356:49-356:90)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _16, move _17) -> [return: bb36, unwind: bb77]
  }
  preds [bb6]
  succs [bb36, bb77]

bb36
  0: StorageDead(_17)
    SourceInfo(src/error.rs:356:89-356:90)
  1: StorageDead(_16)
    SourceInfo(src/error.rs:356:89-356:90)
  2: StorageDead(_18)
    SourceInfo(src/error.rs:356:89-356:90)
  Terminator {
      source_info: SourceInfo(src/error.rs:356:89-356:90)
      kind: goto -> bb76
  }
  preds [bb35]
  succs [bb76]

bb37
  0: StorageLive(_19)
    SourceInfo(src/error.rs:357:48-357:49)
  1: _19 = &mut (*_2)
    SourceInfo(src/error.rs:357:48-357:49)
  2: StorageLive(_20)
    SourceInfo(src/error.rs:357:60-357:87)
  3: StorageLive(_21)
    SourceInfo(src/error.rs:357:60-357:87)
  4: _21 = const "EOF while parsing a value"
    SourceInfo(src/error.rs:357:60-357:87)
  5: _20 = &(*_21)
    SourceInfo(src/error.rs:357:60-357:87)
  Terminator {
      source_info: SourceInfo(src/error.rs:357:48-357:88)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _19, move _20) -> [return: bb38, unwind: bb77]
  }
  preds [bb7]
  succs [bb38, bb77]

bb38
  0: StorageDead(_20)
    SourceInfo(src/error.rs:357:87-357:88)
  1: StorageDead(_19)
    SourceInfo(src/error.rs:357:87-357:88)
  2: StorageDead(_21)
    SourceInfo(src/error.rs:357:87-357:88)
  Terminator {
      source_info: SourceInfo(src/error.rs:357:87-357:88)
      kind: goto -> bb76
  }
  preds [bb37]
  succs [bb76]

bb39
  0: StorageLive(_22)
    SourceInfo(src/error.rs:358:41-358:42)
  1: _22 = &mut (*_2)
    SourceInfo(src/error.rs:358:41-358:42)
  2: StorageLive(_23)
    SourceInfo(src/error.rs:358:53-358:67)
  3: StorageLive(_24)
    SourceInfo(src/error.rs:358:53-358:67)
  4: _24 = const "expected `:`"
    SourceInfo(src/error.rs:358:53-358:67)
  5: _23 = &(*_24)
    SourceInfo(src/error.rs:358:53-358:67)
  Terminator {
      source_info: SourceInfo(src/error.rs:358:41-358:68)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _22, move _23) -> [return: bb40, unwind: bb77]
  }
  preds [bb8]
  succs [bb40, bb77]

bb40
  0: StorageDead(_23)
    SourceInfo(src/error.rs:358:67-358:68)
  1: StorageDead(_22)
    SourceInfo(src/error.rs:358:67-358:68)
  2: StorageDead(_24)
    SourceInfo(src/error.rs:358:67-358:68)
  Terminator {
      source_info: SourceInfo(src/error.rs:358:67-358:68)
      kind: goto -> bb76
  }
  preds [bb39]
  succs [bb76]

bb41
  0: StorageLive(_25)
    SourceInfo(src/error.rs:359:50-359:51)
  1: _25 = &mut (*_2)
    SourceInfo(src/error.rs:359:50-359:51)
  2: StorageLive(_26)
    SourceInfo(src/error.rs:359:62-359:83)
  3: StorageLive(_27)
    SourceInfo(src/error.rs:359:62-359:83)
  4: _27 = const "expected `,` or `]`"
    SourceInfo(src/error.rs:359:62-359:83)
  5: _26 = &(*_27)
    SourceInfo(src/error.rs:359:62-359:83)
  Terminator {
      source_info: SourceInfo(src/error.rs:359:50-359:84)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _25, move _26) -> [return: bb42, unwind: bb77]
  }
  preds [bb9]
  succs [bb42, bb77]

bb42
  0: StorageDead(_26)
    SourceInfo(src/error.rs:359:83-359:84)
  1: StorageDead(_25)
    SourceInfo(src/error.rs:359:83-359:84)
  2: StorageDead(_27)
    SourceInfo(src/error.rs:359:83-359:84)
  Terminator {
      source_info: SourceInfo(src/error.rs:359:83-359:84)
      kind: goto -> bb76
  }
  preds [bb41]
  succs [bb76]

bb43
  0: StorageLive(_28)
    SourceInfo(src/error.rs:360:52-360:53)
  1: _28 = &mut (*_2)
    SourceInfo(src/error.rs:360:52-360:53)
  2: StorageLive(_29)
    SourceInfo(src/error.rs:360:64-360:85)
  3: StorageLive(_30)
    SourceInfo(src/error.rs:360:64-360:85)
  4: _30 = const "expected `,` or `}`"
    SourceInfo(src/error.rs:360:64-360:85)
  5: _29 = &(*_30)
    SourceInfo(src/error.rs:360:64-360:85)
  Terminator {
      source_info: SourceInfo(src/error.rs:360:52-360:86)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _28, move _29) -> [return: bb44, unwind: bb77]
  }
  preds [bb10]
  succs [bb44, bb77]

bb44
  0: StorageDead(_29)
    SourceInfo(src/error.rs:360:85-360:86)
  1: StorageDead(_28)
    SourceInfo(src/error.rs:360:85-360:86)
  2: StorageDead(_30)
    SourceInfo(src/error.rs:360:85-360:86)
  Terminator {
      source_info: SourceInfo(src/error.rs:360:85-360:86)
      kind: goto -> bb76
  }
  preds [bb43]
  succs [bb76]

bb45
  0: StorageLive(_31)
    SourceInfo(src/error.rs:361:45-361:46)
  1: _31 = &mut (*_2)
    SourceInfo(src/error.rs:361:45-361:46)
  2: StorageLive(_32)
    SourceInfo(src/error.rs:361:57-361:73)
  3: StorageLive(_33)
    SourceInfo(src/error.rs:361:57-361:73)
  4: _33 = const "expected ident"
    SourceInfo(src/error.rs:361:57-361:73)
  5: _32 = &(*_33)
    SourceInfo(src/error.rs:361:57-361:73)
  Terminator {
      source_info: SourceInfo(src/error.rs:361:45-361:74)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _31, move _32) -> [return: bb46, unwind: bb77]
  }
  preds [bb11]
  succs [bb46, bb77]

bb46
  0: StorageDead(_32)
    SourceInfo(src/error.rs:361:73-361:74)
  1: StorageDead(_31)
    SourceInfo(src/error.rs:361:73-361:74)
  2: StorageDead(_33)
    SourceInfo(src/error.rs:361:73-361:74)
  Terminator {
      source_info: SourceInfo(src/error.rs:361:73-361:74)
      kind: goto -> bb76
  }
  preds [bb45]
  succs [bb76]

bb47
  0: StorageLive(_34)
    SourceInfo(src/error.rs:362:45-362:46)
  1: _34 = &mut (*_2)
    SourceInfo(src/error.rs:362:45-362:46)
  2: StorageLive(_35)
    SourceInfo(src/error.rs:362:57-362:73)
  3: StorageLive(_36)
    SourceInfo(src/error.rs:362:57-362:73)
  4: _36 = const "expected value"
    SourceInfo(src/error.rs:362:57-362:73)
  5: _35 = &(*_36)
    SourceInfo(src/error.rs:362:57-362:73)
  Terminator {
      source_info: SourceInfo(src/error.rs:362:45-362:74)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _34, move _35) -> [return: bb48, unwind: bb77]
  }
  preds [bb12]
  succs [bb48, bb77]

bb48
  0: StorageDead(_35)
    SourceInfo(src/error.rs:362:73-362:74)
  1: StorageDead(_34)
    SourceInfo(src/error.rs:362:73-362:74)
  2: StorageDead(_36)
    SourceInfo(src/error.rs:362:73-362:74)
  Terminator {
      source_info: SourceInfo(src/error.rs:362:73-362:74)
      kind: goto -> bb76
  }
  preds [bb47]
  succs [bb76]

bb49
  0: StorageLive(_37)
    SourceInfo(src/error.rs:363:47-363:48)
  1: _37 = &mut (*_2)
    SourceInfo(src/error.rs:363:47-363:48)
  2: StorageLive(_38)
    SourceInfo(src/error.rs:363:59-363:74)
  3: StorageLive(_39)
    SourceInfo(src/error.rs:363:59-363:74)
  4: _39 = const "expected `\"`"
    SourceInfo(src/error.rs:363:59-363:74)
  5: _38 = &(*_39)
    SourceInfo(src/error.rs:363:59-363:74)
  Terminator {
      source_info: SourceInfo(src/error.rs:363:47-363:75)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _37, move _38) -> [return: bb50, unwind: bb77]
  }
  preds [bb13]
  succs [bb50, bb77]

bb50
  0: StorageDead(_38)
    SourceInfo(src/error.rs:363:74-363:75)
  1: StorageDead(_37)
    SourceInfo(src/error.rs:363:74-363:75)
  2: StorageDead(_39)
    SourceInfo(src/error.rs:363:74-363:75)
  Terminator {
      source_info: SourceInfo(src/error.rs:363:74-363:75)
      kind: goto -> bb76
  }
  preds [bb49]
  succs [bb76]

bb51
  0: StorageLive(_40)
    SourceInfo(src/error.rs:364:41-364:42)
  1: _40 = &mut (*_2)
    SourceInfo(src/error.rs:364:41-364:42)
  2: StorageLive(_41)
    SourceInfo(src/error.rs:364:53-364:69)
  3: StorageLive(_42)
    SourceInfo(src/error.rs:364:53-364:69)
  4: _42 = const "invalid escape"
    SourceInfo(src/error.rs:364:53-364:69)
  5: _41 = &(*_42)
    SourceInfo(src/error.rs:364:53-364:69)
  Terminator {
      source_info: SourceInfo(src/error.rs:364:41-364:70)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _40, move _41) -> [return: bb52, unwind: bb77]
  }
  preds [bb14]
  succs [bb52, bb77]

bb52
  0: StorageDead(_41)
    SourceInfo(src/error.rs:364:69-364:70)
  1: StorageDead(_40)
    SourceInfo(src/error.rs:364:69-364:70)
  2: StorageDead(_42)
    SourceInfo(src/error.rs:364:69-364:70)
  Terminator {
      source_info: SourceInfo(src/error.rs:364:69-364:70)
      kind: goto -> bb76
  }
  preds [bb51]
  succs [bb76]

bb53
  0: StorageLive(_43)
    SourceInfo(src/error.rs:365:41-365:42)
  1: _43 = &mut (*_2)
    SourceInfo(src/error.rs:365:41-365:42)
  2: StorageLive(_44)
    SourceInfo(src/error.rs:365:53-365:69)
  3: StorageLive(_45)
    SourceInfo(src/error.rs:365:53-365:69)
  4: _45 = const "invalid number"
    SourceInfo(src/error.rs:365:53-365:69)
  5: _44 = &(*_45)
    SourceInfo(src/error.rs:365:53-365:69)
  Terminator {
      source_info: SourceInfo(src/error.rs:365:41-365:70)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _43, move _44) -> [return: bb54, unwind: bb77]
  }
  preds [bb15]
  succs [bb54, bb77]

bb54
  0: StorageDead(_44)
    SourceInfo(src/error.rs:365:69-365:70)
  1: StorageDead(_43)
    SourceInfo(src/error.rs:365:69-365:70)
  2: StorageDead(_45)
    SourceInfo(src/error.rs:365:69-365:70)
  Terminator {
      source_info: SourceInfo(src/error.rs:365:69-365:70)
      kind: goto -> bb76
  }
  preds [bb53]
  succs [bb76]

bb55
  0: StorageLive(_46)
    SourceInfo(src/error.rs:366:44-366:45)
  1: _46 = &mut (*_2)
    SourceInfo(src/error.rs:366:44-366:45)
  2: StorageLive(_47)
    SourceInfo(src/error.rs:366:56-366:77)
  3: StorageLive(_48)
    SourceInfo(src/error.rs:366:56-366:77)
  4: _48 = const "number out of range"
    SourceInfo(src/error.rs:366:56-366:77)
  5: _47 = &(*_48)
    SourceInfo(src/error.rs:366:56-366:77)
  Terminator {
      source_info: SourceInfo(src/error.rs:366:44-366:78)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _46, move _47) -> [return: bb56, unwind: bb77]
  }
  preds [bb16]
  succs [bb56, bb77]

bb56
  0: StorageDead(_47)
    SourceInfo(src/error.rs:366:77-366:78)
  1: StorageDead(_46)
    SourceInfo(src/error.rs:366:77-366:78)
  2: StorageDead(_48)
    SourceInfo(src/error.rs:366:77-366:78)
  Terminator {
      source_info: SourceInfo(src/error.rs:366:77-366:78)
      kind: goto -> bb76
  }
  preds [bb55]
  succs [bb76]

bb57
  0: StorageLive(_49)
    SourceInfo(src/error.rs:367:51-367:52)
  1: _49 = &mut (*_2)
    SourceInfo(src/error.rs:367:51-367:52)
  2: StorageLive(_50)
    SourceInfo(src/error.rs:367:63-367:91)
  3: StorageLive(_51)
    SourceInfo(src/error.rs:367:63-367:91)
  4: _51 = const "invalid unicode code point"
    SourceInfo(src/error.rs:367:63-367:91)
  5: _50 = &(*_51)
    SourceInfo(src/error.rs:367:63-367:91)
  Terminator {
      source_info: SourceInfo(src/error.rs:367:51-367:92)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _49, move _50) -> [return: bb58, unwind: bb77]
  }
  preds [bb17]
  succs [bb58, bb77]

bb58
  0: StorageDead(_50)
    SourceInfo(src/error.rs:367:91-367:92)
  1: StorageDead(_49)
    SourceInfo(src/error.rs:367:91-367:92)
  2: StorageDead(_51)
    SourceInfo(src/error.rs:367:91-367:92)
  Terminator {
      source_info: SourceInfo(src/error.rs:367:91-367:92)
      kind: goto -> bb76
  }
  preds [bb57]
  succs [bb76]

bb59
  0: StorageLive(_52)
    SourceInfo(src/error.rs:369:17-369:18)
  1: _52 = &mut (*_2)
    SourceInfo(src/error.rs:369:17-369:18)
  2: StorageLive(_53)
    SourceInfo(src/error.rs:369:29-369:95)
  3: StorageLive(_54)
    SourceInfo(src/error.rs:369:29-369:95)
  4: _54 = const "control character (\\u0000-\\u001F) found while parsing a string"
    SourceInfo(src/error.rs:369:29-369:95)
  5: _53 = &(*_54)
    SourceInfo(src/error.rs:369:29-369:95)
  Terminator {
      source_info: SourceInfo(src/error.rs:369:17-369:96)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _52, move _53) -> [return: bb60, unwind: bb77]
  }
  preds [bb18]
  succs [bb60, bb77]

bb60
  0: StorageDead(_53)
    SourceInfo(src/error.rs:369:95-369:96)
  1: StorageDead(_52)
    SourceInfo(src/error.rs:369:95-369:96)
  2: StorageDead(_54)
    SourceInfo(src/error.rs:370:13-370:14)
  Terminator {
      source_info: SourceInfo(src/error.rs:370:13-370:14)
      kind: goto -> bb76
  }
  preds [bb59]
  succs [bb76]

bb61
  0: StorageLive(_55)
    SourceInfo(src/error.rs:371:44-371:45)
  1: _55 = &mut (*_2)
    SourceInfo(src/error.rs:371:44-371:45)
  2: StorageLive(_56)
    SourceInfo(src/error.rs:371:56-371:78)
  3: StorageLive(_57)
    SourceInfo(src/error.rs:371:56-371:78)
  4: _57 = const "key must be a string"
    SourceInfo(src/error.rs:371:56-371:78)
  5: _56 = &(*_57)
    SourceInfo(src/error.rs:371:56-371:78)
  Terminator {
      source_info: SourceInfo(src/error.rs:371:44-371:79)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _55, move _56) -> [return: bb62, unwind: bb77]
  }
  preds [bb19]
  succs [bb62, bb77]

bb62
  0: StorageDead(_56)
    SourceInfo(src/error.rs:371:78-371:79)
  1: StorageDead(_55)
    SourceInfo(src/error.rs:371:78-371:79)
  2: StorageDead(_57)
    SourceInfo(src/error.rs:371:78-371:79)
  Terminator {
      source_info: SourceInfo(src/error.rs:371:78-371:79)
      kind: goto -> bb76
  }
  preds [bb61]
  succs [bb76]

bb63
  0: StorageLive(_58)
    SourceInfo(src/error.rs:373:17-373:18)
  1: _58 = &mut (*_2)
    SourceInfo(src/error.rs:373:17-373:18)
  2: StorageLive(_59)
    SourceInfo(src/error.rs:373:29-373:83)
  3: StorageLive(_60)
    SourceInfo(src/error.rs:373:29-373:83)
  4: _60 = const "invalid value: expected key to be a number in quotes"
    SourceInfo(src/error.rs:373:29-373:83)
  5: _59 = &(*_60)
    SourceInfo(src/error.rs:373:29-373:83)
  Terminator {
      source_info: SourceInfo(src/error.rs:373:17-373:84)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _58, move _59) -> [return: bb64, unwind: bb77]
  }
  preds [bb20]
  succs [bb64, bb77]

bb64
  0: StorageDead(_59)
    SourceInfo(src/error.rs:373:83-373:84)
  1: StorageDead(_58)
    SourceInfo(src/error.rs:373:83-373:84)
  2: StorageDead(_60)
    SourceInfo(src/error.rs:374:13-374:14)
  Terminator {
      source_info: SourceInfo(src/error.rs:374:13-374:14)
      kind: goto -> bb76
  }
  preds [bb63]
  succs [bb76]

bb65
  0: StorageLive(_61)
    SourceInfo(src/error.rs:376:17-376:18)
  1: _61 = &mut (*_2)
    SourceInfo(src/error.rs:376:17-376:18)
  2: StorageLive(_62)
    SourceInfo(src/error.rs:376:29-376:75)
  3: StorageLive(_63)
    SourceInfo(src/error.rs:376:29-376:75)
  4: _63 = const "float key must be finite (got NaN or +/-inf)"
    SourceInfo(src/error.rs:376:29-376:75)
  5: _62 = &(*_63)
    SourceInfo(src/error.rs:376:29-376:75)
  Terminator {
      source_info: SourceInfo(src/error.rs:376:17-376:76)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _61, move _62) -> [return: bb66, unwind: bb77]
  }
  preds [bb21]
  succs [bb66, bb77]

bb66
  0: StorageDead(_62)
    SourceInfo(src/error.rs:376:75-376:76)
  1: StorageDead(_61)
    SourceInfo(src/error.rs:376:75-376:76)
  2: StorageDead(_63)
    SourceInfo(src/error.rs:377:13-377:14)
  Terminator {
      source_info: SourceInfo(src/error.rs:377:13-377:14)
      kind: goto -> bb76
  }
  preds [bb65]
  succs [bb76]

bb67
  0: StorageLive(_64)
    SourceInfo(src/error.rs:379:17-379:18)
  1: _64 = &mut (*_2)
    SourceInfo(src/error.rs:379:17-379:18)
  2: StorageLive(_65)
    SourceInfo(src/error.rs:379:29-379:67)
  3: StorageLive(_66)
    SourceInfo(src/error.rs:379:29-379:67)
  4: _66 = const "lone leading surrogate in hex escape"
    SourceInfo(src/error.rs:379:29-379:67)
  5: _65 = &(*_66)
    SourceInfo(src/error.rs:379:29-379:67)
  Terminator {
      source_info: SourceInfo(src/error.rs:379:17-379:68)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _64, move _65) -> [return: bb68, unwind: bb77]
  }
  preds [bb22]
  succs [bb68, bb77]

bb68
  0: StorageDead(_65)
    SourceInfo(src/error.rs:379:67-379:68)
  1: StorageDead(_64)
    SourceInfo(src/error.rs:379:67-379:68)
  2: StorageDead(_66)
    SourceInfo(src/error.rs:380:13-380:14)
  Terminator {
      source_info: SourceInfo(src/error.rs:380:13-380:14)
      kind: goto -> bb76
  }
  preds [bb67]
  succs [bb76]

bb69
  0: StorageLive(_67)
    SourceInfo(src/error.rs:381:41-381:42)
  1: _67 = &mut (*_2)
    SourceInfo(src/error.rs:381:41-381:42)
  2: StorageLive(_68)
    SourceInfo(src/error.rs:381:53-381:69)
  3: StorageLive(_69)
    SourceInfo(src/error.rs:381:53-381:69)
  4: _69 = const "trailing comma"
    SourceInfo(src/error.rs:381:53-381:69)
  5: _68 = &(*_69)
    SourceInfo(src/error.rs:381:53-381:69)
  Terminator {
      source_info: SourceInfo(src/error.rs:381:41-381:70)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _67, move _68) -> [return: bb70, unwind: bb77]
  }
  preds [bb23]
  succs [bb70, bb77]

bb70
  0: StorageDead(_68)
    SourceInfo(src/error.rs:381:69-381:70)
  1: StorageDead(_67)
    SourceInfo(src/error.rs:381:69-381:70)
  2: StorageDead(_69)
    SourceInfo(src/error.rs:381:69-381:70)
  Terminator {
      source_info: SourceInfo(src/error.rs:381:69-381:70)
      kind: goto -> bb76
  }
  preds [bb69]
  succs [bb76]

bb71
  0: StorageLive(_70)
    SourceInfo(src/error.rs:382:46-382:47)
  1: _70 = &mut (*_2)
    SourceInfo(src/error.rs:382:46-382:47)
  2: StorageLive(_71)
    SourceInfo(src/error.rs:382:58-382:79)
  3: StorageLive(_72)
    SourceInfo(src/error.rs:382:58-382:79)
  4: _72 = const "trailing characters"
    SourceInfo(src/error.rs:382:58-382:79)
  5: _71 = &(*_72)
    SourceInfo(src/error.rs:382:58-382:79)
  Terminator {
      source_info: SourceInfo(src/error.rs:382:46-382:80)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _70, move _71) -> [return: bb72, unwind: bb77]
  }
  preds [bb24]
  succs [bb72, bb77]

bb72
  0: StorageDead(_71)
    SourceInfo(src/error.rs:382:79-382:80)
  1: StorageDead(_70)
    SourceInfo(src/error.rs:382:79-382:80)
  2: StorageDead(_72)
    SourceInfo(src/error.rs:382:79-382:80)
  Terminator {
      source_info: SourceInfo(src/error.rs:382:79-382:80)
      kind: goto -> bb76
  }
  preds [bb71]
  succs [bb76]

bb73
  0: StorageLive(_73)
    SourceInfo(src/error.rs:383:52-383:53)
  1: _73 = &mut (*_2)
    SourceInfo(src/error.rs:383:52-383:53)
  2: StorageLive(_74)
    SourceInfo(src/error.rs:383:64-383:94)
  3: StorageLive(_75)
    SourceInfo(src/error.rs:383:64-383:94)
  4: _75 = const "unexpected end of hex escape"
    SourceInfo(src/error.rs:383:64-383:94)
  5: _74 = &(*_75)
    SourceInfo(src/error.rs:383:64-383:94)
  Terminator {
      source_info: SourceInfo(src/error.rs:383:52-383:95)
      kind: _0 = core::fmt::Formatter::<'_>::write_str(move _73, move _74) -> [return: bb74, unwind: bb77]
  }
  preds [bb25]
  succs [bb74, bb77]

bb74
  0: StorageDead(_74)
    SourceInfo(src/error.rs:383:94-383:95)
  1: StorageDead(_73)
    SourceInfo(src/error.rs:383:94-383:95)
  2: StorageDead(_75)
    SourceInfo(src/error.rs:383:94-383:95)
  Terminator {
      source_info: SourceInfo(src/error.rs:383:94-383:95)
      kind: goto -> bb76
  }
  preds [bb73]
  succs [bb76]

bb75
  0: StorageDead(_77)
    SourceInfo(src/error.rs:384:88-384:89)
  1: StorageDead(_76)
    SourceInfo(src/error.rs:384:88-384:89)
  2: StorageDead(_78)
    SourceInfo(src/error.rs:384:88-384:89)
  Terminator {
      source_info: SourceInfo(src/error.rs:384:88-384:89)
      kind: goto -> bb76
  }
  preds [bb26]
  succs [bb76]

bb76
  Terminator {
      source_info: SourceInfo(src/error.rs:386:6-386:6)
      kind: return
  }
  preds [bb28, bb30, bb32, bb34, bb36, bb38, bb40, bb42, bb44, bb46, bb48, bb50, bb52, bb54, bb56, bb58, bb60, bb62, bb64, bb66, bb68, bb70, bb72, bb74, bb75]
  succs []

bb77
  Terminator {
      source_info: SourceInfo(src/error.rs:350:5-386:6)
      kind: resume
  }
  preds [bb26, bb27, bb29, bb31, bb33, bb35, bb37, bb39, bb41, bb43, bb45, bb47, bb49, bb51, bb53, bb55, bb57, bb59, bb61, bb63, bb65, bb67, bb69, bb71, bb73]
  succs []

