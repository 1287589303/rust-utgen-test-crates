bb0
  0: StorageLive(_2)
    SourceInfo(src/read.rs:548:12-554:10)
  1: StorageLive(_3)
    SourceInfo(src/read.rs:548:15-548:44)
  2: StorageLive(_4)
    SourceInfo(src/read.rs:548:15-548:25)
  3: _4 = ((*_1).1: usize)
    SourceInfo(src/read.rs:548:15-548:25)
  4: StorageLive(_5)
    SourceInfo(src/read.rs:548:28-548:44)
  5: StorageLive(_6)
    SourceInfo(src/read.rs:548:28-548:38)
  6: _6 = &(*((*_1).0: &[u8]))
    SourceInfo(src/read.rs:548:28-548:38)
  Terminator {
      source_info: SourceInfo(src/read.rs:548:28-548:44)
      kind: _5 = core::slice::<impl [u8]>::len(move _6) -> [return: bb1, unwind: bb7]
  }
  preds []
  succs [bb1, bb7]

bb1
  0: StorageDead(_6)
    SourceInfo(src/read.rs:548:43-548:44)
  1: _3 = Lt(move _4, move _5)
    SourceInfo(src/read.rs:548:15-548:44)
  Terminator {
      source_info: SourceInfo(src/read.rs:548:15-548:44)
      kind: switchInt(move _3) -> [0: bb5, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb5]

bb2
  0: StorageDead(_5)
    SourceInfo(src/read.rs:548:43-548:44)
  1: StorageDead(_4)
    SourceInfo(src/read.rs:548:43-548:44)
  2: StorageLive(_7)
    SourceInfo(src/read.rs:549:17-549:19)
  3: StorageLive(_8)
    SourceInfo(src/read.rs:549:33-549:43)
  4: _8 = ((*_1).1: usize)
    SourceInfo(src/read.rs:549:33-549:43)
  5: _9 = Len((*((*_1).0: &[u8])))
    SourceInfo(src/read.rs:549:22-549:44)
  6: _10 = Lt(_8, _9)
    SourceInfo(src/read.rs:549:22-549:44)
  Terminator {
      source_info: SourceInfo(src/read.rs:549:22-549:44)
      kind: assert(move _10, "index out of bounds: the length is {} but the index is {}", move _9, _8) -> [success: bb3, unwind: bb7]
  }
  preds [bb1]
  succs [bb3, bb7]

bb3
  0: _7 = (*((*_1).0: &[u8]))[_8]
    SourceInfo(src/read.rs:549:22-549:44)
  1: FakeRead(ForLet(None), _7)
    SourceInfo(src/read.rs:549:17-549:19)
  2: StorageDead(_8)
    SourceInfo(src/read.rs:549:44-549:45)
  3: _11 = AddWithOverflow(((*_1).1: usize), const 1_usize)
    SourceInfo(src/read.rs:550:13-550:28)
  Terminator {
      source_info: SourceInfo(src/read.rs:550:13-550:28)
      kind: assert(!move (_11.1: bool), "attempt to compute `{} + {}`, which would overflow", ((*_1).1: usize), const 1_usize) -> [success: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: ((*_1).1: usize) = move (_11.0: usize)
    SourceInfo(src/read.rs:550:13-550:28)
  1: StorageLive(_12)
    SourceInfo(src/read.rs:551:18-551:20)
  2: _12 = _7
    SourceInfo(src/read.rs:551:18-551:20)
  3: _2 = core::option::Option::<u8>::Some(move _12)
    SourceInfo(src/read.rs:551:13-551:21)
  4: StorageDead(_12)
    SourceInfo(src/read.rs:551:20-551:21)
  5: StorageDead(_7)
    SourceInfo(src/read.rs:552:9-552:10)
  Terminator {
      source_info: SourceInfo(src/read.rs:548:12-554:10)
      kind: goto -> bb6
  }
  preds [bb3]
  succs [bb6]

bb5
  0: StorageDead(_5)
    SourceInfo(src/read.rs:548:43-548:44)
  1: StorageDead(_4)
    SourceInfo(src/read.rs:548:43-548:44)
  2: _2 = core::option::Option::<u8>::None
    SourceInfo(src/read.rs:553:13-553:17)
  Terminator {
      source_info: SourceInfo(src/read.rs:548:12-554:10)
      kind: goto -> bb6
  }
  preds [bb1]
  succs [bb6]

bb6
  0: StorageDead(_3)
    SourceInfo(src/read.rs:554:9-554:10)
  1: _0 = core::result::Result::<core::option::Option<u8>, error::Error>::Ok(move _2)
    SourceInfo(src/read.rs:548:9-554:11)
  2: StorageDead(_2)
    SourceInfo(src/read.rs:554:10-554:11)
  Terminator {
      source_info: SourceInfo(src/read.rs:555:6-555:6)
      kind: return
  }
  preds [bb4, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/read.rs:545:5-555:6)
      kind: resume
  }
  preds [bb0, bb2, bb3]
  succs []

