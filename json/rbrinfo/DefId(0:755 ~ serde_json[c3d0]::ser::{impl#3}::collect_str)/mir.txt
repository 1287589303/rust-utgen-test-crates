bb0
  0: StorageLive(_3)
    SourceInfo(src/lib.rs:408:9-411:10)
  1: StorageLive(_4)
    SourceInfo(src/ser.rs:437:14-440:32)
  2: StorageLive(_5)
    SourceInfo(src/ser.rs:437:14-439:44)
  3: StorageLive(_6)
    SourceInfo(src/ser.rs:437:14-438:23)
  4: _6 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:437:14-438:23)
  5: StorageLive(_7)
    SourceInfo(src/ser.rs:439:27-439:43)
  6: StorageLive(_8)
    SourceInfo(src/ser.rs:439:27-439:43)
  7: _8 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:439:27-439:43)
  8: _7 = &mut (*_8)
    SourceInfo(src/ser.rs:439:27-439:43)
  Terminator {
      source_info: SourceInfo(src/ser.rs:437:14-439:44)
      kind: _5 = <F as ser::Formatter>::begin_string::<W>(move _6, move _7) -> [return: bb1, unwind: bb40]
  }
  preds []
  succs [bb1, bb40]

bb1
  0: StorageDead(_7)
    SourceInfo(src/ser.rs:439:43-439:44)
  1: StorageDead(_6)
    SourceInfo(src/ser.rs:439:43-439:44)
  Terminator {
      source_info: SourceInfo(src/ser.rs:437:14-440:32)
      kind: _4 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _5, error::Error::io) -> [return: bb2, unwind: bb39]
  }
  preds [bb0]
  succs [bb2, bb39]

bb2
  0: StorageDead(_5)
    SourceInfo(src/ser.rs:440:31-440:32)
  1: PlaceMention(_4)
    SourceInfo(src/ser.rs:437:14-440:32)
  2: _9 = discriminant(_4)
    SourceInfo(src/ser.rs:437:14-440:32)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _9) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/ser.rs:437:14-440:32)
  Terminator {
      source_info: SourceInfo(src/ser.rs:437:14-440:32)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_11)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _11 = move ((_4 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_13)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _13 = move _11
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), error::Error>::Err(move _13)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_13) -> [return: bb7, unwind: bb37]
  }
  preds [bb2, bb4]
  succs [bb7, bb37]

bb6
  0: StorageLive(_10)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _10 = ((_4 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _3 = _10
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_10)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb8, unwind: bb40]
  }
  preds [bb4]
  succs [bb8, bb40]

bb7
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_11) -> [return: bb30, unwind: bb38]
  }
  preds [bb5]
  succs [bb30, bb38]

bb8
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_3)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageLive(_14)
    SourceInfo(src/ser.rs:441:13-441:24)
  4: StorageLive(_15)
    SourceInfo(src/ser.rs:442:21-442:37)
  5: StorageLive(_16)
    SourceInfo(src/ser.rs:442:21-442:37)
  6: _16 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:442:21-442:37)
  7: _15 = &mut (*_16)
    SourceInfo(src/ser.rs:442:21-442:37)
  8: StorageLive(_17)
    SourceInfo(src/ser.rs:443:24-443:43)
  9: StorageLive(_18)
    SourceInfo(src/ser.rs:443:24-443:43)
  10: _18 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:443:24-443:43)
  11: _17 = &mut (*_18)
    SourceInfo(src/ser.rs:443:24-443:43)
  12: StorageLive(_19)
    SourceInfo(src/ser.rs:444:20-444:24)
  13: _19 = core::option::Option::<std::io::Error>::None
    SourceInfo(src/ser.rs:444:20-444:24)
  14: _14 = <&'a mut ser::Serializer<W, F> as serde::Serializer>::collect_str::Adapter::<'_, W, F> { writer: move _15, formatter: move _17, error: move _19 }
    SourceInfo(src/ser.rs:441:27-445:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:445:9-445:10)
      kind: drop(_19) -> [return: bb9, unwind: bb40]
  }
  preds [bb6]
  succs [bb9, bb40]

bb9
  0: StorageDead(_19)
    SourceInfo(src/ser.rs:445:9-445:10)
  1: StorageDead(_17)
    SourceInfo(src/ser.rs:445:9-445:10)
  2: StorageDead(_15)
    SourceInfo(src/ser.rs:445:9-445:10)
  3: FakeRead(ForLet(None), _14)
    SourceInfo(src/ser.rs:441:13-441:24)
  4: StorageDead(_18)
    SourceInfo(src/ser.rs:445:10-445:11)
  5: StorageDead(_16)
    SourceInfo(src/ser.rs:445:10-445:11)
  6: StorageLive(_20)
    SourceInfo(src/ser.rs:446:9-451:10)
  7: StorageLive(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
  8: StorageLive(_22)
    SourceInfo(src/ser.rs:446:22-446:29)
  9: _22 = &mut _14
    SourceInfo(src/ser.rs:446:22-446:29)
  10: StorageLive(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  11: StorageLive(_24)
    SourceInfo(src/ser.rs:446:31-446:35)
  12: StorageLive(_25)
    SourceInfo(src/ser.rs:446:31-446:35)
  13: StorageLive(_26)
    SourceInfo(src/ser.rs:446:31-446:35)
  14: _26 = [const ""]
    SourceInfo(src/ser.rs:446:31-446:35)
  15: _25 = &_26
    SourceInfo(src/ser.rs:446:31-446:35)
  16: _24 = &(*_25)
    SourceInfo(src/ser.rs:446:31-446:35)
  17: StorageLive(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  18: StorageLive(_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  19: StorageLive(_29)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  20: StorageLive(_30)
    SourceInfo(src/ser.rs:446:32-446:34)
  21: StorageLive(_31)
    SourceInfo(src/ser.rs:446:37-446:42)
  22: StorageLive(_32)
    SourceInfo(src/ser.rs:446:37-446:42)
  23: _32 = &_2
    SourceInfo(src/ser.rs:446:37-446:42)
  24: _31 = &(*_32)
    SourceInfo(src/ser.rs:446:37-446:42)
  Terminator {
      source_info: SourceInfo(src/ser.rs:446:32-446:34)
      kind: _30 = core::fmt::rt::Argument::<'_>::new_display::<&T>(move _31) -> [return: bb10, unwind: bb36]
  }
  preds [bb8]
  succs [bb10, bb36]

bb10
  0: StorageDead(_31)
    SourceInfo(src/ser.rs:446:33-446:34)
  1: _29 = [move _30]
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  2: StorageDead(_30)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  3: _28 = &_29
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  4: _27 = &(*_28)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:24-632:54)
      kind: _23 = core::fmt::Arguments::<'_>::new_v1::<1, 1>(move _24, move _27) -> [return: bb11, unwind: bb36]
  }
  preds [bb9]
  succs [bb11, bb36]

bb11
  0: StorageDead(_27)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  1: StorageDead(_24)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:53-632:54)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: _21 = <<&'a mut ser::Serializer<W, F> as serde::Serializer>::collect_str::Adapter<'_, W, F> as core::fmt::Write>::write_fmt(move _22, move _23) -> [return: bb12, unwind: bb36]
  }
  preds [bb10]
  succs [bb12, bb36]

bb12
  0: StorageDead(_23)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  1: StorageDead(_22)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:54-632:55)
  2: PlaceMention(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
  3: _33 = discriminant(_21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: switchInt(move _33) -> [0: bb14, 1: bb15, otherwise: bb13]
  }
  preds [bb11]
  succs [bb13, bb14, bb15]

bb13
  0: FakeRead(ForMatchedPlace(None), _21)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:632:9-632:55)
      kind: unreachable
  }
  preds [bb12]
  succs []

bb14
  Terminator {
      source_info: SourceInfo(src/ser.rs:447:13-447:19)
      kind: falseEdge -> [real: bb16, imaginary: bb15]
  }
  preds [bb12]
  succs [bb15, bb16]

bb15
  0: StorageLive(_40)
    SourceInfo(src/ser.rs:449:28-449:87)
  1: StorageLive(_41)
    SourceInfo(src/ser.rs:449:38-449:86)
  2: StorageLive(_42)
    SourceInfo(src/ser.rs:449:38-449:51)
  3: _42 = move (_14.2: core::option::Option<std::io::Error>)
    SourceInfo(src/ser.rs:449:38-449:51)
  4: StorageLive(_43)
    SourceInfo(src/ser.rs:449:59-449:85)
  5: StorageLive(_44)
    SourceInfo(src/ser.rs:449:59-449:85)
  6: _44 = const "there should be an error"
    SourceInfo(src/ser.rs:449:59-449:85)
  7: _43 = &(*_44)
    SourceInfo(src/ser.rs:449:59-449:85)
  Terminator {
      source_info: SourceInfo(src/ser.rs:449:38-449:86)
      kind: _41 = core::option::Option::<std::io::Error>::expect(move _42, move _43) -> [return: bb23, unwind: bb35]
  }
  preds [bb12, bb14]
  succs [bb23, bb35]

bb16
  0: StorageLive(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  1: _34 = const true
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12-316:42)
      kind: switchInt(move _34) -> [0: bb21, otherwise: bb17]
  }
  preds [bb14]
  succs [bb17, bb21]

bb17
  0: StorageLive(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  1: StorageLive(_36)
    SourceInfo(src/ser.rs:447:37-447:60)
  2: StorageLive(_37)
    SourceInfo(src/ser.rs:447:37-447:50)
  3: _37 = &(_14.2: core::option::Option<std::io::Error>)
    SourceInfo(src/ser.rs:447:37-447:50)
  Terminator {
      source_info: SourceInfo(src/ser.rs:447:37-447:60)
      kind: _36 = core::option::Option::<std::io::Error>::is_none(move _37) -> [return: bb18, unwind: bb36]
  }
  preds [bb16]
  succs [bb18, bb36]

bb18
  Terminator {
      source_info: SourceInfo(src/ser.rs:447:37-447:60)
      kind: switchInt(move _36) -> [0: bb20, otherwise: bb19]
  }
  preds [bb17]
  succs [bb19, bb20]

bb19
  0: StorageDead(_37)
    SourceInfo(src/ser.rs:447:59-447:60)
  1: _35 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:38-317:38)
  2: StorageDead(_36)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  3: StorageDead(_35)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:37-317:38)
  4: _20 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:43-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb20
  0: StorageDead(_37)
    SourceInfo(src/ser.rs:447:59-447:60)
  1: StorageLive(_38)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13-317:38)
      kind: _38 = core::panicking::panic(const "assertion failed: adapter.error.is_none()") -> bb36
  }
  preds [bb18]
  succs [bb36]

bb21
  0: _20 = const ()
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:10-318:10)
  Terminator {
      source_info: SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9-318:10)
      kind: goto -> bb22
  }
  preds [bb16]
  succs [bb22]

bb22
  0: StorageDead(_34)
    SourceInfo(/home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:318:9-318:10)
  1: StorageDead(_32)
    SourceInfo(src/ser.rs:451:9-451:10)
  2: StorageDead(_29)
    SourceInfo(src/ser.rs:451:9-451:10)
  3: StorageDead(_28)
    SourceInfo(src/ser.rs:451:9-451:10)
  4: StorageDead(_26)
    SourceInfo(src/ser.rs:451:9-451:10)
  5: StorageDead(_25)
    SourceInfo(src/ser.rs:451:9-451:10)
  6: StorageDead(_21)
    SourceInfo(src/ser.rs:451:9-451:10)
  7: StorageDead(_20)
    SourceInfo(src/ser.rs:451:9-451:10)
  8: StorageLive(_45)
    SourceInfo(src/ser.rs:452:9-453:42)
  9: StorageLive(_46)
    SourceInfo(src/ser.rs:452:9-452:23)
  10: _46 = &mut ((*_1).1: F)
    SourceInfo(src/ser.rs:452:9-452:23)
  11: StorageLive(_47)
    SourceInfo(src/ser.rs:453:25-453:41)
  12: StorageLive(_48)
    SourceInfo(src/ser.rs:453:25-453:41)
  13: _48 = &mut ((*_1).0: W)
    SourceInfo(src/ser.rs:453:25-453:41)
  14: _47 = &mut (*_48)
    SourceInfo(src/ser.rs:453:25-453:41)
  Terminator {
      source_info: SourceInfo(src/ser.rs:452:9-453:42)
      kind: _45 = <F as ser::Formatter>::end_string::<W>(move _46, move _47) -> [return: bb26, unwind: bb36]
  }
  preds [bb19, bb21]
  succs [bb26, bb36]

bb23
  0: StorageDead(_43)
    SourceInfo(src/ser.rs:449:85-449:86)
  1: StorageDead(_42)
    SourceInfo(src/ser.rs:449:85-449:86)
  Terminator {
      source_info: SourceInfo(src/ser.rs:449:28-449:87)
      kind: _40 = error::Error::io(move _41) -> [return: bb24, unwind: bb34]
  }
  preds [bb15]
  succs [bb24, bb34]

bb24
  0: StorageDead(_41)
    SourceInfo(src/ser.rs:449:86-449:87)
  1: _0 = core::result::Result::<(), error::Error>::Err(move _40)
    SourceInfo(src/ser.rs:449:24-449:88)
  Terminator {
      source_info: SourceInfo(src/ser.rs:449:87-449:88)
      kind: drop(_40) -> [return: bb25, unwind: bb36]
  }
  preds [bb23]
  succs [bb25, bb36]

bb25
  0: StorageDead(_40)
    SourceInfo(src/ser.rs:449:87-449:88)
  1: StorageDead(_44)
    SourceInfo(src/ser.rs:449:88-449:89)
  2: StorageDead(_32)
    SourceInfo(src/ser.rs:451:9-451:10)
  3: StorageDead(_29)
    SourceInfo(src/ser.rs:451:9-451:10)
  4: StorageDead(_28)
    SourceInfo(src/ser.rs:451:9-451:10)
  5: StorageDead(_26)
    SourceInfo(src/ser.rs:451:9-451:10)
  6: StorageDead(_25)
    SourceInfo(src/ser.rs:451:9-451:10)
  7: StorageDead(_21)
    SourceInfo(src/ser.rs:451:9-451:10)
  8: StorageDead(_20)
    SourceInfo(src/ser.rs:451:9-451:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:455:5-455:6)
      kind: drop(_14) -> [return: bb29, unwind: bb40]
  }
  preds [bb24]
  succs [bb29, bb40]

bb26
  0: StorageDead(_47)
    SourceInfo(src/ser.rs:453:41-453:42)
  1: StorageDead(_46)
    SourceInfo(src/ser.rs:453:41-453:42)
  Terminator {
      source_info: SourceInfo(src/ser.rs:452:9-454:32)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _45, error::Error::io) -> [return: bb27, unwind: bb33]
  }
  preds [bb22]
  succs [bb27, bb33]

bb27
  0: StorageDead(_45)
    SourceInfo(src/ser.rs:454:31-454:32)
  Terminator {
      source_info: SourceInfo(src/ser.rs:455:5-455:6)
      kind: drop(_14) -> [return: bb28, unwind: bb40]
  }
  preds [bb26]
  succs [bb28, bb40]

bb28
  0: StorageDead(_14)
    SourceInfo(src/ser.rs:455:5-455:6)
  1: StorageDead(_48)
    SourceInfo(src/ser.rs:455:5-455:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:455:6-455:6)
      kind: goto -> bb32
  }
  preds [bb27]
  succs [bb32]

bb29
  0: StorageDead(_14)
    SourceInfo(src/ser.rs:455:5-455:6)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb25]
  succs [bb32]

bb30
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb31, unwind: bb40]
  }
  preds [bb7]
  succs [bb31, bb40]

bb31
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_3)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb32
  }
  preds [bb30]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/ser.rs:455:6-455:6)
      kind: return
  }
  preds [bb28, bb29, bb31]
  succs []

bb33
  Terminator {
      source_info: SourceInfo(src/ser.rs:454:31-454:32)
      kind: drop(_45) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb26]
  succs [bb36]

bb34
  Terminator {
      source_info: SourceInfo(src/ser.rs:449:86-449:87)
      kind: drop(_41) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb23]
  succs [bb36]

bb35
  Terminator {
      source_info: SourceInfo(src/ser.rs:449:85-449:86)
      kind: drop(_42) -> [return: bb36, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb36]

bb36
  Terminator {
      source_info: SourceInfo(src/ser.rs:455:5-455:6)
      kind: drop(_14) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb9, bb10, bb11, bb17, bb20, bb22, bb24, bb33, bb34, bb35]
  succs [bb40]

bb37
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_11) -> [return: bb38, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb38]

bb38
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_4) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb7, bb37]
  succs [bb40]

bb39
  Terminator {
      source_info: SourceInfo(src/ser.rs:440:31-440:32)
      kind: drop(_5) -> [return: bb40, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb40]

bb40
  Terminator {
      source_info: SourceInfo(src/ser.rs:408:5-455:6)
      kind: resume
  }
  preds [bb0, bb6, bb8, bb25, bb27, bb30, bb36, bb38, bb39]
  succs []

