bb0
  0: PlaceMention((_1.0: core::option::Option<value::Value>))
    SourceInfo(src/value/de.rs:573:15-573:25)
  1: _5 = discriminant((_1.0: core::option::Option<value::Value>))
    SourceInfo(src/value/de.rs:573:15-573:25)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:573:9-573:25)
      kind: switchInt(move _5) -> [0: bb5, 1: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2, bb5]

bb1
  0: FakeRead(ForMatchedPlace(None), (_1.0: core::option::Option<value::Value>))
    SourceInfo(src/value/de.rs:573:15-573:25)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:573:15-573:25)
      kind: unreachable
  }
  preds [bb0]
  succs []

bb2
  0: _4 = discriminant((((_1.0: core::option::Option<value::Value>) as Some).0: value::Value))
    SourceInfo(src/value/de.rs:573:15-573:25)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:573:9-573:25)
      kind: switchInt(move _4) -> [4: bb4, otherwise: bb3]
  }
  preds [bb0]
  succs [bb3, bb4]

bb3
  Terminator {
      source_info: SourceInfo(src/value/de.rs:581:13-581:24)
      kind: falseEdge -> [real: bb14, imaginary: bb5]
  }
  preds [bb2, bb4]
  succs [bb5, bb14]

bb4
  Terminator {
      source_info: SourceInfo(src/value/de.rs:574:13-574:34)
      kind: falseEdge -> [real: bb6, imaginary: bb3]
  }
  preds [bb2]
  succs [bb3, bb6]

bb5
  0: StorageLive(_20)
    SourceInfo(src/value/de.rs:585:25-588:14)
  1: StorageLive(_21)
    SourceInfo(src/value/de.rs:586:17-586:40)
  2: _21 = serde::de::Unexpected::<'_>::UnitVariant
    SourceInfo(src/value/de.rs:586:17-586:40)
  3: StorageLive(_22)
    SourceInfo(src/value/de.rs:587:17-587:33)
  4: StorageLive(_23)
    SourceInfo(src/value/de.rs:587:17-587:33)
  5: StorageLive(_24)
    SourceInfo(src/value/de.rs:587:17-587:33)
  6: StorageLive(_25)
    SourceInfo(src/value/de.rs:587:18-587:33)
  7: _25 = const "tuple variant"
    SourceInfo(src/value/de.rs:587:18-587:33)
  8: _24 = &_25
    SourceInfo(src/value/de.rs:587:17-587:33)
  9: _23 = &(*_24)
    SourceInfo(src/value/de.rs:587:17-587:33)
  10: _22 = move _23 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:587:17-587:33)
  11: StorageDead(_23)
    SourceInfo(src/value/de.rs:587:32-587:33)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:585:25-588:14)
      kind: _20 = <error::Error as serde::de::Error>::invalid_type(move _21, move _22) -> [return: bb19, unwind: bb29]
  }
  preds [bb0, bb3]
  succs [bb19, bb29]

bb6
  0: StorageLive(_6)
    SourceInfo(src/value/de.rs:574:31-574:32)
  1: _6 = move (((((_1.0: core::option::Option<value::Value>) as Some).0: value::Value) as Array).0: alloc::vec::Vec<value::Value>)
    SourceInfo(src/value/de.rs:574:31-574:32)
  2: StorageLive(_7)
    SourceInfo(src/value/de.rs:575:20-575:32)
  3: StorageLive(_8)
    SourceInfo(src/value/de.rs:575:20-575:21)
  4: _8 = &_6
    SourceInfo(src/value/de.rs:575:20-575:21)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:575:20-575:32)
      kind: _7 = alloc::vec::Vec::<value::Value>::is_empty(move _8) -> [return: bb7, unwind: bb28]
  }
  preds [bb4]
  succs [bb7, bb28]

bb7
  Terminator {
      source_info: SourceInfo(src/value/de.rs:575:20-575:32)
      kind: switchInt(move _7) -> [0: bb10, otherwise: bb8]
  }
  preds [bb6]
  succs [bb8, bb10]

bb8
  0: StorageDead(_8)
    SourceInfo(src/value/de.rs:575:31-575:32)
  1: StorageLive(_9)
    SourceInfo(src/value/de.rs:576:21-576:28)
  2: _9 = move _3
    SourceInfo(src/value/de.rs:576:21-576:28)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:576:21-576:41)
      kind: _0 = <V as serde::de::Visitor<'_>>::visit_unit::<error::Error>(move _9) -> [return: bb9, unwind: bb27]
  }
  preds [bb7]
  succs [bb9, bb27]

bb9
  0: StorageDead(_9)
    SourceInfo(src/value/de.rs:576:40-576:41)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:575:17-579:18)
      kind: goto -> bb12
  }
  preds [bb8]
  succs [bb12]

bb10
  0: StorageDead(_8)
    SourceInfo(src/value/de.rs:575:31-575:32)
  1: StorageLive(_10)
    SourceInfo(src/value/de.rs:578:33-578:34)
  2: _10 = move _6
    SourceInfo(src/value/de.rs:578:33-578:34)
  3: StorageLive(_11)
    SourceInfo(src/value/de.rs:578:36-578:43)
  4: _11 = move _3
    SourceInfo(src/value/de.rs:578:36-578:43)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:578:21-578:44)
      kind: _0 = value::de::visit_array::<'_, V>(move _10, move _11) -> [return: bb11, unwind: bb25]
  }
  preds [bb7]
  succs [bb11, bb25]

bb11
  0: StorageDead(_11)
    SourceInfo(src/value/de.rs:578:43-578:44)
  1: StorageDead(_10)
    SourceInfo(src/value/de.rs:578:43-578:44)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:575:17-579:18)
      kind: goto -> bb12
  }
  preds [bb10]
  succs [bb12]

bb12
  0: StorageDead(_7)
    SourceInfo(src/value/de.rs:579:17-579:18)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:580:13-580:14)
      kind: drop(_6) -> [return: bb13, unwind: bb29]
  }
  preds [bb9, bb11]
  succs [bb13, bb29]

bb13
  0: StorageDead(_6)
    SourceInfo(src/value/de.rs:580:13-580:14)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:580:13-580:14)
      kind: goto -> bb21
  }
  preds [bb12]
  succs [bb21]

bb14
  0: StorageLive(_12)
    SourceInfo(src/value/de.rs:581:18-581:23)
  1: _12 = move (((_1.0: core::option::Option<value::Value>) as Some).0: value::Value)
    SourceInfo(src/value/de.rs:581:18-581:23)
  2: StorageLive(_13)
    SourceInfo(src/value/de.rs:581:32-584:14)
  3: StorageLive(_14)
    SourceInfo(src/value/de.rs:582:17-582:35)
  4: StorageLive(_15)
    SourceInfo(src/value/de.rs:582:17-582:22)
  5: _15 = &_12
    SourceInfo(src/value/de.rs:582:17-582:22)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:582:17-582:35)
      kind: _14 = value::de::<impl value::Value>::unexpected(move _15) -> [return: bb15, unwind: bb24]
  }
  preds [bb3]
  succs [bb15, bb24]

bb15
  0: StorageDead(_15)
    SourceInfo(src/value/de.rs:582:34-582:35)
  1: StorageLive(_16)
    SourceInfo(src/value/de.rs:583:17-583:33)
  2: StorageLive(_17)
    SourceInfo(src/value/de.rs:583:17-583:33)
  3: StorageLive(_18)
    SourceInfo(src/value/de.rs:583:17-583:33)
  4: StorageLive(_19)
    SourceInfo(src/value/de.rs:583:18-583:33)
  5: _19 = const "tuple variant"
    SourceInfo(src/value/de.rs:583:18-583:33)
  6: _18 = &_19
    SourceInfo(src/value/de.rs:583:17-583:33)
  7: _17 = &(*_18)
    SourceInfo(src/value/de.rs:583:17-583:33)
  8: _16 = move _17 as &dyn serde::de::Expected (PointerCoercion(Unsize))
    SourceInfo(src/value/de.rs:583:17-583:33)
  9: StorageDead(_17)
    SourceInfo(src/value/de.rs:583:32-583:33)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:581:32-584:14)
      kind: _13 = <error::Error as serde::de::Error>::invalid_type(move _14, move _16) -> [return: bb16, unwind: bb24]
  }
  preds [bb14]
  succs [bb16, bb24]

bb16
  0: StorageDead(_16)
    SourceInfo(src/value/de.rs:584:13-584:14)
  1: StorageDead(_14)
    SourceInfo(src/value/de.rs:584:13-584:14)
  2: _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _13)
    SourceInfo(src/value/de.rs:581:28-584:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:584:14-584:15)
      kind: drop(_13) -> [return: bb17, unwind: bb24]
  }
  preds [bb15]
  succs [bb17, bb24]

bb17
  0: StorageDead(_13)
    SourceInfo(src/value/de.rs:584:14-584:15)
  1: StorageDead(_19)
    SourceInfo(src/value/de.rs:584:14-584:15)
  2: StorageDead(_18)
    SourceInfo(src/value/de.rs:584:14-584:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:584:14-584:15)
      kind: drop(_12) -> [return: bb18, unwind: bb29]
  }
  preds [bb16]
  succs [bb18, bb29]

bb18
  0: StorageDead(_12)
    SourceInfo(src/value/de.rs:584:14-584:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:584:14-584:15)
      kind: goto -> bb21
  }
  preds [bb17]
  succs [bb21]

bb19
  0: StorageDead(_22)
    SourceInfo(src/value/de.rs:588:13-588:14)
  1: StorageDead(_21)
    SourceInfo(src/value/de.rs:588:13-588:14)
  2: _0 = core::result::Result::<<V as serde::de::Visitor<'_>>::Value, error::Error>::Err(move _20)
    SourceInfo(src/value/de.rs:585:21-588:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:588:14-588:15)
      kind: drop(_20) -> [return: bb20, unwind: bb29]
  }
  preds [bb5]
  succs [bb20, bb29]

bb20
  0: StorageDead(_20)
    SourceInfo(src/value/de.rs:588:14-588:15)
  1: StorageDead(_25)
    SourceInfo(src/value/de.rs:588:14-588:15)
  2: StorageDead(_24)
    SourceInfo(src/value/de.rs:588:14-588:15)
  Terminator {
      source_info: SourceInfo(src/value/de.rs:588:14-588:15)
      kind: goto -> bb21
  }
  preds [bb19]
  succs [bb21]

bb21
  Terminator {
      source_info: SourceInfo(src/value/de.rs:590:5-590:6)
      kind: drop(_3) -> [return: bb22, unwind: bb30]
  }
  preds [bb13, bb18, bb20]
  succs [bb22, bb30]

bb22
  Terminator {
      source_info: SourceInfo(src/value/de.rs:590:5-590:6)
      kind: drop(_1) -> [return: bb23, unwind: bb31]
  }
  preds [bb21]
  succs [bb23, bb31]

bb23
  Terminator {
      source_info: SourceInfo(src/value/de.rs:590:6-590:6)
      kind: return
  }
  preds [bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(src/value/de.rs:584:14-584:15)
      kind: drop(_12) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb14, bb15, bb16]
  succs [bb29]

bb25
  Terminator {
      source_info: SourceInfo(src/value/de.rs:578:43-578:44)
      kind: drop(_11) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb10]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(src/value/de.rs:578:43-578:44)
      kind: drop(_10) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb25]
  succs [bb28]

bb27
  Terminator {
      source_info: SourceInfo(src/value/de.rs:576:40-576:41)
      kind: drop(_9) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb8]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/value/de.rs:580:13-580:14)
      kind: drop(_6) -> [return: bb29, unwind terminate(cleanup)]
  }
  preds [bb6, bb26, bb27]
  succs [bb29]

bb29
  Terminator {
      source_info: SourceInfo(src/value/de.rs:590:5-590:6)
      kind: drop(_3) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb5, bb12, bb17, bb19, bb24, bb28]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/value/de.rs:590:5-590:6)
      kind: drop(_1) -> [return: bb31, unwind terminate(cleanup)]
  }
  preds [bb21, bb29]
  succs [bb31]

bb31
  Terminator {
      source_info: SourceInfo(src/value/de.rs:569:5-590:6)
      kind: resume
  }
  preds [bb22, bb30]
  succs []

