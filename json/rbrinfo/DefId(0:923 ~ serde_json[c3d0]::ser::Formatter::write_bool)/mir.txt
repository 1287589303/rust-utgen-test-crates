bb0
  0: StorageLive(_4)
    SourceInfo(src/ser.rs:1572:13-1572:14)
  1: StorageLive(_5)
    SourceInfo(src/ser.rs:1572:20-1572:25)
  2: _5 = _3
    SourceInfo(src/ser.rs:1572:20-1572:25)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1572:20-1572:25)
      kind: switchInt(move _5) -> [0: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: StorageLive(_6)
    SourceInfo(src/ser.rs:1573:13-1573:29)
  1: StorageLive(_7)
    SourceInfo(src/ser.rs:1573:13-1573:20)
  2: StorageLive(_8)
    SourceInfo(src/ser.rs:1573:13-1573:20)
  3: _8 = const b"true"
    SourceInfo(src/ser.rs:1573:13-1573:20)
  4: _7 = &(*_8)
    SourceInfo(src/ser.rs:1573:13-1573:20)
  5: _6 = move _7 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:1573:13-1573:20)
  6: StorageDead(_7)
    SourceInfo(src/ser.rs:1573:19-1573:20)
  7: AscribeUserType(_6, o, UserTypeProjection { base: UserType(0), projs: [] })
    SourceInfo(src/ser.rs:1573:13-1573:29)
  8: _4 = _6
    SourceInfo(src/ser.rs:1573:13-1573:29)
  9: StorageDead(_8)
    SourceInfo(src/ser.rs:1574:9-1574:10)
  10: StorageDead(_6)
    SourceInfo(src/ser.rs:1574:9-1574:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1572:17-1576:10)
      kind: goto -> bb3
  }
  preds [bb0]
  succs [bb3]

bb2
  0: StorageLive(_9)
    SourceInfo(src/ser.rs:1575:13-1575:30)
  1: StorageLive(_10)
    SourceInfo(src/ser.rs:1575:13-1575:30)
  2: StorageLive(_11)
    SourceInfo(src/ser.rs:1575:13-1575:21)
  3: StorageLive(_12)
    SourceInfo(src/ser.rs:1575:13-1575:21)
  4: _12 = const b"false"
    SourceInfo(src/ser.rs:1575:13-1575:21)
  5: _11 = &(*_12)
    SourceInfo(src/ser.rs:1575:13-1575:21)
  6: _10 = move _11 as &[u8] (PointerCoercion(Unsize))
    SourceInfo(src/ser.rs:1575:13-1575:21)
  7: StorageDead(_11)
    SourceInfo(src/ser.rs:1575:20-1575:21)
  8: AscribeUserType(_10, o, UserTypeProjection { base: UserType(1), projs: [] })
    SourceInfo(src/ser.rs:1575:13-1575:30)
  9: _9 = _10
    SourceInfo(src/ser.rs:1575:13-1575:30)
  10: _4 = &(*_9)
    SourceInfo(src/ser.rs:1575:13-1575:30)
  11: StorageDead(_12)
    SourceInfo(src/ser.rs:1576:9-1576:10)
  12: StorageDead(_10)
    SourceInfo(src/ser.rs:1576:9-1576:10)
  13: StorageDead(_9)
    SourceInfo(src/ser.rs:1576:9-1576:10)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1572:17-1576:10)
      kind: goto -> bb3
  }
  preds [bb0]
  succs [bb3]

bb3
  0: StorageDead(_5)
    SourceInfo(src/ser.rs:1576:9-1576:10)
  1: FakeRead(ForLet(None), _4)
    SourceInfo(src/ser.rs:1572:13-1572:14)
  2: StorageLive(_13)
    SourceInfo(src/ser.rs:1577:9-1577:15)
  3: _13 = &mut (*_2)
    SourceInfo(src/ser.rs:1577:9-1577:15)
  4: StorageLive(_14)
    SourceInfo(src/ser.rs:1577:26-1577:27)
  5: _14 = &(*_4)
    SourceInfo(src/ser.rs:1577:26-1577:27)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1577:9-1577:28)
      kind: _0 = <W as std::io::Write>::write_all(move _13, move _14) -> [return: bb4, unwind: bb5]
  }
  preds [bb1, bb2]
  succs [bb4, bb5]

bb4
  0: StorageDead(_14)
    SourceInfo(src/ser.rs:1577:27-1577:28)
  1: StorageDead(_13)
    SourceInfo(src/ser.rs:1577:27-1577:28)
  2: StorageDead(_4)
    SourceInfo(src/ser.rs:1578:5-1578:6)
  Terminator {
      source_info: SourceInfo(src/ser.rs:1578:6-1578:6)
      kind: return
  }
  preds [bb3]
  succs []

bb5
  Terminator {
      source_info: SourceInfo(src/ser.rs:1568:5-1578:6)
      kind: resume
  }
  preds [bb3]
  succs []

