bb0
  0: PlaceMention(_1)
    SourceInfo(src/ser.rs:648:15-648:19)
  1: StorageLive(_3)
    SourceInfo(src/ser.rs:649:29-649:32)
  2: _3 = &mut (((*_1) as Map).0: &mut ser::Serializer<W, F>)
    SourceInfo(src/ser.rs:649:29-649:32)
  3: StorageLive(_4)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_5)
    SourceInfo(src/ser.rs:650:22-653:40)
  5: StorageLive(_6)
    SourceInfo(src/ser.rs:650:22-652:57)
  6: StorageLive(_7)
    SourceInfo(src/ser.rs:650:22-651:31)
  7: _7 = &mut ((*(*_3)).1: F)
    SourceInfo(src/ser.rs:650:22-651:31)
  8: StorageLive(_8)
    SourceInfo(src/ser.rs:652:41-652:56)
  9: StorageLive(_9)
    SourceInfo(src/ser.rs:652:41-652:56)
  10: _9 = &mut ((*(*_3)).0: W)
    SourceInfo(src/ser.rs:652:41-652:56)
  11: _8 = &mut (*_9)
    SourceInfo(src/ser.rs:652:41-652:56)
  Terminator {
      source_info: SourceInfo(src/ser.rs:650:22-652:57)
      kind: _6 = <F as ser::Formatter>::begin_object_value::<W>(move _7, move _8) -> [return: bb1, unwind: bb30]
  }
  preds []
  succs [bb1, bb30]

bb1
  0: StorageDead(_8)
    SourceInfo(src/ser.rs:652:56-652:57)
  1: StorageDead(_7)
    SourceInfo(src/ser.rs:652:56-652:57)
  Terminator {
      source_info: SourceInfo(src/ser.rs:650:22-653:40)
      kind: _5 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _6, error::Error::io) -> [return: bb2, unwind: bb29]
  }
  preds [bb0]
  succs [bb2, bb29]

bb2
  0: StorageDead(_6)
    SourceInfo(src/ser.rs:653:39-653:40)
  1: PlaceMention(_5)
    SourceInfo(src/ser.rs:650:22-653:40)
  2: _10 = discriminant(_5)
    SourceInfo(src/ser.rs:650:22-653:40)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _10) -> [0: bb4, 1: bb5, otherwise: bb3]
  }
  preds [bb1]
  succs [bb3, bb4, bb5]

bb3
  0: FakeRead(ForMatchedPlace(None), _5)
    SourceInfo(src/ser.rs:650:22-653:40)
  Terminator {
      source_info: SourceInfo(src/ser.rs:650:22-653:40)
      kind: unreachable
  }
  preds [bb2]
  succs []

bb4
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb6, imaginary: bb5]
  }
  preds [bb2]
  succs [bb5, bb6]

bb5
  0: StorageLive(_12)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _12 = move ((_5 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_14)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _14 = move _12
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), error::Error>::Err(move _14)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_14) -> [return: bb7, unwind: bb27]
  }
  preds [bb2, bb4]
  succs [bb7, bb27]

bb6
  0: StorageLive(_11)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _11 = ((_5 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _4 = _11
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_11)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_5) -> [return: bb8, unwind: bb30]
  }
  preds [bb4]
  succs [bb8, bb30]

bb7
  0: StorageDead(_14)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_12) -> [return: bb20, unwind: bb28]
  }
  preds [bb5]
  succs [bb20, bb28]

bb8
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_5)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  3: StorageLive(_15)
    SourceInfo(src/lib.rs:408:9-411:10)
  4: StorageLive(_16)
    SourceInfo(src/ser.rs:654:22-654:49)
  5: StorageLive(_17)
    SourceInfo(src/ser.rs:654:22-654:27)
  6: _17 = &(*_2)
    SourceInfo(src/ser.rs:654:22-654:27)
  7: StorageLive(_18)
    SourceInfo(src/ser.rs:654:38-654:48)
  8: _18 = &mut (*(*_3))
    SourceInfo(src/ser.rs:654:38-654:48)
  Terminator {
      source_info: SourceInfo(src/ser.rs:654:22-654:49)
      kind: _16 = <T as serde::Serialize>::serialize::<&mut ser::Serializer<W, F>>(move _17, move _18) -> [return: bb9, unwind: bb30]
  }
  preds [bb6]
  succs [bb9, bb30]

bb9
  0: StorageDead(_18)
    SourceInfo(src/ser.rs:654:48-654:49)
  1: StorageDead(_17)
    SourceInfo(src/ser.rs:654:48-654:49)
  2: PlaceMention(_16)
    SourceInfo(src/ser.rs:654:22-654:49)
  3: _19 = discriminant(_16)
    SourceInfo(src/ser.rs:654:22-654:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _19) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _16)
    SourceInfo(src/ser.rs:654:22-654:49)
  Terminator {
      source_info: SourceInfo(src/ser.rs:654:22-654:49)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_21)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _21 = move ((_16 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_23)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _23 = move _21
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(), error::Error>::Err(move _23)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_23) -> [return: bb14, unwind: bb25]
  }
  preds [bb9, bb11]
  succs [bb14, bb25]

bb13
  0: StorageLive(_20)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _20 = ((_16 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _15 = _20
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_20)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_16) -> [return: bb15, unwind: bb30]
  }
  preds [bb11]
  succs [bb15, bb30]

bb14
  0: StorageDead(_23)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_21) -> [return: bb18, unwind: bb26]
  }
  preds [bb12]
  succs [bb18, bb26]

bb15
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_15)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageLive(_24)
    SourceInfo(src/ser.rs:655:17-656:55)
  3: StorageLive(_25)
    SourceInfo(src/ser.rs:655:17-655:30)
  4: _25 = &mut ((*(*_3)).1: F)
    SourceInfo(src/ser.rs:655:17-655:30)
  5: StorageLive(_26)
    SourceInfo(src/ser.rs:656:39-656:54)
  6: StorageLive(_27)
    SourceInfo(src/ser.rs:656:39-656:54)
  7: _27 = &mut ((*(*_3)).0: W)
    SourceInfo(src/ser.rs:656:39-656:54)
  8: _26 = &mut (*_27)
    SourceInfo(src/ser.rs:656:39-656:54)
  Terminator {
      source_info: SourceInfo(src/ser.rs:655:17-656:55)
      kind: _24 = <F as ser::Formatter>::end_object_value::<W>(move _25, move _26) -> [return: bb16, unwind: bb30]
  }
  preds [bb13]
  succs [bb16, bb30]

bb16
  0: StorageDead(_26)
    SourceInfo(src/ser.rs:656:54-656:55)
  1: StorageDead(_25)
    SourceInfo(src/ser.rs:656:54-656:55)
  Terminator {
      source_info: SourceInfo(src/ser.rs:655:17-657:40)
      kind: _0 = core::result::Result::<(), std::io::Error>::map_err::<error::Error, fn(std::io::Error) -> error::Error {error::Error::io}>(move _24, error::Error::io) -> [return: bb17, unwind: bb24]
  }
  preds [bb15]
  succs [bb17, bb24]

bb17
  0: StorageDead(_24)
    SourceInfo(src/ser.rs:657:39-657:40)
  1: StorageDead(_27)
    SourceInfo(src/ser.rs:658:13-658:14)
  2: StorageDead(_3)
    SourceInfo(src/ser.rs:658:13-658:14)
  Terminator {
      source_info: SourceInfo(src/ser.rs:658:13-658:14)
      kind: goto -> bb23
  }
  preds [bb16]
  succs [bb23]

bb18
  0: StorageDead(_21)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_16) -> [return: bb19, unwind: bb30]
  }
  preds [bb14]
  succs [bb19, bb30]

bb19
  0: StorageDead(_16)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_15)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb18]
  succs [bb22]

bb20
  0: StorageDead(_12)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_5) -> [return: bb21, unwind: bb30]
  }
  preds [bb7]
  succs [bb21, bb30]

bb21
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_5)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageDead(_4)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb22
  }
  preds [bb20]
  succs [bb22]

bb22
  0: StorageDead(_3)
    SourceInfo(src/ser.rs:658:13-658:14)
  Terminator {
      source_info: SourceInfo(src/ser.rs:664:6-664:6)
      kind: goto -> bb23
  }
  preds [bb19, bb21]
  succs [bb23]

bb23
  Terminator {
      source_info: SourceInfo(src/ser.rs:664:6-664:6)
      kind: return
  }
  preds [bb17, bb22]
  succs []

bb24
  Terminator {
      source_info: SourceInfo(src/ser.rs:657:39-657:40)
      kind: drop(_24) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb16]
  succs [bb30]

bb25
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_21) -> [return: bb26, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb26]

bb26
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_16) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb14, bb25]
  succs [bb30]

bb27
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_12) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb5]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_5) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb7, bb27]
  succs [bb30]

bb29
  Terminator {
      source_info: SourceInfo(src/ser.rs:653:39-653:40)
      kind: drop(_6) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb1]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/ser.rs:644:5-664:6)
      kind: resume
  }
  preds [bb0, bb6, bb8, bb13, bb15, bb18, bb20, bb24, bb26, bb28, bb29]
  succs []

