bb0
  0: PlaceMention(_1)
    SourceInfo(src/value/partial_eq.rs:13:11-13:16)
  1: _3 = discriminant((*_1))
    SourceInfo(src/value/partial_eq.rs:13:11-13:16)
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:13:5-13:16)
      kind: switchInt(move _3) -> [2: bb2, otherwise: bb1]
  }
  preds []
  succs [bb1, bb2]

bb1
  0: _0 = const false
    SourceInfo(src/value/partial_eq.rs:15:14-15:19)
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:15:14-15:19)
      kind: goto -> bb6
  }
  preds [bb0, bb2]
  succs [bb6]

bb2
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:14:9-14:25)
      kind: falseEdge -> [real: bb3, imaginary: bb1]
  }
  preds [bb0]
  succs [bb1, bb3]

bb3
  0: StorageLive(_4)
    SourceInfo(src/value/partial_eq.rs:14:23-14:24)
  1: _4 = &(((*_1) as Number).0: number::Number)
    SourceInfo(src/value/partial_eq.rs:14:23-14:24)
  2: StorageLive(_5)
    SourceInfo(src/value/partial_eq.rs:14:29-14:39)
  3: StorageLive(_6)
    SourceInfo(src/value/partial_eq.rs:14:29-14:39)
  4: StorageLive(_7)
    SourceInfo(src/value/partial_eq.rs:14:29-14:30)
  5: _7 = &(*_4)
    SourceInfo(src/value/partial_eq.rs:14:29-14:30)
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:14:29-14:39)
      kind: _6 = number::Number::as_f32(move _7) -> [return: bb4, unwind: bb7]
  }
  preds [bb2]
  succs [bb4, bb7]

bb4
  0: _5 = &_6
    SourceInfo(src/value/partial_eq.rs:14:29-14:39)
  1: StorageDead(_7)
    SourceInfo(src/value/partial_eq.rs:14:38-14:39)
  2: StorageLive(_8)
    SourceInfo(src/value/partial_eq.rs:14:43-14:54)
  3: StorageLive(_9)
    SourceInfo(src/value/partial_eq.rs:14:43-14:54)
  4: StorageLive(_10)
    SourceInfo(src/value/partial_eq.rs:14:48-14:53)
  5: _10 = _2
    SourceInfo(src/value/partial_eq.rs:14:48-14:53)
  6: _9 = core::option::Option::<f32>::Some(move _10)
    SourceInfo(src/value/partial_eq.rs:14:43-14:54)
  7: _8 = &_9
    SourceInfo(src/value/partial_eq.rs:14:43-14:54)
  8: StorageDead(_10)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:14:29-14:54)
      kind: _0 = <core::option::Option<f32> as core::cmp::PartialEq>::eq(move _5, move _8) -> [return: bb5, unwind: bb7]
  }
  preds [bb3]
  succs [bb5, bb7]

bb5
  0: StorageDead(_8)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  1: StorageDead(_5)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  2: StorageDead(_9)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  3: StorageDead(_6)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  4: StorageDead(_4)
    SourceInfo(src/value/partial_eq.rs:14:53-14:54)
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:14:53-14:54)
      kind: goto -> bb6
  }
  preds [bb4]
  succs [bb6]

bb6
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:17:2-17:2)
      kind: return
  }
  preds [bb1, bb5]
  succs []

bb7
  Terminator {
      source_info: SourceInfo(src/value/partial_eq.rs:12:1-17:2)
      kind: resume
  }
  preds [bb3, bb4]
  succs []

