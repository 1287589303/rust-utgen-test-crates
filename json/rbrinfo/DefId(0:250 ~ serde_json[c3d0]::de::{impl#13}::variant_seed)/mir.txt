bb0
  0: StorageLive(_3)
    SourceInfo(src/de.rs:2053:13-2053:16)
  1: StorageLive(_4)
    SourceInfo(src/de.rs:2053:24-2053:55)
  2: StorageLive(_5)
    SourceInfo(src/de.rs:2053:24-2053:28)
  3: _5 = move _2
    SourceInfo(src/de.rs:2053:24-2053:28)
  4: StorageLive(_6)
    SourceInfo(src/de.rs:2053:41-2053:54)
  5: _6 = &mut (*(_1.0: &mut de::Deserializer<R>))
    SourceInfo(src/de.rs:2053:41-2053:54)
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:24-2053:55)
      kind: _4 = <V as serde::de::DeserializeSeed<'_>>::deserialize::<&mut de::Deserializer<R>>(move _5, move _6) -> [return: bb1, unwind: bb31]
  }
  preds []
  succs [bb1, bb31]

bb1
  0: StorageDead(_6)
    SourceInfo(src/de.rs:2053:54-2053:55)
  1: StorageDead(_5)
    SourceInfo(src/de.rs:2053:54-2053:55)
  2: PlaceMention(_4)
    SourceInfo(src/de.rs:2053:24-2053:55)
  3: _7 = discriminant(_4)
    SourceInfo(src/de.rs:2053:24-2053:55)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _7) -> [0: bb3, 1: bb4, otherwise: bb2]
  }
  preds [bb0]
  succs [bb2, bb3, bb4]

bb2
  0: FakeRead(ForMatchedPlace(None), _4)
    SourceInfo(src/de.rs:2053:24-2053:55)
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:24-2053:55)
      kind: unreachable
  }
  preds [bb1]
  succs []

bb3
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb5, imaginary: bb4]
  }
  preds [bb1]
  succs [bb4, bb5]

bb4
  0: StorageLive(_9)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _9 = move ((_4 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_11)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _11 = move _9
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(<V as serde::de::DeserializeSeed<'_>>::Value, de::VariantAccess<'_, R>), error::Error>::Err(move _11)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_11) -> [return: bb7, unwind: bb29]
  }
  preds [bb1, bb3]
  succs [bb7, bb29]

bb5
  0: StorageLive(_8)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _8 = move ((_4 as Ok).0: <V as serde::de::DeserializeSeed<'_>>::Value)
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _3 = move _8
    SourceInfo(src/lib.rs:409:46-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:48-409:49)
      kind: drop(_8) -> [return: bb6, unwind: bb30]
  }
  preds [bb3]
  succs [bb6, bb30]

bb6
  0: StorageDead(_8)
    SourceInfo(src/lib.rs:409:48-409:49)
  1: FakeRead(ForLet(None), _3)
    SourceInfo(src/de.rs:2053:13-2053:16)
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:56-2053:57)
      kind: drop(_4) -> [return: bb8, unwind: bb28]
  }
  preds [bb5]
  succs [bb8, bb28]

bb7
  0: StorageDead(_11)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_9) -> [return: bb21, unwind: bb30]
  }
  preds [bb4]
  succs [bb21, bb30]

bb8
  0: StorageDead(_4)
    SourceInfo(src/de.rs:2053:56-2053:57)
  1: StorageLive(_12)
    SourceInfo(src/lib.rs:408:9-411:10)
  2: StorageLive(_13)
    SourceInfo(src/de.rs:2054:14-2054:42)
  3: StorageLive(_14)
    SourceInfo(src/de.rs:2054:14-2054:21)
  4: _14 = &mut (*(_1.0: &mut de::Deserializer<R>))
    SourceInfo(src/de.rs:2054:14-2054:21)
  Terminator {
      source_info: SourceInfo(src/de.rs:2054:14-2054:42)
      kind: _13 = de::Deserializer::<R>::parse_object_colon(move _14) -> [return: bb9, unwind: bb28]
  }
  preds [bb6]
  succs [bb9, bb28]

bb9
  0: StorageDead(_14)
    SourceInfo(src/de.rs:2054:41-2054:42)
  1: PlaceMention(_13)
    SourceInfo(src/de.rs:2054:14-2054:42)
  2: _15 = discriminant(_13)
    SourceInfo(src/de.rs:2054:14-2054:42)
  Terminator {
      source_info: SourceInfo(src/lib.rs:408:9-408:9)
      kind: switchInt(move _15) -> [0: bb11, 1: bb12, otherwise: bb10]
  }
  preds [bb8]
  succs [bb10, bb11, bb12]

bb10
  0: FakeRead(ForMatchedPlace(None), _13)
    SourceInfo(src/de.rs:2054:14-2054:42)
  Terminator {
      source_info: SourceInfo(src/de.rs:2054:14-2054:42)
      kind: unreachable
  }
  preds [bb9]
  succs []

bb11
  Terminator {
      source_info: SourceInfo(src/lib.rs:409:13-409:42)
      kind: falseEdge -> [real: bb13, imaginary: bb12]
  }
  preds [bb9]
  succs [bb12, bb13]

bb12
  0: StorageLive(_17)
    SourceInfo(src/lib.rs:410:39-410:42)
  1: _17 = move ((_13 as Err).0: error::Error)
    SourceInfo(src/lib.rs:410:39-410:42)
  2: StorageLive(_19)
    SourceInfo(src/lib.rs:410:80-410:83)
  3: _19 = move _17
    SourceInfo(src/lib.rs:410:80-410:83)
  4: _0 = core::result::Result::<(<V as serde::de::DeserializeSeed<'_>>::Value, de::VariantAccess<'_, R>), error::Error>::Err(move _19)
    SourceInfo(src/lib.rs:410:54-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_19) -> [return: bb14, unwind: bb26]
  }
  preds [bb9, bb11]
  succs [bb14, bb26]

bb13
  0: StorageLive(_16)
    SourceInfo(src/lib.rs:409:38-409:41)
  1: _16 = ((_13 as Ok).0: ())
    SourceInfo(src/lib.rs:409:38-409:41)
  2: _12 = _16
    SourceInfo(src/lib.rs:409:46-409:49)
  3: StorageDead(_16)
    SourceInfo(src/lib.rs:409:48-409:49)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_13) -> [return: bb15, unwind: bb28]
  }
  preds [bb11]
  succs [bb15, bb28]

bb14
  0: StorageDead(_19)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_17) -> [return: bb19, unwind: bb27]
  }
  preds [bb12]
  succs [bb19, bb27]

bb15
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_12)
    SourceInfo(src/lib.rs:411:9-411:10)
  2: StorageLive(_20)
    SourceInfo(src/de.rs:2055:12-2055:23)
  3: StorageLive(_21)
    SourceInfo(src/de.rs:2055:13-2055:16)
  4: _21 = move _3
    SourceInfo(src/de.rs:2055:13-2055:16)
  5: StorageLive(_22)
    SourceInfo(src/de.rs:2055:18-2055:22)
  6: _22 = move _1
    SourceInfo(src/de.rs:2055:18-2055:22)
  7: _20 = (move _21, move _22)
    SourceInfo(src/de.rs:2055:12-2055:23)
  8: StorageDead(_22)
    SourceInfo(src/de.rs:2055:22-2055:23)
  Terminator {
      source_info: SourceInfo(src/de.rs:2055:22-2055:23)
      kind: drop(_21) -> [return: bb16, unwind: bb25]
  }
  preds [bb13]
  succs [bb16, bb25]

bb16
  0: StorageDead(_21)
    SourceInfo(src/de.rs:2055:22-2055:23)
  1: _0 = core::result::Result::<(<V as serde::de::DeserializeSeed<'_>>::Value, de::VariantAccess<'_, R>), error::Error>::Ok(move _20)
    SourceInfo(src/de.rs:2055:9-2055:24)
  Terminator {
      source_info: SourceInfo(src/de.rs:2055:23-2055:24)
      kind: drop(_20) -> [return: bb17, unwind: bb28]
  }
  preds [bb15]
  succs [bb17, bb28]

bb17
  0: StorageDead(_20)
    SourceInfo(src/de.rs:2055:23-2055:24)
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_3) -> [return: bb18, unwind: bb32]
  }
  preds [bb16]
  succs [bb18, bb32]

bb18
  0: StorageDead(_3)
    SourceInfo(src/de.rs:2056:5-2056:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_2) -> [return: bb24, unwind: bb33]
  }
  preds [bb17]
  succs [bb24, bb33]

bb19
  0: StorageDead(_17)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_13) -> [return: bb20, unwind: bb28]
  }
  preds [bb14]
  succs [bb20, bb28]

bb20
  0: StorageDead(_13)
    SourceInfo(src/lib.rs:411:9-411:10)
  1: StorageDead(_12)
    SourceInfo(src/lib.rs:411:9-411:10)
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_3) -> [return: bb23, unwind: bb32]
  }
  preds [bb19]
  succs [bb23, bb32]

bb21
  0: StorageDead(_9)
    SourceInfo(src/lib.rs:410:83-410:84)
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:56-2053:57)
      kind: drop(_4) -> [return: bb22, unwind: bb32]
  }
  preds [bb7]
  succs [bb22, bb32]

bb22
  0: StorageDead(_4)
    SourceInfo(src/de.rs:2053:56-2053:57)
  Terminator {
      source_info: SourceInfo(src/lib.rs:1:1-1:1)
      kind: goto -> bb23
  }
  preds [bb21]
  succs [bb23]

bb23
  0: StorageDead(_3)
    SourceInfo(src/de.rs:2056:5-2056:6)
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_2) -> [return: bb24, unwind: bb33]
  }
  preds [bb20, bb22]
  succs [bb24, bb33]

bb24
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:6-2056:6)
      kind: return
  }
  preds [bb18, bb23]
  succs []

bb25
  Terminator {
      source_info: SourceInfo(src/de.rs:2055:23-2055:24)
      kind: drop(_20) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb15]
  succs [bb28]

bb26
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_17) -> [return: bb27, unwind terminate(cleanup)]
  }
  preds [bb12]
  succs [bb27]

bb27
  Terminator {
      source_info: SourceInfo(src/lib.rs:411:9-411:10)
      kind: drop(_13) -> [return: bb28, unwind terminate(cleanup)]
  }
  preds [bb14, bb26]
  succs [bb28]

bb28
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_3) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb6, bb8, bb13, bb16, bb19, bb25, bb27]
  succs [bb32]

bb29
  Terminator {
      source_info: SourceInfo(src/lib.rs:410:83-410:84)
      kind: drop(_9) -> [return: bb30, unwind terminate(cleanup)]
  }
  preds [bb4]
  succs [bb30]

bb30
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:56-2053:57)
      kind: drop(_4) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb5, bb7, bb29]
  succs [bb32]

bb31
  Terminator {
      source_info: SourceInfo(src/de.rs:2053:54-2053:55)
      kind: drop(_5) -> [return: bb32, unwind terminate(cleanup)]
  }
  preds [bb0]
  succs [bb32]

bb32
  Terminator {
      source_info: SourceInfo(src/de.rs:2056:5-2056:6)
      kind: drop(_2) -> [return: bb33, unwind terminate(cleanup)]
  }
  preds [bb17, bb20, bb21, bb28, bb30, bb31]
  succs [bb33]

bb33
  Terminator {
      source_info: SourceInfo(src/de.rs:2049:5-2056:6)
      kind: resume
  }
  preds [bb18, bb23, bb32]
  succs []

