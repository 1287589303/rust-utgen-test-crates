[
  {
    "uses": [],
    "has_test_mod": false,
    "common": [],
    "chain_tests": [
      {
        "attrs": [
          "#[should_panic]"
        ],
        "prefix": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let _ = config.use_idna_2008_rules(true);",
          "}"
        ],
        "oracle": [
          "    assert!(std::panic::catch_unwind(|| {",
          "    let config = Config {",
          "    use_std3_ascii_rules: false,",
          "    transitional_processing: false,",
          "    verify_dns_length: false,",
          "    check_hyphens: false,",
          "    };",
          "    let _ = config.use_idna_2008_rules(true);",
          "    }).is_err());"
        ],
        "code": [
          "{",
          "    let config = Config {",
          "        use_std3_ascii_rules: false,",
          "        transitional_processing: false,",
          "        verify_dns_length: false,",
          "        check_hyphens: false,",
          "    };",
          "    let _ = config.use_idna_2008_rules(true);",
          "    assert!(std::panic::catch_unwind(|| {",
          "    let config = Config {",
          "    use_std3_ascii_rules: false,",
          "    transitional_processing: false,",
          "    verify_dns_length: false,",
          "    check_hyphens: false,",
          "    };",
          "    let _ = config.use_idna_2008_rules(true);",
          "    }).is_err());",
          "}"
        ],
        "can_compile": false,
        "repaired": false
      }
    ]
  }
]