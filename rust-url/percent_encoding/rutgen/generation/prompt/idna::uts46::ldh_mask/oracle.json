{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// idna/src/uts46.rs\n// crate name is idna\nuse crate::punycode::Decoder;\nuse crate::punycode::InternalCaller;\nuse alloc::borrow::Cow;\nuse alloc::string::String;\nuse core::fmt::Write;\nuse idna_adapter::*;\nuse smallvec::SmallVec;\nuse utf8_iter::Utf8CharsEx;\nconst PUNYCODE_DECODE_MAX_INPUT_LENGTH: usize = 2000;\nconst PUNYCODE_ENCODE_MAX_INPUT_LENGTH: usize = 1000;\nconst UPPER_CASE_MASK: u128 = upper_case_mask();\nconst GLYPHLESS_MASK: u128 = glyphless_mask();\nconst DOT_MASK: u128 = 1 << b'.';\nconst PUNYCODE_PREFIX: u32 = ((b'-' as u32) << 24) | ((b'-' as u32) << 16)\n    | ((b'N' as u32) << 8) | b'X' as u32;\nconst PUNYCODE_PREFIX_MASK: u32 = (0xFF << 24) | (0xFF << 16) | (0xDF << 8) | 0xDF;\nconst fn ldh_mask() -> u128 {\n    let mut accu = 0u128;\n    let mut b = 0u8;\n    while b < 128 {\n        if !((b >= b'a' && b <= b'z') || (b >= b'0' && b <= b'9') || b == b'-'\n            || b == b'.')\n        {\n            accu |= 1u128 << b;\n        }\n        b += 1;\n    }\n    accu\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Computes the ASCII deny list for STD3 ASCII rules.\n 91 const fn ldh_mask() -> u128 {\n 92     let mut accu = 0u128;\n 93     let mut b = 0u8;\n 94     while b < 128 {\n 95         if !((b >= b'a' && b <= b'z') || (b >= b'0' && b <= b'9') || b == b'-' || b == b'.') {\n 96             accu |= 1u128 << b;\n 97         }\n 98         b += 1;\n 99     }\n100     accu\n101 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}