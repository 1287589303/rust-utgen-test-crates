{
  "system_pt": "As a software testing expert, please generate accurate test oracles code based on the provided information. Follow these guidelines:\n1. Generate executable test oracle codes in plain text format, one per line. Do not output complete test functions, avoid additional explanations, and do not use Markdown.\n2. Combine the given function under test, context, relevant documentation, preconditions, expected return values or types, test input conditions or ranges, and existing test function prefixes to infer and generate corresponding test oracles code.\n3. Only generate necessary test oracles to ensure comprehensive validation.\n",
  "static_pt": "The context for the focal function is as follows:\n// idna/src/deprecated.rs\n// crate name is idna\nuse alloc::borrow::Cow;\nuse alloc::string::String;\nuse crate::uts46::*;\nuse crate::Errors;\n#[derive(Clone, Copy)]\n#[must_use]\n#[deprecated]\npub struct Config {\n    use_std3_ascii_rules: bool,\n    transitional_processing: bool,\n    verify_dns_length: bool,\n    check_hyphens: bool,\n}\nimpl Config {\n    #[inline]\n    pub fn use_std3_ascii_rules(mut self, value: bool) -> Self {\n        self.use_std3_ascii_rules = value;\n        self\n    }\n    #[inline]\n    pub fn transitional_processing(mut self, value: bool) -> Self {\n        self.transitional_processing = value;\n        self\n    }\n    #[inline]\n    pub fn verify_dns_length(mut self, value: bool) -> Self {\n        self.verify_dns_length = value;\n        self\n    }\n    #[inline]\n    pub fn check_hyphens(mut self, value: bool) -> Self {\n        self.check_hyphens = value;\n        self\n    }\n    #[inline]\n    #[allow(unused_mut)]\n    pub fn use_idna_2008_rules(mut self, value: bool) -> Self {\n        assert!(! value, \"IDNA 2008 rules are no longer supported\");\n        self\n    }\n    fn deny_list(&self) -> AsciiDenyList {}\n    fn hyphens(&self) -> Hyphens {}\n    pub fn to_ascii(self, domain: &str) -> Result<String, Errors> {}\n    pub fn to_unicode(self, domain: &str) -> (String, Result<(), Errors>) {}\n}\n\nThe function to be tested is presented with each line formatted as 'line number + code':\n/// Whether to enforce STD3 or WHATWG URL Standard ASCII deny list.\n///\n/// `true` for STD3, `false` for no deny list.\n///\n/// Note that `true` rejects pseudo-hosts used by various TXT record-based protocols.\n162 pub fn use_std3_ascii_rules(mut self, value: bool) -> Self {\n163     self.use_std3_ascii_rules = value;\n164     self\n165 }\n\nThe path conditions that the generated test functions should satisfy are as follows:\n"
}