[
    BasicBlockData {
        statements: [
            StorageLive(_3),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = const 0_usize,
            _7 = Len(((*_1).0: [u32; 4])),
            _8 = Lt(_6, _7),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:71:13: 71:25 (#0),
                    scope: scope[0],
                },
                kind: assert(move _8, "index out of bounds: the length is {} but the index is {}", move _7, _6) -> [success: bb1, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = ((*_1).0: [u32; 4])[_6],
            StorageLive(_9),
            StorageLive(_10),
            _10 = const 0_usize,
            _11 = Len((_2.0: [u32; 4])),
            _12 = Lt(_10, _11),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:71:28: 71:41 (#0),
                    scope: scope[0],
                },
                kind: assert(move _12, "index out of bounds: the length is {} but the index is {}", move _11, _10) -> [success: bb2, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _9 = (_2.0: [u32; 4])[_10],
            _4 = BitOr(move _5, move _9),
            StorageDead(_9),
            StorageDead(_5),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = const 1_usize,
            _16 = Len(((*_1).0: [u32; 4])),
            _17 = Lt(_15, _16),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:72:13: 72:25 (#0),
                    scope: scope[0],
                },
                kind: assert(move _17, "index out of bounds: the length is {} but the index is {}", move _16, _15) -> [success: bb3, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = ((*_1).0: [u32; 4])[_15],
            StorageLive(_18),
            StorageLive(_19),
            _19 = const 1_usize,
            _20 = Len((_2.0: [u32; 4])),
            _21 = Lt(_19, _20),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:72:28: 72:41 (#0),
                    scope: scope[0],
                },
                kind: assert(move _21, "index out of bounds: the length is {} but the index is {}", move _20, _19) -> [success: bb4, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _18 = (_2.0: [u32; 4])[_19],
            _13 = BitOr(move _14, move _18),
            StorageDead(_18),
            StorageDead(_14),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = const 2_usize,
            _25 = Len(((*_1).0: [u32; 4])),
            _26 = Lt(_24, _25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:73:13: 73:25 (#0),
                    scope: scope[0],
                },
                kind: assert(move _26, "index out of bounds: the length is {} but the index is {}", move _25, _24) -> [success: bb5, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _23 = ((*_1).0: [u32; 4])[_24],
            StorageLive(_27),
            StorageLive(_28),
            _28 = const 2_usize,
            _29 = Len((_2.0: [u32; 4])),
            _30 = Lt(_28, _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:73:28: 73:41 (#0),
                    scope: scope[0],
                },
                kind: assert(move _30, "index out of bounds: the length is {} but the index is {}", move _29, _28) -> [success: bb6, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _27 = (_2.0: [u32; 4])[_28],
            _22 = BitOr(move _23, move _27),
            StorageDead(_27),
            StorageDead(_23),
            StorageLive(_31),
            StorageLive(_32),
            StorageLive(_33),
            _33 = const 3_usize,
            _34 = Len(((*_1).0: [u32; 4])),
            _35 = Lt(_33, _34),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:74:13: 74:25 (#0),
                    scope: scope[0],
                },
                kind: assert(move _35, "index out of bounds: the length is {} but the index is {}", move _34, _33) -> [success: bb7, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _32 = ((*_1).0: [u32; 4])[_33],
            StorageLive(_36),
            StorageLive(_37),
            _37 = const 3_usize,
            _38 = Len((_2.0: [u32; 4])),
            _39 = Lt(_37, _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:74:28: 74:41 (#0),
                    scope: scope[0],
                },
                kind: assert(move _39, "index out of bounds: the length is {} but the index is {}", move _38, _37) -> [success: bb8, unwind: bb9],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _36 = (_2.0: [u32; 4])[_37],
            _31 = BitOr(move _32, move _36),
            StorageDead(_36),
            StorageDead(_32),
            _3 = [move _4, move _13, move _22, move _31],
            StorageDead(_31),
            StorageDead(_22),
            StorageDead(_13),
            StorageDead(_4),
            FakeRead(ForLet(None), _3),
            StorageDead(_37),
            StorageDead(_33),
            StorageDead(_28),
            StorageDead(_24),
            StorageDead(_19),
            StorageDead(_15),
            StorageDead(_10),
            StorageDead(_6),
            StorageLive(_40),
            _40 = _3,
            _0 = ascii_set::AsciiSet { mask: move _40 },
            StorageDead(_40),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:77:6: 77:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/ascii_set.rs:69:5: 77:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: ascii_set::AsciiSet,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:69:47: 69:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} ascii_set::AsciiSet,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:69:24: 69:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            percent_encoding/src/ascii_set.rs:69:38: 69:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/ascii_set.rs:69:31: 69:36 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/ascii_set.rs:69:31: 69:36 (#0),
                    },
                ),
            ),
        ),
        ty: ascii_set::AsciiSet,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:69:31: 69:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/ascii_set.rs:70:20: 75:10 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/ascii_set.rs:70:13: 70:17 (#0),
                    },
                ),
            ),
        ),
        ty: [u32; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:70:13: 70:17 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:13: 71:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:13: 71:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:23: 71:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:13: 71:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:13: 71:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:28: 71:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:39: 71:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:28: 71:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:71:28: 71:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:13: 72:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:13: 72:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:23: 72:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:13: 72:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:13: 72:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:28: 72:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:39: 72:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:28: 72:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:72:28: 72:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:13: 73:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:13: 73:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:23: 73:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:13: 73:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:13: 73:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:28: 73:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:39: 73:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:28: 73:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:73:28: 73:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:13: 74:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:13: 74:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:23: 74:24 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:13: 74:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:13: 74:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: u32,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:28: 74:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:39: 74:40 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:28: 74:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:74:28: 74:41 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: [u32; 4_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/ascii_set.rs:76:20: 76:24 (#0),
            scope: scope[0],
        },
    },
]