[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &((*_1).0: core::slice::Iter<'_, u8>),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:274:21: 274:37 (#0),
                    scope: scope[0],
                },
                kind: _2 = <core::slice::Iter<'_, u8> as core::iter::ExactSizeIterator>::len(move _3) -> [return: bb1, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            FakeRead(ForLet(None), _2),
            StorageLive(_4),
            StorageLive(_5),
            StorageLive(_6),
            _6 = _2,
            _7 = AddWithOverflow(_6, const 2_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:275:10: 275:21 (#0),
                    scope: scope[1],
                },
                kind: assert(!move (_7.1: bool), "attempt to compute `{} + {}`, which would overflow", move _6, const 2_usize) -> [success: bb2, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _5 = move (_7.0: usize),
            StorageDead(_6),
            _8 = Eq(const 3_usize, const 0_usize),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:275:10: 275:25 (#0),
                    scope: scope[1],
                },
                kind: assert(!move _8, "attempt to divide `{}` by zero", _5) -> [success: bb3, unwind: bb4],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _4 = Div(move _5, const 3_usize),
            StorageDead(_5),
            StorageLive(_9),
            StorageLive(_10),
            _10 = _2,
            _9 = core::option::Option::<usize>::Some(move _10),
            StorageDead(_10),
            _0 = (move _4, move _9),
            StorageDead(_9),
            StorageDead(_4),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:276:6: 276:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:273:5: 276:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, core::option::Option<usize>),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:273:28: 273:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefImm,
                ),
            ),
        ),
        ty: &'{erased} PercentDecode<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:273:18: 273:23 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/lib.rs:274:21: 274:37 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:274:13: 274:18 (#0),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:274:13: 274:18 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:274:21: 274:31 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:275:9: 275:39 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:10: 275:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:275:9: 275:39 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:10: 275:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:275:9: 275:39 (#0),
                },
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:11: 275:16 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:10: 275:21 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:10: 275:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:275:9: 275:39 (#0),
                },
            ),
        ),
        ty: core::option::Option<usize>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:27: 275:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:275:32: 275:37 (#0),
            scope: scope[0],
        },
    },
]