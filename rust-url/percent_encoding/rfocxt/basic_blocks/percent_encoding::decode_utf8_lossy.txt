[
    BasicBlockData {
        statements: [
            PlaceMention(_1),
            _2 = discriminant(_1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:341:5: 341:16 (#0),
                    scope: scope[0],
                },
                kind: switchInt(move _2) -> [0: bb2, 1: bb3, otherwise: bb1],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _1),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:341:11: 341:16 (#0),
                    scope: scope[0],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:342:9: 342:29 (#0),
                    scope: scope[0],
                },
                kind: falseEdge -> [real: bb4, imaginary: bb3],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = move ((_1 as Owned).0: _::vec::Vec<u8>),
            StorageLive(_6),
            StorageLive(_7),
            StorageLive(_8),
            StorageLive(_9),
            StorageLive(_10),
            _10 = &_5,
            _9 = &(*_10),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:344:43: 344:49 (#0),
                    scope: scope[2],
                },
                kind: _8 = <_::vec::Vec<u8> as core::ops::Deref>::deref(move _9) -> [return: bb6, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_3),
            _3 = ((_1 as Borrowed).0: &[u8]),
            StorageLive(_4),
            _4 = &(*_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:342:33: 342:63 (#0),
                    scope: scope[1],
                },
                kind: _0 = _::string::String::from_utf8_lossy(move _4) -> [return: bb5, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_4),
            StorageDead(_3),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:342:62: 342:63 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _7 = &(*_8),
            StorageDead(_9),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:344:19: 344:50 (#0),
                    scope: scope[2],
                },
                kind: _6 = _::string::String::from_utf8_lossy(move _7) -> [return: bb7, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            PlaceMention(_6),
            _11 = discriminant(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:344:13: 344:50 (#0),
                    scope: scope[2],
                },
                kind: switchInt(move _11) -> [0: bb9, 1: bb10, otherwise: bb8],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:344:19: 344:50 (#0),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:345:17: 345:36 (#0),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb11, imaginary: bb10],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_28),
            _28 = move ((_6 as Owned).0: _::string::String),
            StorageLive(_29),
            _29 = move _28,
            _0 = _::borrow::Cow::<'_, str>::Owned(move _29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:361:46: 361:47 (#0),
                    scope: scope[5],
                },
                kind: drop(_29) -> [return: bb21, unwind: bb28],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_12),
            _12 = ((_6 as Borrowed).0: &str),
            StorageLive(_13),
            StorageLive(_14),
            StorageLive(_15),
            _15 = &(*_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:353:49: 353:64 (#0),
                    scope: scope[3],
                },
                kind: _14 = core::str::<impl str>::as_bytes(move _15) -> [return: bb12, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _13 = &raw const (*_14),
            StorageDead(_15),
            FakeRead(ForLet(None), _13),
            AscribeUserType(_13, o, UserTypeProjection { base: UserType(1), projs: [] }),
            StorageDead(_14),
            StorageLive(_16),
            StorageLive(_17),
            _17 = const true,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#15),
                    scope: scope[4],
                },
                kind: switchInt(move _17) -> [0: bb17, otherwise: bb13],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_18),
            StorageLive(_19),
            StorageLive(_20),
            _20 = _13,
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &_5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:354:48: 354:54 (#0),
                    scope: scope[4],
                },
                kind: _23 = <_::vec::Vec<u8> as core::ops::Deref>::deref(move _24) -> [return: bb14, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_24),
            _22 = &(*_23),
            _21 = &raw const (*_22),
            _19 = Eq(move _20, move _21),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:354:35: 354:69 (#0),
                    scope: scope[4],
                },
                kind: switchInt(move _19) -> [0: bb16, otherwise: bb15],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_23),
            StorageDead(_22),
            _18 = const (),
            StorageDead(_19),
            StorageDead(_18),
            _16 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#14),
                    scope: scope[4],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_21),
            StorageDead(_20),
            StorageDead(_23),
            StorageDead(_22),
            StorageLive(_25),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#16),
                    scope: scope[4],
                },
                kind: _25 = core::panicking::panic(const "assertion failed: raw_utf8 == &*bytes as *const [u8]") -> bb30,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _16 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#14),
                    scope: scope[4],
                },
                kind: goto -> bb18,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
            StorageDead(_16),
            StorageLive(_26),
            StorageLive(_27),
            _27 = move _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:359:41: 359:75 (#0),
                    scope: scope[4],
                },
                kind: _26 = _::string::String::from_utf8_unchecked(move _27) -> [return: bb19, unwind: bb29],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_27),
            _0 = _::borrow::Cow::<'_, str>::Owned(move _26),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:359:77: 359:78 (#0),
                    scope: scope[4],
                },
                kind: drop(_26) -> [return: bb20, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_26),
            StorageDead(_13),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:360:17: 360:18 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_29),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:361:46: 361:47 (#0),
                    scope: scope[2],
                },
                kind: drop(_28) -> [return: bb22, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_28),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:361:46: 361:47 (#0),
                    scope: scope[2],
                },
                kind: goto -> bb23,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb24, unwind: bb31],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_10),
            StorageDead(_8),
            StorageDead(_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb25, unwind: bb32],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:365:1: 365:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb27, unwind: bb33],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:365:2: 365:2 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:361:46: 361:47 (#0),
                    scope: scope[2],
                },
                kind: drop(_28) -> [return: bb30, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:359:74: 359:75 (#0),
                    scope: scope[4],
                },
                kind: drop(_27) -> [return: bb30, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_6) -> [return: bb31, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:363:9: 363:10 (#0),
                    scope: scope[0],
                },
                kind: drop(_5) -> [return: bb32, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:365:1: 365:2 (#0),
                    scope: scope[0],
                },
                kind: drop(_1) -> [return: bb33, unwind terminate(cleanup)],
            },
        ),
        is_cleanup: true,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:339:1: 365:2 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: _::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:339:47: 339:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: Some(
                            percent_encoding/src/lib.rs:339:29: 339:42 (#0),
                        ),
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/lib.rs:339:22: 339:27 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:339:22: 339:27 (#0),
                    },
                ),
            ),
        ),
        ty: _::borrow::Cow<'{erased}, [u8]>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:339:22: 339:27 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:342:9: 342:29 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                percent_encoding/src/lib.rs:341:11: 341:16 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:342:9: 342:29 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:342:23: 342:28 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:341:5: 364:6 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:342:57: 342:62 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _1,
                                ),
                                percent_encoding/src/lib.rs:341:11: 341:16 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:343:9: 343:26 (#0),
                    },
                ),
            ),
        ),
        ty: _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:343:20: 343:25 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:344:13: 362:14 (#0),
                },
            ),
        ),
        ty: _::borrow::Cow<'{erased}, str>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:344:19: 344:50 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:344:13: 362:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:344:43: 344:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:344:13: 362:14 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:344:43: 344:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:344:13: 362:14 (#0),
                },
            ),
        ),
        ty: &'{erased} _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:344:43: 344:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:344:13: 362:14 (#0),
                },
            ),
        ),
        ty: &'{erased} _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:344:43: 344:49 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:345:17: 345:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                percent_encoding/src/lib.rs:344:19: 344:50 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:345:17: 345:36 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:345:31: 345:35 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/lib.rs:353:49: 353:64 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:353:25: 353:33 (#0),
                    },
                ),
            ),
        ),
        ty: *const [u8],
        user_ty: Some(
            UserTypeProjections {
                contents: [
                    (
                        UserTypeProjection {
                            base: UserType(0),
                            projs: [],
                        },
                        percent_encoding/src/lib.rs:353:35: 353:46 (#0),
                    ),
                ],
            },
        ),
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:353:25: 353:33 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:353:49: 353:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:353:49: 353:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:9: 318:10 (#14),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:316:12: 316:42 (#15),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#16),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:35: 354:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:35: 354:43 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: *const [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:47: 354:69 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:47: 354:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:48: 354:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:354:49: 354:54 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#16),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: /home/abezbm/.rustup/toolchains/nightly-2024-07-21-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/core/src/macros/mod.rs:317:13: 317:38 (#16),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:359:32: 359:77 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:359:41: 359:75 (#0),
                },
            ),
        ),
        ty: _::vec::Vec<u8, _::alloc::Global>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:359:69: 359:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _6,
                                ),
                                percent_encoding/src/lib.rs:344:19: 344:50 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:361:17: 361:30 (#0),
                    },
                ),
            ),
        ),
        ty: _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:361:28: 361:29 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: _::string::String,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:361:45: 361:46 (#0),
            scope: scope[0],
        },
    },
]