[
    BasicBlockData {
        statements: [
            StorageLive(_2),
            StorageLive(_3),
            _3 = &(*((*_1).0: &[u8])),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:151:49: 151:73 (#0),
                    scope: scope[1],
                },
                kind: _2 = core::slice::<impl [u8]>::split_first(move _3) -> [return: bb1, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_3),
            PlaceMention(_2),
            _4 = discriminant(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:151:16: 151:46 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _4) -> [1: bb2, otherwise: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:151:16: 151:46 (#0),
                    scope: scope[1],
                },
                kind: falseEdge -> [real: bb3, imaginary: bb27],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_5),
            _5 = (*(((_2 as Some).0: (&u8, &[u8])).0: &u8)),
            StorageLive(_6),
            _6 = (((_2 as Some).0: (&u8, &[u8])).1: &[u8]),
            StorageLive(_7),
            StorageLive(_8),
            _8 = &(*((*_1).1: &ascii_set::AsciiSet)),
            StorageLive(_9),
            _9 = _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:152:16: 152:64 (#0),
                    scope: scope[1],
                },
                kind: _7 = ascii_set::AsciiSet::should_percent_encode(move _8, move _9) -> [return: bb4, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:152:16: 152:64 (#0),
                    scope: scope[1],
                },
                kind: switchInt(move _7) -> [0: bb7, otherwise: bb5],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_10),
            _10 = &(*_6),
            ((*_1).0: &[u8]) = move _10,
            StorageDead(_10),
            StorageLive(_11),
            StorageLive(_12),
            StorageLive(_13),
            _13 = _5,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:154:22: 154:53 (#0),
                    scope: scope[1],
                },
                kind: _12 = percent_encode_byte(move _13) -> [return: bb6, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _11 = &(*_12),
            StorageDead(_13),
            _0 = core::option::Option::<&str>::Some(move _11),
            StorageDead(_11),
            StorageDead(_12),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:152:13: 169:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_9),
            StorageDead(_8),
            StorageLive(_14),
            StorageLive(_15),
            StorageLive(_16),
            StorageLive(_17),
            StorageLive(_18),
            _18 = &(*_6),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:51 (#0),
                    scope: scope[1],
                },
                kind: _17 = core::slice::<impl [u8]>::iter(move _18) -> [return: bb8, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_18),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:63 (#0),
                    scope: scope[1],
                },
                kind: _16 = <core::slice::Iter<'_, u8> as core::iter::Iterator>::enumerate(move _17) -> [return: bb9, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_17),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                    scope: scope[1],
                },
                kind: _15 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::IntoIterator>::into_iter(move _16) -> [return: bb10, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_16),
            PlaceMention(_15),
            StorageLive(_19),
            _19 = move _15,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
                    scope: scope[2],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
                    scope: scope[2],
                },
                kind: falseUnwind -> [real: bb12, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_21),
            StorageLive(_22),
            StorageLive(_23),
            StorageLive(_24),
            _24 = &mut _19,
            _23 = &mut (*_24),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                    scope: scope[2],
                },
                kind: _22 = <core::iter::Enumerate<core::slice::Iter<'_, u8>> as core::iter::Iterator>::next(move _23) -> [return: bb13, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_23),
            PlaceMention(_22),
            _25 = discriminant(_22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                    scope: scope[2],
                },
                kind: switchInt(move _25) -> [0: bb15, 1: bb16, otherwise: bb14],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            FakeRead(ForMatchedPlace(None), _22),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                    scope: scope[2],
                },
                kind: unreachable,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
                    scope: scope[2],
                },
                kind: falseEdge -> [real: bb17, imaginary: bb16],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageLive(_27),
            _27 = (((_22 as Some).0: (usize, &u8)).0: usize),
            StorageLive(_28),
            _28 = (*(((_22 as Some).0: (usize, &u8)).1: &u8)),
            StorageLive(_29),
            StorageLive(_30),
            _30 = &(*((*_1).1: &ascii_set::AsciiSet)),
            StorageLive(_31),
            _31 = _28,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:159:24: 159:66 (#0),
                    scope: scope[3],
                },
                kind: _29 = ascii_set::AsciiSet::should_percent_encode(move _30, move _31) -> [return: bb18, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _14 = const (),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_19),
            StorageDead(_15),
            StorageDead(_14),
            StorageLive(_44),
            _44 = ((*_1).0: &[u8]),
            FakeRead(ForLet(None), _44),
            StorageLive(_45),
            StorageLive(_46),
            StorageLive(_47),
            StorageLive(_48),
            StorageLive(_49),
            _49 = [],
            _48 = &_49,
            StorageLive(_50),
            _50 = core::ops::RangeFull,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:167:33: 167:37 (#0),
                    scope: scope[5],
                },
                kind: _47 = <[u8; 0] as core::ops::Index<core::ops::RangeFull>>::index(move _48, move _50) -> [return: bb24, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:159:24: 159:66 (#0),
                    scope: scope[3],
                },
                kind: switchInt(move _29) -> [0: bb23, otherwise: bb19],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            StorageLive(_35),
            StorageLive(_36),
            _36 = &(*((*_1).0: &[u8])),
            StorageLive(_37),
            StorageLive(_38),
            _38 = _27,
            _39 = AddWithOverflow(const 1_usize, _38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:161:80: 161:85 (#0),
                    scope: scope[3],
                },
                kind: assert(!move (_39.1: bool), "attempt to compute `{} + {}`, which would overflow", const 1_usize, move _38) -> [success: bb20, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _37 = move (_39.0: usize),
            StorageDead(_38),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:161:60: 161:86 (#0),
                    scope: scope[3],
                },
                kind: _35 = core::slice::<impl [u8]>::split_at(move _36, move _37) -> [return: bb21, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_37),
            StorageDead(_36),
            PlaceMention(_35),
            StorageLive(_33),
            _33 = (_35.0: &[u8]),
            StorageLive(_34),
            _34 = (_35.1: &[u8]),
            StorageDead(_35),
            StorageLive(_40),
            _40 = &(*_34),
            ((*_1).0: &[u8]) = move _40,
            StorageDead(_40),
            StorageLive(_41),
            StorageLive(_42),
            StorageLive(_43),
            _43 = &(*_33),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:163:46: 163:87 (#0),
                    scope: scope[4],
                },
                kind: _42 = core::str::from_utf8_unchecked(move _43) -> [return: bb22, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _41 = &(*_42),
            StorageDead(_43),
            _0 = core::option::Option::<&str>::Some(move _41),
            StorageDead(_41),
            StorageDead(_42),
            StorageDead(_34),
            StorageDead(_33),
            StorageDead(_29),
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_21),
            StorageDead(_19),
            StorageDead(_15),
            StorageDead(_14),
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:173:6: 173:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_31),
            StorageDead(_30),
            _21 = const (),
            StorageDead(_29),
            StorageDead(_28),
            StorageDead(_27),
            StorageDead(_24),
            StorageDead(_22),
            StorageDead(_21),
            _20 = const (),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
                    scope: scope[2],
                },
                kind: goto -> bb11,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_50),
            StorageDead(_48),
            _46 = &(*_47),
            _45 = &(*_46),
            ((*_1).0: &[u8]) = move _45,
            StorageDead(_45),
            StorageDead(_49),
            StorageDead(_47),
            StorageDead(_46),
            StorageLive(_51),
            StorageLive(_52),
            StorageLive(_53),
            _53 = &(*_44),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:168:31: 168:72 (#0),
                    scope: scope[5],
                },
                kind: _52 = core::str::from_utf8_unchecked(move _53) -> [return: bb25, unwind: bb30],
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _51 = &(*_52),
            StorageDead(_53),
            _0 = core::option::Option::<&str>::Some(move _51),
            StorageDead(_51),
            StorageDead(_44),
            StorageDead(_52),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:152:13: 169:14 (#0),
                    scope: scope[1],
                },
                kind: goto -> bb26,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_7),
            StorageDead(_6),
            StorageDead(_5),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:151:9: 172:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            _0 = core::option::Option::<&str>::None,
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:151:9: 172:10 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb28,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [
            StorageDead(_2),
        ],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:173:6: 173:6 (#0),
                    scope: scope[0],
                },
                kind: goto -> bb29,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:173:6: 173:6 (#0),
                    scope: scope[0],
                },
                kind: return,
            },
        ),
        is_cleanup: false,
    },
    BasicBlockData {
        statements: [],
        terminator: Some(
            Terminator {
                source_info: SourceInfo {
                    span: percent_encoding/src/lib.rs:150:5: 173:6 (#0),
                    scope: scope[0],
                },
                kind: resume,
            },
        ),
        is_cleanup: true,
    },
]
[
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<&'{erased} str>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:150:27: 150:42 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                ImplicitSelf(
                    RefMut,
                ),
            ),
        ),
        ty: &'{erased} mut PercentEncode<'{erased}>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:150:13: 150:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:151:9: 172:10 (#0),
                },
            ),
        ),
        ty: core::option::Option<(&'{erased} u8, &'{erased} [u8])>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:151:49: 151:73 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:151:9: 172:10 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:151:49: 151:59 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:151:16: 151:46 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                percent_encoding/src/lib.rs:151:49: 151:73 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:151:16: 151:46 (#0),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:151:23: 151:33 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _2,
                                ),
                                percent_encoding/src/lib.rs:151:49: 151:73 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:151:16: 151:46 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:151:35: 151:44 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:152:13: 169:14 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:152:16: 152:64 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:152:13: 169:14 (#0),
                },
            ),
        ),
        ty: &'{erased} ascii_set::AsciiSet,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:152:16: 152:30 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:152:13: 169:14 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:152:53: 152:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:153:30: 153:39 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:154:22: 154:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:154:17: 154:54 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:154:22: 154:53 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:154:17: 154:54 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:154:42: 154:52 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, u8>>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, u8>>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::slice::Iter<'{erased}, u8>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:51 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:44 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Mut,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _15,
                                ),
                                percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                    },
                ),
            ),
        ),
        ty: core::iter::Enumerate<core::slice::Iter<'{erased}, u8>>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:150:5: 173:6 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: (),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::option::Option<(usize, &'{erased} u8)>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::slice::Iter<'{erased}, u8>>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} mut core::iter::Enumerate<core::slice::Iter<'{erased}, u8>>,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:35: 158:63 (#22),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: isize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:17: 165:18 (#21),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _22,
                                ),
                                percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:158:21: 158:31 (#23),
                    },
                ),
            ),
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:22: 158:23 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _22,
                                ),
                                percent_encoding/src/lib.rs:158:35: 158:63 (#22),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:158:21: 158:31 (#23),
                    },
                ),
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:158:26: 158:30 (#0),
            scope: scope[2],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: percent_encoding/src/lib.rs:159:21: 164:22 (#0),
                },
            ),
        ),
        ty: bool,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:159:24: 159:66 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: percent_encoding/src/lib.rs:159:21: 164:22 (#0),
                },
            ),
        ),
        ty: &'{erased} ascii_set::AsciiSet,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:159:24: 159:38 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: percent_encoding/src/lib.rs:159:21: 164:22 (#0),
                },
            ),
        ),
        ty: u8,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:159:61: 159:65 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: true,
                    span: percent_encoding/src/lib.rs:159:21: 164:22 (#0),
                },
            ),
        ),
        ty: !,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:159:67: 164:22 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _35,
                                ),
                                percent_encoding/src/lib.rs:161:60: 161:86 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:161:29: 161:57 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:30: 161:45 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                Some(
                                    _35,
                                ),
                                percent_encoding/src/lib.rs:161:60: 161:86 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:161:29: 161:57 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:47: 161:56 (#0),
            scope: scope[3],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (&'{erased} [u8], &'{erased} [u8]),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:60: 161:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:60: 161:70 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:80: 161:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: usize,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:84: 161:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: (usize, bool),
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:161:80: 161:85 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:162:38: 162:47 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:163:37: 163:89 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:163:46: 163:87 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:163:46: 163:87 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:163:46: 163:87 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:163:71: 163:86 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            User(
                Var(
                    VarBindingForm {
                        binding_mode: BindingMode(
                            No,
                            Not,
                        ),
                        opt_ty_info: None,
                        opt_match_place: Some(
                            (
                                None,
                                percent_encoding/src/lib.rs:166:39: 166:49 (#0),
                            ),
                        ),
                        pat_span: percent_encoding/src/lib.rs:166:21: 166:36 (#0),
                    },
                ),
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:166:21: 166:36 (#0),
            scope: scope[1],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:30: 167:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:30: 167:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:33: 167:37 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: &'{erased} [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:31: 167:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            Boring,
        ),
        ty: [u8; 0_usize],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:31: 167:33 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            Boring,
        ),
        ty: core::ops::RangeFull,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:167:34: 167:36 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            AggregateTemp,
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:168:22: 168:74 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Not,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:168:31: 168:72 (#0),
                },
            ),
        ),
        ty: &'{erased} str,
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:168:31: 168:72 (#0),
            scope: scope[0],
        },
    },
    LocalDecl {
        mutability: Mut,
        local_info: Set(
            BlockTailTemp(
                BlockTailInfo {
                    tail_result_is_ignored: false,
                    span: percent_encoding/src/lib.rs:168:31: 168:72 (#0),
                },
            ),
        ),
        ty: &'{erased} [u8],
        user_ty: None,
        source_info: SourceInfo {
            span: percent_encoding/src/lib.rs:168:56: 168:71 (#0),
            scope: scope[0],
        },
    },
]